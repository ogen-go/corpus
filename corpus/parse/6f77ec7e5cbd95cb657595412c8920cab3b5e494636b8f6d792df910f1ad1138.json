{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/deribit/deribit-api-clients"
		},
		"file": {
			"name": "openapi.yaml",
			"size": 0,
			"path": "go/api/openapi.yaml",
			"byteSize": 648165,
			"content": "openapi: 3.0.0\ninfo:\n  description: \"#Overview\\n\\nDeribit provides three different interfaces to access\\\n    \\ the API:\\n\\n* [JSON-RPC over Websocket](#json-rpc)\\n* [JSON-RPC over HTTP](#json-rpc)\\n\\\n    * [FIX](#fix-api) (Financial Information eXchange)\\n\\nWith the API Console you\\\n    \\ can use and test the JSON-RPC API, both via HTTP and \\nvia Websocket. To visit\\\n    \\ the API console, go to __Account \u003e API tab \u003e \\nAPI Console tab.__\\n\\n\\n##Naming\\n\\\n    Deribit tradeable assets or instruments use the following system of naming:\\n\\n\\\n    |Kind|Examples|Template|Comments|\\n|----|--------|--------|--------|\\n|Future|\u003ccode\u003eBTC-25MAR16\u003c/code\u003e,\\\n    \\ \u003ccode\u003eBTC-5AUG16\u003c/code\u003e|\u003ccode\u003eBTC-DMMMYY\u003c/code\u003e|\u003ccode\u003eBTC\u003c/code\u003e is currency,\\\n    \\ \u003ccode\u003eDMMMYY\u003c/code\u003e is expiration date, \u003ccode\u003eD\u003c/code\u003e stands for day of month\\\n    \\ (1 or 2 digits), \u003ccode\u003eMMM\u003c/code\u003e - month (3 first letters in English), \u003ccode\u003eYY\u003c/code\u003e\\\n    \\ stands for year.|\\n|Perpetual|\u003ccode\u003eBTC-PERPETUAL\u003c/code\u003e                   \\\n    \\     ||Perpetual contract for currency \u003ccode\u003eBTC\u003c/code\u003e.|\\n|Option|\u003ccode\u003eBTC-25MAR16-420-C\u003c/code\u003e,\\\n    \\ \u003ccode\u003eBTC-5AUG16-580-P\u003c/code\u003e|\u003ccode\u003eBTC-DMMMYY-STRIKE-K\u003c/code\u003e|\u003ccode\u003eSTRIKE\u003c/code\u003e\\\n    \\ is option strike price in USD. Template \u003ccode\u003eK\u003c/code\u003e is option kind: \u003ccode\u003eC\u003c/code\u003e\\\n    \\ for call options or \u003ccode\u003eP\u003c/code\u003e for put options.|\\n\\n\\n# JSON-RPC\\nJSON-RPC\\\n    \\ is a light-weight remote procedure call (RPC) protocol. The \\n[JSON-RPC specification](https://www.jsonrpc.org/specification)\\\n    \\ defines the data\\nstructures that are used for the messages that are exchanged\\\n    \\ between client\\nand server, as well as the rules around their processing. JSON-RPC\\\n    \\ uses\\nJSON (RFC 4627) as data format.\\n\\nJSON-RPC is transport agnostic: it\\\n    \\ does not specify which transport\\nmechanism must be used. The Deribit API supports\\\n    \\ both Websocket (preferred)\\nand HTTP (with limitations: subscriptions are not\\\n    \\ supported over HTTP).\\n\\n## Request messages\\n\u003e An example of a request message:\\n\\\n    \\n```json\\n{\\n    \\\"jsonrpc\\\": \\\"2.0\\\",\\n    \\\"id\\\": 8066,\\n    \\\"method\\\": \\\"\\\n    public/ticker\\\",\\n    \\\"params\\\": {\\n        \\\"instrument\\\": \\\"BTC-24AUG18-6500-P\\\"\\\n    \\n    }\\n}\\n```\\n\\nAccording to the JSON-RPC sepcification the requests must be\\\n    \\ JSON objects with the following fields.\\n\\n|Name|Type|Description|\\n|----|----|-----------|\\n\\\n    |jsonrpc|string|The version of the JSON-RPC spec: \\\"2.0\\\"|\\n|id|integer or string|An\\\n    \\ identifier of the request. If it is included, then the response will contain\\\n    \\ the same identifier|\\n|method|string|The method to be invoked|\\n|params|object|The\\\n    \\ parameters values for the method. The field names must match with the expected\\\n    \\ parameter names. The parameters that are expected are described in the documentation\\\n    \\ for the methods, below.|\\n\\n\u003caside class=\\\"warning\\\"\u003e\\nThe JSON-RPC specification\\\n    \\ describes two features\\nthat are currently not supported by the API:\\n\\n\u003cul\u003e\\n\\\n    \u003cli\u003eSpecification of parameter values by position\u003c/li\u003e\\n\u003cli\u003eBatch requests\u003c/li\u003e\\n\\\n    \u003c/ul\u003e\\n\\n\u003c/aside\u003e\\n\\n\\n## Response messages\\n\u003e An example of a response message:\\n\\\n    \\n```json\\n{\\n    \\\"jsonrpc\\\": \\\"2.0\\\",\\n    \\\"id\\\": 5239,\\n    \\\"testnet\\\": false,\\n\\\n    \\    \\\"result\\\": [\\n        {\\n            \\\"currency\\\": \\\"BTC\\\",\\n          \\\n    \\  \\\"currencyLong\\\": \\\"Bitcoin\\\",\\n            \\\"minConfirmation\\\": 2,\\n     \\\n    \\       \\\"txFee\\\": 0.0006,\\n            \\\"isActive\\\": true,\\n            \\\"coinType\\\"\\\n    : \\\"BITCOIN\\\",\\n            \\\"baseAddress\\\": null\\n        }\\n    ],\\n    \\\"usIn\\\"\\\n    : 1535043730126248,\\n    \\\"usOut\\\": 1535043730126250,\\n    \\\"usDiff\\\": 2\\n}\\n\\\n    ```\\n\\nThe JSON-RPC API always responds with a JSON object with the following\\\n    \\ fields.\\n\\n\\n|Name|Type|Description|\\n|----|----|-----------|\\n|id|integer|This\\\n    \\ is the same id that was sent in the request.|\\n|result|any|If successful, the\\\n    \\ result of the API call. The format for the result is described with each method.|\\n\\\n    |error|error object|Only present if there was an error invoking the method. The\\\n    \\ error object is described below.|\\n|testnet|boolean|Indicates whether the API\\\n    \\ in use is actually the test API.  \u003ccode\u003efalse\u003c/code\u003e for production server,\\\n    \\ \u003ccode\u003etrue\u003c/code\u003e for test server.|\\n|usIn|integer|The timestamp when the requests\\\n    \\ was received (microseconds since the Unix epoch)|\\n|usOut|integer|The timestamp\\\n    \\ when the response was sent (microseconds since the Unix epoch)|\\n|usDiff|integer|The\\\n    \\ number of microseconds that was spent handling the request|\\n\\n\u003caside class=\\\"\\\n    notice\\\"\u003e\\nThe fields \u003ccode\u003etestnet\u003c/code\u003e, \u003ccode\u003eusIn\u003c/code\u003e, \u003ccode\u003eusOut\u003c/code\u003e\\\n    \\ and\\n\u003ccode\u003eusDiff\u003c/code\u003e are not part of the JSON-RPC standard. \\n\u003cp\u003eIn order\\\n    \\ not to clutter the examples they will generally be omitted from\\nthe example\\\n    \\ code.\u003c/p\u003e\\n\u003c/aside\u003e\\n\\n\u003e An example of a response with an error:\\n\\n```json\\n\\\n    {\\n    \\\"jsonrpc\\\": \\\"2.0\\\",\\n    \\\"id\\\": 8163,\\n    \\\"error\\\": {\\n        \\\"\\\n    code\\\": 11050,\\n        \\\"message\\\": \\\"bad_request\\\"\\n    },\\n    \\\"testnet\\\"\\\n    : false,\\n    \\\"usIn\\\": 1535037392434763,\\n    \\\"usOut\\\": 1535037392448119,\\n\\\n    \\    \\\"usDiff\\\": 13356\\n}\\n```\\nIn case of an error the response message will\\\n    \\ contain the error field, with\\nas value an object with the following with the\\\n    \\ following fields:\\n\\n|Name|Type|Description\\n|----|----|-----------|\\n|code|integer|A\\\n    \\ number that indicates the kind of error.|\\n|message|string|A short description\\\n    \\ that indicates the kind of error.|\\n|data|any|Additional data about the error.\\\n    \\ This field may be omitted.|\\n\\n## Notifications\\n\\n\u003e An example of a notification:\\n\\\n    \\n```json\\n{\\n    \\\"jsonrpc\\\": \\\"2.0\\\",\\n    \\\"method\\\": \\\"subscription\\\",\\n \\\n    \\   \\\"params\\\": {\\n        \\\"channel\\\": \\\"deribit_price_index.btc_usd\\\",\\n   \\\n    \\     \\\"data\\\": {\\n            \\\"timestamp\\\": 1535098298227,\\n            \\\"price\\\"\\\n    : 6521.17,\\n            \\\"index_name\\\": \\\"btc_usd\\\"\\n        }\\n    }\\n}\\n```\\n\\\n    \\nAPI users can subscribe to certain types of notifications. This means that they\\n\\\n    will receive JSON-RPC notification-messages from the server when certain\\nevents\\\n    \\ occur, such as changes to the index price or changes to the order\\nbook for\\\n    \\ a certain instrument. \\n\\nThe API methods [public/subscribe](#public-subscribe)\\\n    \\ and\\n[private/subscribe](#private-subscribe) are used to set up a subscription.\\n\\\n    Since HTTP does not support the sending of messages from server to client,\\nthese\\\n    \\ methods are only availble when using the Websocket transport\\nmechanism.\\n\\n\\\n    At the moment of subscription a \\\"channel\\\"\\nmust be specified. The channel determines\\\n    \\ the type of events that will be\\nreceived.  See [Subscriptions](#subscriptions)\\\n    \\ for more details about the channels.\\n\\nIn accordance with the JSON-RPC specification,\\\n    \\ the format of a notification \\nis that of a request message without an \u003ccode\u003eid\u003c/code\u003e\\\n    \\ field. The value of the\\n\u003ccode\u003emethod\u003c/code\u003e field will always be \u003ccode\u003e\\\"subscription\\\"\\\n    \u003c/code\u003e. The\\n\u003ccode\u003eparams\u003c/code\u003e field will always be an object with 2 members:\\n\\\n    \u003ccode\u003echannel\u003c/code\u003e and \u003ccode\u003edata\u003c/code\u003e. The value of the\\n\u003ccode\u003echannel\u003c/code\u003e\\\n    \\ member is the name of the channel (a string). The\\nvalue of the \u003ccode\u003edata\u003c/code\u003e\\\n    \\ member is an object that contains data \\nthat is specific for the channel.\\n\\\n    \\n\\n## Authentication\\n\\n\u003e An example of a JSON request with token:\\n\\n```json\\n\\\n    {\\n    \\\"id\\\": 5647,\\n    \\\"method\\\": \\\"private/get_subaccounts\\\",\\n    \\\"params\\\"\\\n    : {\\n        \\\"access_token\\\": \\\"67SVutDoVZSzkUStHSuk51WntMNBJ5mh5DYZhwzpiqDF\\\"\\\n    \\n    }\\n}\\n```\\n\\nThe API consists of `public` and `private` methods. The public\\\n    \\ methods do not\\nrequire authentication. The private methods use OAuth 2.0 authentication.\\n\\\n    This means that a valid OAuth access token must be included in the request, which\\n\\\n    can get achived by calling method [public/auth](#public-auth).\\n\\nWhen the token\\\n    \\ was assigned to the user, it should be passed along, with other request parameters,\\\n    \\ back to the server:\\n\\n|Connection type|Access token placement\\n|----|-----------|\\n\\\n    |**Websocket**|Inside request JSON parameters, as an `access_token` field|\\n|**HTTP\\\n    \\ (REST)**|Header `Authorization: bearer ```Token``` ` value|\\n\\n### Additional\\\n    \\ authorization method - basic user credentials\\n\\n\u003cspan style=\\\"color:red\\\"\u003e\u003cb\u003e\\\n    \\ ! Not recommended - however, it could be useful for quick testing API\u003c/b\u003e\u003c/span\u003e\u003c/br\u003e\\n\\\n    \\nEvery `private` method could be accessed by providing, inside HTTP `Authorization:\\\n    \\ Basic XXX` header, values with\\nuser `ClientId` and assigned `ClientSecret`\\\n    \\ (both values can be found on the API page on the Deribit website) encoded with\\\n    \\ `Base64`:\\n\\n\u003ccode\u003eAuthorization: Basic BASE64(`ClientId` + `:` + `ClientSecret`)\u003c/code\u003e\\n\\\n    \\n\\n### Additional authorization method - Deribit signature credentials\\n\\nThe\\\n    \\ Derbit service provides dedicated authorization method, which harness user generated\\\n    \\ signature to increase\\nsecurity level for passing request data. Generated value\\\n    \\ is passed inside `Authorization` header, coded as:\\n\\n\u003ccode\u003eAuthorization: deri-hmac-sha256\\\n    \\ id=```ClientId```,ts=```Timestamp```,sig=```Signature```,nonce=```Nonce```\u003c/code\u003e\\n\\\n    \\nwhere:\\n\\n|Deribit credential|Description\\n|----|-----------|\\n|*ClientId*|Can\\\n    \\ be found on the API page on the Deribit website|\\n|*Timestamp*|Time when the\\\n    \\ request was generated - given as **miliseconds**. It's valid for **60 seconds**\\\n    \\ since generation, after that time any request with an old timestamp will be\\\n    \\ rejected.|\\n|*Signature*|Value for signature calculated as described below |\\n\\\n    |*Nonce*|Single usage, user generated initialization vector for the server token|\\n\\\n    \\nThe signature is generated by the following formula:\\n\\n\u003ccode\u003e Signature = HEX_STRING(\\\n    \\ HMAC-SHA256( ClientSecret, StringToSign ) );\u003c/code\u003e\u003c/br\u003e \\n\u003ccode\u003e StringToSign\\\n    \\ =  Timestamp + \\\"\\\\n\\\" + Nonce + \\\"\\\\n\\\" + RequestData;\u003c/code\u003e\u003c/br\u003e \\n\u003ccode\u003e\\\n    \\ RequestData =  UPPERCASE(HTTP_METHOD())  + \\\"\\\\n\\\" + URI() + \\\"\\\\n\\\" + RequestBody\\\n    \\ + \\\"\\\\n\\\";\u003c/code\u003e\u003c/br\u003e \\n\\ne.g. (using shell with ```openssl``` tool):\\n\\n\u003ccode\u003e\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;ClientId=AAAAAAAAAAA\u003c/code\u003e\u003c/br\u003e\\\n    \\ \\n\u003ccode\u003e\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;ClientSecret=ABCD\u003c/code\u003e\u003c/br\u003e \\n\u003ccode\u003e\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;Timestamp=$(\\\n    \\ date +%s000 )\u003c/code\u003e\u003c/br\u003e \\n\u003ccode\u003e\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;Nonce=$( cat /dev/urandom\\\n    \\ | tr -dc 'a-z0-9' | head -c8 )\u003c/code\u003e\u003c/br\u003e \\n\u003ccode\u003e\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;URI=\\\"\\\n    /api/v2/private/get_account_summary?currency=BTC\\\"\u003c/code\u003e\u003c/br\u003e \\n\u003ccode\u003e\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;HttpMethod=GET\u003c/code\u003e\u003c/br\u003e\\\n    \\ \\n\u003ccode\u003e\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;Body=\\\"\\\"\u003c/code\u003e\u003c/br\u003e\u003c/br\u003e \\n\u003ccode\u003e\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;Signature=$(\\\n    \\ echo -ne \\\"${Timestamp}\\\\n${Nonce}\\\\n${HttpMethod}\\\\n${URI}\\\\n${Body}\\\\n\\\" |\\\n    \\ openssl sha256 -r -hmac \\\"$ClientSecret\\\" | cut -f1 -d' ' )\u003c/code\u003e\u003c/br\u003e\u003c/br\u003e\\n\\\n    \u003ccode\u003e\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;echo $Signature\u003c/code\u003e\u003c/br\u003e\u003c/br\u003e \\n\u003ccode\u003e\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;shell\\\n    \\ output\u003e ea40d5e5e4fae235ab22b61da98121fbf4acdc06db03d632e23c66bcccb90d2c  (**WARNING**:\\\n    \\ Exact value depends on current timestamp and client credentials\u003c/code\u003e\u003c/br\u003e\u003c/br\u003e\\\n    \\ \\n\u003ccode\u003e\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;curl -s -X ${HttpMethod} -H \\\"Authorization:\\\n    \\ deri-hmac-sha256 id=${ClientId},ts=${Timestamp},nonce=${Nonce},sig=${Signature}\\\"\\\n    \\ \\\"https://www.deribit.com${URI}\\\"\u003c/code\u003e\u003c/br\u003e\u003c/br\u003e \\n\\n\\n### Additional authorization\\\n    \\ method - signature credentials (WebSocket API)\\n\\nWhen connecting through Websocket,\\\n    \\ user can request for authorization using ```client_credential``` method, which\\\n    \\ requires providing following parameters (as a part of JSON request):\\n\\n|JSON\\\n    \\ parameter|Description\\n|----|-----------|\\n|*grant_type*|Must be **client_signature**|\\n\\\n    |*client_id*|Can be found on the API page on the Deribit website|\\n|*timestamp*|Time\\\n    \\ when the request was generated - given as **miliseconds**. It's valid for **60\\\n    \\ seconds** since generation, after that time any request with an old timestamp\\\n    \\ will be rejected.|\\n|*signature*|Value for signature calculated as described\\\n    \\ below |\\n|*nonce*|Single usage, user generated initialization vector for the\\\n    \\ server token|\\n|*data*|**Optional** field, which contains any user specific\\\n    \\ value|\\n\\nThe signature is generated by the following formula:\\n\\n\u003ccode\u003e StringToSign\\\n    \\ =  Timestamp + \\\"\\\\n\\\" + Nonce + \\\"\\\\n\\\" + Data;\u003c/code\u003e\u003c/br\u003e \\n\u003ccode\u003e Signature\\\n    \\ = HEX_STRING( HMAC-SHA256( ClientSecret, StringToSign ) );\u003c/code\u003e\u003c/br\u003e \\n\\n\\\n    e.g. (using shell with ```openssl``` tool):\\n\\n\u003ccode\u003e\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;ClientId=AAAAAAAAAAA\u003c/code\u003e\u003c/br\u003e\\\n    \\ \\n\u003ccode\u003e\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;ClientSecret=ABCD\u003c/code\u003e\u003c/br\u003e \\n\u003ccode\u003e\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;Timestamp=$(\\\n    \\ date +%s000 ) # e.g. 1554883365000 \u003c/code\u003e\u003c/br\u003e \\n\u003ccode\u003e\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;Nonce=$(\\\n    \\ cat /dev/urandom | tr -dc 'a-z0-9' | head -c8 ) # e.g. fdbmmz79 \u003c/code\u003e\u003c/br\u003e\\\n    \\ \\n\u003ccode\u003e\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;Data=\\\"\\\"\u003c/code\u003e\u003c/br\u003e\u003c/br\u003e \\n\u003ccode\u003e\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;Signature=$(\\\n    \\ echo -ne \\\"${Timestamp}\\\\n${Nonce}\\\\n${Data}\\\\n\\\" | openssl sha256 -r -hmac\\\n    \\ \\\"$ClientSecret\\\" | cut -f1 -d' ' )\u003c/code\u003e\u003c/br\u003e\u003c/br\u003e\\n\u003ccode\u003e\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;echo\\\n    \\ $Signature\u003c/code\u003e\u003c/br\u003e\u003c/br\u003e \\n\u003ccode\u003e\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;shell output\u003e e20c9cd5639d41f8bbc88f4d699c4baf94a4f0ee320e9a116b72743c449eb994\\\n    \\  (**WARNING**: Exact value depends on current timestamp and client credentials\u003c/code\u003e\u003c/br\u003e\u003c/br\u003e\\\n    \\ \\n\\nYou can also check the signature value using some online tools like, e.g:\\\n    \\ [https://codebeautify.org/hmac-generator](https://codebeautify.org/hmac-generator)\\\n    \\ (but don't forget about adding *newline* after each part of the hashed text\\\n    \\ and remember that you **should use** it only with your **test credentials**).\\n\\\n    \\n\\nHere's a sample JSON request created using the values from the example above:\\n\\\n    \\n\u003ccode\u003e\\n{                            \u003c/br\u003e\\n\u0026nbsp;\u0026nbsp;\\\"jsonrpc\\\" : \\\"2.0\\\"\\\n    ,         \u003c/br\u003e\\n\u0026nbsp;\u0026nbsp;\\\"id\\\" : 9929,               \u003c/br\u003e\\n\u0026nbsp;\u0026nbsp;\\\"\\\n    method\\\" : \\\"public/auth\\\",  \u003c/br\u003e\\n\u0026nbsp;\u0026nbsp;\\\"params\\\" :                 \u003c/br\u003e\\n\\\n    \u0026nbsp;\u0026nbsp;{                        \u003c/br\u003e\\n\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\\\"grant_type\\\"\\\n    \\ : \\\"client_signature\\\",   \u003c/br\u003e\\n\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\\\"client_id\\\" : \\\"\\\n    AAAAAAAAAAA\\\",         \u003c/br\u003e\\n\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\\\"timestamp\\\": \\\"1554883365000\\\"\\\n    ,        \u003c/br\u003e\\n\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\\\"nonce\\\": \\\"fdbmmz79\\\",             \\\n    \\    \u003c/br\u003e\\n\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\\\"data\\\": \\\"\\\",                          \u003c/br\u003e\\n\\\n    \u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\\\"signature\\\" : \\\"e20c9cd5639d41f8bbc88f4d699c4baf94a4f0ee320e9a116b72743c449eb994\\\"\\\n    \\  \u003c/br\u003e\\n\u0026nbsp;\u0026nbsp;}                        \u003c/br\u003e\\n}                      \\\n    \\      \u003c/br\u003e\\n\u003c/code\u003e\\n\\n\\n### Access scope\\n\\nWhen asking for `access token`\\\n    \\ user can provide the required access level (called `scope`) which defines\\n\\\n    what type of functionality he/she wants to use, and whether requests are only\\\n    \\ going to check for some data or\\nalso to update them. \\nScopes are required\\\n    \\ and checked for `private` methods, so if you plan to use only `public` information\\\n    \\ you\\ncan stay with values assigned by default.\\n\\n|Scope|Description\\n|----|-----------|\\n\\\n    |*account:read*|Access to **account** methods - read only data|\\n|*account:read_write*|Access\\\n    \\ to **account** methods - allows to manage account settings, add subaccounts,\\\n    \\ etc.|\\n|*trade:read*|Access to **trade** methods - read only data|\\n|*trade:read_write*|Access\\\n    \\ to **trade** methods - required to create and modify orders|\\n|*wallet:read*|Access\\\n    \\ to **wallet** methods - read only data|\\n|*wallet:read_write*|Access to **wallet**\\\n    \\ methods - allows to withdraw, generate new deposit address, etc.|\\n|*wallet:none*,\\\n    \\ *account:none*, *trade:none*|Blocked access to specified functionality|\\n\\n\\n\\\n    \\n\u003cspan style=\\\"color:red\\\"\u003e**NOTICE:**\u003c/span\u003e Depending on choosing an authentication\\\n    \\ method (```grant type```) some scopes could be narrowed by the server. e.g.\\\n    \\ when ```grant_type = client_credentials``` and ```scope = wallet:read_write```\\\n    \\ it's modified by the server as ```scope = wallet:read```\\\"\\n\\n\\n## JSON-RPC\\\n    \\ over websocket\\nWebsocket is the prefered transport mechanism for the JSON-RPC\\\n    \\ API, because\\nit is faster and because it can support [subscriptions](#subscriptions)\\\n    \\ and\\n[cancel on disconnect](#private-enable_cancel_on_disconnect). The code\\\n    \\ examples\\nthat can be found next to each of the methods show how websockets\\\n    \\ can be\\nused from Python or Javascript/node.js.\\n\\n## JSON-RPC over HTTP\\nBesides\\\n    \\ websockets it is also possible to use the API via HTTP. The code\\nexamples for\\\n    \\ 'shell' show how this can be done using curl. Note that\\nsubscriptions and cancel\\\n    \\ on disconnect are not supported via HTTP.\\n\\n#Methods\\n\"\n  title: Deribit API\n  version: 2.0.0\nservers:\n- description: main server\n  url: https://www.deribit.com/api/v2\n- url: https://test.deribit.com/api/v2\nsecurity:\n- bearerAuth: []\ntags:\n- description: API V1 request\n  name: v1\n- description: Can only be used over websockets.\n  name: websocket_only\n- description: Public methods can be used without authentication.\n  name: public\n- description: |-\n    \u003cp\u003ePrivate methods require authentication. All requests must include a valid OAuth2 token.\u003c/p\u003e\n    \u003cp\u003eA token can be requested using the \u003ca href=\"#public-auth\"\u003e/public/auth\u003c/a\u003e method.\u003c/p\u003e\n    \u003cp\u003eWhen using the websockets protocol, the token must be included as a parameter \u003ccode\u003eaccess_token\u003c/code\u003e in the message. When using REST (HTTP GET), the token may also be passed in the \u003ccode\u003eAuthorization\u003c/code\u003e header.\u003c/p\u003e\n  name: private\n- description: Not intended for public use; do not include in publicly available documentation.\n  name: internal\n- name: authentication\n- name: session_management\n- description: Subscription works as [notifications](#notifications), so users will\n    automatically (after subscribing) receive messages from the server. Overview for\n    each channel response format is described in [subscriptions](#subscriptions) section.\n  name: subscription_management\n- name: account_management\n- name: trading\n- name: market_data\n- name: wallet\npaths:\n  /public/get_trade_volumes:\n    get:\n      parameters: []\n      responses:\n        200:\n          content:\n            application/json:\n              examples:\n                jsonObject:\n                  externalValue: examples/public/get_trade_volumes.response.json\n              schema:\n                allOf:\n                - properties:\n                    testnet:\n                      description: false for production server, true for test server\n                      type: boolean\n                      x-hide-in-docs: true\n                    jsonrpc:\n                      description: The JSON-RPC version (2.0)\n                      enum:\n                      - \"2.0\"\n                      type: string\n                    usDiff:\n                      description: Duration of the handling of the request, in microseconds\n                      type: integer\n                      x-hide-in-docs: true\n                    id:\n                      description: The id that was sent in the request\n                      type: integer\n                    usOut:\n                      description: The timestamp (in microseconds) of sending of the\n                        response\n                      type: integer\n                      x-hide-in-docs: true\n                    usIn:\n                      description: The timestamp (in microseconds) of receipt of the\n                        request\n                      type: integer\n                      x-hide-in-docs: true\n                  required:\n                  - jsonrpc\n                  - testnet\n                  - usDiff\n                  - usIn\n                  - usOut\n                - properties:\n                    result:\n                      items:\n                        properties:\n                          calls_volume:\n                            description: Total 24h trade volume for call options.\n                              This is expressed in the base currency, e.g. BTC for\n                              `btc_usd`\n                            example: 2.1\n                            type: number\n                          puts_volume:\n                            description: Total 24h trade volume for put options. This\n                              is expressed in the base currency, e.g. BTC for `btc_usd`\n                            example: 60.2\n                            type: number\n                          currency_pair:\n                            description: 'Currency pair: `\"btc_usd\"` or `\"eth_usd\"`'\n                            enum:\n                            - btc_usd\n                            - eth_usd\n                            type: string\n                          futures_volume:\n                            description: Total 24h trade volume for futures. This\n                              is expressed in the base currency, e.g. BTC for `btc_usd`\n                            example: 30.5178\n                            type: number\n                        required:\n                        - calls_volume\n                        - currency_pair\n                        - futures_volume\n                        - puts_volume\n                        type: object\n                      type: array\n                  required:\n                  - result\n                  type: object\n      summary: Retrieves aggregated 24h trade volumes for different instrument types\n        and currencies.\n      tags:\n      - market_data\n      - public\n  /public/get_last_trades_by_currency:\n    get:\n      parameters:\n      - description: The currency symbol\n        explode: true\n        in: query\n        name: currency\n        required: true\n        schema:\n          description: Currency, i.e `\"BTC\"`, `\"ETH\"`\n          enum:\n          - BTC\n          - ETH\n          type: string\n        style: form\n      - description: Instrument kind, if not provided instruments of all kinds are\n          considered\n        explode: true\n        in: query\n        name: kind\n        required: false\n        schema:\n          description: Instrument kind, `\"future\"` or `\"option\"`\n          enum:\n          - future\n          - option\n          type: string\n        style: form\n      - description: The ID number of the first trade to be returned\n        explode: true\n        in: query\n        name: start_id\n        required: false\n        schema:\n          description: Unique (per currency) trade identifier\n          type: string\n        style: form\n      - description: The ID number of the last trade to be returned\n        explode: true\n        in: query\n        name: end_id\n        required: false\n        schema:\n          description: Unique (per currency) trade identifier\n          type: string\n        style: form\n      - description: Number of requested items, default - `10`\n        explode: true\n        in: query\n        name: count\n        required: false\n        schema:\n          type: integer\n        style: form\n      - description: Include trades older than 7 days, default - `false`\n        explode: true\n        in: query\n        name: include_old\n        required: false\n        schema:\n          type: boolean\n        style: form\n      - description: Direction of results sorting (`default` value means no sorting,\n          results will be returned in order in which they left the database)\n        explode: true\n        in: query\n        name: sorting\n        required: false\n        schema:\n          enum:\n          - asc\n          - desc\n          - default\n          type: string\n        style: form\n      responses:\n        200:\n          content:\n            application/json:\n              examples:\n                jsonObject:\n                  externalValue: examples/public/get_last_trades_by_currency.response.json\n              schema:\n                allOf:\n                - properties:\n                    testnet:\n                      description: false for production server, true for test server\n                      type: boolean\n                      x-hide-in-docs: true\n                    jsonrpc:\n                      description: The JSON-RPC version (2.0)\n                      enum:\n                      - \"2.0\"\n                      type: string\n                    usDiff:\n                      description: Duration of the handling of the request, in microseconds\n                      type: integer\n                      x-hide-in-docs: true\n                    id:\n                      description: The id that was sent in the request\n                      type: integer\n                    usOut:\n                      description: The timestamp (in microseconds) of sending of the\n                        response\n                      type: integer\n                      x-hide-in-docs: true\n                    usIn:\n                      description: The timestamp (in microseconds) of receipt of the\n                        request\n                      type: integer\n                      x-hide-in-docs: true\n                  required:\n                  - jsonrpc\n                  - testnet\n                  - usDiff\n                  - usIn\n                  - usOut\n                - properties:\n                    result:\n                      properties:\n                        has_more:\n                          type: boolean\n                        trades:\n                          items:\n                            properties:\n                              direction:\n                                description: Trade direction of the taker\n                                enum:\n                                - buy\n                                - sell\n                                type: string\n                              tick_direction:\n                                description: Direction of the \"tick\" (`0` = Plus Tick,\n                                  `1` = Zero-Plus Tick, `2` = Minus Tick, `3` = Zero-Minus\n                                  Tick).\n                                enum:\n                                - 0\n                                - 1\n                                - 2\n                                - 3\n                                type: integer\n                              timestamp:\n                                description: The timestamp of the trade\n                                example: 1517329113791\n                                type: integer\n                              price:\n                                description: The price of the trade\n                                type: number\n                              trade_seq:\n                                description: The sequence number of the trade within\n                                  instrument\n                                type: integer\n                              trade_id:\n                                description: Unique (per currency) trade identifier\n                                type: string\n                              iv:\n                                description: Option implied volatility for the price\n                                  (Option only)\n                                type: number\n                              index_price:\n                                description: Index Price at the moment of trade\n                                type: number\n                              amount:\n                                description: Trade amount. For perpetual and futures\n                                  - in USD units, for options it is amount of corresponding\n                                  cryptocurrency contracts, e.g., BTC or ETH.\n                                type: number\n                              instrument_name:\n                                description: Unique instrument identifier\n                                example: BTC-PERPETUAL\n                                type: string\n                            required:\n                            - amount\n                            - direction\n                            - index_price\n                            - instrument_name\n                            - price\n                            - tick_direction\n                            - timestamp\n                            - trade_id\n                            - trade_seq\n                          type: array\n                      required:\n                      - has_more\n                      - trades\n                      type: object\n                  required:\n                  - result\n                  type: object\n      summary: Retrieve the latest trades that have occurred for instruments in a\n        specific currency symbol.\n      tags:\n      - market_data\n      - public\n  /private/set_email_language:\n    get:\n      parameters:\n      - description: The abbreviated language name. Valid values include `\"en\"`, `\"ko\"`,\n          `\"zh\"`\n        explode: true\n        in: query\n        name: language\n        required: true\n        schema:\n          example: en\n          type: string\n        style: form\n      responses:\n        200:\n          content:\n            application/json:\n              examples:\n                jsonObject:\n                  externalValue: examples/private/set_email_language.response.json\n              schema:\n                allOf:\n                - properties:\n                    testnet:\n                      description: false for production server, true for test server\n                      type: boolean\n                      x-hide-in-docs: true\n                    jsonrpc:\n                      description: The JSON-RPC version (2.0)\n                      enum:\n                      - \"2.0\"\n                      type: string\n                    usDiff:\n                      description: Duration of the handling of the request, in microseconds\n                      type: integer\n                      x-hide-in-docs: true\n                    id:\n                      description: The id that was sent in the request\n                      type: integer\n                    usOut:\n                      description: The timestamp (in microseconds) of sending of the\n                        response\n                      type: integer\n                      x-hide-in-docs: true\n                    usIn:\n                      description: The timestamp (in microseconds) of receipt of the\n                        request\n                      type: integer\n                      x-hide-in-docs: true\n                  required:\n                  - jsonrpc\n                  - testnet\n                  - usDiff\n                  - usIn\n                  - usOut\n                - properties:\n                    result:\n                      description: Result of method execution. `ok` in case of success\n                      enum:\n                      - ok\n                      type: string\n                  required:\n                  - result\n                  type: object\n      summary: Changes the language to be used for emails.\n      tags:\n      - account_management\n      - private\n  /private/get_open_orders_by_currency:\n    get:\n      parameters:\n      - description: The currency symbol\n        explode: true\n        in: query\n        name: currency\n        required: true\n        schema:\n          description: Currency, i.e `\"BTC\"`, `\"ETH\"`\n          enum:\n          - BTC\n          - ETH\n          type: string\n        style: form\n      - description: Instrument kind, if not provided instruments of all kinds are\n          considered\n        explode: true\n        in: query\n        name: kind\n        required: false\n        schema:\n          description: Instrument kind, `\"future\"` or `\"option\"`\n          enum:\n          - future\n          - option\n          type: string\n        style: form\n      - description: Order type, default - `all`\n        explode: true\n        in: query\n        name: type\n        required: false\n        schema:\n          description: Order type, `\"all\"`, `\"limit\"`, `\"stop_all\"`, `\"stop_limit\"`\n            or `\"stop_market\"`\n          enum:\n          - all\n          - limit\n          - stop_all\n          - stop_limit\n          - stop_market\n          type: string\n        style: form\n      responses:\n        200:\n          content:\n            application/json:\n              examples:\n                jsonObject:\n                  externalValue: examples/private/get_open_orders_by_currency.response.json\n              schema:\n                allOf:\n                - properties:\n                    testnet:\n                      description: false for production server, true for test server\n                      type: boolean\n                      x-hide-in-docs: true\n                    jsonrpc:\n                      description: The JSON-RPC version (2.0)\n                      enum:\n                      - \"2.0\"\n                      type: string\n                    usDiff:\n                      description: Duration of the handling of the request, in microseconds\n                      type: integer\n                      x-hide-in-docs: true\n                    id:\n                      description: The id that was sent in the request\n                      type: integer\n                    usOut:\n                      description: The timestamp (in microseconds) of sending of the\n                        response\n                      type: integer\n                      x-hide-in-docs: true\n                    usIn:\n                      description: The timestamp (in microseconds) of receipt of the\n                        request\n                      type: integer\n                      x-hide-in-docs: true\n                  required:\n                  - jsonrpc\n                  - testnet\n                  - usDiff\n                  - usIn\n                  - usOut\n                - properties:\n                    result:\n                      items:\n                        properties:\n                          direction:\n                            description: direction, `buy` or `sell`\n                            enum:\n                            - buy\n                            - sell\n                            type: string\n                          reduce_only:\n                            description: '`true` for reduce-only orders only'\n                            type: boolean\n                          triggered:\n                            description: Whether the stop order has been triggered\n                              (Only for stop orders)\n                            type: boolean\n                          order_id:\n                            description: Unique order identifier\n                            example: ETH-100234\n                            type: string\n                          price:\n                            description: Price in base currency\n                            type: number\n                          time_in_force:\n                            description: 'Order time in force: `\"good_til_cancelled\"`,\n                              `\"fill_or_kill\"`, `\"immediate_or_cancel\"`'\n                            enum:\n                            - good_til_cancelled\n                            - fill_or_kill\n                            - immediate_or_cancel\n                            type: string\n                          api:\n                            description: '`true` if created with API'\n                            type: boolean\n                          order_state:\n                            description: order state, `\"open\"`, `\"filled\"`, `\"rejected\"`,\n                              `\"cancelled\"`, `\"untriggered\"`\n                            enum:\n                            - open\n                            - filled\n                            - rejected\n                            - cancelled\n                            - untriggered\n                            - triggered\n                            type: string\n                          implv:\n                            description: Implied volatility in percent. (Only if `advanced=\"implv\"`)\n                            type: number\n                          advanced:\n                            description: |\n                              advanced type: `\"usd\"` or `\"implv\"` (Only for options; field is omitted if not applicable).\n                            enum:\n                            - usd\n                            - implv\n                            type: string\n                          post_only:\n                            description: '`true` for post-only orders only'\n                            type: boolean\n                          usd:\n                            description: Option price in USD (Only if `advanced=\"usd\"`)\n                            type: number\n                          stop_price:\n                            description: stop price (Only for future stop orders)\n                            type: number\n                          order_type:\n                            description: order type, `\"limit\"`, `\"market\"`, `\"stop_limit\"`,\n                              `\"stop_market\"`\n                            enum:\n                            - market\n                            - limit\n                            - stop_market\n                            - stop_limit\n                            type: string\n                          last_update_timestamp:\n                            description: The timestamp (seconds since the Unix epoch,\n                              with millisecond precision)\n                            example: 1536569522277\n                            type: integer\n                          original_order_type:\n                            description: Original order type. Optional field\n                            enum:\n                            - market\n                            type: string\n                          max_show:\n                            description: Maximum amount within an order to be shown\n                              to other traders, 0 for invisible order.\n                            type: number\n                          profit_loss:\n                            description: Profit and loss in base currency.\n                            type: number\n                          is_liquidation:\n                            description: '`true` if order was automatically created\n                              during liquidation'\n                            type: boolean\n                          filled_amount:\n                            description: Filled amount of the order. For perpetual\n                              and futures the filled_amount is in USD units, for options\n                              - in units or corresponding cryptocurrency contracts,\n                              e.g., BTC or ETH.\n                            type: number\n                          label:\n                            description: user defined label (up to 32 characters)\n                            type: string\n                          commission:\n                            description: Commission paid so far (in base currency)\n                            type: number\n                          amount:\n                            description: It represents the requested order size. For\n                              perpetual and futures the amount is in USD units, for\n                              options it is amount of corresponding cryptocurrency\n                              contracts, e.g., BTC or ETH.\n                            type: number\n                          trigger:\n                            description: 'Trigger type (Only for stop orders). Allowed\n                              values: `\"index_price\"`, `\"mark_price\"`, `\"last_price\"`.'\n                            enum:\n                            - index_price\n                            - mark_price\n                            - last_price\n                            type: string\n                          instrument_name:\n                            description: Unique instrument identifier\n                            example: BTC-PERPETUAL\n                            type: string\n                          creation_timestamp:\n                            description: The timestamp (seconds since the Unix epoch,\n                              with millisecond precision)\n                            example: 1536569522277\n                            type: integer\n                          average_price:\n                            description: Average fill price of the order\n                            type: number\n                        required:\n                        - api\n                        - creation_timestamp\n                        - direction\n                        - instrument\n                        - is_liquidation\n                        - label\n                        - last_update_timestamp\n                        - max_show\n                        - order_id\n                        - order_state\n                        - order_type\n                        - post_only\n                        - price\n                        - time_in_force\n                        type: object\n                      type: array\n                  required:\n                  - result\n                  type: object\n      summary: Retrieves list of user's open orders.\n      tags:\n      - trading\n      - private\n  /private/cancel_all_by_currency:\n    get:\n      parameters:\n      - description: The currency symbol\n        explode: true\n        in: query\n        name: currency\n        required: true\n        schema:\n          description: Currency, i.e `\"BTC\"`, `\"ETH\"`\n          enum:\n          - BTC\n          - ETH\n          type: string\n        style: form\n      - description: Instrument kind, if not provided instruments of all kinds are\n          considered\n        explode: true\n        in: query\n        name: kind\n        required: false\n        schema:\n          description: Instrument kind, `\"future\"` or `\"option\"`\n          enum:\n          - future\n          - option\n          type: string\n        style: form\n      - description: Order type - limit, stop or all, default - `all`\n        explode: true\n        in: query\n        name: type\n        required: false\n        schema:\n          description: Order type, `\"all\"`, `\"limit\"`, `\"stop\"`\n          enum:\n          - all\n          - limit\n          - stop\n          type: string\n        style: form\n      responses:\n        200:\n          content:\n            application/json:\n              examples:\n                jsonObject:\n                  externalValue: examples/private/cancel_all_by_currency.response.json\n              schema:\n                allOf:\n                - properties:\n                    testnet:\n                      description: false for production server, true for test server\n                      type: boolean\n                      x-hide-in-docs: true\n                    jsonrpc:\n                      description: The JSON-RPC version (2.0)\n                      enum:\n                      - \"2.0\"\n                      type: string\n                    usDiff:\n                      description: Duration of the handling of the request, in microseconds\n                      type: integer\n                      x-hide-in-docs: true\n                    id:\n                      description: The id that was sent in the request\n                      type: integer\n                    usOut:\n                      description: The timestamp (in microseconds) of sending of the\n                        response\n                      type: integer\n                      x-hide-in-docs: true\n                    usIn:\n                      description: The timestamp (in microseconds) of receipt of the\n                        request\n                      type: integer\n                      x-hide-in-docs: true\n                  required:\n                  - jsonrpc\n                  - testnet\n                  - usDiff\n                  - usIn\n                  - usOut\n                - properties:\n                    result:\n                      description: Result of method execution. `ok` in case of success\n                      enum:\n                      - ok\n                      type: string\n                  required:\n                  - result\n                  type: object\n      summary: Cancels all orders by currency, optionally filtered by instrument kind\n        and/or order type.\n      tags:\n      - trading\n      - private\n  /private/cancel_all_by_instrument:\n    get:\n      parameters:\n      - description: Instrument name\n        explode: true\n        in: query\n        name: instrument_name\n        required: true\n        schema:\n          description: Unique instrument identifier\n          example: BTC-PERPETUAL\n          type: string\n        style: form\n      - description: Order type - limit, stop or all, default - `all`\n        explode: true\n        in: query\n        name: type\n        required: false\n        schema:\n          description: Order type, `\"all\"`, `\"limit\"`, `\"stop\"`\n          enum:\n          - all\n          - limit\n          - stop\n          type: string\n        style: form\n      responses:\n        200:\n          content:\n            application/json:\n              examples:\n                jsonObject:\n                  externalValue: examples/private/cancel_all_by_instrument.response.json\n              schema:\n                allOf:\n                - properties:\n                    testnet:\n                      description: false for production server, true for test server\n                      type: boolean\n                      x-hide-in-docs: true\n                    jsonrpc:\n                      description: The JSON-RPC version (2.0)\n                      enum:\n                      - \"2.0\"\n                      type: string\n                    usDiff:\n                      description: Duration of the handling of the request, in microseconds\n                      type: integer\n                      x-hide-in-docs: true\n                    id:\n                      description: The id that was sent in the request\n                      type: integer\n                    usOut:\n                      description: The timestamp (in microseconds) of sending of the\n                        response\n                      type: integer\n                      x-hide-in-docs: true\n                    usIn:\n                      description: The timestamp (in microseconds) of receipt of the\n                        request\n                      type: integer\n                      x-hide-in-docs: true\n                  required:\n                  - jsonrpc\n                  - testnet\n                  - usDiff\n                  - usIn\n                  - usOut\n                - properties:\n                    result:\n                      description: Result of method execution. `ok` in case of success\n                      enum:\n                      - ok\n                      type: string\n                  required:\n                  - result\n                  type: object\n      summary: Cancels all orders by instrument, optionally filtered by order type.\n      tags:\n      - trading\n      - private\n  /public/get_contract_size:\n    get:\n      parameters:\n      - description: Instrument name\n        explode: true\n        in: query\n        name: instrument_name\n        required: true\n        schema:\n          description: Unique instrument identifier\n          example: BTC-PERPETUAL\n          type: string\n        style: form\n      responses:\n        200:\n          content:\n            application/json:\n              schema:\n                allOf:\n                - properties:\n                    testnet:\n                      description: false for production server, true for test server\n                      type: boolean\n                      x-hide-in-docs: true\n                    jsonrpc:\n                      description: The JSON-RPC version (2.0)\n                      enum:\n                      - \"2.0\"\n                      type: string\n                    usDiff:\n                      description: Duration of the handling of the request, in microseconds\n                      type: integer\n                      x-hide-in-docs: true\n                    id:\n                      description: The id that was sent in the request\n                      type: integer\n                    usOut:\n                      description: The timestamp (in microseconds) of sending of the\n                        response\n                      type: integer\n                      x-hide-in-docs: true\n                    usIn:\n                      description: The timestamp (in microseconds) of receipt of the\n                        request\n                      type: integer\n                      x-hide-in-docs: true\n                  required:\n                  - jsonrpc\n                  - testnet\n                  - usDiff\n                  - usIn\n                  - usOut\n                - properties:\n                    result:\n                      properties:\n                        contract_size:\n                          description: Contract size, for futures in USD, for options\n                            in BTC.\n                          example: 10\n                          type: integer\n                      required:\n                      - contract_size\n                      type: object\n                  required:\n                  - result\n                  type: object\n          description: ok response\n      summary: Retrieves contract size of provided instrument.\n      tags:\n      - public\n      - market_data\n  /private/close_position:\n    get:\n      parameters:\n      - description: Instrument name\n        explode: true\n        in: query\n        name: instrument_name\n        required: true\n        schema:\n          description: Unique instrument identifier\n          example: BTC-PERPETUAL\n          type: string\n        style: form\n      - description: The order type\n        explode: true\n        in: query\n        name: type\n        required: true\n        schema:\n          enum:\n          - limit\n          - market\n          type: string\n        style: form\n      - description: Optional price for limit order.\n        explode: true\n        in: query\n        name: price\n        required: false\n        schema:\n          type: number\n        style: form\n      responses:\n        200:\n          content:\n            application/json:\n              examples:\n                jsonObject:\n                  externalValue: examples/private/close_position.response.json\n              schema:\n                allOf:\n                - properties:\n                    testnet:\n                      description: false for production server, true for test server\n                      type: boolean\n                      x-hide-in-docs: true\n                    jsonrpc:\n                      description: The JSON-RPC version (2.0)\n                      enum:\n                      - \"2.0\"\n                      type: string\n                    usDiff:\n                      description: Duration of the handling of the request, in microseconds\n                      type: integer\n                      x-hide-in-docs: true\n                    id:\n                      description: The id that was sent in the request\n                      type: integer\n                    usOut:\n                      description: The timestamp (in microseconds) of sending of the\n                        response\n                      type: integer\n                      x-hide-in-docs: true\n                    usIn:\n                      description: The timestamp (in microseconds) of receipt of the\n                        request\n                      type: integer\n                      x-hide-in-docs: true\n                  required:\n                  - jsonrpc\n                  - testnet\n                  - usDiff\n                  - usIn\n                  - usOut\n                - properties:\n                    result:\n                      properties:\n                        trades:\n                          items:\n                            properties:\n                              direction:\n                                description: Trade direction of the taker\n                                enum:\n                                - buy\n                                - sell\n                                type: string\n                              fee_currency:\n                                description: Currency, i.e `\"BTC\"`, `\"ETH\"`\n                                enum:\n                                - BTC\n                                - ETH\n                                type: string\n                              order_id:\n                                description: Id of the user order (maker or taker),\n                                  i.e. subscriber's order id that took part in the\n                                  trade\n                                type: string\n                              timestamp:\n                                description: The timestamp of the trade\n                                example: 1517329113791\n                                type: integer\n                              price:\n                                description: The price of the trade\n                                type: number\n                              iv:\n                                description: Option implied volatility for the price\n                                  (Option only)\n                                type: number\n                              trade_id:\n                                description: Unique (per currency) trade identifier\n                                type: string\n                              fee:\n                                description: User's fee in units of the specified\n                                  `fee_currency`\n                                type: number\n                              order_type:\n                                description: 'Order type: `\"limit`, `\"market\"`, or\n                                  `\"liquidation\"`'\n                                enum:\n                                - limit\n                                - market\n                                - liquidation\n                                type: string\n                              trade_seq:\n                                description: The sequence number of the trade within\n                                  instrument\n                                type: integer\n                              self_trade:\n                                description: '`true` if the trade is against own order.\n                                  This can only happen when your account has self-trading\n                                  enabled. Contact an administrator if you think you\n                                  need that'\n                                type: boolean\n                              state:\n                                description: order state, `\"open\"`, `\"filled\"`, `\"rejected\"`,\n                                  `\"cancelled\"`, `\"untriggered\"` or `\"archive\"` (if\n                                  order was archived)\n                                enum:\n                                - open\n                                - filled\n                                - rejected\n                                - cancelled\n                                - untriggered\n                                - archive\n                                type: string\n                              label:\n                                description: User defined label (presented only when\n                                  previously set for order by user)\n                                type: string\n                              index_price:\n                                description: Index Price at the moment of trade\n                                type: number\n                              amount:\n                                description: Trade amount. For perpetual and futures\n                                  - in USD units, for options it is amount of corresponding\n                                  cryptocurrency contracts, e.g., BTC or ETH.\n                                type: number\n                              instrument_name:\n                                description: Unique instrument identifier\n                                example: BTC-PERPETUAL\n                                type: string\n                              tick_direction:\n                                description: Direction of the \"tick\" (`0` = Plus Tick,\n                                  `1` = Zero-Plus Tick, `2` = Minus Tick, `3` = Zero-Minus\n                                  Tick).\n                                enum:\n                                - 0\n                                - 1\n                                - 2\n                                - 3\n                                type: integer\n                              matching_id:\n                                description: Always `null`, except for a self-trade\n                                  which is possible only if self-trading is switched\n                                  on for the account (in that case this will be id\n                                  of the maker order of the subscriber)\n                                type: string\n                              liquidity:\n                                description: 'Describes what was role of users order:\n                                  `\"M\"` when it was maker order, `\"T\"` when it was\n                                  taker order'\n                                enum:\n                                - M\n                                - T\n                                type: string\n                            required:\n                            - amount\n                            - direction\n                            - fee\n                            - fee_currency\n                            - index_price\n                            - instrument_name\n                            - matching_id\n                            - order_id\n                            - price\n                            - self_trade\n                            - state\n                            - tick_direction\n                            - timestamp\n                            - trade_id\n                            - trade_seq\n                          type: array\n                        order:\n                          properties:\n                            direction:\n                              description: direction, `buy` or `sell`\n                              enum:\n                              - buy\n                              - sell\n                              type: string\n                            reduce_only:\n                              description: '`true` for reduce-only orders only'\n                              type: boolean\n                            triggered:\n                              description: Whether the stop order has been triggered\n                                (Only for stop orders)\n                              type: boolean\n                            order_id:\n                              description: Unique order identifier\n                              example: ETH-100234\n                              type: string\n                            price:\n                              description: Price in base currency\n                              type: number\n                            time_in_force:\n                              description: 'Order time in force: `\"good_til_cancelled\"`,\n                                `\"fill_or_kill\"`, `\"immediate_or_cancel\"`'\n                              enum:\n                              - good_til_cancelled\n                              - fill_or_kill\n                              - immediate_or_cancel\n                              type: string\n                            api:\n                              description: '`true` if created with API'\n                              type: boolean\n                            order_state:\n                              description: order state, `\"open\"`, `\"filled\"`, `\"rejected\"`,\n                                `\"cancelled\"`, `\"untriggered\"`\n                              enum:\n                              - open\n                              - filled\n                              - rejected\n                              - cancelled\n                              - untriggered\n                              - triggered\n                              type: string\n                            implv:\n                              description: Implied volatility in percent. (Only if\n                                `advanced=\"implv\"`)\n                              type: number\n                            advanced:\n                              description: |\n                                advanced type: `\"usd\"` or `\"implv\"` (Only for options; field is omitted if not applicable).\n                              enum:\n                              - usd\n                              - implv\n                              type: string\n                            post_only:\n                              description: '`true` for post-only orders only'\n                              type: boolean\n                            usd:\n                              description: Option price in USD (Only if `advanced=\"usd\"`)\n                              type: number\n                            stop_price:\n                              description: stop price (Only for future stop orders)\n                              type: number\n                            order_type:\n                              description: order type, `\"limit\"`, `\"market\"`, `\"stop_limit\"`,\n                                `\"stop_market\"`\n                              enum:\n                              - market\n                              - limit\n                              - stop_market\n                              - stop_limit\n                              type: string\n                            last_update_timestamp:\n                              description: The timestamp (seconds since the Unix epoch,\n                                with millisecond precision)\n                              example: 1536569522277\n                              type: integer\n                            original_order_type:\n                              description: Original order type. Optional field\n                              enum:\n                              - market\n                              type: string\n                            max_show:\n                              description: Maximum amount within an order to be shown\n                                to other traders, 0 for invisible order.\n                              type: number\n                            profit_loss:\n                              description: Profit and loss in base currency.\n                              type: number\n                            is_liquidation:\n                              description: '`true` if order was automatically created\n                                during liquidation'\n                              type: boolean\n                            filled_amount:\n                              description: Filled amount of the order. For perpetual\n                                and futures the filled_amount is in USD units, for\n                                options - in units or corresponding cryptocurrency\n                                contracts, e.g., BTC or ETH.\n                              type: number\n                            label:\n                              description: user defined label (up to 32 characters)\n                              type: string\n                            commission:\n                              description: Commission paid so far (in base currency)\n                              type: number\n                            amount:\n                              description: It represents the requested order size.\n                                For perpetual and futures the amount is in USD units,\n                                for options it is amount of corresponding cryptocurrency\n                                contracts, e.g., BTC or ETH.\n                              type: number\n                            trigger:\n                              description: 'Trigger type (Only for stop orders). Allowed\n                                values: `\"index_price\"`, `\"mark_price\"`, `\"last_price\"`.'\n                              enum:\n                              - index_price\n                              - mark_price\n                              - last_price\n                              type: string\n                            instrument_name:\n                              description: Unique instrument identifier\n                              example: BTC-PERPETUAL\n                              type: string\n                            creation_timestamp:\n                              description: The timestamp (seconds since the Unix epoch,\n                                with millisecond precision)\n                              example: 1536569522277\n                              type: integer\n                            average_price:\n                              description: Average fill price of the order\n                              type: number\n                          required:\n                          - api\n                          - creation_timestamp\n                          - direction\n                          - instrument\n                          - is_liquidation\n                          - label\n                          - last_update_timestamp\n                          - max_show\n                          - order_id\n                          - order_state\n                          - order_type\n                          - post_only\n                          - price\n                          - time_in_force\n                          type: object\n                      required:\n                      - order\n                      - trades\n                      type: object\n                  required:\n                  - result\n                  type: object\n          description: ok response\n      summary: Makes closing position reduce only order .\n      tags:\n      - private\n      - trading\n  /private/submit_transfer_to_user:\n    get:\n      parameters:\n      - description: The currency symbol\n        explode: true\n        in: query\n        name: currency\n        required: true\n        schema:\n          description: Currency, i.e `\"BTC\"`, `\"ETH\"`\n          enum:\n          - BTC\n          - ETH\n          type: string\n        style: form\n      - description: Amount of funds to be transferred\n        explode: true\n        in: query\n        name: amount\n        required: true\n        schema:\n          type: number\n        style: form\n      - description: Destination address from address book\n        explode: true\n        in: query\n        name: destination\n        required: true\n        schema:\n          type: string\n        style: form\n      - description: TFA code, required when TFA is enabled for current account\n        explode: true\n        in: query\n        name: tfa\n        required: false\n        schema:\n          type: string\n        style: form\n      responses:\n        200:\n          content:\n            application/json:\n              examples:\n                jsonObject:\n                  externalValue: examples/private/submit_transfer_to_user.response.json\n              schema:\n                allOf:\n                - properties:\n                    testnet:\n                      description: false for production server, true for test server\n                      type: boolean\n                      x-hide-in-docs: true\n                    jsonrpc:\n                      description: The JSON-RPC version (2.0)\n                      enum:\n                      - \"2.0\"\n                      type: string\n                    usDiff:\n                      description: Duration of the handling of the request, in microseconds\n                      type: integer\n                      x-hide-in-docs: true\n                    id:\n                      description: The id that was sent in the request\n                      type: integer\n                    usOut:\n                      description: The timestamp (in microseconds) of sending of the\n                        response\n                      type: integer\n                      x-hide-in-docs: true\n                    usIn:\n                      description: The timestamp (in microseconds) of receipt of the\n                        request\n                      type: integer\n                      x-hide-in-docs: true\n                  required:\n                  - jsonrpc\n                  - testnet\n                  - usDiff\n                  - usIn\n                  - usOut\n                - properties:\n                    result:\n                      properties:\n                        updated_timestamp:\n                          description: The timestamp (seconds since the Unix epoch,\n                            with millisecond precision)\n                          example: 1536569522277\n                          type: integer\n                        direction:\n                          description: Transfer direction\n                          enum:\n                          - payment\n                          - income\n                          type: string\n                        amount:\n                          description: Amount of funds in given currency\n                          example: 1\n                          type: number\n                        other_side:\n                          description: For transfer from/to subaccount returns this\n                            subaccount name, for transfer to other account returns\n                            address, for transfer from other account returns that\n                            accounts username.\n                          example: Smith\n                          type: string\n                        currency:\n                          description: Currency, i.e `\"BTC\"`, `\"ETH\"`\n                          enum:\n                          - BTC\n                          - ETH\n                          type: string\n                        state:\n                          description: 'Transfer state, allowed values : `prepared`,\n                            `confirmed`, `cancelled`, `waiting_for_admin`, `rejection_reason`'\n                          enum:\n                          - prepared\n                          - confirmed\n                          - cancelled\n                          - waiting_for_admin\n                          - rejection_reason\n                          type: string\n                        created_timestamp:\n                          description: The timestamp (seconds since the Unix epoch,\n                            with millisecond precision)\n                          example: 1536569522277\n                          type: integer\n                        type:\n                          description: 'Type of transfer: `user` - sent to user, `subaccount`\n                            - sent to subaccount'\n                          enum:\n                          - user\n                          - subaccount\n                          type: string\n                        id:\n                          description: Id of transfer\n                          example: 12\n                          type: integer\n                      required:\n                      - amount\n                      - created_timestamp\n                      - currency\n                      - id\n                      - other_side\n                      - other_side_type\n                      - state\n                      - type\n                      - updated_timestamp\n                      type: object\n                  required:\n                  - result\n                  type: object\n      summary: Transfer funds to a another user.\n      tags:\n      - private\n      - wallet\n      - internal\n  /private/get_user_trades_by_instrument:\n    get:\n      parameters:\n      - description: Instrument name\n        explode: true\n        in: query\n        name: instrument_name\n        required: true\n        schema:\n          description: Unique instrument identifier\n          example: BTC-PERPETUAL\n          type: string\n        style: form\n      - description: The sequence number of the first trade to be returned\n        explode: true\n        in: query\n        name: start_seq\n        required: false\n        schema:\n          type: integer\n        style: form\n      - description: The sequence number of the last trade to be returned\n        explode: true\n        in: query\n        name: end_seq\n        required: false\n        schema:\n          type: integer\n        style: form\n      - description: Number of requested items, default - `10`\n        explode: true\n        in: query\n        name: count\n        required: false\n        schema:\n          type: integer\n        style: form\n      - description: Include trades older than 7 days, default - `false`\n        explode: true\n        in: query\n        name: include_old\n        required: false\n        schema:\n          type: boolean\n        style: form\n      - description: Direction of results sorting (`default` value means no sorting,\n          results will be returned in order in which they left the database)\n        explode: true\n        in: query\n        name: sorting\n        required: false\n        schema:\n          enum:\n          - asc\n          - desc\n          - default\n          type: string\n        style: form\n      responses:\n        200:\n          content:\n            application/json:\n              examples:\n                jsonObject:\n                  externalValue: examples/private/get_user_trades_by_instrument.response.json\n              schema:\n                allOf:\n                - properties:\n                    testnet:\n                      description: false for production server, true for test server\n                      type: boolean\n                      x-hide-in-docs: true\n                    jsonrpc:\n                      description: The JSON-RPC version (2.0)\n                      enum:\n                      - \"2.0\"\n                      type: string\n                    usDiff:\n                      description: Duration of the handling of the request, in microseconds\n                      type: integer\n                      x-hide-in-docs: true\n                    id:\n                      description: The id that was sent in the request\n                      type: integer\n                    usOut:\n                      description: The timestamp (in microseconds) of sending of the\n                        response\n                      type: integer\n                      x-hide-in-docs: true\n                    usIn:\n                      description: The timestamp (in microseconds) of receipt of the\n                        request\n                      type: integer\n                      x-hide-in-docs: true\n                  required:\n                  - jsonrpc\n                  - testnet\n                  - usDiff\n                  - usIn\n                  - usOut\n                - properties:\n                    result:\n                      properties:\n                        has_more:\n                          type: boolean\n                        trades:\n                          items:\n                            properties:\n                              direction:\n                                description: Trade direction of the taker\n                                enum:\n                                - buy\n                                - sell\n                                type: string\n                              fee_currency:\n                                description: Currency, i.e `\"BTC\"`, `\"ETH\"`\n                                enum:\n                                - BTC\n                                - ETH\n                                type: string\n                              order_id:\n                                description: Id of the user order (maker or taker),\n                                  i.e. subscriber's order id that took part in the\n                                  trade\n                                type: string\n                              timestamp:\n                                description: The timestamp of the trade\n                                example: 1517329113791\n                                type: integer\n                              price:\n                                description: The price of the trade\n                                type: number\n                              iv:\n                                description: Option implied volatility for the price\n                                  (Option only)\n                                type: number\n                              trade_id:\n                                description: Unique (per currency) trade identifier\n                                type: string\n                              fee:\n                                description: User's fee in units of the specified\n                                  `fee_currency`\n                                type: number\n                              order_type:\n                                description: 'Order type: `\"limit`, `\"market\"`, or\n                                  `\"liquidation\"`'\n                                enum:\n                                - limit\n                                - market\n                                - liquidation\n                                type: string\n                              trade_seq:\n                                description: The sequence number of the trade within\n                                  instrument\n                                type: integer\n                              self_trade:\n                                description: '`true` if the trade is against own order.\n                                  This can only happen when your account has self-trading\n                                  enabled. Contact an administrator if you think you\n                                  need that'\n                                type: boolean\n                              state:\n                                description: order state, `\"open\"`, `\"filled\"`, `\"rejected\"`,\n                                  `\"cancelled\"`, `\"untriggered\"` or `\"archive\"` (if\n                                  order was archived)\n                                enum:\n                                - open\n                                - filled\n                                - rejected\n                                - cancelled\n                                - untriggered\n                                - archive\n                                type: string\n                              label:\n                                description: User defined label (presented only when\n                                  previously set for order by user)\n                                type: string\n                              index_price:\n                                description: Index Price at the moment of trade\n                                type: number\n                              amount:\n                                description: Trade amount. For perpetual and futures\n                                  - in USD units, for options it is amount of corresponding\n                                  cryptocurrency contracts, e.g., BTC or ETH.\n                                type: number\n                              instrument_name:\n                                description: Unique instrument identifier\n                                example: BTC-PERPETUAL\n                                type: string\n                              tick_direction:\n                                description: Direction of the \"tick\" (`0` = Plus Tick,\n                                  `1` = Zero-Plus Tick, `2` = Minus Tick, `3` = Zero-Minus\n                                  Tick).\n                                enum:\n                                - 0\n                                - 1\n                                - 2\n                                - 3\n                                type: integer\n                              matching_id:\n                                description: Always `null`, except for a self-trade\n                                  which is possible only if self-trading is switched\n                                  on for the account (in that case this will be id\n                                  of the maker order of the subscriber)\n                                type: string\n                              liquidity:\n                                description: 'Describes what was role of users order:\n                                  `\"M\"` when it was maker order, `\"T\"` when it was\n                                  taker order'\n                                enum:\n                                - M\n                                - T\n                                type: string\n                            required:\n                            - amount\n                            - direction\n                            - fee\n                            - fee_currency\n                            - index_price\n                            - instrument_name\n                            - matching_id\n                            - order_id\n                            - price\n                            - self_trade\n                            - state\n                            - tick_direction\n                            - timestamp\n                            - trade_id\n                            - trade_seq\n                          type: array\n                      required:\n                      - has_more\n                      - trades\n                      type: object\n                  required:\n                  - result\n                  type: object\n      summary: Retrieve the latest user trades that have occurred for a specific instrument.\n      tags:\n      - trading\n      - private\n  /private/get_current_deposit_address:\n    get:\n      parameters:\n      - description: The currency symbol\n        explode: true\n        in: query\n        name: currency\n        required: true\n        schema:\n          description: Currency, i.e `\"BTC\"`, `\"ETH\"`\n          enum:\n          - BTC\n          - ETH\n          type: string\n        style: form\n      responses:\n        200:\n          content:\n            application/json:\n              examples:\n                jsonObject:\n                  externalValue: examples/private/get_current_deposit_address.response.json\n              schema:\n                allOf:\n                - properties:\n                    testnet:\n                      description: false for production server, true for test server\n                      type: boolean\n                      x-hide-in-docs: true\n                    jsonrpc:\n                      description: The JSON-RPC version (2.0)\n                      enum:\n                      - \"2.0\"\n                      type: string\n                    usDiff:\n                      description: Duration of the handling of the request, in microseconds\n                      type: integer\n                      x-hide-in-docs: true\n                    id:\n                      description: The id that was sent in the request\n                      type: integer\n                    usOut:\n                      description: The timestamp (in microseconds) of sending of the\n                        response\n                      type: integer\n                      x-hide-in-docs: true\n                    usIn:\n                      description: The timestamp (in microseconds) of receipt of the\n                        request\n                      type: integer\n                      x-hide-in-docs: true\n                  required:\n                  - jsonrpc\n                  - testnet\n                  - usDiff\n                  - usIn\n                  - usOut\n                - properties:\n                    result:\n                      description: Object if address is created, null otherwise\n                      properties:\n                        currency:\n                          description: Currency, i.e `\"BTC\"`, `\"ETH\"`\n                          enum:\n                          - BTC\n                          - ETH\n                          type: string\n                        address:\n                          description: Address in proper format for currency\n                          example: 1A1zP1eP5QGefi2DMPTfTL5SLmv7DivfNa\n                          type: string\n                        type:\n                          description: 'Address type/purpose, allowed values : `deposit`,\n                            `withdrawal`, `transfer`'\n                          enum:\n                          - deposit\n                          - withdrawal\n                          - transfer\n                          type: string\n                        creation_timestamp:\n                          description: The timestamp (seconds since the Unix epoch,\n                            with millisecond precision)\n                          example: 1536569522277\n                          type: integer\n                      required:\n                      - address\n                      - creation_timestamp\n                      - currency\n                      - type\n                      type: object\n                  required:\n                  - result\n                  type: object\n      summary: Retrieve deposit address for currency\n      tags:\n      - wallet\n      - private\n  /private/remove_from_address_book:\n    get:\n      parameters:\n      - description: The currency symbol\n        explode: true\n        in: query\n        name: currency\n        required: true\n        schema:\n          description: Currency, i.e `\"BTC\"`, `\"ETH\"`\n          enum:\n          - BTC\n          - ETH\n          type: string\n        style: form\n      - description: Address book type\n        explode: true\n        in: query\n        name: type\n        required: true\n        schema:\n          description: Address book type\n          enum:\n          - transfer\n          - withdrawal\n          type: string\n        style: form\n      - description: Address in currency format, it must be in address book\n        explode: true\n        in: query\n        name: address\n        required: true\n        schema:\n          type: string\n        style: form\n      - description: TFA code, required when TFA is enabled for current account\n        explode: true\n        in: query\n        name: tfa\n        required: false\n        schema:\n          type: string\n        style: form\n      responses:\n        200:\n          content:\n            application/json:\n              schema:\n                allOf:\n                - properties:\n                    testnet:\n                      description: false for production server, true for test server\n                      type: boolean\n                      x-hide-in-docs: true\n                    jsonrpc:\n                      description: The JSON-RPC version (2.0)\n                      enum:\n                      - \"2.0\"\n                      type: string\n                    usDiff:\n                      description: Duration of the handling of the request, in microseconds\n                      type: integer\n                      x-hide-in-docs: true\n                    id:\n                      description: The id that was sent in the request\n                      type: integer\n                    usOut:\n                      description: The timestamp (in microseconds) of sending of the\n                        response\n                      type: integer\n                      x-hide-in-docs: true\n                    usIn:\n                      description: The timestamp (in microseconds) of receipt of the\n                        request\n                      type: integer\n                      x-hide-in-docs: true\n                  required:\n                  - jsonrpc\n                  - testnet\n                  - usDiff\n                  - usIn\n                  - usOut\n                - properties:\n                    result:\n                      description: ok\n                      example: ok\n                      type: string\n                  required:\n                  - result\n                  type: object\n      summary: Adds new entry to address book of given type\n      tags:\n      - wallet\n      - private\n      - internal\n  /public/get_last_trades_by_instrument_and_time:\n    get:\n      parameters:\n      - description: Instrument name\n        explode: true\n        in: query\n        name: instrument_name\n        required: true\n        schema:\n          description: Unique instrument identifier\n          example: BTC-PERPETUAL\n          type: string\n        style: form\n      - description: The earliest timestamp to return result for\n        explode: true\n        in: query\n        name: start_timestamp\n        required: true\n        schema:\n          description: The timestamp (seconds since the Unix epoch, with millisecond\n            precision)\n          example: 1536569522277\n          type: integer\n        style: form\n      - description: The most recent timestamp to return result for\n        explode: true\n        in: query\n        name: end_timestamp\n        required: true\n        schema:\n          description: The timestamp (seconds since the Unix epoch, with millisecond\n            precision)\n          example: 1536569522277\n          type: integer\n        style: form\n      - description: Number of requested items, default - `10`\n        explode: true\n        in: query\n        name: count\n        required: false\n        schema:\n          type: integer\n        style: form\n      - description: Include trades older than 7 days, default - `false`\n        explode: true\n        in: query\n        name: include_old\n        required: false\n        schema:\n          type: boolean\n        style: form\n      - description: Direction of results sorting (`default` value means no sorting,\n          results will be returned in order in which they left the database)\n        explode: true\n        in: query\n        name: sorting\n        required: false\n        schema:\n          enum:\n          - asc\n          - desc\n          - default\n          type: string\n        style: form\n      responses:\n        200:\n          content:\n            application/json:\n              examples:\n                jsonObject:\n                  externalValue: examples/public/get_last_trades_by_instrument_and_time.response.json\n              schema:\n                allOf:\n                - properties:\n                    testnet:\n                      description: false for production server, true for test server\n                      type: boolean\n                      x-hide-in-docs: true\n                    jsonrpc:\n                      description: The JSON-RPC version (2.0)\n                      enum:\n                      - \"2.0\"\n                      type: string\n                    usDiff:\n                      description: Duration of the handling of the request, in microseconds\n                      type: integer\n                      x-hide-in-docs: true\n                    id:\n                      description: The id that was sent in the request\n                      type: integer\n                    usOut:\n                      description: The timestamp (in microseconds) of sending of the\n                        response\n                      type: integer\n                      x-hide-in-docs: true\n                    usIn:\n                      description: The timestamp (in microseconds) of receipt of the\n                        request\n                      type: integer\n                      x-hide-in-docs: true\n                  required:\n                  - jsonrpc\n                  - testnet\n                  - usDiff\n                  - usIn\n                  - usOut\n                - properties:\n                    result:\n                      properties:\n                        has_more:\n                          type: boolean\n                        trades:\n                          items:\n                            properties:\n                              direction:\n                                description: Trade direction of the taker\n                                enum:\n                                - buy\n                                - sell\n                                type: string\n                              tick_direction:\n                                description: Direction of the \"tick\" (`0` = Plus Tick,\n                                  `1` = Zero-Plus Tick, `2` = Minus Tick, `3` = Zero-Minus\n                                  Tick).\n                                enum:\n                                - 0\n                                - 1\n                                - 2\n                                - 3\n                                type: integer\n                              timestamp:\n                                description: The timestamp of the trade\n                                example: 1517329113791\n                                type: integer\n                              price:\n                                description: The price of the trade\n                                type: number\n                              trade_seq:\n                                description: The sequence number of the trade within\n                                  instrument\n                                type: integer\n                              trade_id:\n                                description: Unique (per currency) trade identifier\n                                type: string\n                              iv:\n                                description: Option implied volatility for the price\n                                  (Option only)\n                                type: number\n                              index_price:\n                                description: Index Price at the moment of trade\n                                type: number\n                              amount:\n                                description: Trade amount. For perpetual and futures\n                                  - in USD units, for options it is amount of corresponding\n                                  cryptocurrency contracts, e.g., BTC or ETH.\n                                type: number\n                              instrument_name:\n                                description: Unique instrument identifier\n                                example: BTC-PERPETUAL\n                                type: string\n                            required:\n                            - amount\n                            - direction\n                            - index_price\n                            - instrument_name\n                            - price\n                            - tick_direction\n                            - timestamp\n                            - trade_id\n                            - trade_seq\n                          type: array\n                      required:\n                      - has_more\n                      - trades\n                      type: object\n                  required:\n                  - result\n                  type: object\n      summary: Retrieve the latest trades that have occurred for a specific instrument\n        and within given time range.\n      tags:\n      - market_data\n      - public\n  /public/get_currencies:\n    get:\n      responses:\n        200:\n          content:\n            application/json:\n              examples:\n                jsonObject:\n                  externalValue: examples/public/get_currencies.response.json\n              schema:\n                allOf:\n                - properties:\n                    testnet:\n                      description: false for production server, true for test server\n                      type: boolean\n                      x-hide-in-docs: true\n                    jsonrpc:\n                      description: The JSON-RPC version (2.0)\n                      enum:\n                      - \"2.0\"\n                      type: string\n                    usDiff:\n                      description: Duration of the handling of the request, in microseconds\n                      type: integer\n                      x-hide-in-docs: true\n                    id:\n                      description: The id that was sent in the request\n                      type: integer\n                    usOut:\n                      description: The timestamp (in microseconds) of sending of the\n                        response\n                      type: integer\n                      x-hide-in-docs: true\n                    usIn:\n                      description: The timestamp (in microseconds) of receipt of the\n                        request\n                      type: integer\n                      x-hide-in-docs: true\n                  required:\n                  - jsonrpc\n                  - testnet\n                  - usDiff\n                  - usIn\n                  - usOut\n                - properties:\n                    result:\n                      items:\n                        properties:\n                          min_confirmations:\n                            description: Minimum number of block chain confirmations\n                              before deposit is accepted.\n                            example: 2\n                            type: integer\n                          min_withdrawal_fee:\n                            description: The minimum transaction fee paid for withdrawals\n                            example: 0.00010\n                            type: number\n                          disabled_deposit_address_creation:\n                            description: False if deposit address creation is disabled\n                            example: false\n                            type: boolean\n                          currency:\n                            description: The abbreviation of the currency. This abbreviation\n                              is used elsewhere in the API to identify the currency.\n                            example: BTC\n                            type: string\n                          currency_long:\n                            description: The full name for the currency.\n                            example: Bitcoin\n                            type: string\n                          withdrawal_fee:\n                            description: The total transaction fee paid for withdrawals\n                            example: 0.00010\n                            type: number\n                          fee_precision:\n                            description: fee precision\n                            example: 4\n                            type: integer\n                          withdrawal_priorities:\n                            items:\n                              properties:\n                                name:\n                                  type: string\n                                value:\n                                  type: number\n                              required:\n                              - name\n                              - value\n                              type: object\n                            type: array\n                          coin_type:\n                            description: The type of the currency.\n                            enum:\n                            - BITCOIN\n                            - ETHER\n                            type: string\n                        required:\n                        - coin_type\n                        - currency\n                        - currency_long\n                        - min_confirmation\n                        - withdrawal_fee\n                        type: object\n                      type: array\n                  required:\n                  - result\n                  type: object\n          description: ok response\n      summary: Retrieves all cryptocurrencies supported by the API.\n      tags:\n      - public\n      - market_data\n  /private/edit:\n    get:\n      parameters:\n      - description: The order id\n        explode: true\n        in: query\n        name: order_id\n        required: true\n        schema:\n          description: Unique order identifier\n          example: ETH-100234\n          type: string\n        style: form\n      - description: It represents the requested order size. For perpetual and futures\n          the amount is in USD units, for options it is amount of corresponding cryptocurrency\n          contracts, e.g., BTC or ETH\n        explode: true\n        in: query\n        name: amount\n        required: true\n        schema:\n          type: number\n        style: form\n      - description: \u003cp\u003eThe order price in base currency.\u003c/p\u003e \u003cp\u003eWhen editing an option\n          order with advanced=usd, the field price should be the option price value\n          in USD.\u003c/p\u003e \u003cp\u003eWhen editing an option order with advanced=implv, the field\n          price should be a value of implied volatility in percentages. For example,  price=100,\n          means implied volatility of 100%\u003c/p\u003e\n        explode: true\n        in: query\n        name: price\n        required: true\n        schema:\n          type: number\n        style: form\n      - description: \u003cp\u003eIf true, the order is considered post-only. If the new price\n          would cause the order to be filled immediately (as taker), the price will\n          be changed to be just below the bid.\u003c/p\u003e \u003cp\u003eOnly valid in combination with\n          time_in_force=`\"good_til_cancelled\"`\u003c/p\u003e\n        explode: true\n        in: query\n        name: post_only\n        required: false\n        schema:\n          default: true\n          type: boolean\n        style: form\n      - description: Advanced option order type. If you have posted an advanced option\n          order, it is necessary to re-supply this parameter when editing it (Only\n          for options)\n        explode: true\n        in: query\n        name: advanced\n        required: false\n        schema:\n          description: |\n            advanced type: `\"usd\"` or `\"implv\"` (Only for options; field is omitted if not applicable).\n          enum:\n          - usd\n          - implv\n          type: string\n        style: form\n      - description: Stop price, required for stop limit orders (Only for stop orders)\n        explode: true\n        in: query\n        name: stop_price\n        required: false\n        schema:\n          type: number\n        style: form\n      responses:\n        200:\n          content:\n            application/json:\n              examples:\n                jsonObject:\n                  externalValue: examples/private/edit.response.json\n              schema:\n                allOf:\n                - properties:\n                    testnet:\n                      description: false for production server, true for test server\n                      type: boolean\n                      x-hide-in-docs: true\n                    jsonrpc:\n                      description: The JSON-RPC version (2.0)\n                      enum:\n                      - \"2.0\"\n                      type: string\n                    usDiff:\n                      description: Duration of the handling of the request, in microseconds\n                      type: integer\n                      x-hide-in-docs: true\n                    id:\n                      description: The id that was sent in the request\n                      type: integer\n                    usOut:\n                      description: The timestamp (in microseconds) of sending of the\n                        response\n                      type: integer\n                      x-hide-in-docs: true\n                    usIn:\n                      description: The timestamp (in microseconds) of receipt of the\n                        request\n                      type: integer\n                      x-hide-in-docs: true\n                  required:\n                  - jsonrpc\n                  - testnet\n                  - usDiff\n                  - usIn\n                  - usOut\n                - properties:\n                    result:\n                      properties:\n                        trades:\n                          items:\n                            properties:\n                              direction:\n                                description: Trade direction of the taker\n                                enum:\n                                - buy\n                                - sell\n                                type: string\n                              fee_currency:\n                                description: Currency, i.e `\"BTC\"`, `\"ETH\"`\n                                enum:\n                                - BTC\n                                - ETH\n                                type: string\n                              order_id:\n                                description: Id of the user order (maker or taker),\n                                  i.e. subscriber's order id that took part in the\n                                  trade\n                                type: string\n                              timestamp:\n                                description: The timestamp of the trade\n                                example: 1517329113791\n                                type: integer\n                              price:\n                                description: The price of the trade\n                                type: number\n                              iv:\n                                description: Option implied volatility for the price\n                                  (Option only)\n                                type: number\n                              trade_id:\n                                description: Unique (per currency) trade identifier\n                                type: string\n                              fee:\n                                description: User's fee in units of the specified\n                                  `fee_currency`\n                                type: number\n                              order_type:\n                                description: 'Order type: `\"limit`, `\"market\"`, or\n                                  `\"liquidation\"`'\n                                enum:\n                                - limit\n                                - market\n                                - liquidation\n                                type: string\n                              trade_seq:\n                                description: The sequence number of the trade within\n                                  instrument\n                                type: integer\n                              self_trade:\n                                description: '`true` if the trade is against own order.\n                                  This can only happen when your account has self-trading\n                                  enabled. Contact an administrator if you think you\n                                  need that'\n                                type: boolean\n                              state:\n                                description: order state, `\"open\"`, `\"filled\"`, `\"rejected\"`,\n                                  `\"cancelled\"`, `\"untriggered\"` or `\"archive\"` (if\n                                  order was archived)\n                                enum:\n                                - open\n                                - filled\n                                - rejected\n                                - cancelled\n                                - untriggered\n                                - archive\n                                type: string\n                              label:\n                                description: User defined label (presented only when\n                                  previously set for order by user)\n                                type: string\n                              index_price:\n                                description: Index Price at the moment of trade\n                                type: number\n                              amount:\n                                description: Trade amount. For perpetual and futures\n                                  - in USD units, for options it is amount of corresponding\n                                  cryptocurrency contracts, e.g., BTC or ETH.\n                                type: number\n                              instrument_name:\n                                description: Unique instrument identifier\n                                example: BTC-PERPETUAL\n                                type: string\n                              tick_direction:\n                                description: Direction of the \"tick\" (`0` = Plus Tick,\n                                  `1` = Zero-Plus Tick, `2` = Minus Tick, `3` = Zero-Minus\n                                  Tick).\n                                enum:\n                                - 0\n                                - 1\n                                - 2\n                                - 3\n                                type: integer\n                              matching_id:\n                                description: Always `null`, except for a self-trade\n                                  which is possible only if self-trading is switched\n                                  on for the account (in that case this will be id\n                                  of the maker order of the subscriber)\n                                type: string\n                              liquidity:\n                                description: 'Describes what was role of users order:\n                                  `\"M\"` when it was maker order, `\"T\"` when it was\n                                  taker order'\n                                enum:\n                                - M\n                                - T\n                                type: string\n                            required:\n                            - amount\n                            - direction\n                            - fee\n                            - fee_currency\n                            - index_price\n                            - instrument_name\n                            - matching_id\n                            - order_id\n                            - price\n                            - self_trade\n                            - state\n                            - tick_direction\n                            - timestamp\n                            - trade_id\n                            - trade_seq\n                          type: array\n                        order:\n                          properties:\n                            direction:\n                              description: direction, `buy` or `sell`\n                              enum:\n                              - buy\n                              - sell\n                              type: string\n                            reduce_only:\n                              description: '`true` for reduce-only orders only'\n                              type: boolean\n                            triggered:\n                              description: Whether the stop order has been triggered\n                                (Only for stop orders)\n                              type: boolean\n                            order_id:\n                              description: Unique order identifier\n                              example: ETH-100234\n                              type: string\n                            price:\n                              description: Price in base currency\n                              type: number\n                            time_in_force:\n                              description: 'Order time in force: `\"good_til_cancelled\"`,\n                                `\"fill_or_kill\"`, `\"immediate_or_cancel\"`'\n                              enum:\n                              - good_til_cancelled\n                              - fill_or_kill\n                              - immediate_or_cancel\n                              type: string\n                            api:\n                              description: '`true` if created with API'\n                              type: boolean\n                            order_state:\n                              description: order state, `\"open\"`, `\"filled\"`, `\"rejected\"`,\n                                `\"cancelled\"`, `\"untriggered\"`\n                              enum:\n                              - open\n                              - filled\n                              - rejected\n                              - cancelled\n                              - untriggered\n                              - triggered\n                              type: string\n                            implv:\n                              description: Implied volatility in percent. (Only if\n                                `advanced=\"implv\"`)\n                              type: number\n                            advanced:\n                              description: |\n                                advanced type: `\"usd\"` or `\"implv\"` (Only for options; field is omitted if not applicable).\n                              enum:\n                              - usd\n                              - implv\n                              type: string\n                            post_only:\n                              description: '`true` for post-only orders only'\n                              type: boolean\n                            usd:\n                              description: Option price in USD (Only if `advanced=\"usd\"`)\n                              type: number\n                            stop_price:\n                              description: stop price (Only for future stop orders)\n                              type: number\n                            order_type:\n                              description: order type, `\"limit\"`, `\"market\"`, `\"stop_limit\"`,\n                                `\"stop_market\"`\n                              enum:\n                              - market\n                              - limit\n                              - stop_market\n                              - stop_limit\n                              type: string\n                            last_update_timestamp:\n                              description: The timestamp (seconds since the Unix epoch,\n                                with millisecond precision)\n                              example: 1536569522277\n                              type: integer\n                            original_order_type:\n                              description: Original order type. Optional field\n                              enum:\n                              - market\n                              type: string\n                            max_show:\n                              description: Maximum amount within an order to be shown\n                                to other traders, 0 for invisible order.\n                              type: number\n                            profit_loss:\n                              description: Profit and loss in base currency.\n                              type: number\n                            is_liquidation:\n                              description: '`true` if order was automatically created\n                                during liquidation'\n                              type: boolean\n                            filled_amount:\n                              description: Filled amount of the order. For perpetual\n                                and futures the filled_amount is in USD units, for\n                                options - in units or corresponding cryptocurrency\n                                contracts, e.g., BTC or ETH.\n                              type: number\n                            label:\n                              description: user defined label (up to 32 characters)\n                              type: string\n                            commission:\n                              description: Commission paid so far (in base currency)\n                              type: number\n                            amount:\n                              description: It represents the requested order size.\n                                For perpetual and futures the amount is in USD units,\n                                for options it is amount of corresponding cryptocurrency\n                                contracts, e.g., BTC or ETH.\n                              type: number\n                            trigger:\n                              description: 'Trigger type (Only for stop orders). Allowed\n                                values: `\"index_price\"`, `\"mark_price\"`, `\"last_price\"`.'\n                              enum:\n                              - index_price\n                              - mark_price\n                              - last_price\n                              type: string\n                            instrument_name:\n                              description: Unique instrument identifier\n                              example: BTC-PERPETUAL\n                              type: string\n                            creation_timestamp:\n                              description: The timestamp (seconds since the Unix epoch,\n                                with millisecond precision)\n                              example: 1536569522277\n                              type: integer\n                            average_price:\n                              description: Average fill price of the order\n                              type: number\n                          required:\n                          - api\n                          - creation_timestamp\n                          - direction\n                          - instrument\n                          - is_liquidation\n                          - label\n                          - last_update_timestamp\n                          - max_show\n                          - order_id\n                          - order_state\n                          - order_type\n                          - post_only\n                          - price\n                          - time_in_force\n                          type: object\n                      required:\n                      - order\n                      - trades\n                      type: object\n                  required:\n                  - result\n                  type: object\n      summary: Change price, amount and/or other properties of an order.\n      tags:\n      - trading\n      - private\n    x-order: 300\n  /public/get_order_book:\n    get:\n      parameters:\n      - description: The instrument name for which to retrieve the order book, see\n          [`getinstruments`](#getinstruments) to obtain instrument names.\n        explode: true\n        in: query\n        name: instrument_name\n        required: true\n        schema:\n          type: string\n        style: form\n      - description: The number of entries to return for bids and asks.\n        explode: true\n        in: query\n        name: depth\n        required: false\n        schema:\n          type: number\n        style: form\n      responses:\n        200:\n          content:\n            application/json:\n              examples:\n                jsonObject:\n                  externalValue: examples/public/get_order_book.response.json\n              schema:\n                allOf:\n                - properties:\n                    testnet:\n                      description: false for production server, true for test server\n                      type: boolean\n                      x-hide-in-docs: true\n                    jsonrpc:\n                      description: The JSON-RPC version (2.0)\n                      enum:\n                      - \"2.0\"\n                      type: string\n                    usDiff:\n                      description: Duration of the handling of the request, in microseconds\n                      type: integer\n                      x-hide-in-docs: true\n                    id:\n                      description: The id that was sent in the request\n                      type: integer\n                    usOut:\n                      description: The timestamp (in microseconds) of sending of the\n                        response\n                      type: integer\n                      x-hide-in-docs: true\n                    usIn:\n                      description: The timestamp (in microseconds) of receipt of the\n                        request\n                      type: integer\n                      x-hide-in-docs: true\n                  required:\n                  - jsonrpc\n                  - testnet\n                  - usDiff\n                  - usIn\n                  - usOut\n                - properties:\n                    result:\n                      properties:\n                        best_bid_amount:\n                          description: It represents the requested order size of all\n                            best bids\n                          nullable: true\n                          type: number\n                        best_ask_amount:\n                          description: It represents the requested order size of all\n                            best asks\n                          nullable: true\n                          type: number\n                        timestamp:\n                          description: The timestamp (seconds since the Unix epoch,\n                            with millisecond precision)\n                          example: 1536569522277\n                          type: integer\n                        last_price:\n                          description: The price for the last trade\n                          nullable: true\n                          type: number\n                        delivery_price:\n                          description: The settlement price for the instrument. Only\n                            when `state = closed`\n                          type: number\n                        underlying_price:\n                          description: Underlying price for implied volatility calculations\n                            (options only)\n                          type: number\n                        ask_iv:\n                          description: (Only for option) implied volatility for best\n                            ask\n                          type: number\n                        best_bid_price:\n                          description: The current best bid price, `null` if there\n                            aren't any bids\n                          nullable: true\n                          type: number\n                        open_interest:\n                          description: The total amount of outstanding contracts in\n                            the corresponding amount units. For perpetual and futures\n                            the amount is in USD units, for options it is amount of\n                            corresponding cryptocurrency contracts, e.g., BTC or ETH.\n                          type: number\n                        funding_8h:\n                          description: Funding 8h (perpetual only)\n                          type: number\n                        bid_iv:\n                          description: (Only for option) implied volatility for best\n                            bid\n                          type: number\n                        underlying_index:\n                          description: Name of the underlying future, or `index_price`\n                            (options only)\n                          type: number\n                        mark_price:\n                          description: The mark price for the instrument\n                          type: number\n                        stats:\n                          properties:\n                            volume:\n                              description: volume during last 24h in base currency\n                              type: number\n                            high:\n                              description: highest price during 24h\n                              type: number\n                            low:\n                              description: lowest price during 24h\n                              type: number\n                          required:\n                          - high\n                          - low\n                          - volume\n                          type: object\n                        asks:\n                          items:\n                            description: List of asks\n                            type: price-amount pair\n                          type: array\n                        mark_iv:\n                          description: (Only for option) implied volatility for mark\n                            price\n                          type: number\n                        greeks:\n                          description: Only for options\n                          properties:\n                            theta:\n                              description: (Only for option) The theta value for the\n                                option\n                              type: number\n                            vega:\n                              description: (Only for option) The vega value for the\n                                option\n                              type: number\n                            gamma:\n                              description: (Only for option) The gamma value for the\n                                option\n                              type: number\n                            rho:\n                              description: (Only for option) The rho value for the\n                                option\n                              type: number\n                            delta:\n                              description: (Only for option) The delta value for the\n                                option\n                              type: number\n                          required:\n                          - delta\n                          - gamma\n                          - rho\n                          - theta\n                          - vega\n                          type: object\n                        interest_rate:\n                          description: Interest rate used in implied volatility calculations\n                            (options only)\n                          type: number\n                        settlement_price:\n                          description: The settlement price for the instrument. Only\n                            when `state = open`\n                          type: number\n                        bids:\n                          items:\n                            description: List of bids\n                            type: price-amount pair\n                          type: array\n                        index_price:\n                          description: Current index price\n                          example: 8247.27\n                          type: number\n                        state:\n                          description: The state of the order book. Possible values\n                            are `open` and `closed`.\n                          enum:\n                          - open\n                          - closed\n                          type: string\n                        min_price:\n                          description: The minimum price for the future. Any sell\n                            orders you submit lower than this price will be clamped\n                            to this minimum.\n                          type: number\n                        instrument_name:\n                          description: Unique instrument identifier\n                          example: BTC-PERPETUAL\n                          type: string\n                        best_ask_price:\n                          description: The current best ask price, `null` if there\n                            aren't any asks\n                          nullable: true\n                          type: number\n                        max_price:\n                          description: The maximum price for the future. Any buy orders\n                            you submit higher than this price, will be clamped to\n                            this maximum.\n                          type: number\n                        current_funding:\n                          description: Current funding (perpetual only)\n                          type: number\n                      required:\n                      - asks\n                      - best_add_amount\n                      - best_add_price\n                      - best_bid_amount\n                      - best_bid_price\n                      - bids\n                      - index_price\n                      - instrument_name\n                      - last_price\n                      - mark_price\n                      - max_price\n                      - min_price\n                      - open_interest\n                      - state\n                      - stats\n                      - timestamp\n                  required:\n                  - result\n                  type: object\n      summary: Retrieves the order book, along with other market values for a given\n        instrument.\n      tags:\n      - market_data\n      - public\n  /private/create_subaccount:\n    get:\n      responses:\n        200:\n          content:\n            application/json:\n              examples:\n                jsonObject:\n                  externalValue: examples/private/create_subaccount.response.json\n              schema:\n                allOf:\n                - properties:\n                    testnet:\n                      description: false for production server, true for test server\n                      type: boolean\n                      x-hide-in-docs: true\n                    jsonrpc:\n                      description: The JSON-RPC version (2.0)\n                      enum:\n                      - \"2.0\"\n                      type: string\n                    usDiff:\n                      description: Duration of the handling of the request, in microseconds\n                      type: integer\n                      x-hide-in-docs: true\n                    id:\n                      description: The id that was sent in the request\n                      type: integer\n                    usOut:\n                      description: The timestamp (in microseconds) of sending of the\n                        response\n                      type: integer\n                      x-hide-in-docs: true\n                    usIn:\n                      description: The timestamp (in microseconds) of receipt of the\n                        request\n                      type: integer\n                      x-hide-in-docs: true\n                  required:\n                  - jsonrpc\n                  - testnet\n                  - usDiff\n                  - usIn\n                  - usOut\n                - properties:\n                    result:\n                      properties:\n                        system_name:\n                          description: System generated user nickname\n                          type: string\n                        username:\n                          description: Account name (given by user)\n                          type: string\n                        is_password:\n                          description: '`true` when password for the subaccount has\n                            been configured'\n                          type: boolean\n                        login_enabled:\n                          description: Informs whether login to the subaccount is\n                            enabled\n                          type: boolean\n                        tfa_enabled:\n                          description: Whether the two factor authentication is enabled\n                          type: boolean\n                        receive_notifications:\n                          description: When `true` - receive all notification emails\n                            on the main email\n                          type: boolean\n                        email:\n                          description: User email\n                          example: user_ABC@deribit.com\n                          type: string\n                        portfolio:\n                          properties:\n                            eth:\n                              properties:\n                                maintenance_margin:\n                                  type: number\n                                available_withdrawal_funds:\n                                  type: number\n                                initial_margin:\n                                  type: number\n                                available_funds:\n                                  type: number\n                                currency:\n                                  enum:\n                                  - btc\n                                  - eth\n                                  type: string\n                                margin_balance:\n                                  type: number\n                                equity:\n                                  type: number\n                                balance:\n                                  type: number\n                              required:\n                              - available_funds\n                              - available_withdrawal_funds\n                              - balance\n                              - currency\n                              - equity\n                              - initial_margin\n                              - maintenance_margin\n                              - margin_balance\n                              type: object\n                            btc:\n                              properties:\n                                maintenance_margin:\n                                  type: number\n                                available_withdrawal_funds:\n                                  type: number\n                                initial_margin:\n                                  type: number\n                                available_funds:\n                                  type: number\n                                currency:\n                                  enum:\n                                  - btc\n                                  - eth\n                                  type: string\n                                margin_balance:\n                                  type: number\n                                equity:\n                                  type: number\n                                balance:\n                                  type: number\n                              required:\n                              - available_funds\n                              - available_withdrawal_funds\n                              - balance\n                              - currency\n                              - equity\n                              - initial_margin\n                              - maintenance_margin\n                              - margin_balance\n                              type: object\n                          required:\n                          - btc\n                          - eth\n                          type: object\n                        type:\n                          description: Account type\n                          enum:\n                          - subaccount\n                          type: string\n                        id:\n                          description: Subaccount identifier\n                          type: integer\n                      required:\n                      - email\n                      - id\n                      - is_password\n                      - login_enabled\n                      - receive_notifications\n                      - system_name\n                      - tfa_enabled\n                      - type\n                      - username\n                      type: object\n                  required:\n                  - result\n                  type: object\n          description: ok response\n      summary: Create a new subaccount\n      tags:\n      - private\n      - account_management\n  /public/get_book_summary_by_instrument:\n    get:\n      parameters:\n      - description: Instrument name\n        explode: true\n        in: query\n        name: instrument_name\n        required: true\n        schema:\n          description: Unique instrument identifier\n          example: BTC-PERPETUAL\n          type: string\n        style: form\n      responses:\n        200:\n          content:\n            application/json:\n              examples:\n                jsonObject:\n                  externalValue: examples/public/get_book_summary_by_instrument.response.json\n              schema:\n                allOf:\n                - properties:\n                    testnet:\n                      description: false for production server, true for test server\n                      type: boolean\n                      x-hide-in-docs: true\n                    jsonrpc:\n                      description: The JSON-RPC version (2.0)\n                      enum:\n                      - \"2.0\"\n                      type: string\n                    usDiff:\n                      description: Duration of the handling of the request, in microseconds\n                      type: integer\n                      x-hide-in-docs: true\n                    id:\n                      description: The id that was sent in the request\n                      type: integer\n                    usOut:\n                      description: The timestamp (in microseconds) of sending of the\n                        response\n                      type: integer\n                      x-hide-in-docs: true\n                    usIn:\n                      description: The timestamp (in microseconds) of receipt of the\n                        request\n                      type: integer\n                      x-hide-in-docs: true\n                  required:\n                  - jsonrpc\n                  - testnet\n                  - usDiff\n                  - usIn\n                  - usOut\n                - properties:\n                    result:\n                      items:\n                        properties:\n                          underlying_index:\n                            description: Name of the underlying future, or `'index_price'`\n                              (options only)\n                            example: index_price\n                            type: string\n                          volume:\n                            description: The total 24h traded volume (in base currency)\n                            example: 223\n                            type: number\n                          volume_usd:\n                            description: Volume in usd (futures only)\n                            example: 102\n                            type: number\n                          underlying_price:\n                            description: underlying price for implied volatility calculations\n                              (options only)\n                            example: 6745.34\n                            type: number\n                          bid_price:\n                            description: The current best bid price, `null` if there\n                              aren't any bids\n                            example: 7022.89\n                            type: number\n                          open_interest:\n                            description: The total amount of outstanding contracts\n                              in the corresponding amount units. For perpetual and\n                              futures the amount is in USD units, for options it is\n                              amount of corresponding cryptocurrency contracts, e.g.,\n                              BTC or ETH.\n                            example: 0.5\n                            type: number\n                          quote_currency:\n                            description: Quote currency\n                            example: USD\n                            type: string\n                          high:\n                            description: Price of the 24h highest trade\n                            example: 7022.89\n                            type: number\n                          estimated_delivery_price:\n                            description: Estimated delivery price, in USD (futures\n                              only). For more details, see Documentation \u003e General\n                              \u003e Expiration Price\n                            example: 10029.5\n                            type: number\n                          last:\n                            description: The price of the latest trade, `null` if\n                              there weren't any trades\n                            example: 7022.89\n                            type: number\n                          mid_price:\n                            description: The average of the best bid and ask, `null`\n                              if there aren't any asks or bids\n                            example: 7022.89\n                            type: number\n                          interest_rate:\n                            description: Interest rate used in implied volatility\n                              calculations (options only)\n                            example: 0\n                            type: number\n                          funding_8h:\n                            description: Funding 8h (perpetual only)\n                            type: number\n                          mark_price:\n                            description: The current instrument market price\n                            example: 7022.89\n                            type: number\n                          ask_price:\n                            description: The current best ask price, `null` if there\n                              aren't any asks\n                            example: 7022.89\n                            type: number\n                          instrument_name:\n                            description: Unique instrument identifier\n                            example: BTC-PERPETUAL\n                            type: string\n                          low:\n                            description: Price of the 24h lowest trade, `null` if\n                              there weren't any trades\n                            example: 7022.89\n                            type: number\n                          base_currency:\n                            description: Base currency\n                            example: ETH\n                            type: string\n                          creation_timestamp:\n                            description: The timestamp (seconds since the Unix epoch,\n                              with millisecond precision)\n                            example: 1536569522277\n                            type: integer\n                          current_funding:\n                            description: Current funding (perpetual only)\n                            type: number\n                        required:\n                        - ask_price\n                        - base currency\n                        - bid_price\n                        - creation_timestamp\n                        - high\n                        - instrument_name\n                        - last\n                        - low\n                        - mark_price\n                        - mid_price\n                        - open_interest\n                        - quote_currency\n                        - volume\n                      type: array\n                  required:\n                  - result\n                  type: object\n      summary: Retrieves the summary information such as open interest, 24h volume,\n        etc. for a specific instrument.\n      tags:\n      - market_data\n      - public\n  /private/cancel:\n    get:\n      parameters:\n      - description: The order id\n        explode: true\n        in: query\n        name: order_id\n        required: true\n        schema:\n          description: Unique order identifier\n          example: ETH-100234\n          type: string\n        style: form\n      responses:\n        200:\n          content:\n            application/json:\n              examples:\n                jsonObject:\n                  externalValue: examples/private/cancel.response.json\n              schema:\n                allOf:\n                - properties:\n                    testnet:\n                      description: false for production server, true for test server\n                      type: boolean\n                      x-hide-in-docs: true\n                    jsonrpc:\n                      description: The JSON-RPC version (2.0)\n                      enum:\n                      - \"2.0\"\n                      type: string\n                    usDiff:\n                      description: Duration of the handling of the request, in microseconds\n                      type: integer\n                      x-hide-in-docs: true\n                    id:\n                      description: The id that was sent in the request\n                      type: integer\n                    usOut:\n                      description: The timestamp (in microseconds) of sending of the\n                        response\n                      type: integer\n                      x-hide-in-docs: true\n                    usIn:\n                      description: The timestamp (in microseconds) of receipt of the\n                        request\n                      type: integer\n                      x-hide-in-docs: true\n                  required:\n                  - jsonrpc\n                  - testnet\n                  - usDiff\n                  - usIn\n                  - usOut\n                - properties:\n                    result:\n                      properties:\n                        direction:\n                          description: direction, `buy` or `sell`\n                          enum:\n                          - buy\n                          - sell\n                          type: string\n                        reduce_only:\n                          description: '`true` for reduce-only orders only'\n                          type: boolean\n                        triggered:\n                          description: Whether the stop order has been triggered (Only\n                            for stop orders)\n                          type: boolean\n                        order_id:\n                          description: Unique order identifier\n                          example: ETH-100234\n                          type: string\n                        price:\n                          description: Price in base currency\n                          type: number\n                        time_in_force:\n                          description: 'Order time in force: `\"good_til_cancelled\"`,\n                            `\"fill_or_kill\"`, `\"immediate_or_cancel\"`'\n                          enum:\n                          - good_til_cancelled\n                          - fill_or_kill\n                          - immediate_or_cancel\n                          type: string\n                        api:\n                          description: '`true` if created with API'\n                          type: boolean\n                        order_state:\n                          description: order state, `\"open\"`, `\"filled\"`, `\"rejected\"`,\n                            `\"cancelled\"`, `\"untriggered\"`\n                          enum:\n                          - open\n                          - filled\n                          - rejected\n                          - cancelled\n                          - untriggered\n                          - triggered\n                          type: string\n                        implv:\n                          description: Implied volatility in percent. (Only if `advanced=\"implv\"`)\n                          type: number\n                        advanced:\n                          description: |\n                            advanced type: `\"usd\"` or `\"implv\"` (Only for options; field is omitted if not applicable).\n                          enum:\n                          - usd\n                          - implv\n                          type: string\n                        post_only:\n                          description: '`true` for post-only orders only'\n                          type: boolean\n                        usd:\n                          description: Option price in USD (Only if `advanced=\"usd\"`)\n                          type: number\n                        stop_price:\n                          description: stop price (Only for future stop orders)\n                          type: number\n                        order_type:\n                          description: order type, `\"limit\"`, `\"market\"`, `\"stop_limit\"`,\n                            `\"stop_market\"`\n                          enum:\n                          - market\n                          - limit\n                          - stop_market\n                          - stop_limit\n                          type: string\n                        last_update_timestamp:\n                          description: The timestamp (seconds since the Unix epoch,\n                            with millisecond precision)\n                          example: 1536569522277\n                          type: integer\n                        original_order_type:\n                          description: Original order type. Optional field\n                          enum:\n                          - market\n                          type: string\n                        max_show:\n                          description: Maximum amount within an order to be shown\n                            to other traders, 0 for invisible order.\n                          type: number\n                        profit_loss:\n                          description: Profit and loss in base currency.\n                          type: number\n                        is_liquidation:\n                          description: '`true` if order was automatically created\n                            during liquidation'\n                          type: boolean\n                        filled_amount:\n                          description: Filled amount of the order. For perpetual and\n                            futures the filled_amount is in USD units, for options\n                            - in units or corresponding cryptocurrency contracts,\n                            e.g., BTC or ETH.\n                          type: number\n                        label:\n                          description: user defined label (up to 32 characters)\n                          type: string\n                        commission:\n                          description: Commission paid so far (in base currency)\n                          type: number\n                        amount:\n                          description: It represents the requested order size. For\n                            perpetual and futures the amount is in USD units, for\n                            options it is amount of corresponding cryptocurrency contracts,\n                            e.g., BTC or ETH.\n                          type: number\n                        trigger:\n                          description: 'Trigger type (Only for stop orders). Allowed\n                            values: `\"index_price\"`, `\"mark_price\"`, `\"last_price\"`.'\n                          enum:\n                          - index_price\n                          - mark_price\n                          - last_price\n                          type: string\n                        instrument_name:\n                          description: Unique instrument identifier\n                          example: BTC-PERPETUAL\n                          type: string\n                        creation_timestamp:\n                          description: The timestamp (seconds since the Unix epoch,\n                            with millisecond precision)\n                          example: 1536569522277\n                          type: integer\n                        average_price:\n                          description: Average fill price of the order\n                          type: number\n                      required:\n                      - api\n                      - creation_timestamp\n                      - direction\n                      - instrument\n                      - is_liquidation\n                      - label\n                      - last_update_timestamp\n                      - max_show\n                      - order_id\n                      - order_state\n                      - order_type\n                      - post_only\n                      - price\n                      - time_in_force\n                      type: object\n                  required:\n                  - result\n                  type: object\n      summary: Cancel an order, specified by order id\n      tags:\n      - trading\n      - private\n  /public/get_funding_chart_data:\n    get:\n      parameters:\n      - description: Instrument name\n        explode: true\n        in: query\n        name: instrument_name\n        required: true\n        schema:\n          description: Unique instrument identifier\n          example: BTC-PERPETUAL\n          type: string\n        style: form\n      - description: Specifies time period. `8h` - 8 hours, `24h` - 24 hours\n        explode: true\n        in: query\n        name: length\n        required: false\n        schema:\n          enum:\n          - 8h\n          - 24h\n          type: string\n        style: form\n      responses:\n        200:\n          content:\n            application/json:\n              schema:\n                allOf:\n                - properties:\n                    testnet:\n                      description: false for production server, true for test server\n                      type: boolean\n                      x-hide-in-docs: true\n                    jsonrpc:\n                      description: The JSON-RPC version (2.0)\n                      enum:\n                      - \"2.0\"\n                      type: string\n                    usDiff:\n                      description: Duration of the handling of the request, in microseconds\n                      type: integer\n                      x-hide-in-docs: true\n                    id:\n                      description: The id that was sent in the request\n                      type: integer\n                    usOut:\n                      description: The timestamp (in microseconds) of sending of the\n                        response\n                      type: integer\n                      x-hide-in-docs: true\n                    usIn:\n                      description: The timestamp (in microseconds) of receipt of the\n                        request\n                      type: integer\n                      x-hide-in-docs: true\n                  required:\n                  - jsonrpc\n                  - testnet\n                  - usDiff\n                  - usIn\n                  - usOut\n                - properties:\n                    result:\n                      properties:\n                        index_price:\n                          description: Current index price\n                          example: 1234.23\n                          type: number\n                        max:\n                          description: maximal interest\n                          example: 0.005\n                          type: number\n                        current_interest:\n                          description: Current interest\n                          example: 0.005000670552845\n                          type: number\n                        interest_8h:\n                          description: Current interest 8h\n                          example: 0.0040080896931\n                          type: number\n                        data:\n                          items:\n                            type: timestamp-value pair\n                          type: array\n                      required:\n                      - current_interest\n                      - data\n                      - index_price\n                      - interest_8h\n                      - max\n                      type: object\n                  required:\n                  - result\n                  type: object\n      summary: Retrieve the latest user trades that have occurred for PERPETUAL instruments\n        in a specific currency symbol and within given time range.\n      tags:\n      - public\n      - market_data\n  /public/get_option_mark_prices:\n    get:\n      parameters:\n      - description: The currency symbol\n        explode: true\n        in: query\n        name: currency\n        required: true\n        schema:\n          description: Currency, i.e `\"BTC\"`, `\"ETH\"`\n          enum:\n          - BTC\n          - ETH\n          type: string\n        style: form\n      responses:\n        200:\n          content:\n            application/json:\n              examples:\n                jsonObject:\n                  externalValue: examples/public/get_option_mark_prices.response.json\n              schema:\n                allOf:\n                - properties:\n                    testnet:\n                      description: false for production server, true for test server\n                      type: boolean\n                      x-hide-in-docs: true\n                    jsonrpc:\n                      description: The JSON-RPC version (2.0)\n                      enum:\n                      - \"2.0\"\n                      type: string\n                    usDiff:\n                      description: Duration of the handling of the request, in microseconds\n                      type: integer\n                      x-hide-in-docs: true\n                    id:\n                      description: The id that was sent in the request\n                      type: integer\n                    usOut:\n                      description: The timestamp (in microseconds) of sending of the\n                        response\n                      type: integer\n                      x-hide-in-docs: true\n                    usIn:\n                      description: The timestamp (in microseconds) of receipt of the\n                        request\n                      type: integer\n                      x-hide-in-docs: true\n                  required:\n                  - jsonrpc\n                  - testnet\n                  - usDiff\n                  - usIn\n                  - usOut\n                - properties:\n                    result:\n                      description: Object with instrument names as keys and two elements\n                        arrays as value. First element in array is mark price and\n                        second one is iv.\n                      type: object\n                  required:\n                  - result\n                  type: object\n          description: ok response\n      summary: Retrives market prices and its implied volatility of options instruments\n      tags:\n      - internal\n  /private/get_order_history_by_currency:\n    get:\n      parameters:\n      - description: The currency symbol\n        explode: true\n        in: query\n        name: currency\n        required: true\n        schema:\n          description: Currency, i.e `\"BTC\"`, `\"ETH\"`\n          enum:\n          - BTC\n          - ETH\n          type: string\n        style: form\n      - description: Instrument kind, if not provided instruments of all kinds are\n          considered\n        explode: true\n        in: query\n        name: kind\n        required: false\n        schema:\n          description: Instrument kind, `\"future\"` or `\"option\"`\n          enum:\n          - future\n          - option\n          type: string\n        style: form\n      - description: Number of requested items, default - `20`\n        explode: true\n        in: query\n        name: count\n        required: false\n        schema:\n          type: integer\n        style: form\n      - description: The offset for pagination, default - `0`\n        explode: true\n        in: query\n        name: offset\n        required: false\n        schema:\n          example: 10\n          type: integer\n        style: form\n      - description: Include in result orders older than 2 days, default - `false`\n        explode: true\n        in: query\n        name: include_old\n        required: false\n        schema:\n          example: false\n          type: boolean\n        style: form\n      - description: Include in result fully unfilled closed orders, default - `false`\n        explode: true\n        in: query\n        name: include_unfilled\n        required: false\n        schema:\n          example: false\n          type: boolean\n        style: form\n      responses:\n        200:\n          content:\n            application/json:\n              examples:\n                jsonObject:\n                  externalValue: examples/private/get_order_history_by_currency.response.json\n              schema:\n                allOf:\n                - properties:\n                    testnet:\n                      description: false for production server, true for test server\n                      type: boolean\n                      x-hide-in-docs: true\n                    jsonrpc:\n                      description: The JSON-RPC version (2.0)\n                      enum:\n                      - \"2.0\"\n                      type: string\n                    usDiff:\n                      description: Duration of the handling of the request, in microseconds\n                      type: integer\n                      x-hide-in-docs: true\n                    id:\n                      description: The id that was sent in the request\n                      type: integer\n                    usOut:\n                      description: The timestamp (in microseconds) of sending of the\n                        response\n                      type: integer\n                      x-hide-in-docs: true\n                    usIn:\n                      description: The timestamp (in microseconds) of receipt of the\n                        request\n                      type: integer\n                      x-hide-in-docs: true\n                  required:\n                  - jsonrpc\n                  - testnet\n                  - usDiff\n                  - usIn\n                  - usOut\n                - properties:\n                    result:\n                      items:\n                        properties:\n                          direction:\n                            description: direction, `buy` or `sell`\n                            enum:\n                            - buy\n                            - sell\n                            type: string\n                          reduce_only:\n                            description: '`true` for reduce-only orders only'\n                            type: boolean\n                          triggered:\n                            description: Whether the stop order has been triggered\n                              (Only for stop orders)\n                            type: boolean\n                          order_id:\n                            description: Unique order identifier\n                            example: ETH-100234\n                            type: string\n                          price:\n                            description: Price in base currency\n                            type: number\n                          time_in_force:\n                            description: 'Order time in force: `\"good_til_cancelled\"`,\n                              `\"fill_or_kill\"`, `\"immediate_or_cancel\"`'\n                            enum:\n                            - good_til_cancelled\n                            - fill_or_kill\n                            - immediate_or_cancel\n                            type: string\n                          api:\n                            description: '`true` if created with API'\n                            type: boolean\n                          order_state:\n                            description: order state, `\"open\"`, `\"filled\"`, `\"rejected\"`,\n                              `\"cancelled\"`, `\"untriggered\"`\n                            enum:\n                            - open\n                            - filled\n                            - rejected\n                            - cancelled\n                            - untriggered\n                            - triggered\n                            type: string\n                          implv:\n                            description: Implied volatility in percent. (Only if `advanced=\"implv\"`)\n                            type: number\n                          advanced:\n                            description: |\n                              advanced type: `\"usd\"` or `\"implv\"` (Only for options; field is omitted if not applicable).\n                            enum:\n                            - usd\n                            - implv\n                            type: string\n                          post_only:\n                            description: '`true` for post-only orders only'\n                            type: boolean\n                          usd:\n                            description: Option price in USD (Only if `advanced=\"usd\"`)\n                            type: number\n                          stop_price:\n                            description: stop price (Only for future stop orders)\n                            type: number\n                          order_type:\n                            description: order type, `\"limit\"`, `\"market\"`, `\"stop_limit\"`,\n                              `\"stop_market\"`\n                            enum:\n                            - market\n                            - limit\n                            - stop_market\n                            - stop_limit\n                            type: string\n                          last_update_timestamp:\n                            description: The timestamp (seconds since the Unix epoch,\n                              with millisecond precision)\n                            example: 1536569522277\n                            type: integer\n                          original_order_type:\n                            description: Original order type. Optional field\n                            enum:\n                            - market\n                            type: string\n                          max_show:\n                            description: Maximum amount within an order to be shown\n                              to other traders, 0 for invisible order.\n                            type: number\n                          profit_loss:\n                            description: Profit and loss in base currency.\n                            type: number\n                          is_liquidation:\n                            description: '`true` if order was automatically created\n                              during liquidation'\n                            type: boolean\n                          filled_amount:\n                            description: Filled amount of the order. For perpetual\n                              and futures the filled_amount is in USD units, for options\n                              - in units or corresponding cryptocurrency contracts,\n                              e.g., BTC or ETH.\n                            type: number\n                          label:\n                            description: user defined label (up to 32 characters)\n                            type: string\n                          commission:\n                            description: Commission paid so far (in base currency)\n                            type: number\n                          amount:\n                            description: It represents the requested order size. For\n                              perpetual and futures the amount is in USD units, for\n                              options it is amount of corresponding cryptocurrency\n                              contracts, e.g., BTC or ETH.\n                            type: number\n                          trigger:\n                            description: 'Trigger type (Only for stop orders). Allowed\n                              values: `\"index_price\"`, `\"mark_price\"`, `\"last_price\"`.'\n                            enum:\n                            - index_price\n                            - mark_price\n                            - last_price\n                            type: string\n                          instrument_name:\n                            description: Unique instrument identifier\n                            example: BTC-PERPETUAL\n                            type: string\n                          creation_timestamp:\n                            description: The timestamp (seconds since the Unix epoch,\n                              with millisecond precision)\n                            example: 1536569522277\n                            type: integer\n                          average_price:\n                            description: Average fill price of the order\n                            type: number\n                        required:\n                        - api\n                        - creation_timestamp\n                        - direction\n                        - instrument\n                        - is_liquidation\n                        - label\n                        - last_update_timestamp\n                        - max_show\n                        - order_id\n                        - order_state\n                        - order_type\n                        - post_only\n                        - price\n                        - time_in_force\n                        type: object\n                      type: array\n                  required:\n                  - result\n                  type: object\n      summary: Retrieves history of orders that have been partially or fully filled.\n      tags:\n      - trading\n      - private\n  /private/sell:\n    get:\n      parameters:\n      - description: Instrument name\n        explode: true\n        in: query\n        name: instrument_name\n        required: true\n        schema:\n          description: Unique instrument identifier\n          example: BTC-PERPETUAL\n          type: string\n        style: form\n      - description: It represents the requested order size. For perpetual and futures\n          the amount is in USD units, for options it is amount of corresponding cryptocurrency\n          contracts, e.g., BTC or ETH\n        explode: true\n        in: query\n        name: amount\n        required: true\n        schema:\n          type: number\n        style: form\n      - description: 'The order type, default: `\"limit\"`'\n        explode: true\n        in: query\n        name: type\n        required: false\n        schema:\n          enum:\n          - limit\n          - stop_limit\n          - market\n          - stop_market\n          type: string\n        style: form\n      - description: user defined label for the order (maximum 32 characters)\n        explode: true\n        in: query\n        name: label\n        required: false\n        schema:\n          type: string\n        style: form\n      - description: \u003cp\u003eThe order price in base currency (Only for limit and stop_limit\n          orders)\u003c/p\u003e \u003cp\u003eWhen adding order with advanced=usd, the field price should\n          be the option price value in USD.\u003c/p\u003e \u003cp\u003eWhen adding order with advanced=implv,\n          the field price should be a value of implied volatility in percentages.\n          For example,  price=100, means implied volatility of 100%\u003c/p\u003e\n        explode: true\n        in: query\n        name: price\n        required: false\n        schema:\n          type: number\n        style: form\n      - description: \u003cp\u003eSpecifies how long the order remains in effect. Default `\"good_til_cancelled\"`\u003c/p\u003e\n          \u003cul\u003e \u003cli\u003e`\"good_til_cancelled\"` - unfilled order remains in order book until\n          cancelled\u003c/li\u003e \u003cli\u003e`\"fill_or_kill\"` - execute a transaction immediately\n          and completely or not at all\u003c/li\u003e \u003cli\u003e`\"immediate_or_cancel\"` - execute\n          a transaction immediately, and any portion of the order that cannot be immediately\n          filled is cancelled\u003c/li\u003e \u003c/ul\u003e\n        explode: true\n        in: query\n        name: time_in_force\n        required: false\n        schema:\n          default: good_til_cancelled\n          enum:\n          - good_til_cancelled\n          - fill_or_kill\n          - immediate_or_cancel\n          type: string\n        style: form\n      - description: Maximum amount within an order to be shown to other customers,\n          `0` for invisible order\n        explode: true\n        in: query\n        name: max_show\n        required: false\n        schema:\n          default: 1\n          type: number\n        style: form\n      - description: \u003cp\u003eIf true, the order is considered post-only. If the new price\n          would cause the order to be filled immediately (as taker), the price will\n          be changed to be just below the bid.\u003c/p\u003e \u003cp\u003eOnly valid in combination with\n          time_in_force=`\"good_til_cancelled\"`\u003c/p\u003e\n        explode: true\n        in: query\n        name: post_only\n        required: false\n        schema:\n          default: true\n          type: boolean\n        style: form\n      - description: If `true`, the order is considered reduce-only which is intended\n          to only reduce a current position\n        explode: true\n        in: query\n        name: reduce_only\n        required: false\n        schema:\n          default: false\n          type: boolean\n        style: form\n      - description: Stop price, required for stop limit orders (Only for stop orders)\n        explode: true\n        in: query\n        name: stop_price\n        required: false\n        schema:\n          type: number\n        style: form\n      - description: Defines trigger type, required for `\"stop_limit\"` order type\n        explode: true\n        in: query\n        name: trigger\n        required: false\n        schema:\n          description: 'Trigger type (Only for stop orders). Allowed values: `\"index_price\"`,\n            `\"mark_price\"`, `\"last_price\"`.'\n          enum:\n          - index_price\n          - mark_price\n          - last_price\n          type: string\n        style: form\n      - description: Advanced option order type. (Only for options)\n        explode: true\n        in: query\n        name: advanced\n        required: false\n        schema:\n          description: |\n            advanced type: `\"usd\"` or `\"implv\"` (Only for options; field is omitted if not applicable).\n          enum:\n          - usd\n          - implv\n          type: string\n        style: form\n      responses:\n        200:\n          content:\n            application/json:\n              examples:\n                jsonObject:\n                  externalValue: examples/private/sell.response.json\n              schema:\n                allOf:\n                - properties:\n                    testnet:\n                      description: false for production server, true for test server\n                      type: boolean\n                      x-hide-in-docs: true\n                    jsonrpc:\n                      description: The JSON-RPC version (2.0)\n                      enum:\n                      - \"2.0\"\n                      type: string\n                    usDiff:\n                      description: Duration of the handling of the request, in microseconds\n                      type: integer\n                      x-hide-in-docs: true\n                    id:\n                      description: The id that was sent in the request\n                      type: integer\n                    usOut:\n                      description: The timestamp (in microseconds) of sending of the\n                        response\n                      type: integer\n                      x-hide-in-docs: true\n                    usIn:\n                      description: The timestamp (in microseconds) of receipt of the\n                        request\n                      type: integer\n                      x-hide-in-docs: true\n                  required:\n                  - jsonrpc\n                  - testnet\n                  - usDiff\n                  - usIn\n                  - usOut\n                - properties:\n                    result:\n                      properties:\n                        trades:\n                          items:\n                            properties:\n                              direction:\n                                description: Trade direction of the taker\n                                enum:\n                                - buy\n                                - sell\n                                type: string\n                              fee_currency:\n                                description: Currency, i.e `\"BTC\"`, `\"ETH\"`\n                                enum:\n                                - BTC\n                                - ETH\n                                type: string\n                              order_id:\n                                description: Id of the user order (maker or taker),\n                                  i.e. subscriber's order id that took part in the\n                                  trade\n                                type: string\n                              timestamp:\n                                description: The timestamp of the trade\n                                example: 1517329113791\n                                type: integer\n                              price:\n                                description: The price of the trade\n                                type: number\n                              iv:\n                                description: Option implied volatility for the price\n                                  (Option only)\n                                type: number\n                              trade_id:\n                                description: Unique (per currency) trade identifier\n                                type: string\n                              fee:\n                                description: User's fee in units of the specified\n                                  `fee_currency`\n                                type: number\n                              order_type:\n                                description: 'Order type: `\"limit`, `\"market\"`, or\n                                  `\"liquidation\"`'\n                                enum:\n                                - limit\n                                - market\n                                - liquidation\n                                type: string\n                              trade_seq:\n                                description: The sequence number of the trade within\n                                  instrument\n                                type: integer\n                              self_trade:\n                                description: '`true` if the trade is against own order.\n                                  This can only happen when your account has self-trading\n                                  enabled. Contact an administrator if you think you\n                                  need that'\n                                type: boolean\n                              state:\n                                description: order state, `\"open\"`, `\"filled\"`, `\"rejected\"`,\n                                  `\"cancelled\"`, `\"untriggered\"` or `\"archive\"` (if\n                                  order was archived)\n                                enum:\n                                - open\n                                - filled\n                                - rejected\n                                - cancelled\n                                - untriggered\n                                - archive\n                                type: string\n                              label:\n                                description: User defined label (presented only when\n                                  previously set for order by user)\n                                type: string\n                              index_price:\n                                description: Index Price at the moment of trade\n                                type: number\n                              amount:\n                                description: Trade amount. For perpetual and futures\n                                  - in USD units, for options it is amount of corresponding\n                                  cryptocurrency contracts, e.g., BTC or ETH.\n                                type: number\n                              instrument_name:\n                                description: Unique instrument identifier\n                                example: BTC-PERPETUAL\n                                type: string\n                              tick_direction:\n                                description: Direction of the \"tick\" (`0` = Plus Tick,\n                                  `1` = Zero-Plus Tick, `2` = Minus Tick, `3` = Zero-Minus\n                                  Tick).\n                                enum:\n                                - 0\n                                - 1\n                                - 2\n                                - 3\n                                type: integer\n                              matching_id:\n                                description: Always `null`, except for a self-trade\n                                  which is possible only if self-trading is switched\n                                  on for the account (in that case this will be id\n                                  of the maker order of the subscriber)\n                                type: string\n                              liquidity:\n                                description: 'Describes what was role of users order:\n                                  `\"M\"` when it was maker order, `\"T\"` when it was\n                                  taker order'\n                                enum:\n                                - M\n                                - T\n                                type: string\n                            required:\n                            - amount\n                            - direction\n                            - fee\n                            - fee_currency\n                            - index_price\n                            - instrument_name\n                            - matching_id\n                            - order_id\n                            - price\n                            - self_trade\n                            - state\n                            - tick_direction\n                            - timestamp\n                            - trade_id\n                            - trade_seq\n                          type: array\n                        order:\n                          properties:\n                            direction:\n                              description: direction, `buy` or `sell`\n                              enum:\n                              - buy\n                              - sell\n                              type: string\n                            reduce_only:\n                              description: '`true` for reduce-only orders only'\n                              type: boolean\n                            triggered:\n                              description: Whether the stop order has been triggered\n                                (Only for stop orders)\n                              type: boolean\n                            order_id:\n                              description: Unique order identifier\n                              example: ETH-100234\n                              type: string\n                            price:\n                              description: Price in base currency\n                              type: number\n                            time_in_force:\n                              description: 'Order time in force: `\"good_til_cancelled\"`,\n                                `\"fill_or_kill\"`, `\"immediate_or_cancel\"`'\n                              enum:\n                              - good_til_cancelled\n                              - fill_or_kill\n                              - immediate_or_cancel\n                              type: string\n                            api:\n                              description: '`true` if created with API'\n                              type: boolean\n                            order_state:\n                              description: order state, `\"open\"`, `\"filled\"`, `\"rejected\"`,\n                                `\"cancelled\"`, `\"untriggered\"`\n                              enum:\n                              - open\n                              - filled\n                              - rejected\n                              - cancelled\n                              - untriggered\n                              - triggered\n                              type: string\n                            implv:\n                              description: Implied volatility in percent. (Only if\n                                `advanced=\"implv\"`)\n                              type: number\n                            advanced:\n                              description: |\n                                advanced type: `\"usd\"` or `\"implv\"` (Only for options; field is omitted if not applicable).\n                              enum:\n                              - usd\n                              - implv\n                              type: string\n                            post_only:\n                              description: '`true` for post-only orders only'\n                              type: boolean\n                            usd:\n                              description: Option price in USD (Only if `advanced=\"usd\"`)\n                              type: number\n                            stop_price:\n                              description: stop price (Only for future stop orders)\n                              type: number\n                            order_type:\n                              description: order type, `\"limit\"`, `\"market\"`, `\"stop_limit\"`,\n                                `\"stop_market\"`\n                              enum:\n                              - market\n                              - limit\n                              - stop_market\n                              - stop_limit\n                              type: string\n                            last_update_timestamp:\n                              description: The timestamp (seconds since the Unix epoch,\n                                with millisecond precision)\n                              example: 1536569522277\n                              type: integer\n                            original_order_type:\n                              description: Original order type. Optional field\n                              enum:\n                              - market\n                              type: string\n                            max_show:\n                              description: Maximum amount within an order to be shown\n                                to other traders, 0 for invisible order.\n                              type: number\n                            profit_loss:\n                              description: Profit and loss in base currency.\n                              type: number\n                            is_liquidation:\n                              description: '`true` if order was automatically created\n                                during liquidation'\n                              type: boolean\n                            filled_amount:\n                              description: Filled amount of the order. For perpetual\n                                and futures the filled_amount is in USD units, for\n                                options - in units or corresponding cryptocurrency\n                                contracts, e.g., BTC or ETH.\n                              type: number\n                            label:\n                              description: user defined label (up to 32 characters)\n                              type: string\n                            commission:\n                              description: Commission paid so far (in base currency)\n                              type: number\n                            amount:\n                              description: It represents the requested order size.\n                                For perpetual and futures the amount is in USD units,\n                                for options it is amount of corresponding cryptocurrency\n                                contracts, e.g., BTC or ETH.\n                              type: number\n                            trigger:\n                              description: 'Trigger type (Only for stop orders). Allowed\n                                values: `\"index_price\"`, `\"mark_price\"`, `\"last_price\"`.'\n                              enum:\n                              - index_price\n                              - mark_price\n                              - last_price\n                              type: string\n                            instrument_name:\n                              description: Unique instrument identifier\n                              example: BTC-PERPETUAL\n                              type: string\n                            creation_timestamp:\n                              description: The timestamp (seconds since the Unix epoch,\n                                with millisecond precision)\n                              example: 1536569522277\n                              type: integer\n                            average_price:\n                              description: Average fill price of the order\n                              type: number\n                          required:\n                          - api\n                          - creation_timestamp\n                          - direction\n                          - instrument\n                          - is_liquidation\n                          - label\n                          - last_update_timestamp\n                          - max_show\n                          - order_id\n                          - order_state\n                          - order_type\n                          - post_only\n                          - price\n                          - time_in_force\n                          type: object\n                      required:\n                      - order\n                      - trades\n                      type: object\n                  required:\n                  - result\n                  type: object\n          description: ok response\n      summary: Places a sell order for an instrument.\n      tags:\n      - private\n      - trading\n    x-order: 200\n  /private/get_margins:\n    get:\n      parameters:\n      - description: Instrument name\n        explode: true\n        in: query\n        name: instrument_name\n        required: true\n        schema:\n          description: Unique instrument identifier\n          example: BTC-PERPETUAL\n          type: string\n        style: form\n      - description: Amount, integer for future, float for option. For perpetual and\n          futures the amount is in USD units, for options it is amount of corresponding\n          cryptocurrency contracts, e.g., BTC or ETH.\n        explode: true\n        in: query\n        name: amount\n        required: true\n        schema:\n          example: 1\n          type: number\n        style: form\n      - description: Price\n        explode: true\n        in: query\n        name: price\n        required: true\n        schema:\n          type: number\n        style: form\n      responses:\n        200:\n          content:\n            application/json:\n              schema:\n                allOf:\n                - properties:\n                    testnet:\n                      description: false for production server, true for test server\n                      type: boolean\n                      x-hide-in-docs: true\n                    jsonrpc:\n                      description: The JSON-RPC version (2.0)\n                      enum:\n                      - \"2.0\"\n                      type: string\n                    usDiff:\n                      description: Duration of the handling of the request, in microseconds\n                      type: integer\n                      x-hide-in-docs: true\n                    id:\n                      description: The id that was sent in the request\n                      type: integer\n                    usOut:\n                      description: The timestamp (in microseconds) of sending of the\n                        response\n                      type: integer\n                      x-hide-in-docs: true\n                    usIn:\n                      description: The timestamp (in microseconds) of receipt of the\n                        request\n                      type: integer\n                      x-hide-in-docs: true\n                  required:\n                  - jsonrpc\n                  - testnet\n                  - usDiff\n                  - usIn\n                  - usOut\n                - properties:\n                    result:\n                      properties:\n                        sell:\n                          description: Margin when selling\n                          example: 0.01680479\n                          type: number\n                        buy:\n                          description: Margin when buying\n                          example: 0.01681367\n                          type: number\n                        min_price:\n                          description: The minimum price for the future. Any sell\n                            orders you submit lower than this price will be clamped\n                            to this minimum.\n                          type: number\n                        max_price:\n                          description: The maximum price for the future. Any buy orders\n                            you submit higher than this price, will be clamped to\n                            this maximum.\n                          type: number\n                      required:\n                      - buy\n                      - max_price\n                      - min_price\n                      - sell\n                      type: object\n                  required:\n                  - result\n                  type: object\n      summary: Get margins for given instrument, amount and price.\n      tags:\n      - trading\n      - private\n  /private/set_password_for_subaccount:\n    get:\n      parameters:\n      - description: The user id for the subaccount\n        explode: true\n        in: query\n        name: sid\n        required: true\n        schema:\n          type: integer\n        style: form\n      - description: The password for the subaccount\n        explode: true\n        in: query\n        name: password\n        required: true\n        schema:\n          type: string\n        style: form\n      responses:\n        200:\n          content:\n            application/json:\n              examples:\n                jsonObject:\n                  externalValue: examples/private/set_password_for_subaccount.response.json\n              schema:\n                allOf:\n                - properties:\n                    testnet:\n                      description: false for production server, true for test server\n                      type: boolean\n                      x-hide-in-docs: true\n                    jsonrpc:\n                      description: The JSON-RPC version (2.0)\n                      enum:\n                      - \"2.0\"\n                      type: string\n                    usDiff:\n                      description: Duration of the handling of the request, in microseconds\n                      type: integer\n                      x-hide-in-docs: true\n                    id:\n                      description: The id that was sent in the request\n                      type: integer\n                    usOut:\n                      description: The timestamp (in microseconds) of sending of the\n                        response\n                      type: integer\n                      x-hide-in-docs: true\n                    usIn:\n                      description: The timestamp (in microseconds) of receipt of the\n                        request\n                      type: integer\n                      x-hide-in-docs: true\n                  required:\n                  - jsonrpc\n                  - testnet\n                  - usDiff\n                  - usIn\n                  - usOut\n                - properties:\n                    result:\n                      description: Result of method execution. `ok` in case of success\n                      enum:\n                      - ok\n                      type: string\n                  required:\n                  - result\n                  type: object\n          description: ok response\n      summary: Set the password for the subaccount\n      tags:\n      - private\n      - account_management\n  /public/get_last_trades_by_currency_and_time:\n    get:\n      parameters:\n      - description: The currency symbol\n        explode: true\n        in: query\n        name: currency\n        required: true\n        schema:\n          description: Currency, i.e `\"BTC\"`, `\"ETH\"`\n          enum:\n          - BTC\n          - ETH\n          type: string\n        style: form\n      - description: Instrument kind, if not provided instruments of all kinds are\n          considered\n        explode: true\n        in: query\n        name: kind\n        required: false\n        schema:\n          description: Instrument kind, `\"future\"` or `\"option\"`\n          enum:\n          - future\n          - option\n          type: string\n        style: form\n      - description: The earliest timestamp to return result for\n        explode: true\n        in: query\n        name: start_timestamp\n        required: true\n        schema:\n          description: The timestamp (seconds since the Unix epoch, with millisecond\n            precision)\n          example: 1536569522277\n          type: integer\n        style: form\n      - description: The most recent timestamp to return result for\n        explode: true\n        in: query\n        name: end_timestamp\n        required: true\n        schema:\n          description: The timestamp (seconds since the Unix epoch, with millisecond\n            precision)\n          example: 1536569522277\n          type: integer\n        style: form\n      - description: Number of requested items, default - `10`\n        explode: true\n        in: query\n        name: count\n        required: false\n        schema:\n          type: integer\n        style: form\n      - description: Include trades older than 7 days, default - `false`\n        explode: true\n        in: query\n        name: include_old\n        required: false\n        schema:\n          type: boolean\n        style: form\n      - description: Direction of results sorting (`default` value means no sorting,\n          results will be returned in order in which they left the database)\n        explode: true\n        in: query\n        name: sorting\n        required: false\n        schema:\n          enum:\n          - asc\n          - desc\n          - default\n          type: string\n        style: form\n      responses:\n        200:\n          content:\n            application/json:\n              examples:\n                jsonObject:\n                  externalValue: examples/public/get_last_trades_by_currency_and_time.response.json\n              schema:\n                allOf:\n                - properties:\n                    testnet:\n                      description: false for production server, true for test server\n                      type: boolean\n                      x-hide-in-docs: true\n                    jsonrpc:\n                      description: The JSON-RPC version (2.0)\n                      enum:\n                      - \"2.0\"\n                      type: string\n                    usDiff:\n                      description: Duration of the handling of the request, in microseconds\n                      type: integer\n                      x-hide-in-docs: true\n                    id:\n                      description: The id that was sent in the request\n                      type: integer\n                    usOut:\n                      description: The timestamp (in microseconds) of sending of the\n                        response\n                      type: integer\n                      x-hide-in-docs: true\n                    usIn:\n                      description: The timestamp (in microseconds) of receipt of the\n                        request\n                      type: integer\n                      x-hide-in-docs: true\n                  required:\n                  - jsonrpc\n                  - testnet\n                  - usDiff\n                  - usIn\n                  - usOut\n                - properties:\n                    result:\n                      properties:\n                        has_more:\n                          type: boolean\n                        trades:\n                          items:\n                            properties:\n                              direction:\n                                description: Trade direction of the taker\n                                enum:\n                                - buy\n                                - sell\n                                type: string\n                              tick_direction:\n                                description: Direction of the \"tick\" (`0` = Plus Tick,\n                                  `1` = Zero-Plus Tick, `2` = Minus Tick, `3` = Zero-Minus\n                                  Tick).\n                                enum:\n                                - 0\n                                - 1\n                                - 2\n                                - 3\n                                type: integer\n                              timestamp:\n                                description: The timestamp of the trade\n                                example: 1517329113791\n                                type: integer\n                              price:\n                                description: The price of the trade\n                                type: number\n                              trade_seq:\n                                description: The sequence number of the trade within\n                                  instrument\n                                type: integer\n                              trade_id:\n                                description: Unique (per currency) trade identifier\n                                type: string\n                              iv:\n                                description: Option implied volatility for the price\n                                  (Option only)\n                                type: number\n                              index_price:\n                                description: Index Price at the moment of trade\n                                type: number\n                              amount:\n                                description: Trade amount. For perpetual and futures\n                                  - in USD units, for options it is amount of corresponding\n                                  cryptocurrency contracts, e.g., BTC or ETH.\n                                type: number\n                              instrument_name:\n                                description: Unique instrument identifier\n                                example: BTC-PERPETUAL\n                                type: string\n                            required:\n                            - amount\n                            - direction\n                            - index_price\n                            - instrument_name\n                            - price\n                            - tick_direction\n                            - timestamp\n                            - trade_id\n                            - trade_seq\n                          type: array\n                      required:\n                      - has_more\n                      - trades\n                      type: object\n                  required:\n                  - result\n                  type: object\n      summary: Retrieve the latest trades that have occurred for instruments in a\n        specific currency symbol and within given time range.\n      tags:\n      - market_data\n      - public\n  /private/change_subaccount_name:\n    get:\n      parameters:\n      - description: The user id for the subaccount\n        explode: true\n        in: query\n        name: sid\n        required: true\n        schema:\n          type: integer\n        style: form\n      - description: The new user name\n        explode: true\n        in: query\n        name: name\n        required: true\n        schema:\n          example: newUserName\n          type: string\n        style: form\n      responses:\n        200:\n          content:\n            application/json:\n              examples:\n                jsonObject:\n                  externalValue: examples/private/change_subaccount_name.response.json\n              schema:\n                allOf:\n                - properties:\n                    testnet:\n                      description: false for production server, true for test server\n                      type: boolean\n                      x-hide-in-docs: true\n                    jsonrpc:\n                      description: The JSON-RPC version (2.0)\n                      enum:\n                      - \"2.0\"\n                      type: string\n                    usDiff:\n                      description: Duration of the handling of the request, in microseconds\n                      type: integer\n                      x-hide-in-docs: true\n                    id:\n                      description: The id that was sent in the request\n                      type: integer\n                    usOut:\n                      description: The timestamp (in microseconds) of sending of the\n                        response\n                      type: integer\n                      x-hide-in-docs: true\n                    usIn:\n                      description: The timestamp (in microseconds) of receipt of the\n                        request\n                      type: integer\n                      x-hide-in-docs: true\n                  required:\n                  - jsonrpc\n                  - testnet\n                  - usDiff\n                  - usIn\n                  - usOut\n                - properties:\n                    result:\n                      description: Result of method execution. `ok` in case of success\n                      enum:\n                      - ok\n                      type: string\n                  required:\n                  - result\n                  type: object\n          description: ok response\n      summary: Change the user name for a subaccount\n      tags:\n      - private\n      - account_management\n  /private/cancel_withdrawal:\n    get:\n      parameters:\n      - description: The currency symbol\n        explode: true\n        in: query\n        name: currency\n        required: true\n        schema:\n          description: Currency, i.e `\"BTC\"`, `\"ETH\"`\n          enum:\n          - BTC\n          - ETH\n          type: string\n        style: form\n      - description: The withdrawal id\n        explode: true\n        in: query\n        name: id\n        required: true\n        schema:\n          example: 1\n          type: number\n        style: form\n      responses:\n        200:\n          content:\n            application/json:\n              examples:\n                jsonObject:\n                  externalValue: examples/private/cancel_withdrawal.response.json\n              schema:\n                allOf:\n                - properties:\n                    testnet:\n                      description: false for production server, true for test server\n                      type: boolean\n                      x-hide-in-docs: true\n                    jsonrpc:\n                      description: The JSON-RPC version (2.0)\n                      enum:\n                      - \"2.0\"\n                      type: string\n                    usDiff:\n                      description: Duration of the handling of the request, in microseconds\n                      type: integer\n                      x-hide-in-docs: true\n                    id:\n                      description: The id that was sent in the request\n                      type: integer\n                    usOut:\n                      description: The timestamp (in microseconds) of sending of the\n                        response\n                      type: integer\n                      x-hide-in-docs: true\n                    usIn:\n                      description: The timestamp (in microseconds) of receipt of the\n                        request\n                      type: integer\n                      x-hide-in-docs: true\n                  required:\n                  - jsonrpc\n                  - testnet\n                  - usDiff\n                  - usIn\n                  - usOut\n                - properties:\n                    result:\n                      properties:\n                        updated_timestamp:\n                          description: The timestamp (seconds since the Unix epoch,\n                            with millisecond precision)\n                          example: 1536569522277\n                          type: integer\n                        fee:\n                          description: Fee in currency\n                          example: 0.000023\n                          type: number\n                        confirmed_timestamp:\n                          description: The timestamp (seconds since the Unix epoch,\n                            with millisecond precision) of withdrawal confirmation,\n                            `null` when not confirmed\n                          example: 1536569522277\n                          nullable: true\n                          type: integer\n                        amount:\n                          description: Amount of funds in given currency\n                          example: 1\n                          type: number\n                        priority:\n                          description: Id of priority level\n                          example: 1\n                          type: number\n                        currency:\n                          description: Currency, i.e `\"BTC\"`, `\"ETH\"`\n                          enum:\n                          - BTC\n                          - ETH\n                          type: string\n                        state:\n                          description: 'Withdrawal state, allowed values : `unconfirmed`,\n                            `confirmed`, `cancelled`, `completed`, `interrupted`,\n                            `rejected`'\n                          enum:\n                          - unconfirmed\n                          - confirmed\n                          - cancelled\n                          - completed\n                          - interrupted\n                          - rejected\n                          type: string\n                        address:\n                          description: Address in proper format for currency\n                          example: 1A1zP1eP5QGefi2DMPTfTL5SLmv7DivfNa\n                          type: string\n                        created_timestamp:\n                          description: The timestamp (seconds since the Unix epoch,\n                            with millisecond precision)\n                          example: 1536569522277\n                          type: integer\n                        id:\n                          description: Withdrawal id in Deribit system\n                          example: 1\n                          type: integer\n                        transaction_id:\n                          description: Transaction id in proper format for currency,\n                            `null` if id is not available\n                          example: 1b1fb5568515e2b79503501e3d3680b2d0838d5dfc2d15a04eb8cd9fbbe0b572\n                          nullable: true\n                          type: string\n                      required:\n                      - address\n                      - amount\n                      - currency\n                      - received_timestamp\n                      - state\n                      - transaction_id\n                      - updated_timestamp\n                      type: object\n                  required:\n                  - result\n                  type: object\n      summary: Cancels withdrawal request\n      tags:\n      - wallet\n      - private\n  /public/get_historical_volatility:\n    get:\n      parameters:\n      - description: The currency symbol\n        explode: true\n        in: query\n        name: currency\n        required: true\n        schema:\n          description: Currency, i.e `\"BTC\"`, `\"ETH\"`\n          enum:\n          - BTC\n          - ETH\n          type: string\n        style: form\n      responses:\n        200:\n          content:\n            application/json:\n              examples:\n                jsonObject:\n                  externalValue: examples/public/get_historical_volatility.response.json\n              schema:\n                allOf:\n                - properties:\n                    testnet:\n                      description: false for production server, true for test server\n                      type: boolean\n                      x-hide-in-docs: true\n                    jsonrpc:\n                      description: The JSON-RPC version (2.0)\n                      enum:\n                      - \"2.0\"\n                      type: string\n                    usDiff:\n                      description: Duration of the handling of the request, in microseconds\n                      type: integer\n                      x-hide-in-docs: true\n                    id:\n                      description: The id that was sent in the request\n                      type: integer\n                    usOut:\n                      description: The timestamp (in microseconds) of sending of the\n                        response\n                      type: integer\n                      x-hide-in-docs: true\n                    usIn:\n                      description: The timestamp (in microseconds) of receipt of the\n                        request\n                      type: integer\n                      x-hide-in-docs: true\n                  required:\n                  - jsonrpc\n                  - testnet\n                  - usDiff\n                  - usIn\n                  - usOut\n                - properties:\n                    result:\n                      items:\n                        type: timestamp-value pair\n                      type: array\n                  required:\n                  - result\n                  type: object\n          description: ok response\n      summary: Provides information about historical volatility for given cryptocurrency.\n      tags:\n      - public\n      - market_data\n  /private/get_order_history_by_instrument:\n    get:\n      parameters:\n      - description: Instrument name\n        explode: true\n        in: query\n        name: instrument_name\n        required: true\n        schema:\n          description: Unique instrument identifier\n          example: BTC-PERPETUAL\n          type: string\n        style: form\n      - description: Number of requested items, default - `20`\n        explode: true\n        in: query\n        name: count\n        required: false\n        schema:\n          type: integer\n        style: form\n      - description: The offset for pagination, default - `0`\n        explode: true\n        in: query\n        name: offset\n        required: false\n        schema:\n          example: 10\n          type: integer\n        style: form\n      - description: Include in result orders older than 2 days, default - `false`\n        explode: true\n        in: query\n        name: include_old\n        required: false\n        schema:\n          example: false\n          type: boolean\n        style: form\n      - description: Include in result fully unfilled closed orders, default - `false`\n        explode: true\n        in: query\n        name: include_unfilled\n        required: false\n        schema:\n          example: false\n          type: boolean\n        style: form\n      responses:\n        200:\n          content:\n            application/json:\n              examples:\n                jsonObject:\n                  externalValue: examples/private/get_order_history_by_instrument.response.json\n              schema:\n                allOf:\n                - properties:\n                    testnet:\n                      description: false for production server, true for test server\n                      type: boolean\n                      x-hide-in-docs: true\n                    jsonrpc:\n                      description: The JSON-RPC version (2.0)\n                      enum:\n                      - \"2.0\"\n                      type: string\n                    usDiff:\n                      description: Duration of the handling of the request, in microseconds\n                      type: integer\n                      x-hide-in-docs: true\n                    id:\n                      description: The id that was sent in the request\n                      type: integer\n                    usOut:\n                      description: The timestamp (in microseconds) of sending of the\n                        response\n                      type: integer\n                      x-hide-in-docs: true\n                    usIn:\n                      description: The timestamp (in microseconds) of receipt of the\n                        request\n                      type: integer\n                      x-hide-in-docs: true\n                  required:\n                  - jsonrpc\n                  - testnet\n                  - usDiff\n                  - usIn\n                  - usOut\n                - properties:\n                    result:\n                      items:\n                        properties:\n                          direction:\n                            description: direction, `buy` or `sell`\n                            enum:\n                            - buy\n                            - sell\n                            type: string\n                          reduce_only:\n                            description: '`true` for reduce-only orders only'\n                            type: boolean\n                          triggered:\n                            description: Whether the stop order has been triggered\n                              (Only for stop orders)\n                            type: boolean\n                          order_id:\n                            description: Unique order identifier\n                            example: ETH-100234\n                            type: string\n                          price:\n                            description: Price in base currency\n                            type: number\n                          time_in_force:\n                            description: 'Order time in force: `\"good_til_cancelled\"`,\n                              `\"fill_or_kill\"`, `\"immediate_or_cancel\"`'\n                            enum:\n                            - good_til_cancelled\n                            - fill_or_kill\n                            - immediate_or_cancel\n                            type: string\n                          api:\n                            description: '`true` if created with API'\n                            type: boolean\n                          order_state:\n                            description: order state, `\"open\"`, `\"filled\"`, `\"rejected\"`,\n                              `\"cancelled\"`, `\"untriggered\"`\n                            enum:\n                            - open\n                            - filled\n                            - rejected\n                            - cancelled\n                            - untriggered\n                            - triggered\n                            type: string\n                          implv:\n                            description: Implied volatility in percent. (Only if `advanced=\"implv\"`)\n                            type: number\n                          advanced:\n                            description: |\n                              advanced type: `\"usd\"` or `\"implv\"` (Only for options; field is omitted if not applicable).\n                            enum:\n                            - usd\n                            - implv\n                            type: string\n                          post_only:\n                            description: '`true` for post-only orders only'\n                            type: boolean\n                          usd:\n                            description: Option price in USD (Only if `advanced=\"usd\"`)\n                            type: number\n                          stop_price:\n                            description: stop price (Only for future stop orders)\n                            type: number\n                          order_type:\n                            description: order type, `\"limit\"`, `\"market\"`, `\"stop_limit\"`,\n                              `\"stop_market\"`\n                            enum:\n                            - market\n                            - limit\n                            - stop_market\n                            - stop_limit\n                            type: string\n                          last_update_timestamp:\n                            description: The timestamp (seconds since the Unix epoch,\n                              with millisecond precision)\n                            example: 1536569522277\n                            type: integer\n                          original_order_type:\n                            description: Original order type. Optional field\n                            enum:\n                            - market\n                            type: string\n                          max_show:\n                            description: Maximum amount within an order to be shown\n                              to other traders, 0 for invisible order.\n                            type: number\n                          profit_loss:\n                            description: Profit and loss in base currency.\n                            type: number\n                          is_liquidation:\n                            description: '`true` if order was automatically created\n                              during liquidation'\n                            type: boolean\n                          filled_amount:\n                            description: Filled amount of the order. For perpetual\n                              and futures the filled_amount is in USD units, for options\n                              - in units or corresponding cryptocurrency contracts,\n                              e.g., BTC or ETH.\n                            type: number\n                          label:\n                            description: user defined label (up to 32 characters)\n                            type: string\n                          commission:\n                            description: Commission paid so far (in base currency)\n                            type: number\n                          amount:\n                            description: It represents the requested order size. For\n                              perpetual and futures the amount is in USD units, for\n                              options it is amount of corresponding cryptocurrency\n                              contracts, e.g., BTC or ETH.\n                            type: number\n                          trigger:\n                            description: 'Trigger type (Only for stop orders). Allowed\n                              values: `\"index_price\"`, `\"mark_price\"`, `\"last_price\"`.'\n                            enum:\n                            - index_price\n                            - mark_price\n                            - last_price\n                            type: string\n                          instrument_name:\n                            description: Unique instrument identifier\n                            example: BTC-PERPETUAL\n                            type: string\n                          creation_timestamp:\n                            description: The timestamp (seconds since the Unix epoch,\n                              with millisecond precision)\n                            example: 1536569522277\n                            type: integer\n                          average_price:\n                            description: Average fill price of the order\n                            type: number\n                        required:\n                        - api\n                        - creation_timestamp\n                        - direction\n                        - instrument\n                        - is_liquidation\n                        - label\n                        - last_update_timestamp\n                        - max_show\n                        - order_id\n                        - order_state\n                        - order_type\n                        - post_only\n                        - price\n                        - time_in_force\n                        type: object\n                      type: array\n                  required:\n                  - result\n                  type: object\n      summary: Retrieves history of orders that have been partially or fully filled.\n      tags:\n      - trading\n      - private\n  /private/cancel_transfer_by_id:\n    get:\n      parameters:\n      - description: The currency symbol\n        explode: true\n        in: query\n        name: currency\n        required: true\n        schema:\n          description: Currency, i.e `\"BTC\"`, `\"ETH\"`\n          enum:\n          - BTC\n          - ETH\n          type: string\n        style: form\n      - description: Id of transfer\n        explode: true\n        in: query\n        name: id\n        required: true\n        schema:\n          description: Id of transfer\n          example: 12\n          type: integer\n        style: form\n      - description: TFA code, required when TFA is enabled for current account\n        explode: true\n        in: query\n        name: tfa\n        required: false\n        schema:\n          type: string\n        style: form\n      responses:\n        200:\n          content:\n            application/json:\n              examples:\n                jsonObject:\n                  externalValue: examples/private/cancel_transfer_by_id.response.json\n              schema:\n                allOf:\n                - properties:\n                    testnet:\n                      description: false for production server, true for test server\n                      type: boolean\n                      x-hide-in-docs: true\n                    jsonrpc:\n                      description: The JSON-RPC version (2.0)\n                      enum:\n                      - \"2.0\"\n                      type: string\n                    usDiff:\n                      description: Duration of the handling of the request, in microseconds\n                      type: integer\n                      x-hide-in-docs: true\n                    id:\n                      description: The id that was sent in the request\n                      type: integer\n                    usOut:\n                      description: The timestamp (in microseconds) of sending of the\n                        response\n                      type: integer\n                      x-hide-in-docs: true\n                    usIn:\n                      description: The timestamp (in microseconds) of receipt of the\n                        request\n                      type: integer\n                      x-hide-in-docs: true\n                  required:\n                  - jsonrpc\n                  - testnet\n                  - usDiff\n                  - usIn\n                  - usOut\n                - properties:\n                    result:\n                      properties:\n                        updated_timestamp:\n                          description: The timestamp (seconds since the Unix epoch,\n                            with millisecond precision)\n                          example: 1536569522277\n                          type: integer\n                        direction:\n                          description: Transfer direction\n                          enum:\n                          - payment\n                          - income\n                          type: string\n                        amount:\n                          description: Amount of funds in given currency\n                          example: 1\n                          type: number\n                        other_side:\n                          description: For transfer from/to subaccount returns this\n                            subaccount name, for transfer to other account returns\n                            address, for transfer from other account returns that\n                            accounts username.\n                          example: Smith\n                          type: string\n                        currency:\n                          description: Currency, i.e `\"BTC\"`, `\"ETH\"`\n                          enum:\n                          - BTC\n                          - ETH\n                          type: string\n                        state:\n                          description: 'Transfer state, allowed values : `prepared`,\n                            `confirmed`, `cancelled`, `waiting_for_admin`, `rejection_reason`'\n                          enum:\n                          - prepared\n                          - confirmed\n                          - cancelled\n                          - waiting_for_admin\n                          - rejection_reason\n                          type: string\n                        created_timestamp:\n                          description: The timestamp (seconds since the Unix epoch,\n                            with millisecond precision)\n                          example: 1536569522277\n                          type: integer\n                        type:\n                          description: 'Type of transfer: `user` - sent to user, `subaccount`\n                            - sent to subaccount'\n                          enum:\n                          - user\n                          - subaccount\n                          type: string\n                        id:\n                          description: Id of transfer\n                          example: 12\n                          type: integer\n                      required:\n                      - amount\n                      - created_timestamp\n                      - currency\n                      - id\n                      - other_side\n                      - other_side_type\n                      - state\n                      - type\n                      - updated_timestamp\n                      type: object\n                  required:\n                  - result\n                  type: object\n          description: ok response\n      summary: Cancel transfer\n      tags:\n      - private\n      - wallet\n  /private/get_user_trades_by_order:\n    get:\n      parameters:\n      - description: The order id\n        explode: true\n        in: query\n        name: order_id\n        required: true\n        schema:\n          description: Unique order identifier\n          example: ETH-100234\n          type: string\n        style: form\n      - description: Direction of results sorting (`default` value means no sorting,\n          results will be returned in order in which they left the database)\n        explode: true\n        in: query\n        name: sorting\n        required: false\n        schema:\n          enum:\n          - asc\n          - desc\n          - default\n          type: string\n        style: form\n      responses:\n        200:\n          content:\n            application/json:\n              examples:\n                jsonObject:\n                  externalValue: examples/private/get_user_trades_by_order.response.json\n              schema:\n                allOf:\n                - properties:\n                    testnet:\n                      description: false for production server, true for test server\n                      type: boolean\n                      x-hide-in-docs: true\n                    jsonrpc:\n                      description: The JSON-RPC version (2.0)\n                      enum:\n                      - \"2.0\"\n                      type: string\n                    usDiff:\n                      description: Duration of the handling of the request, in microseconds\n                      type: integer\n                      x-hide-in-docs: true\n                    id:\n                      description: The id that was sent in the request\n                      type: integer\n                    usOut:\n                      description: The timestamp (in microseconds) of sending of the\n                        response\n                      type: integer\n                      x-hide-in-docs: true\n                    usIn:\n                      description: The timestamp (in microseconds) of receipt of the\n                        request\n                      type: integer\n                      x-hide-in-docs: true\n                  required:\n                  - jsonrpc\n                  - testnet\n                  - usDiff\n                  - usIn\n                  - usOut\n                - items:\n                    properties:\n                      direction:\n                        description: Trade direction of the taker\n                        enum:\n                        - buy\n                        - sell\n                        type: string\n                      fee_currency:\n                        description: Currency, i.e `\"BTC\"`, `\"ETH\"`\n                        enum:\n                        - BTC\n                        - ETH\n                        type: string\n                      order_id:\n                        description: Id of the user order (maker or taker), i.e. subscriber's\n                          order id that took part in the trade\n                        type: string\n                      timestamp:\n                        description: The timestamp of the trade\n                        example: 1517329113791\n                        type: integer\n                      price:\n                        description: The price of the trade\n                        type: number\n                      iv:\n                        description: Option implied volatility for the price (Option\n                          only)\n                        type: number\n                      trade_id:\n                        description: Unique (per currency) trade identifier\n                        type: string\n                      fee:\n                        description: User's fee in units of the specified `fee_currency`\n                        type: number\n                      order_type:\n                        description: 'Order type: `\"limit`, `\"market\"`, or `\"liquidation\"`'\n                        enum:\n                        - limit\n                        - market\n                        - liquidation\n                        type: string\n                      trade_seq:\n                        description: The sequence number of the trade within instrument\n                        type: integer\n                      self_trade:\n                        description: '`true` if the trade is against own order. This\n                          can only happen when your account has self-trading enabled.\n                          Contact an administrator if you think you need that'\n                        type: boolean\n                      state:\n                        description: order state, `\"open\"`, `\"filled\"`, `\"rejected\"`,\n                          `\"cancelled\"`, `\"untriggered\"` or `\"archive\"` (if order\n                          was archived)\n                        enum:\n                        - open\n                        - filled\n                        - rejected\n                        - cancelled\n                        - untriggered\n                        - archive\n                        type: string\n                      label:\n                        description: User defined label (presented only when previously\n                          set for order by user)\n                        type: string\n                      index_price:\n                        description: Index Price at the moment of trade\n                        type: number\n                      amount:\n                        description: Trade amount. For perpetual and futures - in\n                          USD units, for options it is amount of corresponding cryptocurrency\n                          contracts, e.g., BTC or ETH.\n                        type: number\n                      instrument_name:\n                        description: Unique instrument identifier\n                        example: BTC-PERPETUAL\n                        type: string\n                      tick_direction:\n                        description: Direction of the \"tick\" (`0` = Plus Tick, `1`\n                          = Zero-Plus Tick, `2` = Minus Tick, `3` = Zero-Minus Tick).\n                        enum:\n                        - 0\n                        - 1\n                        - 2\n                        - 3\n                        type: integer\n                      matching_id:\n                        description: Always `null`, except for a self-trade which\n                          is possible only if self-trading is switched on for the\n                          account (in that case this will be id of the maker order\n                          of the subscriber)\n                        type: string\n                      liquidity:\n                        description: 'Describes what was role of users order: `\"M\"`\n                          when it was maker order, `\"T\"` when it was taker order'\n                        enum:\n                        - M\n                        - T\n                        type: string\n                    required:\n                    - amount\n                    - direction\n                    - fee\n                    - fee_currency\n                    - index_price\n                    - instrument_name\n                    - matching_id\n                    - order_id\n                    - price\n                    - self_trade\n                    - state\n                    - tick_direction\n                    - timestamp\n                    - trade_id\n                    - trade_seq\n                  type: array\n      summary: Retrieve the list of user trades that was created for given order\n      tags:\n      - trading\n      - private\n  /private/get_order_margin_by_ids:\n    get:\n      parameters:\n      - description: Ids of orders\n        explode: true\n        in: query\n        name: ids\n        required: true\n        schema:\n          items:\n            example: \"123456\"\n            type: string\n          type: array\n        style: form\n      responses:\n        200:\n          content:\n            application/json:\n              examples:\n                jsonObject:\n                  externalValue: examples/private/get_order_margin_by_ids.response.json\n              schema:\n                allOf:\n                - properties:\n                    testnet:\n                      description: false for production server, true for test server\n                      type: boolean\n                      x-hide-in-docs: true\n                    jsonrpc:\n                      description: The JSON-RPC version (2.0)\n                      enum:\n                      - \"2.0\"\n                      type: string\n                    usDiff:\n                      description: Duration of the handling of the request, in microseconds\n                      type: integer\n                      x-hide-in-docs: true\n                    id:\n                      description: The id that was sent in the request\n                      type: integer\n                    usOut:\n                      description: The timestamp (in microseconds) of sending of the\n                        response\n                      type: integer\n                      x-hide-in-docs: true\n                    usIn:\n                      description: The timestamp (in microseconds) of receipt of the\n                        request\n                      type: integer\n                      x-hide-in-docs: true\n                  required:\n                  - jsonrpc\n                  - testnet\n                  - usDiff\n                  - usIn\n                  - usOut\n                - properties:\n                    result:\n                      items:\n                        properties:\n                          order_id:\n                            description: Unique order identifier\n                            example: ETH-100234\n                            type: string\n                          initial_margin:\n                            description: Initial margin of order, in base currency\n                            type: number\n                        required:\n                        - initial_margin\n                        - order_id\n                        type: object\n                      type: array\n                  required:\n                  - result\n                  type: object\n      summary: Retrieves initial margins of given orders\n      tags:\n      - trading\n      - private\n  /private/buy:\n    get:\n      parameters:\n      - description: Instrument name\n        explode: true\n        in: query\n        name: instrument_name\n        required: true\n        schema:\n          description: Unique instrument identifier\n          example: BTC-PERPETUAL\n          type: string\n        style: form\n      - description: It represents the requested order size. For perpetual and futures\n          the amount is in USD units, for options it is amount of corresponding cryptocurrency\n          contracts, e.g., BTC or ETH\n        explode: true\n        in: query\n        name: amount\n        required: true\n        schema:\n          type: number\n        style: form\n      - description: 'The order type, default: `\"limit\"`'\n        explode: true\n        in: query\n        name: type\n        required: false\n        schema:\n          enum:\n          - limit\n          - stop_limit\n          - market\n          - stop_market\n          type: string\n        style: form\n      - description: user defined label for the order (maximum 32 characters)\n        explode: true\n        in: query\n        name: label\n        required: false\n        schema:\n          type: string\n        style: form\n      - description: \u003cp\u003eThe order price in base currency (Only for limit and stop_limit\n          orders)\u003c/p\u003e \u003cp\u003eWhen adding order with advanced=usd, the field price should\n          be the option price value in USD.\u003c/p\u003e \u003cp\u003eWhen adding order with advanced=implv,\n          the field price should be a value of implied volatility in percentages.\n          For example,  price=100, means implied volatility of 100%\u003c/p\u003e\n        explode: true\n        in: query\n        name: price\n        required: false\n        schema:\n          type: number\n        style: form\n      - description: \u003cp\u003eSpecifies how long the order remains in effect. Default `\"good_til_cancelled\"`\u003c/p\u003e\n          \u003cul\u003e \u003cli\u003e`\"good_til_cancelled\"` - unfilled order remains in order book until\n          cancelled\u003c/li\u003e \u003cli\u003e`\"fill_or_kill\"` - execute a transaction immediately\n          and completely or not at all\u003c/li\u003e \u003cli\u003e`\"immediate_or_cancel\"` - execute\n          a transaction immediately, and any portion of the order that cannot be immediately\n          filled is cancelled\u003c/li\u003e \u003c/ul\u003e\n        explode: true\n        in: query\n        name: time_in_force\n        required: false\n        schema:\n          default: good_til_cancelled\n          enum:\n          - good_til_cancelled\n          - fill_or_kill\n          - immediate_or_cancel\n          type: string\n        style: form\n      - description: Maximum amount within an order to be shown to other customers,\n          `0` for invisible order\n        explode: true\n        in: query\n        name: max_show\n        required: false\n        schema:\n          default: 1\n          type: number\n        style: form\n      - description: \u003cp\u003eIf true, the order is considered post-only. If the new price\n          would cause the order to be filled immediately (as taker), the price will\n          be changed to be just below the bid.\u003c/p\u003e \u003cp\u003eOnly valid in combination with\n          time_in_force=`\"good_til_cancelled\"`\u003c/p\u003e\n        explode: true\n        in: query\n        name: post_only\n        required: false\n        schema:\n          default: true\n          type: boolean\n        style: form\n      - description: If `true`, the order is considered reduce-only which is intended\n          to only reduce a current position\n        explode: true\n        in: query\n        name: reduce_only\n        required: false\n        schema:\n          default: false\n          type: boolean\n        style: form\n      - description: Stop price, required for stop limit orders (Only for stop orders)\n        explode: true\n        in: query\n        name: stop_price\n        required: false\n        schema:\n          type: number\n        style: form\n      - description: Defines trigger type, required for `\"stop_limit\"` order type\n        explode: true\n        in: query\n        name: trigger\n        required: false\n        schema:\n          description: 'Trigger type (Only for stop orders). Allowed values: `\"index_price\"`,\n            `\"mark_price\"`, `\"last_price\"`.'\n          enum:\n          - index_price\n          - mark_price\n          - last_price\n          type: string\n        style: form\n      - description: Advanced option order type. (Only for options)\n        explode: true\n        in: query\n        name: advanced\n        required: false\n        schema:\n          description: |\n            advanced type: `\"usd\"` or `\"implv\"` (Only for options; field is omitted if not applicable).\n          enum:\n          - usd\n          - implv\n          type: string\n        style: form\n      responses:\n        200:\n          content:\n            application/json:\n              examples:\n                jsonObject:\n                  externalValue: examples/private/buy.response.json\n              schema:\n                allOf:\n                - properties:\n                    testnet:\n                      description: false for production server, true for test server\n                      type: boolean\n                      x-hide-in-docs: true\n                    jsonrpc:\n                      description: The JSON-RPC version (2.0)\n                      enum:\n                      - \"2.0\"\n                      type: string\n                    usDiff:\n                      description: Duration of the handling of the request, in microseconds\n                      type: integer\n                      x-hide-in-docs: true\n                    id:\n                      description: The id that was sent in the request\n                      type: integer\n                    usOut:\n                      description: The timestamp (in microseconds) of sending of the\n                        response\n                      type: integer\n                      x-hide-in-docs: true\n                    usIn:\n                      description: The timestamp (in microseconds) of receipt of the\n                        request\n                      type: integer\n                      x-hide-in-docs: true\n                  required:\n                  - jsonrpc\n                  - testnet\n                  - usDiff\n                  - usIn\n                  - usOut\n                - properties:\n                    result:\n                      properties:\n                        trades:\n                          items:\n                            properties:\n                              direction:\n                                description: Trade direction of the taker\n                                enum:\n                                - buy\n                                - sell\n                                type: string\n                              fee_currency:\n                                description: Currency, i.e `\"BTC\"`, `\"ETH\"`\n                                enum:\n                                - BTC\n                                - ETH\n                                type: string\n                              order_id:\n                                description: Id of the user order (maker or taker),\n                                  i.e. subscriber's order id that took part in the\n                                  trade\n                                type: string\n                              timestamp:\n                                description: The timestamp of the trade\n                                example: 1517329113791\n                                type: integer\n                              price:\n                                description: The price of the trade\n                                type: number\n                              iv:\n                                description: Option implied volatility for the price\n                                  (Option only)\n                                type: number\n                              trade_id:\n                                description: Unique (per currency) trade identifier\n                                type: string\n                              fee:\n                                description: User's fee in units of the specified\n                                  `fee_currency`\n                                type: number\n                              order_type:\n                                description: 'Order type: `\"limit`, `\"market\"`, or\n                                  `\"liquidation\"`'\n                                enum:\n                                - limit\n                                - market\n                                - liquidation\n                                type: string\n                              trade_seq:\n                                description: The sequence number of the trade within\n                                  instrument\n                                type: integer\n                              self_trade:\n                                description: '`true` if the trade is against own order.\n                                  This can only happen when your account has self-trading\n                                  enabled. Contact an administrator if you think you\n                                  need that'\n                                type: boolean\n                              state:\n                                description: order state, `\"open\"`, `\"filled\"`, `\"rejected\"`,\n                                  `\"cancelled\"`, `\"untriggered\"` or `\"archive\"` (if\n                                  order was archived)\n                                enum:\n                                - open\n                                - filled\n                                - rejected\n                                - cancelled\n                                - untriggered\n                                - archive\n                                type: string\n                              label:\n                                description: User defined label (presented only when\n                                  previously set for order by user)\n                                type: string\n                              index_price:\n                                description: Index Price at the moment of trade\n                                type: number\n                              amount:\n                                description: Trade amount. For perpetual and futures\n                                  - in USD units, for options it is amount of corresponding\n                                  cryptocurrency contracts, e.g., BTC or ETH.\n                                type: number\n                              instrument_name:\n                                description: Unique instrument identifier\n                                example: BTC-PERPETUAL\n                                type: string\n                              tick_direction:\n                                description: Direction of the \"tick\" (`0` = Plus Tick,\n                                  `1` = Zero-Plus Tick, `2` = Minus Tick, `3` = Zero-Minus\n                                  Tick).\n                                enum:\n                                - 0\n                                - 1\n                                - 2\n                                - 3\n                                type: integer\n                              matching_id:\n                                description: Always `null`, except for a self-trade\n                                  which is possible only if self-trading is switched\n                                  on for the account (in that case this will be id\n                                  of the maker order of the subscriber)\n                                type: string\n                              liquidity:\n                                description: 'Describes what was role of users order:\n                                  `\"M\"` when it was maker order, `\"T\"` when it was\n                                  taker order'\n                                enum:\n                                - M\n                                - T\n                                type: string\n                            required:\n                            - amount\n                            - direction\n                            - fee\n                            - fee_currency\n                            - index_price\n                            - instrument_name\n                            - matching_id\n                            - order_id\n                            - price\n                            - self_trade\n                            - state\n                            - tick_direction\n                            - timestamp\n                            - trade_id\n                            - trade_seq\n                          type: array\n                        order:\n                          properties:\n                            direction:\n                              description: direction, `buy` or `sell`\n                              enum:\n                              - buy\n                              - sell\n                              type: string\n                            reduce_only:\n                              description: '`true` for reduce-only orders only'\n                              type: boolean\n                            triggered:\n                              description: Whether the stop order has been triggered\n                                (Only for stop orders)\n                              type: boolean\n                            order_id:\n                              description: Unique order identifier\n                              example: ETH-100234\n                              type: string\n                            price:\n                              description: Price in base currency\n                              type: number\n                            time_in_force:\n                              description: 'Order time in force: `\"good_til_cancelled\"`,\n                                `\"fill_or_kill\"`, `\"immediate_or_cancel\"`'\n                              enum:\n                              - good_til_cancelled\n                              - fill_or_kill\n                              - immediate_or_cancel\n                              type: string\n                            api:\n                              description: '`true` if created with API'\n                              type: boolean\n                            order_state:\n                              description: order state, `\"open\"`, `\"filled\"`, `\"rejected\"`,\n                                `\"cancelled\"`, `\"untriggered\"`\n                              enum:\n                              - open\n                              - filled\n                              - rejected\n                              - cancelled\n                              - untriggered\n                              - triggered\n                              type: string\n                            implv:\n                              description: Implied volatility in percent. (Only if\n                                `advanced=\"implv\"`)\n                              type: number\n                            advanced:\n                              description: |\n                                advanced type: `\"usd\"` or `\"implv\"` (Only for options; field is omitted if not applicable).\n                              enum:\n                              - usd\n                              - implv\n                              type: string\n                            post_only:\n                              description: '`true` for post-only orders only'\n                              type: boolean\n                            usd:\n                              description: Option price in USD (Only if `advanced=\"usd\"`)\n                              type: number\n                            stop_price:\n                              description: stop price (Only for future stop orders)\n                              type: number\n                            order_type:\n                              description: order type, `\"limit\"`, `\"market\"`, `\"stop_limit\"`,\n                                `\"stop_market\"`\n                              enum:\n                              - market\n                              - limit\n                              - stop_market\n                              - stop_limit\n                              type: string\n                            last_update_timestamp:\n                              description: The timestamp (seconds since the Unix epoch,\n                                with millisecond precision)\n                              example: 1536569522277\n                              type: integer\n                            original_order_type:\n                              description: Original order type. Optional field\n                              enum:\n                              - market\n                              type: string\n                            max_show:\n                              description: Maximum amount within an order to be shown\n                                to other traders, 0 for invisible order.\n                              type: number\n                            profit_loss:\n                              description: Profit and loss in base currency.\n                              type: number\n                            is_liquidation:\n                              description: '`true` if order was automatically created\n                                during liquidation'\n                              type: boolean\n                            filled_amount:\n                              description: Filled amount of the order. For perpetual\n                                and futures the filled_amount is in USD units, for\n                                options - in units or corresponding cryptocurrency\n                                contracts, e.g., BTC or ETH.\n                              type: number\n                            label:\n                              description: user defined label (up to 32 characters)\n                              type: string\n                            commission:\n                              description: Commission paid so far (in base currency)\n                              type: number\n                            amount:\n                              description: It represents the requested order size.\n                                For perpetual and futures the amount is in USD units,\n                                for options it is amount of corresponding cryptocurrency\n                                contracts, e.g., BTC or ETH.\n                              type: number\n                            trigger:\n                              description: 'Trigger type (Only for stop orders). Allowed\n                                values: `\"index_price\"`, `\"mark_price\"`, `\"last_price\"`.'\n                              enum:\n                              - index_price\n                              - mark_price\n                              - last_price\n                              type: string\n                            instrument_name:\n                              description: Unique instrument identifier\n                              example: BTC-PERPETUAL\n                              type: string\n                            creation_timestamp:\n                              description: The timestamp (seconds since the Unix epoch,\n                                with millisecond precision)\n                              example: 1536569522277\n                              type: integer\n                            average_price:\n                              description: Average fill price of the order\n                              type: number\n                          required:\n                          - api\n                          - creation_timestamp\n                          - direction\n                          - instrument\n                          - is_liquidation\n                          - label\n                          - last_update_timestamp\n                          - max_show\n                          - order_id\n                          - order_state\n                          - order_type\n                          - post_only\n                          - price\n                          - time_in_force\n                          type: object\n                      required:\n                      - order\n                      - trades\n                      type: object\n                  required:\n                  - result\n                  type: object\n          description: ok response\n      summary: Places a buy order for an instrument.\n      tags:\n      - private\n      - trading\n    x-order: 100\n  /private/get_positions:\n    get:\n      parameters:\n      - explode: true\n        in: query\n        name: currency\n        required: true\n        schema:\n          description: Currency, i.e `\"BTC\"`, `\"ETH\"`\n          enum:\n          - BTC\n          - ETH\n          type: string\n        style: form\n      - description: Kind filter on positions\n        explode: true\n        in: query\n        name: kind\n        required: false\n        schema:\n          description: Instrument kind, `\"future\"` or `\"option\"`\n          enum:\n          - future\n          - option\n          type: string\n        style: form\n      responses:\n        200:\n          content:\n            application/json:\n              examples:\n                jsonObject:\n                  externalValue: examples/private/get_positions.response.json\n              schema:\n                allOf:\n                - properties:\n                    testnet:\n                      description: false for production server, true for test server\n                      type: boolean\n                      x-hide-in-docs: true\n                    jsonrpc:\n                      description: The JSON-RPC version (2.0)\n                      enum:\n                      - \"2.0\"\n                      type: string\n                    usDiff:\n                      description: Duration of the handling of the request, in microseconds\n                      type: integer\n                      x-hide-in-docs: true\n                    id:\n                      description: The id that was sent in the request\n                      type: integer\n                    usOut:\n                      description: The timestamp (in microseconds) of sending of the\n                        response\n                      type: integer\n                      x-hide-in-docs: true\n                    usIn:\n                      description: The timestamp (in microseconds) of receipt of the\n                        request\n                      type: integer\n                      x-hide-in-docs: true\n                  required:\n                  - jsonrpc\n                  - testnet\n                  - usDiff\n                  - usIn\n                  - usOut\n                - properties:\n                    result:\n                      items:\n                        properties:\n                          direction:\n                            description: direction, `buy` or `sell`\n                            enum:\n                            - buy\n                            - sell\n                            type: string\n                          average_price_usd:\n                            description: Only for options, average price in USD\n                            type: number\n                          estimated_liquidation_price:\n                            description: Only for futures, estimated liquidation price\n                            type: number\n                          floating_profit_loss:\n                            description: Floating profit or loss\n                            type: number\n                          floating_profit_loss_usd:\n                            description: Only for options, floating profit or loss\n                              in USD\n                            type: number\n                          open_orders_margin:\n                            description: Open orders margin\n                            type: number\n                          total_profit_loss:\n                            description: Profit or loss from position\n                            type: number\n                          realized_profit_loss:\n                            description: Realized profit or loss\n                            type: number\n                          delta:\n                            description: Delta parameter\n                            type: number\n                          initial_margin:\n                            description: Initial margin\n                            type: number\n                          size:\n                            description: Position size for futures size in quote currency\n                              (e.g. USD), for options size is in base currency (e.g.\n                              BTC)\n                            type: number\n                          maintenance_margin:\n                            description: Maintenance margin\n                            type: number\n                          kind:\n                            description: Instrument kind, `\"future\"` or `\"option\"`\n                            enum:\n                            - future\n                            - option\n                            type: string\n                          mark_price:\n                            description: Current mark price for position's instrument\n                            type: number\n                          average_price:\n                            description: Average price of trades that built this position\n                            type: number\n                          settlement_price:\n                            description: Last settlement price for position's instrument\n                              0 if instrument wasn't settled yet\n                            type: number\n                          index_price:\n                            description: Current index price\n                            type: number\n                          instrument_name:\n                            description: Unique instrument identifier\n                            example: BTC-PERPETUAL\n                            type: string\n                          size_currency:\n                            description: Only for futures, position size in base currency\n                            type: number\n                        required:\n                        - average_price\n                        - delta\n                        - direction\n                        - floating_profit_loss\n                        - index_price\n                        - initial_margin\n                        - instrument_name\n                        - kind\n                        - maintenance_margin\n                        - mark_price\n                        - open_orders_margin\n                        - relized_profit_loss\n                        - settlement_price\n                        - size\n                        - total_profit_loss\n                      type: array\n                  required:\n                  - result\n                  type: object\n          description: When successful returns array of positions\n        400:\n          content:\n            application/json:\n              schema:\n                allOf:\n                - properties:\n                    testnet:\n                      description: false for production server, true for test server\n                      type: boolean\n                      x-hide-in-docs: true\n                    jsonrpc:\n                      description: The JSON-RPC version (2.0)\n                      enum:\n                      - \"2.0\"\n                      type: string\n                    usDiff:\n                      description: Duration of the handling of the request, in microseconds\n                      type: integer\n                      x-hide-in-docs: true\n                    id:\n                      description: The id that was sent in the request\n                      type: integer\n                    usOut:\n                      description: The timestamp (in microseconds) of sending of the\n                        response\n                      type: integer\n                      x-hide-in-docs: true\n                    usIn:\n                      description: The timestamp (in microseconds) of receipt of the\n                        request\n                      type: integer\n                      x-hide-in-docs: true\n                  required:\n                  - jsonrpc\n                  - testnet\n                  - usDiff\n                  - usIn\n                  - usOut\n                - properties:\n                    message:\n                      type: string\n                    error:\n                      type: integer\n                  required:\n                  - error\n                  - message\n                  type: object\n          description: When some error occurs\n      summary: Retrieve user positions.\n      tags:\n      - private\n      - account_management\n  /private/get_address_book:\n    get:\n      parameters:\n      - description: The currency symbol\n        explode: true\n        in: query\n        name: currency\n        required: true\n        schema:\n          description: Currency, i.e `\"BTC\"`, `\"ETH\"`\n          enum:\n          - BTC\n          - ETH\n          type: string\n        style: form\n      - description: Address book type\n        explode: true\n        in: query\n        name: type\n        required: true\n        schema:\n          description: Address book type\n          enum:\n          - transfer\n          - withdrawal\n          type: string\n        style: form\n      responses:\n        200:\n          content:\n            application/json:\n              schema:\n                allOf:\n                - properties:\n                    testnet:\n                      description: false for production server, true for test server\n                      type: boolean\n                      x-hide-in-docs: true\n                    jsonrpc:\n                      description: The JSON-RPC version (2.0)\n                      enum:\n                      - \"2.0\"\n                      type: string\n                    usDiff:\n                      description: Duration of the handling of the request, in microseconds\n                      type: integer\n                      x-hide-in-docs: true\n                    id:\n                      description: The id that was sent in the request\n                      type: integer\n                    usOut:\n                      description: The timestamp (in microseconds) of sending of the\n                        response\n                      type: integer\n                      x-hide-in-docs: true\n                    usIn:\n                      description: The timestamp (in microseconds) of receipt of the\n                        request\n                      type: integer\n                      x-hide-in-docs: true\n                  required:\n                  - jsonrpc\n                  - testnet\n                  - usDiff\n                  - usIn\n                  - usOut\n                - properties:\n                    result:\n                      items:\n                        properties:\n                          currency:\n                            description: Currency, i.e `\"BTC\"`, `\"ETH\"`\n                            enum:\n                            - BTC\n                            - ETH\n                            type: string\n                          address:\n                            description: Address in proper format for currency\n                            example: 1A1zP1eP5QGefi2DMPTfTL5SLmv7DivfNa\n                            type: string\n                          type:\n                            description: Address book type\n                            enum:\n                            - transfer\n                            - withdrawal\n                            type: string\n                          creation_timestamp:\n                            description: The timestamp (seconds since the Unix epoch,\n                              with millisecond precision)\n                            example: 1536569522277\n                            type: integer\n                        required:\n                        - address\n                        - creation_timestamp\n                        - currency\n                        type: object\n                      type: array\n                  required:\n                  - result\n                  type: object\n      summary: Retrieves address book of given type\n      tags:\n      - wallet\n      - private\n      - internal\n  /private/toggle_subaccount_login:\n    get:\n      parameters:\n      - description: The user id for the subaccount\n        explode: true\n        in: query\n        name: sid\n        required: true\n        schema:\n          type: integer\n        style: form\n      - description: enable or disable login.\n        explode: true\n        in: query\n        name: state\n        required: true\n        schema:\n          enum:\n          - enable\n          - disable\n          type: string\n        style: form\n      responses:\n        200:\n          content:\n            application/json:\n              examples:\n                jsonObject:\n                  externalValue: examples/private/toggle_subaccount_login.response.json\n              schema:\n                allOf:\n                - properties:\n                    testnet:\n                      description: false for production server, true for test server\n                      type: boolean\n                      x-hide-in-docs: true\n                    jsonrpc:\n                      description: The JSON-RPC version (2.0)\n                      enum:\n                      - \"2.0\"\n                      type: string\n                    usDiff:\n                      description: Duration of the handling of the request, in microseconds\n                      type: integer\n                      x-hide-in-docs: true\n                    id:\n                      description: The id that was sent in the request\n                      type: integer\n                    usOut:\n                      description: The timestamp (in microseconds) of sending of the\n                        response\n                      type: integer\n                      x-hide-in-docs: true\n                    usIn:\n                      description: The timestamp (in microseconds) of receipt of the\n                        request\n                      type: integer\n                      x-hide-in-docs: true\n                  required:\n                  - jsonrpc\n                  - testnet\n                  - usDiff\n                  - usIn\n                  - usOut\n                - properties:\n                    result:\n                      description: Result of method execution. `ok` in case of success\n                      enum:\n                      - ok\n                      type: string\n                  required:\n                  - result\n                  type: object\n          description: ok response\n      summary: Enable or disable login for a subaccount. If login is disabled and\n        a session for the subaccount exists, this session will be terminated.\n      tags:\n      - private\n      - account_management\n  /public/get_tradingview_chart_data:\n    get:\n      parameters:\n      - description: Instrument name\n        explode: true\n        in: query\n        name: instrument_name\n        required: true\n        schema:\n          description: Unique instrument identifier\n          example: BTC-PERPETUAL\n          type: string\n        style: form\n      - description: The earliest timestamp to return result for\n        explode: true\n        in: query\n        name: start_timestamp\n        required: true\n        schema:\n          description: The timestamp (seconds since the Unix epoch, with millisecond\n            precision)\n          example: 1536569522277\n          type: integer\n        style: form\n      - description: The most recent timestamp to return result for\n        explode: true\n        in: query\n        name: end_timestamp\n        required: true\n        schema:\n          description: The timestamp (seconds since the Unix epoch, with millisecond\n            precision)\n          example: 1536569522277\n          type: integer\n        style: form\n      responses:\n        200:\n          content:\n            application/json:\n              examples:\n                jsonObject:\n                  externalValue: examples/public/get_tradingview_chart_data.response.json\n              schema:\n                allOf:\n                - properties:\n                    testnet:\n                      description: false for production server, true for test server\n                      type: boolean\n                      x-hide-in-docs: true\n                    jsonrpc:\n                      description: The JSON-RPC version (2.0)\n                      enum:\n                      - \"2.0\"\n                      type: string\n                    usDiff:\n                      description: Duration of the handling of the request, in microseconds\n                      type: integer\n                      x-hide-in-docs: true\n                    id:\n                      description: The id that was sent in the request\n                      type: integer\n                    usOut:\n                      description: The timestamp (in microseconds) of sending of the\n                        response\n                      type: integer\n                      x-hide-in-docs: true\n                    usIn:\n                      description: The timestamp (in microseconds) of receipt of the\n                        request\n                      type: integer\n                      x-hide-in-docs: true\n                  required:\n                  - jsonrpc\n                  - testnet\n                  - usDiff\n                  - usIn\n                  - usOut\n                - properties:\n                    result:\n                      properties:\n                        status:\n                          description: 'Status of the query: `ok` or `no_data`'\n                          enum:\n                          - ok\n                          - no_data\n                          type: string\n                        high:\n                          description: List of highest price levels (one per candle)\n                          items:\n                            description: Price in quote currency\n                            type: number\n                          type: array\n                        low:\n                          description: List of lowest price levels (one per candle)\n                          items:\n                            description: Price in quote currency\n                            type: number\n                          type: array\n                        close:\n                          description: List of prices at close (one per candle)\n                          items:\n                            description: Price in quote currency\n                            type: number\n                          type: array\n                        volume:\n                          description: List of volume bars (one per candle)\n                          items:\n                            description: // todo\n                            type: number\n                          type: array\n                        ticks:\n                          description: Values of the time axis given in milliseconds\n                            since UNIX epoch\n                          items:\n                            description: The timestamp (seconds since the Unix epoch,\n                              with millisecond precision)\n                            example: 1536569522277\n                            type: integer\n                          type: array\n                        open:\n                          description: List of prices at open (one per candle)\n                          items:\n                            description: Price in quote currency\n                            type: number\n                          type: array\n                      type: object\n                  required:\n                  - result\n                  type: object\n      summary: Publicly available market data used to generate a TradingView candle\n        chart.\n      tags:\n      - public\n      - market_data\n  /public/test:\n    get:\n      parameters:\n      - description: The value \"exception\" will trigger an error response. This may\n          be useful for testing wrapper libraries.\n        explode: true\n        in: query\n        name: expected_result\n        required: false\n        schema:\n          enum:\n          - exception\n          type: string\n        style: form\n      responses:\n        200:\n          content:\n            application/json:\n              examples:\n                jsonObject:\n                  externalValue: examples/public/test.response.json\n              schema:\n                allOf:\n                - properties:\n                    testnet:\n                      description: false for production server, true for test server\n                      type: boolean\n                      x-hide-in-docs: true\n                    jsonrpc:\n                      description: The JSON-RPC version (2.0)\n                      enum:\n                      - \"2.0\"\n                      type: string\n                    usDiff:\n                      description: Duration of the handling of the request, in microseconds\n                      type: integer\n                      x-hide-in-docs: true\n                    id:\n                      description: The id that was sent in the request\n                      type: integer\n                    usOut:\n                      description: The timestamp (in microseconds) of sending of the\n                        response\n                      type: integer\n                      x-hide-in-docs: true\n                    usIn:\n                      description: The timestamp (in microseconds) of receipt of the\n                        request\n                      type: integer\n                      x-hide-in-docs: true\n                  required:\n                  - jsonrpc\n                  - testnet\n                  - usDiff\n                  - usIn\n                  - usOut\n                - properties:\n                    result:\n                      properties:\n                        version:\n                          description: The API version\n                          example: 2.1.26\n                          type: string\n                      required:\n                      - version\n                      type: object\n                  required:\n                  - result\n                  type: object\n      summary: Tests the connection to the API server, and returns its version. You\n        can use this to make sure the API is reachable, and matches the expected version.\n      tags:\n      - public\n      - supporting\n  /public/get_last_trades_by_instrument:\n    get:\n      parameters:\n      - description: Instrument name\n        explode: true\n        in: query\n        name: instrument_name\n        required: true\n        schema:\n          description: Unique instrument identifier\n          example: BTC-PERPETUAL\n          type: string\n        style: form\n      - description: The sequence number of the first trade to be returned\n        explode: true\n        in: query\n        name: start_seq\n        required: false\n        schema:\n          type: integer\n        style: form\n      - description: The sequence number of the last trade to be returned\n        explode: true\n        in: query\n        name: end_seq\n        required: false\n        schema:\n          type: integer\n        style: form\n      - description: Number of requested items, default - `10`\n        explode: true\n        in: query\n        name: count\n        required: false\n        schema:\n          type: integer\n        style: form\n      - description: Include trades older than 7 days, default - `false`\n        explode: true\n        in: query\n        name: include_old\n        required: false\n        schema:\n          type: boolean\n        style: form\n      - description: Direction of results sorting (`default` value means no sorting,\n          results will be returned in order in which they left the database)\n        explode: true\n        in: query\n        name: sorting\n        required: false\n        schema:\n          enum:\n          - asc\n          - desc\n          - default\n          type: string\n        style: form\n      responses:\n        200:\n          content:\n            application/json:\n              examples:\n                jsonObject:\n                  externalValue: examples/public/get_last_trades_by_instrument.response.json\n              schema:\n                allOf:\n                - properties:\n                    testnet:\n                      description: false for production server, true for test server\n                      type: boolean\n                      x-hide-in-docs: true\n                    jsonrpc:\n                      description: The JSON-RPC version (2.0)\n                      enum:\n                      - \"2.0\"\n                      type: string\n                    usDiff:\n                      description: Duration of the handling of the request, in microseconds\n                      type: integer\n                      x-hide-in-docs: true\n                    id:\n                      description: The id that was sent in the request\n                      type: integer\n                    usOut:\n                      description: The timestamp (in microseconds) of sending of the\n                        response\n                      type: integer\n                      x-hide-in-docs: true\n                    usIn:\n                      description: The timestamp (in microseconds) of receipt of the\n                        request\n                      type: integer\n                      x-hide-in-docs: true\n                  required:\n                  - jsonrpc\n                  - testnet\n                  - usDiff\n                  - usIn\n                  - usOut\n                - properties:\n                    result:\n                      properties:\n                        has_more:\n                          type: boolean\n                        trades:\n                          items:\n                            properties:\n                              direction:\n                                description: Trade direction of the taker\n                                enum:\n                                - buy\n                                - sell\n                                type: string\n                              tick_direction:\n                                description: Direction of the \"tick\" (`0` = Plus Tick,\n                                  `1` = Zero-Plus Tick, `2` = Minus Tick, `3` = Zero-Minus\n                                  Tick).\n                                enum:\n                                - 0\n                                - 1\n                                - 2\n                                - 3\n                                type: integer\n                              timestamp:\n                                description: The timestamp of the trade\n                                example: 1517329113791\n                                type: integer\n                              price:\n                                description: The price of the trade\n                                type: number\n                              trade_seq:\n                                description: The sequence number of the trade within\n                                  instrument\n                                type: integer\n                              trade_id:\n                                description: Unique (per currency) trade identifier\n                                type: string\n                              iv:\n                                description: Option implied volatility for the price\n                                  (Option only)\n                                type: number\n                              index_price:\n                                description: Index Price at the moment of trade\n                                type: number\n                              amount:\n                                description: Trade amount. For perpetual and futures\n                                  - in USD units, for options it is amount of corresponding\n                                  cryptocurrency contracts, e.g., BTC or ETH.\n                                type: number\n                              instrument_name:\n                                description: Unique instrument identifier\n                                example: BTC-PERPETUAL\n                                type: string\n                            required:\n                            - amount\n                            - direction\n                            - index_price\n                            - instrument_name\n                            - price\n                            - tick_direction\n                            - timestamp\n                            - trade_id\n                            - trade_seq\n                          type: array\n                      required:\n                      - has_more\n                      - trades\n                      type: object\n                  required:\n                  - result\n                  type: object\n      summary: Retrieve the latest trades that have occurred for a specific instrument.\n      tags:\n      - market_data\n      - public\n  /private/get_position:\n    get:\n      parameters:\n      - description: Instrument name\n        explode: true\n        in: query\n        name: instrument_name\n        required: true\n        schema:\n          description: Unique instrument identifier\n          example: BTC-PERPETUAL\n          type: string\n        style: form\n      responses:\n        200:\n          content:\n            application/json:\n              examples:\n                jsonObject:\n                  externalValue: examples/private/get_position.response.json\n              schema:\n                allOf:\n                - properties:\n                    testnet:\n                      description: false for production server, true for test server\n                      type: boolean\n                      x-hide-in-docs: true\n                    jsonrpc:\n                      description: The JSON-RPC version (2.0)\n                      enum:\n                      - \"2.0\"\n                      type: string\n                    usDiff:\n                      description: Duration of the handling of the request, in microseconds\n                      type: integer\n                      x-hide-in-docs: true\n                    id:\n                      description: The id that was sent in the request\n                      type: integer\n                    usOut:\n                      description: The timestamp (in microseconds) of sending of the\n                        response\n                      type: integer\n                      x-hide-in-docs: true\n                    usIn:\n                      description: The timestamp (in microseconds) of receipt of the\n                        request\n                      type: integer\n                      x-hide-in-docs: true\n                  required:\n                  - jsonrpc\n                  - testnet\n                  - usDiff\n                  - usIn\n                  - usOut\n                - properties:\n                    result:\n                      properties:\n                        direction:\n                          description: direction, `buy` or `sell`\n                          enum:\n                          - buy\n                          - sell\n                          type: string\n                        average_price_usd:\n                          description: Only for options, average price in USD\n                          type: number\n                        estimated_liquidation_price:\n                          description: Only for futures, estimated liquidation price\n                          type: number\n                        floating_profit_loss:\n                          description: Floating profit or loss\n                          type: number\n                        floating_profit_loss_usd:\n                          description: Only for options, floating profit or loss in\n                            USD\n                          type: number\n                        open_orders_margin:\n                          description: Open orders margin\n                          type: number\n                        total_profit_loss:\n                          description: Profit or loss from position\n                          type: number\n                        realized_profit_loss:\n                          description: Realized profit or loss\n                          type: number\n                        delta:\n                          description: Delta parameter\n                          type: number\n                        initial_margin:\n                          description: Initial margin\n                          type: number\n                        size:\n                          description: Position size for futures size in quote currency\n                            (e.g. USD), for options size is in base currency (e.g.\n                            BTC)\n                          type: number\n                        maintenance_margin:\n                          description: Maintenance margin\n                          type: number\n                        kind:\n                          description: Instrument kind, `\"future\"` or `\"option\"`\n                          enum:\n                          - future\n                          - option\n                          type: string\n                        mark_price:\n                          description: Current mark price for position's instrument\n                          type: number\n                        average_price:\n                          description: Average price of trades that built this position\n                          type: number\n                        settlement_price:\n                          description: Last settlement price for position's instrument\n                            0 if instrument wasn't settled yet\n                          type: number\n                        index_price:\n                          description: Current index price\n                          type: number\n                        instrument_name:\n                          description: Unique instrument identifier\n                          example: BTC-PERPETUAL\n                          type: string\n                        size_currency:\n                          description: Only for futures, position size in base currency\n                          type: number\n                      required:\n                      - average_price\n                      - delta\n                      - direction\n                      - floating_profit_loss\n                      - index_price\n                      - initial_margin\n                      - instrument_name\n                      - kind\n                      - maintenance_margin\n                      - mark_price\n                      - open_orders_margin\n                      - relized_profit_loss\n                      - settlement_price\n                      - size\n                      - total_profit_loss\n                  required:\n                  - result\n                  type: object\n          description: When successful returns position\n        400:\n          content:\n            application/json:\n              schema:\n                allOf:\n                - properties:\n                    testnet:\n                      description: false for production server, true for test server\n                      type: boolean\n                      x-hide-in-docs: true\n                    jsonrpc:\n                      description: The JSON-RPC version (2.0)\n                      enum:\n                      - \"2.0\"\n                      type: string\n                    usDiff:\n                      description: Duration of the handling of the request, in microseconds\n                      type: integer\n                      x-hide-in-docs: true\n                    id:\n                      description: The id that was sent in the request\n                      type: integer\n                    usOut:\n                      description: The timestamp (in microseconds) of sending of the\n                        response\n                      type: integer\n                      x-hide-in-docs: true\n                    usIn:\n                      description: The timestamp (in microseconds) of receipt of the\n                        request\n                      type: integer\n                      x-hide-in-docs: true\n                  required:\n                  - jsonrpc\n                  - testnet\n                  - usDiff\n                  - usIn\n                  - usOut\n                - properties:\n                    message:\n                      type: string\n                    error:\n                      type: integer\n                  required:\n                  - error\n                  - message\n                  type: object\n          description: When some error occurs\n      summary: Retrieve user position.\n      tags:\n      - private\n      - account_management\n  /private/get_new_announcements:\n    get:\n      parameters: []\n      responses:\n        200:\n          content:\n            application/json:\n              examples:\n                jsonObject:\n                  externalValue: examples/private/get_new_announcements.response.json\n              schema:\n                allOf:\n                - properties:\n                    testnet:\n                      description: false for production server, true for test server\n                      type: boolean\n                      x-hide-in-docs: true\n                    jsonrpc:\n                      description: The JSON-RPC version (2.0)\n                      enum:\n                      - \"2.0\"\n                      type: string\n                    usDiff:\n                      description: Duration of the handling of the request, in microseconds\n                      type: integer\n                      x-hide-in-docs: true\n                    id:\n                      description: The id that was sent in the request\n                      type: integer\n                    usOut:\n                      description: The timestamp (in microseconds) of sending of the\n                        response\n                      type: integer\n                      x-hide-in-docs: true\n                    usIn:\n                      description: The timestamp (in microseconds) of receipt of the\n                        request\n                      type: integer\n                      x-hide-in-docs: true\n                  required:\n                  - jsonrpc\n                  - testnet\n                  - usDiff\n                  - usIn\n                  - usOut\n                - properties:\n                    result:\n                      items:\n                        properties:\n                          body:\n                            description: The HTML body of the announcement\n                            example: An\u0026nbsp;announcement\n                            type: string\n                          publication_time:\n                            description: The timestamp in ms at which the announcement\n                              was published\n                            example: 1527844253000\n                            type: integer\n                          important:\n                            description: Whether the announcement is marked as important\n                            example: false\n                            type: boolean\n                          id:\n                            description: A unique identifier for the announcement\n                            example: 19288317\n                            type: number\n                          title:\n                            description: The title of the announcement\n                            example: Example announcement\n                            type: string\n                        required:\n                        - body\n                        - id\n                        - important\n                        - publication_time\n                        - title\n                        type: object\n                      type: array\n                  required:\n                  - result\n                  type: object\n      summary: Retrieves announcements that have not been marked read by the user.\n      tags:\n      - account_management\n      - private\n  /private/disable_tfa_for_subaccount:\n    get:\n      parameters:\n      - description: The user id for the subaccount\n        explode: true\n        in: query\n        name: sid\n        required: true\n        schema:\n          type: integer\n        style: form\n      responses:\n        200:\n          content:\n            application/json:\n              examples:\n                jsonObject:\n                  externalValue: examples/private/disable_tfa_for_subaccount.response.json\n              schema:\n                allOf:\n                - properties:\n                    testnet:\n                      description: false for production server, true for test server\n                      type: boolean\n                      x-hide-in-docs: true\n                    jsonrpc:\n                      description: The JSON-RPC version (2.0)\n                      enum:\n                      - \"2.0\"\n                      type: string\n                    usDiff:\n                      description: Duration of the handling of the request, in microseconds\n                      type: integer\n                      x-hide-in-docs: true\n                    id:\n                      description: The id that was sent in the request\n                      type: integer\n                    usOut:\n                      description: The timestamp (in microseconds) of sending of the\n                        response\n                      type: integer\n                      x-hide-in-docs: true\n                    usIn:\n                      description: The timestamp (in microseconds) of receipt of the\n                        request\n                      type: integer\n                      x-hide-in-docs: true\n                  required:\n                  - jsonrpc\n                  - testnet\n                  - usDiff\n                  - usIn\n                  - usOut\n                - properties:\n                    result:\n                      description: Result of method execution. `ok` in case of success\n                      enum:\n                      - ok\n                      type: string\n                  required:\n                  - result\n                  type: object\n          description: ok response\n      summary: Disable two factor authentication for a subaccount.\n      tags:\n      - private\n      - account_management\n  /private/get_user_trades_by_currency:\n    get:\n      parameters:\n      - description: The currency symbol\n        explode: true\n        in: query\n        name: currency\n        required: true\n        schema:\n          description: Currency, i.e `\"BTC\"`, `\"ETH\"`\n          enum:\n          - BTC\n          - ETH\n          type: string\n        style: form\n      - description: Instrument kind, if not provided instruments of all kinds are\n          considered\n        explode: true\n        in: query\n        name: kind\n        required: false\n        schema:\n          description: Instrument kind, `\"future\"` or `\"option\"`\n          enum:\n          - future\n          - option\n          type: string\n        style: form\n      - description: The ID number of the first trade to be returned\n        explode: true\n        in: query\n        name: start_id\n        required: false\n        schema:\n          description: Unique (per currency) trade identifier\n          type: string\n        style: form\n      - description: The ID number of the last trade to be returned\n        explode: true\n        in: query\n        name: end_id\n        required: false\n        schema:\n          description: Unique (per currency) trade identifier\n          type: string\n        style: form\n      - description: Number of requested items, default - `10`\n        explode: true\n        in: query\n        name: count\n        required: false\n        schema:\n          type: integer\n        style: form\n      - description: Include trades older than 7 days, default - `false`\n        explode: true\n        in: query\n        name: include_old\n        required: false\n        schema:\n          type: boolean\n        style: form\n      - description: Direction of results sorting (`default` value means no sorting,\n          results will be returned in order in which they left the database)\n        explode: true\n        in: query\n        name: sorting\n        required: false\n        schema:\n          enum:\n          - asc\n          - desc\n          - default\n          type: string\n        style: form\n      responses:\n        200:\n          content:\n            application/json:\n              examples:\n                jsonObject:\n                  externalValue: examples/private/get_user_trades_by_currency.response.json\n              schema:\n                allOf:\n                - properties:\n                    testnet:\n                      description: false for production server, true for test server\n                      type: boolean\n                      x-hide-in-docs: true\n                    jsonrpc:\n                      description: The JSON-RPC version (2.0)\n                      enum:\n                      - \"2.0\"\n                      type: string\n                    usDiff:\n                      description: Duration of the handling of the request, in microseconds\n                      type: integer\n                      x-hide-in-docs: true\n                    id:\n                      description: The id that was sent in the request\n                      type: integer\n                    usOut:\n                      description: The timestamp (in microseconds) of sending of the\n                        response\n                      type: integer\n                      x-hide-in-docs: true\n                    usIn:\n                      description: The timestamp (in microseconds) of receipt of the\n                        request\n                      type: integer\n                      x-hide-in-docs: true\n                  required:\n                  - jsonrpc\n                  - testnet\n                  - usDiff\n                  - usIn\n                  - usOut\n                - properties:\n                    result:\n                      properties:\n                        has_more:\n                          type: boolean\n                        trades:\n                          items:\n                            properties:\n                              direction:\n                                description: Trade direction of the taker\n                                enum:\n                                - buy\n                                - sell\n                                type: string\n                              fee_currency:\n                                description: Currency, i.e `\"BTC\"`, `\"ETH\"`\n                                enum:\n                                - BTC\n                                - ETH\n                                type: string\n                              order_id:\n                                description: Id of the user order (maker or taker),\n                                  i.e. subscriber's order id that took part in the\n                                  trade\n                                type: string\n                              timestamp:\n                                description: The timestamp of the trade\n                                example: 1517329113791\n                                type: integer\n                              price:\n                                description: The price of the trade\n                                type: number\n                              iv:\n                                description: Option implied volatility for the price\n                                  (Option only)\n                                type: number\n                              trade_id:\n                                description: Unique (per currency) trade identifier\n                                type: string\n                              fee:\n                                description: User's fee in units of the specified\n                                  `fee_currency`\n                                type: number\n                              order_type:\n                                description: 'Order type: `\"limit`, `\"market\"`, or\n                                  `\"liquidation\"`'\n                                enum:\n                                - limit\n                                - market\n                                - liquidation\n                                type: string\n                              trade_seq:\n                                description: The sequence number of the trade within\n                                  instrument\n                                type: integer\n                              self_trade:\n                                description: '`true` if the trade is against own order.\n                                  This can only happen when your account has self-trading\n                                  enabled. Contact an administrator if you think you\n                                  need that'\n                                type: boolean\n                              state:\n                                description: order state, `\"open\"`, `\"filled\"`, `\"rejected\"`,\n                                  `\"cancelled\"`, `\"untriggered\"` or `\"archive\"` (if\n                                  order was archived)\n                                enum:\n                                - open\n                                - filled\n                                - rejected\n                                - cancelled\n                                - untriggered\n                                - archive\n                                type: string\n                              label:\n                                description: User defined label (presented only when\n                                  previously set for order by user)\n                                type: string\n                              index_price:\n                                description: Index Price at the moment of trade\n                                type: number\n                              amount:\n                                description: Trade amount. For perpetual and futures\n                                  - in USD units, for options it is amount of corresponding\n                                  cryptocurrency contracts, e.g., BTC or ETH.\n                                type: number\n                              instrument_name:\n                                description: Unique instrument identifier\n                                example: BTC-PERPETUAL\n                                type: string\n                              tick_direction:\n                                description: Direction of the \"tick\" (`0` = Plus Tick,\n                                  `1` = Zero-Plus Tick, `2` = Minus Tick, `3` = Zero-Minus\n                                  Tick).\n                                enum:\n                                - 0\n                                - 1\n                                - 2\n                                - 3\n                                type: integer\n                              matching_id:\n                                description: Always `null`, except for a self-trade\n                                  which is possible only if self-trading is switched\n                                  on for the account (in that case this will be id\n                                  of the maker order of the subscriber)\n                                type: string\n                              liquidity:\n                                description: 'Describes what was role of users order:\n                                  `\"M\"` when it was maker order, `\"T\"` when it was\n                                  taker order'\n                                enum:\n                                - M\n                                - T\n                                type: string\n                            required:\n                            - amount\n                            - direction\n                            - fee\n                            - fee_currency\n                            - index_price\n                            - instrument_name\n                            - matching_id\n                            - order_id\n                            - price\n                            - self_trade\n                            - state\n                            - tick_direction\n                            - timestamp\n                            - trade_id\n                            - trade_seq\n                          type: array\n                      required:\n                      - has_more\n                      - trades\n                      type: object\n                  required:\n                  - result\n                  type: object\n      summary: Retrieve the latest user trades that have occurred for instruments\n        in a specific currency symbol.\n      tags:\n      - trading\n      - private\n  /private/get_subaccounts:\n    get:\n      parameters:\n      - explode: true\n        in: query\n        name: with_portfolio\n        required: false\n        schema:\n          type: boolean\n        style: form\n      responses:\n        200:\n          content:\n            application/json:\n              examples:\n                jsonObject:\n                  externalValue: examples/private/get_subaccounts.response.json\n              schema:\n                allOf:\n                - properties:\n                    testnet:\n                      description: false for production server, true for test server\n                      type: boolean\n                      x-hide-in-docs: true\n                    jsonrpc:\n                      description: The JSON-RPC version (2.0)\n                      enum:\n                      - \"2.0\"\n                      type: string\n                    usDiff:\n                      description: Duration of the handling of the request, in microseconds\n                      type: integer\n                      x-hide-in-docs: true\n                    id:\n                      description: The id that was sent in the request\n                      type: integer\n                    usOut:\n                      description: The timestamp (in microseconds) of sending of the\n                        response\n                      type: integer\n                      x-hide-in-docs: true\n                    usIn:\n                      description: The timestamp (in microseconds) of receipt of the\n                        request\n                      type: integer\n                      x-hide-in-docs: true\n                  required:\n                  - jsonrpc\n                  - testnet\n                  - usDiff\n                  - usIn\n                  - usOut\n                - properties:\n                    result:\n                      items:\n                        properties:\n                          username:\n                            type: string\n                          system_name:\n                            description: System generated user nickname\n                            type: string\n                          is_password:\n                            description: '`true` when password for the subaccount\n                              has been configured'\n                            type: boolean\n                          type:\n                            enum:\n                            - main\n                            - subaccount\n                            type: string\n                          tfa_enabled:\n                            description: Whether the two factor authentication is\n                              enabled\n                            type: boolean\n                          receive_notifications:\n                            description: When `true` - receive all notification emails\n                              on the main email\n                            type: boolean\n                          id:\n                            description: Account/Subaccount identifier\n                            type: integer\n                          not_confirmed_email:\n                            description: New email address that has not yet been confirmed.\n                              This field is only included if `with_portfolio` == `true`.\n                            type: string\n                          portfolio:\n                            description: Only if with_portfolio == true\n                            properties:\n                              eth:\n                                properties:\n                                  maintenance_margin:\n                                    type: number\n                                  available_withdrawal_funds:\n                                    type: number\n                                  initial_margin:\n                                    type: number\n                                  available_funds:\n                                    type: number\n                                  currency:\n                                    enum:\n                                    - btc\n                                    - eth\n                                    type: string\n                                  margin_balance:\n                                    type: number\n                                  equity:\n                                    type: number\n                                  balance:\n                                    type: number\n                                required:\n                                - available_funds\n                                - available_withdrawal_funds\n                                - balance\n                                - currency\n                                - equity\n                                - initial_margin\n                                - maintenance_margin\n                                - margin_balance\n                                type: object\n                              btc:\n                                properties:\n                                  maintenance_margin:\n                                    type: number\n                                  available_withdrawal_funds:\n                                    type: number\n                                  initial_margin:\n                                    type: number\n                                  available_funds:\n                                    type: number\n                                  currency:\n                                    enum:\n                                    - btc\n                                    - eth\n                                    type: string\n                                  margin_balance:\n                                    type: number\n                                  equity:\n                                    type: number\n                                  balance:\n                                    type: number\n                                required:\n                                - available_funds\n                                - available_withdrawal_funds\n                                - balance\n                                - currency\n                                - equity\n                                - initial_margin\n                                - maintenance_margin\n                                - margin_balance\n                                type: object\n                            required:\n                            - btc\n                            - eth\n                            type: object\n                          login_enabled:\n                            description: Informs whether login to the subaccount is\n                              enabled\n                            type: boolean\n                          email:\n                            description: User email\n                            type: string\n                        required:\n                        - email\n                        - id\n                        - is_password\n                        - receive_notifications\n                        - system_name\n                        - tfa_enabled\n                        - type\n                        - username\n                        type: object\n                      type: array\n                  required:\n                  - result\n                  type: object\n          description: ok response\n        401:\n          content:\n            application/json:\n              schema:\n                allOf:\n                - properties:\n                    testnet:\n                      description: false for production server, true for test server\n                      type: boolean\n                      x-hide-in-docs: true\n                    jsonrpc:\n                      description: The JSON-RPC version (2.0)\n                      enum:\n                      - \"2.0\"\n                      type: string\n                    usDiff:\n                      description: Duration of the handling of the request, in microseconds\n                      type: integer\n                      x-hide-in-docs: true\n                    id:\n                      description: The id that was sent in the request\n                      type: integer\n                    usOut:\n                      description: The timestamp (in microseconds) of sending of the\n                        response\n                      type: integer\n                      x-hide-in-docs: true\n                    usIn:\n                      description: The timestamp (in microseconds) of receipt of the\n                        request\n                      type: integer\n                      x-hide-in-docs: true\n                  required:\n                  - jsonrpc\n                  - testnet\n                  - usDiff\n                  - usIn\n                  - usOut\n                - properties:\n                    message:\n                      type: string\n                    error:\n                      type: integer\n                  required:\n                  - error\n                  - message\n                  type: object\n          description: not authorised\n      summary: Get information about subaccounts\n      tags:\n      - private\n      - account_management\n  /private/get_open_orders_by_instrument:\n    get:\n      parameters:\n      - description: Instrument name\n        explode: true\n        in: query\n        name: instrument_name\n        required: true\n        schema:\n          description: Unique instrument identifier\n          example: BTC-PERPETUAL\n          type: string\n        style: form\n      - description: Order type, default - `all`\n        explode: true\n        in: query\n        name: type\n        required: false\n        schema:\n          description: Order type, `\"all\"`, `\"limit\"`, `\"stop_all\"`, `\"stop_limit\"`\n            or `\"stop_market\"`\n          enum:\n          - all\n          - limit\n          - stop_all\n          - stop_limit\n          - stop_market\n          type: string\n        style: form\n      responses:\n        200:\n          content:\n            application/json:\n              examples:\n                jsonObject:\n                  externalValue: examples/private/get_open_orders_by_instrument.response.json\n              schema:\n                allOf:\n                - properties:\n                    testnet:\n                      description: false for production server, true for test server\n                      type: boolean\n                      x-hide-in-docs: true\n                    jsonrpc:\n                      description: The JSON-RPC version (2.0)\n                      enum:\n                      - \"2.0\"\n                      type: string\n                    usDiff:\n                      description: Duration of the handling of the request, in microseconds\n                      type: integer\n                      x-hide-in-docs: true\n                    id:\n                      description: The id that was sent in the request\n                      type: integer\n                    usOut:\n                      description: The timestamp (in microseconds) of sending of the\n                        response\n                      type: integer\n                      x-hide-in-docs: true\n                    usIn:\n                      description: The timestamp (in microseconds) of receipt of the\n                        request\n                      type: integer\n                      x-hide-in-docs: true\n                  required:\n                  - jsonrpc\n                  - testnet\n                  - usDiff\n                  - usIn\n                  - usOut\n                - properties:\n                    result:\n                      items:\n                        properties:\n                          direction:\n                            description: direction, `buy` or `sell`\n                            enum:\n                            - buy\n                            - sell\n                            type: string\n                          reduce_only:\n                            description: '`true` for reduce-only orders only'\n                            type: boolean\n                          triggered:\n                            description: Whether the stop order has been triggered\n                              (Only for stop orders)\n                            type: boolean\n                          order_id:\n                            description: Unique order identifier\n                            example: ETH-100234\n                            type: string\n                          price:\n                            description: Price in base currency\n                            type: number\n                          time_in_force:\n                            description: 'Order time in force: `\"good_til_cancelled\"`,\n                              `\"fill_or_kill\"`, `\"immediate_or_cancel\"`'\n                            enum:\n                            - good_til_cancelled\n                            - fill_or_kill\n                            - immediate_or_cancel\n                            type: string\n                          api:\n                            description: '`true` if created with API'\n                            type: boolean\n                          order_state:\n                            description: order state, `\"open\"`, `\"filled\"`, `\"rejected\"`,\n                              `\"cancelled\"`, `\"untriggered\"`\n                            enum:\n                            - open\n                            - filled\n                            - rejected\n                            - cancelled\n                            - untriggered\n                            - triggered\n                            type: string\n                          implv:\n                            description: Implied volatility in percent. (Only if `advanced=\"implv\"`)\n                            type: number\n                          advanced:\n                            description: |\n                              advanced type: `\"usd\"` or `\"implv\"` (Only for options; field is omitted if not applicable).\n                            enum:\n                            - usd\n                            - implv\n                            type: string\n                          post_only:\n                            description: '`true` for post-only orders only'\n                            type: boolean\n                          usd:\n                            description: Option price in USD (Only if `advanced=\"usd\"`)\n                            type: number\n                          stop_price:\n                            description: stop price (Only for future stop orders)\n                            type: number\n                          order_type:\n                            description: order type, `\"limit\"`, `\"market\"`, `\"stop_limit\"`,\n                              `\"stop_market\"`\n                            enum:\n                            - market\n                            - limit\n                            - stop_market\n                            - stop_limit\n                            type: string\n                          last_update_timestamp:\n                            description: The timestamp (seconds since the Unix epoch,\n                              with millisecond precision)\n                            example: 1536569522277\n                            type: integer\n                          original_order_type:\n                            description: Original order type. Optional field\n                            enum:\n                            - market\n                            type: string\n                          max_show:\n                            description: Maximum amount within an order to be shown\n                              to other traders, 0 for invisible order.\n                            type: number\n                          profit_loss:\n                            description: Profit and loss in base currency.\n                            type: number\n                          is_liquidation:\n                            description: '`true` if order was automatically created\n                              during liquidation'\n                            type: boolean\n                          filled_amount:\n                            description: Filled amount of the order. For perpetual\n                              and futures the filled_amount is in USD units, for options\n                              - in units or corresponding cryptocurrency contracts,\n                              e.g., BTC or ETH.\n                            type: number\n                          label:\n                            description: user defined label (up to 32 characters)\n                            type: string\n                          commission:\n                            description: Commission paid so far (in base currency)\n                            type: number\n                          amount:\n                            description: It represents the requested order size. For\n                              perpetual and futures the amount is in USD units, for\n                              options it is amount of corresponding cryptocurrency\n                              contracts, e.g., BTC or ETH.\n                            type: number\n                          trigger:\n                            description: 'Trigger type (Only for stop orders). Allowed\n                              values: `\"index_price\"`, `\"mark_price\"`, `\"last_price\"`.'\n                            enum:\n                            - index_price\n                            - mark_price\n                            - last_price\n                            type: string\n                          instrument_name:\n                            description: Unique instrument identifier\n                            example: BTC-PERPETUAL\n                            type: string\n                          creation_timestamp:\n                            description: The timestamp (seconds since the Unix epoch,\n                              with millisecond precision)\n                            example: 1536569522277\n                            type: integer\n                          average_price:\n                            description: Average fill price of the order\n                            type: number\n                        required:\n                        - api\n                        - creation_timestamp\n                        - direction\n                        - instrument\n                        - is_liquidation\n                        - label\n                        - last_update_timestamp\n                        - max_show\n                        - order_id\n                        - order_state\n                        - order_type\n                        - post_only\n                        - price\n                        - time_in_force\n                        type: object\n                      type: array\n                  required:\n                  - result\n                  type: object\n      summary: Retrieves list of user's open orders within given Instrument.\n      tags:\n      - trading\n      - private\n  /private/get_order_state:\n    get:\n      parameters:\n      - description: The order id\n        explode: true\n        in: query\n        name: order_id\n        required: true\n        schema:\n          description: Unique order identifier\n          example: ETH-100234\n          type: string\n        style: form\n      responses:\n        200:\n          content:\n            application/json:\n              examples:\n                jsonObject:\n                  externalValue: examples/private/get_order_state.response.json\n              schema:\n                allOf:\n                - properties:\n                    testnet:\n                      description: false for production server, true for test server\n                      type: boolean\n                      x-hide-in-docs: true\n                    jsonrpc:\n                      description: The JSON-RPC version (2.0)\n                      enum:\n                      - \"2.0\"\n                      type: string\n                    usDiff:\n                      description: Duration of the handling of the request, in microseconds\n                      type: integer\n                      x-hide-in-docs: true\n                    id:\n                      description: The id that was sent in the request\n                      type: integer\n                    usOut:\n                      description: The timestamp (in microseconds) of sending of the\n                        response\n                      type: integer\n                      x-hide-in-docs: true\n                    usIn:\n                      description: The timestamp (in microseconds) of receipt of the\n                        request\n                      type: integer\n                      x-hide-in-docs: true\n                  required:\n                  - jsonrpc\n                  - testnet\n                  - usDiff\n                  - usIn\n                  - usOut\n                - properties:\n                    result:\n                      properties:\n                        direction:\n                          description: direction, `buy` or `sell`\n                          enum:\n                          - buy\n                          - sell\n                          type: string\n                        reduce_only:\n                          description: '`true` for reduce-only orders only'\n                          type: boolean\n                        triggered:\n                          description: Whether the stop order has been triggered (Only\n                            for stop orders)\n                          type: boolean\n                        order_id:\n                          description: Unique order identifier\n                          example: ETH-100234\n                          type: string\n                        price:\n                          description: Price in base currency\n                          type: number\n                        time_in_force:\n                          description: 'Order time in force: `\"good_til_cancelled\"`,\n                            `\"fill_or_kill\"`, `\"immediate_or_cancel\"`'\n                          enum:\n                          - good_til_cancelled\n                          - fill_or_kill\n                          - immediate_or_cancel\n                          type: string\n                        api:\n                          description: '`true` if created with API'\n                          type: boolean\n                        order_state:\n                          description: order state, `\"open\"`, `\"filled\"`, `\"rejected\"`,\n                            `\"cancelled\"`, `\"untriggered\"`\n                          enum:\n                          - open\n                          - filled\n                          - rejected\n                          - cancelled\n                          - untriggered\n                          - triggered\n                          type: string\n                        implv:\n                          description: Implied volatility in percent. (Only if `advanced=\"implv\"`)\n                          type: number\n                        advanced:\n                          description: |\n                            advanced type: `\"usd\"` or `\"implv\"` (Only for options; field is omitted if not applicable).\n                          enum:\n                          - usd\n                          - implv\n                          type: string\n                        post_only:\n                          description: '`true` for post-only orders only'\n                          type: boolean\n                        usd:\n                          description: Option price in USD (Only if `advanced=\"usd\"`)\n                          type: number\n                        stop_price:\n                          description: stop price (Only for future stop orders)\n                          type: number\n                        order_type:\n                          description: order type, `\"limit\"`, `\"market\"`, `\"stop_limit\"`,\n                            `\"stop_market\"`\n                          enum:\n                          - market\n                          - limit\n                          - stop_market\n                          - stop_limit\n                          type: string\n                        last_update_timestamp:\n                          description: The timestamp (seconds since the Unix epoch,\n                            with millisecond precision)\n                          example: 1536569522277\n                          type: integer\n                        original_order_type:\n                          description: Original order type. Optional field\n                          enum:\n                          - market\n                          type: string\n                        max_show:\n                          description: Maximum amount within an order to be shown\n                            to other traders, 0 for invisible order.\n                          type: number\n                        profit_loss:\n                          description: Profit and loss in base currency.\n                          type: number\n                        is_liquidation:\n                          description: '`true` if order was automatically created\n                            during liquidation'\n                          type: boolean\n                        filled_amount:\n                          description: Filled amount of the order. For perpetual and\n                            futures the filled_amount is in USD units, for options\n                            - in units or corresponding cryptocurrency contracts,\n                            e.g., BTC or ETH.\n                          type: number\n                        label:\n                          description: user defined label (up to 32 characters)\n                          type: string\n                        commission:\n                          description: Commission paid so far (in base currency)\n                          type: number\n                        amount:\n                          description: It represents the requested order size. For\n                            perpetual and futures the amount is in USD units, for\n                            options it is amount of corresponding cryptocurrency contracts,\n                            e.g., BTC or ETH.\n                          type: number\n                        trigger:\n                          description: 'Trigger type (Only for stop orders). Allowed\n                            values: `\"index_price\"`, `\"mark_price\"`, `\"last_price\"`.'\n                          enum:\n                          - index_price\n                          - mark_price\n                          - last_price\n                          type: string\n                        instrument_name:\n                          description: Unique instrument identifier\n                          example: BTC-PERPETUAL\n                          type: string\n                        creation_timestamp:\n                          description: The timestamp (seconds since the Unix epoch,\n                            with millisecond precision)\n                          example: 1536569522277\n                          type: integer\n                        average_price:\n                          description: Average fill price of the order\n                          type: number\n                      required:\n                      - api\n                      - creation_timestamp\n                      - direction\n                      - instrument\n                      - is_liquidation\n                      - label\n                      - last_update_timestamp\n                      - max_show\n                      - order_id\n                      - order_state\n                      - order_type\n                      - post_only\n                      - price\n                      - time_in_force\n                      type: object\n                  required:\n                  - result\n                  type: object\n          description: ok response\n        400:\n          content:\n            application/json:\n              schema:\n                allOf:\n                - properties:\n                    testnet:\n                      description: false for production server, true for test server\n                      type: boolean\n                      x-hide-in-docs: true\n                    jsonrpc:\n                      description: The JSON-RPC version (2.0)\n                      enum:\n                      - \"2.0\"\n                      type: string\n                    usDiff:\n                      description: Duration of the handling of the request, in microseconds\n                      type: integer\n                      x-hide-in-docs: true\n                    id:\n                      description: The id that was sent in the request\n                      type: integer\n                    usOut:\n                      description: The timestamp (in microseconds) of sending of the\n                        response\n                      type: integer\n                      x-hide-in-docs: true\n                    usIn:\n                      description: The timestamp (in microseconds) of receipt of the\n                        request\n                      type: integer\n                      x-hide-in-docs: true\n                  required:\n                  - jsonrpc\n                  - testnet\n                  - usDiff\n                  - usIn\n                  - usOut\n                - properties:\n                    message:\n                      type: string\n                    error:\n                      type: integer\n                  required:\n                  - error\n                  - message\n                  type: object\n          description: result when used via rest/HTTP\n      summary: Retrieve the current state of an order.\n      tags:\n      - private\n      - trading\n  /private/withdraw:\n    get:\n      parameters:\n      - description: The currency symbol\n        explode: true\n        in: query\n        name: currency\n        required: true\n        schema:\n          description: Currency, i.e `\"BTC\"`, `\"ETH\"`\n          enum:\n          - BTC\n          - ETH\n          type: string\n        style: form\n      - description: Address in currency format, it must be in address book\n        explode: true\n        in: query\n        name: address\n        required: true\n        schema:\n          type: string\n        style: form\n      - description: Amount of funds to be withdrawn\n        explode: true\n        in: query\n        name: amount\n        required: true\n        schema:\n          type: number\n        style: form\n      - description: 'Withdrawal priority, optional for BTC, default: `high`'\n        explode: true\n        in: query\n        name: priority\n        required: false\n        schema:\n          enum:\n          - insane\n          - extreme_high\n          - very_high\n          - high\n          - mid\n          - low\n          - very_low\n          type: string\n        style: form\n      - description: TFA code, required when TFA is enabled for current account\n        explode: true\n        in: query\n        name: tfa\n        required: false\n        schema:\n          type: string\n        style: form\n      responses:\n        200:\n          content:\n            application/json:\n              examples:\n                jsonObject:\n                  externalValue: examples/private/withdraw.response.json\n              schema:\n                allOf:\n                - properties:\n                    testnet:\n                      description: false for production server, true for test server\n                      type: boolean\n                      x-hide-in-docs: true\n                    jsonrpc:\n                      description: The JSON-RPC version (2.0)\n                      enum:\n                      - \"2.0\"\n                      type: string\n                    usDiff:\n                      description: Duration of the handling of the request, in microseconds\n                      type: integer\n                      x-hide-in-docs: true\n                    id:\n                      description: The id that was sent in the request\n                      type: integer\n                    usOut:\n                      description: The timestamp (in microseconds) of sending of the\n                        response\n                      type: integer\n                      x-hide-in-docs: true\n                    usIn:\n                      description: The timestamp (in microseconds) of receipt of the\n                        request\n                      type: integer\n                      x-hide-in-docs: true\n                  required:\n                  - jsonrpc\n                  - testnet\n                  - usDiff\n                  - usIn\n                  - usOut\n                - properties:\n                    result:\n                      properties:\n                        updated_timestamp:\n                          description: The timestamp (seconds since the Unix epoch,\n                            with millisecond precision)\n                          example: 1536569522277\n                          type: integer\n                        fee:\n                          description: Fee in currency\n                          example: 0.000023\n                          type: number\n                        confirmed_timestamp:\n                          description: The timestamp (seconds since the Unix epoch,\n                            with millisecond precision) of withdrawal confirmation,\n                            `null` when not confirmed\n                          example: 1536569522277\n                          nullable: true\n                          type: integer\n                        amount:\n                          description: Amount of funds in given currency\n                          example: 1\n                          type: number\n                        priority:\n                          description: Id of priority level\n                          example: 1\n                          type: number\n                        currency:\n                          description: Currency, i.e `\"BTC\"`, `\"ETH\"`\n                          enum:\n                          - BTC\n                          - ETH\n                          type: string\n                        state:\n                          description: 'Withdrawal state, allowed values : `unconfirmed`,\n                            `confirmed`, `cancelled`, `completed`, `interrupted`,\n                            `rejected`'\n                          enum:\n                          - unconfirmed\n                          - confirmed\n                          - cancelled\n                          - completed\n                          - interrupted\n                          - rejected\n                          type: string\n                        address:\n                          description: Address in proper format for currency\n                          example: 1A1zP1eP5QGefi2DMPTfTL5SLmv7DivfNa\n                          type: string\n                        created_timestamp:\n                          description: The timestamp (seconds since the Unix epoch,\n                            with millisecond precision)\n                          example: 1536569522277\n                          type: integer\n                        id:\n                          description: Withdrawal id in Deribit system\n                          example: 1\n                          type: integer\n                        transaction_id:\n                          description: Transaction id in proper format for currency,\n                            `null` if id is not available\n                          example: 1b1fb5568515e2b79503501e3d3680b2d0838d5dfc2d15a04eb8cd9fbbe0b572\n                          nullable: true\n                          type: string\n                      required:\n                      - address\n                      - amount\n                      - currency\n                      - received_timestamp\n                      - state\n                      - transaction_id\n                      - updated_timestamp\n                      type: object\n                  required:\n                  - result\n                  type: object\n      summary: Creates a new withdrawal request\n      tags:\n      - wallet\n      - private\n  /private/get_settlement_history_by_instrument:\n    get:\n      parameters:\n      - description: Instrument name\n        explode: true\n        in: query\n        name: instrument_name\n        required: true\n        schema:\n          description: Unique instrument identifier\n          example: BTC-PERPETUAL\n          type: string\n        style: form\n      - description: Settlement type\n        explode: true\n        in: query\n        name: type\n        required: false\n        schema:\n          description: The type of settlement. `settlement`, `delivery` or `bankruptcy`.\n          enum:\n          - settlement\n          - delivery\n          - bankruptcy\n          type: string\n        style: form\n      - description: Number of requested items, default - `20`\n        explode: true\n        in: query\n        name: count\n        required: false\n        schema:\n          type: integer\n        style: form\n      responses:\n        200:\n          content:\n            application/json:\n              examples:\n                jsonObject:\n                  externalValue: examples/private/get_settlement_history_by_instrument.response.json\n              schema:\n                allOf:\n                - properties:\n                    testnet:\n                      description: false for production server, true for test server\n                      type: boolean\n                      x-hide-in-docs: true\n                    jsonrpc:\n                      description: The JSON-RPC version (2.0)\n                      enum:\n                      - \"2.0\"\n                      type: string\n                    usDiff:\n                      description: Duration of the handling of the request, in microseconds\n                      type: integer\n                      x-hide-in-docs: true\n                    id:\n                      description: The id that was sent in the request\n                      type: integer\n                    usOut:\n                      description: The timestamp (in microseconds) of sending of the\n                        response\n                      type: integer\n                      x-hide-in-docs: true\n                    usIn:\n                      description: The timestamp (in microseconds) of receipt of the\n                        request\n                      type: integer\n                      x-hide-in-docs: true\n                  required:\n                  - jsonrpc\n                  - testnet\n                  - usDiff\n                  - usIn\n                  - usOut\n                - properties:\n                    result:\n                      properties:\n                        continuation:\n                          description: Continuation token for pagination.\n                          example: xY7T6cutS3t2B9YtaDkE6TS379oKnkzTvmEDUnEUP2Msa9xKWNNaT\n                          type: string\n                        settlements:\n                          items:\n                            properties:\n                              session_profit_loss:\n                                description: total value of session profit and losses\n                                  (in base currency)\n                                example: 0.001160788\n                                type: number\n                              mark_price:\n                                description: mark price for at the settlement time\n                                  (in quote currency; settlement and delivery only)\n                                example: 11000\n                                type: number\n                              funding:\n                                description: funding (in base currency ; settlement\n                                  for perpetual product only)\n                                example: -0.000002511\n                                type: number\n                              socialized:\n                                description: the amount of the socialized losses (in\n                                  base currency; bankruptcy only)\n                                example: -0.001160788\n                                type: number\n                              session_bankrupcy:\n                                description: value of session bankrupcy (in base currency;\n                                  bankruptcy only)\n                                example: 0.001160788\n                                type: number\n                              timestamp:\n                                description: The timestamp (seconds since the Unix\n                                  epoch, with millisecond precision)\n                                example: 1536569522277\n                                type: integer\n                              profit_loss:\n                                description: profit and loss (in base currency; settlement\n                                  and delivery only)\n                                example: 0\n                                type: number\n                              funded:\n                                description: funded amount (bankruptcy only)\n                                example: 0\n                                type: number\n                              index_price:\n                                description: underlying index price at time of event\n                                  (in quote currency; settlement and delivery only)\n                                example: 11008.37\n                                type: number\n                              session_tax:\n                                description: total amount of paid taxes/fees (in base\n                                  currency; bankruptcy only)\n                                example: -0.001160788\n                                type: number\n                              session_tax_rate:\n                                description: rate of paid texes/fees (in base currency;\n                                  bankruptcy only)\n                                example: 0.000103333\n                                type: number\n                              instrument_name:\n                                description: instrument name (settlement and delivery\n                                  only)\n                                example: BTC-30MAR18\n                                type: string\n                              position:\n                                description: position size (in quote currency; settlement\n                                  and delivery only)\n                                example: 1000\n                                type: number\n                              type:\n                                description: The type of settlement. `settlement`,\n                                  `delivery` or `bankruptcy`.\n                                enum:\n                                - settlement\n                                - delivery\n                                - bankruptcy\n                                type: string\n                            required:\n                            - funding\n                            - index_price\n                            - instrument_name\n                            - position\n                            - session_profit_loss\n                            - timestamp\n                            - type\n                            type: object\n                          type: array\n                      required:\n                      - continuation\n                      - settlements\n                      type: list\n                  required:\n                  - result\n                  type: object\n      summary: Retrieves public settlement, delivery and bankruptcy events filtered\n        by instrument name\n      tags:\n      - trading\n      - private\n    x-order: 10100\n  /private/get_deposits:\n    get:\n      parameters:\n      - description: The currency symbol\n        explode: true\n        in: query\n        name: currency\n        required: true\n        schema:\n          description: Currency, i.e `\"BTC\"`, `\"ETH\"`\n          enum:\n          - BTC\n          - ETH\n          type: string\n        style: form\n      - description: Number of requested items, default - `10`\n        explode: true\n        in: query\n        name: count\n        required: false\n        schema:\n          type: integer\n        style: form\n      - description: The offset for pagination, default - `0`\n        explode: true\n        in: query\n        name: offset\n        required: false\n        schema:\n          example: 10\n          type: integer\n        style: form\n      responses:\n        200:\n          content:\n            application/json:\n              examples:\n                jsonObject:\n                  externalValue: examples/private/get_deposits.response.json\n              schema:\n                allOf:\n                - properties:\n                    testnet:\n                      description: false for production server, true for test server\n                      type: boolean\n                      x-hide-in-docs: true\n                    jsonrpc:\n                      description: The JSON-RPC version (2.0)\n                      enum:\n                      - \"2.0\"\n                      type: string\n                    usDiff:\n                      description: Duration of the handling of the request, in microseconds\n                      type: integer\n                      x-hide-in-docs: true\n                    id:\n                      description: The id that was sent in the request\n                      type: integer\n                    usOut:\n                      description: The timestamp (in microseconds) of sending of the\n                        response\n                      type: integer\n                      x-hide-in-docs: true\n                    usIn:\n                      description: The timestamp (in microseconds) of receipt of the\n                        request\n                      type: integer\n                      x-hide-in-docs: true\n                  required:\n                  - jsonrpc\n                  - testnet\n                  - usDiff\n                  - usIn\n                  - usOut\n                - properties:\n                    result:\n                      properties:\n                        count:\n                          description: Total number of results available\n                          example: 101\n                          type: integer\n                        data:\n                          items:\n                            properties:\n                              updated_timestamp:\n                                description: The timestamp (seconds since the Unix\n                                  epoch, with millisecond precision)\n                                example: 1536569522277\n                                type: integer\n                              state:\n                                description: 'Deposit state, allowed values : `pending`,\n                                  `completed`, `rejected`, `replaced`'\n                                enum:\n                                - pending\n                                - completed\n                                - rejected\n                                - replaced\n                                type: string\n                              received_timestamp:\n                                description: The timestamp (seconds since the Unix\n                                  epoch, with millisecond precision)\n                                example: 1536569522277\n                                type: integer\n                              currency:\n                                description: Currency, i.e `\"BTC\"`, `\"ETH\"`\n                                enum:\n                                - BTC\n                                - ETH\n                                type: string\n                              address:\n                                description: Address in proper format for currency\n                                example: 1A1zP1eP5QGefi2DMPTfTL5SLmv7DivfNa\n                                type: string\n                              amount:\n                                description: Amount of funds in given currency\n                                example: 1\n                                type: number\n                              transaction_id:\n                                description: Transaction id in proper format for currency,\n                                  `null` if id is not available\n                                example: 1b1fb5568515e2b79503501e3d3680b2d0838d5dfc2d15a04eb8cd9fbbe0b572\n                                nullable: true\n                                type: string\n                            required:\n                            - address\n                            - amount\n                            - currency\n                            - received_timestamp\n                            - state\n                            - transaction_id\n                            - updated_timestamp\n                            type: object\n                          type: array\n                      required:\n                      - count\n                      - data\n                      type: object\n                  required:\n                  - result\n                  type: object\n      summary: Retrieve the latest users deposits\n      tags:\n      - wallet\n      - private\n  /public/get_footer:\n    get:\n      responses:\n        200:\n          content:\n            application/json:\n              schema:\n                allOf:\n                - properties:\n                    testnet:\n                      description: false for production server, true for test server\n                      type: boolean\n                      x-hide-in-docs: true\n                    jsonrpc:\n                      description: The JSON-RPC version (2.0)\n                      enum:\n                      - \"2.0\"\n                      type: string\n                    usDiff:\n                      description: Duration of the handling of the request, in microseconds\n                      type: integer\n                      x-hide-in-docs: true\n                    id:\n                      description: The id that was sent in the request\n                      type: integer\n                    usOut:\n                      description: The timestamp (in microseconds) of sending of the\n                        response\n                      type: integer\n                      x-hide-in-docs: true\n                    usIn:\n                      description: The timestamp (in microseconds) of receipt of the\n                        request\n                      type: integer\n                      x-hide-in-docs: true\n                  required:\n                  - jsonrpc\n                  - testnet\n                  - usDiff\n                  - usIn\n                  - usOut\n                - properties:\n                    result:\n                      items:\n                        properties:\n                          title_zh:\n                            type: string\n                          name:\n                            type: string\n                          title_ru:\n                            type: string\n                          title_ko:\n                            type: string\n                          type:\n                            type: string\n                          title_ja:\n                            type: string\n                          title_en:\n                            type: string\n                        required:\n                        - name\n                        - title_en\n                        - type\n                        type: object\n                      type: array\n                  required:\n                  - result\n                  type: object\n          description: ok response\n      summary: Get information to be displayed in the footer of the website.\n      tags:\n      - internal\n  /private/get_user_trades_by_currency_and_time:\n    get:\n      parameters:\n      - description: The currency symbol\n        explode: true\n        in: query\n        name: currency\n        required: true\n        schema:\n          description: Currency, i.e `\"BTC\"`, `\"ETH\"`\n          enum:\n          - BTC\n          - ETH\n          type: string\n        style: form\n      - description: Instrument kind, if not provided instruments of all kinds are\n          considered\n        explode: true\n        in: query\n        name: kind\n        required: false\n        schema:\n          description: Instrument kind, `\"future\"` or `\"option\"`\n          enum:\n          - future\n          - option\n          type: string\n        style: form\n      - description: The earliest timestamp to return result for\n        explode: true\n        in: query\n        name: start_timestamp\n        required: true\n        schema:\n          description: The timestamp (seconds since the Unix epoch, with millisecond\n            precision)\n          example: 1536569522277\n          type: integer\n        style: form\n      - description: The most recent timestamp to return result for\n        explode: true\n        in: query\n        name: end_timestamp\n        required: true\n        schema:\n          description: The timestamp (seconds since the Unix epoch, with millisecond\n            precision)\n          example: 1536569522277\n          type: integer\n        style: form\n      - description: Number of requested items, default - `10`\n        explode: true\n        in: query\n        name: count\n        required: false\n        schema:\n          type: integer\n        style: form\n      - description: Include trades older than 7 days, default - `false`\n        explode: true\n        in: query\n        name: include_old\n        required: false\n        schema:\n          type: boolean\n        style: form\n      - description: Direction of results sorting (`default` value means no sorting,\n          results will be returned in order in which they left the database)\n        explode: true\n        in: query\n        name: sorting\n        required: false\n        schema:\n          enum:\n          - asc\n          - desc\n          - default\n          type: string\n        style: form\n      responses:\n        200:\n          content:\n            application/json:\n              examples:\n                jsonObject:\n                  externalValue: examples/private/get_user_trades_by_currency_and_time.response.json\n              schema:\n                allOf:\n                - properties:\n                    testnet:\n                      description: false for production server, true for test server\n                      type: boolean\n                      x-hide-in-docs: true\n                    jsonrpc:\n                      description: The JSON-RPC version (2.0)\n                      enum:\n                      - \"2.0\"\n                      type: string\n                    usDiff:\n                      description: Duration of the handling of the request, in microseconds\n                      type: integer\n                      x-hide-in-docs: true\n                    id:\n                      description: The id that was sent in the request\n                      type: integer\n                    usOut:\n                      description: The timestamp (in microseconds) of sending of the\n                        response\n                      type: integer\n                      x-hide-in-docs: true\n                    usIn:\n                      description: The timestamp (in microseconds) of receipt of the\n                        request\n                      type: integer\n                      x-hide-in-docs: true\n                  required:\n                  - jsonrpc\n                  - testnet\n                  - usDiff\n                  - usIn\n                  - usOut\n                - properties:\n                    result:\n                      properties:\n                        has_more:\n                          type: boolean\n                        trades:\n                          items:\n                            properties:\n                              direction:\n                                description: Trade direction of the taker\n                                enum:\n                                - buy\n                                - sell\n                                type: string\n                              fee_currency:\n                                description: Currency, i.e `\"BTC\"`, `\"ETH\"`\n                                enum:\n                                - BTC\n                                - ETH\n                                type: string\n                              order_id:\n                                description: Id of the user order (maker or taker),\n                                  i.e. subscriber's order id that took part in the\n                                  trade\n                                type: string\n                              timestamp:\n                                description: The timestamp of the trade\n                                example: 1517329113791\n                                type: integer\n                              price:\n                                description: The price of the trade\n                                type: number\n                              iv:\n                                description: Option implied volatility for the price\n                                  (Option only)\n                                type: number\n                              trade_id:\n                                description: Unique (per currency) trade identifier\n                                type: string\n                              fee:\n                                description: User's fee in units of the specified\n                                  `fee_currency`\n                                type: number\n                              order_type:\n                                description: 'Order type: `\"limit`, `\"market\"`, or\n                                  `\"liquidation\"`'\n                                enum:\n                                - limit\n                                - market\n                                - liquidation\n                                type: string\n                              trade_seq:\n                                description: The sequence number of the trade within\n                                  instrument\n                                type: integer\n                              self_trade:\n                                description: '`true` if the trade is against own order.\n                                  This can only happen when your account has self-trading\n                                  enabled. Contact an administrator if you think you\n                                  need that'\n                                type: boolean\n                              state:\n                                description: order state, `\"open\"`, `\"filled\"`, `\"rejected\"`,\n                                  `\"cancelled\"`, `\"untriggered\"` or `\"archive\"` (if\n                                  order was archived)\n                                enum:\n                                - open\n                                - filled\n                                - rejected\n                                - cancelled\n                                - untriggered\n                                - archive\n                                type: string\n                              label:\n                                description: User defined label (presented only when\n                                  previously set for order by user)\n                                type: string\n                              index_price:\n                                description: Index Price at the moment of trade\n                                type: number\n                              amount:\n                                description: Trade amount. For perpetual and futures\n                                  - in USD units, for options it is amount of corresponding\n                                  cryptocurrency contracts, e.g., BTC or ETH.\n                                type: number\n                              instrument_name:\n                                description: Unique instrument identifier\n                                example: BTC-PERPETUAL\n                                type: string\n                              tick_direction:\n                                description: Direction of the \"tick\" (`0` = Plus Tick,\n                                  `1` = Zero-Plus Tick, `2` = Minus Tick, `3` = Zero-Minus\n                                  Tick).\n                                enum:\n                                - 0\n                                - 1\n                                - 2\n                                - 3\n                                type: integer\n                              matching_id:\n                                description: Always `null`, except for a self-trade\n                                  which is possible only if self-trading is switched\n                                  on for the account (in that case this will be id\n                                  of the maker order of the subscriber)\n                                type: string\n                              liquidity:\n                                description: 'Describes what was role of users order:\n                                  `\"M\"` when it was maker order, `\"T\"` when it was\n                                  taker order'\n                                enum:\n                                - M\n                                - T\n                                type: string\n                            required:\n                            - amount\n                            - direction\n                            - fee\n                            - fee_currency\n                            - index_price\n                            - instrument_name\n                            - matching_id\n                            - order_id\n                            - price\n                            - self_trade\n                            - state\n                            - tick_direction\n                            - timestamp\n                            - trade_id\n                            - trade_seq\n                          type: array\n                      required:\n                      - has_more\n                      - trades\n                      type: object\n                  required:\n                  - result\n                  type: object\n      summary: Retrieve the latest user trades that have occurred for instruments\n        in a specific currency symbol and within given time range.\n      tags:\n      - trading\n      - private\n  /public/get_book_summary_by_currency:\n    get:\n      parameters:\n      - description: The currency symbol\n        explode: true\n        in: query\n        name: currency\n        required: true\n        schema:\n          description: Currency, i.e `\"BTC\"`, `\"ETH\"`\n          enum:\n          - BTC\n          - ETH\n          type: string\n        style: form\n      - description: Instrument kind, if not provided instruments of all kinds are\n          considered\n        explode: true\n        in: query\n        name: kind\n        required: false\n        schema:\n          description: Instrument kind, `\"future\"` or `\"option\"`\n          enum:\n          - future\n          - option\n          type: string\n        style: form\n      responses:\n        200:\n          content:\n            application/json:\n              examples:\n                jsonObject:\n                  externalValue: examples/public/get_book_summary_by_currency.response.json\n              schema:\n                allOf:\n                - properties:\n                    testnet:\n                      description: false for production server, true for test server\n                      type: boolean\n                      x-hide-in-docs: true\n                    jsonrpc:\n                      description: The JSON-RPC version (2.0)\n                      enum:\n                      - \"2.0\"\n                      type: string\n                    usDiff:\n                      description: Duration of the handling of the request, in microseconds\n                      type: integer\n                      x-hide-in-docs: true\n                    id:\n                      description: The id that was sent in the request\n                      type: integer\n                    usOut:\n                      description: The timestamp (in microseconds) of sending of the\n                        response\n                      type: integer\n                      x-hide-in-docs: true\n                    usIn:\n                      description: The timestamp (in microseconds) of receipt of the\n                        request\n                      type: integer\n                      x-hide-in-docs: true\n                  required:\n                  - jsonrpc\n                  - testnet\n                  - usDiff\n                  - usIn\n                  - usOut\n                - properties:\n                    result:\n                      items:\n                        properties:\n                          underlying_index:\n                            description: Name of the underlying future, or `'index_price'`\n                              (options only)\n                            example: index_price\n                            type: string\n                          volume:\n                            description: The total 24h traded volume (in base currency)\n                            example: 223\n                            type: number\n                          volume_usd:\n                            description: Volume in usd (futures only)\n                            example: 102\n                            type: number\n                          underlying_price:\n                            description: underlying price for implied volatility calculations\n                              (options only)\n                            example: 6745.34\n                            type: number\n                          bid_price:\n                            description: The current best bid price, `null` if there\n                              aren't any bids\n                            example: 7022.89\n                            type: number\n                          open_interest:\n                            description: The total amount of outstanding contracts\n                              in the corresponding amount units. For perpetual and\n                              futures the amount is in USD units, for options it is\n                              amount of corresponding cryptocurrency contracts, e.g.,\n                              BTC or ETH.\n                            example: 0.5\n                            type: number\n                          quote_currency:\n                            description: Quote currency\n                            example: USD\n                            type: string\n                          high:\n                            description: Price of the 24h highest trade\n                            example: 7022.89\n                            type: number\n                          estimated_delivery_price:\n                            description: Estimated delivery price, in USD (futures\n                              only). For more details, see Documentation \u003e General\n                              \u003e Expiration Price\n                            example: 10029.5\n                            type: number\n                          last:\n                            description: The price of the latest trade, `null` if\n                              there weren't any trades\n                            example: 7022.89\n                            type: number\n                          mid_price:\n                            description: The average of the best bid and ask, `null`\n                              if there aren't any asks or bids\n                            example: 7022.89\n                            type: number\n                          interest_rate:\n                            description: Interest rate used in implied volatility\n                              calculations (options only)\n                            example: 0\n                            type: number\n                          funding_8h:\n                            description: Funding 8h (perpetual only)\n                            type: number\n                          mark_price:\n                            description: The current instrument market price\n                            example: 7022.89\n                            type: number\n                          ask_price:\n                            description: The current best ask price, `null` if there\n                              aren't any asks\n                            example: 7022.89\n                            type: number\n                          instrument_name:\n                            description: Unique instrument identifier\n                            example: BTC-PERPETUAL\n                            type: string\n                          low:\n                            description: Price of the 24h lowest trade, `null` if\n                              there weren't any trades\n                            example: 7022.89\n                            type: number\n                          base_currency:\n                            description: Base currency\n                            example: ETH\n                            type: string\n                          creation_timestamp:\n                            description: The timestamp (seconds since the Unix epoch,\n                              with millisecond precision)\n                            example: 1536569522277\n                            type: integer\n                          current_funding:\n                            description: Current funding (perpetual only)\n                            type: number\n                        required:\n                        - ask_price\n                        - base currency\n                        - bid_price\n                        - creation_timestamp\n                        - high\n                        - instrument_name\n                        - last\n                        - low\n                        - mark_price\n                        - mid_price\n                        - open_interest\n                        - quote_currency\n                        - volume\n                      type: array\n                  required:\n                  - result\n                  type: object\n      summary: Retrieves the summary information such as open interest, 24h volume,\n        etc. for all instruments for the currency (optionally filtered by kind).\n      tags:\n      - market_data\n      - public\n  /public/get_last_settlements_by_currency:\n    get:\n      parameters:\n      - description: The currency symbol\n        explode: true\n        in: query\n        name: currency\n        required: true\n        schema:\n          description: Currency, i.e `\"BTC\"`, `\"ETH\"`\n          enum:\n          - BTC\n          - ETH\n          type: string\n        style: form\n      - description: Settlement type\n        explode: true\n        in: query\n        name: type\n        required: false\n        schema:\n          description: The type of settlement. `settlement`, `delivery` or `bankruptcy`.\n          enum:\n          - settlement\n          - delivery\n          - bankruptcy\n          type: string\n        style: form\n      - description: Number of requested items, default - `20`\n        explode: true\n        in: query\n        name: count\n        required: false\n        schema:\n          type: integer\n        style: form\n      - description: Continuation token for pagination\n        explode: true\n        in: query\n        name: continuation\n        required: false\n        schema:\n          example: xY7T6cutS3t2B9YtaDkE6TS379oKnkzTvmEDUnEUP2Msa9xKWNNaT\n          type: string\n        style: form\n      - description: The latest timestamp to return result for\n        explode: true\n        in: query\n        name: search_start_timestamp\n        required: false\n        schema:\n          description: The timestamp (seconds since the Unix epoch, with millisecond\n            precision)\n          example: 1536569522277\n          type: integer\n        style: form\n      responses:\n        200:\n          content:\n            application/json:\n              examples:\n                jsonObject:\n                  externalValue: examples/public/get_last_settlements_by_currency.response.json\n              schema:\n                allOf:\n                - properties:\n                    testnet:\n                      description: false for production server, true for test server\n                      type: boolean\n                      x-hide-in-docs: true\n                    jsonrpc:\n                      description: The JSON-RPC version (2.0)\n                      enum:\n                      - \"2.0\"\n                      type: string\n                    usDiff:\n                      description: Duration of the handling of the request, in microseconds\n                      type: integer\n                      x-hide-in-docs: true\n                    id:\n                      description: The id that was sent in the request\n                      type: integer\n                    usOut:\n                      description: The timestamp (in microseconds) of sending of the\n                        response\n                      type: integer\n                      x-hide-in-docs: true\n                    usIn:\n                      description: The timestamp (in microseconds) of receipt of the\n                        request\n                      type: integer\n                      x-hide-in-docs: true\n                  required:\n                  - jsonrpc\n                  - testnet\n                  - usDiff\n                  - usIn\n                  - usOut\n                - properties:\n                    result:\n                      properties:\n                        continuation:\n                          description: Continuation token for pagination.\n                          example: xY7T6cutS3t2B9YtaDkE6TS379oKnkzTvmEDUnEUP2Msa9xKWNNaT\n                          type: string\n                        settlements:\n                          items:\n                            properties:\n                              session_profit_loss:\n                                description: total value of session profit and losses\n                                  (in base currency)\n                                example: 0.001160788\n                                type: number\n                              mark_price:\n                                description: mark price for at the settlement time\n                                  (in quote currency; settlement and delivery only)\n                                example: 11000\n                                type: number\n                              funding:\n                                description: funding (in base currency ; settlement\n                                  for perpetual product only)\n                                example: -0.000002511\n                                type: number\n                              socialized:\n                                description: the amount of the socialized losses (in\n                                  base currency; bankruptcy only)\n                                example: -0.001160788\n                                type: number\n                              session_bankrupcy:\n                                description: value of session bankrupcy (in base currency;\n                                  bankruptcy only)\n                                example: 0.001160788\n                                type: number\n                              timestamp:\n                                description: The timestamp (seconds since the Unix\n                                  epoch, with millisecond precision)\n                                example: 1536569522277\n                                type: integer\n                              profit_loss:\n                                description: profit and loss (in base currency; settlement\n                                  and delivery only)\n                                example: 0\n                                type: number\n                              funded:\n                                description: funded amount (bankruptcy only)\n                                example: 0\n                                type: number\n                              index_price:\n                                description: underlying index price at time of event\n                                  (in quote currency; settlement and delivery only)\n                                example: 11008.37\n                                type: number\n                              session_tax:\n                                description: total amount of paid taxes/fees (in base\n                                  currency; bankruptcy only)\n                                example: -0.001160788\n                                type: number\n                              session_tax_rate:\n                                description: rate of paid texes/fees (in base currency;\n                                  bankruptcy only)\n                                example: 0.000103333\n                                type: number\n                              instrument_name:\n                                description: instrument name (settlement and delivery\n                                  only)\n                                example: BTC-30MAR18\n                                type: string\n                              position:\n                                description: position size (in quote currency; settlement\n                                  and delivery only)\n                                example: 1000\n                                type: number\n                              type:\n                                description: The type of settlement. `settlement`,\n                                  `delivery` or `bankruptcy`.\n                                enum:\n                                - settlement\n                                - delivery\n                                - bankruptcy\n                                type: string\n                            required:\n                            - funding\n                            - index_price\n                            - instrument_name\n                            - position\n                            - session_profit_loss\n                            - timestamp\n                            - type\n                            type: object\n                          type: array\n                      required:\n                      - continuation\n                      - settlements\n                      type: list\n                  required:\n                  - result\n                  type: object\n      summary: Retrieves historical settlement, delivery and bankruptcy events coming\n        from all instruments within given currency.\n      tags:\n      - market_data\n      - public\n  /private/get_user_trades_by_instrument_and_time:\n    get:\n      parameters:\n      - description: Instrument name\n        explode: true\n        in: query\n        name: instrument_name\n        required: true\n        schema:\n          description: Unique instrument identifier\n          example: BTC-PERPETUAL\n          type: string\n        style: form\n      - description: The earliest timestamp to return result for\n        explode: true\n        in: query\n        name: start_timestamp\n        required: true\n        schema:\n          description: The timestamp (seconds since the Unix epoch, with millisecond\n            precision)\n          example: 1536569522277\n          type: integer\n        style: form\n      - description: The most recent timestamp to return result for\n        explode: true\n        in: query\n        name: end_timestamp\n        required: true\n        schema:\n          description: The timestamp (seconds since the Unix epoch, with millisecond\n            precision)\n          example: 1536569522277\n          type: integer\n        style: form\n      - description: Number of requested items, default - `10`\n        explode: true\n        in: query\n        name: count\n        required: false\n        schema:\n          type: integer\n        style: form\n      - description: Include trades older than 7 days, default - `false`\n        explode: true\n        in: query\n        name: include_old\n        required: false\n        schema:\n          type: boolean\n        style: form\n      - description: Direction of results sorting (`default` value means no sorting,\n          results will be returned in order in which they left the database)\n        explode: true\n        in: query\n        name: sorting\n        required: false\n        schema:\n          enum:\n          - asc\n          - desc\n          - default\n          type: string\n        style: form\n      responses:\n        200:\n          content:\n            application/json:\n              examples:\n                jsonObject:\n                  externalValue: examples/private/get_user_trades_by_instrument_and_time.response.json\n              schema:\n                allOf:\n                - properties:\n                    testnet:\n                      description: false for production server, true for test server\n                      type: boolean\n                      x-hide-in-docs: true\n                    jsonrpc:\n                      description: The JSON-RPC version (2.0)\n                      enum:\n                      - \"2.0\"\n                      type: string\n                    usDiff:\n                      description: Duration of the handling of the request, in microseconds\n                      type: integer\n                      x-hide-in-docs: true\n                    id:\n                      description: The id that was sent in the request\n                      type: integer\n                    usOut:\n                      description: The timestamp (in microseconds) of sending of the\n                        response\n                      type: integer\n                      x-hide-in-docs: true\n                    usIn:\n                      description: The timestamp (in microseconds) of receipt of the\n                        request\n                      type: integer\n                      x-hide-in-docs: true\n                  required:\n                  - jsonrpc\n                  - testnet\n                  - usDiff\n                  - usIn\n                  - usOut\n                - properties:\n                    result:\n                      properties:\n                        has_more:\n                          type: boolean\n                        trades:\n                          items:\n                            properties:\n                              direction:\n                                description: Trade direction of the taker\n                                enum:\n                                - buy\n                                - sell\n                                type: string\n                              fee_currency:\n                                description: Currency, i.e `\"BTC\"`, `\"ETH\"`\n                                enum:\n                                - BTC\n                                - ETH\n                                type: string\n                              order_id:\n                                description: Id of the user order (maker or taker),\n                                  i.e. subscriber's order id that took part in the\n                                  trade\n                                type: string\n                              timestamp:\n                                description: The timestamp of the trade\n                                example: 1517329113791\n                                type: integer\n                              price:\n                                description: The price of the trade\n                                type: number\n                              iv:\n                                description: Option implied volatility for the price\n                                  (Option only)\n                                type: number\n                              trade_id:\n                                description: Unique (per currency) trade identifier\n                                type: string\n                              fee:\n                                description: User's fee in units of the specified\n                                  `fee_currency`\n                                type: number\n                              order_type:\n                                description: 'Order type: `\"limit`, `\"market\"`, or\n                                  `\"liquidation\"`'\n                                enum:\n                                - limit\n                                - market\n                                - liquidation\n                                type: string\n                              trade_seq:\n                                description: The sequence number of the trade within\n                                  instrument\n                                type: integer\n                              self_trade:\n                                description: '`true` if the trade is against own order.\n                                  This can only happen when your account has self-trading\n                                  enabled. Contact an administrator if you think you\n                                  need that'\n                                type: boolean\n                              state:\n                                description: order state, `\"open\"`, `\"filled\"`, `\"rejected\"`,\n                                  `\"cancelled\"`, `\"untriggered\"` or `\"archive\"` (if\n                                  order was archived)\n                                enum:\n                                - open\n                                - filled\n                                - rejected\n                                - cancelled\n                                - untriggered\n                                - archive\n                                type: string\n                              label:\n                                description: User defined label (presented only when\n                                  previously set for order by user)\n                                type: string\n                              index_price:\n                                description: Index Price at the moment of trade\n                                type: number\n                              amount:\n                                description: Trade amount. For perpetual and futures\n                                  - in USD units, for options it is amount of corresponding\n                                  cryptocurrency contracts, e.g., BTC or ETH.\n                                type: number\n                              instrument_name:\n                                description: Unique instrument identifier\n                                example: BTC-PERPETUAL\n                                type: string\n                              tick_direction:\n                                description: Direction of the \"tick\" (`0` = Plus Tick,\n                                  `1` = Zero-Plus Tick, `2` = Minus Tick, `3` = Zero-Minus\n                                  Tick).\n                                enum:\n                                - 0\n                                - 1\n                                - 2\n                                - 3\n                                type: integer\n                              matching_id:\n                                description: Always `null`, except for a self-trade\n                                  which is possible only if self-trading is switched\n                                  on for the account (in that case this will be id\n                                  of the maker order of the subscriber)\n                                type: string\n                              liquidity:\n                                description: 'Describes what was role of users order:\n                                  `\"M\"` when it was maker order, `\"T\"` when it was\n                                  taker order'\n                                enum:\n                                - M\n                                - T\n                                type: string\n                            required:\n                            - amount\n                            - direction\n                            - fee\n                            - fee_currency\n                            - index_price\n                            - instrument_name\n                            - matching_id\n                            - order_id\n                            - price\n                            - self_trade\n                            - state\n                            - tick_direction\n                            - timestamp\n                            - trade_id\n                            - trade_seq\n                          type: array\n                      required:\n                      - has_more\n                      - trades\n                      type: object\n                  required:\n                  - result\n                  type: object\n      summary: Retrieve the latest user trades that have occurred for a specific instrument\n        and within given time range.\n      tags:\n      - trading\n      - private\n  /private/set_announcement_as_read:\n    get:\n      parameters:\n      - description: the ID of the announcement\n        explode: true\n        in: query\n        name: announcement_id\n        required: true\n        schema:\n          type: number\n        style: form\n      responses:\n        200:\n          content:\n            application/json:\n              examples:\n                jsonObject:\n                  externalValue: examples/private/set_announcement_as_read.response.json\n              schema:\n                allOf:\n                - properties:\n                    testnet:\n                      description: false for production server, true for test server\n                      type: boolean\n                      x-hide-in-docs: true\n                    jsonrpc:\n                      description: The JSON-RPC version (2.0)\n                      enum:\n                      - \"2.0\"\n                      type: string\n                    usDiff:\n                      description: Duration of the handling of the request, in microseconds\n                      type: integer\n                      x-hide-in-docs: true\n                    id:\n                      description: The id that was sent in the request\n                      type: integer\n                    usOut:\n                      description: The timestamp (in microseconds) of sending of the\n                        response\n                      type: integer\n                      x-hide-in-docs: true\n                    usIn:\n                      description: The timestamp (in microseconds) of receipt of the\n                        request\n                      type: integer\n                      x-hide-in-docs: true\n                  required:\n                  - jsonrpc\n                  - testnet\n                  - usDiff\n                  - usIn\n                  - usOut\n                - properties:\n                    result:\n                      description: Result of method execution. `ok` in case of success\n                      enum:\n                      - ok\n                      type: string\n                  required:\n                  - result\n                  type: object\n      summary: Marks an announcement as read, so it will not be shown in `get_new_announcements`.\n      tags:\n      - account_management\n      - private\n  /private/get_settlement_history_by_currency:\n    get:\n      parameters:\n      - description: The currency symbol\n        explode: true\n        in: query\n        name: currency\n        required: true\n        schema:\n          description: Currency, i.e `\"BTC\"`, `\"ETH\"`\n          enum:\n          - BTC\n          - ETH\n          type: string\n        style: form\n      - description: Settlement type\n        explode: true\n        in: query\n        name: type\n        required: false\n        schema:\n          description: The type of settlement. `settlement`, `delivery` or `bankruptcy`.\n          enum:\n          - settlement\n          - delivery\n          - bankruptcy\n          type: string\n        style: form\n      - description: Number of requested items, default - `20`\n        explode: true\n        in: query\n        name: count\n        required: false\n        schema:\n          type: integer\n        style: form\n      responses:\n        200:\n          content:\n            application/json:\n              examples:\n                jsonObject:\n                  externalValue: examples/private/get_settlement_history_by_currency.response.json\n              schema:\n                allOf:\n                - properties:\n                    testnet:\n                      description: false for production server, true for test server\n                      type: boolean\n                      x-hide-in-docs: true\n                    jsonrpc:\n                      description: The JSON-RPC version (2.0)\n                      enum:\n                      - \"2.0\"\n                      type: string\n                    usDiff:\n                      description: Duration of the handling of the request, in microseconds\n                      type: integer\n                      x-hide-in-docs: true\n                    id:\n                      description: The id that was sent in the request\n                      type: integer\n                    usOut:\n                      description: The timestamp (in microseconds) of sending of the\n                        response\n                      type: integer\n                      x-hide-in-docs: true\n                    usIn:\n                      description: The timestamp (in microseconds) of receipt of the\n                        request\n                      type: integer\n                      x-hide-in-docs: true\n                  required:\n                  - jsonrpc\n                  - testnet\n                  - usDiff\n                  - usIn\n                  - usOut\n                - properties:\n                    result:\n                      properties:\n                        continuation:\n                          description: Continuation token for pagination.\n                          example: xY7T6cutS3t2B9YtaDkE6TS379oKnkzTvmEDUnEUP2Msa9xKWNNaT\n                          type: string\n                        settlements:\n                          items:\n                            properties:\n                              session_profit_loss:\n                                description: total value of session profit and losses\n                                  (in base currency)\n                                example: 0.001160788\n                                type: number\n                              mark_price:\n                                description: mark price for at the settlement time\n                                  (in quote currency; settlement and delivery only)\n                                example: 11000\n                                type: number\n                              funding:\n                                description: funding (in base currency ; settlement\n                                  for perpetual product only)\n                                example: -0.000002511\n                                type: number\n                              socialized:\n                                description: the amount of the socialized losses (in\n                                  base currency; bankruptcy only)\n                                example: -0.001160788\n                                type: number\n                              session_bankrupcy:\n                                description: value of session bankrupcy (in base currency;\n                                  bankruptcy only)\n                                example: 0.001160788\n                                type: number\n                              timestamp:\n                                description: The timestamp (seconds since the Unix\n                                  epoch, with millisecond precision)\n                                example: 1536569522277\n                                type: integer\n                              profit_loss:\n                                description: profit and loss (in base currency; settlement\n                                  and delivery only)\n                                example: 0\n                                type: number\n                              funded:\n                                description: funded amount (bankruptcy only)\n                                example: 0\n                                type: number\n                              index_price:\n                                description: underlying index price at time of event\n                                  (in quote currency; settlement and delivery only)\n                                example: 11008.37\n                                type: number\n                              session_tax:\n                                description: total amount of paid taxes/fees (in base\n                                  currency; bankruptcy only)\n                                example: -0.001160788\n                                type: number\n                              session_tax_rate:\n                                description: rate of paid texes/fees (in base currency;\n                                  bankruptcy only)\n                                example: 0.000103333\n                                type: number\n                              instrument_name:\n                                description: instrument name (settlement and delivery\n                                  only)\n                                example: BTC-30MAR18\n                                type: string\n                              position:\n                                description: position size (in quote currency; settlement\n                                  and delivery only)\n                                example: 1000\n                                type: number\n                              type:\n                                description: The type of settlement. `settlement`,\n                                  `delivery` or `bankruptcy`.\n                                enum:\n                                - settlement\n                                - delivery\n                                - bankruptcy\n                                type: string\n                            required:\n                            - funding\n                            - index_price\n                            - instrument_name\n                            - position\n                            - session_profit_loss\n                            - timestamp\n                            - type\n                            type: object\n                          type: array\n                      required:\n                      - continuation\n                      - settlements\n                      type: list\n                  required:\n                  - result\n                  type: object\n      summary: Retrieves settlement, delivery and bankruptcy events that have affected\n        your account.\n      tags:\n      - trading\n      - private\n    x-order: 10200\n  /private/get_transfers:\n    get:\n      parameters:\n      - description: The currency symbol\n        explode: true\n        in: query\n        name: currency\n        required: true\n        schema:\n          description: Currency, i.e `\"BTC\"`, `\"ETH\"`\n          enum:\n          - BTC\n          - ETH\n          type: string\n        style: form\n      - description: Number of requested items, default - `10`\n        explode: true\n        in: query\n        name: count\n        required: false\n        schema:\n          type: integer\n        style: form\n      - description: The offset for pagination, default - `0`\n        explode: true\n        in: query\n        name: offset\n        required: false\n        schema:\n          example: 10\n          type: integer\n        style: form\n      responses:\n        200:\n          content:\n            application/json:\n              examples:\n                jsonObject:\n                  externalValue: examples/private/get_transfers.response.json\n              schema:\n                allOf:\n                - properties:\n                    testnet:\n                      description: false for production server, true for test server\n                      type: boolean\n                      x-hide-in-docs: true\n                    jsonrpc:\n                      description: The JSON-RPC version (2.0)\n                      enum:\n                      - \"2.0\"\n                      type: string\n                    usDiff:\n                      description: Duration of the handling of the request, in microseconds\n                      type: integer\n                      x-hide-in-docs: true\n                    id:\n                      description: The id that was sent in the request\n                      type: integer\n                    usOut:\n                      description: The timestamp (in microseconds) of sending of the\n                        response\n                      type: integer\n                      x-hide-in-docs: true\n                    usIn:\n                      description: The timestamp (in microseconds) of receipt of the\n                        request\n                      type: integer\n                      x-hide-in-docs: true\n                  required:\n                  - jsonrpc\n                  - testnet\n                  - usDiff\n                  - usIn\n                  - usOut\n                - properties:\n                    result:\n                      properties:\n                        count:\n                          description: Total number of results available\n                          example: 101\n                          type: integer\n                        data:\n                          items:\n                            properties:\n                              updated_timestamp:\n                                description: The timestamp (seconds since the Unix\n                                  epoch, with millisecond precision)\n                                example: 1536569522277\n                                type: integer\n                              direction:\n                                description: Transfer direction\n                                enum:\n                                - payment\n                                - income\n                                type: string\n                              amount:\n                                description: Amount of funds in given currency\n                                example: 1\n                                type: number\n                              other_side:\n                                description: For transfer from/to subaccount returns\n                                  this subaccount name, for transfer to other account\n                                  returns address, for transfer from other account\n                                  returns that accounts username.\n                                example: Smith\n                                type: string\n                              currency:\n                                description: Currency, i.e `\"BTC\"`, `\"ETH\"`\n                                enum:\n                                - BTC\n                                - ETH\n                                type: string\n                              state:\n                                description: 'Transfer state, allowed values : `prepared`,\n                                  `confirmed`, `cancelled`, `waiting_for_admin`, `rejection_reason`'\n                                enum:\n                                - prepared\n                                - confirmed\n                                - cancelled\n                                - waiting_for_admin\n                                - rejection_reason\n                                type: string\n                              created_timestamp:\n                                description: The timestamp (seconds since the Unix\n                                  epoch, with millisecond precision)\n                                example: 1536569522277\n                                type: integer\n                              type:\n                                description: 'Type of transfer: `user` - sent to user,\n                                  `subaccount` - sent to subaccount'\n                                enum:\n                                - user\n                                - subaccount\n                                type: string\n                              id:\n                                description: Id of transfer\n                                example: 12\n                                type: integer\n                            required:\n                            - amount\n                            - created_timestamp\n                            - currency\n                            - id\n                            - other_side\n                            - other_side_type\n                            - state\n                            - type\n                            - updated_timestamp\n                            type: object\n                          type: array\n                      required:\n                      - count\n                      - data\n                      type: object\n                  required:\n                  - result\n                  type: object\n      summary: Adds new entry to address book of given type\n      tags:\n      - wallet\n      - private\n  /private/submit_transfer_to_subaccount:\n    get:\n      parameters:\n      - description: The currency symbol\n        explode: true\n        in: query\n        name: currency\n        required: true\n        schema:\n          description: Currency, i.e `\"BTC\"`, `\"ETH\"`\n          enum:\n          - BTC\n          - ETH\n          type: string\n        style: form\n      - description: Amount of funds to be transferred\n        explode: true\n        in: query\n        name: amount\n        required: true\n        schema:\n          type: number\n        style: form\n      - description: Id of destination subaccount\n        explode: true\n        in: query\n        name: destination\n        required: true\n        schema:\n          example: 1\n          type: integer\n        style: form\n      responses:\n        200:\n          content:\n            application/json:\n              examples:\n                jsonObject:\n                  externalValue: examples/private/submit_transfer_to_subaccount.response.json\n              schema:\n                allOf:\n                - properties:\n                    testnet:\n                      description: false for production server, true for test server\n                      type: boolean\n                      x-hide-in-docs: true\n                    jsonrpc:\n                      description: The JSON-RPC version (2.0)\n                      enum:\n                      - \"2.0\"\n                      type: string\n                    usDiff:\n                      description: Duration of the handling of the request, in microseconds\n                      type: integer\n                      x-hide-in-docs: true\n                    id:\n                      description: The id that was sent in the request\n                      type: integer\n                    usOut:\n                      description: The timestamp (in microseconds) of sending of the\n                        response\n                      type: integer\n                      x-hide-in-docs: true\n                    usIn:\n                      description: The timestamp (in microseconds) of receipt of the\n                        request\n                      type: integer\n                      x-hide-in-docs: true\n                  required:\n                  - jsonrpc\n                  - testnet\n                  - usDiff\n                  - usIn\n                  - usOut\n                - properties:\n                    result:\n                      properties:\n                        updated_timestamp:\n                          description: The timestamp (seconds since the Unix epoch,\n                            with millisecond precision)\n                          example: 1536569522277\n                          type: integer\n                        direction:\n                          description: Transfer direction\n                          enum:\n                          - payment\n                          - income\n                          type: string\n                        amount:\n                          description: Amount of funds in given currency\n                          example: 1\n                          type: number\n                        other_side:\n                          description: For transfer from/to subaccount returns this\n                            subaccount name, for transfer to other account returns\n                            address, for transfer from other account returns that\n                            accounts username.\n                          example: Smith\n                          type: string\n                        currency:\n                          description: Currency, i.e `\"BTC\"`, `\"ETH\"`\n                          enum:\n                          - BTC\n                          - ETH\n                          type: string\n                        state:\n                          description: 'Transfer state, allowed values : `prepared`,\n                            `confirmed`, `cancelled`, `waiting_for_admin`, `rejection_reason`'\n                          enum:\n                          - prepared\n                          - confirmed\n                          - cancelled\n                          - waiting_for_admin\n                          - rejection_reason\n                          type: string\n                        created_timestamp:\n                          description: The timestamp (seconds since the Unix epoch,\n                            with millisecond precision)\n                          example: 1536569522277\n                          type: integer\n                        type:\n                          description: 'Type of transfer: `user` - sent to user, `subaccount`\n                            - sent to subaccount'\n                          enum:\n                          - user\n                          - subaccount\n                          type: string\n                        id:\n                          description: Id of transfer\n                          example: 12\n                          type: integer\n                      required:\n                      - amount\n                      - created_timestamp\n                      - currency\n                      - id\n                      - other_side\n                      - other_side_type\n                      - state\n                      - type\n                      - updated_timestamp\n                      type: object\n                  required:\n                  - result\n                  type: object\n          description: ok response\n      summary: Transfer funds to a subaccount.\n      tags:\n      - private\n      - wallet\n      - internal\n  /private/get_withdrawals:\n    get:\n      parameters:\n      - description: The currency symbol\n        explode: true\n        in: query\n        name: currency\n        required: true\n        schema:\n          description: Currency, i.e `\"BTC\"`, `\"ETH\"`\n          enum:\n          - BTC\n          - ETH\n          type: string\n        style: form\n      - description: Number of requested items, default - `10`\n        explode: true\n        in: query\n        name: count\n        required: false\n        schema:\n          type: integer\n        style: form\n      - description: The offset for pagination, default - `0`\n        explode: true\n        in: query\n        name: offset\n        required: false\n        schema:\n          example: 10\n          type: integer\n        style: form\n      responses:\n        200:\n          content:\n            application/json:\n              examples:\n                jsonObject:\n                  externalValue: examples/private/get_withdrawals.response.json\n              schema:\n                allOf:\n                - properties:\n                    testnet:\n                      description: false for production server, true for test server\n                      type: boolean\n                      x-hide-in-docs: true\n                    jsonrpc:\n                      description: The JSON-RPC version (2.0)\n                      enum:\n                      - \"2.0\"\n                      type: string\n                    usDiff:\n                      description: Duration of the handling of the request, in microseconds\n                      type: integer\n                      x-hide-in-docs: true\n                    id:\n                      description: The id that was sent in the request\n                      type: integer\n                    usOut:\n                      description: The timestamp (in microseconds) of sending of the\n                        response\n                      type: integer\n                      x-hide-in-docs: true\n                    usIn:\n                      description: The timestamp (in microseconds) of receipt of the\n                        request\n                      type: integer\n                      x-hide-in-docs: true\n                  required:\n                  - jsonrpc\n                  - testnet\n                  - usDiff\n                  - usIn\n                  - usOut\n                - properties:\n                    result:\n                      properties:\n                        count:\n                          description: Total number of results available\n                          example: 101\n                          type: integer\n                        data:\n                          items:\n                            properties:\n                              updated_timestamp:\n                                description: The timestamp (seconds since the Unix\n                                  epoch, with millisecond precision)\n                                example: 1536569522277\n                                type: integer\n                              fee:\n                                description: Fee in currency\n                                example: 0.000023\n                                type: number\n                              confirmed_timestamp:\n                                description: The timestamp (seconds since the Unix\n                                  epoch, with millisecond precision) of withdrawal\n                                  confirmation, `null` when not confirmed\n                                example: 1536569522277\n                                nullable: true\n                                type: integer\n                              amount:\n                                description: Amount of funds in given currency\n                                example: 1\n                                type: number\n                              priority:\n                                description: Id of priority level\n                                example: 1\n                                type: number\n                              currency:\n                                description: Currency, i.e `\"BTC\"`, `\"ETH\"`\n                                enum:\n                                - BTC\n                                - ETH\n                                type: string\n                              state:\n                                description: 'Withdrawal state, allowed values : `unconfirmed`,\n                                  `confirmed`, `cancelled`, `completed`, `interrupted`,\n                                  `rejected`'\n                                enum:\n                                - unconfirmed\n                                - confirmed\n                                - cancelled\n                                - completed\n                                - interrupted\n                                - rejected\n                                type: string\n                              address:\n                                description: Address in proper format for currency\n                                example: 1A1zP1eP5QGefi2DMPTfTL5SLmv7DivfNa\n                                type: string\n                              created_timestamp:\n                                description: The timestamp (seconds since the Unix\n                                  epoch, with millisecond precision)\n                                example: 1536569522277\n                                type: integer\n                              id:\n                                description: Withdrawal id in Deribit system\n                                example: 1\n                                type: integer\n                              transaction_id:\n                                description: Transaction id in proper format for currency,\n                                  `null` if id is not available\n                                example: 1b1fb5568515e2b79503501e3d3680b2d0838d5dfc2d15a04eb8cd9fbbe0b572\n                                nullable: true\n                                type: string\n                            required:\n                            - address\n                            - amount\n                            - currency\n                            - received_timestamp\n                            - state\n                            - transaction_id\n                            - updated_timestamp\n                            type: object\n                          type: array\n                      required:\n                      - count\n                      - data\n                      type: object\n                  required:\n                  - result\n                  type: object\n      summary: Retrieve the latest users withdrawals\n      tags:\n      - wallet\n      - private\n  /private/add_to_address_book:\n    get:\n      parameters:\n      - description: The currency symbol\n        explode: true\n        in: query\n        name: currency\n        required: true\n        schema:\n          description: Currency, i.e `\"BTC\"`, `\"ETH\"`\n          enum:\n          - BTC\n          - ETH\n          type: string\n        style: form\n      - description: Address book type\n        explode: true\n        in: query\n        name: type\n        required: true\n        schema:\n          description: Address book type\n          enum:\n          - transfer\n          - withdrawal\n          type: string\n        style: form\n      - description: Address in currency format, it must be in address book\n        explode: true\n        in: query\n        name: address\n        required: true\n        schema:\n          type: string\n        style: form\n      - description: Name of address book entry\n        explode: true\n        in: query\n        name: name\n        required: true\n        schema:\n          example: Main address\n          type: string\n        style: form\n      - description: TFA code, required when TFA is enabled for current account\n        explode: true\n        in: query\n        name: tfa\n        required: false\n        schema:\n          type: string\n        style: form\n      responses:\n        200:\n          content:\n            application/json:\n              schema:\n                allOf:\n                - properties:\n                    testnet:\n                      description: false for production server, true for test server\n                      type: boolean\n                      x-hide-in-docs: true\n                    jsonrpc:\n                      description: The JSON-RPC version (2.0)\n                      enum:\n                      - \"2.0\"\n                      type: string\n                    usDiff:\n                      description: Duration of the handling of the request, in microseconds\n                      type: integer\n                      x-hide-in-docs: true\n                    id:\n                      description: The id that was sent in the request\n                      type: integer\n                    usOut:\n                      description: The timestamp (in microseconds) of sending of the\n                        response\n                      type: integer\n                      x-hide-in-docs: true\n                    usIn:\n                      description: The timestamp (in microseconds) of receipt of the\n                        request\n                      type: integer\n                      x-hide-in-docs: true\n                  required:\n                  - jsonrpc\n                  - testnet\n                  - usDiff\n                  - usIn\n                  - usOut\n                - properties:\n                    result:\n                      properties:\n                        currency:\n                          description: Currency, i.e `\"BTC\"`, `\"ETH\"`\n                          enum:\n                          - BTC\n                          - ETH\n                          type: string\n                        address:\n                          description: Address in proper format for currency\n                          example: 1A1zP1eP5QGefi2DMPTfTL5SLmv7DivfNa\n                          type: string\n                        type:\n                          description: Address book type\n                          enum:\n                          - transfer\n                          - withdrawal\n                          type: string\n                        creation_timestamp:\n                          description: The timestamp (seconds since the Unix epoch,\n                            with millisecond precision)\n                          example: 1536569522277\n                          type: integer\n                      required:\n                      - address\n                      - creation_timestamp\n                      - currency\n                      type: object\n                  required:\n                  - result\n                  type: object\n      summary: Adds new entry to address book of given type\n      tags:\n      - wallet\n      - private\n      - internal\n  /public/get_index:\n    get:\n      parameters:\n      - description: The currency symbol\n        explode: true\n        in: query\n        name: currency\n        required: true\n        schema:\n          description: Currency, i.e `\"BTC\"`, `\"ETH\"`\n          enum:\n          - BTC\n          - ETH\n          type: string\n        style: form\n      responses:\n        200:\n          content:\n            application/json:\n              schema:\n                allOf:\n                - properties:\n                    testnet:\n                      description: false for production server, true for test server\n                      type: boolean\n                      x-hide-in-docs: true\n                    jsonrpc:\n                      description: The JSON-RPC version (2.0)\n                      enum:\n                      - \"2.0\"\n                      type: string\n                    usDiff:\n                      description: Duration of the handling of the request, in microseconds\n                      type: integer\n                      x-hide-in-docs: true\n                    id:\n                      description: The id that was sent in the request\n                      type: integer\n                    usOut:\n                      description: The timestamp (in microseconds) of sending of the\n                        response\n                      type: integer\n                      x-hide-in-docs: true\n                    usIn:\n                      description: The timestamp (in microseconds) of receipt of the\n                        request\n                      type: integer\n                      x-hide-in-docs: true\n                  required:\n                  - jsonrpc\n                  - testnet\n                  - usDiff\n                  - usIn\n                  - usOut\n                - properties:\n                    result:\n                      properties:\n                        edp:\n                          description: Estimated delivery price for the currency.\n                            For more details, see Documentation \u003e General \u003e Expiration\n                            Price\n                          example: 11628.81\n                          type: number\n                        ETH:\n                          description: The current index price for ETH-USD (only for\n                            selected currency == ETH)\n                          example: 328.81\n                          type: number\n                        BTC:\n                          description: The current index price for BTC-USD (only for\n                            selected currency == BTC)\n                          example: 11628.81\n                          type: number\n                      required:\n                      - BTC\n                      - edp\n                      type: object\n                  required:\n                  - result\n                  type: object\n      summary: Retrieves the current index price for the instruments, for the selected\n        currency.\n      tags:\n      - market_data\n      - public\n  /public/ticker:\n    get:\n      parameters:\n      - description: Instrument name\n        explode: true\n        in: query\n        name: instrument_name\n        required: true\n        schema:\n          description: Unique instrument identifier\n          example: BTC-PERPETUAL\n          type: string\n        style: form\n      responses:\n        200:\n          content:\n            application/json:\n              examples:\n                jsonObject:\n                  externalValue: examples/public/ticker.response.json\n              schema:\n                allOf:\n                - properties:\n                    testnet:\n                      description: false for production server, true for test server\n                      type: boolean\n                      x-hide-in-docs: true\n                    jsonrpc:\n                      description: The JSON-RPC version (2.0)\n                      enum:\n                      - \"2.0\"\n                      type: string\n                    usDiff:\n                      description: Duration of the handling of the request, in microseconds\n                      type: integer\n                      x-hide-in-docs: true\n                    id:\n                      description: The id that was sent in the request\n                      type: integer\n                    usOut:\n                      description: The timestamp (in microseconds) of sending of the\n                        response\n                      type: integer\n                      x-hide-in-docs: true\n                    usIn:\n                      description: The timestamp (in microseconds) of receipt of the\n                        request\n                      type: integer\n                      x-hide-in-docs: true\n                  required:\n                  - jsonrpc\n                  - testnet\n                  - usDiff\n                  - usIn\n                  - usOut\n                - properties:\n                    result:\n                      properties:\n                        best_bid_amount:\n                          description: It represents the requested order size of all\n                            best bids\n                          nullable: true\n                          type: number\n                        best_ask_amount:\n                          description: It represents the requested order size of all\n                            best asks\n                          nullable: true\n                          type: number\n                        timestamp:\n                          description: The timestamp (seconds since the Unix epoch,\n                            with millisecond precision)\n                          example: 1536569522277\n                          type: integer\n                        last_price:\n                          description: The price for the last trade\n                          nullable: true\n                          type: number\n                        delivery_price:\n                          description: The settlement price for the instrument. Only\n                            when `state = closed`\n                          type: number\n                        underlying_price:\n                          description: Underlying price for implied volatility calculations\n                            (options only)\n                          type: number\n                        ask_iv:\n                          description: (Only for option) implied volatility for best\n                            ask\n                          type: number\n                        best_bid_price:\n                          description: The current best bid price, `null` if there\n                            aren't any bids\n                          nullable: true\n                          type: number\n                        open_interest:\n                          description: The total amount of outstanding contracts in\n                            the corresponding amount units. For perpetual and futures\n                            the amount is in USD units, for options it is amount of\n                            corresponding cryptocurrency contracts, e.g., BTC or ETH.\n                          type: number\n                        bid_iv:\n                          description: (Only for option) implied volatility for best\n                            bid\n                          type: number\n                        underlying_index:\n                          description: Name of the underlying future, or `index_price`\n                            (options only)\n                          type: number\n                        mark_price:\n                          description: The mark price for the instrument\n                          type: number\n                        stats:\n                          properties:\n                            volume:\n                              description: volume during last 24h in base currency\n                              type: number\n                            high:\n                              description: highest price during 24h\n                              type: number\n                            low:\n                              description: lowest price during 24h\n                              type: number\n                          required:\n                          - high\n                          - low\n                          - volume\n                          type: object\n                        mark_iv:\n                          description: (Only for option) implied volatility for mark\n                            price\n                          type: number\n                        greeks:\n                          description: Only for options\n                          properties:\n                            theta:\n                              description: (Only for option) The theta value for the\n                                option\n                              type: number\n                            vega:\n                              description: (Only for option) The vega value for the\n                                option\n                              type: number\n                            gamma:\n                              description: (Only for option) The gamma value for the\n                                option\n                              type: number\n                            rho:\n                              description: (Only for option) The rho value for the\n                                option\n                              type: number\n                            delta:\n                              description: (Only for option) The delta value for the\n                                option\n                              type: number\n                          required:\n                          - delta\n                          - gamma\n                          - rho\n                          - theta\n                          - vega\n                          type: object\n                        interest_rate:\n                          description: Interest rate used in implied volatility calculations\n                            (options only)\n                          type: number\n                        settlement_price:\n                          description: The settlement price for the instrument. Only\n                            when `state = open`\n                          type: number\n                        funding_8h:\n                          description: Funding 8h (perpetual only)\n                          type: number\n                        index_price:\n                          description: Current index price\n                          example: 8247.27\n                          type: number\n                        state:\n                          description: The state of the order book. Possible values\n                            are `open` and `closed`.\n                          enum:\n                          - open\n                          - closed\n                          type: string\n                        min_price:\n                          description: The minimum price for the future. Any sell\n                            orders you submit lower than this price will be clamped\n                            to this minimum.\n                          type: number\n                        instrument_name:\n                          description: Unique instrument identifier\n                          example: BTC-PERPETUAL\n                          type: string\n                        best_ask_price:\n                          description: The current best ask price, `null` if there\n                            aren't any asks\n                          nullable: true\n                          type: number\n                        max_price:\n                          description: The maximum price for the future. Any buy orders\n                            you submit higher than this price, will be clamped to\n                            this maximum.\n                          type: number\n                        current_funding:\n                          description: Current funding (perpetual only)\n                          type: number\n                      required:\n                      - best_add_amount\n                      - best_add_price\n                      - best_bid_amount\n                      - best_bid_price\n                      - index_price\n                      - instrument_name\n                      - last_price\n                      - mark_price\n                      - max_price\n                      - min_price\n                      - open_interest\n                      - state\n                      - stats\n                      - timestamp\n                  required:\n                  - result\n                  type: object\n          description: ok response\n      summary: Get ticker for an instrument.\n      tags:\n      - public\n      - market_data\n  /private/get_account_summary:\n    get:\n      parameters:\n      - description: The currency symbol\n        explode: true\n        in: query\n        name: currency\n        required: true\n        schema:\n          description: Currency, i.e `\"BTC\"`, `\"ETH\"`\n          enum:\n          - BTC\n          - ETH\n          type: string\n        style: form\n      - description: Include additional fields\n        explode: true\n        in: query\n        name: extended\n        required: false\n        schema:\n          example: false\n          type: boolean\n        style: form\n      responses:\n        200:\n          content:\n            application/json:\n              examples:\n                jsonObject:\n                  externalValue: examples/private/get_account_summary.response.json\n              schema:\n                allOf:\n                - properties:\n                    testnet:\n                      description: false for production server, true for test server\n                      type: boolean\n                      x-hide-in-docs: true\n                    jsonrpc:\n                      description: The JSON-RPC version (2.0)\n                      enum:\n                      - \"2.0\"\n                      type: string\n                    usDiff:\n                      description: Duration of the handling of the request, in microseconds\n                      type: integer\n                      x-hide-in-docs: true\n                    id:\n                      description: The id that was sent in the request\n                      type: integer\n                    usOut:\n                      description: The timestamp (in microseconds) of sending of the\n                        response\n                      type: integer\n                      x-hide-in-docs: true\n                    usIn:\n                      description: The timestamp (in microseconds) of receipt of the\n                        request\n                      type: integer\n                      x-hide-in-docs: true\n                  required:\n                  - jsonrpc\n                  - testnet\n                  - usDiff\n                  - usIn\n                  - usOut\n                - properties:\n                    result:\n                      properties:\n                        session_rpl:\n                          description: Session realized profit and loss\n                          example: 0.1\n                          type: number\n                        futures_pl:\n                          description: Futures profit and Loss\n                          example: 0\n                          type: number\n                        options_vega:\n                          description: Options summary vega\n                          example: 0\n                          type: number\n                        session_upl:\n                          description: Session unrealized profit and loss\n                          example: 0.846863\n                          type: number\n                        currency:\n                          description: The selected currency\n                          example: ETH\n                          type: string\n                        portfolio_margining_enabled:\n                          description: '`true` when portfolio margining is enabled\n                            for user'\n                          example: true\n                          type: boolean\n                        margin_balance:\n                          description: The account's margin balance\n                          example: 2.25\n                          type: number\n                        futures_session_upl:\n                          description: Futures session unrealized profit and Loss\n                          example: 0\n                          type: number\n                        total_pl:\n                          description: Profit and loss\n                          example: 0.02032221\n                          type: number\n                        projected_maintenance_margin:\n                          description: Projected maintenance margin (for portfolio\n                            margining users)\n                          example: 1\n                          type: number\n                        id:\n                          description: Account id (available when parameter `extended`\n                            = `true`)\n                          example: 12354\n                          type: integer\n                        options_gamma:\n                          description: Options summary gamma\n                          example: 0\n                          type: number\n                        maintenance_margin:\n                          description: The maintenance margin.\n                          example: 0.1334519\n                          type: number\n                        available_withdrawal_funds:\n                          description: The account's available to withdrawal funds\n                          example: 2.26\n                          type: number\n                        initial_margin:\n                          description: The account's initial margin\n                          example: 0.379882\n                          type: number\n                        session_funding:\n                          description: Session funding\n                          example: 0\n                          type: number\n                        available_funds:\n                          description: The account's available funds\n                          example: 2.2638913\n                          type: number\n                        equity:\n                          description: The account's current equity\n                          example: 2.6437733\n                          type: number\n                        type:\n                          description: Account type (available when parameter `extended`\n                            = `true`)\n                          enum:\n                          - main\n                          - subaccount\n                          type: string\n                        email:\n                          description: User email (available when parameter `extended`\n                            = `true`)\n                          example: support@deribit.com\n                          type: string\n                        username:\n                          description: Account name (given by user) (available when\n                            parameter `extended` = `true`)\n                          example: name\n                          type: string\n                        delta_total:\n                          description: The sum of position deltas\n                          example: 0.1334\n                          type: number\n                        futures_session_rpl:\n                          description: Futures session realized profit and Loss\n                          example: 0\n                          type: number\n                        options_theta:\n                          description: Options summary theta\n                          example: 0\n                          type: number\n                        options_pl:\n                          description: Options profit and Loss\n                          example: 0\n                          type: number\n                        options_session_rpl:\n                          description: Options session realized profit and Loss\n                          example: 0\n                          type: number\n                        deposit_address:\n                          description: The deposit address for the account (if available)\n                          example: 14diAAyXL5UzhPTCKC998ch2GV7DMb7yDi\n                          type: string\n                        system_name:\n                          description: System generated user nickname (available when\n                            parameter `extended` = `true`)\n                          example: myname\n                          type: string\n                        options_session_upl:\n                          description: Options session unrealized profit and Loss\n                          example: 0\n                          type: number\n                        tfa_enabled:\n                          description: Whether two factor authentication is enabled\n                            (available when parameter `extended` = `true`)\n                          example: false\n                          type: boolean\n                        projected_initial_margin:\n                          description: Projected initial margin (for portfolio margining\n                            users)\n                          example: 1\n                          type: number\n                        balance:\n                          description: The account's balance\n                          example: 3.4906363\n                          type: number\n                        options_delta:\n                          description: Options summary delta\n                          example: 0\n                          type: number\n                      required:\n                      - available_funds\n                      - available_withdrawal_funds\n                      - balance\n                      - currency\n                      - delta_total\n                      - email\n                      - equity\n                      - futures_pl\n                      - futures_session_rpl\n                      - futures_session_upl\n                      - id\n                      - initial_margin\n                      - maintenance_margin\n                      - options_delta\n                      - options_gamma\n                      - options_pl\n                      - options_session_rpl\n                      - options_session_upl\n                      - options_theta\n                      - options_vega\n                      - session_funding\n                      - session_rpl\n                      - session_upl\n                      - system_name\n                      - tfa_enabled\n                      - total_pl\n                      - type\n                      - username\n                      type: object\n                  required:\n                  - result\n                  type: object\n      summary: Retrieves user account summary.\n      tags:\n      - account_management\n      - private\n  /public/validate_field:\n    get:\n      parameters:\n      - description: 'Name of the field to be validated, examples: postal_code, date_of_birth'\n        explode: true\n        in: query\n        name: field\n        required: true\n        schema:\n          type: string\n        style: form\n      - description: Value to be checked\n        explode: true\n        in: query\n        name: value\n        required: true\n        schema:\n          type: string\n        style: form\n      - description: Additional value to be compared with\n        explode: true\n        in: query\n        name: value2\n        required: false\n        schema:\n          type: string\n        style: form\n      responses:\n        200:\n          content:\n            application/json:\n              schema:\n                allOf:\n                - properties:\n                    testnet:\n                      description: false for production server, true for test server\n                      type: boolean\n                      x-hide-in-docs: true\n                    jsonrpc:\n                      description: The JSON-RPC version (2.0)\n                      enum:\n                      - \"2.0\"\n                      type: string\n                    usDiff:\n                      description: Duration of the handling of the request, in microseconds\n                      type: integer\n                      x-hide-in-docs: true\n                    id:\n                      description: The id that was sent in the request\n                      type: integer\n                    usOut:\n                      description: The timestamp (in microseconds) of sending of the\n                        response\n                      type: integer\n                      x-hide-in-docs: true\n                    usIn:\n                      description: The timestamp (in microseconds) of receipt of the\n                        request\n                      type: integer\n                      x-hide-in-docs: true\n                  required:\n                  - jsonrpc\n                  - testnet\n                  - usDiff\n                  - usIn\n                  - usOut\n                - properties:\n                    result:\n                      description: Result of method execution. `ok` in case of success\n                      enum:\n                      - ok\n                      type: string\n                  required:\n                  - result\n                  type: object\n      summary: Method used to introduce the client software connected to Deribit platform\n        over websocket. Provided data may have an impact on the maintained connection\n        and will be collected for internal statistical purposes. In response, Deribit\n        will also introduce itself.\n      tags:\n      - public\n      - internal\n  /private/toggle_deposit_address_creation:\n    get:\n      parameters:\n      - description: The currency symbol\n        explode: true\n        in: query\n        name: currency\n        required: true\n        schema:\n          description: Currency, i.e `\"BTC\"`, `\"ETH\"`\n          enum:\n          - BTC\n          - ETH\n          type: string\n        style: form\n      - explode: true\n        in: query\n        name: state\n        required: true\n        schema:\n          type: boolean\n        style: form\n      responses:\n        200:\n          content:\n            application/json:\n              schema:\n                allOf:\n                - properties:\n                    testnet:\n                      description: false for production server, true for test server\n                      type: boolean\n                      x-hide-in-docs: true\n                    jsonrpc:\n                      description: The JSON-RPC version (2.0)\n                      enum:\n                      - \"2.0\"\n                      type: string\n                    usDiff:\n                      description: Duration of the handling of the request, in microseconds\n                      type: integer\n                      x-hide-in-docs: true\n                    id:\n                      description: The id that was sent in the request\n                      type: integer\n                    usOut:\n                      description: The timestamp (in microseconds) of sending of the\n                        response\n                      type: integer\n                      x-hide-in-docs: true\n                    usIn:\n                      description: The timestamp (in microseconds) of receipt of the\n                        request\n                      type: integer\n                      x-hide-in-docs: true\n                  required:\n                  - jsonrpc\n                  - testnet\n                  - usDiff\n                  - usIn\n                  - usOut\n                - properties:\n                    result:\n                      description: Result of method execution. `ok` in case of success\n                      enum:\n                      - ok\n                      type: string\n                  required:\n                  - result\n                  type: object\n      summary: Enable or disable deposit address creation\n      tags:\n      - wallet\n      - private\n      - internal\n  /public/get_instruments:\n    get:\n      parameters:\n      - description: The currency symbol\n        explode: true\n        in: query\n        name: currency\n        required: true\n        schema:\n          description: Currency, i.e `\"BTC\"`, `\"ETH\"`\n          enum:\n          - BTC\n          - ETH\n          type: string\n        style: form\n      - description: Instrument kind, if not provided instruments of all kinds are\n          considered\n        explode: true\n        in: query\n        name: kind\n        required: false\n        schema:\n          description: Instrument kind, `\"future\"` or `\"option\"`\n          enum:\n          - future\n          - option\n          type: string\n        style: form\n      - description: Set to true to show expired instruments instead of active ones.\n        explode: true\n        in: query\n        name: expired\n        required: false\n        schema:\n          default: false\n          type: boolean\n        style: form\n      responses:\n        200:\n          content:\n            application/json:\n              examples:\n                jsonObject:\n                  externalValue: examples/public/get_instruments.response.json\n              schema:\n                allOf:\n                - properties:\n                    testnet:\n                      description: false for production server, true for test server\n                      type: boolean\n                      x-hide-in-docs: true\n                    jsonrpc:\n                      description: The JSON-RPC version (2.0)\n                      enum:\n                      - \"2.0\"\n                      type: string\n                    usDiff:\n                      description: Duration of the handling of the request, in microseconds\n                      type: integer\n                      x-hide-in-docs: true\n                    id:\n                      description: The id that was sent in the request\n                      type: integer\n                    usOut:\n                      description: The timestamp (in microseconds) of sending of the\n                        response\n                      type: integer\n                      x-hide-in-docs: true\n                    usIn:\n                      description: The timestamp (in microseconds) of receipt of the\n                        request\n                      type: integer\n                      x-hide-in-docs: true\n                  required:\n                  - jsonrpc\n                  - testnet\n                  - usDiff\n                  - usIn\n                  - usOut\n                - properties:\n                    result:\n                      items:\n                        properties:\n                          quote_currency:\n                            description: The currency in which the instrument prices\n                              are quoted.\n                            enum:\n                            - USD\n                            type: string\n                          kind:\n                            description: Instrument kind, `\"future\"` or `\"option\"`\n                            enum:\n                            - future\n                            - option\n                            type: string\n                          tick_size:\n                            description: specifies minimal price change and, as follows,\n                              the number of decimal places for instrument prices\n                            example: 0.00010\n                            type: number\n                          contract_size:\n                            description: Contract size for instrument\n                            example: 1\n                            type: integer\n                          is_active:\n                            description: Indicates if the instrument can currently\n                              be traded.\n                            type: boolean\n                          option_type:\n                            description: The option type (only for options)\n                            enum:\n                            - call\n                            - put\n                            type: string\n                          min_trade_amount:\n                            description: Minimum amount for trading. For perpetual\n                              and futures - in USD units, for options it is amount\n                              of corresponding cryptocurrency contracts, e.g., BTC\n                              or ETH.\n                            example: 0.1\n                            type: number\n                          instrument_name:\n                            description: Unique instrument identifier\n                            example: BTC-PERPETUAL\n                            type: string\n                          settlement_period:\n                            description: The settlement period.\n                            enum:\n                            - month\n                            - week\n                            - perpetual\n                            type: string\n                          strike:\n                            description: The strike value. (only for options)\n                            type: number\n                          base_currency:\n                            description: The underlying currency being traded.\n                            enum:\n                            - BTC\n                            - ETH\n                            type: string\n                          creation_timestamp:\n                            description: The time when the instrument was first created\n                              (milliseconds)\n                            example: 1536569522277\n                            type: integer\n                          expiration_timestamp:\n                            description: The time when the instrument will expire\n                              (milliseconds)\n                            type: integer\n                        required:\n                        - base_currency\n                        - contract_size\n                        - creation_timestamp\n                        - expiration_timestamp\n                        - instrument_name\n                        - is_active\n                        - kind\n                        - min_trade_amount\n                        - quote_currency\n                        - settlement_period\n                        - tick_size\n                        type: object\n                      type: array\n                  required:\n                  - result\n                  type: object\n          description: ok response\n      summary: Retrieves available trading instruments. This method can be used to\n        see which instruments are available for trading, or which instruments have\n        existed historically.\n      tags:\n      - public\n      - market_data\n  /private/cancel_all:\n    get:\n      parameters: []\n      responses:\n        200:\n          content:\n            application/json:\n              examples:\n                jsonObject:\n                  externalValue: examples/private/cancel_all.response.json\n              schema:\n                allOf:\n                - properties:\n                    testnet:\n                      description: false for production server, true for test server\n                      type: boolean\n                      x-hide-in-docs: true\n                    jsonrpc:\n                      description: The JSON-RPC version (2.0)\n                      enum:\n                      - \"2.0\"\n                      type: string\n                    usDiff:\n                      description: Duration of the handling of the request, in microseconds\n                      type: integer\n                      x-hide-in-docs: true\n                    id:\n                      description: The id that was sent in the request\n                      type: integer\n                    usOut:\n                      description: The timestamp (in microseconds) of sending of the\n                        response\n                      type: integer\n                      x-hide-in-docs: true\n                    usIn:\n                      description: The timestamp (in microseconds) of receipt of the\n                        request\n                      type: integer\n                      x-hide-in-docs: true\n                  required:\n                  - jsonrpc\n                  - testnet\n                  - usDiff\n                  - usIn\n                  - usOut\n                - properties:\n                    result:\n                      description: Result of method execution. `ok` in case of success\n                      enum:\n                      - ok\n                      type: string\n                  required:\n                  - result\n                  type: object\n      summary: This method cancels all users orders and stop orders within all currencies\n        and instrument kinds.\n      tags:\n      - trading\n      - private\n  /public/get_announcements:\n    get:\n      parameters: []\n      responses:\n        200:\n          content:\n            application/json:\n              examples:\n                jsonObject:\n                  externalValue: examples/public/get_announcements.response.json\n              schema:\n                allOf:\n                - properties:\n                    testnet:\n                      description: false for production server, true for test server\n                      type: boolean\n                      x-hide-in-docs: true\n                    jsonrpc:\n                      description: The JSON-RPC version (2.0)\n                      enum:\n                      - \"2.0\"\n                      type: string\n                    usDiff:\n                      description: Duration of the handling of the request, in microseconds\n                      type: integer\n                      x-hide-in-docs: true\n                    id:\n                      description: The id that was sent in the request\n                      type: integer\n                    usOut:\n                      description: The timestamp (in microseconds) of sending of the\n                        response\n                      type: integer\n                      x-hide-in-docs: true\n                    usIn:\n                      description: The timestamp (in microseconds) of receipt of the\n                        request\n                      type: integer\n                      x-hide-in-docs: true\n                  required:\n                  - jsonrpc\n                  - testnet\n                  - usDiff\n                  - usIn\n                  - usOut\n                - properties:\n                    result:\n                      items:\n                        properties:\n                          body:\n                            description: The HTML body of the announcement\n                            example: An\u0026nbsp;announcement\n                            type: string\n                          publication_time:\n                            description: The timestamp in ms at which the announcement\n                              was published\n                            example: 1527844253000\n                            type: integer\n                          important:\n                            description: Whether the announcement is marked as important\n                            example: false\n                            type: boolean\n                          id:\n                            description: A unique identifier for the announcement\n                            example: 19288317\n                            type: number\n                          title:\n                            description: The title of the announcement\n                            example: Example announcement\n                            type: string\n                        required:\n                        - body\n                        - id\n                        - important\n                        - publication_time\n                        - title\n                        type: object\n                      type: array\n                  required:\n                  - result\n                  type: object\n      summary: Retrieves announcements from the last 30 days.\n      tags:\n      - account_management\n      - public\n  /private/disable_tfa_with_recovery_code:\n    get:\n      parameters:\n      - description: The password for the subaccount\n        explode: true\n        in: query\n        name: password\n        required: true\n        schema:\n          type: string\n        style: form\n      - description: One time recovery code\n        explode: true\n        in: query\n        name: code\n        required: true\n        schema:\n          type: string\n        style: form\n      responses:\n        200:\n          content:\n            application/json:\n              examples:\n                jsonObject:\n                  externalValue: examples/private/disable_tfa_with_recovery_code.response.json\n              schema:\n                allOf:\n                - properties:\n                    testnet:\n                      description: false for production server, true for test server\n                      type: boolean\n                      x-hide-in-docs: true\n                    jsonrpc:\n                      description: The JSON-RPC version (2.0)\n                      enum:\n                      - \"2.0\"\n                      type: string\n                    usDiff:\n                      description: Duration of the handling of the request, in microseconds\n                      type: integer\n                      x-hide-in-docs: true\n                    id:\n                      description: The id that was sent in the request\n                      type: integer\n                    usOut:\n                      description: The timestamp (in microseconds) of sending of the\n                        response\n                      type: integer\n                      x-hide-in-docs: true\n                    usIn:\n                      description: The timestamp (in microseconds) of receipt of the\n                        request\n                      type: integer\n                      x-hide-in-docs: true\n                  required:\n                  - jsonrpc\n                  - testnet\n                  - usDiff\n                  - usIn\n                  - usOut\n                - properties:\n                    result:\n                      description: Result of method execution. `ok` in case of success\n                      enum:\n                      - ok\n                      type: string\n                  required:\n                  - result\n                  type: object\n          description: ok response\n      summary: Disables TFA with one time recovery code\n      tags:\n      - internal\n      - private\n  /private/toggle_notifications_from_subaccount:\n    get:\n      parameters:\n      - description: The user id for the subaccount\n        explode: true\n        in: query\n        name: sid\n        required: true\n        schema:\n          type: integer\n        style: form\n      - description: enable (`true`) or disable (`false`) notifications\n        explode: true\n        in: query\n        name: state\n        required: true\n        schema:\n          type: boolean\n        style: form\n      responses:\n        200:\n          content:\n            application/json:\n              examples:\n                jsonObject:\n                  externalValue: examples/private/toggle_notifications_from_subaccount.response.json\n              schema:\n                allOf:\n                - properties:\n                    testnet:\n                      description: false for production server, true for test server\n                      type: boolean\n                      x-hide-in-docs: true\n                    jsonrpc:\n                      description: The JSON-RPC version (2.0)\n                      enum:\n                      - \"2.0\"\n                      type: string\n                    usDiff:\n                      description: Duration of the handling of the request, in microseconds\n                      type: integer\n                      x-hide-in-docs: true\n                    id:\n                      description: The id that was sent in the request\n                      type: integer\n                    usOut:\n                      description: The timestamp (in microseconds) of sending of the\n                        response\n                      type: integer\n                      x-hide-in-docs: true\n                    usIn:\n                      description: The timestamp (in microseconds) of receipt of the\n                        request\n                      type: integer\n                      x-hide-in-docs: true\n                  required:\n                  - jsonrpc\n                  - testnet\n                  - usDiff\n                  - usIn\n                  - usOut\n                - properties:\n                    result:\n                      description: Result of method execution. `ok` in case of success\n                      enum:\n                      - ok\n                      type: string\n                  required:\n                  - result\n                  type: object\n          description: ok response\n      summary: Enable or disable sending of notifications for the subaccount.\n      tags:\n      - private\n      - account_management\n  /public/get_last_settlements_by_instrument:\n    get:\n      parameters:\n      - description: Instrument name\n        explode: true\n        in: query\n        name: instrument_name\n        required: true\n        schema:\n          description: Unique instrument identifier\n          example: BTC-PERPETUAL\n          type: string\n        style: form\n      - description: Settlement type\n        explode: true\n        in: query\n        name: type\n        required: false\n        schema:\n          description: The type of settlement. `settlement`, `delivery` or `bankruptcy`.\n          enum:\n          - settlement\n          - delivery\n          - bankruptcy\n          type: string\n        style: form\n      - description: Number of requested items, default - `20`\n        explode: true\n        in: query\n        name: count\n        required: false\n        schema:\n          type: integer\n        style: form\n      - description: Continuation token for pagination\n        explode: true\n        in: query\n        name: continuation\n        required: false\n        schema:\n          example: xY7T6cutS3t2B9YtaDkE6TS379oKnkzTvmEDUnEUP2Msa9xKWNNaT\n          type: string\n        style: form\n      - description: The latest timestamp to return result for\n        explode: true\n        in: query\n        name: search_start_timestamp\n        required: false\n        schema:\n          description: The timestamp (seconds since the Unix epoch, with millisecond\n            precision)\n          example: 1536569522277\n          type: integer\n        style: form\n      responses:\n        200:\n          content:\n            application/json:\n              examples:\n                jsonObject:\n                  externalValue: examples/public/get_last_settlements_by_instrument.response.json\n              schema:\n                allOf:\n                - properties:\n                    testnet:\n                      description: false for production server, true for test server\n                      type: boolean\n                      x-hide-in-docs: true\n                    jsonrpc:\n                      description: The JSON-RPC version (2.0)\n                      enum:\n                      - \"2.0\"\n                      type: string\n                    usDiff:\n                      description: Duration of the handling of the request, in microseconds\n                      type: integer\n                      x-hide-in-docs: true\n                    id:\n                      description: The id that was sent in the request\n                      type: integer\n                    usOut:\n                      description: The timestamp (in microseconds) of sending of the\n                        response\n                      type: integer\n                      x-hide-in-docs: true\n                    usIn:\n                      description: The timestamp (in microseconds) of receipt of the\n                        request\n                      type: integer\n                      x-hide-in-docs: true\n                  required:\n                  - jsonrpc\n                  - testnet\n                  - usDiff\n                  - usIn\n                  - usOut\n                - properties:\n                    result:\n                      properties:\n                        continuation:\n                          description: Continuation token for pagination.\n                          example: xY7T6cutS3t2B9YtaDkE6TS379oKnkzTvmEDUnEUP2Msa9xKWNNaT\n                          type: string\n                        settlements:\n                          items:\n                            properties:\n                              session_profit_loss:\n                                description: total value of session profit and losses\n                                  (in base currency)\n                                example: 0.001160788\n                                type: number\n                              mark_price:\n                                description: mark price for at the settlement time\n                                  (in quote currency; settlement and delivery only)\n                                example: 11000\n                                type: number\n                              funding:\n                                description: funding (in base currency ; settlement\n                                  for perpetual product only)\n                                example: -0.000002511\n                                type: number\n                              socialized:\n                                description: the amount of the socialized losses (in\n                                  base currency; bankruptcy only)\n                                example: -0.001160788\n                                type: number\n                              session_bankrupcy:\n                                description: value of session bankrupcy (in base currency;\n                                  bankruptcy only)\n                                example: 0.001160788\n                                type: number\n                              timestamp:\n                                description: The timestamp (seconds since the Unix\n                                  epoch, with millisecond precision)\n                                example: 1536569522277\n                                type: integer\n                              profit_loss:\n                                description: profit and loss (in base currency; settlement\n                                  and delivery only)\n                                example: 0\n                                type: number\n                              funded:\n                                description: funded amount (bankruptcy only)\n                                example: 0\n                                type: number\n                              index_price:\n                                description: underlying index price at time of event\n                                  (in quote currency; settlement and delivery only)\n                                example: 11008.37\n                                type: number\n                              session_tax:\n                                description: total amount of paid taxes/fees (in base\n                                  currency; bankruptcy only)\n                                example: -0.001160788\n                                type: number\n                              session_tax_rate:\n                                description: rate of paid texes/fees (in base currency;\n                                  bankruptcy only)\n                                example: 0.000103333\n                                type: number\n                              instrument_name:\n                                description: instrument name (settlement and delivery\n                                  only)\n                                example: BTC-30MAR18\n                                type: string\n                              position:\n                                description: position size (in quote currency; settlement\n                                  and delivery only)\n                                example: 1000\n                                type: number\n                              type:\n                                description: The type of settlement. `settlement`,\n                                  `delivery` or `bankruptcy`.\n                                enum:\n                                - settlement\n                                - delivery\n                                - bankruptcy\n                                type: string\n                            required:\n                            - funding\n                            - index_price\n                            - instrument_name\n                            - position\n                            - session_profit_loss\n                            - timestamp\n                            - type\n                            type: object\n                          type: array\n                      required:\n                      - continuation\n                      - settlements\n                      type: list\n                  required:\n                  - result\n                  type: object\n      summary: Retrieves historical public settlement, delivery and bankruptcy events\n        filtered by instrument name.\n      tags:\n      - market_data\n      - public\n  /private/set_email_for_subaccount:\n    get:\n      parameters:\n      - description: The user id for the subaccount\n        explode: true\n        in: query\n        name: sid\n        required: true\n        schema:\n          type: integer\n        style: form\n      - description: The email address for the subaccount\n        explode: true\n        in: query\n        name: email\n        required: true\n        schema:\n          example: subaccount_1@email.com\n          type: string\n        style: form\n      responses:\n        200:\n          content:\n            application/json:\n              examples:\n                jsonObject:\n                  externalValue: examples/private/set_email_for_subaccount.response.json\n              schema:\n                allOf:\n                - properties:\n                    testnet:\n                      description: false for production server, true for test server\n                      type: boolean\n                      x-hide-in-docs: true\n                    jsonrpc:\n                      description: The JSON-RPC version (2.0)\n                      enum:\n                      - \"2.0\"\n                      type: string\n                    usDiff:\n                      description: Duration of the handling of the request, in microseconds\n                      type: integer\n                      x-hide-in-docs: true\n                    id:\n                      description: The id that was sent in the request\n                      type: integer\n                    usOut:\n                      description: The timestamp (in microseconds) of sending of the\n                        response\n                      type: integer\n                      x-hide-in-docs: true\n                    usIn:\n                      description: The timestamp (in microseconds) of receipt of the\n                        request\n                      type: integer\n                      x-hide-in-docs: true\n                  required:\n                  - jsonrpc\n                  - testnet\n                  - usDiff\n                  - usIn\n                  - usOut\n                - properties:\n                    result:\n                      description: Result of method execution. `ok` in case of success\n                      enum:\n                      - ok\n                      type: string\n                  required:\n                  - result\n                  type: object\n          description: ok response\n      summary: Assign an email address to a subaccount. User will receive an email\n        with confirmation link.\n      tags:\n      - private\n      - account_management\n  /public/auth:\n    get:\n      description: |\n        Retrieve an Oauth access token, to be used for authentication of 'private' requests.\n\n        Three methods of authentication are supported:\n\n        - \u003ccode\u003epassword\u003c/code\u003e - using email and and password as when logging on to the website\n        - \u003ccode\u003eclient_credentials\u003c/code\u003e - using the access key and access secret that can be found on the API page on the website\n        - \u003ccode\u003eclient_signature\u003c/code\u003e - using the access key that can be found on the API page on the website and user generated signature. The signature is calculated using some fields provided in the request, using formula described here [Deribit signature credentials](#additional-authorization-method-deribit-signature-credentials)\n        - \u003ccode\u003erefresh_token\u003c/code\u003e - using a refresh token that was received from an earlier invocation\n\n        The response will contain an access token, expiration period (number of seconds that the token is valid) and a refresh token that can\n        be used to get a new set of tokens.\n      parameters:\n      - description: Method of authentication\n        explode: true\n        in: query\n        name: grant_type\n        required: true\n        schema:\n          enum:\n          - password\n          - client_credentials\n          - client_signature\n          - refresh_token\n          type: string\n        style: form\n      - description: Required for grant type `password`\n        explode: true\n        in: query\n        name: username\n        required: true\n        schema:\n          example: your_email@mail.com\n          type: string\n        style: form\n      - description: Required for grant type `password`\n        explode: true\n        in: query\n        name: password\n        required: true\n        schema:\n          example: your_password\n          type: string\n        style: form\n      - description: Required for grant type `client_credentials` and `client_signature`\n        explode: true\n        in: query\n        name: client_id\n        required: true\n        schema:\n          type: string\n        style: form\n      - description: Required for grant type `client_credentials`\n        explode: true\n        in: query\n        name: client_secret\n        required: true\n        schema:\n          type: string\n        style: form\n      - description: Required for grant type `refresh_token`\n        explode: true\n        in: query\n        name: refresh_token\n        required: true\n        schema:\n          type: string\n        style: form\n      - description: Required for grant type `client_signature`, provides time when\n          request has been generated\n        explode: true\n        in: query\n        name: timestamp\n        required: true\n        schema:\n          type: string\n        style: form\n      - description: Required for grant type `client_signature`; it's a cryptographic\n          signature calculated over provided fields using user **secret key**. The\n          signature should be calculated as an HMAC (Hash-based Message Authentication\n          Code) with `SHA256` hash algorithm\n        explode: true\n        in: query\n        name: signature\n        required: true\n        schema:\n          type: string\n        style: form\n      - description: Optional for grant type `client_signature`; delivers user generated\n          initialization vector for the server token\n        explode: true\n        in: query\n        name: nonce\n        required: false\n        schema:\n          type: string\n        style: form\n      - description: Will be passed back in the response\n        explode: true\n        in: query\n        name: state\n        required: false\n        schema:\n          type: string\n        style: form\n      - description: 'Describes type of the access for assigned token, possible values:\n          `connection`, `session`, `session:name`, `trade:[read, read_write, none]`,\n          `wallet:[read, read_write, none]`, `account:[read, read_write, none]`, `expires:NUMBER`\n          (token will expire after `NUMBER` of seconds).\u003c/BR\u003e\u003c/BR\u003e **NOTICE:** Depending\n          on choosing an authentication method (```grant type```) some scopes could\n          be narrowed by the server. e.g. when ```grant_type = client_credentials```\n          and ```scope = wallet:read_write``` it''s modified by the server as ```scope\n          = wallet:read```'\n        explode: true\n        in: query\n        name: scope\n        required: false\n        schema:\n          example: connection\n          type: string\n        style: form\n      responses:\n        200:\n          content:\n            application/json:\n              examples:\n                jsonObject:\n                  externalValue: examples/public/auth.response.json\n              schema:\n                allOf:\n                - properties:\n                    testnet:\n                      description: false for production server, true for test server\n                      type: boolean\n                      x-hide-in-docs: true\n                    jsonrpc:\n                      description: The JSON-RPC version (2.0)\n                      enum:\n                      - \"2.0\"\n                      type: string\n                    usDiff:\n                      description: Duration of the handling of the request, in microseconds\n                      type: integer\n                      x-hide-in-docs: true\n                    id:\n                      description: The id that was sent in the request\n                      type: integer\n                    usOut:\n                      description: The timestamp (in microseconds) of sending of the\n                        response\n                      type: integer\n                      x-hide-in-docs: true\n                    usIn:\n                      description: The timestamp (in microseconds) of receipt of the\n                        request\n                      type: integer\n                      x-hide-in-docs: true\n                  required:\n                  - jsonrpc\n                  - testnet\n                  - usDiff\n                  - usIn\n                  - usOut\n                - properties:\n                    result:\n                      properties:\n                        token_type:\n                          description: Authorization type, allowed value - `bearer`\n                          enum:\n                          - bearer\n                          type: string\n                        state:\n                          description: Copied from the input (if applicable)\n                          type: string\n                        scope:\n                          description: Type of the access for assigned token\n                          type: string\n                        acccess_token:\n                          example: 843SehgeX5n6XxEU4XbABx4Cny5Akai5iHiJePTsvUw7\n                          type: string\n                        expires_in:\n                          description: Token lifetime in seconds\n                          example: 315360000\n                          type: integer\n                        refresh_token:\n                          description: Can be used to request a new token (with a\n                            new lifetime)\n                          example: 6faf8L36JdaSqsjCEEiwqifPpj6JB18RWwiWHrsGTZ91\n                          type: string\n                      required:\n                      - access_token\n                      - expires_in\n                      - refresh_token\n                      - scope\n                      - token_type\n                      type: object\n                  required:\n                  - result\n                  type: object\n          description: ok response\n        429:\n          content:\n            application/json:\n              schema:\n                allOf:\n                - properties:\n                    testnet:\n                      description: false for production server, true for test server\n                      type: boolean\n                      x-hide-in-docs: true\n                    jsonrpc:\n                      description: The JSON-RPC version (2.0)\n                      enum:\n                      - \"2.0\"\n                      type: string\n                    usDiff:\n                      description: Duration of the handling of the request, in microseconds\n                      type: integer\n                      x-hide-in-docs: true\n                    id:\n                      description: The id that was sent in the request\n                      type: integer\n                    usOut:\n                      description: The timestamp (in microseconds) of sending of the\n                        response\n                      type: integer\n                      x-hide-in-docs: true\n                    usIn:\n                      description: The timestamp (in microseconds) of receipt of the\n                        request\n                      type: integer\n                      x-hide-in-docs: true\n                  required:\n                  - jsonrpc\n                  - testnet\n                  - usDiff\n                  - usIn\n                  - usOut\n                - properties:\n                    message:\n                      type: string\n                    error:\n                      type: integer\n                  required:\n                  - error\n                  - message\n                  type: object\n          description: over limit\n      summary: Authenticate\n      tags:\n      - public\n      - authentication\n  /private/create_deposit_address:\n    get:\n      parameters:\n      - description: The currency symbol\n        explode: true\n        in: query\n        name: currency\n        required: true\n        schema:\n          description: Currency, i.e `\"BTC\"`, `\"ETH\"`\n          enum:\n          - BTC\n          - ETH\n          type: string\n        style: form\n      responses:\n        200:\n          content:\n            application/json:\n              examples:\n                jsonObject:\n                  externalValue: examples/private/create_deposit_address.response.json\n              schema:\n                allOf:\n                - properties:\n                    testnet:\n                      description: false for production server, true for test server\n                      type: boolean\n                      x-hide-in-docs: true\n                    jsonrpc:\n                      description: The JSON-RPC version (2.0)\n                      enum:\n                      - \"2.0\"\n                      type: string\n                    usDiff:\n                      description: Duration of the handling of the request, in microseconds\n                      type: integer\n                      x-hide-in-docs: true\n                    id:\n                      description: The id that was sent in the request\n                      type: integer\n                    usOut:\n                      description: The timestamp (in microseconds) of sending of the\n                        response\n                      type: integer\n                      x-hide-in-docs: true\n                    usIn:\n                      description: The timestamp (in microseconds) of receipt of the\n                        request\n                      type: integer\n                      x-hide-in-docs: true\n                  required:\n                  - jsonrpc\n                  - testnet\n                  - usDiff\n                  - usIn\n                  - usOut\n                - properties:\n                    result:\n                      description: Object if address is created, null otherwise\n                      properties:\n                        currency:\n                          description: Currency, i.e `\"BTC\"`, `\"ETH\"`\n                          enum:\n                          - BTC\n                          - ETH\n                          type: string\n                        address:\n                          description: Address in proper format for currency\n                          example: 1A1zP1eP5QGefi2DMPTfTL5SLmv7DivfNa\n                          type: string\n                        type:\n                          description: 'Address type/purpose, allowed values : `deposit`,\n                            `withdrawal`, `transfer`'\n                          enum:\n                          - deposit\n                          - withdrawal\n                          - transfer\n                          type: string\n                        creation_timestamp:\n                          description: The timestamp (seconds since the Unix epoch,\n                            with millisecond precision)\n                          example: 1536569522277\n                          type: integer\n                      required:\n                      - address\n                      - creation_timestamp\n                      - currency\n                      - type\n                      type: object\n                  required:\n                  - result\n                  type: object\n      summary: Creates deposit address in currency\n      tags:\n      - wallet\n      - private\n  /public/get_time:\n    get:\n      parameters: []\n      responses:\n        200:\n          content:\n            application/json:\n              examples:\n                jsonObject:\n                  externalValue: examples/public/get_time.response.json\n              schema:\n                allOf:\n                - properties:\n                    testnet:\n                      description: false for production server, true for test server\n                      type: boolean\n                      x-hide-in-docs: true\n                    jsonrpc:\n                      description: The JSON-RPC version (2.0)\n                      enum:\n                      - \"2.0\"\n                      type: string\n                    usDiff:\n                      description: Duration of the handling of the request, in microseconds\n                      type: integer\n                      x-hide-in-docs: true\n                    id:\n                      description: The id that was sent in the request\n                      type: integer\n                    usOut:\n                      description: The timestamp (in microseconds) of sending of the\n                        response\n                      type: integer\n                      x-hide-in-docs: true\n                    usIn:\n                      description: The timestamp (in microseconds) of receipt of the\n                        request\n                      type: integer\n                      x-hide-in-docs: true\n                  required:\n                  - jsonrpc\n                  - testnet\n                  - usDiff\n                  - usIn\n                  - usOut\n                - properties:\n                    result:\n                      description: Current timestamp (milliseconds)\n                      example: 1517329113791\n                      type: integer\n                  required:\n                  - result\n                  type: object\n      summary: Retrieves the current time (in milliseconds). This API endpoint can\n        be used to check the clock skew between your software and Deribit's systems.\n      tags:\n      - supporting\n      - public\n  /private/get_email_language:\n    get:\n      parameters: []\n      responses:\n        200:\n          content:\n            application/json:\n              examples:\n                jsonObject:\n                  externalValue: examples/private/get_email_language.response.json\n              schema:\n                allOf:\n                - properties:\n                    testnet:\n                      description: false for production server, true for test server\n                      type: boolean\n                      x-hide-in-docs: true\n                    jsonrpc:\n                      description: The JSON-RPC version (2.0)\n                      enum:\n                      - \"2.0\"\n                      type: string\n                    usDiff:\n                      description: Duration of the handling of the request, in microseconds\n                      type: integer\n                      x-hide-in-docs: true\n                    id:\n                      description: The id that was sent in the request\n                      type: integer\n                    usOut:\n                      description: The timestamp (in microseconds) of sending of the\n                        response\n                      type: integer\n                      x-hide-in-docs: true\n                    usIn:\n                      description: The timestamp (in microseconds) of receipt of the\n                        request\n                      type: integer\n                      x-hide-in-docs: true\n                  required:\n                  - jsonrpc\n                  - testnet\n                  - usDiff\n                  - usIn\n                  - usOut\n                - properties:\n                    result:\n                      description: The abbreviation of the language\n                      example: en\n                      type: string\n                  required:\n                  - result\n                  type: object\n      summary: Retrieves the language to be used for emails.\n      tags:\n      - account_management\n      - private\ncomponents:\n  schemas:\n    order_id_initial_margin_pair:\n      properties:\n        order_id:\n          description: Unique order identifier\n          example: ETH-100234\n          type: string\n        initial_margin:\n          description: Initial margin of order, in base currency\n          type: number\n      required:\n      - initial_margin\n      - order_id\n      type: object\n    book_summary:\n      properties:\n        underlying_index:\n          description: Name of the underlying future, or `'index_price'` (options\n            only)\n          example: index_price\n          type: string\n        volume:\n          description: The total 24h traded volume (in base currency)\n          example: 223\n          type: number\n        volume_usd:\n          description: Volume in usd (futures only)\n          example: 102\n          type: number\n        underlying_price:\n          description: underlying price for implied volatility calculations (options\n            only)\n          example: 6745.34\n          type: number\n        bid_price:\n          description: The current best bid price, `null` if there aren't any bids\n          example: 7022.89\n          type: number\n        open_interest:\n          description: The total amount of outstanding contracts in the corresponding\n            amount units. For perpetual and futures the amount is in USD units, for\n            options it is amount of corresponding cryptocurrency contracts, e.g.,\n            BTC or ETH.\n          example: 0.5\n          type: number\n        quote_currency:\n          description: Quote currency\n          example: USD\n          type: string\n        high:\n          description: Price of the 24h highest trade\n          example: 7022.89\n          type: number\n        estimated_delivery_price:\n          description: Estimated delivery price, in USD (futures only). For more details,\n            see Documentation \u003e General \u003e Expiration Price\n          example: 10029.5\n          type: number\n        last:\n          description: The price of the latest trade, `null` if there weren't any\n            trades\n          example: 7022.89\n          type: number\n        mid_price:\n          description: The average of the best bid and ask, `null` if there aren't\n            any asks or bids\n          example: 7022.89\n          type: number\n        interest_rate:\n          description: Interest rate used in implied volatility calculations (options\n            only)\n          example: 0\n          type: number\n        funding_8h:\n          description: Funding 8h (perpetual only)\n          type: number\n        mark_price:\n          description: The current instrument market price\n          example: 7022.89\n          type: number\n        ask_price:\n          description: The current best ask price, `null` if there aren't any asks\n          example: 7022.89\n          type: number\n        instrument_name:\n          description: Unique instrument identifier\n          example: BTC-PERPETUAL\n          type: string\n        low:\n          description: Price of the 24h lowest trade, `null` if there weren't any\n            trades\n          example: 7022.89\n          type: number\n        base_currency:\n          description: Base currency\n          example: ETH\n          type: string\n        creation_timestamp:\n          description: The timestamp (seconds since the Unix epoch, with millisecond\n            precision)\n          example: 1536569522277\n          type: integer\n        current_funding:\n          description: Current funding (perpetual only)\n          type: number\n      required:\n      - ask_price\n      - base currency\n      - bid_price\n      - creation_timestamp\n      - high\n      - instrument_name\n      - last\n      - low\n      - mark_price\n      - mid_price\n      - open_interest\n      - quote_currency\n      - volume\n    transfer_item:\n      properties:\n        updated_timestamp:\n          description: The timestamp (seconds since the Unix epoch, with millisecond\n            precision)\n          example: 1536569522277\n          type: integer\n        direction:\n          description: Transfer direction\n          enum:\n          - payment\n          - income\n          type: string\n        amount:\n          description: Amount of funds in given currency\n          example: 1\n          type: number\n        other_side:\n          description: For transfer from/to subaccount returns this subaccount name,\n            for transfer to other account returns address, for transfer from other\n            account returns that accounts username.\n          example: Smith\n          type: string\n        currency:\n          description: Currency, i.e `\"BTC\"`, `\"ETH\"`\n          enum:\n          - BTC\n          - ETH\n          type: string\n        state:\n          description: 'Transfer state, allowed values : `prepared`, `confirmed`,\n            `cancelled`, `waiting_for_admin`, `rejection_reason`'\n          enum:\n          - prepared\n          - confirmed\n          - cancelled\n          - waiting_for_admin\n          - rejection_reason\n          type: string\n        created_timestamp:\n          description: The timestamp (seconds since the Unix epoch, with millisecond\n            precision)\n          example: 1536569522277\n          type: integer\n        type:\n          description: 'Type of transfer: `user` - sent to user, `subaccount` - sent\n            to subaccount'\n          enum:\n          - user\n          - subaccount\n          type: string\n        id:\n          description: Id of transfer\n          example: 12\n          type: integer\n      required:\n      - amount\n      - created_timestamp\n      - currency\n      - id\n      - other_side\n      - other_side_type\n      - state\n      - type\n      - updated_timestamp\n      type: object\n    trades_volumes:\n      properties:\n        calls_volume:\n          description: Total 24h trade volume for call options. This is expressed\n            in the base currency, e.g. BTC for `btc_usd`\n          example: 2.1\n          type: number\n        puts_volume:\n          description: Total 24h trade volume for put options. This is expressed in\n            the base currency, e.g. BTC for `btc_usd`\n          example: 60.2\n          type: number\n        currency_pair:\n          description: 'Currency pair: `\"btc_usd\"` or `\"eth_usd\"`'\n          enum:\n          - btc_usd\n          - eth_usd\n          type: string\n        futures_volume:\n          description: Total 24h trade volume for futures. This is expressed in the\n            base currency, e.g. BTC for `btc_usd`\n          example: 30.5178\n          type: number\n      required:\n      - calls_volume\n      - currency_pair\n      - futures_volume\n      - puts_volume\n      type: object\n    currency_portfolio:\n      properties:\n        maintenance_margin:\n          type: number\n        available_withdrawal_funds:\n          type: number\n        initial_margin:\n          type: number\n        available_funds:\n          type: number\n        currency:\n          enum:\n          - btc\n          - eth\n          type: string\n        margin_balance:\n          type: number\n        equity:\n          type: number\n        balance:\n          type: number\n      required:\n      - available_funds\n      - available_withdrawal_funds\n      - balance\n      - currency\n      - equity\n      - initial_margin\n      - maintenance_margin\n      - margin_balance\n      type: object\n    currency:\n      properties:\n        min_confirmations:\n          description: Minimum number of block chain confirmations before deposit\n            is accepted.\n          example: 2\n          type: integer\n        min_withdrawal_fee:\n          description: The minimum transaction fee paid for withdrawals\n          example: 0.00010\n          type: number\n        disabled_deposit_address_creation:\n          description: False if deposit address creation is disabled\n          example: false\n          type: boolean\n        currency:\n          description: The abbreviation of the currency. This abbreviation is used\n            elsewhere in the API to identify the currency.\n          example: BTC\n          type: string\n        currency_long:\n          description: The full name for the currency.\n          example: Bitcoin\n          type: string\n        withdrawal_fee:\n          description: The total transaction fee paid for withdrawals\n          example: 0.00010\n          type: number\n        fee_precision:\n          description: fee precision\n          example: 4\n          type: integer\n        withdrawal_priorities:\n          items:\n            $ref: '#/components/schemas/currency_withdrawal_priorities'\n          type: array\n        coin_type:\n          description: The type of the currency.\n          enum:\n          - BITCOIN\n          - ETHER\n          type: string\n      required:\n      - coin_type\n      - currency\n      - currency_long\n      - min_confirmation\n      - withdrawal_fee\n      type: object\n    portfolio:\n      properties:\n        eth:\n          $ref: '#/components/schemas/portfolio_eth'\n        btc:\n          $ref: '#/components/schemas/portfolio_eth'\n      required:\n      - btc\n      - eth\n      type: object\n    public_trade:\n      properties:\n        direction:\n          description: Trade direction of the taker\n          enum:\n          - buy\n          - sell\n          type: string\n        tick_direction:\n          description: Direction of the \"tick\" (`0` = Plus Tick, `1` = Zero-Plus Tick,\n            `2` = Minus Tick, `3` = Zero-Minus Tick).\n          enum:\n          - 0\n          - 1\n          - 2\n          - 3\n          type: integer\n        timestamp:\n          description: The timestamp of the trade\n          example: 1517329113791\n          type: integer\n        price:\n          description: The price of the trade\n          type: number\n        trade_seq:\n          description: The sequence number of the trade within instrument\n          type: integer\n        trade_id:\n          description: Unique (per currency) trade identifier\n          type: string\n        iv:\n          description: Option implied volatility for the price (Option only)\n          type: number\n        index_price:\n          description: Index Price at the moment of trade\n          type: number\n        amount:\n          description: Trade amount. For perpetual and futures - in USD units, for\n            options it is amount of corresponding cryptocurrency contracts, e.g.,\n            BTC or ETH.\n          type: number\n        instrument_name:\n          description: Unique instrument identifier\n          example: BTC-PERPETUAL\n          type: string\n      required:\n      - amount\n      - direction\n      - index_price\n      - instrument_name\n      - price\n      - tick_direction\n      - timestamp\n      - trade_id\n      - trade_seq\n    settlement:\n      properties:\n        session_profit_loss:\n          description: total value of session profit and losses (in base currency)\n          example: 0.001160788\n          type: number\n        mark_price:\n          description: mark price for at the settlement time (in quote currency; settlement\n            and delivery only)\n          example: 11000\n          type: number\n        funding:\n          description: funding (in base currency ; settlement for perpetual product\n            only)\n          example: -0.000002511\n          type: number\n        socialized:\n          description: the amount of the socialized losses (in base currency; bankruptcy\n            only)\n          example: -0.001160788\n          type: number\n        session_bankrupcy:\n          description: value of session bankrupcy (in base currency; bankruptcy only)\n          example: 0.001160788\n          type: number\n        timestamp:\n          description: The timestamp (seconds since the Unix epoch, with millisecond\n            precision)\n          example: 1536569522277\n          type: integer\n        profit_loss:\n          description: profit and loss (in base currency; settlement and delivery\n            only)\n          example: 0\n          type: number\n        funded:\n          description: funded amount (bankruptcy only)\n          example: 0\n          type: number\n        index_price:\n          description: underlying index price at time of event (in quote currency;\n            settlement and delivery only)\n          example: 11008.37\n          type: number\n        session_tax:\n          description: total amount of paid taxes/fees (in base currency; bankruptcy\n            only)\n          example: -0.001160788\n          type: number\n        session_tax_rate:\n          description: rate of paid texes/fees (in base currency; bankruptcy only)\n          example: 0.000103333\n          type: number\n        instrument_name:\n          description: instrument name (settlement and delivery only)\n          example: BTC-30MAR18\n          type: string\n        position:\n          description: position size (in quote currency; settlement and delivery only)\n          example: 1000\n          type: number\n        type:\n          description: The type of settlement. `settlement`, `delivery` or `bankruptcy`.\n          enum:\n          - settlement\n          - delivery\n          - bankruptcy\n          type: string\n      required:\n      - funding\n      - index_price\n      - instrument_name\n      - position\n      - session_profit_loss\n      - timestamp\n      - type\n      type: object\n    types: {}\n    key_number_pair:\n      properties:\n        name:\n          type: string\n        value:\n          type: number\n      required:\n      - name\n      - value\n      type: object\n    address_book_item:\n      properties:\n        currency:\n          description: Currency, i.e `\"BTC\"`, `\"ETH\"`\n          enum:\n          - BTC\n          - ETH\n          type: string\n        address:\n          description: Address in proper format for currency\n          example: 1A1zP1eP5QGefi2DMPTfTL5SLmv7DivfNa\n          type: string\n        type:\n          description: Address book type\n          enum:\n          - transfer\n          - withdrawal\n          type: string\n        creation_timestamp:\n          description: The timestamp (seconds since the Unix epoch, with millisecond\n            precision)\n          example: 1536569522277\n          type: integer\n      required:\n      - address\n      - creation_timestamp\n      - currency\n      type: object\n    instrument:\n      properties:\n        quote_currency:\n          description: The currency in which the instrument prices are quoted.\n          enum:\n          - USD\n          type: string\n        kind:\n          description: Instrument kind, `\"future\"` or `\"option\"`\n          enum:\n          - future\n          - option\n          type: string\n        tick_size:\n          description: specifies minimal price change and, as follows, the number\n            of decimal places for instrument prices\n          example: 0.00010\n          type: number\n        contract_size:\n          description: Contract size for instrument\n          example: 1\n          type: integer\n        is_active:\n          description: Indicates if the instrument can currently be traded.\n          type: boolean\n        option_type:\n          description: The option type (only for options)\n          enum:\n          - call\n          - put\n          type: string\n        min_trade_amount:\n          description: Minimum amount for trading. For perpetual and futures - in\n            USD units, for options it is amount of corresponding cryptocurrency contracts,\n            e.g., BTC or ETH.\n          example: 0.1\n          type: number\n        instrument_name:\n          description: Unique instrument identifier\n          example: BTC-PERPETUAL\n          type: string\n        settlement_period:\n          description: The settlement period.\n          enum:\n          - month\n          - week\n          - perpetual\n          type: string\n        strike:\n          description: The strike value. (only for options)\n          type: number\n        base_currency:\n          description: The underlying currency being traded.\n          enum:\n          - BTC\n          - ETH\n          type: string\n        creation_timestamp:\n          description: The time when the instrument was first created (milliseconds)\n          example: 1536569522277\n          type: integer\n        expiration_timestamp:\n          description: The time when the instrument will expire (milliseconds)\n          type: integer\n      required:\n      - base_currency\n      - contract_size\n      - creation_timestamp\n      - expiration_timestamp\n      - instrument_name\n      - is_active\n      - kind\n      - min_trade_amount\n      - quote_currency\n      - settlement_period\n      - tick_size\n      type: object\n    deposit:\n      properties:\n        updated_timestamp:\n          description: The timestamp (seconds since the Unix epoch, with millisecond\n            precision)\n          example: 1536569522277\n          type: integer\n        state:\n          description: 'Deposit state, allowed values : `pending`, `completed`, `rejected`,\n            `replaced`'\n          enum:\n          - pending\n          - completed\n          - rejected\n          - replaced\n          type: string\n        received_timestamp:\n          description: The timestamp (seconds since the Unix epoch, with millisecond\n            precision)\n          example: 1536569522277\n          type: integer\n        currency:\n          description: Currency, i.e `\"BTC\"`, `\"ETH\"`\n          enum:\n          - BTC\n          - ETH\n          type: string\n        address:\n          description: Address in proper format for currency\n          example: 1A1zP1eP5QGefi2DMPTfTL5SLmv7DivfNa\n          type: string\n        amount:\n          description: Amount of funds in given currency\n          example: 1\n          type: number\n        transaction_id:\n          description: Transaction id in proper format for currency, `null` if id\n            is not available\n          example: 1b1fb5568515e2b79503501e3d3680b2d0838d5dfc2d15a04eb8cd9fbbe0b572\n          nullable: true\n          type: string\n      required:\n      - address\n      - amount\n      - currency\n      - received_timestamp\n      - state\n      - transaction_id\n      - updated_timestamp\n      type: object\n    withdrawal:\n      properties:\n        updated_timestamp:\n          description: The timestamp (seconds since the Unix epoch, with millisecond\n            precision)\n          example: 1536569522277\n          type: integer\n        fee:\n          description: Fee in currency\n          example: 0.000023\n          type: number\n        confirmed_timestamp:\n          description: The timestamp (seconds since the Unix epoch, with millisecond\n            precision) of withdrawal confirmation, `null` when not confirmed\n          example: 1536569522277\n          nullable: true\n          type: integer\n        amount:\n          description: Amount of funds in given currency\n          example: 1\n          type: number\n        priority:\n          description: Id of priority level\n          example: 1\n          type: number\n        currency:\n          description: Currency, i.e `\"BTC\"`, `\"ETH\"`\n          enum:\n          - BTC\n          - ETH\n          type: string\n        state:\n          description: 'Withdrawal state, allowed values : `unconfirmed`, `confirmed`,\n            `cancelled`, `completed`, `interrupted`, `rejected`'\n          enum:\n          - unconfirmed\n          - confirmed\n          - cancelled\n          - completed\n          - interrupted\n          - rejected\n          type: string\n        address:\n          description: Address in proper format for currency\n          example: 1A1zP1eP5QGefi2DMPTfTL5SLmv7DivfNa\n          type: string\n        created_timestamp:\n          description: The timestamp (seconds since the Unix epoch, with millisecond\n            precision)\n          example: 1536569522277\n          type: integer\n        id:\n          description: Withdrawal id in Deribit system\n          example: 1\n          type: integer\n        transaction_id:\n          description: Transaction id in proper format for currency, `null` if id\n            is not available\n          example: 1b1fb5568515e2b79503501e3d3680b2d0838d5dfc2d15a04eb8cd9fbbe0b572\n          nullable: true\n          type: string\n      required:\n      - address\n      - amount\n      - currency\n      - received_timestamp\n      - state\n      - transaction_id\n      - updated_timestamp\n      type: object\n    position:\n      properties:\n        direction:\n          description: direction, `buy` or `sell`\n          enum:\n          - buy\n          - sell\n          type: string\n        average_price_usd:\n          description: Only for options, average price in USD\n          type: number\n        estimated_liquidation_price:\n          description: Only for futures, estimated liquidation price\n          type: number\n        floating_profit_loss:\n          description: Floating profit or loss\n          type: number\n        floating_profit_loss_usd:\n          description: Only for options, floating profit or loss in USD\n          type: number\n        open_orders_margin:\n          description: Open orders margin\n          type: number\n        total_profit_loss:\n          description: Profit or loss from position\n          type: number\n        realized_profit_loss:\n          description: Realized profit or loss\n          type: number\n        delta:\n          description: Delta parameter\n          type: number\n        initial_margin:\n          description: Initial margin\n          type: number\n        size:\n          description: Position size for futures size in quote currency (e.g. USD),\n            for options size is in base currency (e.g. BTC)\n          type: number\n        maintenance_margin:\n          description: Maintenance margin\n          type: number\n        kind:\n          description: Instrument kind, `\"future\"` or `\"option\"`\n          enum:\n          - future\n          - option\n          type: string\n        mark_price:\n          description: Current mark price for position's instrument\n          type: number\n        average_price:\n          description: Average price of trades that built this position\n          type: number\n        settlement_price:\n          description: Last settlement price for position's instrument 0 if instrument\n            wasn't settled yet\n          type: number\n        index_price:\n          description: Current index price\n          type: number\n        instrument_name:\n          description: Unique instrument identifier\n          example: BTC-PERPETUAL\n          type: string\n        size_currency:\n          description: Only for futures, position size in base currency\n          type: number\n      required:\n      - average_price\n      - delta\n      - direction\n      - floating_profit_loss\n      - index_price\n      - initial_margin\n      - instrument_name\n      - kind\n      - maintenance_margin\n      - mark_price\n      - open_orders_margin\n      - relized_profit_loss\n      - settlement_price\n      - size\n      - total_profit_loss\n    user_trade:\n      properties:\n        direction:\n          description: Trade direction of the taker\n          enum:\n          - buy\n          - sell\n          type: string\n        fee_currency:\n          description: Currency, i.e `\"BTC\"`, `\"ETH\"`\n          enum:\n          - BTC\n          - ETH\n          type: string\n        order_id:\n          description: Id of the user order (maker or taker), i.e. subscriber's order\n            id that took part in the trade\n          type: string\n        timestamp:\n          description: The timestamp of the trade\n          example: 1517329113791\n          type: integer\n        price:\n          description: The price of the trade\n          type: number\n        iv:\n          description: Option implied volatility for the price (Option only)\n          type: number\n        trade_id:\n          description: Unique (per currency) trade identifier\n          type: string\n        fee:\n          description: User's fee in units of the specified `fee_currency`\n          type: number\n        order_type:\n          description: 'Order type: `\"limit`, `\"market\"`, or `\"liquidation\"`'\n          enum:\n          - limit\n          - market\n          - liquidation\n          type: string\n        trade_seq:\n          description: The sequence number of the trade within instrument\n          type: integer\n        self_trade:\n          description: '`true` if the trade is against own order. This can only happen\n            when your account has self-trading enabled. Contact an administrator if\n            you think you need that'\n          type: boolean\n        state:\n          description: order state, `\"open\"`, `\"filled\"`, `\"rejected\"`, `\"cancelled\"`,\n            `\"untriggered\"` or `\"archive\"` (if order was archived)\n          enum:\n          - open\n          - filled\n          - rejected\n          - cancelled\n          - untriggered\n          - archive\n          type: string\n        label:\n          description: User defined label (presented only when previously set for\n            order by user)\n          type: string\n        index_price:\n          description: Index Price at the moment of trade\n          type: number\n        amount:\n          description: Trade amount. For perpetual and futures - in USD units, for\n            options it is amount of corresponding cryptocurrency contracts, e.g.,\n            BTC or ETH.\n          type: number\n        instrument_name:\n          description: Unique instrument identifier\n          example: BTC-PERPETUAL\n          type: string\n        tick_direction:\n          description: Direction of the \"tick\" (`0` = Plus Tick, `1` = Zero-Plus Tick,\n            `2` = Minus Tick, `3` = Zero-Minus Tick).\n          enum:\n          - 0\n          - 1\n          - 2\n          - 3\n          type: integer\n        matching_id:\n          description: Always `null`, except for a self-trade which is possible only\n            if self-trading is switched on for the account (in that case this will\n            be id of the maker order of the subscriber)\n          type: string\n        liquidity:\n          description: 'Describes what was role of users order: `\"M\"` when it was\n            maker order, `\"T\"` when it was taker order'\n          enum:\n          - M\n          - T\n          type: string\n      required:\n      - amount\n      - direction\n      - fee\n      - fee_currency\n      - index_price\n      - instrument_name\n      - matching_id\n      - order_id\n      - price\n      - self_trade\n      - state\n      - tick_direction\n      - timestamp\n      - trade_id\n      - trade_seq\n    order:\n      properties:\n        direction:\n          description: direction, `buy` or `sell`\n          enum:\n          - buy\n          - sell\n          type: string\n        reduce_only:\n          description: '`true` for reduce-only orders only'\n          type: boolean\n        triggered:\n          description: Whether the stop order has been triggered (Only for stop orders)\n          type: boolean\n        order_id:\n          description: Unique order identifier\n          example: ETH-100234\n          type: string\n        price:\n          description: Price in base currency\n          type: number\n        time_in_force:\n          description: 'Order time in force: `\"good_til_cancelled\"`, `\"fill_or_kill\"`,\n            `\"immediate_or_cancel\"`'\n          enum:\n          - good_til_cancelled\n          - fill_or_kill\n          - immediate_or_cancel\n          type: string\n        api:\n          description: '`true` if created with API'\n          type: boolean\n        order_state:\n          description: order state, `\"open\"`, `\"filled\"`, `\"rejected\"`, `\"cancelled\"`,\n            `\"untriggered\"`\n          enum:\n          - open\n          - filled\n          - rejected\n          - cancelled\n          - untriggered\n          - triggered\n          type: string\n        implv:\n          description: Implied volatility in percent. (Only if `advanced=\"implv\"`)\n          type: number\n        advanced:\n          description: |\n            advanced type: `\"usd\"` or `\"implv\"` (Only for options; field is omitted if not applicable).\n          enum:\n          - usd\n          - implv\n          type: string\n        post_only:\n          description: '`true` for post-only orders only'\n          type: boolean\n        usd:\n          description: Option price in USD (Only if `advanced=\"usd\"`)\n          type: number\n        stop_price:\n          description: stop price (Only for future stop orders)\n          type: number\n        order_type:\n          description: order type, `\"limit\"`, `\"market\"`, `\"stop_limit\"`, `\"stop_market\"`\n          enum:\n          - market\n          - limit\n          - stop_market\n          - stop_limit\n          type: string\n        last_update_timestamp:\n          description: The timestamp (seconds since the Unix epoch, with millisecond\n            precision)\n          example: 1536569522277\n          type: integer\n        original_order_type:\n          description: Original order type. Optional field\n          enum:\n          - market\n          type: string\n        max_show:\n          description: Maximum amount within an order to be shown to other traders,\n            0 for invisible order.\n          type: number\n        profit_loss:\n          description: Profit and loss in base currency.\n          type: number\n        is_liquidation:\n          description: '`true` if order was automatically created during liquidation'\n          type: boolean\n        filled_amount:\n          description: Filled amount of the order. For perpetual and futures the filled_amount\n            is in USD units, for options - in units or corresponding cryptocurrency\n            contracts, e.g., BTC or ETH.\n          type: number\n        label:\n          description: user defined label (up to 32 characters)\n          type: string\n        commission:\n          description: Commission paid so far (in base currency)\n          type: number\n        amount:\n          description: It represents the requested order size. For perpetual and futures\n            the amount is in USD units, for options it is amount of corresponding\n            cryptocurrency contracts, e.g., BTC or ETH.\n          type: number\n        trigger:\n          description: 'Trigger type (Only for stop orders). Allowed values: `\"index_price\"`,\n            `\"mark_price\"`, `\"last_price\"`.'\n          enum:\n          - index_price\n          - mark_price\n          - last_price\n          type: string\n        instrument_name:\n          description: Unique instrument identifier\n          example: BTC-PERPETUAL\n          type: string\n        creation_timestamp:\n          description: The timestamp (seconds since the Unix epoch, with millisecond\n            precision)\n          example: 1536569522277\n          type: integer\n        average_price:\n          description: Average fill price of the order\n          type: number\n      required:\n      - api\n      - creation_timestamp\n      - direction\n      - instrument\n      - is_liquidation\n      - label\n      - last_update_timestamp\n      - max_show\n      - order_id\n      - order_state\n      - order_type\n      - post_only\n      - price\n      - time_in_force\n      type: object\n    currency_withdrawal_priorities:\n      properties:\n        name:\n          type: string\n        value:\n          type: number\n      required:\n      - name\n      - value\n    portfolio_eth:\n      properties:\n        maintenance_margin:\n          type: number\n        available_withdrawal_funds:\n          type: number\n        initial_margin:\n          type: number\n        available_funds:\n          type: number\n        currency:\n          enum:\n          - btc\n          - eth\n          type: string\n        margin_balance:\n          type: number\n        equity:\n          type: number\n        balance:\n          type: number\n      required:\n      - available_funds\n      - available_withdrawal_funds\n      - balance\n      - currency\n      - equity\n      - initial_margin\n      - maintenance_margin\n      - margin_balance\n  securitySchemes:\n    bearerAuth:\n      bearerFormat: Auth. Token\n      scheme: bearer\n      type: http\n  x-sections:\n    fix: \"# FIX API\\n\\nDeribit FIX API is a subset of FIX version 4.4, but also includes\\\n      \\ some tags from 5.0 version and several custom tags. Deribit uses the standard\\\n      \\ header and trailer structure for all messages. To enable the API, sign in\\\n      \\ and go to **Account \u003e Security \u003e API** Tab and use the checkbox. 'Access Secret'\\\n      \\ is the user's secret key provided by Deribit. Important Note: Do not reveal\\\n      \\ to anybody your 'Access Secret', as it can be used to gain full control over\\\n      \\ your account.\\n\\nThe FIX server can be reached at `www.deribit.com:9880`.\\\n      \\ The FIX server for the test network can be reached at `test.deribit.com:9881`.\\n\\\n      \\nEach request message can include:\\n\\n| Tag | Name | Type | Required | Comments\\\n      \\ |\\n|---|---|---|---|---|\\n| 8 | `BeginString` | String | Yes | Identifies\\\n      \\ beginning of new message and protocol version. Must always be first in the\\\n      \\ message. |\\n| 9 | `BodyLength` | Length | Yes | Message length in bytes, not\\\n      \\ including fields 8, 9 and 10. See refer to FIX specification on how to compute\\\n      \\ this field. Must always be the first field in the message. |\\n| 35 | `MsgType`\\\n      \\ | String | Yes | The type of the message. See below for available types |\\n\\\n      | 49 | `SenderCompID` | String | Yes | A user defined client name |\\n| 56 |\\\n      \\ `TargetCompID` | String | Yes | Constant value: `DERIBITSERVER` |\\n| 34 |\\\n      \\ `MsgSeqNum` | SeqNum | Yes | A sequence number for the message, starts with\\\n      \\ 1, and must be incremented by 1 for every message. |\\n| 52 | `SendingTime`\\\n      \\ | UTCTimestamp | No | The time the request is sent. This field is ignored\\\n      \\ by the server |\\n| 10 | `CheckSum` | String | Yes | The checksum of all of\\\n      \\ all preceding messages. See refer to FIX specification on how to compute this\\\n      \\ field. Must always be the last field in the message. |\\n\\nResponses sent by\\\n      \\ the server will at least include:\\n\\n| Tag | Name | Type |  Comments |\\n|---|---|---|---|\\n\\\n      | 8 | `BeginString` | String |  Identifies beginning of new message and protocol\\\n      \\ version. Must always be first in the message. |\\n| 9 | `BodyLength` | Length\\\n      \\ |  Message length in bytes, not including fields 8, 9 and 10. See refer to\\\n      \\ FIX specification on how to verify this field. Must always be the first field\\\n      \\ in the message. |\\n| 35 | `MsgType` | String | The type of the message. See\\\n      \\ below for available types |\\n| 49 | `SenderCompID` | String | Constant value:\\\n      \\ `DERIBITSERVER` |\\n| 56 | `TargetCompID` | String | A user defined client\\\n      \\ name |\\n| 34 | `MsgSeqNum` | SeqNum | A server-chosen sequence number for\\\n      \\ the message. |\\n| 52 | `SendingTime` | UTCTimestamp | The time the request\\\n      \\ is sent. This field is ignored by the server |\\n| 10 | `CheckSum` | String\\\n      \\ | The checksum of all of all preceding messages. See refer to FIX specification\\\n      \\ on how to verify this field. Must always be the last field in the message.\\\n      \\ |\\n\\n\\n## `Logon`(`A`)\\n\\n`Logon`(`A`) must the first message sent by the\\\n      \\ client to initiate a session. If authentication succeeds, the exchange should\\\n      \\ echo the message back to the client. If authentication fails, the exchange\\\n      \\ will respond with a `LogOut`(`5`) message with an appropriate reason.\\n\\n\\\n      ### Arguments\\n\\n| Tag | Name | Type | Required | Comments |\\n|---|---|---|---|---|\\n\\\n      | 108 | `HeartBtInt` | int | Yes | Used to declare the timeout interval in seconds\\\n      \\ for generating heartbeats. |\\n| 94 | `RawDataLength` | Length | No | Number\\\n      \\ of bytes in raw data field. Not required, as the normal RawData is base64\\\n      \\ text here |   \\n| 96 | `RawData` | data | Yes | The timestamp and a Base64\\\n      \\ encoded _nonce_ (see below) |\\n| 553 | `Username` | String | Yes | API Access\\\n      \\ Key. This can be obtained from the API tab on your account settings. |\\n|\\\n      \\ 554 | `Password` | String | Yes | See below |\\n| 9002 | `UseWordsafeTags`\\\n      \\ | Boolean | No | If present and set to `Y`, all of the tag values for our\\\n      \\ custom tags start at 5000 instead of 100000. This can be used for FIX libraries\\\n      \\ that don't allow higher tag numbers. This will setting will apply for the\\\n      \\ remainder of the connection. For example, `Volume24h`(`100087`) would become\\\n      \\ `5078`.|\\n| 9001 | `CancelOnDisconnect` | Boolean | No | Boolean, to enable\\\n      \\ or disable session-level cancel on disconnect. Default - false(`N`). |\\n\\n\\\n      The `RawData`(`96`) tag contains a timestamp and a _nonce_, separated by an\\\n      \\ ASCII period (`.`). The _timestamp_ needs to be a strictly increasing integer.\\\n      \\ We recommend using a timestamp in milliseconds. The _nonce_ is composed base64-encoded\\\n      \\ randomly chosen bytes. For safety reasons, it is important that the _nonce_\\\n      \\ is sufficiently long and sourced from a cryptographically secure random number\\\n      \\ generator. We recommend at least 32 bytes, but the _nonce_ can be up to 512\\\n      \\ bytes.\\n\\nThe `Password`(`553`) tag should contain a base64 encoded SHA256\\\n      \\ hash of the concatenation of the `RawData`(`96`) content and the access secret:\\\n      \\ `base64(sha256(RawData ++ access_secret))`.\\n\\n`CancelOnDisconnect`(`9001`)\\\n      \\ controls \\\"Close on Disconnect\\\". If this tag is not provided, the default\\\n      \\ setting from the account is used.\\n\\n### Response\\n\\nWhen the login is successful,\\\n      \\ the server will echo back the request.\\n\\nIf the login was not successful,\\\n      \\ the server will respond with a `Logout`(`5`) message, and close the connection.\\n\\\n      \\n## `Logout`(`5`)\\n\\n`Logout`(`5`) can be sent by either party in order to\\\n      \\ terminate a session. The sending party should always wait for the echo of\\\n      \\ the logout request before they close the socket. Closing connections in any\\\n      \\ other way is considered abnormal behaviour. Nonetheless, if `CancelOnDisconnect`(`9001`)\\\n      \\ was set at Logon, all orders will be cancelled at Logout.\\n\\n### Arguments\\n\\\n      \\n| Tag | Name | Type | Required | Comments |\\n|---|---|---|---|---|\\n| 58 |\\\n      \\ `text` | String | No | Free format text string specifying the logout reason.\\\n      \\ This is ignored by the server |\\n\\n\\n\\n## `Heartbeat`(`0`)\\n\\nWhen either\\\n      \\ end of a FIX connection has not sent or received any data for `HeartBtInt`\\\n      \\ seconds \\\\(as specified in the `Logon`(`A`) message\\\\), it will transmit a\\\n      \\ `Heartbeat`(`0`) message. When either end of a FIX connection has not received\\\n      \\ any data for `HeartBtInt` seconds, it will transmit a `Test Request`(`1`)\\\n      \\ message. If there is still no response, the session should be considered lost\\\n      \\ and corrective action should be initiated.\\n\\n### Arguments\\n\\n| Tag | Name\\\n      \\ | Type | Required | Comments |\\n|---|---|---|---|---|\\n| 112 | `TestReqId`\\\n      \\ | String | Varies | The identifier when responding to `Test Request`(`1`)\\\n      \\ message. When not responding to a `Test Request`(`1`) message, this tag can\\\n      \\ be left out |\\n\\n### Response\\n\\nWhen the heartbeat has been received successfully,\\\n      \\ the server will echo back the request as confirmation.\\n\\n\\n\\n\\n## `Test Request`(`1`)\\n\\\n      \\nThe Test `Request`(`1`) message forces a heartbeat from the opposing application.\\\n      \\ The opposing application responds with a `Heartbeat`(`0`) containing the `TestReqID`(`112`).\\n\\\n      \\n### Arguments\\n\\n| Tag | Name | Type | Required | Comments |\\n|---|---|---|---|---|\\n\\\n      | 112 | `TestReqId` | String  | Yes | Mirrors the original request ID. |\\n\\n\\\n      \\n\\n## `Resend Request`(`2`)\\n\\nThe Resend `Request`(`2`) message is used by\\\n      \\ the server to initiate the retransmission of messages. This function is utilized\\\n      \\ if a sequence number gap is detected, if the receiving application lost a\\\n      \\ message, or as a function of the initialization process.\\n\\n### Arguments\\n\\\n      \\n| Tag | Name | Type | Required | Comments |\\n|---|---|---|---|---|\\n| 7 |\\\n      \\ `BeginSeqNo` | Yes | The first message to repeat |\\n| 16 | `EndSeqNo` | Yes\\\n      \\ | The last message to repeat |\\n\\n\\n\\n\\n\\n### `Reject`(`3`)\\n\\nThe `Reject`(`3`)\\\n      \\ message should be issued when a message is received but cannot be properly\\\n      \\ processed due to a session-level or data structure rule violation. An example\\\n      \\ of when a reject may be appropriate would be the receipt of a message with\\\n      \\ invalid basic data \\\\(e.g. missing tags\\\\) which successfully passes decryption.\\n\\\n      \\n### Arguments\\n\\n| Tag | Name | Type | Required | Comments |\\n|---|---|---|---|---|\\n\\\n      | 45 | `RefSeqNum` | SeqNum | Yes | `MsgSeqNum`(`34`) of the rejected message\\\n      \\ |\\n| 372 | `RefMsgType` | String | No | The `MsgType`(`35`) of the FIX message\\\n      \\ being referenced |\\n| 373 | `SessionRejectReason` | int |No | Code to identity\\\n      \\ reason for rejection. See FIX specification for possible values. |\\n| 58 |\\\n      \\ `Text` | String | No | Text string explaining the reason for rejection. |\\n\\\n      \\n\\n\\n\\n## `Security List Request`(`x`)\\n\\nThe `SecurityListRequest`(`x`) message\\\n      \\ is used to return a list of securities \\\\(instruments\\\\) from the Deribit.\\n\\\n      \\n### Arguments\\n\\n\\n| Tag | Name | Type | Required | Comments |\\n|---|---|---|---|---|\\n\\\n      | 320 | `SecurityReqId` | String | Yes | A user-generated ID for this request.\\\n      \\ This can be used to match the request to the response. |\\n| 559 | `SecurityListRequestType`\\\n      \\ | int | Yes | 0 or 4 – in any case list of instruments is returned |\\n\\n\\n\\\n      ### Response\\n\\nThe server will respond with a Security `List`(`y`) message,\\\n      \\ where the `SecurityReq`(`320`) is equal to that of the request.\\n\\n\\n## `Security\\\n      \\ List`(`y`)\\n\\nThe `SecurityList`(`y`) message is used to return a list of\\\n      \\ securities that matches the criteria specified in a Security List `Request`(`x`).\\n\\\n      \\n### Arguments\\n\\n| Tag | Name | Type | Required | Comments |\\n|---|---|---|---|---|\\n\\\n      | 320 | `SecurityReqId` | String | Yes | The `SecurityReqId`(`320`) of the request\\\n      \\ that this is a response for |\\n| 322 | `SecurityResponseID` | String | Yes\\\n      \\ | Identifier for the Security `List`(`x`) message |\\n| 560 | `SecurityRequestResult`\\\n      \\ | int | Yes | 0 indicates a successful response. This is the only possible\\\n      \\ value in the Deribit FIX API |\\n| 146 | `NoRelatedSym` | int | No | Specifies\\\n      \\ the number of repeating instruments specified |\\n| =\u0026gt;55 | `Symbol` | String\\\n      \\ | No | Common, \\\"human understood\\\" representation of the security, e.g.,\\\n      \\ `BTC-28JUL17`, see instrument naming convention |\\n| =\u0026gt;107 | `SecurityDesc`\\\n      \\ | String |No | Free form security description. At the time of writing, this\\\n      \\ is either 'future' or 'option' |\\n| =\u0026gt;167 | `SecurityType` | String |No\\\n      \\ | `FUT` or `OPT` |\\n| =\u0026gt;201 | `PutOrCall` | int | No | Used to express\\\n      \\ option right, 0 – put, 1 – call. |\\n| =\u0026gt;202 | `StrikePrice` | Price | No\\\n      \\ | Strike price |\\n| =\u0026gt;947 | `StrikeCurrency` | Currency | No | Strike Currency\\\n      \\ |\\n| =\u0026gt;15 | `Currency` | Currency | No | Currency of option |\\n| =\u0026gt;2576\\\n      \\ | `InstrumentPricePrecision`  | int | No | number of decimal places for instrument\\\n      \\ prices \\\\(usually 4 for options, 2 for futures\\\\) |\\n| =\u0026gt;969 | `MinPriceIncrement`\\\n      \\  | float | No | Minimum price tick for a given Instrument |\\n| =\u0026gt;311 |\\\n      \\ `UnderlyingSymbol` | String | No | Underlyig symbol for options. |\\n| =\u0026gt;225\\\n      \\ | `IssueDate` | UTCTimestamp | No | Date instrument was issued. |\\n| =\u0026gt;541\\\n      \\ | `MaturityDate` | UTCTimestamp | No | Expiration date, `YYYYMMDD` |\\n| =\u0026gt;1079\\\n      \\ | `MaturityTime` | UTCTimestamp | No | Expiration time |\\n| =\u0026gt;562 | `MinTradeVol`\\\n      \\ | Qty | No | The minimum trading volume for a security |\\n| =\u0026gt;63 | `SettlType`\\\n      \\ | String | No | Indicates order settlement period. E.g., `M1` – month, `W1`\\\n      \\ – week, `W2` – 2 weeks etc |\\n| =\u0026gt;120 | `SettlCurrency` | Currency | No\\\n      \\ | Currency code of settlement denomination. |\\n| =\u0026gt;479 | `CommCurrency`\\\n      \\ | Currency | No | Specifies currency to be use for Commission. |\\n\\n\\n\\n\\n\\\n      ## `Market Data Request`(`V`)\\n\\n`Market Data Request`(`V`) can be used to request\\\n      \\ market data in snapshot or the incremental form. Deribit uses his message\\\n      \\ for order book requests and its change notification.\\n\\n### Arguments\\n\\n\\\n      | Tag | Name | Type | Required | Comments |\\n|---|---|---|---|---|\\n| 55 | `Symbol`\\\n      \\ | String | Yes | Instrument symbol |\\n| 262 | `MdReqId` | String |Yes | Unique\\\n      \\ ID assigned to this request. |\\n| 263 | `SubscriptionRequestType` | int |Yes\\\n      \\ | 0 = Snapshot, 1 = Snapshot + Subscribe, 2 = Unsubscribe |\\n| 264 | `MarketDepth`\\\n      \\ | int |No | Default 20 |\\n| 265 | `MDUpdateType` | int | when `SubscriptionRequestType=1`\\\n      \\ | The type of update to subscribe to. |\\n| 100007 | `DeribitTradeAmount` |\\\n      \\ int | No | Amount of trades returned in the snapshot response to request for\\\n      \\ snapshot of recent trades, default 20, maximum  1000 |\\n| 100008 | `DeribitSinceTimestamp`\\\n      \\ | int |No | UTC Timestamp in milliseconds \\\\(integer number of milliseconds\\\\\\\n      ), if specified, the response returns the trades happened since that timestamp,\\\n      \\ applicable to the request for recent trades snapshot |\\n|  | Group `MDEntryTypes`\\\n      \\ |  |  |\\n| 267 | `NoMdEntryTypes` | int | Yes | Number of entry types in the\\\n      \\ request. |\\n| =\u0026gt;269 | `MDEntryType` | int | Yes | 0 = Bid \\\\(Bid side of\\\n      \\ the order book\\\\), 1 = Offer \\\\(Ask side of the order book\\\\), 2 = Trade \\\\\\\n      (Info about recent trades\\\\) |\\n\\nWhen requesting a subscription (`SubscriptionRequestType`=1),\\\n      \\ the only supported combinations are:\\n\\n- `MDUpdateType`=1, `MarketDepth`=0.\\\n      \\ This will result a snapshot message (W) with the whole order book, followed\\\n      \\ by incremental updates (X messages) through the whole order book depth.\\n\\\n      - `MDUpdateType`=0, `MarketDepth`=(1,10,20). This results in full refresh (W)\\\n      \\ messages, containing the entire specified order book depth. Valid values for\\\n      \\ `MarketDepth` are 1, 10, 20.\\n\\n### Response\\n\\nIf the server is unable to\\\n      \\ supply the requested data, it will respond with a Market Data Request `Reject`(`Y`)\\\n      \\ message.\\n\\nIf the request called for a snapshot (i.e. `SubscriptionRequestType`(`263`)=0\\\n      \\ or `SubscriptionRequestType`(`263`)=1), the server will respond with a Market\\\n      \\ Data - Snapshot/Full `Refresh`(`W`) message.\\n\\nIf the request called for\\\n      \\ a snapshot (i.e. `SubscriptionRequestType`(`263`)=0 or `SubscriptionRequestType`(`263`)=1),\\\n      \\ the server will start sending with a Market Data - Incremental `Refresh`(`X`)\\\n      \\ messages.\\n\\n\\n## `Market Data Request Reject`(`Y`)\\n\\nIf a Market Data `Request`(`V`)\\\n      \\ message is not accepted, the exchange responds with a Market Data Request\\\n      \\ `Reject`(`Y`) message\\n\\n### Arguments\\n\\n\\n| Tag | Name | Type | Required\\\n      \\ | Comments |\\n|---|---|---|---|---|\\n| 58 | `Text` | String | No | Free format\\\n      \\ text string |\\n| 262 | `MDReqID` | String | Yes | ID of the original request\\\n      \\ |\\n| 281 | `MDReqRejReason` | char | Yes |  |\\n\\n## `Market Data Snapshot/Full\\\n      \\ Refresh`(`W`)\\n\\nMarket Data Snapshot/Full `Refresh`(`W`) is used as the response\\\n      \\ to a Market Data `Request`(`V`) message.\\n\\n### Arguments\\n\\n| Tag | Name\\\n      \\ | Type | Required | Comments |\\n|---|---|---|---|---|\\n| 55 | `Symbol` | String\\\n      \\ | Yes | Instrument symbol |\\n| 262 | `MDReqID` | String | No | ID of the original\\\n      \\ request, if it is applicable |\\n| 311 | `UnderlyingSymbol` | String | For\\\n      \\ options | Underlying symbol |\\n| 810 | `UnderlyingPx` | Price | For options\\\n      \\ | Price of the underlying instrument |\\n| 231 | `ContractMultiplier` | float|\\\n      \\ No | Specifies a multiply factor to convert from contracts to total units\\\n      \\ |\\n| 100087 | `TradeVolume24h` | Qty | No | Defines 24h trade volume for the\\\n      \\ Symbol in the corresponding contract units |\\n| 100090 | `MarkPrice` | Price\\\n      \\ | No | Defines mark price for the Symbol |\\n| 746 | `OpenInterest` | float\\\n      \\ | No | Defines open interest for the Symbol |\\n| 268 | `NoMDEntries` | int\\\n      \\ | Yes | Repeating group . Specifies the number of entries in the group. |\\n\\\n      | =\u0026gt;279 | `MDUpdateAction` | Char | No | Type of Market Data update action.\\\n      \\ 0 = New, 1 = Change, 2 = Delete|\\n| =\u0026gt;269 | `MDEntryType` | int | No |\\\n      \\ 0 = Bid \\\\(Bid side of the order book\\\\), 1 = Offer \\\\(Ask side of the order\\\n      \\ book\\\\), 2 = Trade \\\\(in case of request for info about recent trades\\\\) |\\n\\\n      | =\u0026gt;270 | `MDEntryPx` | Price | No | Price of an entry |\\n| =\u0026gt;271 | `MDEntrySize`\\\n      \\ | Qty | No | Size of an entry |\\n| =\u0026gt;272 | `MDEntryDate` | UTCTimestamp\\\n      \\ | No | The timestamp for trade |\\n| =\u0026gt;100009 | `DeribitTradeId` | int |\\\n      \\  No | Id of the trade, in case of the request for trades |\\n| =\u0026gt;54 | `Side`\\\n      \\ | int | No | Side of trade \\\\(1 = Buy, 2 = Sell\\\\) |\\n| =\u0026gt;58 | `Text` |\\\n      \\ String | No | The trade sequence number |\\n| =\u0026gt;198 | `SecondaryOrderId`\\\n      \\ | String | No | For trade – matching order id |\\n| =\u0026gt;39 | `OrdStatus` |\\\n      \\ int | No | For trade – order status \\\\(0 = New, 1 = Partially filled, 2 =\\\n      \\ Filled, 4 = Cancelled\\\\) |\\n| =\u0026gt;100010 | `DeribitLabel` | String | No |\\\n      \\ User defined 32 character label of the order, in case of the request for trades\\\n      \\ |\\n\\n\\n## `Market Data Incremental Refresh`(`x`)\\n\\nMarket Data – Incremental\\\n      \\ `Refresh`(`X`) message is used for incremental updates in case of Market Data\\\n      \\ `Request`(`V`) for Snapshot + Subscribe\\n\\n### Arguments\\n\\n| Tag | Name |\\\n      \\ Type | Required | Comments |\\n|---|---|---|---|---|\\n| 55 | `Symbol` | String\\\n      \\ | Yes | Instrument symbol |\\n| 262 | `MDReqID` | String | No | ID of the original\\\n      \\ request, if it is applicable |\\n| 231 | `ContractMultiplier` | float| No |\\\n      \\ Specifies a multiply factor to convert from contracts to total units |\\n|\\\n      \\ 100087 | `TradeVolume24h` | Qty | No | Defines 24h trade volume for the Symbol\\\n      \\ in the corresponding contract units |\\n| 100090 | `MarkPrice` | Price | No\\\n      \\ | Defines mark price for the Symbol |\\n| 746 | `OpenInterest` | float | No\\\n      \\ | Defines open interest for the Symbol |\\n| 268 | `NoMDEntries` | int | Yes\\\n      \\ | Repeating group . Specifies the number of entries in the group. |\\n| =\u0026gt;279\\\n      \\ | `MDUpdateAction` | char | No | Type of Market Data update action. Valid\\\n      \\ values: 0 = New, 1 = Change, 2 = Delete |\\n| =\u0026gt;269 | `MDEntryType` | int\\\n      \\ | No | 0 = Bid \\\\(Bid side of the order book\\\\), 1 = Offer \\\\(Ask side of\\\n      \\ the order book\\\\), 2 = Trade \\\\(in case of request for info about recent trades\\\\\\\n      ) |\\n| =\u0026gt;270 | `MDEntryPx` | Price | No | Price of an entry |\\n| =\u0026gt;271\\\n      \\ | `MDEntrySize` | Qty | No | Size of an entry |\\n| =\u0026gt;272 | `MDEntryDate`\\\n      \\ | String | UTCTimestamp | The timestamp for trade |\\n| =\u0026gt;100009 | `DeribitTradeId`\\\n      \\ | int |  No | Id of the trade, in case of the request for trades |\\n| =\u0026gt;54\\\n      \\ | `Side` | int | No | Side of trade \\\\(1 = Buy, 2 = Sell\\\\) |\\n| =\u0026gt;37 |\\\n      \\ `OrderId` | String | No | For trade – order id |\\n| =\u0026gt;198 | `SecondaryOrderId`\\\n      \\ | String | No | For trade – matching order id |\\n| =\u0026gt;39 | `OrdStatus` |\\\n      \\ int | No | For trade – order status \\\\(0 = New, 1 = Partially filled, 2 =\\\n      \\ Filled, 4 = Cancelled\\\\) |\\n| =\u0026gt;100010 | `DeribitLabel` | String | No |\\\n      \\ User defined 32 character label of the order, in case of the request for trades\\\n      \\ |\\n| =\u0026gt;44 | `IndexPrice` | Price | No | For trades, this is the index price\\\n      \\ at the trade moment \\\\(Deribit index\\\\). |\\n\\n\\n\\n## `New Order Single`(`D`)\\n\\\n      \\nThe NEW ORDER `SINGLE`(`D`) is used by the client to submit new orders to\\\n      \\ the exchange. Note Deribit doesn't store client identifiers \\\\(for the sake\\\n      \\ of speed of execution\\\\), i.e., client software should manage matching client-server\\\n      \\ identifiers using.\\n\\n### Arguments\\n\\n| Tag | Name | Type | Required | Comments\\\n      \\ |\\n|---|---|---|---|---|\\n| 11 | `ClOrdID` | String | Yes | Unique identifier\\\n      \\ for the order as assigned by the client |\\n| 54 | `Side` | int | Yes | 1 =\\\n      \\ Buy, 2 = Sell |\\n| 38 | `OrderQty` | Qty | Yes | Order quantity |\\n| 44 |\\\n      \\ `Price` | Price | Yes | Price |\\n| 55 | `Symbol` | String | Yes | Instrument\\\n      \\ symbol, e.g., `BTC-1JAN16` |\\n| 18 | `ExecInst` | int | No | Currently is\\\n      \\ used to place POST ONLY orders: 6 = \\\"Participate don't initiate\\\" |\\n| 40\\\n      \\ | `OrdType` | char | No | Order type. Valid values: 1 = Market, 2 = Limit.\\\n      \\ \\\\(default Limit\\\\) |\\n| 59 | `TimeInForce` | char  | No | Specifies how long\\\n      \\ the order remains in effect. Absence of this field is interpreted as \\\"Good\\\n      \\ Till Cancel\\\". Valid values: 1 = Good Till Cancel \\\\(`GTC`\\\\), 3 = Immediate\\\n      \\ or Cancel \\\\(`IOC`\\\\), 4 = Fill or Kill \\\\(`FOK`\\\\) |\\n| 100010 | `DeribitLabel`\\\n      \\ | String | no | A custom label for your order, max 32 characters. |\\n| 100012\\\n      \\ | `DeribitAdvOrderType` | char | no | Used to create advanced order for options.\\\n      \\ If it is present: 0 = Implied Volatility Order (price defines fixed implied\\\n      \\ volatility in %) , 1 = USD Order (price defines fixed USD price of the option)\\\n      \\ |\\n\\n### Response\\n\\nUpon receiving a new order, the exchange responds with\\\n      \\ the Execution `Report`(`8`) message communicating whether the order was accepted\\\n      \\ or rejected.\\n\\n| Tag | Name | Required | Comments |\\n|---|---|---|---|\\n\\\n      | 11 | `ClOrdID` | Yes | Deribit replaces this field with the own value assigned\\\n      \\ by the server \\\\(it is not the client id from New Order Single\\\\) |\\n| 41\\\n      \\ | `OrigClOrdId` | Yes | The original value assigned by the client in the `New\\\n      \\ Order Single`(`D`) message |\\n| 39 | `OrdStatus` | Yes | 0 = New, 8 = Rejected\\\n      \\ |\\n| 54 | `Side` | Yes | 1 = Buy, 2 = Sell |\\n| 60 | `TransactTime` | Yes\\\n      \\ | Time the transaction represented by this Execution Report occurred. Fix\\\n      \\ timestamp. |\\n| 151 | `LeavesQty` | Yes | Order quantity open for further\\\n      \\ execution \\\\(`LeavesQty` = `OrderQty` - `CumQty`\\\\) |\\n| 14 | `CumQty` | Yes\\\n      \\ | Total executed quantity or 0.0 |\\n| 38 | `OrderQty` | Yes | Order quantity\\\n      \\ |\\n| 40 | `OrdType` | Yes | 1 = Market, 2 = Limit, 4 = Stop Limit, S = Stop\\\n      \\ Market |\\n| 44 | `Price` | Yes | Price |\\n| 103 | `OrdRejReason` | Yes | \\\n      \\ |\\n| 58 | `Text` | No | Free format text string, usually exceptions |\\n| 207\\\n      \\ | `SecurityExchange` | No | \\\"Deribit\\\" |\\n| 55 | `Symbol` | Yes | Instrument\\\n      \\ symbol |\\n| 854 | `QtyType` | No | Type of quantity specified in a quantity.\\\n      \\ Currently only 1 - `Contracts`.  |\\n| 231 | `ContractMultiplier` | No | Specifies\\\n      \\ a multiply factor to convert from contracts to total units |\\n| 6 | `AvgPx`\\\n      \\ | No | Average execution price or 0.0 if not executed yet or rejected |\\n\\\n      | 210 | `MaxShow` | No | Maximum quantity (e.g. number of shares) within an\\\n      \\ order to be shown to other customers |\\n| 100012 | `DeribitAdvOrderType` |\\\n      \\ No | if it is present then it denotes advanced order for options: 0 = Implied\\\n      \\ Volatility Order, 1 = USD Order |\\n| 1188 | `Volatility` | No | volatility\\\n      \\ for Implied Volatility Orders (options orders with fixed volatility) |\\n|\\\n      \\ 839 | `PeggedPrice` | No | value of fixed USD price for USD Orders (options\\\n      \\ orders with fixed USD price) |\\n| 1362 | `NoFills` | No | Number of immediate\\\n      \\ fill entries for the order |\\n| =\u0026gt;1363 | `FillExecID` | No | Unique identifier\\\n      \\ of execution, concatenated via '\\\\#' symbol and trade sequence number, e.g.,\\\n      \\ `BTC-28SEP18#38`. |\\n| =\u0026gt;1364 | `FillPx` | No | Price of this partial fill\\\n      \\ |\\n| =\u0026gt;1365 | `FillQty` | No | Quantity bought/sold on this partial fill\\\n      \\ |\\n\\n\\n\\n\\n\\n## `Order Cancel Request`(`F`)\\n\\nThis message requests the cancellation\\\n      \\ of a particular order. If an order has been partially filled, only the remaining\\\n      \\ quantity can be cancelled. The request should be accepted only if an order\\\n      \\ can successfully be cancelled without executing further. The server generated\\\n      \\ identifiers should be used as `OrigClOrdId`, Deribit doesn't store client\\\n      \\ identifiers.\\n\\n### Arguments\\n\\n| Tag | Name | Required | Comments |\\n|---|---|---|---|\\n\\\n      | 11 | `ClOrdID` | Yes | Order identifier |\\n| 41 | `OrigClOrdId` | Yes | Order\\\n      \\ identifier assigned by Deribit |\\n\\n### Response on failure\\n\\n`Order Cancel\\\n      \\ Reject`(`9`) is issued by the exchange upon receipt of Order Cancel `Request`(`F`)\\\n      \\ message which cannot be executed.\\n\\n| Tag | Name | Required | Comments |\\n\\\n      |---|---|---|---|\\n| 52 | `SendingTime` | Yes |  |\\n| 11 | `ClOrdID` | Yes |\\\n      \\ Order identifier |\\n| 41 | `OrigClOrdId` | Yes | Order identifier assigned\\\n      \\ by Deribit |\\n| 39 | `OrdStatus` | No | If it is applicable |\\n| 58 | `Text`\\\n      \\ | No | Text string explaining the reason for rejection |\\n\\n### Response on\\\n      \\ success\\n\\nThe following `Execution Report`(`8`) is sent by the exchange upon\\\n      \\ successfully processing a cancel request.\\n\\n| Tag | Name | Required | Comments\\\n      \\ |\\n|---|---|---|---|\\n| 52 | `SendingTime` | Yes |  |\\n| 11 | `ClOrdID` |\\\n      \\ Yes | Deribit replaces this field with the own value assigned by the server\\\n      \\ \\\\(it is not the client id from New Order Single\\\\) |\\n| 41 | `OrigClOrdId`\\\n      \\ | Yes | The original value assigned by the client in the `New Order Single`(`D`)\\\n      \\ message |\\n| 39 | `OrdStatus` | Yes | 0 = New, 1 = Partial, 4 = Cancelled,\\\n      \\ 8 = Rejected |\\n| 58 | `Text` | Yes | Text string describing the result |\\n\\\n      \\n## `Order Mass Cancel Request`(`q`)\\n\\n`Order Mass Cancel Request`(`q`) message\\\n      \\ will trigger cancellation of a group of orders.\\n\\n### Arguments\\n\\n| Tag\\\n      \\ | Name | Required | Comments |\\n|---|---|---|---|\\n| 11 | `ClOrdID` | Yes\\\n      \\ | Unique ID of Order Mass Cancel Request (q) as assigned by the client. |\\n\\\n      | 530 | `MassCancelRequestType` | Yes | Specifies the type of cancellation requested.\\\n      \\ Supported values: 7 (all orders), 5 (orders by security type), 1 (orders by\\\n      \\ symbol).  |\\n| 167 | `SecurityType` | If `MassCancelRequestType`=5 | possible\\\n      \\ values 'FUT', 'OPT'. The security type for which to cancel orders. |\\n| 55\\\n      \\ | `Symbol` | If `MassCancelRequestType`=1 | The symbols for which to cancel\\\n      \\ all orders |\\n| 15 | `Currency` | No | If to cancel only certain currency\\\n      \\ if applicable. See also [#security-list-y][Security List].|\\n\\n### Response\\n\\\n      \\nAfter the cancellation, the server responds with a `Order Mass Cancel Report`(`r`).\\n\\\n      \\n| Tag | Name | Type | Required | Comments |\\n|---|---|---|---|---|\\n| 11 |\\\n      \\ `ClOrdID` | String | Yes | Deribit replaces this field with the own value\\\n      \\ assigned by the server \\\\(it is not the client id from New Order Single\\\\\\\n      ) |\\n| 530 | `MassCancelRequestType` | Yes | Specifies the type of cancellation\\\n      \\ requested. Supported values: 1 (all orders), 5 (orders by security type),\\\n      \\ 7 (orders by symbol).  |\\n| 531 | `MassCancelResponse` | No | If successful,\\\n      \\ echoes the `MassCancelRequestType`. |\\n| 58 | `Text` | No | 'success', if\\\n      \\ deletion was successful |\\n| 532 | `MassCancelRejectReason` | No | Reason\\\n      \\ why deletion failed. 1=Unknown security, 5=Unknown security type |\\n\\n\\n##\\\n      \\ `Order Mass Status Request`(`AF`)\\n\\n`Order Mass Status Request`(`AF`) message\\\n      \\ requests the status of currently open orders. The exchange should respond\\\n      \\ with a series of Execution `Report`(`8`) messages detailing orders.\\n\\n###\\\n      \\ Arguments\\n\\n| Tag | Name | Required | Comments |\\n|---|---|---|---|\\n| 584\\\n      \\ | `MassStatusReqID` | Yes | Client-assigned unique ID of this request |\\n\\\n      | 585 | `MassStatusReqType` | Yes | Specifies the scope of the mass status request.\\\n      \\ (see below) |\\n\\nThis message can be used in two ways: to request status of\\\n      \\ all your open orders, or to request the status of a single order (which needn't\\\n      \\ be open).\\n\\nTo request the status of all orders, choose a random `MassStatusRequestId`,\\\n      \\ and set `MassStatusReqType=7`. The server will respond with a series of `Execution\\\n      \\ Reports`(`8`) messages, where the first message contains `MassStatusReqType=7`\\\n      \\ and `TotNumReports` will be set to the number of reports to be expected as\\\n      \\ a follow-up.\\n\\n### Response\\n\\nWhen the client requests the status of current\\\n      \\ orders, the exchange should reply with a series of special `Execution Reports`(`8`),\\\n      \\ one for every order requested.\\n\\n| Tag | Name | Type | Required | Comments\\\n      \\ |\\n|---|---|---|---|---|\\n| 11 | `ClOrdID` | String | Yes | Deribit replaces\\\n      \\ this field with the own value assigned by the server \\\\(it is not the client\\\n      \\ id from New Order Single\\\\) |\\n| 41 | `OrigClOrdId` | String | Yes | The original\\\n      \\ value assigned by the client in the `New Order Single`(`D`) message |\\n| 39\\\n      \\ | `OrdStatus` | char | Yes | 0 = New, 8 = Rejected |\\n| 54 | `Side` | char\\\n      \\ | Yes | 1 = Buy, 2 = Sell |\\n| 60 | `TransactTime` |  | Yes | Time the transaction\\\n      \\ represented by this Execution Report occurred. Fix timestamp. |\\n| 151 | `LeavesQty`\\\n      \\ | Qty | Yes | Order quantity open for further execution \\\\(`LeavesQty` = `OrderQty`\\\n      \\ - `CumQty`\\\\) |\\n| 14 | `CumQty` | Qty | Yes | Total executed quantity or\\\n      \\ 0.0 |\\n| 38 | `OrderQty` | Qty | Yes | Order quantity |\\n| 40 | `OrdType`\\\n      \\ | char | Yes | 1 = Market, 2 = Limit, 4 = Stop Limit, S = Stop Market |\\n\\\n      | 44 | `Price` | Price | Yes | Price |\\n| 103 | `OrdRejReason` | int  | Yes\\\n      \\ |  Code to identify reason for order rejection. |\\n| 58 | `Text` | String\\\n      \\ | No | Free format text string, usually exceptions |\\n| 207 | `SecurityExchange`\\\n      \\ | String | No | \\\"Deribit\\\" |\\n| 55 | `Symbol` | String | Yes | Instrument\\\n      \\ symbol |\\n| 854 | `QtyType` | String | No | Type of quantity specified in\\\n      \\ a quantity. Currently only 1 - `Contracts`.  |\\n| 231 | `ContractMultiplier`\\\n      \\ | float | No | Specifies a multiply factor to convert from contracts to total\\\n      \\ units |\\n| 6 | `AvgPx` | float | No | Average execution price or 0.0 if not\\\n      \\ executed yet or rejected |\\n| 210 | `MaxShow` | Qty | No | Maximum quantity\\\n      \\ (e.g. number of shares) within an order to be shown to other customers |\\n\\\n      | 100012 | `DeribitAdvOrderType` | char | No | if it is present then it denotes\\\n      \\ advanced order for options: 0 = Implied Volatility Order, 1 = USD Order |\\n\\\n      | 1188 | `Volatility` | float | No | volatility for Implied Volatility Orders\\\n      \\ (options orders with fixed volatility) |\\n| 839 | `PeggedPrice` | Price |\\\n      \\ No | value of fixed USD price for USD Orders (options orders with fixed USD\\\n      \\ price) |\\n\\nWhen responding to a `MassStatusReqType=7` request, the server\\\n      \\ precedes the `Execution Reports`(`8`) messages with a special `Execution Reports`(`8`)\\\n      \\ message:\\n\\n| Tag | Name | Type | Required | Comments |\\n|---|---|---|---|---|\\n\\\n      | 584 | `MassStatusReqID` | String | Yes | The `MassStatusReqID` from the request.\\\n      \\ (Only for the first message response to a `MassStatusReqType=7` request.)\\\n      \\ |\\n| 585 | `MassStatusReqType` | int | Yes | The `MassStatusReqType` from\\\n      \\ the request. (Only for the first message response to a `MassStatusReqType=7`\\\n      \\ request.) |\\n| 911 | `TotNumReports` | int | Yes | The total number of reports\\\n      \\ following this initial report |\\n\\n\\n\\n### `Request For Positions`(`AN`)\\n\\\n      \\nRequest For `Positions`(`AN`) is used by the owner of a position to request\\\n      \\ a Position Report.\\n\\n### Arguments\\n\\n| Tag | Name | Type | Required | Comments\\\n      \\ |\\n|---|---|---|---|---|\\n| 710 | `PosReqID` | String |Yes | Unique identifier\\\n      \\ for the Request for `Positions`(`AN`) as assigned by the submitter. |\\n| 724\\\n      \\ | `PosReqType` | int |Yes | 0 = Positions \\\\(currently\\\\) |\\n| 263 | `SubscriptionRequestType`\\\n      \\ | int | No | 0=Receive snapshot, 1=subscribe, 2=unsubscribe |\\n| 15 | `Currency`\\\n      \\ | currency| No | To request for certain currency only. If it is missing --\\\n      \\ all currencies are reported |\\n\\n### Response\\n\\nThe server will respond with\\\n      \\ a Position `Report`(`AP`) message.\\n\\n## `Position Report`(`AP`)\\n\\nThe Position\\\n      \\ `Report`(`AP`) message is returned by the holder of a position in response\\\n      \\ to a Request for `Position`(`AN`) message.\\n\\n### Arguments\\n\\n| Tag | Name\\\n      \\ | Required | Comments |\\n|---|---|---|---|\\n| 721 | `PosMaintRptID` | Yes\\\n      \\ | Unique identifier for this position report |\\n| 710 | `PosReqID` | No |\\\n      \\ Unique identifier for the Request for Positions associated with this report.\\\n      \\ |\\n| 724 | `PosReqType` | No | 0 = Positions \\\\(currently\\\\) |\\n| 728 | `PosReqResult`\\\n      \\ | No | 0 = success, 1 = unsupported request for positions |\\n| 702 | `NoPositions`\\\n      \\ | No | Number of position entries following |\\n| =\u0026gt;704 | `LongQty` | No\\\n      \\ | Qty for long position \\\\(0 for short position\\\\) |\\n| =\u0026gt;705 | `ShortQty`\\\n      \\ | No | Qty for short position \\\\(0 for long position\\\\) |\\n| =\u0026gt;55 | `Symbol`\\\n      \\ | No | Instrument symbol |\\n| =\u0026gt;854 | `QtyType` | No | Type of quantity\\\n      \\ specified in a quantity. Currently only 1 - `Contracts`.  |\\n| =\u0026gt;231 |\\\n      \\ `ContractMultiplier` | No | Specifies a multiply factor to convert from contracts\\\n      \\ to total units |\\n| =\u0026gt;883 | `UnderlyingEndPrice` | No | Mark price \\\\(reference\\\n      \\ price\\\\) |\\n| =\u0026gt;54 | `Side` | No | 1 = Buy, 2 = Sell |\\n| =\u0026gt;730 | `SettlPrice`\\\n      \\ | No | Average price |\\n| =\u0026gt;96 | `RawData` | No | Additional info, semi-colon\\\n      \\ separated: maintenance margin;initial margin;floating P/L |\\n| =\u0026gt;100088\\\n      \\ | `DeribitLiquidationPrice` | No | Estimated liquidation price |\\n| =\u0026gt;100089\\\n      \\ | `DeribitSizeInCurrency` | No | Size in the underlying currency, for example\\\n      \\ BTC or ETH |\\n\\n## `User Request`(`BE`)\\n\\nThis message is used to request\\\n      \\ a report on a user's status and user account info.\\n\\n### Arguments\\n\\n| Tag\\\n      \\ | Name | Required | Comments |\\n|---|---|---|---|\\n| 923 | `UserRequestID`\\\n      \\ | Yes | The request ID |\\n| 924 | `UserRequestType` | Yes | Should be equal\\\n      \\ to 4 \\\\(Request individual user status\\\\), only `UserRequestType=4` supported\\\n      \\ for now |\\n| 553 | `Username` | Yes | API authenticated 'Access Key', user\\\n      \\ can request only own info, should be the same as for previous `LOGON`(`A`)\\\n      \\ |\\n| 15 | `Currency` | No | Currency of the report. See also [#security-list-y][Security\\\n      \\ List]. Default is BTC.|\\n\\n\\n### Response\\n\\nThe server will respond with\\\n      \\ a User `Response`(`BF`) message.\\n\\n\\n\\n\\n## `User Response`(`BF`)\\n\\nThis\\\n      \\ message is used to respond to a `USER REQUEST`(`BE`) message, it reports the\\\n      \\ status of the user and user's account info.\\n\\n### Response\\n\\n| Tag | Name\\\n      \\ | Required | Comments |\\n|---|---|---|---|\\n| 923 | `UserRequestID` | Yes\\\n      \\ | The request ID |\\n| 553 | `Username` | Yes | User's API 'Access Key' |\\n\\\n      | 926 | `UserStatus` | No | 1 = logged in, current implementation accepts USER\\\n      \\ REQUEST-s only from logged in users |\\n| 15 | `Currency` | No | Currency of\\\n      \\ the report. See also [#security-list-y][Security List]. Default is BTC.|\\n\\\n      | 100001 | `DeribitUserEquity` | No | Equity of the user |\\n| 100002 | `DeribitUserBalance`\\\n      \\ | No | Balance of the user |\\n| 100003 | `DeribitUserInitialMargin` | No |\\\n      \\ Initial margin of the user |\\n| 100004 | `DeribitUserMaintenanceMargin` |\\\n      \\ No | Maintenance margin of the user |\\n| 100005 | `DeribitUnrealizedPl` |\\\n      \\ No | Unrealized P/L of the user |\\n| 100006 | `DeribitRealizedPl` | No | Realized\\\n      \\ P/L of the user |\\n| 100011 | `DeribitTotalPl` | No | Total P/L of the user\\\n      \\ |\\n| 100013 | `DeribitMarginBalance` | No | Margin Balance |\\n\\n\\n## `Order\\\n      \\ Cancel/Replace Request`(`G`)\\n\\nTo change/edit the parameters of an existing\\\n      \\ order\\n\\n### Arguments\\n\\n| Tag | Name | Type | Required | Comments |\\n|---|---|---|---|---|\\n\\\n      | 41 | `OrigClOrdID` | String | Yes | |\\n| 11 | `ClOrdId` | String | Yes  |\\\n      \\  |\\n| 60 | `TransactTime` | UTCTimestamp | Yes  | |\\n| 54 | `Side` | char\\\n      \\ | Yes  | original side, 1=buy, 2=sell |\\n| 38 | `OrderQty` | Qty | | order\\\n      \\ quantity |\\n| 40 | `OrdType` | char | Yes | currently 2 - 'limit' |\\n| 44\\\n      \\ | `Price` | Price | | order price (for advanced options orders it could be\\\n      \\ volatility or USD value if applicable) |\\n| 55 | `Symbol` | String | Yes |\\\n      \\ instrument name is required from performance reasons. |\\n| 18 | `ExecInst`\\\n      \\ | int | No | 6 = \\\"Participate don't initiate\\\". If ExecInst=6, the order\\\n      \\ will be POST ONLY after the change. Note, if the ExecInst is missing or different\\\n      \\ from 6 then the POST ONLY flag will be removed from the changed order if it\\\n      \\ was present before |\\n\\n### Response\\nsee New Order Single response \\n\\n##\\\n      \\ `Execution Reports`(`8`) about order changes\\n### Notification \\nThe report\\\n      \\ `Execution Reports`(`8`) is similar to New Order Single or Cancel/Replace\\\n      \\ responses but it doesn't contain Fills (trades notifications are coming via\\\n      \\ Marlet Data)\\n\\n| Tag | Name | Required | Comments |\\n|---|---|---|---|\\n\\\n      | 11 | `ClOrdID` | Yes | Deribit replaces this field with the own value assigned\\\n      \\ by the server \\\\(it is not the client id from New Order Single\\\\) |\\n| 41\\\n      \\ | `OrigClOrdId` | Yes | The original value assigned by the client in the `New\\\n      \\ Order Single`(`D`) message |\\n| 39 | `OrdStatus` | Yes | 0 = New, 8 = Rejected\\\n      \\ |\\n| 54 | `Side` | Yes | 1 = Buy, 2 = Sell |\\n| 60 | `TransactTime` | Yes\\\n      \\ | Time the transaction represented by this Execution Report occurred. Fix\\\n      \\ timestamp. |\\n| 151 | `LeavesQty` | Yes | Order quantity open for further\\\n      \\ execution \\\\(`LeavesQty` = `OrderQty` - `CumQty`\\\\) |\\n| 14 | `CumQty` | Yes\\\n      \\ | Total executed quantity or 0.0 |\\n| 38 | `OrderQty` | Yes | Order quantity\\\n      \\ |\\n| 5127 | `ConditionTriggerMethod` | No | Trigger for a stop order 1 = Mark\\\n      \\ Price, 2 = Last Price, 3 = corresponding Index Price  \\n| 40 | `OrdType` |\\\n      \\ Yes | 1 = Market, 2 = Limit, 4 = Stop Limit, S = Stop Market |\\n| 44 | `Price`\\\n      \\ | No | Price, maybe be absent for Market and Stop Market orders |\\n| 99 |\\\n      \\ `StopPx`| No | Stop price for stop limit orders | \\n| 103 | `OrdRejReason`\\\n      \\ | Yes |  |\\n| 58 | `Text` | No | Free format text string, usually exceptions\\\n      \\ |\\n| 207 | `SecurityExchange` | No | \\\"Deribit\\\" |\\n| 55 | `Symbol` | Yes\\\n      \\ | Instrument symbol |\\n| 854 | `QtyType` | No | Type of quantity specified\\\n      \\ in a quantity. Currently only 1 - `Contracts`.  |\\n| 231 | `ContractMultiplier`\\\n      \\ | No | Specifies a multiply factor to convert from contracts to total units\\\n      \\ |\\n| 6 | `AvgPx` | No | Average execution price or 0.0 if not executed yet\\\n      \\ or rejected |\\n| 210 | `MaxShow` | No | Maximum quantity (e.g. number of shares)\\\n      \\ within an order to be shown to other customers |\\n| 100012 | `DeribitAdvOrderType`\\\n      \\ | No | if it is present then it denotes advanced order for options: 0 = Implied\\\n      \\ Volatility Order, 1 = USD Order |\\n| 1188 | `Volatility` | No | volatility\\\n      \\ for Implied Volatility Orders (options orders with fixed volatility) |\\n|\\\n      \\ 839 | `PeggedPrice` | No | value of fixed USD price for USD Orders (options\\\n      \\ orders with fixed USD price) |\\n\\n \\n\\n\\n## Changes Log\\n\\n### Release 1.3.00\\n\\\n      \\n* MarketData (W) and (X): added OpenInterest (746)\\n* MarketData (W) and (X):\\\n      \\ added MarkPrice (100090)\\n* MarketData (W) and (X): added UnderlyingSymbol(311)\\n\\\n      * MarketData (W) and (X): added UnderlyingPx(810)\\n* MarketData (W) and (X):\\\n      \\ added ContractMultiplier(231)\\n* Position Report (AP): added ContractMultiplier(231)\\n\\\n      * Position Report (AP): added UnderlyingEndPrice(883)\\n* SecurityList (y): PutOrCall\\\n      \\ changed for compliance - put = 0, call = 1\\n* SecurityList (y): added InstrumentPricePrecision(2576)\\n\\\n      * SecurityList (y): added MinPriceIncrement(969)\\n* SecurityList (y): added\\\n      \\ UnderlyingSymbol(311)\\n* SecurityList (y): added MinTradeVol(562)\\n* User\\\n      \\ Request(BE): added parameter Currency(15), default is BTC\\n* Order Mass Cancel\\\n      \\ Request(q): added  parameter Currency(15)\\n* added notification for StopLimit\\\n      \\ and StopMarket Orders. StopMarket orders has OrdType=S\\n* Execution Report\\\n      \\ (8): added ContractMultiplier(231)\\n* Execution Report (8): added ConditionTriggerMethod(5127)\\\n      \\  \\n\"\n    subscriptions:\n      introduction: |\n        #Subscriptions\n\n        The [subscribe](#private-subscribe) method can be used to subscribe to one\n        or more *channels*. This section provides an overview of the channels and\n        the notifications that the subscriber will receive for each of those channels.\n\n        In most cases the channel name is constructed from a couple\n        of elements. This makes it possible to specify exactly which\n        information is required, and/or the frequency or aggregation level.\n        These elements are considered parameters for the subscription.\n\n        For example, when subscribing to the channel\n        \u003ccode\u003ebook.BTC-27JUL18.10.20.100ms\u003c/code\u003e, the element\n        \u003ccode\u003eBTC-27JUL18\u003c/code\u003e specifies that the name of the instrument\n        (see [naming](#naming)), \u003ccode\u003e10\u003c/code\u003e means that the results\n        should be grouped to that precision, etc.\n\n        As described in [notifications](#notifications), response data includes fields\n        required by JSON-RPC and part dedicated for subscription data.\n\n        \u003cp\u003e\n          \u003ctable\u003e\n              \u003cthead\u003e\n                  \u003ctr\u003e\n                      \u003cth\u003eName\u003c/th\u003e\n                      \u003cth\u003eType\u003c/th\u003e\n                      \u003cth\u003eDescription\u003c/th\u003e\n                  \u003c/tr\u003e\n              \u003c/thead\u003e\n              \u003ctbody\u003e\n                  \u003ctr\u003e\n                      \u003ctd\u003ejsonrpc\u003c/td\u003e\n                      \u003ctd\u003estring\u003c/td\u003e\n                      \u003ctd\u003eThe JSON-RPC version (2.0)\u003c/td\u003e\n                  \u003c/tr\u003e\n                  \u003ctr\u003e\n                      \u003ctd\u003emethod\u003c/td\u003e\n                      \u003ctd\u003estring\u003c/td\u003e\n                      \u003ctd\u003eHere it's always \u003ccode\u003esubscription\u003c/code\u003e\u003c/td\u003e\n                  \u003c/tr\u003e\n                  \u003ctr\u003e\n                      \u003ctd\u003eparams\u003c/td\u003e\n                      \u003ctd\u003e\u003cem\u003eobject\u003c/em\u003e\u003c/td\u003e\n                      \u003ctd\u003e\u003c/td\u003e\n                  \u003c/tr\u003e\n                  \u003ctr\u003e\n                      \u003ctd\u003e\u0026nbsp;\u0026nbsp;›\u0026nbsp;\u0026nbsp;channel\u003c/td\u003e\n                      \u003ctd\u003estring\u003c/td\u003e\n                      \u003ctd\u003eThe same channel as given when subscribing to notifications\u003c/td\u003e\n                  \u003c/tr\u003e\n                  \u003ctr\u003e\n                      \u003ctd\u003e\u0026nbsp;\u0026nbsp;›\u0026nbsp;\u0026nbsp;data\u003c/td\u003e\n                      \u003ctd\u003e\u003cem\u003eobject\u003c/em\u003e\u003c/td\u003e\n                      \u003ctd\u003eData specific for the channel\u003c/td\u003e\n                  \u003c/tr\u003e\n              \u003c/tbody\u003e\n          \u003c/table\u003e\n        \u003c/p\u003e\n\n        For all the following channel types only specific \u003ccode\u003edata\u003c/code\u003e part will be described.\n  x-subscriptions:\n    markprice.options.{index_name}:\n      notifications:\n        examples:\n          repeatedObject:\n            externalValue: examples/notifications/markprice.options.index_name.repeated.json\n        schema:\n          items:\n            type: object\n            properties:\n              mark_price:\n                type: number\n                description: The mark price for the instrument\n              instrument_name:\n                type: string\n                description: Unique instrument identifier\n                example: BTC-PERPETUAL\n              iv:\n                type: number\n                description: Value of the volatility of the underlying instrument\n          type: array\n      parameters:\n      - description: Index identifier, matches (base) cryptocurrency with quote currency\n        required: true\n        name: index_name\n        schema:\n          enum:\n          - btc_usd\n          - eth_usd\n          type: string\n          description: Index identifier, matches (base) cryptocurrency with quote\n            currency\n      summary: Provides information about options markprices.\n    estimated_expiration_price.{index_name}:\n      notifications:\n        examples:\n          repeatedObject:\n            externalValue: examples/notifications/estimated_expiration_price.index_name.repeated.json\n        schema:\n          required:\n          - seconds\n          - price\n          - is_estimated\n          properties:\n            seconds:\n              type: integer\n              description: Number of seconds till finalizing the nearest instrument\n            price:\n              type: number\n              description: Index current or estimated price\n              example: 8247.27\n            is_estimated:\n              type: boolean\n              description: When `true` then prize is given as an estimated value,\n                otherwise it's current index price\n      description: Returns calculated (estimated) ending price for given index.\n      parameters:\n      - description: Index identifier, matches (base) cryptocurrency with quote currency\n        required: true\n        name: index_name\n        schema:\n          enum:\n          - btc_usd\n          - eth_usd\n          type: string\n          description: Index identifier, matches (base) cryptocurrency with quote\n            currency\n    book.{instrument_name}.{interval}:\n      notifications:\n        examples:\n          repeatedObject:\n            externalValue: examples/notifications/book.instrument_name.interval.repeated.json\n          firstObject:\n            externalValue: examples/notifications/book.instrument_name.interval.first.json\n        schema:\n          required:\n          - instrument_name\n          - change_id\n          - asks\n          - bids\n          properties:\n            prev_change_id:\n              type: integer\n              description: id of the previous notification\n            type:\n              enum:\n              - snapshot\n              - change\n              type: string\n              description: 'Type of notification: `snapshot` for initial, `change`\n                for others'\n            instrument_name:\n              type: string\n              description: Unique instrument identifier\n              example: BTC-PERPETUAL\n            asks:\n              items:\n                type: full-change tuple\n                description: The first notification will contain the amounts for all\n                  price levels (a list of [\"new\", price, amount] tuples). All following\n                  notifications will contain a list of tuples with action, price level\n                  and new amount ([action, price, amount]). Action can be 'new', 'change'\n                  or 'delete'.\n              type: array\n            timestamp:\n              type: integer\n              example: 1536569522277\n              description: The timestamp of last change (seconds since the Unix epoch,\n                with millisecond precision)\n            change_id:\n              type: integer\n              description: id of the notification\n            bids:\n              items:\n                type: full-change tuple\n                description: (See 'asks' above.)\n              type: array\n      description: |-\n        \u003cp\u003eNotifies about changes to the order book for a certain instrument.\u003c/p\u003e\n        \u003cp\u003eThe first notification will contain the whole book (bid and ask amounts for all prices). After that there will only be information about changes to individual price levels.\u003c/p\u003e\n        \u003cp\u003eThe first notification will contain the amounts for all price levels (list of \u003ccode\u003e['new', price, amount]\u003c/code\u003e tuples). All following notifications will contain a list of tuples with action, price level and new amount (\u003ccode\u003e[action, price, amount]\u003c/code\u003e). Action can be either \u003ccode\u003enew\u003c/code\u003e, \u003ccode\u003echange\u003c/code\u003e or \u003ccode\u003edelete\u003c/code\u003e.\n        \u003cp\u003eEach notification will contain a \u003ccode\u003echange_id\u003c/code\u003e field, and each message except for the first one will contain a field \u003ccode\u003eprev_change_id\u003c/code\u003e. If \u003ccode\u003eprev_change_id\u003c/code\u003e is equal to the \u003ccode\u003echange_id\u003c/code\u003e of the previous message, this means that no messages have been missed.\u003c/p\u003e\n        \u003cp\u003eThe amount for perpetual and futures is in USD units, for options it is in corresponding cryptocurrency contracts, e.g., BTC or ETH.\u003c/p\u003e\n      parameters:\n      - description: Instrument name\n        required: true\n        in: query\n        name: instrument_name\n        schema:\n          type: string\n          description: Unique instrument identifier\n          example: BTC-PERPETUAL\n      - description: Frequency of notifications. Events will be aggregated over this\n          interval.\n        required: true\n        name: interval\n        schema:\n          enum:\n          - raw\n          - 100ms\n          type: string\n      summary: Notifies about changes to the order book for a certain instrument.\n    perpetual.{instrument_name}.{interval}:\n      notifications:\n        examples:\n          repeatedObject:\n            externalValue: examples/notifications/perpetual.instrument_name.interval.repeated.json\n        schema:\n          required:\n          - interest\n          properties:\n            interest:\n              type: number\n              description: Current interest\n      parameters:\n      - description: Instrument name\n        required: true\n        in: query\n        name: instrument_name\n        schema:\n          type: string\n          description: Unique instrument identifier\n          example: BTC-PERPETUAL\n      - description: Frequency of notifications. Events will be aggregated over this\n          interval. The value `raw` means no aggregation will be applied\n        required: true\n        name: interval\n        schema:\n          enum:\n          - 100ms\n          - raw\n          type: string\n      summary: Provide current interest rate - but only for **perpetual** instruments.\n        Other types won't generate any notification.\n    user.trades.{instrument_name}.{interval}:\n      notifications:\n        examples:\n          repeatedObject:\n            externalValue: examples/notifications/user.trades.instrument_name.interval.repeated.json\n        schema:\n          items:\n            required:\n            - trade_id\n            - trade_seq\n            - instrument_name\n            - timestamp\n            - order_id\n            - matching_id\n            - self_trade\n            - direction\n            - tick_direction\n            - index_price\n            - price\n            - amount\n            - fee\n            - fee_currency\n            - state\n            properties:\n              direction:\n                description: Trade direction of the taker\n                enum:\n                - buy\n                - sell\n                type: string\n              fee_currency:\n                enum:\n                - BTC\n                - ETH\n                type: string\n                description: Currency, i.e `\"BTC\"`, `\"ETH\"`\n              order_id:\n                type: string\n                description: Id of the user order (maker or taker), i.e. subscriber's\n                  order id that took part in the trade\n              timestamp:\n                type: integer\n                description: The timestamp of the trade\n                example: 1517329113791\n              price:\n                description: The price of the trade\n                type: number\n              iv:\n                type: number\n                description: Option implied volatility for the price (Option only)\n              trade_id:\n                type: string\n                description: Unique (per currency) trade identifier\n              fee:\n                type: number\n                description: User's fee in units of the specified `fee_currency`\n              order_type:\n                enum:\n                - limit\n                - market\n                - liquidation\n                type: string\n                description: 'Order type: `\"limit`, `\"market\"`, or `\"liquidation\"`'\n              trade_seq:\n                type: integer\n                description: The sequence number of the trade within instrument\n              self_trade:\n                type: boolean\n                description: '`true` if the trade is against own order. This can only\n                  happen when your account has self-trading enabled. Contact an administrator\n                  if you think you need that'\n              state:\n                enum:\n                - open\n                - filled\n                - rejected\n                - cancelled\n                - untriggered\n                - archive\n                type: string\n                description: order state, `\"open\"`, `\"filled\"`, `\"rejected\"`, `\"cancelled\"`,\n                  `\"untriggered\"` or `\"archive\"` (if order was archived)\n              label:\n                type: string\n                description: User defined label (presented only when previously set\n                  for order by user)\n              index_price:\n                type: number\n                description: Index Price at the moment of trade\n              amount:\n                type: number\n                description: Trade amount. For perpetual and futures - in USD units,\n                  for options it is amount of corresponding cryptocurrency contracts,\n                  e.g., BTC or ETH.\n              instrument_name:\n                type: string\n                description: Unique instrument identifier\n                example: BTC-PERPETUAL\n              tick_direction:\n                enum:\n                - 0\n                - 1\n                - 2\n                - 3\n                type: integer\n                description: Direction of the \"tick\" (`0` = Plus Tick, `1` = Zero-Plus\n                  Tick, `2` = Minus Tick, `3` = Zero-Minus Tick).\n              matching_id:\n                type: string\n                description: Always `null`, except for a self-trade which is possible\n                  only if self-trading is switched on for the account (in that case\n                  this will be id of the maker order of the subscriber)\n              liquidity:\n                enum:\n                - M\n                - T\n                type: string\n                description: 'Describes what was role of users order: `\"M\"` when it\n                  was maker order, `\"T\"` when it was taker order'\n          type: array\n      tags:\n      - private\n      parameters:\n      - description: Instrument name\n        required: true\n        in: query\n        name: instrument_name\n        schema:\n          type: string\n          description: Unique instrument identifier\n          example: BTC-PERPETUAL\n      - description: Frequency of notifications. Events will be aggregated over this\n          interval. The value `raw` means no aggregation will be applied\n        required: true\n        name: interval\n        schema:\n          enum:\n          - 100ms\n          - raw\n          type: string\n      summary: Get notifications about user's trades in an instrument.\n    ticker.{instrument_name}.{interval}:\n      notifications:\n        examples:\n          repeatedObject:\n            externalValue: examples/notifications/ticker.instrument_name.interval.repeated.json\n        schema:\n          required:\n          - instrument_name\n          - timestamp\n          - state\n          - stats\n          - open_interest\n          - index_price\n          - best_bid_price\n          - best_bid_amount\n          - best_add_price\n          - best_add_amount\n          - min_price\n          - max_price\n          - mark_price\n          - last_price\n          properties:\n            best_bid_amount:\n              type: number\n              description: It represents the requested order size of all best bids\n              nullable: true\n            best_ask_amount:\n              type: number\n              description: It represents the requested order size of all best asks\n              nullable: true\n            timestamp:\n              type: integer\n              example: 1536569522277\n              description: The timestamp (seconds since the Unix epoch, with millisecond\n                precision)\n            last_price:\n              type: number\n              description: The price for the last trade\n              nullable: true\n            delivery_price:\n              type: number\n              description: The settlement price for the instrument. Only when `state\n                = closed`\n            underlying_price:\n              type: number\n              description: Underlying price for implied volatility calculations (options\n                only)\n            ask_iv:\n              type: number\n              description: (Only for option) implied volatility for best ask\n            best_bid_price:\n              type: number\n              description: The current best bid price, `null` if there aren't any\n                bids\n              nullable: true\n            open_interest:\n              type: number\n              description: The total amount of outstanding contracts in the corresponding\n                amount units. For perpetual and futures the amount is in USD units,\n                for options it is amount of corresponding cryptocurrency contracts,\n                e.g., BTC or ETH.\n            bid_iv:\n              type: number\n              description: (Only for option) implied volatility for best bid\n            underlying_index:\n              type: number\n              description: Name of the underlying future, or `index_price` (options\n                only)\n            mark_price:\n              type: number\n              description: The mark price for the instrument\n            stats:\n              required:\n              - volume\n              - high\n              - low\n              type: object\n              properties:\n                volume:\n                  type: number\n                  description: volume during last 24h in base currency\n                high:\n                  type: number\n                  description: highest price during 24h\n                low:\n                  type: number\n                  description: lowest price during 24h\n            mark_iv:\n              type: number\n              description: (Only for option) implied volatility for mark price\n            greeks:\n              required:\n              - delta\n              - gamma\n              - rho\n              - theta\n              - vega\n              type: object\n              description: Only for options\n              properties:\n                theta:\n                  type: number\n                  description: (Only for option) The theta value for the option\n                vega:\n                  type: number\n                  description: (Only for option) The vega value for the option\n                gamma:\n                  type: number\n                  description: (Only for option) The gamma value for the option\n                rho:\n                  type: number\n                  description: (Only for option) The rho value for the option\n                delta:\n                  type: number\n                  description: (Only for option) The delta value for the option\n            interest_rate:\n              type: number\n              description: Interest rate used in implied volatility calculations (options\n                only)\n            settlement_price:\n              type: number\n              description: The settlement price for the instrument. Only when `state\n                = open`\n            funding_8h:\n              type: number\n              description: Funding 8h (perpetual only)\n            index_price:\n              type: number\n              description: Current index price\n              example: 8247.27\n            state:\n              enum:\n              - open\n              - closed\n              type: string\n              description: The state of the order book. Possible values are `open`\n                and `closed`.\n            min_price:\n              type: number\n              description: The minimum price for the future. Any sell orders you submit\n                lower than this price will be clamped to this minimum.\n            instrument_name:\n              type: string\n              description: Unique instrument identifier\n              example: BTC-PERPETUAL\n            best_ask_price:\n              type: number\n              description: The current best ask price, `null` if there aren't any\n                asks\n              nullable: true\n            max_price:\n              type: number\n              description: The maximum price for the future. Any buy orders you submit\n                higher than this price, will be clamped to this maximum.\n            current_funding:\n              type: number\n              description: Current funding (perpetual only)\n      parameters:\n      - description: Instrument name\n        required: true\n        in: query\n        name: instrument_name\n        schema:\n          type: string\n          description: Unique instrument identifier\n          example: BTC-PERPETUAL\n      - description: Frequency of notifications. Events will be aggregated over this\n          interval. The value `raw` means no aggregation will be applied\n        required: true\n        name: interval\n        schema:\n          enum:\n          - 100ms\n          - raw\n          type: string\n      summary: Key information about the instrument\n    user.orders.{kind}.{currency}.{interval}:\n      notifications:\n        examples:\n          repeatedObject:\n            externalValue: examples/notifications/user.orders.kind.currency.interval.repeated.json\n        schema:\n          items:\n            required:\n            - order_id\n            - order_state\n            - order_type\n            - time_in_force\n            - is_liquidation\n            - instrument\n            - creation_timestamp\n            - last_update_timestamp\n            - direction\n            - price\n            - label\n            - post_only\n            - api\n            - max_show\n            type: object\n            properties:\n              direction:\n                enum:\n                - buy\n                - sell\n                type: string\n                description: direction, `buy` or `sell`\n              reduce_only:\n                type: boolean\n                description: '`true` for reduce-only orders only'\n              triggered:\n                type: boolean\n                description: Whether the stop order has been triggered (Only for stop\n                  orders)\n              order_id:\n                type: string\n                description: Unique order identifier\n                example: ETH-100234\n              price:\n                type: number\n                description: Price in base currency\n              time_in_force:\n                enum:\n                - good_til_cancelled\n                - fill_or_kill\n                - immediate_or_cancel\n                type: string\n                description: 'Order time in force: `\"good_til_cancelled\"`, `\"fill_or_kill\"`,\n                  `\"immediate_or_cancel\"`'\n              api:\n                type: boolean\n                description: '`true` if created with API'\n              order_state:\n                enum:\n                - open\n                - filled\n                - rejected\n                - cancelled\n                - untriggered\n                - triggered\n                type: string\n                description: order state, `\"open\"`, `\"filled\"`, `\"rejected\"`, `\"cancelled\"`,\n                  `\"untriggered\"`\n              implv:\n                type: number\n                description: Implied volatility in percent. (Only if `advanced=\"implv\"`)\n              advanced:\n                enum:\n                - usd\n                - implv\n                type: string\n                description: |\n                  advanced type: `\"usd\"` or `\"implv\"` (Only for options; field is omitted if not applicable).\n              post_only:\n                type: boolean\n                description: '`true` for post-only orders only'\n              usd:\n                type: number\n                description: Option price in USD (Only if `advanced=\"usd\"`)\n              stop_price:\n                type: number\n                description: stop price (Only for future stop orders)\n              order_type:\n                enum:\n                - market\n                - limit\n                - stop_market\n                - stop_limit\n                type: string\n                description: order type, `\"limit\"`, `\"market\"`, `\"stop_limit\"`, `\"stop_market\"`\n              last_update_timestamp:\n                type: integer\n                example: 1536569522277\n                description: The timestamp (seconds since the Unix epoch, with millisecond\n                  precision)\n              original_order_type:\n                enum:\n                - market\n                type: string\n                description: Original order type. Optional field\n              max_show:\n                type: number\n                description: Maximum amount within an order to be shown to other traders,\n                  0 for invisible order.\n              profit_loss:\n                type: number\n                description: Profit and loss in base currency.\n              is_liquidation:\n                type: boolean\n                description: '`true` if order was automatically created during liquidation'\n              filled_amount:\n                type: number\n                description: Filled amount of the order. For perpetual and futures\n                  the filled_amount is in USD units, for options - in units or corresponding\n                  cryptocurrency contracts, e.g., BTC or ETH.\n              label:\n                type: string\n                description: user defined label (up to 32 characters)\n              commission:\n                type: number\n                description: Commission paid so far (in base currency)\n              amount:\n                type: number\n                description: It represents the requested order size. For perpetual\n                  and futures the amount is in USD units, for options it is amount\n                  of corresponding cryptocurrency contracts, e.g., BTC or ETH.\n              trigger:\n                enum:\n                - index_price\n                - mark_price\n                - last_price\n                type: string\n                description: 'Trigger type (Only for stop orders). Allowed values:\n                  `\"index_price\"`, `\"mark_price\"`, `\"last_price\"`.'\n              instrument_name:\n                type: string\n                description: Unique instrument identifier\n                example: BTC-PERPETUAL\n              creation_timestamp:\n                type: integer\n                example: 1536569522277\n                description: The timestamp (seconds since the Unix epoch, with millisecond\n                  precision)\n              average_price:\n                type: number\n                description: Average fill price of the order\n          type: array\n      tags:\n      - private\n      parameters:\n      - description: Instrument kind or `\"any\"` for all\n        required: true\n        in: query\n        name: kind\n        schema:\n          enum:\n          - future\n          - option\n          - any\n          type: string\n          description: Instrument kind, `\"future\"` or `\"option\"` or `\"any\"` if don't\n            care\n      - description: The currency symbol or `\"any\"` for all\n        required: true\n        in: query\n        name: currency\n        schema:\n          enum:\n          - BTC\n          - ETH\n          - any\n          type: string\n          description: Currency, i.e `\"BTC\"`, `\"ETH\"` or `\"any\"` if don't care\n      - description: Frequency of notifications. Events will be aggregated over this\n          interval. The value `raw` means no aggregation will be applied\n        required: true\n        name: interval\n        schema:\n          enum:\n          - 100ms\n          - raw\n          type: string\n      summary: Get notifications about changes in user's orders in instruments of\n        given kind and currency.\n    deribit_price_ranking.{index_name}:\n      notifications:\n        examples:\n          repeatedObject:\n            externalValue: examples/notifications/deribit_price_ranking.index_name.repeated.json\n        schema:\n          items:\n            properties:\n              timestamp:\n                type: integer\n                description: The timestamp of the last update from stock exchange\n                example: 1536569522277\n              price:\n                type: number\n                description: Stock exchange index price\n              identifier:\n                type: string\n                description: Stock exchange identifier\n                example: bitstamp\n              enabled:\n                type: boolean\n                description: Stock exchange status\n              weight:\n                type: number\n                description: The weight of the ranking given in percent\n          type: array\n      description: Provides information about current value (price) for stock exchanges\n        used to calculate Deribit Index\n      parameters:\n      - description: Index identifier, matches (base) cryptocurrency with quote currency\n        required: true\n        name: index_name\n        schema:\n          enum:\n          - btc_usd\n          - eth_usd\n          type: string\n          description: Index identifier, matches (base) cryptocurrency with quote\n            currency\n    book.{instrument_name}.{group}.{depth}.{interval}:\n      notifications:\n        examples:\n          repeatedObject:\n            externalValue: examples/notifications/book.instrument_name.group.depth.interval.repeated.json\n        schema:\n          required:\n          - instrument_name\n          - change_id\n          - asks\n          - bids\n          properties:\n            change_id:\n              type: integer\n              description: id of the notification\n            instrument_name:\n              type: string\n              description: Unique instrument identifier\n              example: BTC-PERPETUAL\n            bids:\n              items:\n                type: price-amount pair\n                description: List of bids\n              type: array\n            asks:\n              items:\n                type: price-amount pair\n                description: List of asks\n              type: array\n            timestamp:\n              type: integer\n              example: 1536569522277\n              description: The timestamp of last change (seconds since the Unix epoch,\n                with millisecond precision)\n      description: |-\n        \u003cp\u003eNotifies about changes to the order book for a certain instrument.\u003c/p\u003e\n        Notifications are sent once per specified interval, with prices grouped by (rounded to) the specified group, showing the complete order book to the specified depth (number of price levels).\u003c/p\u003e\n        \u003cp\u003eThe 'asks' and the 'bids' elements in the response are both a 'list of lists'. Each element in the outer list is a list of exactly two elements: price and amount.\u003c/p\u003e\n        \u003cp\u003e*price* is a price level (USD per BTC, rounded as specified by the 'group' parameter for the susbcription).\u003c/p\u003e\n        \u003cp\u003e*amount* indicates the amount of all orders at price level. For perpetual and futures the amount is in USD units, for options it is amount of corresponding cryptocurrency contracts, e.g., BTC or ETH.\u003c/p\u003e\n      parameters:\n      - description: Instrument name\n        required: true\n        in: query\n        name: instrument_name\n        schema:\n          type: string\n          description: Unique instrument identifier\n          example: BTC-PERPETUAL\n      - required: true\n        summary: Group prices (by rounding). Use 'none' for no grouping.\n        description: Group prices (by rounding). Use \u003ccode\u003enone\u003c/code\u003e for no grouping.\u003cbr\u003e\n          For ETH cryptocurrency, real ```group``` is divided by 100.0, e.g. given\n          value ```5``` means using ```0.05```\u003cbr\u003e\u003cbr\u003e Allowed values for BTC - ```none```,\n          ```1```, ```2```, ```5```, ```10```\u003cbr\u003e Allowed values for ETH - ```none```,\n          ```5```, ```25```, ```100```, ```250```\n        name: group\n        schema:\n          enum:\n          - none\n          - 1\n          - 2\n          - 5\n          - 10\n          - 25\n          - 100\n          - 250\n          type: string\n          example: 10\n      - description: Number of price levels to be included.\n        required: true\n        name: depth\n        schema:\n          enum:\n          - 1\n          - 10\n          - 20\n          type: integer\n          example: 20\n      - description: Frequency of notifications. Events will be aggregated over this\n          interval.\n        required: true\n        name: interval\n        schema:\n          enum:\n          - 100ms\n          type: string\n      summary: Aggregated notifications about changes to the order book for a certain\n        instrument.\n    user.orders.{instrument_name}.{interval}:\n      notifications:\n        examples:\n          repeatedObject:\n            externalValue: examples/notifications/user.orders.instrument_name.interval.repeated.json\n        schema:\n          items:\n            required:\n            - order_id\n            - order_state\n            - order_type\n            - time_in_force\n            - is_liquidation\n            - instrument\n            - creation_timestamp\n            - last_update_timestamp\n            - direction\n            - price\n            - label\n            - post_only\n            - api\n            - max_show\n            type: object\n            properties:\n              direction:\n                enum:\n                - buy\n                - sell\n                type: string\n                description: direction, `buy` or `sell`\n              reduce_only:\n                type: boolean\n                description: '`true` for reduce-only orders only'\n              triggered:\n                type: boolean\n                description: Whether the stop order has been triggered (Only for stop\n                  orders)\n              order_id:\n                type: string\n                description: Unique order identifier\n                example: ETH-100234\n              price:\n                type: number\n                description: Price in base currency\n              time_in_force:\n                enum:\n                - good_til_cancelled\n                - fill_or_kill\n                - immediate_or_cancel\n                type: string\n                description: 'Order time in force: `\"good_til_cancelled\"`, `\"fill_or_kill\"`,\n                  `\"immediate_or_cancel\"`'\n              api:\n                type: boolean\n                description: '`true` if created with API'\n              order_state:\n                enum:\n                - open\n                - filled\n                - rejected\n                - cancelled\n                - untriggered\n                - triggered\n                type: string\n                description: order state, `\"open\"`, `\"filled\"`, `\"rejected\"`, `\"cancelled\"`,\n                  `\"untriggered\"`\n              implv:\n                type: number\n                description: Implied volatility in percent. (Only if `advanced=\"implv\"`)\n              advanced:\n                enum:\n                - usd\n                - implv\n                type: string\n                description: |\n                  advanced type: `\"usd\"` or `\"implv\"` (Only for options; field is omitted if not applicable).\n              post_only:\n                type: boolean\n                description: '`true` for post-only orders only'\n              usd:\n                type: number\n                description: Option price in USD (Only if `advanced=\"usd\"`)\n              stop_price:\n                type: number\n                description: stop price (Only for future stop orders)\n              order_type:\n                enum:\n                - market\n                - limit\n                - stop_market\n                - stop_limit\n                type: string\n                description: order type, `\"limit\"`, `\"market\"`, `\"stop_limit\"`, `\"stop_market\"`\n              last_update_timestamp:\n                type: integer\n                example: 1536569522277\n                description: The timestamp (seconds since the Unix epoch, with millisecond\n                  precision)\n              original_order_type:\n                enum:\n                - market\n                type: string\n                description: Original order type. Optional field\n              max_show:\n                type: number\n                description: Maximum amount within an order to be shown to other traders,\n                  0 for invisible order.\n              profit_loss:\n                type: number\n                description: Profit and loss in base currency.\n              is_liquidation:\n                type: boolean\n                description: '`true` if order was automatically created during liquidation'\n              filled_amount:\n                type: number\n                description: Filled amount of the order. For perpetual and futures\n                  the filled_amount is in USD units, for options - in units or corresponding\n                  cryptocurrency contracts, e.g., BTC or ETH.\n              label:\n                type: string\n                description: user defined label (up to 32 characters)\n              commission:\n                type: number\n                description: Commission paid so far (in base currency)\n              amount:\n                type: number\n                description: It represents the requested order size. For perpetual\n                  and futures the amount is in USD units, for options it is amount\n                  of corresponding cryptocurrency contracts, e.g., BTC or ETH.\n              trigger:\n                enum:\n                - index_price\n                - mark_price\n                - last_price\n                type: string\n                description: 'Trigger type (Only for stop orders). Allowed values:\n                  `\"index_price\"`, `\"mark_price\"`, `\"last_price\"`.'\n              instrument_name:\n                type: string\n                description: Unique instrument identifier\n                example: BTC-PERPETUAL\n              creation_timestamp:\n                type: integer\n                example: 1536569522277\n                description: The timestamp (seconds since the Unix epoch, with millisecond\n                  precision)\n              average_price:\n                type: number\n                description: Average fill price of the order\n          type: array\n      tags:\n      - private\n      parameters:\n      - description: Instrument name\n        required: true\n        in: query\n        name: instrument_name\n        schema:\n          type: string\n          description: Unique instrument identifier\n          example: BTC-PERPETUAL\n      - description: Frequency of notifications. Events will be aggregated over this\n          interval. The value `raw` means no aggregation will be applied\n        required: true\n        name: interval\n        schema:\n          enum:\n          - 100ms\n          - raw\n          type: string\n      summary: Get notifications about changes in user's orders for given instrument.\n    trades.{instrument_name}.{interval}:\n      notifications:\n        examples:\n          repeatedObject:\n            externalValue: examples/notifications/trades.instrument_name.interval.repeated.json\n        schema:\n          required:\n          - trade_id\n          - instrument_name\n          - timestamp\n          - trade_seq\n          - direction\n          - tick_direction\n          - index_price\n          - price\n          - amount\n          properties:\n            direction:\n              description: Trade direction of the taker\n              enum:\n              - buy\n              - sell\n              type: string\n            tick_direction:\n              enum:\n              - 0\n              - 1\n              - 2\n              - 3\n              type: integer\n              description: Direction of the \"tick\" (`0` = Plus Tick, `1` = Zero-Plus\n                Tick, `2` = Minus Tick, `3` = Zero-Minus Tick).\n            timestamp:\n              type: integer\n              description: The timestamp of the trade\n              example: 1517329113791\n            price:\n              description: The price of the trade\n              type: number\n            trade_seq:\n              type: integer\n              description: The sequence number of the trade within instrument\n            trade_id:\n              type: string\n              description: Unique (per currency) trade identifier\n            iv:\n              type: number\n              description: Option implied volatility for the price (Option only)\n            index_price:\n              type: number\n              description: Index Price at the moment of trade\n            amount:\n              type: number\n              description: Trade amount. For perpetual and futures - in USD units,\n                for options it is amount of corresponding cryptocurrency contracts,\n                e.g., BTC or ETH.\n            instrument_name:\n              type: string\n              description: Unique instrument identifier\n              example: BTC-PERPETUAL\n      parameters:\n      - description: Instrument name\n        required: true\n        in: query\n        name: instrument_name\n        schema:\n          type: string\n          description: Unique instrument identifier\n          example: BTC-PERPETUAL\n      - description: Frequency of notifications. Events will be aggregated over this\n          interval. The value `raw` means no aggregation will be applied\n        required: true\n        name: interval\n        schema:\n          enum:\n          - 100ms\n          - raw\n          type: string\n      summary: Get notifications about trades for an instrument.\n    quote.{instrument_name}:\n      notifications:\n        examples:\n          repeatedObject:\n            externalValue: examples/notifications/quote.instrument_name.repeated.json\n        schema:\n          required:\n          - timestamp\n          - instrument_name\n          - best_bid_amount\n          - best_bid_price\n          - best_add_amount\n          - best_add_price\n          properties:\n            best_bid_amount:\n              type: number\n              description: It represents the requested order size of all best bids\n              nullable: true\n            best_ask_price:\n              type: number\n              description: The current best ask price, `null` if there aren't any\n                asks\n              nullable: true\n            best_ask_amount:\n              type: number\n              description: It represents the requested order size of all best asks\n              nullable: true\n            timestamp:\n              type: integer\n              example: 1536569522277\n              description: The timestamp (seconds since the Unix epoch, with millisecond\n                precision)\n            best_bid_price:\n              type: number\n              description: The current best bid price, `null` if there aren't any\n                bids\n              nullable: true\n            instrument_name:\n              type: string\n              description: Unique instrument identifier\n              example: BTC-PERPETUAL\n      parameters:\n      - description: Instrument name\n        required: true\n        in: query\n        name: instrument_name\n        schema:\n          type: string\n          description: Unique instrument identifier\n          example: BTC-PERPETUAL\n      summary: Best bid/ask price and size.\n    user.portfolio.{currency}:\n      notifications:\n        examples:\n          repeatedObject:\n            externalValue: examples/notifications/user.portfolio.currency.repeated.json\n        schema:\n          required:\n          - currency\n          - equity\n          - maintenance_margin\n          - initial_margin\n          - available_funds\n          - available_withdrawal_funds\n          - balance\n          - margin_balance\n          - session_upl\n          - session_rpl\n          - total_pl\n          - options_pl\n          - options_session_upl\n          - options_session_rpl\n          - options_delta\n          - options_gamma\n          - options_vega\n          - options_theta\n          - futures_pl\n          - futures_session_upl\n          - futures_session_rpl\n          - delta_total\n          - session_funding\n          - portfolio_margining_enabled\n          properties:\n            delta_total:\n              type: number\n              description: The sum of position deltas\n              example: 0.1334\n            session_rpl:\n              type: number\n              description: Session realized profit and loss\n              example: 0.1\n            options_gamma:\n              type: number\n              description: Options summary gamma\n              example: 0\n            options_vega:\n              type: number\n              description: Options summary vega\n              example: 0\n            futures_session_rpl:\n              type: number\n              description: Futures session realized profit and Loss\n              example: 0\n            options_theta:\n              type: number\n              description: Options summary theta\n              example: 0\n            session_upl:\n              type: number\n              description: Session unrealized profit and loss\n              example: 0.846863\n            options_pl:\n              type: number\n              description: Options profit and Loss\n              example: 0\n            currency:\n              type: string\n              description: The selected currency\n              example: ETH\n            portfolio_margining_enabled:\n              type: boolean\n              example: true\n              description: When `true` portfolio margining is enabled for user\n            margin_balance:\n              type: number\n              description: The account's margin balance\n              example: 2.25\n            futures_session_upl:\n              type: number\n              description: Futures session unrealized profit and Loss\n              example: 0\n            total_pl:\n              type: number\n              description: Profit and loss\n              example: 0.02032221\n            projected_maintenance_margin:\n              type: number\n              description: Projected maintenance margin (for portfolio margining users)\n              example: 1\n            initial_margin:\n              type: number\n              description: The account's initial margin\n              example: 0.379882\n            futures_pl:\n              type: number\n              description: Futures profit and Loss\n              example: 0\n            maintenance_margin:\n              type: number\n              description: The maintenance margin.\n              example: 0.1334519\n            available_withdrawal_funds:\n              type: number\n              description: The account's available to withdrawal funds\n              example: 2.26\n            options_session_rpl:\n              type: number\n              description: Options session realized profit and Loss\n              example: 0\n            options_session_upl:\n              type: number\n              description: Options session unrealized profit and Loss\n              example: 0\n            session_funding:\n              type: number\n              description: Session funding\n              example: 0\n            available_funds:\n              type: number\n              description: The account's available funds\n              example: 2.2638913\n            equity:\n              type: number\n              description: The account's current equity\n              example: 2.6437733\n            projected_initial_margin:\n              type: number\n              description: Projected initial margin (for portfolio margining users)\n              example: 1\n            balance:\n              type: number\n              description: The account's balance\n              example: 3.4906363\n            options_delta:\n              type: number\n              description: Options summary delta\n              example: 0\n      description: Provides information about current user portfolio\n      parameters:\n      - description: The currency symbol\n        required: true\n        in: query\n        name: currency\n        schema:\n          enum:\n          - BTC\n          - ETH\n          type: string\n          description: Currency, i.e `\"BTC\"`, `\"ETH\"`\n      tags:\n      - private\n    user.trades.{kind}.{currency}.{interval}:\n      notifications:\n        examples:\n          repeatedObject:\n            externalValue: examples/notifications/user.trades.kind.currency.interval.repeated.json\n        schema:\n          items:\n            required:\n            - trade_id\n            - trade_seq\n            - instrument_name\n            - timestamp\n            - order_id\n            - matching_id\n            - self_trade\n            - direction\n            - tick_direction\n            - index_price\n            - price\n            - amount\n            - fee\n            - fee_currency\n            - state\n            properties:\n              direction:\n                description: Trade direction of the taker\n                enum:\n                - buy\n                - sell\n                type: string\n              fee_currency:\n                enum:\n                - BTC\n                - ETH\n                type: string\n                description: Currency, i.e `\"BTC\"`, `\"ETH\"`\n              order_id:\n                type: string\n                description: Id of the user order (maker or taker), i.e. subscriber's\n                  order id that took part in the trade\n              timestamp:\n                type: integer\n                description: The timestamp of the trade\n                example: 1517329113791\n              price:\n                description: The price of the trade\n                type: number\n              iv:\n                type: number\n                description: Option implied volatility for the price (Option only)\n              trade_id:\n                type: string\n                description: Unique (per currency) trade identifier\n              fee:\n                type: number\n                description: User's fee in units of the specified `fee_currency`\n              order_type:\n                enum:\n                - limit\n                - market\n                - liquidation\n                type: string\n                description: 'Order type: `\"limit`, `\"market\"`, or `\"liquidation\"`'\n              trade_seq:\n                type: integer\n                description: The sequence number of the trade within instrument\n              self_trade:\n                type: boolean\n                description: '`true` if the trade is against own order. This can only\n                  happen when your account has self-trading enabled. Contact an administrator\n                  if you think you need that'\n              state:\n                enum:\n                - open\n                - filled\n                - rejected\n                - cancelled\n                - untriggered\n                - archive\n                type: string\n                description: order state, `\"open\"`, `\"filled\"`, `\"rejected\"`, `\"cancelled\"`,\n                  `\"untriggered\"` or `\"archive\"` (if order was archived)\n              label:\n                type: string\n                description: User defined label (presented only when previously set\n                  for order by user)\n              index_price:\n                type: number\n                description: Index Price at the moment of trade\n              amount:\n                type: number\n                description: Trade amount. For perpetual and futures - in USD units,\n                  for options it is amount of corresponding cryptocurrency contracts,\n                  e.g., BTC or ETH.\n              instrument_name:\n                type: string\n                description: Unique instrument identifier\n                example: BTC-PERPETUAL\n              tick_direction:\n                enum:\n                - 0\n                - 1\n                - 2\n                - 3\n                type: integer\n                description: Direction of the \"tick\" (`0` = Plus Tick, `1` = Zero-Plus\n                  Tick, `2` = Minus Tick, `3` = Zero-Minus Tick).\n              matching_id:\n                type: string\n                description: Always `null`, except for a self-trade which is possible\n                  only if self-trading is switched on for the account (in that case\n                  this will be id of the maker order of the subscriber)\n              liquidity:\n                enum:\n                - M\n                - T\n                type: string\n                description: 'Describes what was role of users order: `\"M\"` when it\n                  was maker order, `\"T\"` when it was taker order'\n          type: array\n      tags:\n      - private\n      parameters:\n      - description: Instrument kind or `\"any\"` for all\n        required: true\n        in: query\n        name: kind\n        schema:\n          enum:\n          - future\n          - option\n          - any\n          type: string\n          description: Instrument kind, `\"future\"` or `\"option\"` or `\"any\"` if don't\n            care\n      - description: The currency symbol or `\"any\"` for all\n        required: true\n        in: query\n        name: currency\n        schema:\n          enum:\n          - BTC\n          - ETH\n          - any\n          type: string\n          description: Currency, i.e `\"BTC\"`, `\"ETH\"` or `\"any\"` if don't care\n      - description: Frequency of notifications. Events will be aggregated over this\n          interval. The value `raw` means no aggregation will be applied\n        required: true\n        name: interval\n        schema:\n          enum:\n          - 100ms\n          - raw\n          type: string\n      summary: Get notifications about user's trades in any instrument of given kind\n        in given currency.\n    announcements:\n      notifications:\n        schema:\n          required:\n          - title\n          - important\n          - id\n          - date\n          - body\n          properties:\n            body:\n              type: string\n            date:\n              type: integer\n              description: milliseconds since the Unix epoch\n              example: 1532593832021\n            important:\n              type: boolean\n            title:\n              type: string\n            action:\n              type: string\n            number:\n              type: integer\n            id:\n              type: integer\n      summary: General announcements concerning the Deribit platform.\n      tags:\n      - private\n    deribit_price_index.{index_name}:\n      notifications:\n        examples:\n          repeatedObject:\n            externalValue: examples/notifications/deribit_price_index.index_name.repeated.json\n        schema:\n          required:\n          - timestamp\n          - price\n          - index_name\n          properties:\n            timestamp:\n              type: integer\n              example: 1536569522277\n              description: The timestamp (seconds since the Unix epoch, with millisecond\n                precision)\n            price:\n              type: number\n              description: Current index price\n              example: 8247.27\n            index_name:\n              enum:\n              - btc_usd\n              - eth_usd\n              type: string\n              description: Index identifier, matches (base) cryptocurrency with quote\n                currency\n      description: Provides information about current value (price) for Deribit Index\n      parameters:\n      - description: Index identifier, matches (base) cryptocurrency with quote currency\n        required: true\n        name: index_name\n        schema:\n          enum:\n          - btc_usd\n          - eth_usd\n          type: string\n          description: Index identifier, matches (base) cryptocurrency with quote\n            currency\n"
		}
	},
	"Error": "parse: parse spec: parse operations: paths: /public/get_order_book: get: responses: 200: content: application/json: schema: parse schema: allOf: [1]: parse schema: property \"result\": parse schema: property \"asks\": parse schema: item: parse schema: unexpected schema type: \"price-amount pair\""
}