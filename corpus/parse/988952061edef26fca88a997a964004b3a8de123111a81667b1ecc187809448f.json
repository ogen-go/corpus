{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/dkackman/chia-api"
		},
		"file": {
			"name": "full_node.yaml",
			"size": 0,
			"path": "src/full_node.yaml",
			"byteSize": 27418,
			"content": "openapi: 3.0.3\ninfo:\n  description: \u003e-\n    The Chia node and services come with a JSON RPC API server that allows you to access information and control the services. \n    These are accessible via HTTPS, WebSockets, or via client SDKs. The ports can be configured in `~/.chia/mainnet/config/config.yaml`. \n    The RPC ports should not be exposed to the internet. TLS certificates are used to secure the communication \n    [using mutualTLS](https://github.com/dkackman/chia-api/wiki/Mutual-TLS).\n\n    The full node uses port 8555 by default.  \n  version: 1.3.4\n  title: Chia RPC\n  termsOfService: https://www.chia.net/assets/legal/Guidelines-for-Using-Chia-Network.pdf\n  contact:\n    name: Chia Network\n    url: https://www.chia.net/\n    email: hello@chia.net\n  license:\n    name: Apache 2.0\n    url: http://www.apache.org/licenses/LICENSE-2.0.html\nservers:\n  - url: https://localhost:8555\n    description: Full Node RPC\nsecurity:\n  - bearerAuth: []\ncomponents:\n  requestBodies:\n    empty:\n      $ref: \"./requestBodies/empty.yaml#/empty\"\n    header_hash:\n      required: true\n      description: the block's header_hash\n      content:\n        application/json:\n          schema:\n            type: object\n            required:\n              - header_hash\n            properties:\n              header_hash:\n                type: string\n                format: hex\n    start_end:\n      required: true\n      description: Start and end heights\n      content:\n        application/json:\n          schema:\n            type: object\n            required:\n              - start\n              - end\n            properties:\n              start:\n                type: integer\n                format: uint32\n              end:\n                type: integer\n                format: uint32\n  responses:\n    empty:\n      $ref: \"./responses/empty.yaml#/empty\"\n    coin_records:\n      description: OK\n      content:\n        application/json:\n          schema:\n            type: object\n            properties:\n              coin_records:\n                type: array\n                items:\n                  $ref: \"#/components/schemas/coin_record\"\n            allOf:\n              - $ref: \"#/components/schemas/apiResponse\"\n  schemas:\n    proof_of_space:\n      $ref: \"./schemas/proof_of_space.yaml#/proof_of_space\"\n    blockchain_state:\n      $ref: \"./schemas/blockchain_state.yaml#/blockchain_state\"\n    block_record:\n      $ref: \"./schemas/block_record.yaml#/block_record\"\n    coin:\n      $ref: \"./schemas/coin.yaml#/coin\"\n    coin_record:\n      $ref: \"./schemas/coin_record.yaml#/coin_record\"\n    coin_search_options:\n      type: object\n      properties:\n        start_height:\n          type: integer\n          format: uint32\n        end_height:\n          type: integer\n          format: uint32\n        include_spent_coins:\n          type: boolean\n    coin_spend:\n      $ref: \"./schemas/coin_spend.yaml#/coin_spend\"\n    connection_info:\n      $ref: \"./schemas/connection_info.yaml#/connection_info\"\n    foliage:\n      $ref: \"./schemas/foliage.yaml#/foliage\"\n    foliage_transaction_block:\n      $ref: \"./schemas/foliage_transaction_block.yaml#/foliage_transaction_block\"\n    full_block:\n      $ref: \"./schemas/full_block.yaml#/full_block\"\n    end_of_sub_slot_bundle:\n      $ref: \"./schemas/end_of_sub_slot_bundle.yaml#/end_of_sub_slot_bundle\"\n    mempool_item:\n      $ref: \"./schemas/mempool_item.yaml#/mempool_item\"\n    network_info:\n      $ref: \"./schemas/network_info.yaml#/network_info\"\n    node_type:\n      $ref: \"./schemas/node_type.yaml#/node_type\"\n    signage_point:\n      $ref: \"./schemas/signage_point.yaml#/signage_point\"\n    spend_bundle:\n      $ref: \"./schemas/spend_bundle.yaml#/spend_bundle\"\n    unfinished_header_block:\n      $ref: \"./schemas/unfinished_header_block.yaml#/unfinished_header_block\"\n    apiResponse:\n      $ref: \"./schemas/apiResponse.yaml#/apiResponse\"\n    vdf_info:\n      $ref: \"./schemas/vdf_info.yaml#/vdf_info\"\n    vdf_proof:\n      $ref: \"./schemas/vdf_proof.yaml#/vdf_proof\"\n  securitySchemes:\n    bearerAuth:\n      $ref: \"./securitySchemes/bearerAuth.yaml#/bearerAuth\"\ntags:\n  - name: Blocks\n    description: Methods for managing blocks.\n  - name: Coins\n    description: Methods for managing coins.\n  - name: Connections\n    description: Methods for managing connections.\n  - name: Full Node\n    description: The full node RPC API is exposed, by default, on port 8555. This port must not be exposed publicly for security concerns.\n  - name: Mempool\n    description: Get information about the mempool.\npaths:\n  /get_block_count_metrics:\n    post:\n      tags:\n        - Blocks\n      summary: Retrieves aggregate information about blocks.\n      description: Retrieves aggregate information about blocks.\n      operationId: get_block_count_metrics\n      requestBody:\n        $ref: \"#/components/requestBodies/empty\"\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                allOf:\n                  - type: object\n                    properties:\n                      metrics:\n                        type: object\n                        properties:\n                          compact_blocks:\n                            type: integer\n                          uncompact_blocks:\n                            type: integer\n                          hint_count:\n                            type: integer\n                  - $ref: \"#/components/schemas/apiResponse\"\n  /stop_node:\n    post:\n      tags:\n        - Connections\n      summary: Stop the node.\n      description: Stop the node.\n      operationId: stop_node\n      requestBody:\n        $ref: \"#/components/requestBodies/empty\"\n      responses:\n        '200':\n          $ref: \"#/components/responses/empty\"\n  /open_connection:\n    post:\n      tags:\n        - Connections\n      summary: Add a connection to another node.\n      description: Add a connection to another node.\n      operationId: open_connection\n      requestBody:\n        required: true\n        description: the address of the connection\n        content:\n          application/json:\n            schema:\n              type: object\n              required:\n                - ip\n                - port\n              properties:\n                ip:\n                  type: string\n                  format: ipaddress\n                port:\n                  type: integer\n      responses:\n        '200':\n          $ref: \"#/components/responses/empty\"\n  /close_connection:\n    post:\n      tags:\n        - Connections\n      summary: Removes a connection.\n      description: Removes a connection.\n      operationId: close_connection\n      requestBody:\n        required: true\n        description: the node id of the connection\n        content:\n          application/json:\n            schema:\n              type: object\n              required:\n                - node_id\n              properties:\n                node_id:\n                  type: string\n      responses:\n        '200':\n          $ref: \"#/components/responses/empty\"\n  /get_connections:\n    post:\n      tags:\n        - Connections\n      summary: Retrieve the list of connections.\n      description: Retrieve the list of connections.\n      operationId: get_connections\n      requestBody:\n        $ref: \"#/components/requestBodies/empty\"\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                allOf:\n                  - type: object\n                    properties:\n                      connections:\n                        type: array\n                        items:\n                          $ref: \"#/components/schemas/connection_info\"\n                  - $ref: \"#/components/schemas/apiResponse\"\n  /get_block_record:\n    post:\n      tags:\n        - Blocks\n      summary: Retrieves a block record by header hash.\n      description: Retrieves a block record by header hash.\n      operationId: get_block_record\n      requestBody:\n        $ref: \"#/components/requestBodies/header_hash\"\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                allOf:\n                  - type: object\n                    properties:\n                      block_record:\n                        $ref: \"#/components/schemas/block_record\"\n                  - $ref: \"#/components/schemas/apiResponse\"\n  /get_block_records:\n    post:\n      tags:\n        - Blocks\n      summary: Retrieves block records in a range.\n      description: Retrieves block records in a range\n      operationId: get_block_records\n      requestBody:\n        $ref: \"#/components/requestBodies/start_end\"\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                allOf:\n                  - type: object\n                    properties:\n                      block_records:\n                        type: array\n                        items:\n                          $ref: \"#/components/schemas/block_record\"\n                  - $ref: \"#/components/schemas/apiResponse\"\n  /get_block_record_by_height:\n    post:\n      tags:\n        - Blocks\n      summary: Retrieves a block record by height.\n      description: Retrieves a block record by height (assuming the height \u003c= peak height). Note that not all blocks will have all fields set here (depending on transaction block, finishing sub epoch, etc).\n      operationId: get_block_record_by_height\n      requestBody:\n        required: true\n        description: the block height\n        content:\n          application/json:\n            schema:\n              type: object\n              required:\n                - height\n              properties:\n                height:\n                  type: integer\n                  format: uint32\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                allOf:\n                  - type: object\n                    properties:\n                      block_record:\n                        $ref: \"#/components/schemas/block_record\"\n                  - $ref: \"#/components/schemas/apiResponse\"\n  /get_block:\n    post:\n      tags:\n        - Blocks\n      summary: Retrieves a block by header hash.\n      description: Retrieves a block by header hash.\n      operationId: get_block\n      requestBody:\n        $ref: \"#/components/requestBodies/header_hash\"\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                allOf:\n                  - type: object\n                    properties:\n                      block:\n                        $ref: \"#/components/schemas/full_block\"\n                  - $ref: \"#/components/schemas/apiResponse\"\n  /get_blocks:\n    post:\n      tags:\n        - Blocks\n      summary: Get the blocks between a start and end height.\n      description: Get the blocks between a start and end height\n      operationId: get_blocks\n      requestBody:\n        $ref: \"#/components/requestBodies/start_end\"\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                allOf:\n                  - type: object\n                    properties:\n                      blocks:\n                        type: array\n                        items:\n                          $ref: \"#/components/schemas/full_block\"\n                  - $ref: \"#/components/schemas/apiResponse\"\n  /get_unfinished_block_headers:\n    post:\n      tags:\n        - Blocks\n      summary: Retrieves unfinished block headers.\n      description: Retrieves unfinished block headers.\n      operationId: get_unfinished_block_headers\n      requestBody:\n        $ref: \"#/components/requestBodies/empty\"\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                allOf:\n                  - type: object\n                    properties:\n                      headers:\n                        type: array\n                        items:\n                          $ref: \"#/components/schemas/unfinished_header_block\"\n                  - $ref: \"#/components/schemas/apiResponse\"\n  /get_additions_and_removals:\n    post:\n      tags:\n        - Blocks\n      summary: Retrieves the additions and removals for a certain block.\n      description: Retrieves the additions and removals (state transitions) for a certain block. Returns coin records for each addition and removal.\n      operationId: get_additions_and_removals\n      requestBody:\n        $ref: \"#/components/requestBodies/header_hash\"\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                allOf:\n                  - type: object\n                    properties:\n                      additions:\n                        type: array\n                        items:\n                          $ref: \"#/components/schemas/coin_record\"\n                      removals:\n                        type: array\n                        items:\n                          $ref: \"#/components/schemas/coin_record\"\n                  - $ref: \"#/components/schemas/apiResponse\"\n  /get_recent_signage_point_or_eos:\n    post:\n      tags:\n        - Blocks\n      summary: Retrieves a recent signage point or end of slot.\n      description: Retrieves a recent signage point or end of slot.\n      operationId: get_recent_signage_point_or_eos\n      requestBody:\n        required: true\n        description: The signage point hash or challenge hash. If both are present sp_hash takes precedence.\n        content:\n          application/json:\n            schema:\n              oneOf:\n                - type: object\n                  properties:\n                    sp_hash:\n                      type: string\n                      format: hex\n                - type: object\n                  properties:\n                    challenge_hash:\n                      type: string\n                      format: hex\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                oneOf:\n                  - type: object\n                    description: Type returned when a sp_hash is provided in the request\n                    properties:\n                      signage_point:\n                        $ref: \"#/components/schemas/signage_point\"\n                  - type: object\n                    description: Type returned when a challenge_hash is provided in the request\n                    properties:\n                      eos:\n                        $ref: \"#/components/schemas/end_of_sub_slot_bundle\"\n                allOf:\n                  - type: object\n                    properties:\n                      time_received:\n                        type: number\n                        format: double\n                      reverted:\n                        type: boolean\n                  - $ref: \"#/components/schemas/apiResponse\"\n  /get_blockchain_state:\n    post:\n      tags:\n        - Full Node\n      summary: Retrieves a summary of the current state of the blockchain and full node.\n      description: Retrieves a summary of the current state of the blockchain and full node.\n      operationId: get_blockchain_state\n      requestBody:\n        $ref: \"#/components/requestBodies/empty\"\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                allOf:\n                  - type: object\n                    properties:\n                      blockchain_state:\n                        $ref: \"#/components/schemas/blockchain_state\"\n                  - $ref: \"#/components/schemas/apiResponse\"\n  /get_network_info:\n    post:\n      tags:\n        - Full Node\n      description: Retrieves some information about the current network.\n      summary: Retrieves some information about the current network.\n      operationId: full_node_get_network_info\n      requestBody:\n        $ref: \"#/components/requestBodies/empty\"\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                allOf:\n                  - $ref: \"#/components/schemas/network_info\"\n                  - $ref: \"#/components/schemas/apiResponse\"\n  /get_network_space:\n    post:\n      tags:\n        - Full Node\n      description: Retrieves an estimate of total space validating the chain between two block header hashes.\n      summary: Retrieves an estimate of total space.\n      operationId: get_network_space\n      requestBody:\n        required: true\n        description: The block header hashes\n        content:\n          application/json:\n            schema:\n              type: object\n              required:\n                - newer_block_header_hash\n                - older_block_header_hash\n              properties:\n                newer_block_header_hash:\n                  type: string\n                  format: hex\n                older_block_header_hash:\n                  type: string\n                  format: hex\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                allOf:\n                  - type: object\n                    properties:\n                      space:\n                        type: integer\n                        format: bigint\n                  - $ref: \"#/components/schemas/apiResponse\"\n  /get_all_mempool_tx_ids:\n    post:\n      tags:\n        - Mempool\n      description: Returns a list of all transaction IDs (spend bundle hashes) in the mempool.\n      summary: Returns a list of all transaction IDs in the mempool.\n      operationId: get_all_mempool_tx_ids\n      requestBody:\n        $ref: \"#/components/requestBodies/empty\"\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                allOf:\n                  - type: object\n                    properties:\n                      tx_ids:\n                        type: array\n                        items:\n                          type: string\n                          format: hex\n                  - $ref: \"#/components/schemas/apiResponse\"\n  /get_all_mempool_items:\n    post:\n      tags:\n        - Mempool\n      description: Returns all items in the mempool.\n      summary: Returns all items in the mempool.\n      operationId: get_all_mempool_items\n      requestBody:\n        $ref: \"#/components/requestBodies/empty\"\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                allOf:\n                  - type: object\n                    properties:\n                      mempool_items:\n                        type: array\n                        items:\n                          $ref: \"#/components/schemas/mempool_item\"\n                  - $ref: \"#/components/schemas/apiResponse\"\n  /get_mempool_item_by_tx_id:\n    post:\n      tags:\n        - Mempool\n      description: Returns a specific item from the mempool.\n      summary: Returns a specific item from the mempool.\n      operationId: get_mempool_item_by_tx_id\n      requestBody:\n        required: true\n        description: The tx id.\n        content:\n          application/json:\n            schema:\n              type: object\n              required:\n                - tx_id\n              properties:\n                tx_id:\n                  type: string\n                  format: hex\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                allOf:\n                  - type: object\n                    properties:\n                      mempool_item:\n                        $ref: \"#/components/schemas/mempool_item\"\n                  - $ref: \"#/components/schemas/apiResponse\"\n  /get_coin_records_by_puzzle_hash:\n    post:\n      tags:\n        - Coins\n      description: Retrieves the coins for a given puzzlehash, by default returns unspent coins.\n      summary: Retrieves the coins for a given puzzlehash.\n      operationId: get_coin_records_by_puzzle_hash\n      requestBody:\n        required: true\n        description: The puzzle hash.\n        content:\n          application/json:\n            schema:\n              allOf:\n                - type: object\n                  required:\n                    - puzzle_hash\n                  properties:\n                    puzzle_hash:\n                      type: string\n                      format: hex\n                - $ref: \"#/components/schemas/coin_search_options\"\n      responses:\n        '200':\n          $ref: \"#/components/responses/coin_records\"\n  /get_coin_records_by_puzzle_hashes:\n    post:\n      tags:\n        - Coins\n      description: Retrieves the coins for a given puzzlehashes, by default returns unspent coins.\n      summary: Retrieves the coins for a given puzzlehashes\n      operationId: get_coin_records_by_puzzle_hashes\n      requestBody:\n        required: true\n        description: The puzzle hashes.\n        content:\n          application/json:\n            schema:\n              allOf:\n                - type: object\n                  required:\n                    - puzzle_hashes\n                  properties:\n                    puzzle_hashes:\n                      type: array\n                      items:\n                        type: string\n                        format: hex\n                - $ref: \"#/components/schemas/coin_search_options\"\n      responses:\n        '200':\n          $ref: \"#/components/responses/coin_records\"\n  /get_coin_records_by_hint:\n    post:\n      tags:\n        - Coins\n      description: Retrieves coins by hint, by default returns unspent coins.\n      summary: Retrieves coins by hint.\n      operationId: get_coin_records_by_hint\n      requestBody:\n        required: true\n        description: The hint.\n        content:\n          application/json:\n            schema:\n              allOf:\n                - type: object\n                  required:\n                    - hint\n                  properties:\n                    hint:\n                      type: string\n                      format: hex\n                - $ref: \"#/components/schemas/coin_search_options\"\n      responses:\n        '200':\n          $ref: \"#/components/responses/coin_records\"\n  /get_coin_record_by_name:\n    post:\n      tags:\n        - Coins\n      description: Retrieves a coin record by it's name.\n      summary: Retrieves a coin record by it's name.\n      operationId: get_coin_record_by_name\n      requestBody:\n        required: true\n        description: The coin name.\n        content:\n          application/json:\n            schema:\n              type: object\n              required:\n                - name\n              properties:\n                name:\n                  type: string\n                  format: hex\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                allOf:\n                  - type: object\n                    properties:\n                      coin_record:\n                        $ref: \"#/components/schemas/coin_record\"\n                  - $ref: \"#/components/schemas/apiResponse\"\n  /get_coin_records_by_names:\n    post:\n      tags:\n        - Coins\n      description: Retrieves the coins for given coin IDs, by default returns unspent coins.\n      summary: Retrieves the coins for given coin IDs.\n      operationId: get_coin_records_by_names\n      requestBody:\n        required: true\n        description: The coin names.\n        content:\n          application/json:\n            schema:\n              allOf:\n                - type: object\n                  required:\n                    - names\n                  properties:\n                    names:\n                      type: array\n                      items:\n                        type: string\n                        format: hex\n                - $ref: \"#/components/schemas/coin_search_options\"\n      responses:\n        '200':\n          $ref: \"#/components/responses/coin_records\"\n  /get_coin_records_by_parent_ids:\n    post:\n      tags:\n        - Coins\n      description: Retrieves the coins for given parent coin IDs, by default returns unspent coins.\n      summary: Retrieves the coins for given parent coin IDs.\n      operationId: get_coin_records_by_parent_ids\n      requestBody:\n        required: true\n        description: The parent ids.\n        content:\n          application/json:\n            schema:\n              allOf:\n                - type: object\n                  required:\n                    - parent_ids\n                  properties:\n                    parent_ids:\n                      type: array\n                      items:\n                        type: string\n                        format: hex\n                - $ref: \"#/components/schemas/coin_search_options\"\n      responses:\n        '200':\n          $ref: \"#/components/responses/coin_records\"\n  /get_puzzle_and_solution:\n    post:\n      tags:\n        - Coins\n      description: Retrieves a coin solution.\n      summary: Retrieves a coin solution.\n      operationId: get_puzzle_and_solution\n      requestBody:\n        required: true\n        description: The coin id and height\n        content:\n          application/json:\n            schema:\n              type: object\n              required:\n                - coin_id\n                - height\n              properties:\n                coin_id:\n                  type: string\n                  format: hex\n                height:\n                  type: integer\n                  format: uint32\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                allOf:\n                  - type: object\n                    properties:\n                      coin_solution:\n                        $ref: \"#/components/schemas/coin_spend\"\n                  - $ref: \"#/components/schemas/apiResponse\"\n  /push_tx:\n    post:\n      tags:\n        - Coins\n      description: Pushes a transaction/spend bundle to the mempool and blockchain. Returns whether the spend bundle was successfully included into the mempool.\n      summary: Pushes a transaction/spend bundle to the mempool and blockchain.\n      operationId: push_tx\n      requestBody:\n        required: true\n        description: The spend bundle\n        content:\n          application/json:\n            schema:\n              type: object\n              required:\n                - spend_bundle\n              properties:\n                spend_bundle:\n                  $ref: \"#/components/schemas/spend_bundle\"\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                allOf:\n                  - type: object\n                    properties:\n                      status:\n                        type: string\n                  - $ref: \"#/components/schemas/apiResponse\"\nexternalDocs:\n  description: Find out more about chia\n  url: https://chia.net\n"
		}
	},
	"Error": "parse: parse spec: parse components: schemas: \"coin_record\": parse schema: resolve \"./schemas/coin_record.yaml#/coin_record\": find schema: external base \"./schemas/coin_record.yaml\" is not supported"
}