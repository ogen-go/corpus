{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/GovStackWorkingGroup/BuildingBlockAPI"
		},
		"file": {
			"name": "ExampleAPI.yaml",
			"size": 0,
			"path": "ExampleAPI.yaml",
			"byteSize": 3769,
			"content": "---\nopenapi: 3.0.0\ninfo:\n  title: Registration Building Block API\n  description: Registration Building Block API\n  contact:\n    email: you@your-company.com\n  license:\n    name: Apache 2.0\n    url: http://www.apache.org/licenses/LICENSE-2.0.html\n  version: 1.0.0-oas3-oas3\nservers:\n- url: https://virtserver.swaggerhub.com/DigitalImpactAllianc/Registration/1.0.0\ntags:\n- name: admins\n  description: Secured Admin-only calls\n- name: developers\n  description: Operations available to regular developers\npaths:\n  /facility:\n    get:\n      tags:\n      - developers\n      summary: returns data about a particular facility\n      description: |\n        Pass in the ID of the facility and it will return all information about that facility\n      operationId: getFacility\n      parameters:\n      - name: facilityId\n        in: query\n        description: pass the unique identifier of the facility\n        required: true\n        style: form\n        explode: true\n        schema:\n          type: integer\n      responses:\n        \"200\":\n          description: search results matching criteria\n          content:\n            application/json:\n              schema:\n                type: object\n                items:\n                  $ref: '#/components/schemas/Facility'\n        \"404\":\n          description: facility not found\n    post:\n      tags:\n      - admins\n      summary: adds a facility\n      description: Adds a facility to the system\n      operationId: addFacility\n      requestBody:\n        description: Inventory item to add\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Facility'\n      responses:\n        \"201\":\n          description: item created\n        \"400\":\n          description: invalid input, object invalid\n        \"409\":\n          description: an existing item already exists\ncomponents:\n  schemas:\n    Person:\n      required:\n      - birthDate\n      - firstName\n      - governmentId\n      - id\n      - mobileNumber\n      - surname\n      type: object\n      properties:\n        id:\n          type: integer\n          format: int64\n        surname:\n          type: string\n        firstName:\n          type: string\n        birthDate:\n          type: string\n          format: date\n          example: 2016-08-29\n        mobileNumber:\n          type: string\n          example: +1(555)555-5555\n        governmentId:\n          type: string\n          description: Government Issued ID Number\n          example: A0244251\n        program:\n          $ref: '#/components/schemas/Program'\n    Program:\n      required:\n      - description\n      - id\n      - name\n      properties:\n        id:\n          type: integer\n          format: int64\n        name:\n          type: string\n          example: Vaccination Outreach Program\n        description:\n          type: string\n        contact:\n          type: string\n          example: Hani Eskandar\n    Facility:\n      required:\n      - facilityType\n      - name\n      type: object\n      properties:\n        id:\n          type: integer\n          format: int64\n        name:\n          type: string\n          example: Kigali Central Hospital\n        facilityType:\n          type: string\n          example: Hospital\n          enum:\n          - Hospital\n          - School\n        location:\n          $ref: '#/components/schemas/Location'\n    Location:\n      required:\n      - latitude\n      - longitude\n      type: object\n      properties:\n        country:\n          type: string\n          example: Rwanda\n        city:\n          type: string\n          example: Kigali\n        latitude:\n          type: number\n          format: float\n        longitude:\n          type: number\n          format: float\n  securitySchemes:\n    basicAuth:\n      type: http\n      scheme: basic\n",
			"canonicalURL": "/github.com/GovStackWorkingGroup/BuildingBlockAPI@4ed5a083b6fcc84b2394d9c71b7ecc2126082c8f/-/blob/ExampleAPI.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/GovStackWorkingGroup/BuildingBlockAPI/blob/4ed5a083b6fcc84b2394d9c71b7ecc2126082c8f/ExampleAPI.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "parse: parse spec: parse path items: path \"/facility\": get: operation \"getFacility\": responses: 200: content: application/json: schema: parse schema: at ExampleAPI.yaml:45:19: items: object cannot contain 'items' field"
}