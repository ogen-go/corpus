{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/bcgov/common-object-management-service"
		},
		"file": {
			"name": "v1.api-spec.yaml",
			"size": 0,
			"path": "app/src/docs/v1.api-spec.yaml",
			"byteSize": 69678,
			"content": "---\nopenapi: 3.0.3\ninfo:\n  version: 1.0.0\n  title: Common Object Management Service (COMS)\n  description: A microservice for managing access control to S3 Objects\n  license:\n    name: Apache 2.0\n    url: https://www.apache.org/licenses/LICENSE-2.0.html\n  contact:\n    name: NR Common Service Showcase\n    email: NR.CommonServiceShowcase@gov.bc.ca\nservers:\n  - url: /api/v1\n    description: This Server\nsecurity:\n  - BasicAuth: []\n  - BearerAuth: []\n    OpenID: []\ntags:\n  - name: Bucket\n    description: \u003e-\n      Operations for managing S3 Bucket(s). Certain operations not\n      available without a database.\n    externalDocs:\n      url: \u003e-\n        https://github.com/bcgov/common-object-management-service/wiki/Endpoint-Notes#bucket\n  - name: Bucket Permission\n    description: \u003e-\n      Operations for managing S3 Bucket permissions. Not available\n      without a database.\n    externalDocs:\n      url: \u003e-\n        https://github.com/bcgov/common-object-management-service/wiki/Endpoint-Notes#permission\n  - name: Metadata\n    description: \u003e-\n      Operations for inspecting known COMS metadata. Certain operations not\n      available without a database.\n    externalDocs:\n      url: \u003e-\n        https://github.com/bcgov/common-object-management-service/wiki/Endpoint-Notes#metadata\n  - name: Object\n    description: \u003e-\n      Operations directly influencing an S3 Object. Certain operations not\n      available without a database.\n    externalDocs:\n      url: \u003e-\n        https://github.com/bcgov/common-object-management-service/wiki/Endpoint-Notes#object\n  - name: Object Metadata\n    description: Operations directly influencing the Metadata of an S3 Object.\n    externalDocs:\n      url: \u003e-\n        https://github.com/bcgov/common-object-management-service/wiki/Endpoint-Notes#metadata\n  - name: Object Permission\n    description: \u003e-\n      Operations for managing User Access Control to S3 Object permissions. Not available\n      without a database.\n    externalDocs:\n      url: \u003e-\n        https://github.com/bcgov/common-object-management-service/wiki/Endpoint-Notes#permission\n  - name: Object Tagging\n    description: Operations directly influencing the Tags of an S3 Object.\n    externalDocs:\n      url: \u003e-\n        https://github.com/bcgov/common-object-management-service/wiki/Endpoint-Notes#tag\n  - name: User\n    description: \u003e-\n      Operations to list valid queryable users and identity providers. Not\n      available without a database.\n    externalDocs:\n      url: \u003e-\n        https://github.com/bcgov/common-object-management-service/wiki/Endpoint-Notes#user\npaths:\n  /bucket:\n    put:\n      summary: Creates a bucket\n      description: Creates a bucket\n      operationId: createBucket\n      tags:\n        - Bucket\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: array\n              items:\n                $ref: '#/components/schemas/DB-Bucket'\n      responses:\n        '201':\n          description: Returns inserted DB bucket record\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/DB-Bucket'\n        '401':\n          $ref: '#/components/responses/Unauthorized'\n        default:\n          $ref: '#/components/responses/Error'\n\n    get:\n      summary: Search for buckets\n      description: \u003e-\n        Returns a list of buckets matching all search criteria across all known\n        versions of buckets.\n      operationId: searchBuckets\n      tags:\n        - Bucket\n      parameters:\n        - $ref: '#/components/parameters/Query-BucketId'\n        - $ref: '#/components/parameters/Query-Active'\n        - $ref: '#/components/parameters/Query-Key'\n        - $ref: '#/components/parameters/Query-BucketName'\n      responses:\n        '201':\n          description: Returns an array of buckets\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/DB-Bucket'\n        '401':\n          $ref: '#/components/responses/Unauthorized'\n        '403':\n          $ref: '#/components/responses/Forbidden'\n        default:\n          $ref: '#/components/responses/Error'\n\n  /bucket/{bucketId}:\n    head:\n      summary: Checks if a given bucket or default bucket exists in S3\n      description: Returns either a 204 or 40* if user lacks permissions\n      operationId: headBucket\n      tags:\n        - Bucket\n      parameters:\n        - $ref: '#/components/parameters/Path-BucketId'\n      responses:\n        '204':\n          description: Returns object headers\n        '403':\n          $ref: '#/components/responses/Forbidden'\n        default:\n          $ref: '#/components/responses/Error'\n\n    get:\n      summary: Returns a bucket\n      description: Returns a bucket based on bucketId\n      operationId: readBucket\n      tags:\n        - Bucket\n      parameters:\n        - $ref: '#/components/parameters/Path-BucketId'\n      responses:\n        '200':\n          description: Returns bucket\n          $ref: '#/components/responses/Bucket'\n        '403':\n          $ref: '#/components/responses/Forbidden'\n        default:\n          $ref: '#/components/responses/Error'\n\n    patch:\n      summary: Updates a bucket\n      description: Returns updated bucket\n      operationId: updateBucket\n      tags:\n        - Bucket\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: array\n              items:\n                $ref: '#/components/schemas/DB-Bucket'\n      parameters:\n        - $ref: '#/components/parameters/Path-BucketId'\n      responses:\n        '200':\n          description: Returns updated bucket\n          $ref: '#/components/responses/Bucket'\n        '403':\n          $ref: '#/components/responses/Forbidden'\n        default:\n          $ref: '#/components/responses/Error'\n\n    delete:\n      summary: Deletes a bucket\n      description: Delete bucket based on bucketId\n      operationId: deleteBucket\n      tags:\n        - Bucket\n      parameters:\n        - $ref: '#/components/parameters/Path-BucketId'\n      responses:\n        '204':\n          description: Returns no content success\n        '403':\n          $ref: '#/components/responses/Forbidden'\n        default:\n          $ref: '#/components/responses/Error'\n\n  /metadata:\n    get:\n      summary: Returns a list of matching metadata\n      description: \u003e-\n        Gets a list of metadata matching the given parameters. Multiple Key/Value pairs\n        can be provided in the headers to narrow down results. If none are provided the full set of metadata will be returned.\n      operationId: getMetadata\n      tags:\n        - Metadata\n      parameters:\n        - $ref: '#/components/parameters/Header-Metadata'\n      responses:\n        '200':\n          description: Returns an array of matching key/value pairs.\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/S3-TagSet'\n        '422':\n          $ref: '#/components/responses/UnprocessableEntity'\n        default:\n          $ref: '#/components/responses/Error'\n  /object:\n    post:\n      summary: Creates new objects\n      description: \u003e-\n        Create object(s) in the configured object storage. If COMS is running in\n        either 'OIDC' or 'Full' mode, any objects created with OIDC user\n        authentication will have all object permissions assigned to them by\n        default.\n      operationId: createObjects\n      tags:\n        - Object\n      parameters:\n        - $ref: '#/components/parameters/Header-Metadata'\n        - $ref: '#/components/parameters/Query-TagSet'\n      requestBody:\n        description: Form-data containing files\n        required: true\n        content:\n          multipart/form-data:\n            schema:\n              type: object\n              description: foobar\n              properties:\n                anyKey:\n                  type: string\n                  description: \u003e-\n                    This endpoint can accept an arbitrary number of form-data\n                    keys. There must be at least one key present, and every key\n                    must be unique. All keys shall contain a binary\n                    representation of the file to upload. In the response, each\n                    successfully uploaded file shall contain a 'fieldName'\n                    property corresponding to your custom defined keys.\n                  format: binary\n      responses:\n        '201':\n          description: Returns an array of created object data\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  allOf:\n                    - type: object\n                      required:\n                        - fieldName\n                      properties:\n                        fieldName:\n                          type: string\n                          description: \u003e-\n                            A unique form field chosen for the key for each file\n                            in the multi-part form-data post\n                          example: file1\n                    - $ref: '#/components/schemas/DB-Object'\n                    - $ref: '#/components/schemas/DB-Metadata'\n                    - $ref: '#/components/schemas/DB-Tags'\n                    - $ref: '#/components/schemas/S3-Object'\n        '401':\n          $ref: '#/components/responses/Unauthorized'\n        '403':\n          $ref: '#/components/responses/Forbidden'\n        default:\n          $ref: '#/components/responses/Error'\n    get:\n      summary: Search for objects\n      description: \u003e-\n        Returns a list of objects matching all search criteria across all known\n        versions of objects.\n      operationId: searchObjects\n      tags:\n        - Object\n      parameters:\n        - $ref: '#/components/parameters/Header-Metadata'\n        - $ref: '#/components/parameters/Query-ObjectId'\n        - $ref: '#/components/parameters/Query-Path'\n        - $ref: '#/components/parameters/Query-Active'\n        - $ref: '#/components/parameters/Query-Public'\n        - $ref: '#/components/parameters/Query-MimeType'\n        - $ref: '#/components/parameters/Query-Name'\n        - $ref: '#/components/parameters/Query-TagSet'\n      responses:\n        '201':\n          description: Returns and array of objects\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/DB-Object'\n        '401':\n          $ref: '#/components/responses/Unauthorized'\n        '403':\n          $ref: '#/components/responses/Forbidden'\n        default:\n          $ref: '#/components/responses/Error'\n  /object/{objId}:\n    head:\n      summary: Returns object headers\n      description: Returns S3 and COMS headers for a specific object\n      operationId: headObject\n      tags:\n        - Object\n      parameters:\n        - $ref: '#/components/parameters/Path-ObjectId'\n        - $ref: '#/components/parameters/Query-VersionId'\n      responses:\n        '204':\n          description: Returns object headers\n          headers:\n            Content-Disposition:\n              $ref: '#/components/headers/Content-Disposition'\n            Content-Length:\n              $ref: '#/components/headers/Content-Length'\n            Content-Type:\n              $ref: '#/components/headers/Content-Type'\n            ETag:\n              $ref: '#/components/headers/ETag'\n            Last-Modified:\n              $ref: '#/components/headers/Last-Modified'\n            x-amz-server-side-encryption:\n              $ref: '#/components/headers/x-amz-server-side-encryption'\n            x-amz-version-id:\n              $ref: '#/components/headers/x-amz-version-id'\n            x-amz-meta-id:\n              $ref: '#/components/headers/x-amz-meta-id'\n            x-amz-meta-name:\n              $ref: '#/components/headers/x-amz-meta-name'\n        '401':\n          $ref: '#/components/responses/Unauthorized'\n        '403':\n          $ref: '#/components/responses/Forbidden'\n        default:\n          $ref: '#/components/responses/Error'\n    get:\n      summary: Returns the object\n      description: \u003e-\n        Returns the object as either a direct binary stream, an HTTP 201\n        containing a direct, temporary pre-signed S3 object URL location, or\n        an HTTP 302 redirect to a direct, temporary pre-signed S3 object URL\n        location.\n      operationId: readObject\n      tags:\n        - Object\n      parameters:\n        - $ref: '#/components/parameters/Path-ObjectId'\n        - $ref: '#/components/parameters/Query-Download'\n        - $ref: '#/components/parameters/Query-ExpiresIn'\n        - $ref: '#/components/parameters/Query-VersionId'\n      responses:\n        '200':\n          description: Returns the object\n          headers:\n            Content-Disposition:\n              $ref: '#/components/headers/Content-Disposition'\n            Content-Length:\n              $ref: '#/components/headers/Content-Length'\n            Content-Type:\n              $ref: '#/components/headers/Content-Type'\n            ETag:\n              $ref: '#/components/headers/ETag'\n            Last-Modified:\n              $ref: '#/components/headers/Last-Modified'\n            x-amz-server-side-encryption:\n              $ref: '#/components/headers/x-amz-server-side-encryption'\n            x-amz-version-id:\n              $ref: '#/components/headers/x-amz-version-id'\n            x-amz-meta-id:\n              $ref: '#/components/headers/x-amz-meta-id'\n            x-amz-meta-name:\n              $ref: '#/components/headers/x-amz-meta-name'\n          content:\n            application/octet-stream:\n              schema:\n                type: string\n                format: binary\n        '201':\n          description: Returns a Presigned S3 URL\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Response-PresignedURL'\n        '302':\n          $ref: '#/components/responses/S3Found'\n        '304':\n          $ref: '#/components/responses/NotModified'\n        '401':\n          $ref: '#/components/responses/Unauthorized'\n        '403':\n          $ref: '#/components/responses/Forbidden'\n        default:\n          $ref: '#/components/responses/Error'\n    post:\n      summary: Updates an Object\n      description: \u003e-\n        Updates the object in the configured object storage. If the object\n        storage supports versioning, a new version will be generated instead of\n        overwriting the existing contents.\n      operationId: updateObject\n      tags:\n        - Object\n      parameters:\n        - $ref: '#/components/parameters/Header-Metadata'\n        - $ref: '#/components/parameters/Path-ObjectId'\n        - $ref: '#/components/parameters/Query-TagSet'\n      requestBody:\n        description: Form-data containing files\n        required: true\n        content:\n          multipart/form-data:\n            schema:\n              type: object\n              description: foobar\n              properties:\n                anyKey:\n                  type: string\n                  description: \u003e-\n                    This endpoint will accept only one arbitrary form-data key.\n                    That key shall contain a binary representation of the file\n                    to upload. In the response, the successfully uploaded file\n                    shall contain a 'fieldName' property corresponding to your\n                    custom defined key.\n                  format: binary\n      responses:\n        '200':\n          description: Returns the updated object data\n          content:\n            application/json:\n              schema:\n                allOf:\n                  - type: object\n                    required:\n                      - fieldName\n                    properties:\n                      fieldName:\n                        type: string\n                        description: \u003e-\n                          A unique form field chosen for the key for each file\n                          in the multi-part form-data post\n                        example: file1\n                  - $ref: '#/components/schemas/DB-Object'\n                  - $ref: '#/components/schemas/DB-Metadata'\n                  - $ref: '#/components/schemas/DB-Tags'\n                  - $ref: '#/components/schemas/S3-Object'\n        '401':\n          $ref: '#/components/responses/Unauthorized'\n        '403':\n          $ref: '#/components/responses/Forbidden'\n        default:\n          $ref: '#/components/responses/Error'\n    delete:\n      summary: Deletes an object or a version of object\n      description: \u003e-\n        Deletes the specified object (or version) from S3. If the object storage\n        supports versioning, precise S3 version stack manipulation is supported,\n        including soft-deletion and soft-restore. Hard-deletions on S3 are also\n        supported. For more details on general S3 version behavior, visit\n        https://docs.aws.amazon.com/AmazonS3/latest/userguide/DeletingObjectVersions.html\n      operationId: deleteObject\n      tags:\n        - Object\n      parameters:\n        - $ref: '#/components/parameters/Path-ObjectId'\n        - $ref: '#/components/parameters/Query-VersionId-Delete'\n      responses:\n        '200':\n          description: Object or version was deleted from object storage and COMS database\n          content:\n            application/json:\n              schema:\n                oneOf:\n                  - $ref: '#/components/schemas/Response-ObjectDeleted'\n                  - $ref: '#/components/schemas/Response-VersionDeleted'\n        '401':\n          $ref: '#/components/responses/Unauthorized'\n        '403':\n          $ref: '#/components/responses/Forbidden'\n        default:\n          $ref: '#/components/responses/Error'\n  /object/{objId}/version:\n    get:\n      summary: Returns the object version history\n      description: Returns an array of an object's version history\n      operationId: listObjectVersion\n      tags:\n        - Object\n      parameters:\n        - $ref: '#/components/parameters/Path-ObjectId'\n      responses:\n        '200':\n          description: Returns an array of versions for a specific object\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/S3-VersionList'\n        '401':\n          $ref: '#/components/responses/Unauthorized'\n        '403':\n          $ref: '#/components/responses/Forbidden'\n        default:\n          $ref: '#/components/responses/Error'\n  /object/{objId}/public:\n    patch:\n      summary: Sets the public flag of an object\n      description: \u003e-\n        Toggles the public property for an object. Sets public to false if\n        public query parameter is not specified.\n      operationId: togglePublic\n      tags:\n        - Object\n      parameters:\n        - $ref: '#/components/parameters/Path-ObjectId'\n        - $ref: '#/components/parameters/Query-Public'\n      responses:\n        '200':\n          description: Returns the object information\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DB-Object'\n        '401':\n          $ref: '#/components/responses/Unauthorized'\n        '403':\n          $ref: '#/components/responses/Forbidden'\n        default:\n          $ref: '#/components/responses/Error'\n  /object/{objId}/metadata:\n    patch:\n      summary: Adds metadata to an object\n      description: \u003e-\n        Creates a copy and new version of the object with the given metadata\n        added to the object. Multiple Key/Value pairs can be provided in the\n        header for the metadata.\n      operationId: addMetadata\n      tags:\n        - Object Metadata\n      parameters:\n        - $ref: '#/components/parameters/Header-Metadata'\n        - $ref: '#/components/parameters/Path-ObjectId'\n        - $ref: '#/components/parameters/Query-VersionId'\n      responses:\n        '204':\n          $ref: '#/components/responses/NoContent'\n        '401':\n          $ref: '#/components/responses/Unauthorized'\n        '403':\n          $ref: '#/components/responses/Forbidden'\n        '422':\n          $ref: '#/components/responses/UnprocessableEntity'\n        default:\n          $ref: '#/components/responses/Error'\n    put:\n      summary: Replaces metadata of an object\n      description: \u003e-\n        Creates a copy and new version of the object with the given metadata\n        replacing the existing. Multiple Key/Value pairs can be provided in the\n        header for the metadata.\n      operationId: replaceMetadata\n      tags:\n        - Object Metadata\n      parameters:\n        - $ref: '#/components/parameters/Header-Metadata'\n        - $ref: '#/components/parameters/Path-ObjectId'\n        - $ref: '#/components/parameters/Query-VersionId'\n      responses:\n        '204':\n          $ref: '#/components/responses/NoContent'\n        '401':\n          $ref: '#/components/responses/Unauthorized'\n        '403':\n          $ref: '#/components/responses/Forbidden'\n        '422':\n          $ref: '#/components/responses/UnprocessableEntity'\n        default:\n          $ref: '#/components/responses/Error'\n    delete:\n      summary: Delete metadata of an object.\n      description: \u003e-\n        Creates a copy and new version of the object with the given metadata\n        removed. Multiple Key/Value pairs can be provided in the header for the\n        metadata. If no metadata headers are given then all metadata will be\n        removed. Metadata headers `name` and `id` are mandatory and will always\n        persist.\n      operationId: deleteMetadata\n      tags:\n        - Object Metadata\n      parameters:\n        - $ref: '#/components/parameters/Header-Metadata'\n        - $ref: '#/components/parameters/Path-ObjectId'\n        - $ref: '#/components/parameters/Query-VersionId'\n      responses:\n        '204':\n          $ref: '#/components/responses/NoContent'\n        '401':\n          $ref: '#/components/responses/Unauthorized'\n        '403':\n          $ref: '#/components/responses/Forbidden'\n        default:\n          $ref: '#/components/responses/Error'\n  /object/tagging:\n    get:\n      summary: Returns a list of matching tags\n      description: \u003e-\n        Gets a list of tags matching the given parameters. Multiple Key/Value pairs\n        can be provided in the query to narrow down results. If none are provided the full set of tags will be returned.\n      operationId: getTagging\n      tags:\n        - Object Tagging\n      parameters:\n        - $ref: '#/components/parameters/Query-TagSet'\n      responses:\n        '200':\n          description: Returns an array of matching key/value pairs.\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/S3-TagSet'\n        '422':\n          $ref: '#/components/responses/UnprocessableEntity'\n        default:\n          $ref: '#/components/responses/Error'\n  /object/{objId}/tagging:\n    patch:\n      summary: Adds tags to an object\n      description: \u003e-\n        Adds a specified set of tags to the object. Multiple Key/Value pairs\n        can be provided in the query.\n      operationId: addTagging\n      tags:\n        - Object Tagging\n      parameters:\n        - $ref: '#/components/parameters/Path-ObjectId'\n        - $ref: '#/components/parameters/Query-TagSet'\n        - $ref: '#/components/parameters/Query-VersionId'\n      responses:\n        '204':\n          $ref: '#/components/responses/NoContent'\n        '401':\n          $ref: '#/components/responses/Unauthorized'\n        '403':\n          $ref: '#/components/responses/Forbidden'\n        '422':\n          $ref: '#/components/responses/UnprocessableEntity'\n        default:\n          $ref: '#/components/responses/Error'\n    put:\n      summary: Replaces tags of an object\n      description: \u003e-\n        Replace the existing tag-set of an object with the set of given tags.\n        Multiple Key/Value pairs can be provided in the query.\n      operationId: replaceTagging\n      tags:\n        - Object Tagging\n      parameters:\n        - $ref: '#/components/parameters/Path-ObjectId'\n        - $ref: '#/components/parameters/Query-TagSet'\n        - $ref: '#/components/parameters/Query-VersionId'\n      responses:\n        '204':\n          $ref: '#/components/responses/NoContent'\n        '401':\n          $ref: '#/components/responses/Unauthorized'\n        '403':\n          $ref: '#/components/responses/Forbidden'\n        '422':\n          $ref: '#/components/responses/UnprocessableEntity'\n        default:\n          $ref: '#/components/responses/Error'\n    delete:\n      summary: Delete tags of an object.\n      description: \u003e-\n        Removes the specified set of tags from the object. Multiple Key/Value\n        pairs can be provided in the query. All tags in the tag-set will be\n        removed from the object if no tags are specified.\n      operationId: deleteTagging\n      tags:\n        - Object Tagging\n      parameters:\n        - $ref: '#/components/parameters/Path-ObjectId'\n        - $ref: '#/components/parameters/Query-TagSet'\n        - $ref: '#/components/parameters/Query-VersionId'\n      responses:\n        '204':\n          $ref: '#/components/responses/NoContent'\n        '401':\n          $ref: '#/components/responses/Unauthorized'\n        '403':\n          $ref: '#/components/responses/Forbidden'\n        default:\n          $ref: '#/components/responses/Error'\n  /permission/object:\n    get:\n      summary: Search for object permissions\n      description: \u003e-\n        Returns an array of permissions meeting the filtering parameters\n        provided\n      operationId: objectSearchPermissions\n      security:\n        - BasicAuth: []\n      tags:\n        - Object Permission\n      parameters:\n        - $ref: '#/components/parameters/Query-BucketId'\n        - $ref: '#/components/parameters/Query-ObjectId'\n        - $ref: '#/components/parameters/Query-UserId'\n        - $ref: '#/components/parameters/Query-PermCode'\n      responses:\n        '200':\n          description: \u003e-\n            Returns an array of objectId/userId/permCode triplets that match the\n            provided parameters\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/DB-ObjectPermission'\n        '401':\n          $ref: '#/components/responses/Unauthorized'\n        '403':\n          $ref: '#/components/responses/Forbidden'\n        default:\n          $ref: '#/components/responses/Error'\n\n  /permission/object/{objId}:\n    get:\n      summary: Returns the object permissions\n      description: \u003e-\n        Returns an array of object permissions for a specific object meeting the\n        filtering parameters provided\n      operationId: objectListPermissions\n      tags:\n        - Object Permission\n      parameters:\n        - $ref: '#/components/parameters/Path-ObjectId'\n        - $ref: '#/components/parameters/Query-UserId'\n        - $ref: '#/components/parameters/Query-PermCode'\n      responses:\n        '200':\n          description: \u003e-\n            Returns an array of objectId/userId/permCode triplets that match the\n            provided parameters\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/DB-ObjectPermission'\n        '401':\n          $ref: '#/components/responses/Unauthorized'\n        '403':\n          $ref: '#/components/responses/Forbidden'\n        default:\n          $ref: '#/components/responses/Error'\n    put:\n      summary: Grants object permissions to users\n      description: \u003e-\n        Adds permissions for a specific object to users by specifying an\n        arbitrary array of permCode and user tuples. This is an idempotent\n        operation, so users that already have a requested permission will remain\n        unaffected. Only permissions successfully added to COMS will appear in\n        the response.\n      operationId: objectAddPermissions\n      tags:\n        - Object Permission\n      parameters:\n        - $ref: '#/components/parameters/Path-ObjectId'\n        - $ref: '#/components/parameters/Query-BucketId'\n      requestBody:\n        description: An array of objects, each containing a `permCode` and `userId`\n        content:\n          application/json:\n            schema:\n              type: array\n              items:\n                $ref: '#/components/schemas/Request-PermissionTuple'\n      responses:\n        '201':\n          description: Returns an array of added permissions\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/DB-ObjectPermission'\n        '401':\n          $ref: '#/components/responses/Unauthorized'\n        '403':\n          $ref: '#/components/responses/Forbidden'\n        default:\n          $ref: '#/components/responses/Error'\n    delete:\n      summary: Deletes permissions for an object\n      description: \u003e-\n        Removes permissions for a specific object by optionally specifying a set\n        of users and subset of permissions to revoke. This is an idempotent\n        operation, so users that already lack the specified permission(s) will\n        remain unaffected. Only permissions successfully removed from COMS will\n        appear in the response. WARNING: Specifying no parameters will delete\n        all permissions associated with an object; it is possible to lock\n        yourself out of your own object!\n      operationId: objectRemovePermissions\n      tags:\n        - Object Permission\n      parameters:\n        - $ref: '#/components/parameters/Path-ObjectId'\n        - $ref: '#/components/parameters/Query-UserId'\n        - $ref: '#/components/parameters/Query-PermCode'\n      responses:\n        '200':\n          description: Returns an array of deleted permissions\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/DB-ObjectPermission'\n        '401':\n          $ref: '#/components/responses/Unauthorized'\n        '403':\n          $ref: '#/components/responses/Forbidden'\n        default:\n          $ref: '#/components/responses/Error'\n  /permission/bucket:\n    get:\n      summary: Searches for bucket permissions\n      description: \u003e-\n        Returns an array of bucket permissions meeting the filtering parameters\n        provided\n      operationId: bucketSearchPermissions\n      security:\n        - BasicAuth: []\n      tags:\n        - Bucket Permission\n      parameters:\n        - $ref: '#/components/parameters/Query-ObjectPerms'\n        - $ref: '#/components/parameters/Query-BucketId'\n        - $ref: '#/components/parameters/Query-UserId'\n        - $ref: '#/components/parameters/Query-PermCode'\n      responses:\n        '200':\n          description: \u003e-\n            Returns an array of objectId/userId/permCode triplets that match the\n            provided parameters\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/DB-BucketPermission'\n        '401':\n          $ref: '#/components/responses/Unauthorized'\n        '403':\n          $ref: '#/components/responses/Forbidden'\n        default:\n          $ref: '#/components/responses/Error'\n\n  /permission/bucket/{bucketId}:\n    get:\n      summary: Returns the bucket permissions\n      description: \u003e-\n        Returns an array of object permissions for a specific object meeting the\n        filtering parameters provided\n      operationId: bucketListPermissions\n      tags:\n        - Bucket Permission\n      parameters:\n        - $ref: '#/components/parameters/Path-BucketId'\n        - $ref: '#/components/parameters/Query-UserId'\n        - $ref: '#/components/parameters/Query-PermCode'\n      responses:\n        '200':\n          description: \u003e-\n            Returns an array of bucketId/userId/permCode triplets that match the\n            provided parameters\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/DB-BucketPermission'\n        '401':\n          $ref: '#/components/responses/Unauthorized'\n        '403':\n          $ref: '#/components/responses/Forbidden'\n        default:\n          $ref: '#/components/responses/Error'\n    put:\n      summary: Grants bucket permissions to users\n      description: \u003e-\n        Adds permissions for a specific bucket to users by specifying an\n        arbitrary array of permCode and user tuples. This is an idempotent\n        operation, so users that already have a requested permission will remain\n        unaffected. Only permissions successfully added to COMS will appear in\n        the response.\n      operationId: bucketAddPermissions\n      tags:\n        - Bucket Permission\n      parameters:\n        - $ref: '#/components/parameters/Path-BucketId'\n      requestBody:\n        description: An array of bucket permissions, each containing a `userId` and `permCode`\n        content:\n          application/json:\n            schema:\n              type: array\n              items:\n                $ref: '#/components/schemas/Request-PermissionTuple'\n      responses:\n        '201':\n          description: Returns an array of added permissions\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/DB-BucketPermission'\n        '401':\n          $ref: '#/components/responses/Unauthorized'\n        '403':\n          $ref: '#/components/responses/Forbidden'\n        default:\n          $ref: '#/components/responses/Error'\n    delete:\n      summary: Deletes permissions for a bucket\n      description: \u003e-\n        Removes permissions for a specific bucket by optionally specifying a set\n        of users and subset of permissions to revoke. This is an idempotent\n        operation, so users that already lack the specified permission(s) will\n        remain unaffected. Only permissions successfully removed from COMS will\n        appear in the response. WARNING: Specifying no parameters will delete\n        all permissions associated with a bucket; it is possible to lock\n        yourself out of your own bucket!\n      operationId: bucketRemovePermissions\n      tags:\n        - Bucket Permission\n      parameters:\n        - $ref: '#/components/parameters/Path-BucketId'\n        - $ref: '#/components/parameters/Query-UserId'\n        - $ref: '#/components/parameters/Query-PermCode'\n      responses:\n        '200':\n          description: Returns an array of deleted permissions\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/DB-BucketPermission'\n        '401':\n          $ref: '#/components/responses/Unauthorized'\n        '403':\n          $ref: '#/components/responses/Forbidden'\n        default:\n          $ref: '#/components/responses/Error'\n  /user:\n    get:\n      summary: Search for users\n      description: \u003e-\n        Returns a list of users based on the provided filtering parameters. At\n        least one query parameter should be present.\n      operationId: searchUsers\n      tags:\n        - User\n      parameters:\n        - $ref: '#/components/parameters/Query-UserId'\n        - $ref: '#/components/parameters/Query-IdentityId'\n        - $ref: '#/components/parameters/Query-Idp'\n        - $ref: '#/components/parameters/Query-Username'\n        - $ref: '#/components/parameters/Query-Email'\n        - $ref: '#/components/parameters/Query-FirstName'\n        - $ref: '#/components/parameters/Query-FullName'\n        - $ref: '#/components/parameters/Query-LastName'\n        - $ref: '#/components/parameters/Query-Active'\n        - $ref: '#/components/parameters/Query-UserSearch'\n      responses:\n        '200':\n          description: \u003e-\n            Returns a JSON object representation of the user matching provided\n            parameters\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/DB-User'\n        '401':\n          $ref: '#/components/responses/Unauthorized'\n        '403':\n          $ref: '#/components/responses/Forbidden'\n        default:\n          $ref: '#/components/responses/Error'\n  /user/idpList:\n    get:\n      summary: Lists all identity providers\n      description: Returns a list of all currently known identity providers\n      operationId: listIdps\n      tags:\n        - User\n      parameters:\n        - $ref: '#/components/parameters/Query-Active'\n      responses:\n        '200':\n          description: Returns a JSON array of known identity providers\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/DB-IdentityProvider'\n        '401':\n          $ref: '#/components/responses/Unauthorized'\n        '403':\n          $ref: '#/components/responses/Forbidden'\n        default:\n          $ref: '#/components/responses/Error'\ncomponents:\n  headers:\n    Content-Disposition:\n      description: Specifies presentational information for the object\n      schema:\n        type: string\n      example: attachment; filename=\"foobar.txt\"\n    Content-Length:\n      description: Size of the body in bytes\n      schema:\n        type: integer\n      example: 529\n    Content-Type:\n      description: A standard MIME type describing the format of the object data\n      schema:\n        type: string\n      example: text/plain; charset=utf-8\n    ETag:\n      description: \u003e-\n        An entity tag (ETag) is an opaque identifier assigned by a web server to\n        a specific version of a resource found at a URL\n      schema:\n        type: integer\n      example: '\"9d1aaa54b84e1d6ccc6e0477c5717fe3\"'\n    Last-Modified:\n      description: Creation date of the object\n      schema:\n        type: string\n        format: date-time\n      example: Fri March 11 2022 15:42:05 GMT-0700 (Pacific Daylight Time)\n    Location:\n      description: URL Location of the moved resource\n      schema:\n        type: string\n      example: \u003e-\n        https://your.objectstore.com/yourbucket/coms/env/00000000-0000-0000-0000-000000000000?X-Amz-Algorithm=AWS4-HMAC-SHA256\u0026X-Amz-Content-Sha256=UNSIGNED-PAYLOAD\u0026X-Amz-Credential=credential%2F20220411%2Fus-east-1%2Fs3%2Faws4_request\u0026X-Amz-Date=20220411T204528Z\u0026X-Amz-Expires=300\u0026X-Amz-Signature=SIGNATURE\u0026X-Amz-SignedHeaders=host\u0026x-id=GetObject\n    x-amz-server-side-encryption:\n      description: \u003e-\n        If the object is stored using server-side encryption either with an AWS\n        KMS key or an Amazon S3-managed encryption key, the response includes\n        this header with the value of the server-side encryption algorithm used\n        when storing this object in Amazon S3 (for example, AES256, aws:kms).\n      schema:\n        type: string\n      example: AES256\n    x-amz-version-id:\n      description: Version of the object\n      schema:\n        type: string\n      example: 1649457725874\n    x-amz-meta-id:\n      description: The Object ID\n      schema:\n        type: string\n      example: ac246e31-c807-496c-bc93-cd8bc2f1b2b4\n    x-amz-meta-name:\n      description: The original filename of the object\n      schema:\n        type: string\n      example: foobar.txt\n  parameters:\n    Header-Metadata:\n      in: header\n      name: x-amz-meta-*\n      description: \u003e-\n        An arbitrary metadata key/value pair. Must contain the x-amz-meta-\n        prefix to be valid. Multiple metadata pairs can be defined.\n        keys must be unique and will be converted to lowercase.\n      schema:\n        type: string\n        example:\n          - x-amz-meta-foo\n          - x-amz-meta-bar\n          - x-amz-meta-baz\n    Path-BucketId:\n      in: path\n      name: bucketId\n      description: Uuid or array of uuids representing the bucket\n      required: true\n      schema:\n        type: string\n        format: uuid\n        example: ac246e31-c807-496c-bc93-cd8bc2f1b2b4\n    Path-ObjectId:\n      in: path\n      name: objId\n      description: Uuid of an object\n      required: true\n      schema:\n        type: string\n        format: uuid\n        example: 00000000-0000-0000-0000-000000000000\n    Query-Active:\n      in: query\n      name: active\n      description: Boolean on active status\n      schema:\n        type: boolean\n        example: true\n    Query-Download:\n      in: query\n      name: download\n      description: \u003e-\n        Download mode behavior. Default behavior (undefined) will yield an\n        HTTP 302 redirect to the S3 bucket via presigned URL. If `proxy` is\n        specified, the object contents will be available proxied through COMS.\n        If `url` is specified, expect an HTTP 201 cotaining the presigned URL\n        as a JSON string in the response.\n      schema:\n        $ref: '#/components/schemas/DownloadMode'\n    Query-Email:\n      in: query\n      name: email\n      description: Search by specific email\n      schema:\n        type: string\n        example: bobsmith@gov.bc.ca\n    Query-ExpiresIn:\n      in: query\n      name: expiresIn\n      description: How many seconds the pre-signed URL should remain valid for\n      schema:\n        type: integer\n        format: int32\n        default: 300\n        example: 300\n    Query-IdentityId:\n      in: query\n      name: identityId\n      description: \u003e-\n        String or array of strings representing the user (identified by optional KC_IDENTITYKEY env variable)\n      schema:\n        oneOf:\n          - type: string\n            example: 5dad1ec9d3c04b0f8eadcb4d9fa98987\n          - type: array\n            items:\n              type: string\n              example: 5dad1ec9d3c04b0f8eadcb4d9fa98987\n    Query-FirstName:\n      in: query\n      name: firstName\n      description: Search by specific first name\n      schema:\n        type: string\n        example: bob\n    Query-FullName:\n      in: query\n      name: fullName\n      description: Search by specific full name\n      schema:\n        type: string\n        example: bob smith\n    Query-Idp:\n      in: query\n      name: idp\n      description: \u003e-\n        Idp or array of idps representing the identity provider(s) (i.e. `idir`,\n        `bceid-basic`, etc)\n      schema:\n        oneOf:\n          - type: string\n            example: idir\n          - type: array\n            items:\n              type: string\n              example: idir\n    Query-LastName:\n      in: query\n      name: lastName\n      description: Search by specific last name\n      schema:\n        type: string\n        example: smith\n    Query-MessageId:\n      in: query\n      name: msgId\n      description: Uuid of a message\n      schema:\n        type: string\n        format: uuid\n        example: 00000000-0000-0000-0000-000000000000\n    Query-MimeType:\n      in: query\n      name: mimeType\n      description: The object MIME Type\n      schema:\n        type: string\n        example: application/octet-stream\n    Query-ObjectId:\n      in: query\n      name: objId\n      description: Uuid or array of uuids representing the object\n      schema:\n        oneOf:\n          - type: string\n            format: uuid\n            example: ac246e31-c807-496c-bc93-cd8bc2f1b2b4\n          - type: array\n            items:\n              type: string\n              format: uuid\n              example: ac246e31-c807-496c-bc93-cd8bc2f1b2b4\n    Query-BucketId:\n      in: query\n      name: bucketId\n      description: Uuid or array of uuids representing the bucket\n      schema:\n        oneOf:\n          - type: string\n            format: uuid\n            example: ac246e31-c807-496c-bc93-cd8bc2f1b2b4\n          - type: array\n            items:\n              type: string\n              format: uuid\n              example: ac246e31-c807-496c-bc93-cd8bc2f1b2b4\n    Query-BucketName:\n      in: query\n      name: name\n      description: \u003e-\n        A display name given to the bucket on creation\n      schema:\n        type: string\n        example: Environmental Documents\n    Query-ObjectPerms:\n      in: query\n      name: objectPerms\n      description: Boolean representing whether to include (object) buckets or not\n      schema:\n        type: boolean\n        example: true/false\n    Query-Key:\n      in: query\n      name: key\n      description: The prefix given to objects in the bucket\n      schema:\n        type: string\n        example: coms/env\n    Query-Name:\n      in: query\n      name: name\n      description: \u003e-\n        the `name` metadata for the object Typically a descriptive title or\n        original filename\n      schema:\n        type: string\n        example: foobar.txt\n    Query-Path:\n      in: query\n      name: path\n      description: The canonical S3 path string of the object\n      schema:\n        type: string\n        example: coms/env/ac246e31-c807-496c-bc93-cd8bc2f1b2b4\n    Query-PermCode:\n      in: query\n      name: permCode\n      description: the permission type\n      schema:\n        oneOf:\n          - $ref: '#/components/schemas/PermCode'\n          - type: array\n            items:\n              $ref: '#/components/schemas/PermCode'\n    Query-Public:\n      in: query\n      name: public\n      description: Boolean on public status\n      schema:\n        type: boolean\n        example: true\n    Query-TagSet:\n      in: query\n      name: tagset[*]\n      description: \u003e-\n        Tags for the object, defined as a Key/Value tag. The query must\n        be formatted in deepObject style notation, where a tag-set made out of\n        multiple tags would be encoded something similar to\n        `tagset[x]=a\u0026tagset[y]=b`. Only one value can exist for a given tag key.\n      schema:\n        $ref: '#/components/schemas/S3-TagSet'\n      style: deepObject\n      explode: true\n    Query-UserSearch:\n      in: query\n      name: search\n      description: \u003e-\n        General OR search across username, email and fullName. Intended for use\n        in freetext searches or autofilling fields.\n      schema:\n        type: string\n        example: smith\n    Query-UserId:\n      in: query\n      name: userId\n      description: Uuid or array of uuids representing the user\n      schema:\n        oneOf:\n          - type: string\n            format: uuid\n            example: 00000000-0000-0000-0000-000000000000\n          - type: array\n            items:\n              type: string\n              format: uuid\n              example: 00000000-0000-0000-0000-000000000000\n    Query-Username:\n      in: query\n      name: username\n      description: Search by specific username\n      schema:\n        type: string\n        example: bobsmith\n    Query-VersionId:\n      in: query\n      name: versionId\n      description: Request a specified version\n      schema:\n        type: string\n        description: a version identifier created in S3\n        example: '1647462569641'\n    Query-VersionId-Delete:\n      in: query\n      name: versionId\n      description: delete a specified version\n      schema:\n        type: string\n        description: a version identifier created in S3\n        example: '1647462569641'\n  schemas:\n    DB-Bucket:\n      allOf:\n        - type: object\n          required:\n            - accessKeyId\n            - active\n            - bucket\n            - bucketId\n            - bucketName\n            - endpoint\n            - key\n            - region\n            - secretAccessKey\n          properties:\n            accessKeyId:\n              type: string\n              description: The access key id\n              example: 0000000000000+1111111111111\n            active:\n              type: boolean\n              description: Determines whether this bucket is considered active\n              default: true\n              example: true\n            bucket:\n              type: string\n              description: The parent directory\n              example: parentDirectory\n            bucketId:\n              type: string\n              description: The primary identifier for this bucket\n              format: uuid\n              example: ac246e31-c807-496c-bc93-cd8bc2f1b2b4\n            bucketName:\n              type: string\n              description: The primary name for this bucket\n              example: bucketName\n            endpoint:\n              type: string\n              description: The bucket resources end point (URL)\n              example: https://s3.dot.dot.dot\n            key:\n              type: string\n              description: The prefix to path of all objects in the bucket\n              example: coms/env\n            region:\n              type: string\n              description: The region\n              example: region name\n            secretAccessKey:\n              example: REDACTED\n        - $ref: '#/components/schemas/DB-TimestampUserData'\n    DB-IdentityProvider:\n      allOf:\n        - type: object\n          required:\n            - idp\n            - active\n          properties:\n            idp:\n              type: string\n              description: The identity provider string\n              example: idir\n            active:\n              type: boolean\n              description: Determines whether this identity provider is considered active\n              default: true\n              example: true\n        - $ref: '#/components/schemas/DB-TimestampUserData'\n    DB-Object:\n      allOf:\n        - type: object\n          required:\n            - id\n            - path\n            - public\n            - active\n          properties:\n            id:\n              type: string\n              description: The primary identifier for this object\n              format: uuid\n              example: ac246e31-c807-496c-bc93-cd8bc2f1b2b4\n            path:\n              type: string\n              description: The canonical S3 path string of the object\n              example: coms/env/ac246e31-c807-496c-bc93-cd8bc2f1b2b4\n            public:\n              type: boolean\n              description: Determines whether this object is publicly accessible\n              default: false\n              example: false\n            active:\n              type: boolean\n              description: Determines whether this object is considered active\n              default: true\n              example: true\n        - $ref: '#/components/schemas/DB-TimestampUserData'\n    DB-Metadata:\n      allOf:\n        - type: object\n          required:\n            - metadata\n          properties:\n            metadata:\n              type: object\n              description: User-defined metadata\n              example:\n                name: report.xls\n                department: finance\n                id: ac246e31-c807-496c-bc93-cd8bc2f1b2b4\n    DB-ObjectPermission:\n      allOf:\n        - type: object\n          required:\n            - id\n            - objectId\n            - userId\n            - permCode\n          properties:\n            id:\n              type: string\n              format: uuid\n              description: The unique identifier for this permission tuple\n              example: ac246e31-c807-496c-bc93-cd8bc2f1b2b4\n            objectId:\n              type: string\n              format: uuid\n              description: The unique identifier for the object\n              example: ac246e31-c807-496c-bc93-cd8bc2f1b2b4\n            userId:\n              type: string\n              format: uuid\n              description: The unique identifier of the user\n              example: ac246e31-c807-496c-bc93-cd8bc2f1b2b4\n            permCode:\n              $ref: '#/components/schemas/PermCode'\n        - $ref: '#/components/schemas/DB-TimestampUserData'\n    DB-BucketPermission:\n      allOf:\n        - type: object\n          required:\n            - id\n            - bucketId\n            - userId\n            - permCode\n            - createdBy\n          properties:\n            id:\n              type: string\n              format: uuid\n              description: The unique identifier for this permission tuple\n              example: ac246e31-c807-496c-bc93-cd8bc2f1b2b4\n            objectId:\n              type: string\n              format: uuid\n              description: The unique identifier for the object\n              example: ac246e31-c807-496c-bc93-cd8bc2f1b2b4\n            userId:\n              type: string\n              format: uuid\n              description: The unique identifier of the user\n              example: ac246e31-c807-496c-bc93-cd8bc2f1b2b4\n            permCode:\n              $ref: '#/components/schemas/PermCode'\n        - $ref: '#/components/schemas/DB-TimestampUserData'\n    DB-Tags:\n      allOf:\n        - type: object\n          properties:\n            tags:\n              type: object\n              description: User-defined tags\n              example:\n                classification: Top Secret\n                Priority: Urgent\n    DB-TimestampUserData:\n      type: object\n      required:\n        - createdBy\n        - createdAt\n        - updatedBy\n        - updatedAt\n      properties:\n        createdBy:\n          type: string\n          format: uuid\n          description: \u003e-\n            The subject id of the current user if request was authenticated with\n            a Bearer token (ex. JWT), or a 'nil' uuid if request was\n            authenticated via Basic auth\n          example: 72cf13d7-aef7-4ad5-8ddd-0ff23eefb442\n        createdAt:\n          type: string\n          format: date-time\n          description: Time when this record was created\n          example: '2022-03-11T23:19:16.343Z'\n        updatedBy:\n          type: string\n          format: uuid\n          description: \u003e-\n            The subject id of the current user if request was authenticated with\n            a Bearer token (ex. JWT), or a 'nil' uuid if request was\n            authenticated via Basic auth\n          default: null\n          example: 72cf13d7-aef7-4ad5-8ddd-0ff23eefb442\n        updatedAt:\n          type: string\n          format: date-time\n          description: Time when this record was last updated\n          example: '2022-03-11T23:19:16.343Z'\n    DB-User:\n      allOf:\n        - type: object\n          properties:\n            userId:\n              type: string\n              description: Subject id of the user (Usually the sub claim in a JWT)\n              example: 5dad1ec9-d3c0-4b0f-8ead-cb4d9fa98987\n            identityId:\n              type: string\n              description: \u003e-\n                Identity id of the user (Usually the sub claim in a JWT but can\n                be redefined to a different claim with the `KC_IDENTITYKEY` env\n                variable)\n              example: 5dad1ec9d3c04b0f8eadcb4d9fa98987\n            idp:\n              type: string\n              description: Identity provider used by the OIDC server\n              example: idir\n            email:\n              type: string\n              description: Registered email for this user\n              example: jsmith@gov.bc.ca\n            username:\n              type: string\n              description: Username of this user\n              example: jsmith\n            firstName:\n              type: string\n              description: First name of this user\n              example: Jane\n            lastName:\n              type: string\n              description: Last name of this user\n              example: Smith\n            active:\n              type: boolean\n              description: Determines whether this user is considered active\n              default: true\n              example: true\n        - $ref: '#/components/schemas/DB-TimestampUserData'\n    DownloadMode:\n      type: string\n      description: Download mode behavior overrides\n      enum:\n        - proxy\n        - url\n      example: proxy\n    PermCode:\n      type: string\n      description: Permission code/type for an object\n      enum:\n        - CREATE\n        - READ\n        - UPDATE\n        - DELETE\n        - MANAGE\n      example: UPDATE\n    Request-PermissionTuple:\n      type: object\n      required:\n        - userId\n        - permCode\n      properties:\n        permCode:\n          $ref: '#/components/schemas/PermCode'\n        userId:\n          type: string\n          description: The primary identifier for a user\n          format: uuid\n          example: ac246e31-c807-496c-bc93-cd8bc2f1b2b4\n    Response-BadRequest:\n      allOf:\n        - $ref: '#/components/schemas/Response-Problem'\n        - type: object\n          properties:\n            status:\n              example: 400\n            title:\n              example: Bad Request\n            type:\n              example: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/400\n    Response-Bucket:\n      title: Bucket\n      type: object\n      $ref: '#/components/schemas/DB-Bucket'\n    Response-Conflict:\n      allOf:\n        - $ref: '#/components/schemas/Response-Problem'\n        - type: object\n          properties:\n            status:\n              example: 409\n            title:\n              example: Conflict\n            type:\n              example: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/409\n    Response-Error:\n      allOf:\n        - $ref: '#/components/schemas/Response-Problem'\n        - type: object\n          properties:\n            status:\n              example: 500\n            title:\n              example: Internal Server Error\n            type:\n              example: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/500\n    Response-Forbidden:\n      allOf:\n        - $ref: '#/components/schemas/Response-Problem'\n        - type: object\n          properties:\n            type:\n              example: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/403\n            title:\n              example: Forbidden\n            status:\n              example: 403\n            detail:\n              example: User lacks permission to complete this action\n    Response-NotFound:\n      allOf:\n        - $ref: '#/components/schemas/Response-Problem'\n        - type: object\n          properties:\n            status:\n              example: 404\n            title:\n              example: Not Found\n            type:\n              example: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/404\n    Response-NotImplemented:\n      allOf:\n        - $ref: '#/components/schemas/Response-Problem'\n        - type: object\n          properties:\n            status:\n              example: 501\n            title:\n              example: This action is not supported in the current authentication mode\n            type:\n              example: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/501\n    Response-ObjectDeleted:\n      title: Object Deleted\n      type: object\n      properties:\n        $metadata:\n          $ref: '#/components/schemas/S3-Metadata'\n        DeleteMarker:\n          type: boolean\n        VersionId:\n          type: integer\n          format: int32\n          description: a version identifier created in S3\n          example: 1647462569641\n    Response-PresignedURL:\n      title: Presigned URL\n      type: string\n      description: A Presigned S3 URL\n      example: \u003e-\n        https://your.objectstore.com/yourbucket/coms/env/00000000-0000-0000-0000-000000000000?X-Amz-Algorithm=AWS4-HMAC-SHA256\u0026X-Amz-Content-Sha256=UNSIGNED-PAYLOAD\u0026X-Amz-Credential=credential%2F20220411%2Fus-east-1%2Fs3%2Faws4_request\u0026X-Amz-Date=20220411T204528Z\u0026X-Amz-Expires=300\u0026X-Amz-Signature=SIGNATURE\u0026X-Amz-SignedHeaders=host\u0026x-id=GetObject\n    Response-Problem:\n      required:\n        - type\n        - title\n        - status\n      properties:\n        type:\n          type: string\n          description: What type of problem, link to explanation of problem\n        title:\n          type: string\n          description: Title of problem, generally the Http Status Code description\n        status:\n          type: string\n          description: The Http Status code\n        detail:\n          type: string\n          description: Short description of why this problem was raised.\n        errors:\n          type: array\n          items:\n            type: object\n            required:\n              - message\n            properties:\n              value:\n                type: object\n                description: Contents of the field that was in error.\n              message:\n                type: string\n                description: The error message for the field.\n    Response-Unauthorized:\n      allOf:\n        - $ref: '#/components/schemas/Response-Problem'\n        - type: object\n          properties:\n            type:\n              example: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/401\n            title:\n              example: Unauthorized\n            status:\n              example: 401\n            detail:\n              example: Invalid authorization credentials\n    Response-ValidationError:\n      allOf:\n        - $ref: '#/components/schemas/Response-Problem'\n        - type: object\n          required:\n            - errors\n          properties:\n            errors:\n              type: array\n              items:\n                type: object\n                required:\n                  - message\n                properties:\n                  value:\n                    type: object\n                    description: Contents of the field that was in error.\n                    example: utf-8x\n                  message:\n                    type: string\n                    description: The error message for the field.\n                    example: Invalid value `encoding`.\n            status:\n              example: 422\n            title:\n              example: Unprocessable Entity\n            type:\n              example: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/422\n    Response-VersionDeleted:\n      title: Version Deleted\n      type: object\n      properties:\n        $metadata:\n          $ref: '#/components/schemas/S3-Metadata'\n        VersionId:\n          type: string\n          description: a version identifier created in S3\n          example: 1647462569641\n    S3-Metadata:\n      type: object\n      required:\n        - httpStatusCode\n        - extendedRequestId\n      properties:\n        httpStatusCode:\n          type: integer\n          description: S3 Endpoint internal HTTP code\n          example: 200\n        extendedRequestId:\n          type: string\n          description: S3 Endpoint unique internal request id\n          example: a0ec1be0a99a08aee6026ba9756da40327f2d3ce844499b7ee752082f3fb22e3\n        attempts:\n          type: integer\n          description: Number of attempts performed by S3\n          example: 1\n        totalRetryDelay:\n          type: integer\n          description: S3 delay for retries\n          example: 0\n    S3-Object:\n      type: object\n      required:\n        - $metadata\n        - ETag\n      properties:\n        $metadata:\n          $ref: '#/components/schemas/S3-Metadata'\n        ETag:\n          type: string\n          description: S3 Identifier for a specific version of this object\n          example: '\"9d1aaa54b84e1d6ccc6e0477c5717fe3\"'\n        ServerSideEncryption:\n          type: string\n          description: \u003e-\n            If the object is stored using server-side encryption either with an\n            AWS KMS key or an Amazon S3-managed encryption key, this field\n            specifies the server-side encryption algorithm used when storing\n            this object in Amazon S3 (for example, AES256, aws:kms).\n          example: AES256\n        VersionId:\n          type: string\n          description: a version identifier created in S3\n          example: 1647462569641\n    S3-TagSet:\n      type: object\n      required:\n        - key\n      properties:\n        key:\n          type: string\n          description: The tag key\n          example: x\n        value:\n          type: string\n          description: The tag value\n          example: a\n    S3-Version:\n      type: object\n      required:\n        - ETag\n        - Size\n        - StorageClass\n        - VersionId\n        - IsLatest\n        - LastModified\n      properties:\n        ETag:\n          type: string\n          description: S3 Identifier for a specific version of this object\n          example: 9d1aaa54b84e1d6ccc6e0477c5717fe3\n        Size:\n          type: integer\n          description: Size of the object in bytes\n          example: 529\n        StorageClass:\n          description: \u003e-\n            S3 storage classes based on the data access, resiliency, and cost\n            requirements of your workloads\n          example: STANDARD\n        key:\n          description: Key of the object\n        VersionId:\n          type: string\n          description: a version identifier created in S3\n          example: 1647462569641\n        IsLatest:\n          description: \u003e-\n            Specifies whether the object is (true) or is not (false) the latest\n            version of an object.\n        LastModified:\n          type: string\n          format: date-time\n          example: '2022-03-11T23:19:16.343Z'\n        Owner:\n          $ref: '#/components/schemas/S3-VersionOwner'\n    S3-VersionList:\n      type: object\n      required:\n        - $metadata\n        - IsTruncated\n        - MaxKeys\n        - Name\n        - Prefix\n        - Versions\n      properties:\n        $metadata:\n          $ref: '#/components/schemas/S3-Metadata'\n        IsTruncated:\n          type: boolean\n          description: Whether or not this object listing is complete\n          example: false\n        KeyMarker:\n          type: string\n          description: Marks the last key returned in a truncated response\n          example: ''\n        MaxKeys:\n          type: integer\n          format: int32\n          description: \u003e-\n            Sets the maximum number of keys returned in the response. By default\n            the action returns up to 1,000 key names. The response might contain\n            fewer keys but will never contain more.\n          example: 1000\n        Name:\n          type: string\n          description: Name of the S3 bucket\n        Prefix:\n          type: string\n          description: Keys that begin with the indicated prefix\n          example: coms/env/ac246e31-c807-496c-bc93-cd8bc2f1b2b4\n        VersionIdMarker:\n          type: string\n          description: Marks the last version of the key returned in a truncated response\n          example: ''\n        Versions:\n          type: array\n          items:\n            $ref: '#/components/schemas/S3-Version'\n    S3-VersionOwner:\n      type: object\n      required:\n        - DisplayName\n        - ID\n      properties:\n        DisplayName:\n          type: string\n          description: The bucket accessKeyId/owner\n          example: abcdef\n        ID:\n          type: string\n          description: The bucket accessKeyId/owner\n          example: abcdef\n  responses:\n    Accepted:\n      description: Accepted\n    BadRequest:\n      description: Request is missing content or is malformed\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/Response-BadRequest'\n    Bucket:\n      description: Bucket\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/Response-Bucket'\n    Conflict:\n      description: Request conflicts with server state\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/Response-Conflict'\n    Error:\n      description: Internal Server Error\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/Response-Error'\n    Found:\n      description: Resource requested has been temporarily moved\n    Forbidden:\n      description: Forbidden\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/Response-Forbidden'\n    NoContent:\n      description: Accepted and no content\n    NotFound:\n      description: Not Found\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/Response-NotFound'\n    NotImplemented:\n      description: \u003e-\n        The server does not support the functionality required to fulfill the\n        request.\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/Response-NotImplemented'\n    NotModified:\n      description: Not Modified\n    S3Found:\n      description: Returns a temporary pre-signed S3 object URL location header\n      headers:\n        Location:\n          $ref: '#/components/headers/Location'\n    Unauthorized:\n      description: Unauthorized\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/Response-Unauthorized'\n    UnprocessableEntity:\n      description: \u003e-\n        The server was unable to process the contained instructions. Generally\n        validation error(s).\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/Response-ValidationError'\n  securitySchemes:\n    BasicAuth:\n      type: http\n      description: Basic auth via environment defined username and password\n      scheme: basic\n    BearerAuth:\n      type: http\n      description: Bearer token auth using an OIDC issued JWT token\n      scheme: bearer\n      bearerFormat: JWT\n    OpenID:\n      type: openIdConnect\n      description: OpenID Connect endpoint for acquiring JWT tokens\n      openIdConnectUrl: \u003e-\n        https://logonproxy.gov.bc.ca/auth/realms/your-realm-name/.well-known/openid-configuration\n",
			"canonicalURL": "/github.com/bcgov/common-object-management-service@1251c41d22865e2deb8c4097c1911fb31464333f/-/blob/app/src/docs/v1.api-spec.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/bcgov/common-object-management-service/blob/1251c41d22865e2deb8c4097c1911fb31464333f/app/src/docs/v1.api-spec.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "parse: parse spec: parse components: schemas: \"DB-IdentityProvider\": resolve \"#/components/schemas/DB-IdentityProvider\": allOf: $ref: resolve \"#/components/schemas/DB-TimestampUserData\": property \"updatedBy\": at app/src/docs/v1.api-spec.yaml:1579:20: parse default: unexpected default \"null\" value"
}