{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/syndesisio/syndesis"
		},
		"file": {
			"name": "invalid-field.petstore.json",
			"size": 0,
			"path": "app/server/api-generator/src/test/resources/openapi/v3/invalid/invalid-field.petstore.json",
			"byteSize": 38388,
			"content": "{\n    \"openapi\": \"3.0.2\",\n    \"info\": {\n        \"title\": \"Swagger Petstore\",\n        \"version\": \"1.0.0\",\n        \"description\": \"This is a sample server Petstore server.  You can find out more about Swagger at [http://swagger.io](http://swagger.io) or on [irc.freenode.net, #swagger](http://swagger.io/irc/).  For this sample, you can use the api key `special-key` to test the authorization filters.\",\n        \"termsOfService\": \"http://swagger.io/terms/\",\n        \"contact\": {\n            \"email\": \"apiteam@swagger.io\"\n        },\n        \"license\": {\n            \"name\": \"Apache 2.0\",\n            \"url\": \"http://www.apache.org/licenses/LICENSE-2.0.html\"\n        }\n    },\n    \"servers\": [\n        {\n            \"url\": \"http://petstore.swagger.io/v2\"\n        }\n    ],\n    \"paths\": {\n        \"/pet\": {\n            \"put\": {\n                \"requestBody\": {\n                    \"description\": \"Pet object that needs to be added to the store\",\n                    \"content\": {\n                        \"application/json\": {\n                            \"schema\": {\n                                \"$ref\": \"#/components/schemas/Pet\"\n                            }\n                        },\n                        \"application/xml\": {\n                            \"schema\": {\n                                \"$ref\": \"#/components/schemas/Pet\"\n                            }\n                        }\n                    },\n                    \"required\": true\n                },\n                \"tags\": [\n                    \"pet\"\n                ],\n                \"responses\": {\n                    \"400\": {\n                        \"description\": \"Invalid ID supplied\"\n                    },\n                    \"404\": {\n                        \"description\": \"Pet not found\"\n                    },\n                    \"405\": {\n                        \"description\": \"Validation exception\"\n                    }\n                },\n                \"security\": [\n                    {\n                        \"petstore_auth\": [\n                            \"write:pets\",\n                            \"read:pets\"\n                        ]\n                    }\n                ],\n                \"operationId\": \"updatePet\",\n                \"description\": \"\"\n            },\n            \"post\": {\n                \"requestBody\": {\n                    \"description\": \"Pet object that needs to be added to the store\",\n                    \"content\": {\n                        \"application/json\": {\n                            \"schema\": {\n                                \"$ref\": \"#/components/schemas/Pet\"\n                            }\n                        },\n                        \"application/xml\": {\n                            \"schema\": {\n                                \"$ref\": \"#/components/schemas/Pet\"\n                            }\n                        }\n                    },\n                    \"required\": true\n                },\n                \"tags\": [\n                    \"pet\"\n                ],\n                \"responses\": {\n                    \"405\": {\n                        \"description\": \"Invalid input\"\n                    }\n                },\n                \"security\": [\n                    {\n                        \"petstore_auth\": [\n                            \"write:pets\",\n                            \"read:pets\"\n                        ]\n                    }\n                ],\n                \"operationId\": \"addPet\",\n                \"summary\": \"Add a new pet to the store\",\n                \"description\": \"\"\n            }\n        },\n        \"/pet/findByStatus\": {\n            \"get\": {\n                \"tags\": [\n                    \"pet\"\n                ],\n                \"parameters\": [\n                    {\n                        \"style\": \"form\",\n                        \"explode\": true,\n                        \"name\": \"status\",\n                        \"description\": \"Status values that need to be considered for filter\",\n                        \"schema\": {\n                            \"type\": \"array\",\n                            \"items\": {\n                                \"default\": \"available\",\n                                \"enum\": [\n                                    \"available\",\n                                    \"pending\",\n                                    \"sold\"\n                                ],\n                                \"type\": \"string\"\n                            }\n                        },\n                        \"in\": \"query\",\n                        \"required\": true\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"content\": {\n                            \"application/xml\": {\n                                \"schema\": {\n                                    \"type\": \"array\",\n                                    \"items\": {\n                                        \"$ref\": \"#/components/schemas/Pet\"\n                                    }\n                                }\n                            },\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"type\": \"array\",\n                                    \"items\": {\n                                        \"$ref\": \"#/components/schemas/Pet\"\n                                    }\n                                }\n                            }\n                        },\n                        \"description\": \"successful operation\"\n                    },\n                    \"400\": {\n                        \"description\": \"Invalid status value\"\n                    }\n                },\n                \"security\": [\n                    {\n                        \"petstore_auth\": [\n                            \"write:pets\",\n                            \"read:pets\"\n                        ]\n                    }\n                ],\n                \"operationId\": \"findPetsByStatus\",\n                \"summary\": \"Finds Pets by status\",\n                \"description\": \"Multiple status values can be provided with comma separated strings\"\n            }\n        },\n        \"/pet/findByTags\": {\n            \"get\": {\n                \"tags\": [\n                    \"pet\"\n                ],\n                \"parameters\": [\n                    {\n                        \"style\": \"form\",\n                        \"explode\": true,\n                        \"name\": \"tags\",\n                        \"description\": \"Tags to filter by\",\n                        \"schema\": {\n                            \"type\": \"array\",\n                            \"items\": {\n                                \"type\": \"string\"\n                            }\n                        },\n                        \"in\": \"query\",\n                        \"required\": true\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"content\": {\n                            \"application/xml\": {\n                                \"schema\": {\n                                    \"type\": \"array\",\n                                    \"items\": {\n                                        \"$ref\": \"#/components/schemas/Pet\"\n                                    }\n                                }\n                            },\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"type\": \"array\",\n                                    \"items\": {\n                                        \"$ref\": \"#/components/schemas/Pet\"\n                                    }\n                                }\n                            }\n                        },\n                        \"description\": \"successful operation\"\n                    },\n                    \"400\": {\n                        \"description\": \"Invalid tag value\"\n                    }\n                },\n                \"deprecated\": true,\n                \"security\": [\n                    {\n                        \"petstore_auth\": [\n                            \"write:pets\",\n                            \"read:pets\"\n                        ]\n                    }\n                ],\n                \"operationId\": \"findPetsByTags\",\n                \"summary\": \"Finds Pets by tags\",\n                \"description\": \"Muliple tags can be provided with comma separated strings. Use tag1, tag2, tag3 for testing.\"\n            }\n        },\n        \"/pet/{petId}\": {\n            \"get\": {\n                \"tags\": [\n                    \"pet\"\n                ],\n                \"parameters\": [\n                    {\n                        \"name\": \"petId\",\n                        \"description\": \"ID of pet to return\",\n                        \"schema\": {\n                            \"format\": \"int64\",\n                            \"type\": \"integer\"\n                        },\n                        \"in\": \"path\",\n                        \"required\": true\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"content\": {\n                            \"application/xml\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/Pet\"\n                                }\n                            },\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/Pet\"\n                                }\n                            }\n                        },\n                        \"description\": \"successful operation\"\n                    },\n                    \"400\": {\n                        \"description\": \"Invalid ID supplied\"\n                    },\n                    \"404\": {\n                        \"description\": \"Pet not found\"\n                    }\n                },\n                \"security\": [\n                    {\n                        \"api_key\": [\n                        ]\n                    }\n                ],\n                \"operationId\": \"getPetById\",\n                \"summary\": \"Find pet by ID\",\n                \"description\": \"Returns a single pet\"\n            },\n            \"post\": {\n                \"requestBody\": {\n                    \"content\": {\n                        \"application/x-www-form-urlencoded\": {\n                            \"schema\": {\n                                \"type\": \"object\",\n                                \"properties\": {\n                                    \"name\": {\n                                        \"description\": \"Updated name of the pet\",\n                                        \"type\": \"string\"\n                                    },\n                                    \"status\": {\n                                        \"description\": \"Updated status of the pet\",\n                                        \"type\": \"string\"\n                                    }\n                                }\n                            }\n                        }\n                    },\n                    \"required\": true\n                },\n                \"tags\": [\n                    \"pet\"\n                ],\n                \"parameters\": [\n                    {\n                        \"name\": \"petId\",\n                        \"description\": \"ID of pet that needs to be updated\",\n                        \"schema\": {\n                            \"format\": \"int64\",\n                            \"type\": \"integer\"\n                        },\n                        \"in\": \"path\",\n                        \"required\": true\n                    }\n                ],\n                \"responses\": {\n                    \"405\": {\n                        \"description\": \"Invalid input\"\n                    }\n                },\n                \"security\": [\n                    {\n                        \"petstore_auth\": [\n                            \"write:pets\",\n                            \"read:pets\"\n                        ]\n                    }\n                ],\n                \"operationId\": \"updatePetWithForm\",\n                \"summary\": \"Updates a pet in the store with form data\",\n                \"description\": \"\"\n            },\n            \"delete\": {\n                \"tags\": [\n                    \"pet\"\n                ],\n                \"parameters\": [\n                    {\n                        \"name\": \"api_key\",\n                        \"schema\": {\n                            \"type\": \"string\"\n                        },\n                        \"in\": \"header\",\n                        \"required\": false\n                    },\n                    {\n                        \"name\": \"petId\",\n                        \"description\": \"Pet id to delete\",\n                        \"schema\": {\n                            \"format\": \"int64\",\n                            \"type\": \"integer\"\n                        },\n                        \"in\": \"path\",\n                        \"required\": true\n                    }\n                ],\n                \"responses\": {\n                    \"400\": {\n                        \"description\": \"Invalid ID supplied\"\n                    },\n                    \"404\": {\n                        \"description\": \"Pet not found\"\n                    }\n                },\n                \"security\": [\n                    {\n                        \"petstore_auth\": [\n                            \"write:pets\",\n                            \"read:pets\"\n                        ]\n                    }\n                ],\n                \"operationId\": \"deletePet\",\n                \"summary\": \"Deletes a pet\",\n                \"description\": \"\"\n            }\n        },\n        \"/pet/{petId}/uploadImage\": {\n            \"post\": {\n                \"requestBody\": {\n                    \"content\": {\n                        \"multipart/form-data\": {\n                            \"schema\": {\n                                \"type\": \"object\",\n                                \"properties\": {\n                                    \"additionalMetadata\": {\n                                        \"description\": \"Additional data to pass to server\",\n                                        \"type\": \"string\"\n                                    },\n                                    \"file\": {\n                                        \"format\": \"binary\",\n                                        \"description\": \"file to upload\",\n                                        \"type\": \"string\"\n                                    }\n                                }\n                            }\n                        }\n                    },\n                    \"required\": true\n                },\n                \"tags\": [\n                    \"pet\"\n                ],\n                \"parameters\": [\n                    {\n                        \"name\": \"petId\",\n                        \"description\": \"ID of pet to update\",\n                        \"schema\": {\n                            \"format\": \"int64\",\n                            \"type\": \"integer\"\n                        },\n                        \"in\": \"path\",\n                        \"required\": true\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/ApiResponse\"\n                                }\n                            }\n                        },\n                        \"description\": \"successful operation\"\n                    }\n                },\n                \"security\": [\n                    {\n                        \"petstore_auth\": [\n                            \"write:pets\",\n                            \"read:pets\"\n                        ]\n                    }\n                ],\n                \"operationId\": \"uploadFile\",\n                \"summary\": \"uploads an image\",\n                \"description\": \"\"\n            }\n        },\n        \"/store/inventory\": {\n            \"get\": {\n                \"tags\": [\n                    \"store\"\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"type\": \"object\",\n                                    \"additionalProperties\": {\n                                        \"format\": \"int32\",\n                                        \"type\": \"integer\"\n                                    }\n                                }\n                            }\n                        },\n                        \"description\": \"successful operation\"\n                    }\n                },\n                \"security\": [\n                    {\n                        \"api_key\": [\n                        ]\n                    }\n                ],\n                \"operationId\": \"getInventory\",\n                \"summary\": \"Returns pet inventories by status\",\n                \"description\": \"Returns a map of status codes to quantities\"\n            }\n        },\n        \"/store/order\": {\n            \"post\": {\n                \"requestBody\": {\n                    \"description\": \"order placed for purchasing the pet\",\n                    \"content\": {\n                        \"*/*\": {\n                            \"schema\": {\n                                \"$ref\": \"#/components/schemas/Order\"\n                            }\n                        }\n                    },\n                    \"required\": true\n                },\n                \"tags\": [\n                    \"store\"\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"content\": {\n                            \"application/xml\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/Order\"\n                                }\n                            },\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/Order\"\n                                }\n                            }\n                        },\n                        \"description\": \"successful operation\"\n                    },\n                    \"400\": {\n                        \"description\": \"Invalid Order\"\n                    }\n                },\n                \"operationId\": \"placeOrder\",\n                \"summary\": \"Place an order for a pet\",\n                \"description\": \"\"\n            }\n        },\n        \"/store/order/{orderId}\": {\n            \"get\": {\n                \"tags\": [\n                    \"store\"\n                ],\n                \"parameters\": [\n                    {\n                        \"name\": \"orderId\",\n                        \"description\": \"ID of pet that needs to be fetched\",\n                        \"schema\": {\n                            \"format\": \"int64\",\n                            \"maximum\": 10.0,\n                            \"minimum\": 1.0,\n                            \"type\": \"integer\"\n                        },\n                        \"in\": \"path\",\n                        \"required\": true\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"content\": {\n                            \"application/xml\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/Order\"\n                                }\n                            },\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/Order\"\n                                }\n                            }\n                        },\n                        \"description\": \"successful operation\"\n                    },\n                    \"400\": {\n                        \"description\": \"Invalid ID supplied\"\n                    },\n                    \"404\": {\n                        \"description\": \"Order not found\"\n                    }\n                },\n                \"operationId\": \"getOrderById\",\n                \"summary\": \"Find purchase order by ID\",\n                \"description\": \"For valid response try integer IDs with value \u003e= 1 and \u003c= 10. Other values will generated exceptions\"\n            },\n            \"delete\": {\n                \"tags\": [\n                    \"store\"\n                ],\n                \"parameters\": [\n                    {\n                        \"name\": \"orderId\",\n                        \"description\": \"ID of the order that needs to be deleted\",\n                        \"schema\": {\n                            \"format\": \"int64\",\n                            \"minimum\": 1.0,\n                            \"type\": \"integer\"\n                        },\n                        \"in\": \"path\",\n                        \"required\": true\n                    }\n                ],\n                \"responses\": {\n                    \"400\": {\n                        \"description\": \"Invalid ID supplied\"\n                    },\n                    \"404\": {\n                        \"description\": \"Order not found\"\n                    }\n                },\n                \"operationId\": \"deleteOrder\",\n                \"summary\": \"Delete purchase order by ID\",\n                \"description\": \"For valid response try integer IDs with positive integer value. Negative or non-integer values will generate API errors\"\n            }\n        },\n        \"/user\": {\n            \"post\": {\n                \"requestBody\": {\n                    \"description\": \"Created user object\",\n                    \"content\": {\n                        \"*/*\": {\n                            \"schema\": {\n                                \"$ref\": \"#/components/schemas/User\"\n                            }\n                        }\n                    },\n                    \"required\": true\n                },\n                \"tags\": [\n                    \"user\"\n                ],\n                \"responses\": {\n                    \"default\": {\n                        \"description\": \"successful operation\"\n                    }\n                },\n                \"operationId\": \"createUser\",\n                \"summary\": \"Create user\",\n                \"description\": \"This can only be done by the logged in user.\"\n            }\n        },\n        \"/user/createWithArray\": {\n            \"post\": {\n                \"requestBody\": {\n                    \"description\": \"List of user object\",\n                    \"content\": {\n                        \"*/*\": {\n                            \"schema\": {\n                                \"type\": \"array\",\n                                \"items\": {\n                                    \"$ref\": \"#/components/schemas/User\"\n                                }\n                            }\n                        }\n                    },\n                    \"required\": true\n                },\n                \"tags\": [\n                    \"user\"\n                ],\n                \"responses\": {\n                    \"default\": {\n                        \"description\": \"successful operation\"\n                    }\n                },\n                \"operationId\": \"createUsersWithArrayInput\",\n                \"summary\": \"Creates list of users with given input array\",\n                \"description\": \"\"\n            }\n        },\n        \"/user/createWithList\": {\n            \"post\": {\n                \"requestBody\": {\n                    \"description\": \"List of user object\",\n                    \"content\": {\n                        \"*/*\": {\n                            \"schema\": {\n                                \"type\": \"array\",\n                                \"items\": {\n                                    \"$ref\": \"#/components/schemas/User\"\n                                }\n                            }\n                        }\n                    },\n                    \"required\": true\n                },\n                \"tags\": [\n                    \"user\"\n                ],\n                \"responses\": {\n                    \"default\": {\n                        \"description\": \"successful operation\"\n                    }\n                },\n                \"operationId\": \"createUsersWithListInput\",\n                \"summary\": \"Creates list of users with given input array\",\n                \"description\": \"\"\n            }\n        },\n        \"/user/login\": {\n            \"get\": {\n                \"tags\": [\n                    \"user\"\n                ],\n                \"parameters\": [\n                    {\n                        \"name\": \"username\",\n                        \"description\": \"The user name for login\",\n                        \"schema\": {\n                            \"type\": \"string\"\n                        },\n                        \"in\": \"query\",\n                        \"required\": true\n                    },\n                    {\n                        \"name\": \"password\",\n                        \"description\": \"The password for login in clear text\",\n                        \"schema\": {\n                            \"type\": \"string\"\n                        },\n                        \"in\": \"query\",\n                        \"required\": true\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"headers\": {\n                            \"X-Rate-Limit\": {\n                                \"schema\": {\n                                    \"format\": \"int32\",\n                                    \"type\": \"integer\"\n                                },\n                                \"description\": \"calls per hour allowed by the user\"\n                            },\n                            \"X-Expires-After\": {\n                                \"schema\": {\n                                    \"format\": \"date-time\",\n                                    \"type\": \"string\"\n                                },\n                                \"description\": \"date in UTC when token expires\"\n                            }\n                        },\n                        \"content\": {\n                            \"application/xml\": {\n                                \"schema\": {\n                                    \"type\": \"string\"\n                                }\n                            },\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"type\": \"string\"\n                                }\n                            }\n                        },\n                        \"description\": \"successful operation\"\n                    },\n                    \"400\": {\n                        \"description\": \"Invalid username/password supplied\"\n                    }\n                },\n                \"operationId\": \"loginUser\",\n                \"summary\": \"Logs user into the system\",\n                \"description\": \"\"\n            }\n        },\n        \"/user/logout\": {\n            \"get\": {\n                \"tags\": [\n                    \"user\"\n                ],\n                \"responses\": {\n                    \"default\": {\n                        \"description\": \"successful operation\"\n                    }\n                },\n                \"operationId\": \"logoutUser\",\n                \"summary\": \"Logs out current logged in user session\",\n                \"description\": \"\"\n            }\n        },\n        \"/user/{username}\": {\n            \"get\": {\n                \"tags\": [\n                    \"user\"\n                ],\n                \"parameters\": [\n                    {\n                        \"name\": \"username\",\n                        \"description\": \"The name that needs to be fetched. Use user1 for testing. \",\n                        \"schema\": {\n                            \"type\": \"string\"\n                        },\n                        \"in\": \"path\",\n                        \"required\": true\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"content\": {\n                            \"application/xml\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/User\"\n                                }\n                            },\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/User\"\n                                }\n                            }\n                        },\n                        \"description\": \"successful operation\"\n                    },\n                    \"400\": {\n                        \"description\": \"Invalid username supplied\"\n                    },\n                    \"404\": {\n                        \"description\": \"User not found\"\n                    }\n                },\n                \"operationId\": \"getUserByName\",\n                \"summary\": \"Get user by user name\",\n                \"description\": \"\"\n            },\n            \"put\": {\n                \"requestBody\": {\n                    \"description\": \"Updated user object\",\n                    \"content\": {\n                        \"*/*\": {\n                            \"schema\": {\n                                \"$ref\": \"#/components/schemas/User\"\n                            }\n                        }\n                    },\n                    \"required\": true\n                },\n                \"tags\": [\n                    \"user\"\n                ],\n                \"parameters\": [\n                    {\n                        \"name\": \"username\",\n                        \"description\": \"name that need to be updated\",\n                        \"schema\": {\n                            \"type\": \"string\"\n                        },\n                        \"in\": \"path\",\n                        \"required\": true\n                    }\n                ],\n                \"responses\": {\n                    \"400\": {\n                        \"description\": \"Invalid user supplied\"\n                    },\n                    \"404\": {\n                        \"description\": \"User not found\"\n                    }\n                },\n                \"operationId\": \"updateUser\",\n                \"summary\": \"Updated user\",\n                \"description\": \"This can only be done by the logged in user.\"\n            },\n            \"delete\": {\n                \"tags\": [\n                    \"user\"\n                ],\n                \"parameters\": [\n                    {\n                        \"name\": \"username\",\n                        \"description\": \"The name that needs to be deleted\",\n                        \"schema\": {\n                            \"type\": \"string\"\n                        },\n                        \"in\": \"path\",\n                        \"required\": true\n                    }\n                ],\n                \"responses\": {\n                    \"400\": {\n                        \"description\": \"Invalid username supplied\"\n                    },\n                    \"404\": {\n                        \"description\": \"User not found\"\n                    }\n                },\n                \"operationId\": \"deleteUser\",\n                \"summary\": \"Delete user\",\n                \"description\": \"This can only be done by the logged in user.\"\n            }\n        }\n    },\n    \"components\": {\n        \"schemas\": {\n            \"Order\": {\n                \"type\": \"object\",\n                \"properties\": {\n                    \"id\": {\n                        \"format\": \"int64\",\n                        \"type\": \"integer\"\n                    },\n                    \"petId\": {\n                        \"format\": \"int64\",\n                        \"type\": \"integer\"\n                    },\n                    \"quantity\": {\n                        \"format\": \"int32\",\n                        \"type\": \"integer\"\n                    },\n                    \"shipDate\": {\n                        \"format\": \"date-time\",\n                        \"type\": \"string\"\n                    },\n                    \"status\": {\n                        \"description\": \"Order Status\",\n                        \"enum\": [\n                            \"placed\",\n                            \"approved\",\n                            \"delivered\"\n                        ],\n                        \"type\": \"string\"\n                    },\n                    \"complete\": {\n                        \"default\": false,\n                        \"type\": \"boolean\"\n                    }\n                },\n                \"xml\": {\n                    \"name\": \"Order\"\n                }\n            },\n            \"Category\": {\n                \"type\": \"object\",\n                \"properties\": {\n                    \"id\": {\n                        \"format\": \"int64\",\n                        \"type\": \"integer\"\n                    },\n                    \"name\": {\n                        \"type\": \"string\"\n                    }\n                },\n                \"xml\": {\n                    \"name\": \"Category\"\n                }\n            },\n            \"User\": {\n                \"type\": \"object\",\n                \"properties\": {\n                    \"id\": {\n                        \"format\": \"int64\",\n                        \"type\": \"integer\"\n                    },\n                    \"username\": {\n                        \"type\": \"string\"\n                    },\n                    \"firstName\": {\n                        \"type\": \"string\"\n                    },\n                    \"lastName\": {\n                        \"type\": \"string\"\n                    },\n                    \"email\": {\n                        \"type\": \"string\"\n                    },\n                    \"password\": {\n                        \"type\": \"string\"\n                    },\n                    \"phone\": {\n                        \"type\": \"string\"\n                    },\n                    \"userStatus\": {\n                        \"format\": \"int32\",\n                        \"description\": \"User Status\",\n                        \"type\": \"integer\"\n                    }\n                },\n                \"xml\": {\n                    \"name\": \"User\"\n                }\n            },\n            \"Tag\": {\n                \"type\": \"object\",\n                \"properties\": {\n                    \"id\": {\n                        \"format\": \"int64\",\n                        \"type\": \"integer\"\n                    },\n                    \"name\": {\n                        \"type\": \"string\"\n                    }\n                },\n                \"xml\": {\n                    \"name\": \"Tag\"\n                }\n            },\n            \"Pet\": {\n                \"required\": [\n                    \"name\",\n                    \"photoUrls\"\n                ],\n                \"type\": \"object\",\n                \"properties\": {\n                    \"id\": {\n                        \"format\": \"int64\",\n                        \"type\": \"integer\"\n                    },\n                    \"category\": {\n                        \"$ref\": \"#/components/schemas/Category\"\n                    },\n                    \"name\": {\n                        \"type\": \"string\",\n                        \"example\": \"doggie\"\n                    },\n                    \"photoUrls\": {\n                        \"type\": \"array\",\n                        \"items\": {\n                            \"type\": \"string\"\n                        },\n                        \"xml\": {\n                            \"name\": \"photoUrl\",\n                            \"wrapped\": true\n                        }\n                    },\n                    \"tags\": {\n                        \"type\": \"array\",\n                        \"items\": {\n                            \"$ref\": \"#/components/schemas/Tag\"\n                        },\n                        \"xml\": {\n                            \"name\": \"tag\",\n                            \"wrapped\": true\n                        }\n                    },\n                    \"status\": {\n                        \"description\": \"pet status in the store\",\n                        \"enum\": [\n                            \"available\",\n                            \"pending\",\n                            \"sold\"\n                        ],\n                        \"type\": \"string\"\n                    }\n                },\n                \"xml\": {\n                    \"name\": \"Pet\"\n                }\n            },\n            \"ApiResponse\": {\n                \"type\": \"object\",\n                \"properties\": {\n                    \"code\": {\n                        \"format\": \"int32\",\n                        \"type\": \"integer\"\n                    },\n                    \"type\": {\n                        \"type\": \"string\"\n                    },\n                    \"message\": {\n                        \"type\": \"string\"\n                    }\n                }\n            }\n        },\n        \"securitySchemes\": {\n            \"petstore_auth\": {\n                \"flows\": {\n                    \"implicit\": {\n                        \"authorizationUrl\": \"http://petstore.swagger.io/oauth/dialog\",\n                        \"scopes\": {\n                            \"write:pets\": \"modify pets in your account\",\n                            \"read:pets\": \"read your pets\"\n                        }\n                    }\n                },\n                \"type\": \"oauth2\"\n            },\n            \"api_key\": {\n                \"type\": \"basic\",\n                \"name\": \"api_key\",\n                \"in\": \"header\"\n            }\n        }\n    },\n    \"tags\": [\n        {\n            \"name\": \"pet\",\n            \"description\": \"Everything about your Pets\",\n            \"externalDocs\": {\n                \"description\": \"Find out more\",\n                \"url\": \"http://swagger.io\"\n            }\n        },\n        {\n            \"name\": \"store\",\n            \"description\": \"Access to Petstore orders\"\n        },\n        {\n            \"name\": \"user\",\n            \"description\": \"Operations about user\",\n            \"externalDocs\": {\n                \"description\": \"Find out more about our store\",\n                \"url\": \"http://swagger.io\"\n            }\n        }\n    ],\n    \"externalDocs\": {\n        \"description\": \"Find out more about Swagger\",\n        \"url\": \"http://swagger.io\"\n    }\n}",
			"canonicalURL": "/github.com/syndesisio/syndesis@418fddc6c748608bc7257fadc2f2caddfbec16ad/-/blob/app/server/api-generator/src/test/resources/openapi/v3/invalid/invalid-field.petstore.json",
			"externalURLs": [
				{
					"url": "https://github.com/syndesisio/syndesis/blob/418fddc6c748608bc7257fadc2f2caddfbec16ad/app/server/api-generator/src/test/resources/openapi/v3/invalid/invalid-field.petstore.json",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "parse: parse spec: parse path items: path \"/pet/{petId}\": get: operation \"getPetById\": security: parse security scheme \"api_key\": basic: at app/server/api-generator/src/test/resources/openapi/v3/invalid/invalid-field.petstore.json:1051:25: unknown security scheme type \"basic\""
}