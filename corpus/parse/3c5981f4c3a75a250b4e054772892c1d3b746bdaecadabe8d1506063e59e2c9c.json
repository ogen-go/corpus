{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/opengeospatial/ogcapi-maps"
		},
		"file": {
			"name": "ogc-api-maps.yaml",
			"size": 0,
			"path": "openapi/swaggerHubUnresolved/ogc-api-maps.yaml",
			"byteSize": 11127,
			"content": "openapi: 3.0.2\n# Revisions:\n# 2019-07-14 Reparated from a more complex domains document\n#\ninfo:\n  title: OGC API Maps Building Blocks\n  description: |-\n    Common components used in the OGC API maps standards.\n\n    This document is also available in [GitHub](https://github.com/opengeospatial/OGC-API-Map-Tiles/tree/master/standard/openapi). \n\n  version: \"1.0.0\"\n  contact:\n    name: Joan Maso\n    email: joan.maso@uab.cat\n  license:\n    name: OGC License\n    url: 'https://raw.githubusercontent.com/opengeospatial/OGC-API-Map-Tiles/master/LICENSE'\n\n\n\ncomponents:\n  schemas:\n    collection-link:\n      #This element is not directly linkable by other APIs because they probably will need to add other links to other resource types. Instead, it would be copied and enriched with more examples.\n      type: object\n      required:\n        - links\n      properties:\n        links:\n          type: array\n          items:\n            $ref: 'https://api.swaggerhub.com/domains/UAB-CREAF/ogc-api-common/1.0.0#/components/schemas/link'\n          example:\n            - href: 'http://example.com/collections/buildings?f=json'\n              rel: self\n              type: 'application/json'\n              title: This document\n            - href: 'http://example.com/concepts/buildings.html'\n              rel: describedby\n              type: text/html'\n            - href: 'http://data.example.com/collections/buildings/map'\n              rel: 'http://www.opengis.net/def/rel/OGC/1.0/map'\n              type: 'application/json'\n    # crsLibray:\n        #this is just an idea for preventing long lists of CRSs. We have to see if there is consensus adopting it.\n        #  type: string\n        #  description: |-\n        #    Reference to a CRS library giving support to a comprehensive list of CRSs that are not advertised but supported anyway.\n        #  example: PROJ4G            \n    crsSpatialExtents:\n      type: array\n      description: |-\n        Available CRSs and minimum spatial extent surrounding the map\n      items:\n        $ref: '#/components/schemas/crsSpatialExtent'\n      example:\n        - crs: 'http://www.opengis.net/def/crs/OGC/1.3/CRS84'\n          bbox:\n          - - -180\n            - -90\n            - 180\n            - 90\n        - crs: 'http://www.opengis.net/def/crs/EPSG/0/3395'\n          bbox:\n          - - -20037508.3427892\n            - -20037508.3427892\n            - 20037508.3427892\n            - 20037508.3427892\n    crsSpatialExtent:\n      description: |-\n        The spatial extent of the element in the collection.\n      type: object\n      # Note that SpatialExtent in Common has bbox as required.\n      required: \n        - crs\n      properties:\n        crs:\n          $ref: 'https://api.swaggerhub.com/domains/UAB-CREAF/ogc-api-common/1.0.0#/components/schemas/crs'\n        bbox:\n          $ref: 'https://api.swaggerhub.com/domains/UAB-CREAF/ogc-api-common/1.0.0#/components/schemas/bbox'\n    map-metadata:\n      type: object\n      properties:\n        # A WMS layer definition has id, title, description, keyword that are already defined in OWS Common\n        # wgs84BoundingBox is the 'extent' that is already defined in OWS Common\n        # BoundingBox is the crsSpatialExtents that is already defined in OWS Common\n        # For the moment we will assume that maps can only be produced in the crs's advertised by the collection in the common part.\n        defaultStyle:\n          $ref: 'https://api.swaggerhub.com/domains/UAB-CREAF/ogc-api-map-styles/1.0.0#/components/schemas/default-style'\n        wgs84SpatialExtent:\n          $ref: 'https://api.swaggerhub.com/domains/UAB-CREAF/ogc-api-common/1.0.0#/components/schemas/bbox'\n        crsSpatialExtents:\n          $ref: '#/components/schemas/crsSpatialExtents'\n        supportedCRSs:\n          type: array\n          items: \n            type: string\n        minScaleDenominador:\n          type: number\n          description: |-\n            Minimum scale denominator (inclusive) for which it is appropriate to generate a map of this collection. Requests outside this interval will return an HTTP 404. If it is not present we will assume there is no limit.\n          example: 10\n        maxScaleDenominador:\n          type: number\n          description: |-\n            Maximum scale denominator (inclusive) for which it is appropriate to generate a map of this collection. Requests outside this interval will return an HTTP 404 If it is not present we will assume there is no limit.\n          example: 10000000\n        minCellSize:\n          type: number\n          description: |-\n            Minimum cell size (inclusive). If it is not present we will assume there is no limit.\n        maxCellSize:\n          type: number\n          description: |-\n            Maximum cell size (inclusive). If it is not present we will assume there is no limit.\n          example: 10000000        #spatialResolution (resx) this should be part of the common metadata but currently is not.\n        recomendedFormat:\n          type: string\n          description: |-\n              Recommended output formats for a map request. Depending of the nature of the data, a format might be better than another. Categorical data looks better in a PNG but continuos data and pictures are smaller a JPEG. The map operation details all available formats for the OGC API maps. In contrast, this is the better one for this type of information. It would be one of the supported for the map operation\n          example: 'image/jpeg'\n        #queryable is not included here because it is indicated by a link with 'rel':'info' but I'm not sure it is the right decision.\n        #cascaded is removed becasue the group believed it has no practical use.          \n        #opaque: this is rarely useful and we prefer not to includ it in this one. Indicates whether the map data represents features that probably do not completely fill space shows the background opaque (true) or transparent(false).\n        #noSubsets: This is a very old paramter in WMS and I recommend to deprecate it. Indicates whether the server can produce a map that is a subset of the full bounding box.\n        #fixedWidth: We agree this is solved by the \"tiles API\" now and we do not what this here\n        #fixedHeight: We agree this is solved by the \"tiles API\" now and we do not what this here\n        maxWidth:\n          type: number\n          description: |-\n            Maximum width and height values that a client is permitted to include in bbox subset operation.  If absent the server imposes no limit.\n          example: 2048\n        maxHeight: \n          type: number\n          description: |-\n            Maximum width and height values that a client is permitted to include in bbox subset operation.  If absent the server imposes no limit.\n          example: 2048            \n    geodata-map-metadata:\n      allOf:\n      - $ref: '#/components/schemas/map-metadata'\n    dataset-map-metadata:\n      allOf:\n      - $ref: '#/components/schemas/map-metadata'      \n    collection-patch:\n      type: object\n      properties:\n        styles:\n          $ref: 'https://api.swaggerhub.com/domains/UAB-CREAF/ogc-api-map-styles/1.0.0#/components/schemas/style-set'\n        defaultStyle:\n          type: string\n          nullable: true\n          description: |-\n            the style id of a recommended default style to use for this collection\n          example: 'topographic'\n  responses:\n    tiles:\n      description: |-\n        Description of the tiles.\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/map-metadata'\n  parameters:\n    bbox:\n      name: bbox\n      in: query\n      description: |-\n        Bounding box of the rendered map. The bounding box is provided as four numbers.\n\n        * Lower left corner, coordinate axis 1\n        * Lower left corner, coordinate axis 2\n        * Upper right corner, coordinate axis 1\n        * Upper right corner, coordinate axis 2\n\n        coordinate reference system (and axis order) of the four values is specified in the 'crs' parametre. It the 'crs' parametres is CRS84, the sequence is minimum longitude, minimum latitude, maximum longitude and maximum latitude.\n        However, in cases where the box spans the antimeridian the first value (west-most box edge) is larger than the third value (east-most box edge).\n      required: false\n      schema:\n        type: array\n        minItems: 4\n        maxItems: 4\n        items:\n          type: number\n          format: double\n      style: form\n      explode: false\n    crs:\n      name: crs\n      in: query\n      description: A URI of the coordinate reference system of the bbox and the map subset response. A list of all available CRS values can be found under the map description resource.\n      required: false\n      schema:\n        type: string\n        default: 'http://www.opengis.net/def/crs/OGC/1.3/CRS84'\n      example:\n        'http://www.opengis.net/def/crs/OGC/1.3/CRS84'  \n    mapId:\n      name: mapId\n      in: path\n      description: Local identifier of a specific map created with a post operation\n      required: true\n      style: simple\n      explode: false\n      schema:\n        type: string\n    crsId:\n      name: crsId\n      in: path\n      description: |-\n        Local identifier of a specific CRS. A list of all available CRSIds can be found under the /CRS path. The default CRS is WGS 84.\n      required: true\n      schema:\n        type: string\n      example: CRS84\n    width:\n      name: width\n      in: query\n      description: |-\n        Width of the viewport to present the response (the map subset).\n      required: false\n      style: form\n      explode: false\n      schema:\n        type: number\n    height:\n      name: height\n      in: query\n      description: |-\n        Height of the viewport to present the response (the map subset).\n      required: false\n      style: form\n      explode: false\n      schema:\n        type: number\n    cellSize:\n      name: cell-size\n      in: query\n      description:\n        cell size of the viewport to present the response in millimeters.\n      required: false\n      style: form\n      explode: false\n      schema:\n        type: number\n    transparent:\n      name: transparent\n      in: query\n      description: |-\n        Background transparency of map (default=true).\n      required: false\n      style: form\n      explode: false\n      schema:\n        type: boolean\n        default: true\n    bgcolor:\n      name: bgcolor\n      in: query\n      description: |-\n        Hexadecimal red-green-blue[-alpha] color value for the background color (default=0xFFFFFF). The first and second characters specify a the intensity of red, the third and forth characters specify a the intensity of green, and the fifth and sixth two characters specify a the intensity of blue. Optionally the seventh and eighth characters specify the level of opacity (alpha channel) where 00 is completely transparent and FF is completely opaque. If opacity is not specified \"opaque\" opacity is assumed.\n      required: false\n      style: form\n      explode: false\n      schema:\n        type: string\n        default: 0xFFFFFF"
		}
	},
	"Error": "parse: parse spec: parse components: parameters: \"bgcolor\": schema: parse default: expected type \"string\", got \"number\""
}