{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/arXiv/arxiv-auth"
		},
		"file": {
			"name": "openapi.yaml",
			"size": 0,
			"path": "registry/schema/openapi.yaml",
			"byteSize": 6654,
			"content": "openapi: \"3.0.0\"\ninfo:\n  version: \"0.1\"\n  title: \"arXiv API client registry\"\n  description: |\n    The arXiv API client registry provides authn/z workflows for API clients.\n    Currently supports OAuth2 client credentials and authorization code\n    (three-legged) grants.\n  contact:\n    name: \"arXiv API Team\"\n    email: nextgen@arxiv.org\n  license:\n    name: MIT\nservers:\n  - url: https://api.arxiv.org/auth\n    description: Metadata API endpoint.\n\npaths:\n  /token:\n    post:\n      operationId: getAccessToken\n      summary: Request a new access token, using one of the supported grants.\n      description: |\n        This endpoint is used in both two-legged and three-legged auth\n        workflows.\n\n        ## Example request\n\n        ```bash\n        curl -XPOST \\\n          --data \"client_id=[YOUR CLIENT ID]\u0026client_secret=[YOUR CLIENT SECRET]\u0026grant_type=client_credentials\" \\\n          https://api.arxiv.org/auth/token\n        ```\n\n        ## Example response\n\n        ```json\n        {\"access_token\": \"[YOUR ACCESS TOKEN]\", \"expires_in\": 864000, \"token_type\": \"Bearer\"}\n        ```\n\n\n      requestBody:\n        content:\n          application/x-www-form-urlencoded:\n            schema:\n              type: object\n              properties:\n                client_id:\n                  type: string\n                client_secret:\n                  type: string\n                grant_type:\n                  type: string\n                  enum: [client_credentials, authorization_code]\n                  description: |\n                    Grant type for the access token. The client must be\n                    authorized to use this grant type.\n                code:\n                  type: string\n                  description: |\n                    In authorization_code grant, this is the authorization code\n                    passed as a GET parameter in the user redirect. Not used\n                    in client_credentials grant.\n              required:\n                - client_id\n                - client_secret\n                - grant_type\n      responses:\n        '200':\n          description: The requested token is granted.\n          content:\n            application/json:\n              schema:\n                $ref: 'resources/Token.json'\n        '400':\n          description: |\n            The request could not be handled given the provided data. This may\n            be due to a missing parameter, or insufficient privileges.\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  error:\n                    type: \"string\"\n                    description: \"Details about the error.\"\n  /authorize:\n    get:\n      operationId: reviewAuthorizationRequest\n      summary: |\n        For use in a three-legged authorization workflow. Displays information\n        about the scopes requested of an end user by a client.\n      parameters:\n        - in: query\n          name: client_id\n          schema:\n            type: integer\n          description: |\n            Unique identifier for the client requesting authorization.\n        - in: query\n          name: response_type\n          schema:\n            type: string\n            enum: [code]\n        - in: query\n          name: redirect_uri\n          schema:\n            type: string\n            format: uri\n          description: |\n            The URL to which the end user should be redirected upon authorizing\n            the client's request. This should match the redirect URI registered\n            for the client.\n        - in: query\n          name: scope\n          schema:\n            type: string\n          description:\n            Authorization scopes being requested by the API client for the\n            end user. Space delimited.\n      responses:\n        '200':\n          description: |\n            Page showing the authorization scopes being requested by the\n            client, and asking the user to grant or deny the request.\n          content:\n            text/html:\n              schema:\n                type: string\n\n        '400':\n          description: |\n            Error page indicating to the user that something isn't right about\n            the authorization request. This may be because the client is not\n            authorized for the authorization_code grant type, lacks the right\n            to request the specified authorization scopes, or some other odd\n            situation.\n          content:\n            text/html:\n              schema:\n                type: string\n\n    post:\n      operationId: confirmAuthorizationRequest\n      summary: |\n        For use in a three-legged authorization workflow. Client authorizes\n        the requested scopes for the API client.\n      requestBody:\n        content:\n          application/x-www-form-urlencoded:\n            schema:\n              type: object\n              properties:\n                client_id:\n                  type: integer\n                  description: |\n                    Unique identifier for the client requesting authorization.\n                response_type:\n                  type: string\n                  enum: [code]\n                redirect_uri:\n                  type: string\n                  format: uri\n                  description: |\n                    The URL to which the end user should be redirected upon\n                    authorizing the client's request. This should match the\n                    redirect URI registered for the client.\n                scope:\n                  type: string\n                  description:\n                    Authorization scopes being requested by the API client for\n                    the end user. Space delimited.\n                confirm:\n                  type: string\n                  enum: [ok]\n\n      responses:\n        '302':\n          description: |\n            Redirects the user to the API client's redirect endpooint along\n            with an authorization code in the query parameters.\n          headers:\n            Location:\n              schema:\n                type: string\n                format: uri\n              description: Redirect URI for the API client.\n\n        '400':\n          description: |\n            Error page indicating to the user that something isn't right about\n            the authorization request. This may be because the client is not\n            authorized for the authorization_code grant type, lacks the right\n            to request the specified authorization scopes, or some other odd\n            situation.\n          content:\n            text/html:\n              schema:\n                type: string\n"
		}
	},
	"Error": "parse: parse spec: parse operations: paths: /token: post: operation \"getAccessToken\": responses: 200: content: \"application/json\": schema: parse schema: resolve \"resources/Token.json\": find schema: external base \"resources/Token.json\" is not supported"
}