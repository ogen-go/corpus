{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/milliHQ/terraform-aws-next-js"
		},
		"file": {
			"name": "schema.yaml",
			"size": 0,
			"path": "packages/api/schema.yaml",
			"byteSize": 7231,
			"content": "# OpenAPI 3.0 schema for the API endpoints\n\nopenapi: 3.1.0\n\ninfo:\n  title: MilliVolt deployment API\n  version: 1.0.0\n\ncomponents:\n  securitySchemes:\n    sigv4:\n      type: apiKey\n      in: header\n      name: Authorization\n      'x-amazon-apigateway-authtype': 'awsSigv4'\n\n  schemas:\n    # Utilities\n    Error:\n      type: object\n      properties:\n        status:\n          type: number\n        code:\n          type: string\n        message:\n          type: string\n      required:\n        - status\n        - code\n\n    Pagination:\n      type: object\n      properties:\n        next:\n          type: string\n          nullable: true\n      required:\n        - next\n\n    # Entities\n    Alias:\n      type: object\n      properties:\n        id:\n          type: string\n        deployment:\n          type: string\n        createDate:\n          type: string\n      required:\n        - id\n        - deployment\n        - createDate\n\n    DeploymentStatus:\n      type: string\n      enum:\n        - INITIALIZED\n        - CREATE_IN_PROGRESS\n        - CREATE_COMPLETE\n        - CREATE_FAILED\n        - FINISHED\n        - DESTROY_IN_PROGRESS\n        - DESTROY_FAILED\n        - DESTROY_REQUESTED\n\n    DeploymentInitialized:\n      type: object\n      properties:\n        id:\n          type: string\n        status:\n          $ref: '#/components/schemas/DeploymentStatus'\n        uploadUrl:\n          type: string\n        uploadAttributes:\n          type: object\n      required:\n        - id\n        - status\n        - uploadUrl\n        - uploadAttributes\n\n    Deployment:\n      type: object\n      properties:\n        id:\n          type: string\n        status:\n          $ref: '#/components/schemas/DeploymentStatus'\n        createDate:\n          type: string\n          format: date-time\n        deploymentAlias:\n          type: string\n      required:\n        - id\n        - status\n        - createDate\n\n  responses:\n    NotFound:\n      description: The specified resource was not found.\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/Error'\n    InvalidParamsError:\n      description: The validation of the parameters failed.\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/Error'\n\nsecurity:\n  - sigv4: []\n\npaths:\n  /aliases:\n    get:\n      summary: List all aliases associated with a given deployment, sorted by its creation date DESC.\n      parameters:\n        - in: query\n          name: deploymentId\n          schema:\n            type: string\n          required: true\n          description: Only list aliases that are associated with the specified deployment.\n        - in: query\n          name: startAt\n          schema:\n            type: string\n          description: Beginning index from where to get the aliases.\n      responses:\n        '200':\n          description: Successful response.\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  metadata:\n                    $ref: '#/components/schemas/Pagination'\n                  items:\n                    type: array\n                    items:\n                      $ref: '#/components/schemas/Alias'\n                required:\n                  - metadata\n                  - items\n        '404':\n          $ref: '#/components/responses/NotFound'\n        '400':\n          $ref: '#/components/responses/InvalidParamsError'\n\n    post:\n      summary: Create a new alias or update an existing alias.\n      requestBody:\n        description: Request payload.\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                alias:\n                  type: string\n                target:\n                  type: string\n                override:\n                  type: boolean\n              required:\n                - alias\n                - target\n      responses:\n        '201':\n          description: Successful response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Alias'\n        '400':\n          $ref: '#/components/responses/InvalidParamsError'\n\n  /aliases/{hostname}/{basePath}:\n    delete:\n      summary: Request a deployment by its Id.\n      parameters:\n        - in: path\n          name: hostname\n          schema:\n            type: string\n          required: true\n          description: The hostname of the alias that should be deleted.\n        - in: path\n          name: basePath\n          schema:\n            type: string\n          description: The basePath of the alias that should be deleted. If not present, defaults to `/`.\n      responses:\n        '204':\n          description: Successful response.\n        '400':\n          $ref: '#/components/responses/InvalidParamsError'\n        '404':\n          $ref: '#/components/responses/NotFound'\n\n  /deployments:\n    get:\n      summary: List all deployments sorted by its creation date DESC.\n      parameters:\n        - in: query\n          name: startAt\n          schema:\n            type: string\n          description: Beginning index from where to get the deployments.\n      responses:\n        '200':\n          description: Successful response.\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  metadata:\n                    $ref: '#/components/schemas/Pagination'\n                  items:\n                    type: array\n                    items:\n                      $ref: '#/components/schemas/Deployment'\n                required:\n                  - metadata\n                  - items\n\n    post:\n      summary: Initializes a new deployment and creates a upload link where the deployment package can be uploaded to.\n      responses:\n        '201':\n          description: Successful response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DeploymentInitialized'\n\n  /deployments/{deploymentId}:\n    get:\n      summary: Request a deployment by its Id.\n      parameters:\n        - in: path\n          name: deploymentId\n          schema:\n            type: string\n          required: true\n          description: The id of the deployment to get.\n      responses:\n        '200':\n          description: Successful response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Deployment'\n        '404':\n          $ref: '#/components/responses/NotFound'\n    delete:\n      summary: Delete a single deployment by its Id.\n      parameters:\n        - in: path\n          name: deploymentId\n          schema:\n            type: string\n          required: true\n          description: The id of the deployment to delete.\n      responses:\n        '200':\n          description: Deletion successfully requested.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Deployment'\n        '204':\n          description: Successful deletion.\n        '400':\n          $ref: '#/components/responses/InvalidParamsError'\n",
			"canonicalURL": "/github.com/milliHQ/terraform-aws-next-js@f6fc50702f6a01319ac2f7adc7a80a91ebee7225/-/blob/packages/api/schema.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/milliHQ/terraform-aws-next-js/blob/f6fc50702f6a01319ac2f7adc7a80a91ebee7225/packages/api/schema.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "parse: parse spec: parse path items: path \"/aliases/{hostname}/{basePath}\": delete: parameters: parse parameter \"basePath\": at 1:3234: path parameters must be required"
}