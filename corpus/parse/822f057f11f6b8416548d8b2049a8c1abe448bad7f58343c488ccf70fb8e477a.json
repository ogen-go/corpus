{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/elixir-cloud-aai/TEStribute"
		},
		"file": {
			"name": "schema.TEStribute.openapi.yaml",
			"size": 0,
			"path": "TEStribute/specs/schema.TEStribute.openapi.yaml",
			"byteSize": 10043,
			"content": "openapi: 3.0.0\ninfo:\n  title: TEStribute OpenAPI specification\n  contact:\n    name: ELIXIR Cloud \u0026 AAI group\n    email: alexander.kanitz@alumni.ethz.ch\n  license:\n    name: Apache 2.0\n    url: https://www.apache.org/licenses/LICENSE-2.0\n  version: 0.2.1\nservers:\n- url: /\npaths:\n  /rank-services:\n    post:\n      summary: |-\n        Given lists of known GA4GH TES and DRS instances and a\n        task's resource requirements, the endpoint returns\n        estimates for the task's total time and cost requirements\n        for every available combination of TES and DRS instances,\n        the latter separately for each input object. By passing a\n        rank mode, service combinations are ranked either by\n        increasing times, costs or combinations thereof.\n      operationId: rank_services\n      requestBody:\n        description: |-\n          Lists of GA4GH TES and DRS instances, task resource\n          requirements and the rank mode.\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Request'\n        required: true\n      responses:\n        200:\n          description: |-\n            All available combinations of TES and DRS instances,\n            the latter indicated separately for each input object,\n            rank-ordered according to the rank mode.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Response'\n        400:\n          description: The request is malformed.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        401:\n          description: The request is unauthorized.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        500:\n          description: An unexpected error occurred.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n      x-openapi-router-controller: controllers\ncomponents:\n  schemas:\n    AccessUris:\n      required:\n      - tes_uri\n      type: object\n      properties:\n        tes_uri:\n          type: string\n          description: Access URI for the TES instance.\n          format: uri\n      additionalProperties: true\n      description: |-\n        Access URIs for a TES instance and, if available,\n        a task's input objects.\n      example:\n        tes_uri: https://://tes-1.service\n        input_object_1: https://object-store-1.org/object-1\n        input_object_2: https://object-store-2.org/object-2\n        input_object_3: https://object-store-3.org/object-3\n    Costs:\n      required:\n      - amount\n      - currency\n      type: object\n      properties:\n        amount:\n          type: number\n          description: Numeric value.\n          format: double\n        currency:\n          type: string\n          description: Currency/unit.\n          format: currency\n          enum:\n            - AUD\n            - BRL\n            - BTC\n            - CAD\n            - CHF\n            - CNH\n            - EUR\n            - GBP\n            - HKD\n            - INR\n            - KRW\n            - JPY\n            - MXN\n            - NOK\n            - NZD\n            - RUB\n            - SEK\n            - SGD\n            - TRY\n            - USD\n            - ZAR\n      description: Describes costs with a given value and currency.\n      example:\n        amount: 1000\n        currency: BTC\n    Error:\n      required:\n      - message\n      - reason\n      type: object\n      properties:\n        message:\n          type: string\n          description: |-\n            A human readable message providing more details about the error.\n          example:\n            Required parameter 'tes_uris' is missing.\n        reason:\n          type: string\n          description: |-\n            Unique identifier for this error, but *not* the HTTP response code\n            (e.g., name of exception).\n          example: ValueError\n      description: An individual error message.\n    ErrorResponse:\n      required:\n      - code\n      - errors\n      - message\n      type: object\n      properties:\n        code:\n          type: integer\n          description: HTTP status code (e.g., 400, 404).\n          format: int64\n          example: 400\n        errors:\n          type: array\n          description: List of associated errors and warnings.\n          items:\n            $ref: '#/components/schemas/Error'\n        message:\n          type: string\n          description: |-\n            A human readable message providing more details about the error.\n          example: Required parameter `tes_uris` is missing.\n      description: A response object for detailed error messages.\n    Request:\n      required:\n      - resource_requirements\n      - tes_uris\n      type: object\n      properties:\n        object_ids:\n          $ref: '#/components/schemas/Strings'\n          description: DRS IDs of objects required by the task.\n        drs_uris:\n          $ref: '#/components/schemas/Uris'\n          description: |-\n            URIs of known DRS instances that objects may be read from\n            or written to.\n        mode:\n          description: |-\n            Mode with which service combinations are ranked. Services\n            can be ranked by either 'cost', 'time' or both. For the latter,\n            specify a number between 0 and 1, with the boundaries\n            representing weights at which services are ranked entirely\n            by cost and time, respectively. It is also possible to\n            randomize rankings (specify 'random' or -1).\n          default: 0.5\n          example: random\n          oneOf:\n          - maximum: 1\n            minimum: -1\n            type: integer\n          - maximum: 1\n            exclusiveMaximum: true\n            minimum: 0\n            exclusiveMinimum: true\n            type: number\n          - type: string\n            enum:\n            - cost\n            - random\n            - time\n        resource_requirements:\n          $ref: '#/components/schemas/ResourceRequirements'\n        tes_uris:\n          $ref: '#/components/schemas/Uris'\n          description: |-\n            URIs of known TES instances that the task may be computed on.\n      description: Request schema describing the endpoint's input.\n    Response:\n      required:\n      - service_combinations\n      - warnings\n      type: object\n      properties:\n        service_combinations:\n          type: array\n          items:\n            $ref: '#/components/schemas/ServiceCombination'\n        warnings:\n          type: array\n          description: |-\n            Warning messages providing details about potentially serious issues\n            that arose during execution.\n          example:\n          - DRS https://drs-1.service could not be accessed.\n          - DRS https://drs-2.service could not be accessed.\n          - TES https://tes-1.service could not be accessed.\n          items:\n            type: string\n          default: []\n      description: Response schema describing the endpoint's output.\n    ResourceRequirements:\n      required:\n      - cpu_cores\n      - disk_gb\n      - execution_time_sec\n      - ram_gb\n      type: object\n      properties:\n        cpu_cores:\n          type: integer\n          description: Requested number of CPUs.\n          format: int64\n        disk_gb:\n          type: number\n          description: Requested disk size in gigabytes (GB).\n          format: double\n        execution_time_sec:\n          type: integer\n          description: Requested execution time in seconds (s).\n          format: int64\n        preemptible:\n          type: boolean\n          description: |-\n            Is the task allowed to run on preemptible compute\n            instances (e.g. AWS Spot)?\n          format: boolean\n          default: true\n        ram_gb:\n          type: number\n          description: Requested RAM required in gigabytes (GB).\n          format: double\n        zones:\n          type: array\n          description: Request that the task be run in these compute zones.\n          items:\n            type: string\n          default: []\n      description: |-\n        Resources requested by a task.\n      example:\n        cpu_cores: 1\n        execution_time_sec: 60\n        preemptible: true\n        ram_gb: 4\n        disk_gb: 1\n        zones:\n        - zone-1\n        - zone-2\n    ServiceCombination:\n      required:\n      - access_uris\n      - cost_estimate\n      - rank\n      - time_estimate\n      type: object\n      properties:\n        access_uris:\n          $ref: '#/components/schemas/AccessUris'\n        cost_estimate:\n          $ref: '#/components/schemas/Costs'\n        rank:\n          type: integer\n          description: |-\n            Rank among all service combinations. Meaning of rank\n            dependent on rank mode.\n          format: int64\n          example: 1\n        time_estimate:\n          type: number\n          description: |-\n            Time estimated for the task to be completed, in seconds (s).\n          format: double\n      description: |-\n        A combination of TES and input DRS object access URIs\n        together with cost/time estimates and a rank.\n      example:\n        time_estimate: 300\n        cost_estimate:\n          amount: 1000\n          currency: BTC\n        access_uris:\n          tes_uri: https://://tes-1.service\n          input_object_1: https://object-store-1.org/object-1\n          input_object_2: https://object-store-2.org/object-2\n          input_object_3: https://object-store-3.org/object-3\n        rank: 1\n    Strings:\n      type: array\n      description: A generic array of strings.\n      example:\n      - string-1\n      - string-2\n      - string-3\n      items:\n        type: string\n      default: []\n    Uris:\n      type: array\n      description: An array of URIs.\n      example:\n      - https://url-1.info\n      - https://url-2.info\n      - https://url-3.info\n      items:\n        type: string\n        format: uri\n      default: []\n"
		}
	},
	"Error": "parse: parse spec: paths: /rank-services: post: operation \"rank_services\": requestBody: content: \"application/json\": parse schema: parse schema: resolve \"#/components/schemas/Request\": parse schema: property \"mode\": parse default: unexpected type: \"\""
}