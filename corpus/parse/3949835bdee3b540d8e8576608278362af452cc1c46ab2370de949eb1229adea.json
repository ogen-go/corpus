{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/hubject/opcp"
		},
		"file": {
			"name": "rcp.v1.json",
			"size": 0,
			"path": "OPCP-1.0.0/reference/rcp.v1.json",
			"byteSize": 22873,
			"content": "{\n  \"openapi\": \"3.0.0\",\n  \"info\": {\n    \"title\": \"RCP Interface Description\",\n    \"version\": \"1.1\",\n    \"description\": \"All stakeholders participating at the ecosystem can use these interfaces for receiving root certificates of other participants.\\n\\nThis service provides the following interfaces:\\n * Get all Root Certificates\\n * Get Root Certificate\\n * Add Root Certificate (Admin)\\n * Delete Root Certificate (Admin)\\n\\n\\n### Clients\\n\\nThe following client roles and systems access the RCP:\\n\\n  * Hubject PnC Ecosystem\\n  * OEMs\\n  * MOs\\n  * CPOs\\n  * PE-CA\\n\",\n    \"contact\": {\n      \"name\": \"Hubject GmbH\",\n      \"url\": \"https://hubject.com\",\n      \"email\": \"support@pnc.hubject.com\"\n    },\n    \"termsOfService\": \"https://www.hubject.com/pki/\",\n    \"license\": {\n      \"name\": \"Attribution-ShareAlike 4.0 International\",\n      \"url\": \"https://creativecommons.org/licenses/by-sa/4.0/\"\n    }\n  },\n  \"servers\": [],\n  \"paths\": {\n    \"/v1/root/rootCerts/{rootCertificateId}\": {\n      \"parameters\": [\n        {\n          \"schema\": {\n            \"type\": \"string\"\n          },\n          \"name\": \"rootCertificateId\",\n          \"in\": \"path\",\n          \"required\": true,\n          \"description\": \"The internal ID of the certificate in the RCP\"\n        }\n      ],\n      \"get\": {\n        \"summary\": \"getRootCert\",\n        \"tags\": [\n          \"root-certificate-pool-controller\",\n          \"CPO\",\n          \"MO\",\n          \"OEM\"\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"OK\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/GetRootCertResponseV1\"\n                },\n                \"examples\": {\n                  \"example\": {\n                    \"value\": {\n                      \"RootResponse\": {\n                        \"rootCertificateId\": \"b1b86334-7c74-4ccc-b78d-d4f773d3b559\",\n                        \"distinguishedName\": \"CN=V2G Root CA G2, DC=V2G, O=Hubject GmbH, C=DE\",\n                        \"caCertificate\": \"MIICTTCCAfOgAwIBAgIQALu7vBrEWtLf5bHYc8NchDAKBggqhkjOPQQDAjBSMQswCQYDVQQGEwJERTEVMBMGA1UEChMMSHViamVjdCBHbWJIMRMwEQYKCZImiZPyLGQBGRYDVjJHMRcwFQYDVQQDEw5WMkcgUm9vdCBDQSBHMjAgFw0xOTAxMTAxMjU0MjZaGA8yMDU5MDEwOTE5MDAwMFowUjELMAkGA1UEBhMCREUxFTATBgNVBAoTDEh1YmplY3QgR21iSDETMBEGCgmSJomT8ixkARkWA1YyRzEXMBUGA1UEAxMOVjJHIFJvb3QgQ0EgRzIwWTATBgcqhkjOPQIBBggqhkjOPQMBBwNCAAQI+uelZzJzESGTP2ZkDfA+W0+7O9y0a8gVl0nZnS0Ko5H71VG2aacoUc+GHRWmXhXiutfDwauh4MtMp32zj5/Ro4GoMIGlMBMGA1UdJQQMMAoGCCsGAQUFBwMJMA8GA1UdEwEB/wQFMAMBAf8wEQYDVR0OBAoECEW4QJ7hOPi/MEUGA1UdIAQ+MDwwOgYMKwYBBAGCxDUBAgEAMCowKAYIKwYBBQUHAgEWHGh0dHBzOi8vd3d3Lmh1YmplY3QuY29tL3BraS8wEwYDVR0jBAwwCoAIRbhAnuE4+L8wDgYDVR0PAQH/BAQDAgEGMAoGCCqGSM49BAMCA0gAMEUCIAQlk+aOKUGJk7KoZs2ASAYv1D0w/BqN9Dpg82X0bFb8AiEAi1dL21fLl/wbYs7LYYzpi4ELaXBzZxy4tAVwBy9pia4=\",\n                        \"commonName\": \"V2G Root CA G2\",\n                        \"rootAuthorityKeyIdentifier\": \"RbhAnuE4+L8=\",\n                        \"rootIssuerSerialNumber\": \"bbbbbc1ac45ad2dfe5b1d873c35c84\",\n                        \"validFrom\": \"2019-01-10T12:54:26Z\",\n                        \"validTo\": \"2059-01-09T19:00:00Z\",\n                        \"organizationName\": \"Hubject GmbH\",\n                        \"rootType\": \"V2G\",\n                        \"fingerprint\": \"a76ae4c5d00e06a967554511865bfa89e79590e8a61b5a71f9ce22e039d6c370\"\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"description\": \"Bad Request\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Error\"\n                }\n              }\n            }\n          },\n          \"401\": {\n            \"description\": \"Unauthorized\"\n          },\n          \"403\": {\n            \"description\": \"Forbidden\"\n          },\n          \"404\": {\n            \"description\": \"Not Found\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"./cps.v1.json#/components/schemas/Error\"\n                },\n                \"examples\": {\n                  \"ROOT NOT FOUND\": {\n                    \"value\": {\n                      \"errorMessages\": [\n                        \"Root certificate with the given ID is not found\"\n                      ],\n                      \"traceId\": \"c52fe6ad-1e39-4f6e-a0d0-e2d51aacf09f\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"500\": {\n            \"description\": \"Internal Server Error\"\n          },\n          \"502\": {\n            \"description\": \"Bad Gateway\"\n          },\n          \"503\": {\n            \"description\": \"Service Unavailable\"\n          }\n        },\n        \"description\": \"The getRootCert method can be used with the unique ID (UID) of a root certificate in the pool. The UID of each root certificate can be retreived through get all endpoint.\",\n        \"operationId\": \"getRootCert\",\n        \"security\": [\n          {\n            \"All_roles\": []\n          }\n        ]\n      },\n      \"delete\": {\n        \"summary\": \"deleteRootCa\",\n        \"operationId\": \"delete-v1-root-rootCerts-rootCertificateId\",\n        \"responses\": {\n          \"200\": {\n            \"description\": \"OK\"\n          },\n          \"400\": {\n            \"description\": \"Bad Request\"\n          },\n          \"401\": {\n            \"description\": \"Unauthorized\"\n          },\n          \"403\": {\n            \"description\": \"Forbidden\"\n          },\n          \"404\": {\n            \"description\": \"Not Found\"\n          },\n          \"500\": {\n            \"description\": \"Internal Server Error\"\n          }\n        },\n        \"security\": [\n          {\n            \"Admin\": []\n          }\n        ],\n        \"description\": \"This method is used by the Ecosystem Operator to delete Root CAs from the Root Certificate Pool. This should not be used by other parties than the Root pool operator to prevent possible wrong usage.\\nAlso 2 Factor authorization in the organization shall be considered\\n\\n\u003c!-- theme: warning --\u003e\\n\\n\u003e A successful delete operation triggers events to all ecosystem users and informs about the deleletion of this Root CA. Existing OEM-Prov Certs or MO-Contract Certs which rely on this root CA, might not any more usable.\"\n      }\n    },\n    \"/v1/root/rootCerts\": {\n      \"get\": {\n        \"summary\": \"getAllRootCerts\",\n        \"responses\": {\n          \"200\": {\n            \"description\": \"OK\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/GetAllRootCertsResponseV1\"\n                },\n                \"examples\": {\n                  \"example\": {\n                    \"value\": {\n                      \"RootCertificateCollection\": {\n                        \"rootCertificates\": [\n                          {\n                            \"rootCertificateId\": \"b1b86334-7c74-4ccc-b78d-d4f773d3b559\",\n                            \"distinguishedName\": \"CN=V2G Root CA G2, DC=V2G, O=Hubject GmbH, C=DE\",\n                            \"caCertificate\": \"MIICTTCCAfOgAwIBAgIQALu7vBrEWtLf5bHYc8NchDAKBggqhkjOPQQDAjBSMQswCQYDVQQGEwJERTEVMBMGA1UEChMMSHViamVjdCBHbWJIMRMwEQYKCZImiZPyLGQBGRYDVjJHMRcwFQYDVQQDEw5WMkcgUm9vdCBDQSBHMjAgFw0xOTAxMTAxMjU0MjZaGA8yMDU5MDEwOTE5MDAwMFowUjELMAkGA1UEBhMCREUxFTATBgNVBAoTDEh1YmplY3QgR21iSDETMBEGCgmSJomT8ixkARkWA1YyRzEXMBUGA1UEAxMOVjJHIFJvb3QgQ0EgRzIwWTATBgcqhkjOPQIBBggqhkjOPQMBBwNCAAQI+uelZzJzESGTP2ZkDfA+W0+7O9y0a8gVl0nZnS0Ko5H71VG2aacoUc+GHRWmXhXiutfDwauh4MtMp32zj5/Ro4GoMIGlMBMGA1UdJQQMMAoGCCsGAQUFBwMJMA8GA1UdEwEB/wQFMAMBAf8wEQYDVR0OBAoECEW4QJ7hOPi/MEUGA1UdIAQ+MDwwOgYMKwYBBAGCxDUBAgEAMCowKAYIKwYBBQUHAgEWHGh0dHBzOi8vd3d3Lmh1YmplY3QuY29tL3BraS8wEwYDVR0jBAwwCoAIRbhAnuE4+L8wDgYDVR0PAQH/BAQDAgEGMAoGCCqGSM49BAMCA0gAMEUCIAQlk+aOKUGJk7KoZs2ASAYv1D0w/BqN9Dpg82X0bFb8AiEAi1dL21fLl/wbYs7LYYzpi4ELaXBzZxy4tAVwBy9pia4=\",\n                            \"commonName\": \"V2G Root CA G2\",\n                            \"rootAuthorityKeyIdentifier\": \"RbhAnuE4+L8=\",\n                            \"rootIssuerSerialNumber\": \"bbbbbc1ac45ad2dfe5b1d873c35c84\",\n                            \"validFrom\": \"2019-01-10T12:54:26Z\",\n                            \"validTo\": \"2059-01-09T19:00:00Z\",\n                            \"organizationName\": \"Hubject GmbH\",\n                            \"rootType\": \"V2G\",\n                            \"fingerprint\": \"a76ae4c5d00e06a967554511865bfa89e79590e8a61b5a71f9ce22e039d6c370\"\n                          }\n                        ]\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"description\": \"Bad Request\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Error\"\n                }\n              }\n            }\n          },\n          \"401\": {\n            \"description\": \"Unauthorized\"\n          },\n          \"403\": {\n            \"description\": \"Forbidden\"\n          },\n          \"500\": {\n            \"description\": \"Internal Server Error\"\n          },\n          \"502\": {\n            \"description\": \"Bad Gateway\"\n          },\n          \"503\": {\n            \"description\": \"Service Unavailable\"\n          }\n        },\n        \"description\": \"For using getAllRootCert interface, no input is necessary. The Interface returns a list of all trusted root certificates available in this zone of the Ecosystem.\",\n        \"operationId\": \"getAllRootCerts\",\n        \"security\": [\n          {\n            \"All_roles\": []\n          }\n        ],\n        \"tags\": [\n          \"root-certificate-pool-controller\",\n          \"CPO\",\n          \"MO\",\n          \"OEM\"\n        ]\n      },\n      \"put\": {\n        \"summary\": \"saveRootCa\",\n        \"operationId\": \"put-v1-root-rootCerts\",\n        \"responses\": {\n          \"200\": {\n            \"description\": \"OK\"\n          }\n        },\n        \"description\": \"Expects a Root Certificate Object and the Root Type.\\nThis Function should not be called by other parties than the Root Certificate Pool operator to prevent possible wrong usage. Each Root CA in a Plug\u0026Charge Ecosystem must be audited/checked upfront. All parties of the Plug\u0026Charge Ecosystem need to relay on this audits of the different PKI Operators or consumers.\\nA 2 Factor authorization in the organization shall be considered to add a Root CA into the RCP\",\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"description\": \"\",\n                \"type\": \"object\",\n                \"x-examples\": {\n                  \"example-1\": {\n                    \"caCertificate\": \"MIICZzCCAg6gAwIBAgIBAzAKBggqhkjOPQQDAjCBiTEcMBoGA1UEAwwTUG5DLU9FTS1Sb290Q0EtMjAyMTETMBEGA1UECAwKUHJvZHVjdGlvbjETMBEGCgmSJomT8ixkARkWA1YyRzEeMBwGA1UECwwVUGx1ZyZDaGFyZ2VQS0ktUm9vdENBMRIwEAYDVQQKDAlCTVcgR3JvdXAxCzAJBgNVBAYTAkRFMCAXDTcwMDEwMTAwMDEwMFoYDzk5OTkxMjMxMjM1OTAwWjCBiTEcMBoGA1UEAwwTUG5DLU9FTS1Sb290Q0EtMjAyMTETMBEGA1UECAwKUHJvZHVjdGlvbjETMBEGCgmSJomT8ixkARkWA1YyRzEeMBwGA1UECwwVUGx1ZyZDaGFyZ2VQS0ktUm9vdENBMRIwEAYDVQQKDAlCTVcgR3JvdXAxCzAJBgNVBAYTAkRFMFkwEwYHKoZIzj0CAQYIKoZIzj0DAQcDQgAEwXKLlHGk2Jrs7HBSguqJcv+BR4wg1oDOxvHLWITpDkNij8LbdqnRZpXG5Mk5vm9IbZO83p6nhiMsGrQmDiipT6NjMGEwHQYDVR0OBBYEFBLSlPOxUFRgMlC0aABJ1eyy1lwyMB8GA1UdIwQYMBaAFBLSlPOxUFRgMlC0aABJ1eyy1lwyMA4GA1UdDwEB/wQEAwIBhjAPBgNVHRMBAf8EBTADAQH/MAoGCCqGSM49BAMCA0cAMEQCIF1juxH/4AqqfulSZ7H8o3kQLYst2EroP6FdkAg8KS9cAiA8ZYLhAnrCu0HH5fyUuZ/O29WYcX447vyiypA9YiuqNw==\",\n                    \"rootType\": \"OEM\"\n                  }\n                },\n                \"properties\": {\n                  \"caCertificate\": {\n                    \"type\": \"string\",\n                    \"example\": \"MIICTTCCAfOgAwIBAgIQALu7vBrEWtLf5bHYc8NchDAKBggqhkjOPQQDAjBSMQswCQYDVQQGEwJERTEVMBMGA1UEChMMSHViamVjdCBHbWJIMRMwEQYKCZImiZPyLGQBGRYDVjJHMRcwFQYDVQQDEw5WMkcgUm9vdCBDQSBHMjAgFw0xOTAxMTAxMjU0MjZaGA8yMDU5MDEwOTE5MDAwMFowUjELMAkGA1UEBhMCREUxFTATBgNVBAoTDEh1YmplY3QgR21iSDETMBEGCgmSJomT8ixkARkWA1YyRzEXMBUGA1UEAxMOVjJHIFJvb3QgQ0EgRzIwWTATBgcqhkjOPQIBBggqhkjOPQMBBwNCAAQI+uelZzJzESGTP2ZkDfA+W0+7O9y0a8gVl0nZnS0Ko5H71VG2aacoUc+GHRWmXhXiutfDwauh4MtMp32zj5/Ro4GoMIGlMBMGA1UdJQQMMAoGCCsGAQUFBwMJMA8GA1UdEwEB/wQFMAMBAf8wEQYDVR0OBAoECEW4QJ7hOPi/MEUGA1UdIAQ+MDwwOgYMKwYBBAGCxDUBAgEAMCowKAYIKwYBBQUHAgEWHGh0dHBzOi8vd3d3Lmh1YmplY3QuY29tL3BraS8wEwYDVR0jBAwwCoAIRbhAnuE4+L8wDgYDVR0PAQH/BAQDAgEGMAoGCCqGSM49BAMCA0gAMEUCIAQlk+aOKUGJk7KoZs2ASAYv1D0w/BqN9Dpg82X0bFb8AiEAi1dL21fLl/wbYs7LYYzpi4ELaXBzZxy4tAVwBy9pia4=\",\n                    \"maxLength\": 800\n                  },\n                  \"rootType\": {\n                    \"type\": \"string\",\n                    \"minLength\": 2,\n                    \"enum\": [\n                      \"MO\",\n                      \"V2G\",\n                      \"OEM\",\n                      \"PE\"\n                    ],\n                    \"maxLength\": 3\n                  }\n                },\n                \"required\": [\n                  \"caCertificate\",\n                  \"rootType\"\n                ]\n              },\n              \"examples\": {\n                \"example-1\": {\n                  \"value\": {\n                    \"caCertificate\": \"MIICTTCCAfOgAwIBAgIQALu7vBrEWtLf5bHYc8NchDAKBggqhkjOPQQDAjBSMQswCQYDVQQGEwJERTEVMBMGA1UEChMMSHViamVjdCBHbWJIMRMwEQYKCZImiZPyLGQBGRYDVjJHMRcwFQYDVQQDEw5WMkcgUm9vdCBDQSBHMjAgFw0xOTAxMTAxMjU0MjZaGA8yMDU5MDEwOTE5MDAwMFowUjELMAkGA1UEBhMCREUxFTATBgNVBAoTDEh1YmplY3QgR21iSDETMBEGCgmSJomT8ixkARkWA1YyRzEXMBUGA1UEAxMOVjJHIFJvb3QgQ0EgRzIwWTATBgcqhkjOPQIBBggqhkjOPQMBBwNCAAQI+uelZzJzESGTP2ZkDfA+W0+7O9y0a8gVl0nZnS0Ko5H71VG2aacoUc+GHRWmXhXiutfDwauh4MtMp32zj5/Ro4GoMIGlMBMGA1UdJQQMMAoGCCsGAQUFBwMJMA8GA1UdEwEB/wQFMAMBAf8wEQYDVR0OBAoECEW4QJ7hOPi/MEUGA1UdIAQ+MDwwOgYMKwYBBAGCxDUBAgEAMCowKAYIKwYBBQUHAgEWHGh0dHBzOi8vd3d3Lmh1YmplY3QuY29tL3BraS8wEwYDVR0jBAwwCoAIRbhAnuE4+L8wDgYDVR0PAQH/BAQDAgEGMAoGCCqGSM49BAMCA0gAMEUCIAQlk+aOKUGJk7KoZs2ASAYv1D0w/BqN9Dpg82X0bFb8AiEAi1dL21fLl/wbYs7LYYzpi4ELaXBzZxy4tAVwBy9pia4=\",\n                    \"rootType\": \"V2G\"\n                  }\n                }\n              }\n            }\n          },\n          \"description\": \"Expects a V2G Root CA and the Root Type\\n\\n\"\n        },\n        \"security\": [\n          {\n            \"Admin\": []\n          }\n        ]\n      }\n    },\n    \"/v1/root/ctl\": {\n      \"get\": {\n        \"summary\": \"GetCertificateTrustList\",\n        \"tags\": [],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"OK\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"signerCertificate\": {\n                      \"type\": \"string\"\n                    },\n                    \"timeStamp\": {\n                      \"type\": \"string\"\n                    },\n                    \"CTL\": {\n                      \"type\": \"object\"\n                    }\n                  }\n                },\n                \"examples\": {}\n              }\n            }\n          },\n          \"404\": {\n            \"description\": \"Not Found\"\n          },\n          \"500\": {\n            \"description\": \"Internal Server Error\"\n          }\n        },\n        \"operationId\": \"get-v1-root-ctl\",\n        \"description\": \"Retrieves Certificate Trust List (CTL) object from a file or a DER-encoded byte array which is signed by a trusted party.\\nAs this CTLs in the V2G contect are not yet defined, this method shall serve as a starting point to download CTLs in the future.\",\n        \"security\": [\n          {\n            \"All_roles\": []\n          }\n        ],\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"type\": \"object\",\n                \"properties\": {}\n              }\n            }\n          },\n          \"description\": \"The exact body needs to be aligned by the stakeholders in market.\\nThe trusted party which sets the signature for a CTL is still not defined.\"\n        }\n      }\n    }\n  },\n  \"components\": {\n    \"schemas\": {\n      \"GetAllRootCertsResponseV1\": {\n        \"type\": \"object\",\n        \"title\": \"GetAllRootCertsResponseV1\",\n        \"description\": \"\",\n        \"x-examples\": {},\n        \"properties\": {\n          \"RootCertificateCollection\": {\n            \"type\": \"object\",\n            \"properties\": {\n              \"rootCertificates\": {\n                \"type\": \"array\",\n                \"description\": \"A list of root certificate objects.\",\n                \"items\": {\n                  \"$ref\": \"#/components/schemas/RootCertV1\"\n                }\n              }\n            }\n          }\n        }\n      },\n      \"GetRootCertResponseV1\": {\n        \"type\": \"object\",\n        \"title\": \"GetRootCertResponseV1\",\n        \"properties\": {\n          \"RootResponse\": {\n            \"$ref\": \"#/components/schemas/RootCertV1\"\n          }\n        },\n        \"x-examples\": {\n          \"example-1\": {\n            \"RootResponse\": {\n              \"rootCertificateId\": \"896b6655-180e-4304-b642-606bb00df8f0\",\n              \"distinguishedName\": \"DC=V2G, CN=V2G_ROOT_CA_001, O=V2G\",\n              \"caCertificate\": \"MIICWTCCA…\",\n              \"commonName\": \"V2G_ROOT_CA_001\",\n              \"rootAuthorityKeyIdentifier\": \"string\",\n              \"rootIssuerSerialNumber\": \"78d23d19f35b4e8819ebcd5e43091a48\",\n              \"validFrom\": \"2017-12-07T14:08:30Z\",\n              \"validTo\": \"2057-12-07T14:08:30Z\",\n              \"organizationName\": \"V2G\",\n              \"certificateRevocationList\": \"string\",\n              \"crossCertificatePair\": \"string\",\n              \"labeledUri\": \"string\"\n            }\n          }\n        }\n      },\n      \"RootCertV1\": {\n        \"type\": \"object\",\n        \"title\": \"Root Cert (V1)\",\n        \"description\": \"Object containing a root certificate registered in the Root Certificate Pool.\\n\\nFields marked with _informative_ are for information purpose only. Any certificate-based validations should refer to the certificates signed values instead of relying these fields.\",\n        \"x-examples\": {},\n        \"minProperties\": 1,\n        \"maxProperties\": 1,\n        \"properties\": {\n          \"rootCertificateId\": {\n            \"type\": \"string\",\n            \"description\": \"The UUID of each root certificate is generated by thy system when the root certificate gets registered. It can be used to request an individual certificate using the REST API.\",\n            \"format\": \"uuid\",\n            \"example\": \"896b6655-180e-4304-b642-606bb00df8f0\",\n            \"pattern\": \"^[0-9a-fA-F]{8}\\\\-([0-9a-fA-F]{4}\\\\-){3}[0-9a-fA-F]{12}$\"\n          },\n          \"distinguishedName\": {\n            \"type\": \"string\",\n            \"example\": \"CN=V2G Root CA G2, DC=V2G, O=Hubject GmbH, C=DE\",\n            \"pattern\": \"^((CN|OU|O|C|DC|ST)=[^,]+,? ?)+$\",\n            \"description\": \"Reflects the subjects distinguished name field. (informative)\"\n          },\n          \"rootType\": {\n            \"type\": \"string\",\n            \"enum\": [\n              \"MO\",\n              \"V2G\",\n              \"OEM\",\n              \"PE\"\n            ]\n          },\n          \"caCertificate\": {\n            \"type\": \"string\",\n            \"example\": \"MIICWTCCA…\",\n            \"pattern\": \"^[-A-Za-z0-9+/]+={0,3}$\",\n            \"description\": \"The root certificate in DER format encoded in Base64.\",\n            \"maxLength\": 800\n          },\n          \"commonName\": {\n            \"type\": \"string\",\n            \"description\": \"Reflects the subjects common name value. (informative)\",\n            \"example\": \"V2G_ROOT_CA_001\"\n          },\n          \"rootAuthorityKeyIdentifier\": {\n            \"type\": \"string\",\n            \"description\": \"SHA-1 hash of the certificates public key (informative)\"\n          },\n          \"rootIssuerSerialNumber\": {\n            \"type\": \"string\",\n            \"description\": \"serial number in hex format of the certificate (informative)\",\n            \"example\": \"78d23d19f35b4e8819ebcd5e43091a48\"\n          },\n          \"validFrom\": {\n            \"type\": \"string\",\n            \"description\": \"Reflects the subjects not before date. (infotmative)\",\n            \"format\": \"date-time\",\n            \"example\": \"2017-12-07T14:08:30Z\"\n          },\n          \"validTo\": {\n            \"type\": \"string\",\n            \"description\": \"Reflects the subjects not after date. (infotmative)\",\n            \"format\": \"date-time\",\n            \"example\": \"2057-12-07T14:08:30Z\"\n          },\n          \"organizationName\": {\n            \"type\": \"string\",\n            \"description\": \"Reflects the subjects organization name value. (informative)\",\n            \"example\": \"Hubject GmbH\"\n          },\n          \"certificateRevocationList\": {\n            \"type\": \"string\",\n            \"description\": \"\"\n          },\n          \"crossCertificatePair\": {\n            \"type\": \"string\"\n          },\n          \"labeledUri\": {\n            \"type\": \"string\",\n            \"description\": \"RFC 2079 labeledURI\"\n          },\n          \"fingerprint\": {\n            \"type\": \"string\",\n            \"description\": \"SHA256 certificate fingerprint (informative)\"\n          }\n        },\n        \"required\": [\n          \"rootType\",\n          \"caCertificate\"\n        ]\n      },\n      \"Error\": {\n        \"title\": \"Error\",\n        \"type\": \"object\",\n        \"properties\": {\n          \"errorMessages\": {\n            \"type\": \"array\",\n            \"minItems\": 1,\n            \"uniqueItems\": true,\n            \"items\": {\n              \"type\": \"string\"\n            }\n          },\n          \"traceId\": {\n            \"type\": \"string\",\n            \"format\": \"uuid\"\n          }\n        }\n      }\n    },\n    \"securitySchemes\": {\n      \"All_roles\": {\n        \"type\": \"oauth2\",\n        \"flows\": {\n          \"authorizationCode\": {\n            \"authorizationUrl\": \"\",\n            \"tokenUrl\": \"\",\n            \"refreshUrl\": \"\",\n            \"scopes\": {}\n          }\n        },\n        \"description\": \"OAuth2 is used to grant access to the endpoint. \"\n      },\n      \"Admin\": {\n        \"type\": \"oauth2\",\n        \"flows\": {\n          \"authorizationCode\": {\n            \"authorizationUrl\": \"\",\n            \"tokenUrl\": \"\",\n            \"refreshUrl\": \"\",\n            \"scopes\": {}\n          }\n        },\n        \"description\": \"OAuth2 is used to grant access to the endpoint. \"\n      }\n    }\n  },\n  \"tags\": [\n    {\n      \"name\": \"RCP\",\n      \"description\": \"Root Certificate Pool\"\n    },\n    {\n      \"name\": \"root-certificate-pool-controller\",\n      \"description\": \"internal identifier\"\n    },\n    {\n      \"name\": \"CPO\",\n      \"description\": \"Charge Point Operator\"\n    },\n    {\n      \"name\": \"MO\",\n      \"description\": \"Mobility Operator\"\n    },\n    {\n      \"name\": \"OEM\",\n      \"description\": \"Electric Vehicle Manufacturer\"\n    },\n    {\n      \"name\": \"root-certificate-pool-controller-v-2\",\n      \"description\": \"internal identifier\"\n    }\n  ]\n}\n",
			"canonicalURL": "/github.com/hubject/opcp@e119b974f03862de14b87cc9493b26727dceb80a/-/blob/OPCP-1.0.0/reference/rcp.v1.json",
			"externalURLs": [
				{
					"url": "https://github.com/hubject/opcp/blob/e119b974f03862de14b87cc9493b26727dceb80a/OPCP-1.0.0/reference/rcp.v1.json",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "parse: parse spec: parse operations: path \"/v1/root/rootCerts/{rootCertificateId}\": get: operation \"getRootCert\": responses: 404: content: application/json: schema: at 90:27: parse schema: resolve \"./cps.v1.json#/components/schemas/Error\": external \"./cps.v1.json\": get: file: local file reference is not allowed"
}