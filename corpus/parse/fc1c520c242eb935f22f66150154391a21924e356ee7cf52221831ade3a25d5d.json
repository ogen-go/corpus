{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/PaloAltoNetworks/prisma.pan.dev"
		},
		"file": {
			"name": "PermissionGroups.json",
			"size": 0,
			"path": "static/oas/cspm/dist/PermissionGroups.json",
			"byteSize": 63436,
			"content": "{\n  \"openapi\": \"3.0.1\",\n  \"info\": {\n    \"title\": \"Prisma Cloud Permission Groups API\",\n    \"description\": \"Permission groups enable you to restrict access to one or more features available on the Prisma Cloud administrative console. Permission group APIs allow you to retrieve, update or delete one or more existing permissions groups. You can also use these APIs to create a custom permission group and then you must attach it to a role and assign the role to a user.\",\n    \"contact\": {},\n    \"version\": \"Latest\"\n  },\n  \"servers\": [{ \"url\": \"https://api.prismacloud.io\" }],\n  \"tags\": [\n    {\n      \"description\": \"The Permission Groups endpoints are listed below.\",\n      \"name\": \"Permission Groups\"\n    }\n  ],\n  \"paths\": {\n    \"/authz/v1/feature\": {\n      \"get\": {\n        \"tags\": [\"Permission Groups\"],\n        \"summary\": \"Get all active features\",\n        \"description\": \"Returns a list of Prisma Cloud features that can be added to Custom Permission Groups\",\n        \"operationId\": \"getFeatures\",\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Successful operation\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": { \"type\": \"array\", \"items\": { \"type\": \"string\" } }\n              }\n            }\n          },\n          \"4XX\": {\n            \"description\": \"Client error\",\n            \"headers\": {\n              \"x-redlock-status\": {\n                \"description\": \"error description\",\n                \"style\": \"simple\",\n                \"schema\": { \"type\": \"string\" }\n              }\n            },\n            \"content\": {\n              \"application/json\": {\n                \"schema\": { \"type\": \"array\", \"items\": { \"type\": \"string\" } }\n              }\n            }\n          }\n        },\n        \"security\": [{ \"x-redlock-auth\": [] }],\n        \"x-codeSamples\": [\n          {\n            \"lang\": \"Python + Requests\",\n            \"source\": \"import requests\\n\\nurl = \\\"https://api.prismacloud.io/authz/v1/feature\\\"\\n\\nheaders = {\\\"x-redlock-auth\\\": \\\"REPLACE_KEY_VALUE\\\"}\\n\\nresponse = requests.request(\\\"GET\\\", url, headers=headers)\\n\\nprint(response.text)\"\n          },\n          {\n            \"lang\": \"Shell + Curl\",\n            \"source\": \"curl --request GET \\\\\\n  --url https://api.prismacloud.io/authz/v1/feature \\\\\\n  --header 'x-redlock-auth: REPLACE_KEY_VALUE'\"\n          }\n        ]\n      }\n    },\n    \"/authz/v1/permission_group/{id}\": {\n      \"get\": {\n        \"tags\": [\"Permission Groups\"],\n        \"summary\": \"Get an existing Permission Group by ID\",\n        \"description\": \"Queries a list of existing permission groups by ID and returns a specific permission group that matches the Permission Group ID.\",\n        \"operationId\": \"get_1\",\n        \"parameters\": [\n          {\n            \"name\": \"id\",\n            \"in\": \"path\",\n            \"description\": \"PermissionGroupID\",\n            \"required\": true,\n            \"schema\": { \"type\": \"string\" }\n          },\n          {\n            \"name\": \"includeAssociatedRoles\",\n            \"in\": \"query\",\n            \"description\": \"To include associated roles in the response\",\n            \"required\": false,\n            \"schema\": { \"type\": \"boolean\" }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Successful operation\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/PermissionGroupDetail\"\n                }\n              }\n            }\n          },\n          \"4XX\": {\n            \"description\": \"Client error\",\n            \"headers\": {\n              \"x-redlock-status\": {\n                \"description\": \"error description\",\n                \"style\": \"simple\",\n                \"schema\": { \"type\": \"string\" }\n              }\n            },\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/PermissionGroupDetail\"\n                }\n              }\n            }\n          }\n        },\n        \"security\": [{ \"x-redlock-auth\": [] }],\n        \"x-codeSamples\": [\n          {\n            \"lang\": \"Python + Requests\",\n            \"source\": \"import requests\\n\\nurl = \\\"https://api.prismacloud.io/authz/v1/permission_group/{id}\\\"\\n\\nquerystring = {\\\"includeAssociatedRoles\\\":\\\"SOME_BOOLEAN_VALUE\\\"}\\n\\nheaders = {\\\"x-redlock-auth\\\": \\\"REPLACE_KEY_VALUE\\\"}\\n\\nresponse = requests.request(\\\"GET\\\", url, headers=headers, params=querystring)\\n\\nprint(response.text)\"\n          },\n          {\n            \"lang\": \"Shell + Curl\",\n            \"source\": \"curl --request GET \\\\\\n  --url 'https://api.prismacloud.io/authz/v1/permission_group/{id}?includeAssociatedRoles=SOME_BOOLEAN_VALUE' \\\\\\n  --header 'x-redlock-auth: REPLACE_KEY_VALUE'\"\n          }\n        ]\n      },\n      \"put\": {\n        \"tags\": [\"Permission Groups\"],\n        \"summary\": \"Update an existing Permission Group\",\n        \"description\": \"Updates the parameters of an existing permission group.\",\n        \"operationId\": \"update_1\",\n        \"parameters\": [\n          {\n            \"name\": \"id\",\n            \"in\": \"path\",\n            \"description\": \"PermissionGroupId\",\n            \"required\": true,\n            \"schema\": { \"type\": \"string\" }\n          }\n        ],\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/PermissionGroupRequest\"\n              }\n            }\n          },\n          \"required\": true\n        },\n        \"responses\": {\n          \"204\": { \"description\": \"Successful operation\" },\n          \"4XX\": {\n            \"description\": \"Client error\",\n            \"headers\": {\n              \"x-redlock-status\": {\n                \"description\": \"error description\",\n                \"style\": \"simple\",\n                \"schema\": { \"type\": \"string\" }\n              }\n            }\n          }\n        },\n        \"security\": [{ \"x-redlock-auth\": [] }],\n        \"x-codeSamples\": [\n          {\n            \"lang\": \"Python + Requests\",\n            \"source\": \"import requests\\n\\nurl = \\\"https://api.prismacloud.io/authz/v1/permission_group/{id}\\\"\\n\\npayload = {\\n    \\\"name\\\": \\\"string\\\",\\n    \\\"description\\\": \\\"string\\\",\\n    \\\"features\\\": [\\n        {\\n            \\\"featureName\\\": \\\"string\\\",\\n            \\\"operations\\\": {\\n                \\\"property1\\\": {},\\n                \\\"property2\\\": {}\\n            }\\n        }\\n    ]\\n}\\nheaders = {\\n    \\\"content-type\\\": \\\"application/json\\\",\\n    \\\"x-redlock-auth\\\": \\\"REPLACE_KEY_VALUE\\\"\\n}\\n\\nresponse = requests.request(\\\"PUT\\\", url, json=payload, headers=headers)\\n\\nprint(response.text)\"\n          },\n          {\n            \"lang\": \"Shell + Curl\",\n            \"source\": \"curl --request PUT \\\\\\n  --url https://api.prismacloud.io/authz/v1/permission_group/{id} \\\\\\n  --header 'content-type: application/json' \\\\\\n  --header 'x-redlock-auth: REPLACE_KEY_VALUE' \\\\\\n  --data '{\\\"name\\\":\\\"string\\\",\\\"description\\\":\\\"string\\\",\\\"features\\\":[{\\\"featureName\\\":\\\"string\\\",\\\"operations\\\":{\\\"property1\\\":{},\\\"property2\\\":{}}}]}'\"\n          }\n        ]\n      },\n      \"delete\": {\n        \"tags\": [\"Permission Groups\"],\n        \"summary\": \"Delete an existing Permission Group by ID\",\n        \"description\": \"Deletes the default or custom permission group with the specified ID.\",\n        \"operationId\": \"delete\",\n        \"parameters\": [\n          {\n            \"name\": \"id\",\n            \"in\": \"path\",\n            \"description\": \"PermissionGroupID\",\n            \"required\": true,\n            \"schema\": { \"type\": \"string\" }\n          }\n        ],\n        \"responses\": {\n          \"204\": { \"description\": \"Successful operation\" },\n          \"4XX\": {\n            \"description\": \"Client error\",\n            \"headers\": {\n              \"x-redlock-status\": {\n                \"description\": \"error description\",\n                \"style\": \"simple\",\n                \"schema\": { \"type\": \"string\" }\n              }\n            }\n          }\n        },\n        \"security\": [{ \"x-redlock-auth\": [] }],\n        \"x-codeSamples\": [\n          {\n            \"lang\": \"Python + Requests\",\n            \"source\": \"import requests\\n\\nurl = \\\"https://api.prismacloud.io/authz/v1/permission_group/{id}\\\"\\n\\nheaders = {\\\"x-redlock-auth\\\": \\\"REPLACE_KEY_VALUE\\\"}\\n\\nresponse = requests.request(\\\"DELETE\\\", url, headers=headers)\\n\\nprint(response.text)\"\n          },\n          {\n            \"lang\": \"Shell + Curl\",\n            \"source\": \"curl --request DELETE \\\\\\n  --url https://api.prismacloud.io/authz/v1/permission_group/{id} \\\\\\n  --header 'x-redlock-auth: REPLACE_KEY_VALUE'\"\n          }\n        ]\n      }\n    },\n    \"/authz/v1/permission_group\": {\n      \"get\": {\n        \"tags\": [\"Permission Groups\"],\n        \"summary\": \"Get all existing Permission Groups\",\n        \"description\": \"Returns a list of all existing Permission Groups.\",\n        \"operationId\": \"getAll\",\n        \"parameters\": [\n          {\n            \"name\": \"includeAssociatedRoles\",\n            \"in\": \"query\",\n            \"description\": \"To include associated roles in the response\",\n            \"required\": false,\n            \"schema\": { \"type\": \"boolean\" }\n          },\n          {\n            \"name\": \"includeFeatures\",\n            \"in\": \"query\",\n            \"description\": \"To include permitted features in the response\",\n            \"required\": false,\n            \"schema\": { \"type\": \"boolean\" }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Successful operation\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/PermissionGroupDetail\"\n                  }\n                }\n              }\n            }\n          },\n          \"4XX\": {\n            \"description\": \"Client error\",\n            \"headers\": {\n              \"x-redlock-status\": {\n                \"description\": \"error description\",\n                \"style\": \"simple\",\n                \"schema\": { \"type\": \"string\" }\n              }\n            },\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/PermissionGroupDetail\"\n                  }\n                }\n              }\n            }\n          }\n        },\n        \"security\": [{ \"x-redlock-auth\": [] }],\n        \"x-codeSamples\": [\n          {\n            \"lang\": \"Python + Requests\",\n            \"source\": \"import requests\\n\\nurl = \\\"https://api.prismacloud.io/authz/v1/permission_group\\\"\\n\\nquerystring = {\\\"includeAssociatedRoles\\\":\\\"SOME_BOOLEAN_VALUE\\\",\\\"includeFeatures\\\":\\\"SOME_BOOLEAN_VALUE\\\"}\\n\\nheaders = {\\\"x-redlock-auth\\\": \\\"REPLACE_KEY_VALUE\\\"}\\n\\nresponse = requests.request(\\\"GET\\\", url, headers=headers, params=querystring)\\n\\nprint(response.text)\"\n          },\n          {\n            \"lang\": \"Shell + Curl\",\n            \"source\": \"curl --request GET \\\\\\n  --url 'https://api.prismacloud.io/authz/v1/permission_group?includeAssociatedRoles=SOME_BOOLEAN_VALUE\u0026includeFeatures=SOME_BOOLEAN_VALUE' \\\\\\n  --header 'x-redlock-auth: REPLACE_KEY_VALUE'\"\n          }\n        ]\n      },\n      \"post\": {\n        \"tags\": [\"Permission Groups\"],\n        \"summary\": \"Add new Custom Permission Group\",\n        \"description\": \"Creates a new custom permission group with granular permissions that restrict access to the Prisma Cloud administrative console. Values include name, optional description and selection of enabled features and functions.\",\n        \"operationId\": \"save\",\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/PermissionGroupRequest\"\n              }\n            }\n          },\n          \"required\": true\n        },\n        \"responses\": {\n          \"201\": { \"description\": \"Successful operation\" },\n          \"4XX\": {\n            \"description\": \"Client error\",\n            \"headers\": {\n              \"x-redlock-status\": {\n                \"description\": \"error description\",\n                \"style\": \"simple\",\n                \"schema\": { \"type\": \"string\" }\n              }\n            }\n          }\n        },\n        \"security\": [{ \"x-redlock-auth\": [] }],\n        \"x-codeSamples\": [\n          {\n            \"lang\": \"Python + Requests\",\n            \"source\": \"import requests\\n\\nurl = \\\"https://api.prismacloud.io/authz/v1/permission_group\\\"\\n\\npayload = {\\n    \\\"name\\\": \\\"string\\\",\\n    \\\"description\\\": \\\"string\\\",\\n    \\\"features\\\": [\\n        {\\n            \\\"featureName\\\": \\\"string\\\",\\n            \\\"operations\\\": {\\n                \\\"property1\\\": {},\\n                \\\"property2\\\": {}\\n            }\\n        }\\n    ]\\n}\\nheaders = {\\n    \\\"content-type\\\": \\\"application/json\\\",\\n    \\\"x-redlock-auth\\\": \\\"REPLACE_KEY_VALUE\\\"\\n}\\n\\nresponse = requests.request(\\\"POST\\\", url, json=payload, headers=headers)\\n\\nprint(response.text)\"\n          },\n          {\n            \"lang\": \"Shell + Curl\",\n            \"source\": \"curl --request POST \\\\\\n  --url https://api.prismacloud.io/authz/v1/permission_group \\\\\\n  --header 'content-type: application/json' \\\\\\n  --header 'x-redlock-auth: REPLACE_KEY_VALUE' \\\\\\n  --data '{\\\"name\\\":\\\"string\\\",\\\"description\\\":\\\"string\\\",\\\"features\\\":[{\\\"featureName\\\":\\\"string\\\",\\\"operations\\\":{\\\"property1\\\":{},\\\"property2\\\":{}}}]}'\"\n          }\n        ]\n      }\n    }\n  },\n  \"components\": {\n    \"schemas\": {\n      \"ErrorDetails\": {\n        \"required\": [\"message\", \"name\"],\n        \"type\": \"object\",\n        \"properties\": {\n          \"name\": { \"type\": \"string\" },\n          \"message\": { \"type\": \"string\" }\n        }\n      },\n      \"SpringErrorResponse\": {\n        \"required\": [\"error\", \"message\", \"path\", \"status\", \"timestamp\"],\n        \"type\": \"object\",\n        \"properties\": {\n          \"timestamp\": { \"type\": \"string\" },\n          \"status\": { \"type\": \"integer\", \"format\": \"int32\" },\n          \"error\": { \"type\": \"string\" },\n          \"errorDetails\": {\n            \"type\": \"array\",\n            \"items\": { \"$ref\": \"#/components/schemas/ErrorDetails\" }\n          },\n          \"message\": { \"type\": \"string\" },\n          \"path\": { \"type\": \"string\" }\n        }\n      },\n      \"UserAccount\": {\n        \"required\": [\"email\", \"firstName\", \"lastName\", \"timeZone\"],\n        \"type\": \"object\",\n        \"properties\": {\n          \"email\": { \"type\": \"string\" },\n          \"firstName\": { \"type\": \"string\" },\n          \"lastName\": { \"type\": \"string\" },\n          \"timeZone\": {\n            \"type\": \"string\",\n            \"description\": \"Time zone (e.g. America/Los_Angeles)\"\n          },\n          \"enabled\": { \"type\": \"boolean\", \"readOnly\": true },\n          \"lastModifiedBy\": { \"type\": \"string\", \"readOnly\": true },\n          \"lastModifiedTs\": {\n            \"type\": \"integer\",\n            \"format\": \"int64\",\n            \"readOnly\": true\n          },\n          \"lastLoginTs\": {\n            \"type\": \"integer\",\n            \"format\": \"int64\",\n            \"readOnly\": true\n          },\n          \"displayName\": { \"type\": \"string\", \"readOnly\": true },\n          \"ssoBypassAllowed\": { \"type\": \"boolean\" },\n          \"accessKeysAllowed\": { \"type\": \"boolean\" },\n          \"defaultRoleId\": { \"type\": \"string\" },\n          \"roleIds\": { \"type\": \"array\", \"items\": { \"type\": \"string\" } },\n          \"roles\": {\n            \"type\": \"array\",\n            \"items\": { \"$ref\": \"#/components/schemas/UserProfileRoleDetail\" }\n          },\n          \"activeRole\": {\n            \"$ref\": \"#/components/schemas/UserProfileRoleDetail\"\n          },\n          \"username\": {\n            \"type\": \"string\",\n            \"description\": \"User or service account name\"\n          },\n          \"type\": {\n            \"type\": \"string\",\n            \"description\": \"User type. Default is USER_ACCOUNT.\",\n            \"enum\": [\"USER_ACCOUNT\", \"SERVICE_ACCOUNT\"]\n          },\n          \"accessKeyName\": { \"type\": \"string\" },\n          \"accessKeyExpiration\": {\n            \"type\": \"integer\",\n            \"description\": \"Access key expiration timestamp in milliseconds\",\n            \"format\": \"int64\"\n          },\n          \"enableKeyExpiration\": {\n            \"type\": \"boolean\",\n            \"description\": \"true = Enable access key expiration. Default is false.\"\n          },\n          \"accessKeysCount\": {\n            \"type\": \"integer\",\n            \"description\": \"Access key count\",\n            \"format\": \"int32\",\n            \"readOnly\": true\n          },\n          \"userRoleName\": { \"type\": \"string\", \"writeOnly\": true }\n        }\n      },\n      \"UserProfileRoleDetail\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"id\": { \"type\": \"string\" },\n          \"name\": { \"type\": \"string\" },\n          \"type\": { \"type\": \"string\" },\n          \"onlyAllowCIAccess\": { \"type\": \"boolean\" },\n          \"onlyAllowComputeAccess\": { \"type\": \"boolean\" },\n          \"onlyAllowReadAccess\": { \"type\": \"boolean\" }\n        }\n      },\n      \"CreateUserAccessKeyResponse\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"id\": { \"type\": \"string\" },\n          \"secretKey\": { \"type\": \"string\" }\n        }\n      },\n      \"ChangePasswordRequest\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"userName\": { \"type\": \"string\" },\n          \"password\": { \"type\": \"string\" },\n          \"newPassword\": { \"type\": \"string\" }\n        }\n      },\n      \"SupportUserProfile\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"email\": { \"type\": \"string\" },\n          \"supportAccessLevel\": {\n            \"type\": \"string\",\n            \"enum\": [\"NONE\", \"LIGHT_AGENT\", \"AGENT\", \"ADMIN\"]\n          },\n          \"failedLoginCount\": { \"type\": \"integer\", \"format\": \"int32\" }\n        }\n      },\n      \"UserProfile\": {\n        \"required\": [\"email\", \"firstName\", \"lastName\", \"roleId\", \"timeZone\"],\n        \"type\": \"object\",\n        \"properties\": {\n          \"email\": { \"type\": \"string\" },\n          \"firstName\": { \"type\": \"string\" },\n          \"lastName\": { \"type\": \"string\" },\n          \"timeZone\": {\n            \"type\": \"string\",\n            \"description\": \"Time zone (e.g. America/Los_Angeles)\"\n          },\n          \"enabled\": { \"type\": \"boolean\", \"readOnly\": true },\n          \"roleId\": { \"type\": \"string\" },\n          \"lastModifiedBy\": { \"type\": \"string\", \"readOnly\": true },\n          \"lastModifiedTs\": {\n            \"type\": \"integer\",\n            \"format\": \"int64\",\n            \"readOnly\": true\n          },\n          \"lastLoginTs\": {\n            \"type\": \"integer\",\n            \"format\": \"int64\",\n            \"readOnly\": true\n          },\n          \"role\": {\n            \"type\": \"object\",\n            \"additionalProperties\": { \"type\": \"string\", \"readOnly\": true },\n            \"readOnly\": true\n          },\n          \"roleType\": { \"type\": \"string\", \"readOnly\": true },\n          \"displayName\": { \"type\": \"string\", \"readOnly\": true },\n          \"ssoBypassAllowed\": { \"type\": \"boolean\" },\n          \"accessKeysAllowed\": { \"type\": \"boolean\" },\n          \"userRoleName\": { \"type\": \"string\", \"writeOnly\": true }\n        }\n      },\n      \"OpenIdConfigurationResponse\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"issuer\": { \"type\": \"string\" },\n          \"authorization_endpoint\": { \"type\": \"string\" },\n          \"jwks_uri\": { \"type\": \"string\" },\n          \"token_endpoint\": { \"type\": \"string\" },\n          \"token_endpoint_auth_methods_supported\": {\n            \"type\": \"array\",\n            \"items\": { \"type\": \"string\" }\n          },\n          \"introspection_endpoint\": { \"type\": \"string\" },\n          \"introspection_endpoint_auth_methods_supported\": {\n            \"type\": \"array\",\n            \"items\": { \"type\": \"string\" }\n          },\n          \"revocation_endpoint\": { \"type\": \"string\" },\n          \"response_types_supported\": {\n            \"type\": \"array\",\n            \"items\": { \"type\": \"string\" }\n          },\n          \"subject_types_supported\": {\n            \"type\": \"array\",\n            \"items\": { \"type\": \"string\" }\n          },\n          \"id_token_signing_alg_values_supported\": {\n            \"type\": \"array\",\n            \"items\": { \"type\": \"string\" }\n          },\n          \"grant_types_supported\": {\n            \"type\": \"array\",\n            \"items\": { \"type\": \"string\" }\n          }\n        }\n      },\n      \"Feature\": {\n        \"required\": [\"featureName\", \"operations\"],\n        \"type\": \"object\",\n        \"properties\": {\n          \"featureName\": {\n            \"type\": \"string\",\n            \"description\": \"Prisma Cloud Feature Name. Prisma Cloud feature names can be retreived from GET: /authz/v1/feature API Endpoint\"\n          },\n          \"operations\": {\n            \"type\": \"object\",\n            \"additionalProperties\": {\n              \"type\": \"object\",\n              \"description\": \"A mapping of operations and a boolean value representing whether the privilege to perform the operation needs to be granted.\"\n            },\n            \"description\": \"A mapping of operations and a boolean value representing whether the privilege to perform the operation needs to be granted.\"\n          }\n        },\n        \"description\": \"Collection of permitted features associated with the role. \\n Refer to PermissionGroup API docs to get the entire list of PC features.\"\n      },\n      \"RoleInternalPermissionGroup\": {\n        \"required\": [\"custom\", \"features\", \"name\"],\n        \"type\": \"object\",\n        \"properties\": {\n          \"name\": { \"type\": \"string\", \"description\": \"PermissionGroup Name\" },\n          \"custom\": {\n            \"type\": \"boolean\",\n            \"description\": \"Indicates whether the permissionGroup associated with the role is 'Default' or 'Custom' type.\"\n          },\n          \"features\": {\n            \"type\": \"array\",\n            \"description\": \"Collection of permitted features associated with the role. \\n Refer to PermissionGroup API docs to get the entire list of PC features.\",\n            \"items\": { \"$ref\": \"#/components/schemas/Feature\" }\n          }\n        },\n        \"description\": \"Permission Group is only populated for the active role, i.e. active=true\"\n      },\n      \"UserInternalRole\": {\n        \"required\": [\"active\", \"default\", \"id\", \"name\"],\n        \"type\": \"object\",\n        \"properties\": {\n          \"id\": { \"type\": \"string\", \"description\": \"Unique id of the Role\" },\n          \"name\": { \"type\": \"string\", \"description\": \"Name of the Role\" },\n          \"active\": {\n            \"type\": \"boolean\",\n            \"description\": \"Indicates whether the role is active role or not\"\n          },\n          \"permissionGroup\": {\n            \"$ref\": \"#/components/schemas/RoleInternalPermissionGroup\"\n          },\n          \"default\": {\n            \"type\": \"boolean\",\n            \"description\": \"Indicates whether the role is default or not\"\n          }\n        }\n      },\n      \"UserProfileV2\": {\n        \"required\": [\"email\", \"firstName\", \"lastName\", \"timeZone\"],\n        \"type\": \"object\",\n        \"properties\": {\n          \"email\": { \"type\": \"string\" },\n          \"firstName\": { \"type\": \"string\" },\n          \"lastName\": { \"type\": \"string\" },\n          \"displayName\": { \"type\": \"string\" },\n          \"timeZone\": {\n            \"type\": \"string\",\n            \"description\": \"Time zone (e.g. America/Los_Angeles)\"\n          },\n          \"lastLoginTs\": {\n            \"type\": \"integer\",\n            \"format\": \"int64\",\n            \"readOnly\": true\n          },\n          \"accessKeysAllowed\": { \"type\": \"boolean\" },\n          \"roles\": {\n            \"type\": \"array\",\n            \"items\": { \"$ref\": \"#/components/schemas/UserInternalRole\" }\n          }\n        }\n      },\n      \"AllowListParams\": {\n        \"title\": \"IpAllowListParams\",\n        \"required\": [\"cidr\", \"name\"],\n        \"type\": \"object\",\n        \"properties\": {\n          \"name\": { \"type\": \"string\" },\n          \"description\": { \"type\": \"string\" },\n          \"cidr\": { \"type\": \"array\", \"items\": { \"type\": \"string\" } },\n          \"trimmedName\": { \"type\": \"string\" },\n          \"trimmedDescription\": { \"type\": \"string\" },\n          \"trimmedCidrs\": { \"type\": \"array\", \"items\": { \"type\": \"string\" } }\n        },\n        \"description\": \"Model for login IP allow list parameters\"\n      },\n      \"IpAllowListData\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"id\": {\n            \"type\": \"string\",\n            \"description\": \"Login IP allow list ID\",\n            \"readOnly\": true\n          },\n          \"name\": { \"type\": \"string\", \"description\": \"Name\" },\n          \"description\": { \"type\": \"string\", \"description\": \"Description\" },\n          \"cidr\": {\n            \"type\": \"array\",\n            \"description\": \"List of CIDR blocks (IP addresses) from which access is allowed when Login IP Allow List flag is enabled.\",\n            \"items\": {\n              \"type\": \"string\",\n              \"description\": \"List of CIDR blocks (IP addresses) from which access is allowed when Login IP Allow List flag is enabled.\"\n            }\n          },\n          \"lastModifiedTs\": {\n            \"type\": \"integer\",\n            \"description\": \"Timestamp for last modification of CIDR block list\",\n            \"format\": \"int64\",\n            \"readOnly\": true\n          }\n        },\n        \"description\": \"Model for login IP allow list data\"\n      },\n      \"CustomerSupportFilter\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"customerName\": { \"type\": \"string\" },\n          \"customerId\": { \"type\": \"integer\", \"format\": \"int32\" },\n          \"entitlementSerialNumber\": { \"type\": \"string\" }\n        }\n      },\n      \"UserAccessKeyDetailResponse\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"Access key id\": {\n            \"type\": \"string\",\n            \"format\": \"uuid\",\n            \"readOnly\": true\n          },\n          \"name\": { \"type\": \"string\" },\n          \"createdBy\": { \"type\": \"string\" },\n          \"createdTs\": { \"type\": \"integer\", \"format\": \"int64\" },\n          \"lastUsedTime\": { \"type\": \"integer\", \"format\": \"int64\" },\n          \"status\": { \"type\": \"string\" },\n          \"expiresOn\": { \"type\": \"integer\", \"format\": \"int64\" },\n          \"role\": {\n            \"type\": \"object\",\n            \"additionalProperties\": {\n              \"type\": \"string\",\n              \"description\": \"Role of User\"\n            },\n            \"description\": \"Role of User\"\n          },\n          \"roleType\": { \"type\": \"string\" },\n          \"username\": { \"type\": \"string\" }\n        }\n      },\n      \"Attributes\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"onlyAllowCIAccess\": { \"type\": \"boolean\" },\n          \"onlyAllowComputeAccess\": { \"type\": \"boolean\" },\n          \"hasDefenderPermissions\": { \"type\": \"boolean\" },\n          \"onlyAllowReadAccess\": { \"type\": \"boolean\" }\n        }\n      },\n      \"UserRole\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"id\": { \"type\": \"string\" },\n          \"name\": { \"type\": \"string\" },\n          \"description\": { \"type\": \"string\" },\n          \"lastModifiedBy\": { \"type\": \"string\" },\n          \"lastModifiedTs\": { \"type\": \"integer\", \"format\": \"int64\" },\n          \"accountGroupIds\": { \"type\": \"array\", \"items\": { \"type\": \"string\" } },\n          \"resourceListIds\": { \"type\": \"array\", \"items\": { \"type\": \"string\" } },\n          \"codeRepositoryIds\": {\n            \"type\": \"array\",\n            \"items\": { \"type\": \"string\" }\n          },\n          \"associatedUsers\": { \"type\": \"array\", \"items\": { \"type\": \"string\" } },\n          \"restrictDismissalAccess\": { \"type\": \"boolean\" },\n          \"additionalAttributes\": { \"$ref\": \"#/components/schemas/Attributes\" },\n          \"roleType\": { \"type\": \"string\" }\n        }\n      },\n      \"CustomerNameResponse\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"customerName\": { \"type\": \"string\" },\n          \"prismaId\": { \"type\": \"string\" },\n          \"tosAccepted\": { \"type\": \"boolean\" }\n        }\n      },\n      \"LoginResponse\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"message\": { \"type\": \"string\" },\n          \"token\": { \"type\": \"string\" },\n          \"customerNames\": {\n            \"type\": \"array\",\n            \"items\": { \"$ref\": \"#/components/schemas/CustomerNameResponse\" }\n          },\n          \"roles\": {\n            \"uniqueItems\": true,\n            \"type\": \"array\",\n            \"items\": { \"type\": \"string\" }\n          }\n        }\n      },\n      \"GetServicesResponse\": {\n        \"required\": [\"services\"],\n        \"type\": \"object\",\n        \"properties\": {\n          \"services\": {\n            \"uniqueItems\": true,\n            \"type\": \"array\",\n            \"items\": { \"$ref\": \"#/components/schemas/ServiceResponse\" }\n          },\n          \"errors\": {\n            \"type\": \"object\",\n            \"additionalProperties\": { \"type\": \"string\" }\n          }\n        }\n      },\n      \"JwkResponse\": {\n        \"required\": [\"alg\", \"key_ops\", \"kid\", \"kty\", \"used_for_grant\"],\n        \"type\": \"object\",\n        \"properties\": {\n          \"kid\": { \"type\": \"string\" },\n          \"kty\": { \"type\": \"string\" },\n          \"alg\": {\n            \"type\": \"string\",\n            \"enum\": [\"HS256\", \"HS384\", \"HS512\", \"RS256\", \"RS384\", \"RS512\"]\n          },\n          \"key_ops\": { \"type\": \"array\", \"items\": { \"type\": \"string\" } },\n          \"used_for_grant\": { \"type\": \"boolean\" },\n          \"expires_at\": { \"type\": \"integer\", \"format\": \"int64\" },\n          \"token_duration_seconds\": { \"type\": \"integer\", \"format\": \"int64\" },\n          \"k\": { \"type\": \"string\" },\n          \"e\": { \"type\": \"string\" },\n          \"n\": { \"type\": \"string\" },\n          \"d\": { \"type\": \"string\" },\n          \"p\": { \"type\": \"string\" },\n          \"q\": { \"type\": \"string\" },\n          \"dp\": { \"type\": \"string\" },\n          \"dq\": { \"type\": \"string\" },\n          \"qi\": { \"type\": \"string\" }\n        }\n      },\n      \"JwksResponse\": {\n        \"required\": [\"keys\"],\n        \"type\": \"object\",\n        \"properties\": {\n          \"keys\": {\n            \"uniqueItems\": true,\n            \"type\": \"array\",\n            \"items\": { \"$ref\": \"#/components/schemas/JwkResponse\" }\n          }\n        }\n      },\n      \"ServiceResponse\": {\n        \"required\": [\n          \"id\",\n          \"is_enabled\",\n          \"jwks\",\n          \"password\",\n          \"roles\",\n          \"username\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"id\": { \"type\": \"integer\", \"format\": \"int64\" },\n          \"username\": { \"type\": \"string\" },\n          \"password\": { \"type\": \"string\" },\n          \"roles\": {\n            \"uniqueItems\": true,\n            \"type\": \"array\",\n            \"items\": { \"type\": \"string\" }\n          },\n          \"jwks\": { \"$ref\": \"#/components/schemas/JwksResponse\" },\n          \"customer_name\": { \"type\": \"string\", \"deprecated\": true },\n          \"prisma_id\": { \"type\": \"string\" },\n          \"is_enabled\": { \"type\": \"boolean\" }\n        }\n      },\n      \"LoginRequest\": {\n        \"title\": \"Model used for authentication\",\n        \"type\": \"object\",\n        \"properties\": {\n          \"username\": { \"type\": \"string\" },\n          \"customerName\": { \"type\": \"string\" },\n          \"prismaId\": { \"type\": \"string\" },\n          \"password\": { \"type\": \"string\" },\n          \"tosAccepted\": { \"type\": \"boolean\" },\n          \"ssoSession\": { \"type\": \"boolean\" }\n        },\n        \"description\": \"Model used for authentication\"\n      },\n      \"EntitlementToRoleSearchRequest\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"resourceListIds\": {\n            \"uniqueItems\": true,\n            \"type\": \"array\",\n            \"items\": { \"type\": \"string\" }\n          },\n          \"accountGroupIds\": {\n            \"uniqueItems\": true,\n            \"type\": \"array\",\n            \"items\": { \"type\": \"string\" }\n          },\n          \"codeRepositoryIds\": {\n            \"uniqueItems\": true,\n            \"type\": \"array\",\n            \"items\": { \"type\": \"string\" }\n          }\n        }\n      },\n      \"UserProfileInternal\": {\n        \"required\": [\"email\", \"firstName\", \"lastName\", \"timeZone\"],\n        \"type\": \"object\",\n        \"properties\": {\n          \"email\": { \"type\": \"string\" },\n          \"firstName\": { \"type\": \"string\" },\n          \"lastName\": { \"type\": \"string\" },\n          \"timeZone\": {\n            \"type\": \"string\",\n            \"description\": \"Time zone (e.g. America/Los_Angeles)\"\n          },\n          \"enabled\": { \"type\": \"boolean\", \"readOnly\": true },\n          \"lastModifiedBy\": { \"type\": \"string\", \"readOnly\": true },\n          \"lastModifiedTs\": {\n            \"type\": \"integer\",\n            \"format\": \"int64\",\n            \"readOnly\": true\n          },\n          \"lastLoginTs\": {\n            \"type\": \"integer\",\n            \"format\": \"int64\",\n            \"readOnly\": true\n          },\n          \"displayName\": { \"type\": \"string\", \"readOnly\": true },\n          \"ssoBypassAllowed\": { \"type\": \"boolean\" },\n          \"accessKeysAllowed\": { \"type\": \"boolean\" },\n          \"defaultRoleId\": { \"type\": \"string\" },\n          \"roleIds\": { \"type\": \"array\", \"items\": { \"type\": \"string\" } },\n          \"roles\": {\n            \"type\": \"array\",\n            \"items\": { \"$ref\": \"#/components/schemas/UserProfileRoleDetail\" }\n          },\n          \"activeRole\": {\n            \"$ref\": \"#/components/schemas/UserProfileRoleDetail\"\n          },\n          \"username\": {\n            \"type\": \"string\",\n            \"description\": \"User or service account name\"\n          },\n          \"type\": {\n            \"type\": \"string\",\n            \"description\": \"User type. Default is USER_ACCOUNT.\",\n            \"enum\": [\"USER_ACCOUNT\", \"SERVICE_ACCOUNT\"]\n          },\n          \"accessKeyName\": { \"type\": \"string\" },\n          \"accessKeyExpiration\": {\n            \"type\": \"integer\",\n            \"description\": \"Access key expiration timestamp in milliseconds\",\n            \"format\": \"int64\"\n          },\n          \"enableKeyExpiration\": {\n            \"type\": \"boolean\",\n            \"description\": \"true = Enable access key expiration. Default is false.\"\n          },\n          \"accessKeysCount\": {\n            \"type\": \"integer\",\n            \"description\": \"Access key count\",\n            \"format\": \"int32\",\n            \"readOnly\": true\n          },\n          \"sfSyncStatus\": { \"type\": \"boolean\" },\n          \"userRoleName\": { \"type\": \"string\", \"writeOnly\": true }\n        }\n      },\n      \"PermissionGroupRequest\": {\n        \"title\": \"Model used for permission group\",\n        \"required\": [\"features\", \"name\"],\n        \"type\": \"object\",\n        \"properties\": {\n          \"name\": { \"type\": \"string\", \"description\": \"Permission Group Name\" },\n          \"description\": {\n            \"type\": \"string\",\n            \"description\": \"Permission Group Description\"\n          },\n          \"features\": {\n            \"type\": \"array\",\n            \"description\": \"List of Prisma Cloud Features\",\n            \"items\": { \"$ref\": \"#/components/schemas/Feature\" }\n          }\n        }\n      },\n      \"ForgotPasswordRequest\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"username\": { \"type\": \"string\" },\n          \"resetToken\": { \"type\": \"string\" },\n          \"recaptchaResponse\": { \"type\": \"string\" }\n        }\n      },\n      \"PermissionGroupDetail\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"name\": { \"type\": \"string\", \"description\": \"Permission Group Name\" },\n          \"description\": {\n            \"type\": \"string\",\n            \"description\": \"Permission Group Description\"\n          },\n          \"type\": {\n            \"type\": \"string\",\n            \"description\": \"Permission Group Type\",\n            \"enum\": [\"Default\", \"Custom\", \"Internal\", \"Default\", \"Custom\"]\n          },\n          \"lastModifiedBy\": { \"type\": \"string\" },\n          \"lastModifiedTs\": { \"type\": \"integer\", \"format\": \"int64\" },\n          \"associatedRoles\": {\n            \"type\": \"object\",\n            \"additionalProperties\": {\n              \"type\": \"object\",\n              \"description\": \"Map of associated role Ids and Names\"\n            },\n            \"description\": \"Map of associated role Ids and Names\"\n          },\n          \"features\": { \"$ref\": \"#/components/schemas/Feature\" },\n          \"acceptAccountGroups\": {\n            \"type\": \"boolean\",\n            \"description\": \"acceptAccountGroups\"\n          },\n          \"acceptResourceLists\": {\n            \"type\": \"boolean\",\n            \"description\": \"acceptResourceLists\"\n          },\n          \"acceptCodeRepositories\": {\n            \"type\": \"boolean\",\n            \"description\": \"acceptCodeRepositories\"\n          },\n          \"custom\": {\n            \"type\": \"boolean\",\n            \"description\": \"Boolean value signifying whether this is a custom (i.e. user-defined) permission group. Is set to true if the attribute value of permissionGroupType is set to CUSTOM\"\n          },\n          \"id\": { \"type\": \"string\", \"description\": \"Permission Group ID\" }\n        }\n      },\n      \"PermissionGroup\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"name\": { \"type\": \"string\", \"description\": \"Permission Group Name\" },\n          \"custom\": {\n            \"type\": \"boolean\",\n            \"description\": \"Boolean value signifying whether this is a custom (i.e. user-defined) permission group. Is set to true if the attribute value of permissionGroupType is set to CUSTOM\"\n          },\n          \"id\": { \"type\": \"string\", \"description\": \"Permission Group ID\" }\n        }\n      },\n      \"User\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"username\": { \"type\": \"string\" },\n          \"password\": { \"type\": \"string\" },\n          \"firstname\": { \"type\": \"string\" },\n          \"lastname\": { \"type\": \"string\" },\n          \"timezone\": { \"type\": \"string\" },\n          \"resetToken\": { \"type\": \"string\" },\n          \"resetTokenTs\": { \"type\": \"integer\", \"format\": \"int64\" },\n          \"customerId\": { \"type\": \"integer\", \"format\": \"int32\" },\n          \"deleted\": { \"type\": \"boolean\" },\n          \"defaultUserRoleId\": { \"type\": \"string\" },\n          \"userRoleDetails\": {\n            \"type\": \"object\",\n            \"additionalProperties\": {\n              \"$ref\": \"#/components/schemas/UserInternalRoleDetail\"\n            }\n          },\n          \"customerName\": { \"type\": \"string\" },\n          \"lastLoginTime\": { \"type\": \"integer\", \"format\": \"int64\" },\n          \"tosBypassAllowed\": { \"type\": \"boolean\" },\n          \"lastModifiedBy\": { \"type\": \"string\" },\n          \"lastModifiedTs\": { \"type\": \"integer\", \"format\": \"int64\" },\n          \"tosAccepted\": { \"type\": \"boolean\" },\n          \"ssoBypassAllowed\": { \"type\": \"boolean\" },\n          \"sessionTimeout\": { \"type\": \"integer\", \"format\": \"int32\" },\n          \"provisional\": { \"type\": \"boolean\" },\n          \"canAssumeRole\": { \"type\": \"boolean\" },\n          \"supportAccessLevel\": {\n            \"type\": \"string\",\n            \"enum\": [\"NONE\", \"LIGHT_AGENT\", \"AGENT\", \"ADMIN\"]\n          },\n          \"accessKeysAllowed\": { \"type\": \"boolean\" },\n          \"sfSyncStatus\": { \"type\": \"boolean\" },\n          \"type\": {\n            \"type\": \"string\",\n            \"enum\": [\"USER_ACCOUNT\", \"SERVICE_ACCOUNT\"]\n          },\n          \"fullName\": { \"type\": \"string\" },\n          \"active\": { \"type\": \"boolean\" }\n        },\n        \"description\": \"User object\"\n      },\n      \"UserInternalRoleDetail\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"id\": { \"type\": \"string\" },\n          \"name\": { \"type\": \"string\" },\n          \"permissionGroup\": { \"$ref\": \"#/components/schemas/PermissionGroup\" },\n          \"restrictedDismissalAccess\": { \"type\": \"boolean\" },\n          \"hasDefenderPermissions\": { \"type\": \"boolean\" },\n          \"onlyAllowReadAccess\": { \"type\": \"boolean\" },\n          \"onlyAllowComputeAccess\": { \"type\": \"boolean\" },\n          \"onlyAllowCIAccess\": { \"type\": \"boolean\" }\n        }\n      },\n      \"MultiRoleUserProfile\": {\n        \"required\": [\"email\", \"firstName\", \"lastName\", \"timeZone\"],\n        \"type\": \"object\",\n        \"properties\": {\n          \"email\": { \"type\": \"string\" },\n          \"firstName\": { \"type\": \"string\" },\n          \"lastName\": { \"type\": \"string\" },\n          \"timeZone\": {\n            \"type\": \"string\",\n            \"description\": \"Time zone (e.g. America/Los_Angeles)\"\n          },\n          \"enabled\": { \"type\": \"boolean\", \"readOnly\": true },\n          \"lastModifiedBy\": { \"type\": \"string\", \"readOnly\": true },\n          \"lastModifiedTs\": {\n            \"type\": \"integer\",\n            \"format\": \"int64\",\n            \"readOnly\": true\n          },\n          \"lastLoginTs\": {\n            \"type\": \"integer\",\n            \"format\": \"int64\",\n            \"readOnly\": true\n          },\n          \"displayName\": { \"type\": \"string\", \"readOnly\": true },\n          \"ssoBypassAllowed\": { \"type\": \"boolean\" },\n          \"accessKeysAllowed\": { \"type\": \"boolean\" },\n          \"defaultRoleId\": { \"type\": \"string\" },\n          \"roleIds\": { \"type\": \"array\", \"items\": { \"type\": \"string\" } },\n          \"roles\": {\n            \"type\": \"array\",\n            \"items\": { \"$ref\": \"#/components/schemas/UserProfileRoleDetail\" }\n          },\n          \"activeRole\": {\n            \"$ref\": \"#/components/schemas/UserProfileRoleDetail\"\n          },\n          \"userRoleName\": { \"type\": \"string\", \"writeOnly\": true }\n        }\n      },\n      \"SsoConfig\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"identityProvider\": { \"title\": \"IdP Issuer URI\", \"type\": \"string\" },\n          \"certificate\": { \"title\": \"IdP Certificate\", \"type\": \"string\" },\n          \"enabled\": { \"title\": \"SSO Enabled\", \"type\": \"boolean\" },\n          \"logoutRedirectUrl\": {\n            \"title\": \"IdP Sign-Off URL\",\n            \"type\": \"string\"\n          },\n          \"relayStateParamName\": {\n            \"title\": \"IdP Relay State Param\",\n            \"type\": \"string\"\n          },\n          \"lastLoginErrors\": {\n            \"title\": \"Last Login Errors\",\n            \"type\": \"array\",\n            \"items\": { \"title\": \"Last Login Errors\", \"type\": \"string\" }\n          },\n          \"audienceUri\": {\n            \"title\": \"AudienceUri or Prisma Cloud SP-Entity-Id\",\n            \"type\": \"string\"\n          },\n          \"autoProvisionEnabled\": {\n            \"title\": \"AutoProvision Enabled\",\n            \"type\": \"boolean\"\n          },\n          \"requireAccessSamlUrlPublic\": {\n            \"title\": \"Skip Public address check for Access SAML URL\",\n            \"type\": \"boolean\"\n          },\n          \"autoProvisionSamlEmail\": {\n            \"title\": \"AutoProvision SAML Attribute - Email (Mandatory)\",\n            \"type\": \"string\"\n          },\n          \"autoProvisionSamlFirstName\": {\n            \"title\": \"AutoProvision SAML Attribute - First name (Mandatory)\",\n            \"type\": \"string\"\n          },\n          \"autoProvisionSamlLastName\": {\n            \"title\": \"AutoProvision SAML Attribute - Last name (Mandatory)\",\n            \"type\": \"string\"\n          },\n          \"autoProvisionSamlRole\": {\n            \"title\": \"AutoProvision SAML Attribute - Role (Mandatory)\",\n            \"type\": \"string\"\n          },\n          \"autoProvisionSamlTimezone\": {\n            \"title\": \"AutoProvision SAML Attribute - TZ\",\n            \"type\": \"string\"\n          },\n          \"redLockAccessSamlUrl\": {\n            \"title\": \"IdP Configured Prisma Cloud Access URL\",\n            \"type\": \"string\"\n          }\n        }\n      },\n      \"UserAccessKeyResponse\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"Access key id\": {\n            \"type\": \"string\",\n            \"format\": \"uuid\",\n            \"readOnly\": true\n          },\n          \"name\": { \"type\": \"string\" },\n          \"expiresOn\": {\n            \"type\": \"integer\",\n            \"description\": \"Timestamp in milliseconds when access key expires\",\n            \"format\": \"int64\"\n          }\n        }\n      },\n      \"AccountFilterVO\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"groupIds\": { \"type\": \"array\", \"items\": { \"type\": \"string\" } },\n          \"groupNames\": { \"type\": \"array\", \"items\": { \"type\": \"string\" } },\n          \"cloudTypes\": { \"type\": \"array\", \"items\": { \"type\": \"string\" } },\n          \"fetchEnabledAccountsOnly\": { \"type\": \"boolean\" }\n        }\n      },\n      \"ResourceListFilterVO\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"resourceListIds\": { \"type\": \"array\", \"items\": { \"type\": \"string\" } },\n          \"resourceListNames\": {\n            \"type\": \"array\",\n            \"items\": { \"type\": \"string\" }\n          },\n          \"resourceListTypes\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"type\": \"string\",\n              \"enum\": [\n                \"TAG\",\n                \"RESOURCE_ID\",\n                \"STRING\",\n                \"IP_ADDRESS\",\n                \"NUMBER\",\n                \"RESOURCE_GROUP\",\n                \"COMPUTE_ACCESS_GROUP\"\n              ]\n            }\n          }\n        }\n      },\n      \"UserEntitlementsRequestVO\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"redLockResourceType\": { \"type\": \"string\" },\n          \"requestType\": { \"type\": \"string\" },\n          \"accountFilters\": { \"$ref\": \"#/components/schemas/AccountFilterVO\" },\n          \"resourceListFilters\": {\n            \"$ref\": \"#/components/schemas/ResourceListFilterVO\"\n          },\n          \"userClientIp\": { \"type\": \"string\" },\n          \"doIpWhitelistCheck\": { \"type\": \"boolean\" },\n          \"doAuthorizationCheck\": { \"type\": \"boolean\" },\n          \"fetchAccountGroups\": { \"type\": \"boolean\" },\n          \"fetchAccounts\": { \"type\": \"boolean\" },\n          \"fetchResourceLists\": { \"type\": \"boolean\" },\n          \"fetchCodeRepositories\": { \"type\": \"boolean\" },\n          \"fetchNonOnboardedAccounts\": { \"type\": \"boolean\" },\n          \"doSupportAccessCheck\": { \"type\": \"boolean\" },\n          \"requiredSupportAccessLevel\": {\n            \"type\": \"string\",\n            \"enum\": [\"NONE\", \"LIGHT_AGENT\", \"AGENT\", \"ADMIN\"]\n          }\n        }\n      },\n      \"CloudAccountMetaVO\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"accountId\": { \"type\": \"string\" },\n          \"accountName\": { \"type\": \"string\" },\n          \"enabled\": { \"type\": \"boolean\" },\n          \"cloudType\": { \"type\": \"string\" },\n          \"groupIds\": {\n            \"uniqueItems\": true,\n            \"type\": \"array\",\n            \"items\": { \"type\": \"string\" }\n          },\n          \"groupNames\": {\n            \"uniqueItems\": true,\n            \"type\": \"array\",\n            \"items\": { \"type\": \"string\" }\n          }\n        }\n      },\n      \"JsonNode\": { \"type\": \"object\" },\n      \"ResourceListVO\": {\n        \"required\": [\"resourceListType\"],\n        \"type\": \"object\",\n        \"properties\": {\n          \"id\": { \"type\": \"string\" },\n          \"name\": { \"type\": \"string\" },\n          \"resourceListType\": {\n            \"type\": \"string\",\n            \"enum\": [\n              \"TAG\",\n              \"RESOURCE_ID\",\n              \"STRING\",\n              \"IP_ADDRESS\",\n              \"NUMBER\",\n              \"RESOURCE_GROUP\",\n              \"COMPUTE_ACCESS_GROUP\"\n            ]\n          },\n          \"description\": { \"type\": \"string\" },\n          \"lastModifiedBy\": { \"type\": \"string\" },\n          \"lastModifiedTs\": { \"type\": \"integer\", \"format\": \"int64\" },\n          \"members\": { \"$ref\": \"#/components/schemas/JsonNode\" }\n        }\n      },\n      \"UserEntitlementsResponseVO\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"userMeta\": { \"$ref\": \"#/components/schemas/UserMetaVO\" },\n          \"groupIdVsName\": {\n            \"type\": \"object\",\n            \"additionalProperties\": { \"type\": \"string\" }\n          },\n          \"resourceLists\": {\n            \"type\": \"array\",\n            \"items\": { \"$ref\": \"#/components/schemas/ResourceListVO\" }\n          },\n          \"accounts\": {\n            \"type\": \"array\",\n            \"items\": { \"$ref\": \"#/components/schemas/CloudAccountMetaVO\" }\n          },\n          \"codeRepositoriesEntitlementUrl\": { \"type\": \"string\" }\n        }\n      },\n      \"UserMetaVO\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"username\": { \"type\": \"string\" },\n          \"roleType\": { \"type\": \"string\" },\n          \"customerName\": { \"type\": \"string\" },\n          \"timeZone\": { \"type\": \"string\" },\n          \"lastLoginTime\": { \"type\": \"integer\", \"format\": \"int64\" },\n          \"ssoSession\": { \"type\": \"boolean\" },\n          \"customerCreatedTs\": { \"type\": \"integer\", \"format\": \"int64\" },\n          \"licenseType\": {\n            \"type\": \"string\",\n            \"enum\": [\"ENTERPRISE\", \"BUSINESS\"]\n          },\n          \"customerId\": { \"type\": \"integer\", \"format\": \"int32\" },\n          \"prismaId\": { \"type\": \"string\" },\n          \"activeUserRoleId\": { \"type\": \"string\" },\n          \"supportAccessLevel\": {\n            \"type\": \"string\",\n            \"enum\": [\"NONE\", \"LIGHT_AGENT\", \"AGENT\", \"ADMIN\"]\n          }\n        }\n      },\n      \"UsernameVsDisplayName\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"id\": { \"type\": \"string\" },\n          \"name\": { \"type\": \"string\" }\n        }\n      },\n      \"TokenResponse\": {\n        \"type\": \"object\",\n        \"properties\": { \"empty\": { \"type\": \"boolean\" } },\n        \"additionalProperties\": { \"type\": \"string\" }\n      },\n      \"UserEntitlementsMeta\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"codeRepositoryIds\": {\n            \"type\": \"array\",\n            \"items\": { \"type\": \"string\" }\n          },\n          \"resourceListIds\": { \"type\": \"array\", \"items\": { \"type\": \"string\" } },\n          \"accountGroupIds\": { \"type\": \"array\", \"items\": { \"type\": \"string\" } }\n        },\n        \"description\": \"User entitlements\"\n      },\n      \"UserRoleView\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"id\": { \"type\": \"string\" },\n          \"name\": { \"type\": \"string\" },\n          \"description\": { \"type\": \"string\" },\n          \"lastModifiedBy\": { \"type\": \"string\" },\n          \"lastModifiedTs\": { \"type\": \"integer\", \"format\": \"int64\" },\n          \"accountGroupIds\": { \"type\": \"array\", \"items\": { \"type\": \"string\" } },\n          \"resourceListIds\": { \"type\": \"array\", \"items\": { \"type\": \"string\" } },\n          \"codeRepositoryIds\": {\n            \"type\": \"array\",\n            \"items\": { \"type\": \"string\" }\n          },\n          \"associatedUsers\": { \"type\": \"array\", \"items\": { \"type\": \"string\" } },\n          \"restrictDismissalAccess\": { \"type\": \"boolean\" },\n          \"additionalAttributes\": { \"$ref\": \"#/components/schemas/Attributes\" },\n          \"accountGroups\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"type\": \"object\",\n              \"additionalProperties\": { \"type\": \"string\" }\n            }\n          },\n          \"resourceLists\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"type\": \"object\",\n              \"additionalProperties\": { \"type\": \"string\" }\n            }\n          },\n          \"codeRepositories\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"type\": \"object\",\n              \"additionalProperties\": { \"type\": \"string\" }\n            }\n          },\n          \"accountIds\": {\n            \"uniqueItems\": true,\n            \"type\": \"array\",\n            \"items\": { \"type\": \"string\" }\n          },\n          \"roleType\": { \"type\": \"string\" }\n        }\n      },\n      \"UsernameValidationResponse\": {\n        \"type\": \"object\",\n        \"properties\": { \"regex\": { \"type\": \"string\" } }\n      },\n      \"CreateServiceRequest\": {\n        \"required\": [\"jwk\", \"roles\", \"username\"],\n        \"type\": \"object\",\n        \"properties\": {\n          \"username\": { \"type\": \"string\" },\n          \"password\": { \"type\": \"string\", \"deprecated\": true },\n          \"roles\": {\n            \"uniqueItems\": true,\n            \"type\": \"array\",\n            \"items\": { \"type\": \"string\" }\n          },\n          \"jwk\": { \"$ref\": \"#/components/schemas/Jwk\" },\n          \"customer_name\": { \"type\": \"string\", \"deprecated\": true },\n          \"prisma_id\": { \"type\": \"string\" }\n        }\n      },\n      \"Jwk\": {\n        \"required\": [\"alg\", \"token_duration_seconds\"],\n        \"type\": \"object\",\n        \"properties\": {\n          \"alg\": {\n            \"type\": \"string\",\n            \"enum\": [\"HS256\", \"HS384\", \"HS512\", \"RS256\", \"RS384\", \"RS512\"]\n          },\n          \"kid\": { \"type\": \"string\" },\n          \"token_duration_seconds\": {\n            \"maximum\": 3600,\n            \"minimum\": 60,\n            \"type\": \"integer\",\n            \"format\": \"int64\"\n          }\n        }\n      },\n      \"SamlLoginResponse\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"errorReasonExpectedValue\": { \"type\": \"string\" },\n          \"errorReasonActualValue\": { \"type\": \"string\" },\n          \"errorReasonKey\": {\n            \"type\": \"string\",\n            \"enum\": [\n              \"SAML_ASSERTION\",\n              \"SAML_ASSERTION_AUDIENCE_URI\",\n              \"SAML_ASSERTION_AUTHN_STATEMENT\",\n              \"SAML_ASSERTION_AUTHN_STATEMENT_SESSION_TIME\",\n              \"SAML_ASSERTION_CONDITIONS\",\n              \"SAML_ASSERTION_ISSUE_INSTANT\",\n              \"SAML_ASSERTION_ISSUER_URI\",\n              \"SAML_ASSERTION_SIGNATURE\",\n              \"SAML_ASSERTION_SUBJECT_CONFIRMATION_DATA_NOT_ON_OR_AFTER\",\n              \"SAML_ASSERTION_SUBJECT_CONFIRMATION_DATA_RECIPIENT\",\n              \"SAML_ASSERTION_TIME_LIMIT_NOT_BEFORE\",\n              \"SAML_ASSERTION_TIME_LIMIT_NOT_ON_OR_AFTER\",\n              \"SAML_CERTIFICATE\",\n              \"SAML_CONFIGURATION\",\n              \"SAML_CUSTOMER\",\n              \"SAML_DESTINATION_URI\",\n              \"SAML_PARSING_STATUS_CODE\",\n              \"SAML_RESPONSE\",\n              \"SAML_USER\"\n            ]\n          },\n          \"message\": { \"type\": \"string\" },\n          \"token\": { \"type\": \"string\" },\n          \"customerNames\": {\n            \"type\": \"array\",\n            \"items\": { \"$ref\": \"#/components/schemas/CustomerNameResponse\" }\n          },\n          \"forwardLocation\": { \"type\": \"string\" },\n          \"prismaSamlAttributes\": {\n            \"type\": \"object\",\n            \"additionalProperties\": { \"type\": \"object\" }\n          },\n          \"pingSamlAttributes\": {\n            \"type\": \"object\",\n            \"additionalProperties\": { \"type\": \"object\" }\n          },\n          \"errorInfoMultiple\": {\n            \"type\": \"string\",\n            \"writeOnly\": true,\n            \"enum\": [\n              \"SAML_ASSERTION\",\n              \"SAML_ASSERTION_AUDIENCE_URI\",\n              \"SAML_ASSERTION_AUTHN_STATEMENT\",\n              \"SAML_ASSERTION_AUTHN_STATEMENT_SESSION_TIME\",\n              \"SAML_ASSERTION_CONDITIONS\",\n              \"SAML_ASSERTION_ISSUE_INSTANT\",\n              \"SAML_ASSERTION_ISSUER_URI\",\n              \"SAML_ASSERTION_SIGNATURE\",\n              \"SAML_ASSERTION_SUBJECT_CONFIRMATION_DATA_NOT_ON_OR_AFTER\",\n              \"SAML_ASSERTION_SUBJECT_CONFIRMATION_DATA_RECIPIENT\",\n              \"SAML_ASSERTION_TIME_LIMIT_NOT_BEFORE\",\n              \"SAML_ASSERTION_TIME_LIMIT_NOT_ON_OR_AFTER\",\n              \"SAML_CERTIFICATE\",\n              \"SAML_CONFIGURATION\",\n              \"SAML_CUSTOMER\",\n              \"SAML_DESTINATION_URI\",\n              \"SAML_PARSING_STATUS_CODE\",\n              \"SAML_RESPONSE\",\n              \"SAML_USER\"\n            ]\n          },\n          \"errorInfoInvalid\": {\n            \"type\": \"string\",\n            \"writeOnly\": true,\n            \"enum\": [\n              \"SAML_ASSERTION\",\n              \"SAML_ASSERTION_AUDIENCE_URI\",\n              \"SAML_ASSERTION_AUTHN_STATEMENT\",\n              \"SAML_ASSERTION_AUTHN_STATEMENT_SESSION_TIME\",\n              \"SAML_ASSERTION_CONDITIONS\",\n              \"SAML_ASSERTION_ISSUE_INSTANT\",\n              \"SAML_ASSERTION_ISSUER_URI\",\n              \"SAML_ASSERTION_SIGNATURE\",\n              \"SAML_ASSERTION_SUBJECT_CONFIRMATION_DATA_NOT_ON_OR_AFTER\",\n              \"SAML_ASSERTION_SUBJECT_CONFIRMATION_DATA_RECIPIENT\",\n              \"SAML_ASSERTION_TIME_LIMIT_NOT_BEFORE\",\n              \"SAML_ASSERTION_TIME_LIMIT_NOT_ON_OR_AFTER\",\n              \"SAML_CERTIFICATE\",\n              \"SAML_CONFIGURATION\",\n              \"SAML_CUSTOMER\",\n              \"SAML_DESTINATION_URI\",\n              \"SAML_PARSING_STATUS_CODE\",\n              \"SAML_RESPONSE\",\n              \"SAML_USER\"\n            ]\n          },\n          \"errorInfoDisabled\": {\n            \"type\": \"string\",\n            \"writeOnly\": true,\n            \"enum\": [\n              \"SAML_ASSERTION\",\n              \"SAML_ASSERTION_AUDIENCE_URI\",\n              \"SAML_ASSERTION_AUTHN_STATEMENT\",\n              \"SAML_ASSERTION_AUTHN_STATEMENT_SESSION_TIME\",\n              \"SAML_ASSERTION_CONDITIONS\",\n              \"SAML_ASSERTION_ISSUE_INSTANT\",\n              \"SAML_ASSERTION_ISSUER_URI\",\n              \"SAML_ASSERTION_SIGNATURE\",\n              \"SAML_ASSERTION_SUBJECT_CONFIRMATION_DATA_NOT_ON_OR_AFTER\",\n              \"SAML_ASSERTION_SUBJECT_CONFIRMATION_DATA_RECIPIENT\",\n              \"SAML_ASSERTION_TIME_LIMIT_NOT_BEFORE\",\n              \"SAML_ASSERTION_TIME_LIMIT_NOT_ON_OR_AFTER\",\n              \"SAML_CERTIFICATE\",\n              \"SAML_CONFIGURATION\",\n              \"SAML_CUSTOMER\",\n              \"SAML_DESTINATION_URI\",\n              \"SAML_PARSING_STATUS_CODE\",\n              \"SAML_RESPONSE\",\n              \"SAML_USER\"\n            ]\n          },\n          \"errorInfoUnavailable\": {\n            \"type\": \"string\",\n            \"writeOnly\": true,\n            \"enum\": [\n              \"SAML_ASSERTION\",\n              \"SAML_ASSERTION_AUDIENCE_URI\",\n              \"SAML_ASSERTION_AUTHN_STATEMENT\",\n              \"SAML_ASSERTION_AUTHN_STATEMENT_SESSION_TIME\",\n              \"SAML_ASSERTION_CONDITIONS\",\n              \"SAML_ASSERTION_ISSUE_INSTANT\",\n              \"SAML_ASSERTION_ISSUER_URI\",\n              \"SAML_ASSERTION_SIGNATURE\",\n              \"SAML_ASSERTION_SUBJECT_CONFIRMATION_DATA_NOT_ON_OR_AFTER\",\n              \"SAML_ASSERTION_SUBJECT_CONFIRMATION_DATA_RECIPIENT\",\n              \"SAML_ASSERTION_TIME_LIMIT_NOT_BEFORE\",\n              \"SAML_ASSERTION_TIME_LIMIT_NOT_ON_OR_AFTER\",\n              \"SAML_CERTIFICATE\",\n              \"SAML_CONFIGURATION\",\n              \"SAML_CUSTOMER\",\n              \"SAML_DESTINATION_URI\",\n              \"SAML_PARSING_STATUS_CODE\",\n              \"SAML_RESPONSE\",\n              \"SAML_USER\"\n            ]\n          },\n          \"fullErrorMessage\": { \"type\": \"string\" },\n          \"customerId\": { \"type\": \"integer\", \"format\": \"int32\" },\n          \"prismaId\": { \"type\": \"string\" }\n        }\n      },\n      \"ExternalJwtIntegration\": {\n        \"title\": \"Model used for JWT integrations with external vendors\",\n        \"type\": \"object\",\n        \"properties\": { \"integration\": { \"type\": \"string\" } },\n        \"description\": \"Model used for JWT integrations with external vendors\"\n      },\n      \"UserSearchCriteria\": {\n        \"title\": \"User Search Request Filter\",\n        \"type\": \"object\",\n        \"properties\": {\n          \"permissionGroupIds\": {\n            \"type\": \"array\",\n            \"items\": { \"type\": \"string\" }\n          },\n          \"userRoleIds\": { \"type\": \"array\", \"items\": { \"type\": \"string\" } }\n        }\n      },\n      \"PageListUserSearchVO\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"content\": {\n            \"type\": \"array\",\n            \"items\": { \"$ref\": \"#/components/schemas/UserSearchVO\" }\n          },\n          \"nextPageToken\": { \"type\": \"string\" }\n        }\n      },\n      \"RoleDetail\": {\n        \"type\": \"object\",\n        \"properties\": { \"roleId\": { \"type\": \"string\" } },\n        \"description\": \"List of role IDs\"\n      },\n      \"UserSearchVO\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"username\": {\n            \"type\": \"string\",\n            \"description\": \"User name / User email\"\n          },\n          \"roles\": {\n            \"type\": \"array\",\n            \"description\": \"List of role IDs\",\n            \"items\": { \"$ref\": \"#/components/schemas/RoleDetail\" }\n          },\n          \"timezone\": { \"type\": \"string\", \"description\": \"timeZone\" },\n          \"ssoBypassAllowed\": {\n            \"type\": \"boolean\",\n            \"description\": \"ssoBypassAllowed\"\n          },\n          \"accessKeysAllowed\": {\n            \"type\": \"boolean\",\n            \"description\": \"accessKeysAllowed\"\n          }\n        }\n      },\n      \"UserAccessKeyRequest\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"name\": { \"type\": \"string\", \"description\": \"Access Key Name\" },\n          \"expiresOn\": {\n            \"type\": \"integer\",\n            \"description\": \"Timestamp in milliseconds when access key expires\",\n            \"format\": \"int64\"\n          },\n          \"serviceAccountName\": { \"type\": \"string\" }\n        }\n      },\n      \"UpdateServiceRequest\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"password\": { \"type\": \"string\" },\n          \"roles\": {\n            \"uniqueItems\": true,\n            \"type\": \"array\",\n            \"items\": { \"type\": \"string\" }\n          },\n          \"jwk\": { \"$ref\": \"#/components/schemas/Jwk\" },\n          \"customer_name\": { \"type\": \"string\", \"deprecated\": true },\n          \"prisma_id\": { \"type\": \"string\" },\n          \"add_roles\": {\n            \"uniqueItems\": true,\n            \"type\": \"array\",\n            \"items\": { \"type\": \"string\" }\n          },\n          \"remove_roles\": {\n            \"uniqueItems\": true,\n            \"type\": \"array\",\n            \"items\": { \"type\": \"string\" }\n          },\n          \"is_enabled\": { \"type\": \"boolean\" }\n        }\n      },\n      \"TokenInfoResponse\": {\n        \"required\": [\"active\"],\n        \"type\": \"object\",\n        \"properties\": {\n          \"active\": { \"type\": \"boolean\" },\n          \"username\": { \"type\": \"string\" },\n          \"roles\": {\n            \"uniqueItems\": true,\n            \"type\": \"array\",\n            \"items\": { \"type\": \"string\" }\n          },\n          \"authorized\": {\n            \"type\": \"boolean\",\n            \"description\": \"Null if roles query param is not sent otherwise {true only if the roles are authorized for the token}\"\n          },\n          \"exp\": { \"type\": \"integer\", \"format\": \"int64\" },\n          \"prismaId\": { \"type\": \"string\" },\n          \"claims\": {\n            \"type\": \"object\",\n            \"additionalProperties\": { \"type\": \"object\" }\n          },\n          \"ipAddressClaimIsTrusted\": {\n            \"type\": \"string\",\n            \"description\": \"ipAddress claim trusted ip outcome\",\n            \"enum\": [\n              \"NOT_PERFORMED\",\n              \"PERFORMED_AND_VALID\",\n              \"PERFORMED_AND_INVALID\"\n            ]\n          },\n          \"customer_name\": { \"type\": \"string\" },\n          \"user_type\": { \"type\": \"string\", \"enum\": [\"USER\", \"SERVICE\"] }\n        }\n      },\n      \"UsernamePasswordRequest\": {\n        \"title\": \"Model used to validate user/password\",\n        \"type\": \"object\",\n        \"properties\": {\n          \"username\": { \"type\": \"string\" },\n          \"password\": { \"type\": \"string\" }\n        }\n      },\n      \"RoleSwitchResponse\": {\n        \"type\": \"object\",\n        \"properties\": { \"token\": { \"type\": \"string\" } }\n      },\n      \"SupportUserProfileRequest\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"email\": { \"type\": \"string\" },\n          \"supportAccessLevel\": { \"type\": \"string\" }\n        }\n      },\n      \"SamlLoginRequest\": {\n        \"title\": \"Model used for saml authentication\",\n        \"required\": [\"rawSaml\", \"requestIpAddress\"],\n        \"type\": \"object\",\n        \"properties\": {\n          \"rawSaml\": { \"type\": \"string\" },\n          \"requestIpAddress\": { \"type\": \"string\" },\n          \"relayState\": { \"type\": \"string\" }\n        }\n      }\n    },\n    \"headers\": {\n      \"prismaId\": {\n        \"description\": \"x-prisma-tenant-id\",\n        \"style\": \"simple\",\n        \"schema\": { \"type\": \"string\" }\n      }\n    },\n    \"securitySchemes\": {\n      \"x-redlock-auth\": {\n        \"description\": \"The x-redlock-auth value is a JSON Web Token (JWT).\",\n        \"in\": \"header\",\n        \"name\": \"x-redlock-auth\",\n        \"type\": \"apiKey\"\n      }\n    }\n  }\n}\n",
			"canonicalURL": "/github.com/PaloAltoNetworks/prisma.pan.dev@71ecdd26ae7e99b44dc6fdb477f8a4de236e8121/-/blob/static/oas/cspm/dist/PermissionGroups.json",
			"externalURLs": [
				{
					"url": "https://github.com/PaloAltoNetworks/prisma.pan.dev/blob/71ecdd26ae7e99b44dc6fdb477f8a4de236e8121/static/oas/cspm/dist/PermissionGroups.json",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "parse: parse spec: parse components: schemas: \"PermissionGroupDetail\": resolve \"#/components/schemas/PermissionGroupDetail\": property \"type\": at static/oas/cspm/dist/PermissionGroups.json:936:22: duplicate enum value: \"\\\"Default\\\"\""
}