{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/mrin9/RapiDoc"
		},
		"file": {
			"name": "parameters.yaml",
			"path": "docs/specs/parameters.yaml",
			"content": "openapi: 3.0.0\ninfo:\n  title: Request Parameters Test Cases\n  description: Various request parameters types with defaults, examples and allowed values\n  version: 1.0.0\npaths:\n  /request-parameters:\n    post:\n      tags:\n        - Request Parameters\n      summary: 1. Request parameter test cases\n      description: Various request parameters types with defaults, examples and allowed values\n      parameters:\n        - name: country-code-1\n          in: query\n          description: Parameter level `single` example for a string parameter (has allowed-values)\n          example: us\n          schema:\n            type: string\n            enum:\n              - us\n              - in\n              - jp\n            default: us\n        - name: country-code-2\n          in: query\n          description: Field level `single` example for a string parameter (has allowed-values)\n          schema:\n            type: string\n            example: us\n            enum:\n              - us\n              - in\n              - jp\n            default: us\n        - name: country-code-3\n          in: query\n          description: Parameter level `multiple` examples (`only values`) for a string parameter (has allowed-values)\n          examples: \n            - us\n            - jp\n          schema:\n            type: string\n            enum:\n              - us\n              - in\n              - jp\n            default: us\n        - name: country-code-4\n          in: query\n          description: Parameter level `multiple` examples (with `value and summary`) for a string parameter (has allowed-values)\n          examples: \n            example-1:\n              value: us\n              summary: United States\n            example-2:\n              value: in\n              summary: India\n          schema:\n            type: string\n            enum:\n              - us\n              - in\n              - jp\n        - name: country-code-5\n          description: Parameter level `single` example for a `array` parameter (has allowed-values)\n          in: query\n          example:\n            - us\n            - jp\n          schema:\n            type: array\n            minItems: 1\n            maxItems: 3\n            items:\n              type: string\n              enum:\n              - us\n              - in\n              - jp\n        - name: country-code-6\n          description: Parameter level `multiple` example for a `array` parameter (has allowed-values)\n          in: query\n          examples:\n            example-1:\n              value:\n                - in\n                - jp\n              summary: India and Japan  \n            example-2:\n              value:\n                - in\n                - us\n              summary: India and United States\n          schema:\n            type: array\n            minItems: 1\n            maxItems: 3\n            items:\n              type: string\n              enum:\n              - us\n              - in\n              - jp\n        - name: country-code-7\n          description: Schema-Field level `single` examples for a `array` parameter (has allowed-values)\n          in: query\n          schema:\n            type: array\n            example:\n              - us\n              - jp\n            items:\n              type: string\n              enum:\n              - us\n              - in\n              - jp\n        - name: country-code-8\n          description: |\n            Schema-Field level `multiple` examples (with value and summary) for a `array` parameter (has allowed-values)\n\n            **INVALID** \u003e `examples` under schema is `NOT ALLOWED`\n          in: query\n          schema:\n            type: array\n            examples:\n              - in\n              - jp\n            items:\n              type: string\n              enum:\n              - us\n              - in\n              - jp              \n        - name: country-code-9\n          description: |\n            Schema-Field level `multiple` examples (with value and summary) for a `array` parameter (has allowed-values)\n\n            **INVALID** \u003e `examples` under schema is `NOT ALLOWED`\n          in: query\n          schema:\n            type: array\n            examples:\n              example-1:\n                value:\n                  - in\n                  - jp\n                summary: India and Japan  \n              example-2:\n                value:\n                  - in\n                  - us\n                summary: India and United States\n            items:\n              type: string\n              enum:\n              - us\n              - in\n              - jp\n        - name: country-code-10\n          in: query\n          description: No example provided for `string`\n          schema:\n            type: string\n            default: us\n            enum:\n              - us\n              - in\n              - jp\n        - name: country-code-11\n          description: No example provided for `array`\n          in: query\n          default: \n          - us\n          - in\n          schema:\n            type: array\n            minItems: 1\n            maxItems: 3\n            items:\n              type: string\n              enum:\n              - us\n              - in\n              - jp\n      requestBody:\n        content:\n          multipart/form-data:\n            schema:\n              type: object\n              properties:\n                namePart:\n                  type: object\n                  description: |\n                    `firstName` and `lastName` of the person\n                  properties:\n                    firstName:\n                      type: string\n                    lastName:\n                      type: string\n                agePart:\n                  type: integer\n                  description: 'Age of the person'\n                genderPart:\n                  type: gender\n                  default: male\n                  example: female\n                  description: 'Gender of the person'\n                interest:\n                  type: array\n                  example:\n                    - music\n                    - dance\n                  items:\n                    type: string\n                    enum:\n                    - music\n                    - dance\n                    - hiking\n                photoPart:\n                  type: string\n                  format: binary\n      responses:\n        '200':\n          description: successful operation\n  /request-body-data-as-json:\n    post:\n      summary: 2. Request body as JSON\n      tags:\n        - Request Parameters\n      requestBody:\n        description: Request body as **JSON**\n        required: true\n        content:\n          application/json:\n            schema:\n              type: array\n              items:\n                type: object\n                properties:\n                  amount:\n                    type: integer\n                    description: Amount\n                  currency:\n                    type: string\n                    description: Currency Code\n            examples:\n              USD:\n                description: Cost in `US Dollars`\n                value: |\n                  {\n                    amount: 10,\n                    currency: USD\n                  }\n              INR:\n                description: Cost in `Indian Rupees`\n                value: |\n                  {\n                    amount: 700,\n                    currency: INR\n                  }\n      responses:\n        '200':\n          description: successful operation\n  /request-body-data-as-form-data:\n    post:\n      summary: 3. Request body as FORM DATA\n      tags:\n        - Request Parameters\n      requestBody:\n        description: Request body as **FORM DATA**\n        required: true\n        content:\n          application/json:\n            schema:\n              type: array\n              items:\n                type: object\n                properties:\n                  amount:\n                    type: integer\n                    description: Amount\n                  currency:\n                    type: string\n                    description: Currency Code\n            examples:\n              USD:\n                description: Cost in `US Dollars`\n                value: |\n                  {\n                    amount: 10,\n                    currency: USD\n                  }\n              INR:\n                description: Cost in `Indian Rupees`\n                value: |\n                  {\n                    amount: 700,\n                    currency: INR\n                  }\n      responses:\n        '200':\n          description: successful operation\n"
		}
	},
	"Error": "json: cannot unmarshal array into Go struct field Parameter.paths.post.parameters.examples of type map[string]*ogen.Example"
}