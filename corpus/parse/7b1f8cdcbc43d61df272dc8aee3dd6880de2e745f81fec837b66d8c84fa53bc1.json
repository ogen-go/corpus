{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/CiscoDevNet/esxi-auto-installer"
		},
		"file": {
			"name": "swagger.yml",
			"size": 0,
			"path": "auto-installer_docker/auto-installer_flask/static/swagger.yml",
			"byteSize": 8459,
			"content": "openapi: 3.0.1\ninfo:\n  title: ESXi AutoInstaller\n  description: 'This tools helps you install multiple ESXi hosts automatically.'\n  license:\n    name: CISCO SAMPLE CODE LICENSE\n    url: https://github.com/CiscoDevNet/esxi-auto-installer/blob/main/LICENSE\n  version: 1.0.0\nexternalDocs:\n  description: GitHub repository\n  url: https://github.com/CiscoDevNet/esxi-auto-installer\nservers:\n- url: /api/v1\ntags:\n- name: jobs\n- name: logs\n- name: iso\npaths:\n  /jobs:\n    get:\n      tags:\n      - jobs\n      summary: Returns a list of jobs.\n      description: Returns a list of all the jobs and their status.\n      responses:\n        '200':\n          description: 'OK'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Jobs'\n    post:\n      tags:\n      - jobs\n      summary: 'Create a new ESXi Installation job.'\n      description: |\n        Take installation details as json payload and create installation job per each host in 'hosts' list.\u003cbr\u003e\n        Mandatory (minimal) input data parameters:\n          - iso_image\n          - root_pwd\n          - cimc_pwd\n          - host_netmask\n          - host_gateway\n          - hosts list (at least one entry with {hostname, ipaddr, cimcip})\n\n        Refer to schema definition for all parameters and default values.\n      parameters:\n        - in: body\n          name: body\n          required: true\n          schema:\n            $ref: '#/components/schemas/JobsNew'\n      responses:\n        '200':\n          description: Successful operation - return list of job IDs\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/JobIDs'\n        '400':\n          description: Failed operation, check returned error message for details\n          content:\n            application/json:\n              schema:\n                type: string\n                example: \"Incorrect key when trying to create a new job. Expected key: 'host_ip'\"\n  /jobs/{jobID}:\n    get:\n      tags:\n      - jobs\n      summary: Returns details for a specific job.\n      parameters:\n      - name: jobID\n        in: path\n        description: ID of job.\n        required: true\n        schema:\n          type: string\n      responses:\n        '200':\n          description: 'OK'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/JobStatus'\n    put:\n      tags:\n      - jobs\n      summary: Update a job entry.\n      description: |\n        Updates the status of a particular job.\u003cbr\u003e\n        ```\n         0: Ready to deploy\n        10: Connecting to CIMC\n        11: Mounting installation ISO\n        15: Installation in progress\n        16: Running First Boot\n        18: Running cleanup tasks\n        20: Finished\n        30: Error\n        31: Error: Failed to login to CIMC\n        32: Error: Failed to mount installation ISO\n        33: Error: UEFI Secure Boot Mode enabled\n        ```\n      parameters:\n      - name: jobID\n        in: path\n        description: ID of job.\n        required: true\n        schema:\n          type: string\n      - name: state\n        in: query\n        description: New job status\n        required: true\n        style: form\n        explode: true\n        schema:\n          type: integer\n          maximum: 32\n      responses:\n        '200':\n          description: 'OK'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/JobStatus'\n  /logs/{jobID}:\n    get:\n      tags:\n      - logs\n      summary: View job logs\n      parameters:\n      - name: jobID\n        in: path\n        description: ID of job.\n        required: true\n        schema:\n          type: string\n      responses:\n        '200':\n          description: OK\n          content:\n            text/plain:\n              schema:\n                type: string\n                example: |\n                  2022-01-01 07:07:07 GMT [INFO] Processing job ID: 172.17.20.79_1631556521.7252097, server Prefix-01-Suffix\n\n                  2022-01-01 07:07:07 GMT [INFO] Generating kickstart file for server\n                  2022-01-01 07:07:07 GMT [INFO] Generated kickstart configuration:\n  /isos:\n    get:\n      tags:\n      - iso\n      summary: Get a list of available ESXi Installation ISO(s)\n      description: |\n        Returns a list of available installation ISOs\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/IsoList'\ncomponents:\n  schemas:\n    Jobs:\n      description: \"jobID is a unique string, default: {cimcip}_{timestamp}, eg. '192.168.0.1_1628871425.1136827'\"\n      type: object\n      properties:\n        jobID:\n          $ref: '#/components/schemas/JobStatus'\n    JobsNew:\n      description: Submit new job\n      type: object\n      required:\n      - iso_image\n      - root_pwd\n      - cimc_pwd\n      - host_netmask\n      - host_gateway\n      - hosts\n      properties:\n        iso_image:\n          type: string\n          example: VMware-ESXi-7.0.0_U2-16324942-Custom\n        root_pwd:\n          type: string\n          format: password\n        vlan:\n          type: integer\n          format: int32\n          maximum: 4096\n          default: 0\n        vmnic:\n          type: integer\n          format: int32\n        firstdisk:\n          type: string\n          enum: ['firstdiskfound', 'firstdisk', 'diskpath']\n          default: 'firstdiskfound'\n        firstdisktype:\n          type: string\n          enum: ['local', 'remote', 'usb']\n          default: 'local'\n        diskpath:\n          type: string\n          example: naa.6d09466044143600247aee55ca2a6405\n          # examples:\n          #   scsi:\n          #     value: naa.6d09466044143600247aee55ca2a6405\n          #   other:\n          #     value: /vmfs/devices/disks/mpx.vmhba1:C0:T0:L0\n        enablessh:\n          type: boolean\n          default: True\n        clearpart:\n          type: boolean\n          default: False\n        cimc_usr:\n          type: string\n          default: 'admin'\n        cimc_pwd:\n          type: string\n          format: password\n        host_netmask:\n          type: string\n          example: 255.255.255.0\n          default: 255.255.255.0\n        host_gateway:\n          type: string\n          example: 192.168.2.1\n        dns1:\n          type: string\n          example: 208.67.222.222\n        dns2:\n          type: string\n          example: 207.67.220.220\n        static_routes:\n          type: array\n          items:\n            type: object\n            required:\n            - subnet_ip\n            - cidr\n            - gateway\n            properties:\n              subnet_ip:\n                type: string\n                example: 172.16.10.0\n              cidr:\n                type: integer\n                example: 24\n                minimum: 3\n                maximum: 32\n              gateway:\n                type: string\n                example: 192.168.0.251\n        hosts:\n          type: array\n          items:\n            type: object\n            required:\n            - hostname\n            - ipaddr\n            - cimcip\n            properties:\n              hostname:\n                type: string\n                example: esxi-01-hostname\n              host_ip:\n                type: string\n                example: 192.168.2.11\n              cimc_ip:\n                type: string\n                example: 192.168.0.111\n    JobStatus:\n      type: object\n      properties:\n        cimcip:\n          type: \"string\"\n          example: \"192.168.0.111\"\n        finish_time:\n          type: \"string\"\n          example: \"2022-01-01 08:08:08 GMT\"\n        hostname:\n          type: \"string\"\n          example: Prefix-01-Suffix\n        ipaddr:\n          type: \"string\"\n          example: \"192.168.2.11\"\n        start_time:\n          type: \"string\"\n          example: \"2022-01-01 07:07:07 GMT\"\n        status:\n          type: \"string\"\n          example: \"Installation in progress\"\n    JobIDs:\n      description: \"List of job IDs\"\n      type: array\n      items:\n        type: string\n      example: [ \"192.168.0.1_1628871425.1136827\", \"192.168.0.2_1633093658.6881468\" ]                \n    IsoList:\n      description: \"List of available ISO images\"\n      type: array\n      items:\n        type: string\n      example: [ \"VMware-ESXi-6.5.0_U3_Installer-13932383\", \"VMware-ESXi-7.0.0_U2_Installer-16324942\" ]\n",
			"canonicalURL": "/github.com/CiscoDevNet/esxi-auto-installer@6b9963a864d48d857ebfdbeab06bc28ad0517509/-/blob/auto-installer_docker/auto-installer_flask/static/swagger.yml",
			"externalURLs": [
				{
					"url": "https://github.com/CiscoDevNet/esxi-auto-installer/blob/6b9963a864d48d857ebfdbeab06bc28ad0517509/auto-installer_docker/auto-installer_flask/static/swagger.yml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "parse: parse spec: parse operations: path \"/jobs\": at 1:3343: post: at 1:3596: parameters: parse parameter \"body\": at 1:4005: at 1:4011: unknown parameter location \"body\""
}