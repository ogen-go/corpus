{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/larmic-iot/sonnenBatterie-api"
		},
		"file": {
			"name": "open-api-3.yaml",
			"size": 0,
			"path": "open-api-3.yaml",
			"byteSize": 3869,
			"content": "openapi: 3.1.0\n\ninfo:\n  title: SonnenBatterie API\n  version: ${VERSION}\n  contact:\n    name: Lars Michaelis\n    email: mail@larmic.de\n  license:\n    name: Apache 2.0\n    url: https://www.apache.org/licenses/LICENSE-2.0\n\npaths:\n  /sonnen-api/api/system:\n    get:\n      summary: Returns SonnenBatterie info.\n      responses:\n        '200':\n          description: SonnenBatterie system\n          content:\n            'application/json':\n              schema:\n                $ref: \"#/components/schemas/System\"\n        '404':\n          description: SonnenBatterie not found.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ProtocolError\"\n  /sonnen-api/api/consumption:\n    get:\n      summary: Returns SonnenBatterie consumption info.\n      responses:\n        '200':\n          description: SonnenBatterie consumption info\n          content:\n            'application/json':\n              schema:\n                $ref: \"#/components/schemas/Consumption\"\n        '404':\n          description: SonnenBatterie not found.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ProtocolError\"\n  /sonnen-api/api/status:\n    get:\n      summary: Returns SonnenBatterie generation info.\n      responses:\n        '200':\n          description: SonnenBatterie generation info\n          content:\n            'application/json':\n              schema:\n                $ref: \"#/components/schemas/Generation\"\n        '404':\n          description: SonnenBatterie not found.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ProtocolError\"\n\n\ncomponents:\n  schemas:\n    System:\n      required:\n        - ip\n        - wanIp\n        - vpnIp\n        - model\n        - mac\n        - softwareVersion\n        - hardwareVersion\n        - led\n      properties:\n        ip:\n          type: string\n          description: SonnenBatterie internal addres (i.e. 10.0.0.100).\n        wanIp:\n          type: string\n          description: SonnenBatterie external addres (i.e. 31.31.31.31).\n        vpnIp:\n          type: string\n          description: SonnenBatterie vpn addres (i.e. 41.41.41.41).\n        model:\n          type: string\n          description: SonnenBatterie model name.\n        mac:\n          type: string\n          description: SonnenBatterie mac address.\n        softwareVersion:\n          type: string\n          description: SonnenBatterie software version.\n        hardwareVersion:\n          type: string\n          description: SonnenBatterie hardware version.\n        led:\n          type: string\n          description: SonnenBatterie led state.\n          enum:\n            - white\n            - green\n            - orange\n            - red\n\n    Consumption:\n      required:\n        - current_mw\n      properties:\n        current_mw:\n          type: integer\n          description: Actual house consumption in milli watt\n\n    Status:\n      required:\n        - grid_feed_in_mw\n        - production_mw\n        - charge_level\n        - charge_mode\n      properties:\n        grid_feed_in_mw:\n          type: integer\n          description: Actual grid feed in in milli watt\n        production_mw:\n          type: integer\n          description: Actual solar production in milli watt\n        charge_level:\n          type: integer\n          description: Actual battery charge level in percent\n        charge_mode:\n          type: string\n          description: SonnenBatterie charge mode.\n          enum:\n            - charging\n            - discharging\n            - idle\n\n    ProtocolError:\n      required:\n        - code\n        - message\n      properties:\n        code:\n          type: integer\n          description: HTTP code.\n        message:\n          type: string\n          description: Error message.\n"
		}
	},
	"Error": "parse: parse spec: paths: /sonnen-api/api/status: get: operation \"\": responses: 200: content: \"application/json\": schema: parse schema: reference \"#/components/schemas/Generation\": resolve reference \"#/components/schemas/Generation\": unmarshal: unexpected end of JSON input"
}