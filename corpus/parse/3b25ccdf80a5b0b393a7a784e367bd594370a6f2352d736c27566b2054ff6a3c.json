{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/NCATS-Tangerine/translator-api-registry"
		},
		"file": {
			"name": "bioplanet-pathway-disease.yaml",
			"size": 0,
			"path": "bioplanet/bioplanet-pathway-disease.yaml",
			"byteSize": 15092,
			"content": "openapi: 3.0.3\ninfo:\n  contact:\n    email: help@biothings.io\n    name: BioThings Team\n    x-id: https://github.com/biothings\n    x-role: responsible developers\n  description: \u003e-\n    Documentation of the BioThings [BioPlanet](https://tripod.nih.gov/bioplanet/#) pathway-disease \n    association query web services.\n  termsOfService: https://biothings.io/about\n  title: BioThings BioPlanet Pathway-Disease API\n  version: '1.0'\n  x-translator:\n    infores: \"infores:biothings-bioplanet-pathway-disease\"\n    component: KP\n    team:\n      - Service Provider\n    biolink-version: \"2.2.13\"\nservers:\n- description: Encrypted Production server\n  url: https://biothings.ncats.io/bioplanet_pathway_disease\n  x-maturity: production\n- description: Production server\n  url: http://biothings.ncats.io/bioplanet_pathway_disease\n  x-maturity: production\ntags:\n- name: association\n- name: pathway\n- name: disease\n- name: query\n- name: translator\n- name: biothings\npaths:\n  \"/association/{id}\":\n    get:\n      parameters:\n      - name: id\n        in: path\n        required: true\n        example: \"bioplanet_912-109800\"\n        schema:\n          type: string\n      - \"$ref\": \"#/components/parameters/raw\"\n      - \"$ref\": \"#/components/parameters/rawquery\"\n      - \"$ref\": \"#/components/parameters/_source\"\n      - \"$ref\": \"#/components/parameters/size\"\n      - \"$ref\": \"#/components/parameters/dotfield\"\n      - \"$ref\": \"#/components/parameters/_sorted\"\n      - \"$ref\": \"#/components/parameters/always_list\"\n      - \"$ref\": \"#/components/parameters/allow_null\"\n      - \"$ref\": \"#/components/parameters/format\"\n      responses:\n        '200':\n          description: \"Success\"\n      #     content:\n      #       application/json:\n      #         schema:\n      #           $ref: '#/components/schemas/Association'\n      #   '404':\n      #     description: A response indicating an unknown association ID\n      summary: \u003e-\n        Retrieve association based on ID\n      tags:\n      - association\n  \"/association\":\n    post:\n      parameters:\n      - \"$ref\": \"#/components/parameters/raw\"\n      - \"$ref\": \"#/components/parameters/rawquery\"\n      - \"$ref\": \"#/components/parameters/_source\"\n      - \"$ref\": \"#/components/parameters/size\"\n      - \"$ref\": \"#/components/parameters/dotfield\"\n      - \"$ref\": \"#/components/parameters/_sorted\"\n      - \"$ref\": \"#/components/parameters/always_list\"\n      - \"$ref\": \"#/components/parameters/allow_null\"\n      - \"$ref\": \"#/components/parameters/format\"\n      requestBody:\n        content:\n          application/json:\n            example:\n              ids:\n              - \"bioplanet_912-109800\"\n              - \"bioplanet_244-615363\"\n            schema:\n              type: object\n              properties:\n                ids:\n                  description: 'multiple Association IDs separated by comma. Note that\n                    currently we only take the input ids up to 1000 maximum, the rest\n                    will be omitted. Type: string (list). Max: 1000.'\n                  type: array\n                  items:\n                    type: string\n      responses:\n        '200':\n          description: \"Success\"\n      summary: \u003e-\n        Retrieve multiple associations' information based on ID\n      tags:\n      - association\n  \"/metadata\":\n    get:\n      parameters:\n      - \"$ref\": \"#/components/parameters/format\"\n      - \"$ref\": \"#/components/parameters/raw\"\n      - \"$ref\": \"#/components/parameters/dev\"\n      responses:\n        '200':\n          description: Success\n      summary: Get metadata about the data available from the API\n      tags:\n      - metadata\n  \"/metadata/fields\":\n    get:\n      parameters:\n      - \"$ref\": \"#/components/parameters/format\"\n      - \"$ref\": \"#/components/parameters/raw\"\n      - \"$ref\": \"#/components/parameters/search\"\n      - \"$ref\": \"#/components/parameters/prefix\"\n      responses:\n        '200':\n          description: Success\n      summary: Get metadata about the data fields available from a record\n      tags:\n      - metadata\n  \"/query\":\n    get:\n      parameters:\n      - name: q\n        description: Query string.\n        in: query\n        required: true\n        example: \"subject.PHENO_TYPE:608446\"\n        schema:\n          type: string\n      - \"$ref\": \"#/components/parameters/aggs\"\n      - \"$ref\": \"#/components/parameters/facet_size\"\n      - \"$ref\": \"#/components/parameters/from\"\n      - \"$ref\": \"#/components/parameters/userquery\"\n      - \"$ref\": \"#/components/parameters/sort\"\n      - \"$ref\": \"#/components/parameters/explain\"\n      - \"$ref\": \"#/components/parameters/fetch_all\"\n      - \"$ref\": \"#/components/parameters/scroll_id\"\n      - \"$ref\": \"#/components/parameters/raw\"\n      - \"$ref\": \"#/components/parameters/rawquery\"\n      - \"$ref\": \"#/components/parameters/_source\"\n      - \"$ref\": \"#/components/parameters/size\"\n      - \"$ref\": \"#/components/parameters/dotfield\"\n      - \"$ref\": \"#/components/parameters/_sorted\"\n      - \"$ref\": \"#/components/parameters/always_list\"\n      - \"$ref\": \"#/components/parameters/allow_null\"\n      - \"$ref\": \"#/components/parameters/format\"\n      responses:\n        '200':\n          description: Success\n      #     content:\n      #       application/json:\n      #         schema:\n      #           \"$ref\": \"#/components/schemas/QueryResult\"\n      #   '400':\n      #     content:\n      #       application/json:\n      #         schema:\n      #           \"$ref\": \"#/components/schemas/ErrorResult\"\n      #     description: A response indicating an improperly formatted query\n      # summary: Make queries and return matching gene hits. Supports JSONP and CORS\n      #   as well.\n      tags:\n      - query\n    post:\n      parameters:\n      - name: q\n        in: query\n        required: false\n        schema:\n          type: array\n          items:\n            type: string\n      - name: scopes\n        in: query\n        required: false\n        schema:\n          type: array\n          items:\n            type: string\n            default:\n            - _id\n      - \"$ref\": \"#/components/parameters/from\"\n      - \"$ref\": \"#/components/parameters/sort\"\n      - \"$ref\": \"#/components/parameters/raw\"\n      - \"$ref\": \"#/components/parameters/rawquery\"\n      - \"$ref\": \"#/components/parameters/_source\"\n      - \"$ref\": \"#/components/parameters/size\"\n      - \"$ref\": \"#/components/parameters/dotfield\"\n      - \"$ref\": \"#/components/parameters/_sorted\"\n      - \"$ref\": \"#/components/parameters/always_list\"\n      - \"$ref\": \"#/components/parameters/allow_null\"\n      - \"$ref\": \"#/components/parameters/format\"\n      requestBody:\n        content:\n          application/json:\n            example:\n              q:\n              - \"608446\"\n              - \"157300\"\n              scopes:\n              - \"subject.PHENO_TYPE\"\n            schema:\n              type: object\n              properties:\n                q:\n                  type: array\n                  items:\n                    type: string\n                scopes:\n                  type: array\n                  items:\n                    type: string\n                from:\n                  type: integer\n                sort:\n                  type: array\n                  items:\n                    type: string\n      responses:\n        '200':\n          description: Success\n      #     content:\n      #       application/json:\n      #         schema:\n      #           \"$ref\": \"#/components/schemas/QueryPOSTResult\"\n      #   '400':\n      #     content:\n      #       application/json:\n      #         schema:\n      #           \"$ref\": \"#/components/schemas/ErrorResult\"\n      #     description: A response indicating an improperly formatted query\n      # summary: Make batch gene queries and return matching gene hits\n      tags:\n      - query\n      ## 2 operations\n      x-bte-kgs-operations:\n      - $ref: '#/components/x-bte-kgs-operations/pathway-disease'\n      - $ref: '#/components/x-bte-kgs-operations/disease-pathway'\ncomponents:\n  parameters:\n    _sorted:\n      name: _sorted\n      in: query\n      required: false\n      schema:\n        type: boolean\n        default: true\n    _source:\n      name: _source\n      in: query\n      required: false\n      schema:\n        type: array\n        items:\n          type: string\n    aggs:\n      name: aggs\n      in: query\n      required: false\n      schema:\n        type: array\n        items:\n          type: string\n    allow_null:\n      name: allow_null\n      in: query\n      required: false\n      schema:\n        type: array\n        items:\n          type: string\n    always_list:\n      name: always_list\n      in: query\n      required: false\n      schema:\n        type: array\n        items:\n          type: string\n    dev:\n      name: dev\n      in: query\n      required: false\n      schema:\n        type: boolean\n    dotfield:\n      name: dotfield\n      in: query\n      required: false\n      schema:\n        type: boolean\n    explain:\n      name: explain\n      in: query\n      required: false\n      schema:\n        type: boolean\n    facet_size:\n      name: facet_size\n      in: query\n      required: false\n      schema:\n        type: integer\n        default: 10\n    fetch_all:\n      name: fetch_all\n      in: query\n      required: false\n      schema:\n        type: boolean\n    format:\n      name: format\n      description: 'controls output format of server response, currently supports:\n        \"json\", \"jsonld\", \"html\". Type: string. Default: json.'\n      in: query\n      required: false\n      schema:\n        type: string\n        default: json\n    from:\n      name: from\n      in: query\n      required: false\n      schema:\n        type: integer\n    prefix:\n      name: prefix\n      in: query\n      required: false\n      schema:\n        type: string\n    raw:\n      name: raw\n      in: query\n      required: false\n      schema:\n        type: boolean\n    rawquery:\n      name: rawquery\n      in: query\n      required: false\n      schema:\n        type: boolean\n    scroll_id:\n      name: scroll_id\n      in: query\n      required: false\n      schema:\n        type: string\n    search:\n      name: search\n      in: query\n      required: false\n      schema:\n        type: string\n    size:\n      name: size\n      description: \"default: 10 objects/records in response\"\n      in: query\n      required: false\n      schema:\n        type: integer\n    sort:\n      name: sort\n      in: query\n      required: false\n      schema:\n        type: array\n        items:\n          type: string\n    userquery:\n      name: userquery\n      in: query\n      required: false\n      schema:\n        type: string\n  # schemas:\n  #   Association:\n  #     properties:\n  #       _id:\n  #         type: string\n  #     required:\n  #     - _id\n  #     type: object\n  #   ErrorResult:\n  #     properties:\n  #       message:\n  #         type: string\n  #       success:\n  #         type: boolean\n  #     type: object\n  #   QueryPOSTResult:\n  #     items:\n  #       allOf:\n  #       - $ref: '#/components/schemas/Association'\n  #       - properties:\n  #           _score:\n  #             format: float\n  #             type: number\n  #           query:\n  #             type: string\n  #         type: object\n  #     type: array\n  #   QueryResult:\n  #     properties:\n  #       hits:\n  #         items:\n  #           $ref: '#/components/schemas/Association'\n  #         type: array\n  #       max_score:\n  #         format: float\n  #         type: number\n  #       took:\n  #         type: integer\n  #       total:\n  #         type: integer\n  #     type: object\n  #   int64_or_array:\n  #     oneOf:\n  #     - items:\n  #         format: int64\n  #         type: integer\n  #       type: array\n  #     - format: int64\n  #       type: integer\n  #   string_or_array:\n  #     oneOf:\n  #     - items:\n  #         type: string\n  #       type: array\n  #     - type: string\n  x-bte-kgs-operations:\n  ## 3 potential types: Disease, Gene, Pathway (BioPlanet IDs)\n  ## - API pathway IDs don't have a bioplanet prefix on them (but they are in the format bioplanet_276)\n  ## - Gene is an \"intermediate\" / explanation for Disease \u003c-\u003e Pathway associations\n  ##   so I'm currently only doing Disease \u003c-\u003e Pathway\n    pathway-disease:\n    ## 44,084 documents in the API \n      - supportBatch: true\n        useTemplating: true ## flag to say templating is being used below\n        inputs:\n          - id: \"ncats.bioplanet\"\n            semantic: Pathway\n        requestBody:\n          body:\n            ## API data has no prefix\n            ## joinSafe is only needed if the delimiter isn't a comma\n            q: \"{{ queryInputs }}\"\n            scopes: object.PATHWAY_ID\n        outputs:\n          - id: OMIM\n            semantic: Disease\n        parameters:\n          fields: \u003e-\n            subject.PHENO_TYPE,\n            object.PATHWAY_NAME,object.PATHWAY_CATEGORIES,\n            subject.DISEASE_NAME,\n            relation.GENE_SYMBOL,relation.GENE_ID\n          size: 1000\n        ## using the same predicate that biolink (monarch) api uses\n        predicate: actively_involved_in\n        source: \"infores:bioplanet\"\n        response_mapping:\n          \"$ref\": \"#/components/x-bte-response-mapping/disease\"\n        # testExamples:\n        #   - qInput: \"ncats.bioplanet:bioplanet_276\"     ## Alpha-hemoglobin stabilizing enzyme (AHSP) pathway\n        #     oneOutput: \"OMIM:300751\"                    ## Anemia, sideroblastic, X-linked, 300751 (3)\n    disease-pathway:\n      - supportBatch: true\n        useTemplating: true ## flag to say templating is being used below\n        inputs:\n          - id: OMIM\n            semantic: Disease\n        requestBody:\n          body:\n            ## API data has no prefix\n            ## joinSafe is only needed if the delimiter isn't a comma\n            q: \"{{ queryInputs }}\"\n            scopes: subject.PHENO_TYPE\n        outputs:\n          - id: \"ncats.bioplanet\"\n            semantic: Pathway\n        parameters:\n          fields: \u003e-\n            object.PATHWAY_ID,\n            object.PATHWAY_NAME,object.PATHWAY_CATEGORIES,\n            subject.DISEASE_NAME,\n            relation.GENE_SYMBOL,relation.GENE_ID\n          size: 1000\n        ## inverse of actively_involved_in\n        predicate: actively_involves\n        source: \"infores:bioplanet\"\n        response_mapping:\n          \"$ref\": \"#/components/x-bte-response-mapping/pathway\"\n        # testExamples:\n        #   - qInput: \"OMIM:603909\"                        ## Autoimmune lymphoproliferative syndrome, type II, 603909 (3) \n        #     oneOutput: \"ncats.bioplanet:bioplanet_26\"    ## D4-GDI signaling pathway\n  x-bte-response-mapping:\n    disease:\n      OMIM: subject.PHENO_TYPE   ## no prefix\n      pathway_name: object.PATHWAY_NAME\n      pathway_categories: object.PATHWAY_CATEGORIES\n      disease_name: subject.DISEASE_NAME\n      related_genes_symbol: relation.GENE_SYMBOL\n      related_genes_ncbigene: relation.GENE_ID\n    pathway:\n      \"ncats.bioplanet\": object.PATHWAY_ID   ## no prefix\n      pathway_name: object.PATHWAY_NAME\n      pathway_categories: object.PATHWAY_CATEGORIES\n      disease_name: subject.DISEASE_NAME\n      related_genes_symbol: relation.GENE_SYMBOL\n      related_genes_ncbigene: relation.GENE_ID\n",
			"canonicalURL": "/github.com/NCATS-Tangerine/translator-api-registry@0395669dfee9685031f6f5fdbe5d3ac383959bed/-/blob/bioplanet/bioplanet-pathway-disease.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/NCATS-Tangerine/translator-api-registry/blob/0395669dfee9685031f6f5fdbe5d3ac383959bed/bioplanet/bioplanet-pathway-disease.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "parse: parse spec: parse operations: path \"/query\": post: parameters: parse parameter \"scopes\": schema: parse schema: at 1:7751: parse default: expected type \"string\", got \"array\""
}