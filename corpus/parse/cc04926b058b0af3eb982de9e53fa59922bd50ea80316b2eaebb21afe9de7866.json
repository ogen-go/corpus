{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/CheckoutFinland/psp-api"
		},
		"file": {
			"name": "checkout-psp-api.yaml",
			"size": 0,
			"path": "docs/checkout-psp-api.yaml",
			"byteSize": 80365,
			"content": "openapi: \"3.0.0\"\ninfo:\n  version: 2.0.0\n  title: Payment service API\n  description: |\n    Payment processing API\n\n    Note: The API is currently under development. Some endpoints do not yet have all the features described\n    here, and the responses of some do not match the description here.\n  contact:\n    name: Checkout\n    url: https://github.com/CheckoutFinland/psp-api/issues\nservers:\n  - url: https://api.checkout.fi\ntags:\n  - name: payments\n    description: Create, fetch or refund payments\n  - name: token payments\n    description: Tokenize payment cards and issue payments on tokens\n  - name: payment reports\n    description: Request a payment report\n  - name: settlements\n    description: List settlement IDs\npaths:\n  /payments:\n    post:\n      tags:\n        - payments\n      summary: Create a new open payment\n      description: Create a new open payment, returns a list of available payment methods.\n      operationId: createPayment\n      parameters:\n        - name: checkout-account\n          in: header\n          description: Merchant ID\n          example: 375917\n          schema:\n            type: integer\n            format: int32\n        - name: checkout-algorithm\n          in: header\n          description: HMAC algorithm\n          example: sha512\n          schema:\n            type: string\n            enum:\n              - sha256\n              - sha512\n        - name: checkout-method\n          in: header\n          description: HTTP method of the request\n          example: POST\n          schema:\n            type: string\n            enum:\n              - GET\n              - POST\n        - name: checkout-timestamp\n          in: header\n          description: Current timestamp in ISO 8601 format\n          example: \"2018-08-08T10:10:59Z\"\n          schema:\n            type: string\n            format: date-time\n        - name: checkout-nonce\n          in: header\n          description: Unique random identifier\n          example: 39da40b8-5fb0-499c-869d-35e575b9a6cd\n          schema:\n            type: string\n        - name: signature\n          in: header\n          description: HMAC signature calculated over the request headers and payload\n          schema:\n            type: string\n      requestBody:\n        description: Payment body payload\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/PaymentRequest\"\n      responses:\n        \"201\":\n          description: Payment request created successfully\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/PaymentRequestResponse\"\n        \"400\":\n          $ref: \"#/components/responses/BadRequest\"\n        \"401\":\n          $ref: \"#/components/responses/Unauthorized\"\n        default:\n          $ref: \"#/components/responses/Error\"\n\n  /payments/{transactionId}:\n    get:\n      tags:\n        - payments\n      summary: Get a payment by Checkout transaction ID\n      description: Get a single payment\n      operationId: getPaymentByTransactionId\n      parameters:\n        - name: transactionId\n          in: path\n          description: Transaction ID of payment to fetch\n          required: true\n          schema:\n            type: string\n            format: uuid\n            example: 93ee8d18-10db-410b-92ac-7d6e49369ce3\n        - name: checkout-account\n          in: header\n          description: Merchant ID\n          example: 375917\n          schema:\n            type: integer\n            format: int32\n        - name: checkout-algorithm\n          in: header\n          description: HMAC algorithm\n          example: sha512\n          schema:\n            type: string\n            enum:\n              - sha256\n              - sha512\n        - name: checkout-method\n          in: header\n          description: HTTP method of the request\n          example: GET\n          schema:\n            type: string\n            enum:\n              - GET\n              - POST\n        - name: checkout-transaction-id\n          in: header\n          description: The same transaction ID as in route\n          schema:\n            type: string\n            format: uuid\n            example: 93ee8d18-10db-410b-92ac-7d6e49369ce3\n        - name: checkout-timestamp\n          in: header\n          description: Current timestamp in ISO 8601 format\n          example: \"2018-08-08T10:10:59Z\"\n          schema:\n            type: string\n            format: date-time\n        - name: checkout-nonce\n          in: header\n          description: Unique random identifier\n          example: 39da40b8-5fb0-499c-869d-35e575b9a6cd\n          schema:\n            type: string\n        - name: signature\n          in: header\n          description: HMAC signature calculated over the request headers and payload\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: Payment response\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Payment\"\n        \"400\":\n          $ref: \"#/components/responses/BadRequest\"\n        \"401\":\n          $ref: \"#/components/responses/Unauthorized\"\n        \"404\":\n          $ref: \"#/components/responses/NotFound\"\n        default:\n          $ref: \"#/components/responses/Error\"\n\n  /payments/{transactionId}/refund:\n    post:\n      tags:\n        - payments\n      summary: Refund a payment\n      description: |\n        Refund a payment by transaction ID. Refund operation is asynchronous. Refund request is validated,\n        and if the refund can be done a 201 is returned.\n      operationId: refundPaymentByTransactionId\n      parameters:\n        - name: transactionId\n          in: path\n          description: Transaction ID of payment to refund\n          required: true\n          schema:\n            type: string\n            format: uuid\n            example: 93ee8d18-10db-410b-92ac-7d6e49369ce3\n        - name: checkout-account\n          in: header\n          description: Merchant ID\n          example: 375917\n          schema:\n            type: integer\n            format: int32\n        - name: checkout-algorithm\n          in: header\n          description: HMAC algorithm\n          example: sha512\n          schema:\n            type: string\n            enum:\n              - sha256\n              - sha512\n        - name: checkout-method\n          in: header\n          description: HTTP method of the request\n          example: POST\n          schema:\n            type: string\n            enum:\n              - GET\n              - POST\n        - name: checkout-transaction-id\n          in: header\n          description: The same transaction ID as in route\n          schema:\n            type: string\n            format: uuid\n            example: 93ee8d18-10db-410b-92ac-7d6e49369ce3\n        - name: checkout-timestamp\n          in: header\n          description: Current timestamp in ISO 8601 format\n          example: \"2018-08-08T10:10:59Z\"\n          schema:\n            type: string\n            format: date-time\n        - name: checkout-nonce\n          in: header\n          description: Unique random identifier\n          example: 39da40b8-5fb0-499c-869d-35e575b9a6cd\n          schema:\n            type: string\n        - name: signature\n          in: header\n          description: HMAC signature calculated over the request headers and payload\n          schema:\n            type: string\n      requestBody:\n        description: Refund payload\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/Refund\"\n      responses:\n        \"201\":\n          description: Refund created succesfully\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/RefundResponse\"\n        \"400\":\n          $ref: \"#/components/responses/BadRequest\"\n        \"401\":\n          $ref: \"#/components/responses/Unauthorized\"\n        \"404\":\n          $ref: \"#/components/responses/NotFound\"\n        \"422\":\n          description: Payment method provider does not support refunds\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n        default:\n          $ref: \"#/components/responses/Error\"\n\n  /payments/{transactionId}/activate-invoice:\n    post:\n      tags:\n        - payments\n      summary: Activate invoice\n      description: |\n        Manually activate invoice by transaction ID. Can only be used if payment was paid with Collector and is in pending status.\n      operationId: activateInvoiceByTransactionId\n      parameters:\n        - name: transactionId\n          in: path\n          description: Transaction ID of payment to activate invoice\n          required: true\n          schema:\n            type: string\n            format: uuid\n            example: 93ee8d18-10db-410b-92ac-7d6e49369ce3\n        - name: checkout-account\n          in: header\n          description: Merchant ID\n          example: 375917\n          schema:\n            type: integer\n            format: int32\n        - name: checkout-algorithm\n          in: header\n          description: HMAC algorithm\n          example: sha512\n          schema:\n            type: string\n            enum:\n              - sha256\n              - sha512\n        - name: checkout-method\n          in: header\n          description: HTTP method of the request\n          example: POST\n          schema:\n            type: string\n            enum:\n              - GET\n              - POST\n        - name: checkout-transaction-id\n          in: header\n          description: The same transaction ID as in route\n          schema:\n            type: string\n            format: uuid\n            example: 93ee8d18-10db-410b-92ac-7d6e49369ce3\n        - name: checkout-timestamp\n          in: header\n          description: Current timestamp in ISO 8601 format\n          example: \"2018-08-08T10:10:59Z\"\n          schema:\n            type: string\n            format: date-time\n        - name: checkout-nonce\n          in: header\n          description: Unique random identifier\n          example: 39da40b8-5fb0-499c-869d-35e575b9a6cd\n          schema:\n            type: string\n        - name: signature\n          in: header\n          description: HMAC signature calculated over the request headers and payload\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: Invoice activated succesfully\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ActivateInvoiceResponse\"\n        \"400\":\n          $ref: \"#/components/responses/BadRequest\"\n        \"401\":\n          $ref: \"#/components/responses/Unauthorized\"\n        \"404\":\n          $ref: \"#/components/responses/NotFound\"\n        default:\n          $ref: \"#/components/responses/Error\"\n\n  /merchants/payment-providers:\n    get:\n      tags:\n        - payments\n        - providers\n      summary: List merchant payment methods\n      description: |\n        Returns the payment methods available for merchant without creating\n        a new payment to the system. Useful for displaying payment provider\n        icons during different phases of checkout before finally actually\n        creating the payment request when customer decides to pay\n      operationId: getPaymentProviders\n      parameters:\n        - name: checkout-account\n          in: header\n          description: Merchant ID\n          example: 375917\n          schema:\n            type: integer\n            format: int32\n        - name: checkout-algorithm\n          in: header\n          description: HMAC algorithm\n          example: sha512\n          schema:\n            type: string\n            enum:\n              - sha256\n              - sha512\n        - name: checkout-method\n          in: header\n          description: HTTP method of the request\n          example: GET\n          schema:\n            type: string\n            enum:\n              - GET\n              - POST\n        - name: checkout-timestamp\n          in: header\n          description: Current timestamp in ISO 8601 format\n          example: \"2018-08-08T10:10:59Z\"\n          schema:\n            type: string\n            format: date-time\n        - name: checkout-nonce\n          in: header\n          description: Unique random identifier\n          example: 39da40b8-5fb0-499c-869d-35e575b9a6cd\n          schema:\n            type: string\n        - name: signature\n          in: header\n          description: HMAC signature calculated over the request headers and payload\n          schema:\n            type: string\n        - name: amount\n          in: query\n          description: |\n            Optional amount in minor unit (eg. EUR cents) for the payment providers. Some providers have minimum\n            or maximum amounts that can be purchased.\n          example: 500\n          required: false\n          style: form\n          schema:\n            type: integer\n            format: int32\n        - name: groups\n          in: query\n          description: Comma separated list of payment method groups to include in the reply.\n          schema:\n            type: array\n            items:\n              type: string\n              enum:\n                - mobile\n                - bank\n                - creditcard\n                - credit\n                - other\n          explode: false\n          style: form\n      responses:\n        \"200\":\n          description: Payment methods available\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: \"#/components/schemas/BasePaymentMethodProvider\"\n        \"401\":\n          $ref: \"#/components/responses/Unauthorized\"\n        default:\n          $ref: \"#/components/responses/Error\"\n  /merchants/grouped-payment-providers:\n    get:\n      tags:\n        - payments\n        - providers\n      summary: List grouped merchant payment methods\n      description: |\n        Similar to the /merchants/payment-providers, but in addition of a flat\n        list of providers, it returns payment group data containing localized\n        names, icon URLs and grouped providers, and a localized text\n        with a link to the terms of payment.\n      operationId: getGroupedPaymentProviders\n      parameters:\n        - name: checkout-account\n          in: header\n          description: Merchant ID\n          example: 375917\n          schema:\n            type: integer\n            format: int32\n        - name: checkout-algorithm\n          in: header\n          description: HMAC algorithm\n          example: sha512\n          schema:\n            type: string\n            enum:\n              - sha256\n              - sha512\n        - name: checkout-method\n          in: header\n          description: HTTP method of the request\n          example: GET\n          schema:\n            type: string\n            enum:\n              - GET\n              - POST\n        - name: checkout-timestamp\n          in: header\n          description: Current timestamp in ISO 8601 format\n          example: \"2018-08-08T10:10:59Z\"\n          schema:\n            type: string\n            format: date-time\n        - name: checkout-nonce\n          in: header\n          description: Unique random identifier\n          example: 39da40b8-5fb0-499c-869d-35e575b9a6cd\n          schema:\n            type: string\n        - name: signature\n          in: header\n          description: HMAC signature calculated over the request headers and payload\n          schema:\n            type: string\n        - name: amount\n          in: query\n          description: |\n            Optional amount in minor unit (eg. EUR cents) for the payment providers. Some providers have minimum\n            or maximum amounts that can be purchased.\n          example: 500\n          required: false\n          style: form\n          schema:\n            type: integer\n            format: int32\n        - name: groups\n          in: query\n          description: Comma separated list of payment method groups to include in the reply.\n          schema:\n            type: array\n            items:\n              type: string\n              enum:\n                - mobile\n                - bank\n                - creditcard\n                - credit\n                - other\n          explode: false\n          style: form\n        - name: language\n          in: query\n          description: |\n            Language code of the language the terms of payment and the payment group names will be localized in.\n            Defaults to FI if left undefined\n          required: false\n          schema:\n            type: string\n            enum:\n              - FI\n              - SV\n              - EN\n          style: form\n      responses:\n        \"200\":\n          description: Payment methods available\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/GroupedPaymentProvidersResponse\"\n        \"401\":\n          $ref: \"#/components/responses/Unauthorized\"\n        default:\n          $ref: \"#/components/responses/Error\"\n\n  /settlements:\n    get:\n      tags:\n        - settlements\n      summary: List settlement IDs\n      description: |\n        Returns settlement IDs\n      operationId: listSettlementIds\n      parameters:\n        - name: startDate\n          in: query\n          description: Filter out settlements created before given date.\n          example: \"2019-01-01\"\n          required: false\n          style: form\n          schema:\n            type: string\n            format: date\n        - name: endDate\n          in: query\n          description: Filter out settlements created after given date.\n          example: \"2019-01-01\"\n          required: false\n          style: form\n          schema:\n            type: string\n            format: date\n        - name: bankReference\n          in: query\n          description: Only include settlements with the given bank reference\n          example: \"1234567890-1111\"\n          required: false\n          style: form\n          schema:\n            type: string\n            maxLength: 20\n        - name: limit\n          in: query\n          description: Limit the number of settlement IDs returned\n          example: \"1\"\n          required: false\n          style: form\n          schema:\n            type: string\n            format: integer\n        - name: submerchant\n          in: header\n          description: Get submerchant's payment report\n          example: \"695874\"\n          required: false\n          style: form\n          schema:\n            type: string\n            format: integer\n        - name: checkout-account\n          in: header\n          description: Merchant ID\n          example: 375917\n          schema:\n            type: integer\n            format: int32\n        - name: checkout-algorithm\n          in: header\n          description: HMAC algorithm\n          example: sha512\n          schema:\n            type: string\n            enum:\n              - sha256\n              - sha512\n        - name: checkout-method\n          in: header\n          description: HTTP method of the request\n          example: POST\n          schema:\n            type: string\n            enum:\n              - GET\n              - POST\n        - name: checkout-timestamp\n          in: header\n          description: Current timestamp in ISO 8601 format\n          example: \"2018-08-08T10:10:59Z\"\n          schema:\n            type: string\n            format: date-time\n        - name: signature\n          in: header\n          description: HMAC signature calculated over the request headers and payload\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: List of settlement IDs\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: \"#/components/schemas/SettlementIdItem\"\n        \"400\":\n          $ref: \"#/components/responses/BadRequest\"\n        \"401\":\n          $ref: \"#/components/responses/Unauthorized\"\n        \"404\":\n          $ref: \"#/components/responses/NotFound\"\n        default:\n          $ref: \"#/components/responses/Error\"\n\n  /tokenization/addcard-form:\n    post:\n      tags:\n        - token payments\n      summary: Request a redirect to card addition form\n      description: |\n        Request a redirect to card addition form. This will redirect user to the card addition form, then back to Checkout servers, and finally to merchant's redirect url.\n      operationId: addCardForm\n      requestBody:\n        description: Add card payload\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/AddCardFormRequest\"\n      responses:\n        \"302\":\n          description: Redirect to card addition form (or checkout-redirect-cancel-url)\n        \"400\":\n          $ref: \"#/components/responses/BadRequest\"\n        \"401\":\n          $ref: \"#/components/responses/Unauthorized\"\n        \"403\":\n          description: Tokenization not allowed for merchant\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n\n  /tokenization/{checkout-tokenization-id}:\n    post:\n      tags:\n        - token payments\n      summary: Request a card token for given tokenization id\n      description: |\n        Use checkout-tokenization-id received from /tokenization/addcard-form redirect to request a token which can be used for payments.\n      operationId: requestTokenForTokenizationId\n      parameters:\n        - name: checkout-account\n          in: header\n          description: Merchant ID\n          example: 375917\n          schema:\n            type: integer\n            format: int32\n        - name: checkout-algorithm\n          in: header\n          description: HMAC algorithm\n          example: sha512\n          schema:\n            type: string\n            enum:\n              - sha256\n              - sha512\n        - name: checkout-method\n          in: header\n          description: HTTP method of the request\n          example: POST\n          schema:\n            type: string\n            enum:\n              - GET\n              - POST\n        - name: checkout-timestamp\n          in: header\n          description: Current timestamp in ISO 8601 format\n          example: \"2018-08-08T10:10:59Z\"\n          schema:\n            type: string\n            format: date-time\n        - name: checkout-nonce\n          in: header\n          description: Unique random identifier\n          example: 39da40b8-5fb0-499c-869d-35e575b9a6cd\n          schema:\n            type: string\n        - name: signature\n          in: header\n          description: HMAC signature calculated over the request headers and payload\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: Tokenization request response\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/TokenizationRequestResponse\"\n        \"400\":\n          $ref: \"#/components/responses/BadRequest\"\n        \"401\":\n          $ref: \"#/components/responses/Unauthorized\"\n        \"403\":\n          description: Credit cards and/or AMEX not enabled for merchant\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n\n  /payments/token/mit/charge:\n    post:\n      tags:\n        - token payments\n      summary: Request merchant initiated transaction charge on token\n      description: |\n        Request merchant initiated transaction charge on token. This method should be used when charging the customer's card in a context, where the customer is not actively participating in the transaction.\n      operationId: tokenMitCharge\n      parameters:\n        - name: checkout-account\n          in: header\n          description: Merchant ID\n          example: 375917\n          schema:\n            type: integer\n            format: int32\n        - name: checkout-algorithm\n          in: header\n          description: HMAC algorithm\n          example: sha512\n          schema:\n            type: string\n            enum:\n              - sha256\n              - sha512\n        - name: checkout-method\n          in: header\n          description: HTTP method of the request\n          example: POST\n          schema:\n            type: string\n            enum:\n              - GET\n              - POST\n        - name: checkout-timestamp\n          in: header\n          description: Current timestamp in ISO 8601 format\n          example: \"2018-08-08T10:10:59Z\"\n          schema:\n            type: string\n            format: date-time\n        - name: checkout-nonce\n          in: header\n          description: Unique random identifier\n          example: 39da40b8-5fb0-499c-869d-35e575b9a6cd\n          schema:\n            type: string\n        - name: signature\n          in: header\n          description: HMAC signature calculated over the request headers and payload\n          schema:\n            type: string\n      requestBody:\n        description: MIT Charge payload\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/TokenPaymentRequest\"\n      responses:\n        \"201\":\n          description: MIT charge request created successfully\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/TokenMITPaymentResponse\"\n        \"400\":\n          $ref: \"#/components/responses/BadRequest\"\n        \"401\":\n          $ref: \"#/components/responses/Unauthorized\"\n        default:\n          $ref: \"#/components/responses/Error\"\n\n  /payments/token/mit/authorization-hold:\n    post:\n      tags:\n        - token payments\n      summary: Request merchant initiated transaction authorization hold on token\n      description: |\n        Request merchant initiated transaction authorization hold on token. This method should be used when creating an authorization hold on the customer's card in a context, where the customer is not actively participating in the transaction.\n      operationId: tokenMitAuthorizationHold\n      parameters:\n        - name: checkout-account\n          in: header\n          description: Merchant ID\n          example: 375917\n          schema:\n            type: integer\n            format: int32\n        - name: checkout-algorithm\n          in: header\n          description: HMAC algorithm\n          example: sha512\n          schema:\n            type: string\n            enum:\n              - sha256\n              - sha512\n        - name: checkout-method\n          in: header\n          description: HTTP method of the request\n          example: POST\n          schema:\n            type: string\n            enum:\n              - GET\n              - POST\n        - name: checkout-timestamp\n          in: header\n          description: Current timestamp in ISO 8601 format\n          example: \"2018-08-08T10:10:59Z\"\n          schema:\n            type: string\n            format: date-time\n        - name: checkout-nonce\n          in: header\n          description: Unique random identifier\n          example: 39da40b8-5fb0-499c-869d-35e575b9a6cd\n          schema:\n            type: string\n        - name: signature\n          in: header\n          description: HMAC signature calculated over the request headers and payload\n          schema:\n            type: string\n      requestBody:\n        description: MIT Charge payload\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/TokenPaymentRequest\"\n      responses:\n        \"201\":\n          description: MIT authorization hold request created successfully\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/TokenMITPaymentResponse\"\n        \"400\":\n          $ref: \"#/components/responses/BadRequest\"\n        \"401\":\n          $ref: \"#/components/responses/Unauthorized\"\n        default:\n          $ref: \"#/components/responses/Error\"\n\n  /payments/token/cit/charge:\n    post:\n      tags:\n        - token payments\n      summary: Request customer initiated transaction charge on token\n      description: |\n        Request customer initiated transaction charge on token. CIT charges can sometimes require further 3DS authentication step-up. See detailed documentation at https://checkoutfinland.github.io/psp-api/#/?id=customer-initiated-transactions-cit\n      operationId: tokenCitCharge\n      parameters:\n        - name: checkout-account\n          in: header\n          description: Merchant ID\n          example: 375917\n          schema:\n            type: integer\n            format: int32\n        - name: checkout-algorithm\n          in: header\n          description: HMAC algorithm\n          example: sha512\n          schema:\n            type: string\n            enum:\n              - sha256\n              - sha512\n        - name: checkout-method\n          in: header\n          description: HTTP method of the request\n          example: POST\n          schema:\n            type: string\n            enum:\n              - GET\n              - POST\n        - name: checkout-timestamp\n          in: header\n          description: Current timestamp in ISO 8601 format\n          example: \"2018-08-08T10:10:59Z\"\n          schema:\n            type: string\n            format: date-time\n        - name: checkout-nonce\n          in: header\n          description: Unique random identifier\n          example: 39da40b8-5fb0-499c-869d-35e575b9a6cd\n          schema:\n            type: string\n        - name: signature\n          in: header\n          description: HMAC signature calculated over the request headers and payload\n          schema:\n            type: string\n      requestBody:\n        description: CIT Charge payload\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/TokenPaymentRequest\"\n      responses:\n        \"201\":\n          description: CIT charge request created successfully.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/TokenMITPaymentResponse\"\n        \"403\":\n          description: CIT charge requires 3DS authentication step up. Please redirect user to given URL.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/TokenCITPaymentResponse\"\n        \"400\":\n          $ref: \"#/components/responses/BadRequest\"\n        \"401\":\n          $ref: \"#/components/responses/Unauthorized\"\n        default:\n          $ref: \"#/components/responses/Error\"\n\n  /payments/token/cit/authorization-hold:\n    post:\n      tags:\n        - token payments\n      summary: Request customer initiated transaction authorization hold on token\n      description: |\n        Request customer initiated transaction authorization hold on token. CIT authorization holds can sometimes require further 3DS authentication step-up. See detailed documentation at https://checkoutfinland.github.io/psp-api/#/?id=customer-initiated-transactions-cit\n      operationId: tokenCitAuthorizationHold\n      parameters:\n        - name: checkout-account\n          in: header\n          description: Merchant ID\n          example: 375917\n          schema:\n            type: integer\n            format: int32\n        - name: checkout-algorithm\n          in: header\n          description: HMAC algorithm\n          example: sha512\n          schema:\n            type: string\n            enum:\n              - sha256\n              - sha512\n        - name: checkout-method\n          in: header\n          description: HTTP method of the request\n          example: POST\n          schema:\n            type: string\n            enum:\n              - GET\n              - POST\n        - name: checkout-timestamp\n          in: header\n          description: Current timestamp in ISO 8601 format\n          example: \"2018-08-08T10:10:59Z\"\n          schema:\n            type: string\n            format: date-time\n        - name: checkout-nonce\n          in: header\n          description: Unique random identifier\n          example: 39da40b8-5fb0-499c-869d-35e575b9a6cd\n          schema:\n            type: string\n        - name: signature\n          in: header\n          description: HMAC signature calculated over the request headers and payload\n          schema:\n            type: string\n      requestBody:\n        description: CIT authorization hold payload\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/TokenPaymentRequest\"\n      responses:\n        \"201\":\n          description: CIT authorization hold request created successfully.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/TokenMITPaymentResponse\"\n        \"403\":\n          description: CIT authorization hold requires 3DS authentication step up. Please redirect user to given URL.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/TokenCITPaymentResponse\"\n        \"400\":\n          $ref: \"#/components/responses/BadRequest\"\n        \"401\":\n          $ref: \"#/components/responses/Unauthorized\"\n        default:\n          $ref: \"#/components/responses/Error\"\n\n  /payments/{transactionId}/token/commit:\n    post:\n      tags:\n        - token payments\n      summary: Request committing (charging) of previously created authorization hold on token\n      description: |\n        Request committing of previously created authorization hold. The final amount committed can either equal or be less than the authorization hold. The committed amount may not exceed the authorization hold. The final items may differ from the ones used when creating the authorization hold.\n      operationId: tokenCommit\n      parameters:\n        - name: checkout-account\n          in: header\n          description: Merchant ID\n          example: 375917\n          schema:\n            type: integer\n            format: int32\n        - name: checkout-algorithm\n          in: header\n          description: HMAC algorithm\n          example: sha512\n          schema:\n            type: string\n            enum:\n              - sha256\n              - sha512\n        - name: checkout-method\n          in: header\n          description: HTTP method of the request\n          example: POST\n          schema:\n            type: string\n            enum:\n              - GET\n              - POST\n        - name: checkout-timestamp\n          in: header\n          description: Current timestamp in ISO 8601 format\n          example: \"2018-08-08T10:10:59Z\"\n          schema:\n            type: string\n            format: date-time\n        - name: checkout-nonce\n          in: header\n          description: Unique random identifier\n          example: 39da40b8-5fb0-499c-869d-35e575b9a6cd\n          schema:\n            type: string\n        - name: signature\n          in: header\n          description: HMAC signature calculated over the request headers and payload\n          schema:\n            type: string\n      requestBody:\n        description: CIT commit payload\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/TokenPaymentRequest\"\n      responses:\n        \"201\":\n          description: CIT authorization hold committed successfully.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/TokenMITPaymentResponse\"\n        \"400\":\n          $ref: \"#/components/responses/BadRequest\"\n        \"401\":\n          $ref: \"#/components/responses/Unauthorized\"\n        default:\n          $ref: \"#/components/responses/Error\"\n\n  /payments/{transactionId}/token/revert:\n    post:\n      tags:\n        - token payments\n      summary: Revert (removal) of previously created authorization hold on token\n      description: |\n        Request committing of previously created authorization hold. A successful revert will remove the authorization hold from the payer's bank account.\n      operationId: tokenRevert\n      parameters:\n        - name: checkout-account\n          in: header\n          description: Merchant ID\n          example: 375917\n          schema:\n            type: integer\n            format: int32\n        - name: checkout-algorithm\n          in: header\n          description: HMAC algorithm\n          example: sha512\n          schema:\n            type: string\n            enum:\n              - sha256\n              - sha512\n        - name: checkout-method\n          in: header\n          description: HTTP method of the request\n          example: POST\n          schema:\n            type: string\n            enum:\n              - GET\n              - POST\n        - name: checkout-timestamp\n          in: header\n          description: Current timestamp in ISO 8601 format\n          example: \"2018-08-08T10:10:59Z\"\n          schema:\n            type: string\n            format: date-time\n        - name: checkout-nonce\n          in: header\n          description: Unique random identifier\n          example: 39da40b8-5fb0-499c-869d-35e575b9a6cd\n          schema:\n            type: string\n        - name: signature\n          in: header\n          description: HMAC signature calculated over the request headers and payload\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: Authorization hold reverted successfully.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/TokenMITPaymentResponse\"\n        \"400\":\n          $ref: \"#/components/responses/BadRequest\"\n        \"401\":\n          $ref: \"#/components/responses/Unauthorized\"\n        default:\n          $ref: \"#/components/responses/Error\"\n\n  /payments/report:\n    post:\n      tags:\n        - payment reports\n      summary: Request a payment report\n      description: |\n        Request a report of payments to be sent to the given callback url. Callback schema defined in PaymentReportCallbackJSON.\n      operationId: requestPaymentReport\n      parameters:\n        - name: checkout-account\n          in: header\n          description: Merchant ID\n          example: 375917\n          schema:\n            type: integer\n            format: int32\n        - name: checkout-algorithm\n          in: header\n          description: HMAC algorithm\n          example: sha512\n          schema:\n            type: string\n            enum:\n              - sha256\n              - sha512\n        - name: checkout-method\n          in: header\n          description: HTTP method of the request\n          example: POST\n          schema:\n            type: string\n            enum:\n              - GET\n              - POST\n        - name: checkout-timestamp\n          in: header\n          description: Current timestamp in ISO 8601 format\n          example: \"2018-08-08T10:10:59Z\"\n          schema:\n            type: string\n            format: date-time\n        - name: signature\n          in: header\n          description: HMAC signature calculated over the request headers and payload\n          schema:\n            type: string\n      requestBody:\n        description: Payment body payload\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/PaymentReportRequest\"\n      responses:\n        \"200\":\n          description: Payment report request response\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/PaymentReportRequestResponse\"\n        \"400\":\n          $ref: \"#/components/responses/BadRequest\"\n        \"401\":\n          $ref: \"#/components/responses/Unauthorized\"\n        \"404\":\n          $ref: \"#/components/responses/NotFound\"\n        default:\n          $ref: \"#/components/responses/Error\"\n\n      callbacks:\n        reportReady:\n          \"{$request.body#/callbackUrl}\":\n            post:\n              requestBody:\n                required: true\n                content:\n                  application/json:\n                    schema:\n                      $ref: \"#/components/schemas/PaymentReportCallbackJSON\"\n                  application/csv:\n                    schema:\n                      description: The report as a CSV file\n                      type: string\n              responses: # Expected responses to the callback message\n                \"200\":\n                  description: Your server returns this code if it can accept the callback\n                default:\n                  description: Your server can not handle callback - will result in re-sending of the report to the given callback url.\n\n  /settlements/{settlementId}/payments/report:\n    post:\n      tags:\n        - payment reports\n      summary: Request a report of payments contained in a given settlement\n      description: |\n        Request a report of payments contained in a given settlement to be sent to the given callback url. Callback schema defined in PaymentReportCallbackJSON.\n      operationId: requestPaymentReportBySettlementId\n      parameters:\n        - name: settlementId\n          in: path\n          description: Settlement ID\n          required: true\n          schema:\n            type: string\n            example: \"2397548234\"\n        - name: checkout-account\n          in: header\n          description: Merchant ID\n          example: 375917\n          schema:\n            type: integer\n            format: int32\n        - name: checkout-algorithm\n          in: header\n          description: HMAC algorithm\n          example: sha512\n          schema:\n            type: string\n            enum:\n              - sha256\n              - sha512\n        - name: checkout-method\n          in: header\n          description: HTTP method of the request\n          example: POST\n          schema:\n            type: string\n            enum:\n              - GET\n              - POST\n        - name: checkout-timestamp\n          in: header\n          description: Current timestamp in ISO 8601 format\n          example: \"2018-08-08T10:10:59Z\"\n          schema:\n            type: string\n            format: date-time\n        - name: signature\n          in: header\n          description: HMAC signature calculated over the request headers and payload\n          schema:\n            type: string\n      requestBody:\n        description: Payment body payload\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/PaymentReportBySettlementIdRequest\"\n      responses:\n        \"200\":\n          description: Payment report request response\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/PaymentReportRequestResponse\"\n        \"400\":\n          $ref: \"#/components/responses/BadRequest\"\n        \"401\":\n          $ref: \"#/components/responses/Unauthorized\"\n        \"404\":\n          $ref: \"#/components/responses/NotFound\"\n        default:\n          $ref: \"#/components/responses/Error\"\n      callbacks:\n        reportReady:\n          \"{$request.body#/callbackUrl}\":\n            post:\n              requestBody:\n                required: true\n                content:\n                  application/json:\n                    schema:\n                      $ref: \"#/components/schemas/PaymentReportCallbackJSON\"\n                  application/csv:\n                    schema:\n                      description: The report as a CSV file\n                      type: string\n              responses: # Expected responses to the callback message\n                \"200\":\n                  description: Your server returns this code if it can accept the callback\n                default:\n                  description: Your server can not handle callback - will result in re-sending of the report to the given callback url.\n\ncomponents:\n  schemas:\n    # Payment request payload\n    PaymentRequest:\n      type: object\n      description: Payment request payload\n      required:\n        - stamp\n        - reference\n        - amount\n        - currency\n        - language\n        - customer\n        - items\n        - redirectUrls\n      properties:\n        stamp:\n          type: string\n          example: 29858472952\n          maxLength: 200\n          description: Merchant specific unique stamp\n        reference:\n          type: string\n          example: 9187445\n          maxLength: 200\n          description: Merchant reference for the payment\n        amount:\n          type: integer\n          format: int64\n          example: 1590\n          minimum: 0\n          maximum: 99999999\n          description: Total amount of the payment (sum of items), VAT included\n        currency:\n          type: string\n          example: EUR\n          enum:\n            - EUR\n        language:\n          type: string\n          example: FI\n          enum:\n            - FI\n            - SV\n            - EN\n          description: Alpha-2 language code for the payment process\n        orderId:\n          type: string\n          maxLength: 60\n          description: Order ID. Used for eg. Collector payments order ID. If not given, merchant reference is used instead.\n        items:\n          type: array\n          items:\n            $ref: \"#/components/schemas/Item\"\n        customer:\n          $ref: \"#/components/schemas/Customer\"\n        deliveryAddress:\n          $ref: \"#/components/schemas/Address\"\n        invoicingAddress:\n          $ref: \"#/components/schemas/Address\"\n        manualInvoiceActivation:\n          type: boolean\n          example: false\n          description: If paid with invoice payment method, the invoice will not be activated automatically immediately. Currently only supported with Collector.\n        redirectUrls:\n          $ref: \"#/components/schemas/Callbacks\"\n        callbackUrls:\n          $ref: \"#/components/schemas/Callbacks\"\n        callbackDelay:\n          type: integer\n          minimum: 0\n          maximum: 900\n          example: 60\n          description: Callback delay in seconds. If callback URLs and delay are provided, callbacks will be called after the delay.\n        groups:\n          description: Optionally return only payment methods for selected groups\n          type: array\n          items:\n            type: string\n            enum:\n              - mobile\n              - bank\n              - creditcard\n              - credit\n              - other\n\n    TokenPaymentRequest:\n      type: object\n      description: Payment request payload\n      required:\n        - stamp\n        - reference\n        - amount\n        - currency\n        - language\n        - customer\n        - items\n        - redirectUrls\n        - token\n      properties:\n        stamp:\n          type: string\n          example: 29858472952\n          maxLength: 200\n          description: Merchant specific unique stamp\n        reference:\n          type: string\n          example: 9187445\n          maxLength: 200\n          description: Merchant reference for the payment\n        amount:\n          type: integer\n          format: int64\n          example: 1590\n          minimum: 0\n          maximum: 99999999\n          description: Total amount of the payment (sum of items), VAT included\n        currency:\n          type: string\n          example: EUR\n          enum:\n            - EUR\n        language:\n          type: string\n          example: FI\n          enum:\n            - FI\n            - SV\n            - EN\n          description: Alpha-2 language code for the payment process\n        orderId:\n          type: string\n          maxLength: 60\n          description: Order ID. Used for eg. Collector payments order ID. If not given, merchant reference is used instead.\n        items:\n          type: array\n          items:\n            $ref: \"#/components/schemas/Item\"\n        customer:\n          $ref: \"#/components/schemas/Customer\"\n        deliveryAddress:\n          $ref: \"#/components/schemas/Address\"\n        invoicingAddress:\n          $ref: \"#/components/schemas/Address\"\n        redirectUrls:\n          $ref: \"#/components/schemas/Callbacks\"\n        callbackUrls:\n          $ref: \"#/components/schemas/Callbacks\"\n        callbackDelay:\n          type: integer\n          minimum: 0\n          maximum: 900\n          example: 60\n          description: Callback delay in seconds. If callback URLs and delay are provided, callbacks will be called after the delay.\n        token:\n          type: string\n          example: 123e4567-e89b-12d3-a456-426655440000\n          description: Payment card token received from request to /tokenization/{checkout-tokenization-id}\n\n    Item:\n      type: object\n      required:\n        - unitPrice\n        - units\n        - vatPercentage\n        - productCode\n      properties:\n        unitPrice:\n          type: integer\n          format: int64\n          example: 1590\n          minimum: 0\n          maximum: 99999999\n          description: Unit price of an item in currency minor unit, eg. EUR cents. VAT included.\n        units:\n          type: integer\n          format: int64\n          example: 1\n          minimum: 1\n          maximum: 10000000\n          description: Number of units\n        vatPercentage:\n          type: integer\n          format: int64\n          example: 24\n          minimum: 0\n          maximum: 100\n          description: Item VAT percentage\n        productCode:\n          type: string\n          example: \"#927502759\"\n          maxLength: 100\n          description: Merchant specific product code\n        deliveryDate:\n          type: string\n          format: date\n          example: \"2018-03-07\"\n          description: Estimated delivery date\n        description:\n          type: string\n          example: Cat ladder\n          maxLength: 1000\n          description: Merchant specific product description\n        category:\n          type: string\n          example: shoe\n          maxLength: 100\n          description: Item product category\n        merchant:\n          type: string\n          example: 375917\n          maxLength: 10\n          description: Submerchant ID. Required for shop-in-shop payments, leave out from normal payments.\n        stamp:\n          type: string\n          example: 29858472952\n          maxLength: 200\n          description: Submerchant specific unique stamp. Required for shop-in-shop payments, leave out from normal payments.\n        reference:\n          type: string\n          example: 9187445\n          maxLength: 200\n          description: Submerchant reference for the item. Required for shop-in-shop payments, leave out from normal payments.\n        orderId:\n          type: string\n          maxLength: 60\n          description: Order ID. Used for eg. Collector payments order ID. If not given, merchant reference is used instead.\n        commission:\n          type: object\n          properties:\n            merchant:\n              type: string\n              description: |\n                Merchant who get's the commission money. This merchant id can not be deleted, has to be active and\n                has to have same reseller with the merchant who initiated/created the webtrade.\n              maxLength: 10\n            amount:\n              type: integer\n              format: int32\n              description: |\n                Commission amount in currency minor unit, eg. EUR cents. VAT not applicable.\n                This field is needed only for specific shop-in-shop payments, usually not needed.\n              maximum: 99999999\n\n    # Status reporting URLs, either for user browser redirect or server-to-server callback\n    # Called on various events\n    Callbacks:\n      type: object\n      required:\n        - success\n        - cancel\n      properties:\n        success:\n          type: string\n          example: \"https://ecom.example.org/success\"\n          maxLength: 300\n          description: |\n            URL to call when payment is succesfully paid.\n            Can called multiple times; one must ensure idempotency of this endpoint.\n        cancel:\n          type: string\n          example: \"https://ecom.example.org/cancel\"\n          maxLength: 300\n          description: |\n            URL to call when payment is cancelled and not fulfilled.\n            Can called multiple times; one must ensure idempotency of this endpoint.\n\n    Address:\n      type: object\n      required:\n        - streetAddress\n        - postalCode\n        - city\n        - country\n      properties:\n        streetAddress:\n          type: string\n          example: Fake street 123\n          maxLength: 200\n          description: Street address\n        postalCode:\n          type: string\n          pattern: '^\\d+$'\n          example: \"00100\"\n          maxLength: 15\n          description: Postal code\n        city:\n          type: string\n          example: Luleå\n          maxLength: 200\n          description: City\n        county:\n          type: string\n          example: Norrbotten\n          maxLength: 200\n          description: County or top-level geographic subdivision\n        country:\n          type: string\n          example: SE\n          maxLength: 2\n          description: Alpha-2 country code\n\n    Customer:\n      type: object\n      required:\n        - email\n      properties:\n        email:\n          type: string\n          format: email\n          example: john.doe@example.org\n          description: Customer email address\n        firstName:\n          type: string\n          example: John\n          description: Customer first name\n        lastName:\n          type: string\n          example: Doe\n          description: Customer last name\n        phone:\n          type: string\n          example: +358501234567\n          description: Customer phone number\n        vatId:\n          type: string\n          example: FI02454583\n          description: Company VAT ID in international format\n\n    TokenCustomerDetails:\n      type: object\n      required:\n        - network_address\n        - country_code\n      properties:\n        network_address:\n          type: string\n          example: 93.174.192.154\n          description: Customer IP address\n        country_code:\n          type: string\n          example: FI\n          description: Customer country code\n\n    Card:\n      type: object\n      required:\n        - network_address\n        - country_code\n      properties:\n        type:\n          type: string\n          description: Card type, for example ‘Visa’\n          example: Visa\n        partial_pan:\n          type: string\n          description: Last four digits of the card\n          example: 0024\n        expire_year:\n          type: string\n          description: Card expiration year\n          example: 2023\n        expire_month:\n          type: string\n          description: Card expiration month\n          example: 11\n        cvc_required:\n          type: string\n          description: Whether the CVC is required for paying with this card. Can be one of yes, no or not_tested.\n          example: no\n        bin:\n          type: string\n          description: First 2 or 6 digits of the card number. (6 MC/VISA, 2 Amex/Diners)\n          example: 415301\n        funding:\n          type: string\n          description: credit, debit or unknown\n          example: debit\n        country_code:\n          type: string\n          description: e.g. FI\n          example: FI\n        category:\n          type: string\n          description: business, prepaid or unknown\n          example: unknown\n        card_fingerprint:\n          type: string\n          description: Identifies a specific card number. Cards with the same PAN but different expiry dates will have the same PAN fingerprint. Hex string of length 64.\n          example: da6b0df36efd17c0e7f6967b9e440a0c61b6bd3d96b62f14c90155a1fb883597\n        pan_fingerprint:\n          type: string\n          description: Identifies a specific card, including the expiry date. Hex string of length 64.\n          example: e858e18daac509247f463292641237d6a74ce44e0971ba2de4a14874928a8805\n\n    # Refund request payload\n    # - Normal merchant:\n    #   - Only amount required, no need for item level reference\n    #     at least for now as we do not create subtrades\n    # - SiS merchants:\n    #   - Aggregate can do full refund without subtrade level info\n    #     by providing just the amount (that matches the original amount)\n    #   - Subtrade refunds require the original stamp and reference, and\n    #     amount to refund per item\n    Refund:\n      type: object\n      required:\n        - callbackUrls\n      properties:\n        amount:\n          type: integer\n          format: int64\n          example: 1590\n          minimum: 1\n          description: |\n            The amount to refund. Required for normal merchant accounts.\n            SiS aggregate can refund the whole purchase by providing just the amount\n        refundStamp:\n          type: string\n          example: 981346945\n          maxLength: 200\n          description: Merchant specific unique stamp for the refund\n        refundReference:\n          type: string\n          example: 4723652\n          maxLength: 200\n          description: Merchant reference for the refund\n        items:\n          type: array\n          items:\n            $ref: \"#/components/schemas/RefundItem\"\n          description: Item level refund information for SiS refunds.\n        callbackUrls:\n          $ref: \"#/components/schemas/Callbacks\"\n\n    RefundItem:\n      type: object\n      required:\n        - amount\n        - stamp\n        - reference\n      properties:\n        amount:\n          type: integer\n          format: int64\n          example: 1590\n          minimum: 1\n          description: Amount to refund\n        stamp:\n          type: string\n          example: 29858472952\n          description: Original item stamp\n        refundStamp:\n          type: string\n          example: 7358134945\n          maxLength: 200\n          description: Merchant specific unique stamp for the refund\n        refundReference:\n          type: string\n          example: 94753246\n          maxLength: 200\n          description: Merchant reference for the refund\n\n    AddCardFormRequest:\n      type: object\n      description: Add card form request\n      required:\n        - checkout-account\n        - checkout-algorithm\n        - checkout-redirect-success-url\n        - checkout-redirect-cancel-url\n      properties:\n        checkout-account:\n          type: integer\n          example: 375917\n          description: Merchant ID\n        checkout-algorithm:\n          type: string\n          description: HMAC algorithm\n          example: sha512\n          enum:\n            - sha256\n            - sha512\n        checkout-redirect-success-url:\n          type: string\n          format: url\n          example: https://example.com/redirect-success-handler\n          description: Merchant's url for user redirect on successful card addition\n        checkout-redirect-cancel-url:\n          type: string\n          format: url\n          example: https://example.com/redirect-failure-handler\n          description: Merchant's url for user redirect on failed card addition\n        checkout-callback-success-url:\n          type: string\n          format: url\n          example: https://example.com/success-callback\n          description: Merchant's url called on successful card addition\n        checkout-callback-cancel-url:\n          type: string\n          format: url\n          example: https://example.com/failure-callback\n          description: Merchant's url called on failed card addition\n        language:\n          type: string\n          example: FI\n          enum:\n            - FI\n            - SV\n            - EN\n          description: Alpha-2 language code for the card addition form\n\n    TokenizationRequestResponse:\n      required:\n        - token\n      properties:\n        token:\n          type: string\n          description: Token used to make authorization holds & charges on card\n          example: 123e4567-e89b-12d3-a456-426655440000\n        customer:\n          $ref: \"#/components/schemas/TokenCustomerDetails\"\n        card:\n          $ref: \"#/components/schemas/Card\"\n\n    PaymentReportRequest:\n      type: object\n      description: Payment report request\n      required:\n        - requestType\n        - callbackUrl\n      properties:\n        requestType:\n          type: string\n          example: json\n          description: In which format is the report delivered in\n          enum:\n            - json\n            - csv\n        callbackUrl:\n          type: string\n          format: url\n          example: https://example.com/payment-reports/\n          description: To which URL is the report delivered to. Callback URLs must use HTTPS\n        paymentStatus:\n          type: string\n          example: default\n          description: How are the payments statuses filtered. \"Default\" includes both paid and settled payments. \"Paid\" includes paid payments that have not been settled yet. \"All\" includes everything, for example unpaid or failed payments.\n          enum:\n            - default\n            - all\n            - paid\n            - settled\n          default: default\n        startDate:\n          type: string\n          format: datetime\n          example: \"2019-01-01T18:00:00\"\n          description: Filter out payments created before given datetime.\n        endDate:\n          type: string\n          format: datetime\n          example: \"2019-01-02T20:00:00\"\n          description: Filter out payments created after given datetime.\n        limit:\n          type: integer\n          example: 1000\n          description: Limit the amount of payments included in the report.\n          maximum: 50000\n          default: 50000\n        reportFields:\n          type: array\n          description: Limit the amount of fields included in the report. By default all fields are included.\n          items:\n            type: string\n            enum:\n              [\n                entryDate,\n                created,\n                amount,\n                status,\n                firstname,\n                familyname,\n                description,\n                reference,\n                paymentMethod,\n                stamp,\n                address,\n                postcode,\n                postoffice,\n                country,\n                checkoutReference,\n                archiveNumber,\n                payerName,\n                settlementId,\n                settlementDate,\n                originalTradeReference,\n                vatPercentage,\n                vatAmount,\n                paymentMethodFee,\n                paymentMethodCommission,\n                shopInShopCommission,\n                shopInShopCommissionVatPercentage,\n                shopInShopCommissionVatAmount,\n              ]\n        submerchant:\n          type: integer\n          example: 695874\n          description: Get submerchant's payment report\n\n    PaymentRequestResponse:\n      type: object\n      description: |\n        Response for a successful payment request. Mechant ecom site can then either redirect\n        the user to the URL given in href, or render the payment provider forms onsite. For\n        each payment method an HTML form needs to be rendered using the parameters returned\n        for each payment method provider.\n      required:\n        - transactionId\n        - href\n        - paymentMethods\n      properties:\n        transactionId:\n          type: string\n          format: uuid\n          example: 93ee8d18-10db-410b-92ac-7d6e49369ce3\n          description: Checkout assigned transaction ID for the payment.\n        href:\n          type: string\n          format: url\n          example: https://pay.checkout.fi/pay/93ee8d18-10db-410b-92ac-7d6e49369ce3\n          description: Unique URL to hosted payment gateway\n        terms:\n          type: string\n          example: \"By continuing with your payment, you agree to our <a href=\\\"https://www.checkout.fi/ehdot-ja-sopimukset/maksuehdot\\\" target=\\\"_blank\\\">payment terms & conditions</a>\"\n          description: Text containing a link to the terms of payment\n        groups:\n          type: array\n          items:\n            $ref: \"#/components/schemas/PaymentMethodGroupData\"\n          description: Contains data about the payment method groups. Contains only the groups found in the response's providers.\n        providers:\n          type: array\n          items:\n            $ref: \"#/components/schemas/PaymentMethodProvider\"\n\n    TokenMITPaymentResponse:\n      type: object\n      description: |\n        Response for a successful merchant initiated transaction payment request.\n      required:\n        - transactionId\n      properties:\n        transactionId:\n          type: string\n          format: uuid\n          example: 93ee8d18-10db-410b-92ac-7d6e49369ce3\n          description: Checkout assigned transaction ID for the payment.\n\n    TokenCITPaymentResponse:\n      type: object\n      description: |\n        Response for a successful customer initiated transaction payment request.\n      required:\n        - transactionId\n      properties:\n        transactionId:\n          type: string\n          format: uuid\n          example: 93ee8d18-10db-410b-92ac-7d6e49369ce3\n          description: Checkout assigned transaction ID for the payment.\n        threeDSecureUrl:\n          type: string\n          format: url\n          example: https://some-3ds-provider.com/efa4d1d9-db80-4ea7-a72f-c180ddbcae36\n          description: URL for 3DS authentication step-up. If this is returned, merchants needs to redirect customer to this given URL for 3DS authentication.\n\n    PaymentMethodGroupData:\n      type: object\n      description: ID, name and icon URLs for a payment method group\n      required:\n        - id\n        - name\n        - icon\n        - svg\n      properties:\n        id:\n          type: string\n          example: bank\n          description: ID of the group\n          enum:\n            - mobile\n            - bank\n            - creditcard\n            - credit\n        name:\n          type: string\n          example: Bank payment methods\n          description: Localized name of the group\n        icon:\n          type: string\n          format: url\n          example: https://payment.checkout.fi/static/img/payment-groups/bank.png\n          description: URL to the group PNG icon\n        svg:\n          type: string\n          format: url\n          example: https://payment.checkout.fi/static/img/payment-groups/bank.svg\n          description: URL to the group SVG icon (recommended to be used instead if PNG)\n\n    BasePaymentMethodProvider:\n      type: object\n      required:\n        - id\n        - name\n        - icon\n        - group\n        - svg\n      properties:\n        id:\n          type: string\n          example: osuuspankki\n          description: ID of the provider\n        name:\n          type: string\n          example: OP\n          description: Display name of the payment method\n        svg:\n          type: string\n          format: url\n          example: https://payment.checkout.fi/static/img/payment-methods/op-logo.svg\n          description: URL to payment method SVG icon (recommended to be used instead if PNG)\n        icon:\n          type: string\n          format: url\n          example: https://payment.checkout.fi/static/img/op_140x75.png\n          description: URL to payment method PNG icon\n        group:\n          type: string\n          example: bank\n          enum:\n            - mobile\n            - bank\n            - creditcard\n            - credit\n\n    PaymentMethodProvider:\n      allOf:\n        - $ref: \"#/components/schemas/BasePaymentMethodProvider\"\n        - description: Each payment method provider object describes an HTML form. The payment method parameters need to be posted to defined url in application/x-www-form-urlencoded format.\n        - required:\n            - name\n            - icon\n            - url\n            - group\n            - svg\n            - parameters\n          properties:\n            url:\n              type: string\n              format: url\n              example: https://api.checkout.fi/payments/93ee8d18-10db-410b-92ac-7d6e49369ce3/osuuspankki/redirect\n              description: Form action url\n            parameters:\n              type: array\n              items:\n                type: object\n                required:\n                  - name\n                  - value\n                properties:\n                  name:\n                    type: string\n                    example: VALUUTTALAJI\n                    description: Name of the form input\n                  value:\n                    type: string\n                    example: EUR\n                    description: Value of the form input\n\n    Payment:\n      type: object\n      required:\n        - transctionId\n        - status\n        - amount\n        - currency\n        - stamp\n        - reference\n        - createdAt\n      properties:\n        transactionId:\n          type: string\n          format: uuid\n          example: 93ee8d18-10db-410b-92ac-7d6e49369ce3\n          description: Transaction ID\n        status:\n          type: string\n          enum:\n            - new\n            - ok\n            - fail\n            - pending\n            - delayed\n          description: Transaction status\n        amount:\n          type: integer\n          format: int64\n          example: 1590\n        currency:\n          type: string\n          example: EUR\n          enum:\n            - EUR\n        stamp:\n          type: string\n          example: 29858472952\n        reference:\n          type: string\n          example: 9187445\n        createdAt:\n          type: string\n          example: \"2019-10-30T09:13:00\"\n        href:\n          type: string\n          format: url\n          example: https://pay.checkout.fi/pay/93ee8d18-10db-410b-92ac-7d6e49369ce3\n          description: If transaction is in status 'new', link to the hosted payment gateway\n        provider:\n          type: string\n          example: osuuspankki\n          description: If processed, the name of the payment method provider\n        filingCode:\n          type: string\n          description: If paid, the filing code issued by the payment method provider if any\n        paidAt:\n          type: string\n          example: \"2019-10-30T09:14:28\"\n          description: Timestamp when the transaction was paid\n\n    # TODO: Once async, response status should be 'pending'\n    RefundResponse:\n      type: object\n      properties:\n        status:\n          type: string\n          enum:\n            - ok\n            - pending\n            - fail\n        transactionId:\n          type: string\n          format: uuid\n          description: Checkout transaction ID for the refund\n          example: 912b13eb-c8ab-4397-a21a-9e9e1419eebe\n        provider:\n          type: string\n          description: Payment method provider\n          example: osuuspankki\n\n    ActivateInvoiceResponse:\n      type: object\n      properties:\n        status:\n          type: string\n          enum:\n            - ok\n            - error\n        message:\n          type: string\n          description: Response details\n          example: Collector invoice activated\n\n    SettlementIdItem:\n      type: object\n      description: Settlement ID\n      required:\n        - id\n        - createdAt\n        - settledAt\n      properties:\n        id:\n          type: integer\n          format: int64\n          example: 123456\n          description: ID of a settlement\n        createdAt:\n          type: string\n          format: datetime\n          example: \"2019-01-01T00:00:00+02:00\"\n          description: When the settlement was formed\n        settledAt:\n          type: string\n          format: datetime\n          example: \"2019-01-02T04:00:00+02:00\"\n          description: When the settlement was paid\n\n    PaymentReportBySettlementIdRequest:\n      type: object\n      description: Payment report request\n      required:\n        - requestType\n        - callbackUrl\n      properties:\n        requestType:\n          type: string\n          example: json\n          description: In which format is the report delivered in\n          enum:\n            - json\n            - csv\n        callbackUrl:\n          type: string\n          format: url\n          example: https://example.com/payment-reports/\n          description: To which URL is the report delivered to\n        reportFields:\n          type: array\n          description: Limit the amount of fields included in the report. By default all fields are included.\n          items:\n            type: string\n            enum:\n              [\n                entryDate,\n                created,\n                amount,\n                status,\n                firstname,\n                familyname,\n                description,\n                reference,\n                paymentMethod,\n                stamp,\n                address,\n                postcode,\n                postoffice,\n                country,\n                checkoutReference,\n                archiveNumber,\n                payerName,\n                settlementId,\n                settlementDate,\n                originalTradeReference,\n                vatPercentage,\n                vatAmount,\n                paymentMethodFee,\n                paymentMethodCommission,\n                shopInShopCommission,\n                shopInShopCommissionVatPercentage,\n                shopInShopCommissionVatAmount,\n              ]\n        submerchant:\n          type: integer\n          example: 695874\n          description: Get submerchant's payment report\n\n    PaymentReportRequestResponse:\n      required:\n        - requestId\n      properties:\n        requestId:\n          type: string\n          description: Request id\n\n    PaymentReportCallbackJSON:\n      description: The returned fields can be filtered out by specifying \"reportFields\" parameter\n      properties:\n        entryDate:\n          type: string\n          format: DD-MM-YYYY\n          description: When the payment was paid or initialized\n          example: \"11-06-2019\"\n        created:\n          type: string\n          format: HH:mm\n          description: Hour and minute of the payment creation\n          example: \"11:31\"\n        amount:\n          type: float\n          description: Payment amount in Euros\n          example: 15.95\n        status:\n          type: string\n          enum:\n            [\n              New,\n              Paid,\n              waiting for approval,\n              Cancelled,\n              Timeout,\n              Halted,\n              Delayed,\n              Paid and settled,\n            ]\n          description: Payment status\n          example: Paid\n        firstname:\n          type: string\n          description: First name\n          example: John\n        familyname:\n          type: string\n          description: Last name\n          example: Doe\n        description:\n          type: string\n          format: datetime\n          description: Payment description\n          example: Cat food and rubber boots\n        reference:\n          type: string\n          description: Merchant's reference\n          example: 12345-abc\n        paymentMethod:\n          type: string\n          description: Payment method\n          example: OP\n        stamp:\n          type: string\n          description: Payment Stamp\n          example: CO~1554204687711\n        address:\n          type: string\n          description: Delivery address\n          example: Hämeenkatu 16\n        postcode:\n          type: string\n          description: Postal code\n          example: \"33100\"\n        postoffice:\n          type: string\n          description: Post office\n          example: Tampere\n        country:\n          type: string\n          description: Country of delivery\n          example: Finland\n        checkoutReference:\n          type: string\n          description: Checkout reference\n          example: \"1031751\"\n        archiveNumber:\n          type: string\n          description: Archive number\n          example: \"81295824808952395\"\n        payerName:\n          type: string\n          description: Name from bank\n          example: \"DOEJOHN\"\n        settlementId:\n          type: number\n          description: Settlement (report) id\n          example: 1235678\n        settlementDate:\n          type: string\n          description: When the payment is settled\n          format: DD-MM-YYYY\n          example: \"2019-04-04\"\n        originalTradeReference:\n          type: string\n          description: Merchant's reference of the original payment in case of refund\n          example: 12345-abc\n        vatPercentage:\n          type: number\n          format: float\n          description: Payment VAT percentage\n          example: 24\n        vatAmount:\n          type: number\n          format: float\n          description: Payment VAT amount in Euros\n          example: 0.192\n        paymentMethodFee:\n          type: number\n          format: float\n          description: Payment method fee in Euros\n          example: 0.12\n        paymentMethodCommission:\n          type: number\n          format: float\n          description: Payment method commission amount in Euros\n          example: 0.024\n        shopInShopCommission:\n          type: number\n          format: float\n          description: Payment method commission amount in Euros\n          example: 0.8\n        shopInShopCommissionVatPercentage:\n          type: number\n          format: float\n          description: Payment method commission VAT percentage\n          example: 24\n        shopInShopCommissionVatAmount:\n          type: number\n          format: float\n          description: Payment method commission VAT amount in Euros\n          example: 0.192\n\n    GroupedPaymentProvidersResponse:\n      description: List grouped providers response body\n      required:\n        - terms\n        - groups\n        - providers\n      properties:\n        terms:\n          type: string\n          description: Localized text with a link to payment terms\n          example: By continuing with your payment, you agree to our <a href=\"https://www.checkout.fi/ehdot-ja-sopimukset/maksuehdot\" target=\"_blank\">payment terms & conditions</a>\n        groups:\n          type: array\n          description: Payment method group data for all of groups that are included in the query\n          items:\n            $ref: '#/components/schemas/PaymentMethodGroupDataWithProviders'\n        providers:\n          type: array\n          description: A flat list of payment method providers\n          items:\n            $ref: '#/components/schemas/PaymentMethodProvider'\n\n    PaymentMethodGroupDataWithProviders:\n      allOf:\n        - $ref: '#/components/schemas/PaymentMethodGroupData'\n        - description: Localized name, icon and providers data for single payment method group\n        - required:\n            - id\n            - name\n            - icon\n            - svg\n            - providers\n          properties:\n            providers:\n              type: array\n              items:\n                $ref: '#/components/schemas/PaymentMethodProvider'\n\n    Error:\n      required:\n        - status\n        - message\n      properties:\n        status:\n          type: string\n          enum:\n            - error\n        message:\n          type: string\n          description: Error description\n        meta:\n          type: array\n          items:\n            type: string\n          description: Possible detailed error descriptions\n\n  responses:\n    BadRequest:\n      description: Request did not pass input validation\n      content:\n        application/json:\n          schema:\n            $ref: \"#/components/schemas/Error\"\n    NotFound:\n      description: The specified resource was not found\n      content:\n        application/json:\n          schema:\n            $ref: \"#/components/schemas/Error\"\n    Unauthorized:\n      description: Unauthorized\n      content:\n        application/json:\n          schema:\n            $ref: \"#/components/schemas/Error\"\n    Error:\n      description: Unexpected error\n      content:\n        application/json:\n          schema:\n            $ref: \"#/components/schemas/Error\"\n",
			"canonicalURL": "/github.com/CheckoutFinland/psp-api@cc51273a5e6b5daa6f25143a558c5734d7a623dc/-/blob/docs/checkout-psp-api.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/CheckoutFinland/psp-api/blob/cc51273a5e6b5daa6f25143a558c5734d7a623dc/docs/checkout-psp-api.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "parse: parse spec: parse components: at 1:15: schemas: \"PaymentReportCallbackJSON\": parse schema: property \"amount\": at 1:13674: parse schema: unexpected schema type: \"float\""
}