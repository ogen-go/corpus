{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/wikimedia/restbase"
		},
		"file": {
			"name": "citoid.yaml",
			"size": 0,
			"path": "v1/citoid.yaml",
			"byteSize": 3881,
			"content": "openapi: 3.0.1\ninfo:\n  version: 1.0.0-beta\n  title: MediaWiki Citation API\n  description: Citation API based on the Citoid services\n  termsOfService: https://github.com/wikimedia/restbase#restbase\n  contact:\n    name: Services\n    email: services@lists.wikimedia.org\n    url: https://www.mediawiki.org/wiki/Services\n  license:\n    name: Apache licence, v2\n    url: https://www.apache.org/licenses/LICENSE-2.0\ntags:\n  - name: Citation\n    description: generation of citation data\npaths:\n  /citation/{format}/{query}:\n    get:\n      tags:\n        - Citation\n      summary: Get citation data given an article identifier.\n      description: |\n        Generates citation data given a URL, DOI, PMID, ISBN, or PMCID.\n\n        See more at [Citoid service documentation](https://www.mediawiki.org/wiki/Citoid)\n\n        The citation data can be requested in one of the following formats:\n          - `mediawiki`: format designed for MediaWiki to be used with `templateData`.\n            Uses [Zotero field names](https://aurimasv.github.io/z2csl/typeMap.xml).\n          - `mediawiki-basefields`: `mediawiki` format with Zotero `basefield` field names.\n          - `zotero`: format used by [Zotero](https://www.zotero.org/).\n          - `bibtex`: format used in conjunction with LaTeX documents.\n            See [bibtex.org](http://www.bibtex.org/).\n          - `wikibase`: format designed for [Wikibase](https://www.mediawiki.org/wiki/Extension:Wikibase_Repository).\n\n        Stability: [unstable](https://www.mediawiki.org/wiki/API_versioning#Unstable)\n      parameters:\n        - name: format\n          in: path\n          description: The format to use for the resulting citation data\n          schema:\n            type: string\n            enum:\n              - mediawiki\n              - mediawiki-basefields\n              - zotero\n              - bibtex\n              - wikibase\n          required: true\n        - name: query\n          in: path\n          description: |\n            URL of an article, DOI, ISBN, PMCID or PMID in the URL-encoded format. Note that on the Swagger-UI doc page you don't need to URI-encode the parameter manually, it will be done by the docs engine.\n          required: true\n          schema:\n            type: string\n        - name: Accept-Language\n          in: header\n          description: |\n            For some articles the result depends on the `Accept-Language` header, so provide it if localized content is required.\n          schema:\n            type: string\n      responses:\n        200:\n          description: The citation data in the requested format\n          content:\n            application/json; charset=utf-8;:\n              schema:\n                $ref: '#/components/schemas/result'\n            application/x-bibtex; charset=utf-8:\n              schema:\n                $ref: '#/components/schemas/result'\n        404:\n          description: Citation data was not found.\n          content:\n            application/problem+json:\n              schema:\n                $ref: '#/components/schemas/problem'\n      operationId: getCitation\n      # TEMP TEMP TEMP\n      # Citoid monitoring temporarily disabled due to T211411\n      x-monitor: false\n#      x-amples:\n#        - title: Get citation for Darth Vader\n#          request:\n#            params:\n#              domain: en.wikipedia.org\n#              format: mediawiki\n#              query: 'https://en.wikipedia.org/wiki/Darth_Vader'\n#          response:\n#            status: 200\n#            headers:\n#              content-type:  /^application\\/json/\n#            body:\n#              - title: /.+/\n#                itemType: /.+/\n\ncomponents:\n  schemas:\n    result:\n      required:\n        - title\n        - url\n        - itemType\n      type: object\n      properties:\n        itemType:\n          type: string\n        title:\n          type: string\n        url:\n          type: string\n"
		}
	},
	"Error": "parse: parse spec: paths: /citation/{format}/{query}: get: operation \"getCitation\": responses: 404: content: \"application/problem+json\": schema: parse schema: reference \"#/components/schemas/problem\": resolve reference \"#/components/schemas/problem\": unmarshal: unexpected end of JSON input"
}