{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/imfht/flaskapps"
		},
		"file": {
			"name": "apispecs.yaml",
			"size": 0,
			"path": "repos/age-of-empires-II-api-master/docs/apispecs.yaml",
			"byteSize": 13622,
			"content": "openapi: 3.0.0\nswagger: \"3.0\"\n\nservers:\n  - url: \"/api/v1\"\n    description: Age of Empires II API\n\nschemes:\n  - https\n\ninfo:\n  title: \"Age Of Empires II API\"\n  description: \"Simple API to retrieve resources related to Age of Empires II. The base URL for retrieving the resources is /api/v1\"\n  version: 1.0.0\n  license:\n    name: \"License: BSD-3-Clause\"\n    url: \"https://github.com/aalises/age-of-empires-II-api/blob/master/LICENSE\"\n  contact:\n    name: Albert Alises Sorribas\n\nexternalDocs:\n  description: \"Project repository\"\n  url: \"https://github.com/aalises/age-of-empires-II-api\"\n\nproduces:\n  - \"application/json\"\n\npaths:\n  #Civilizations\n  \"/civilizations\":\n    get:\n      summary: Gets a list of all the civilizations\n      tags:\n        - resources\n      produces:\n        - application/json\n      description: Gets a list of all the civilizations in AOE2\n      operationId: \"civilizations\"\n      responses:\n        \"200\":\n          description: \"Civilizations Response\"\n          content:\n            application/json:\n              schema:\n                $ref: \"#/definitions/CivilizationList\"\n        default:\n          description: \"Unexpected Error\"\n\n  \"/civilization/{id}\":\n    get:\n      summary: Gets a given civilization by ID or name\n      tags:\n        - resources\n      produces:\n        - application/json\n      description: \"Gets a given civilization by ID (Integer) or name (String with spaces replaced with hyphens/underscores)\"\n      operationId: \"civilization.id\"\n      parameters:\n        - name: \"id\"\n          in: \"path\"\n          description: \"ID or name of the civilization to fetch\"\n          required: true\n          schema:\n            type: \"string\"\n            example: '4'\n      responses:\n        \"200\":\n          description: \"Civilization Response\"\n          content:\n            application/json:\n              schema:\n                $ref: \"#/definitions/Civilization\"\n        \"404\":\n          description: \"Civilization not found\"\n          content:\n            application/json:\n              schema:\n                $ref: \"#/definitions/NotFoundError\"\n        default:\n          description: \"Unexpected Error\"\n\n  #Units\n  \"/units\":\n    get:\n      summary: Gets a list of all the units\n      tags:\n        - resources\n      produces:\n        - application/json\n      description: Gets a list of all the units in AOE2\n      operationId: \"units\"\n      responses:\n        \"200\":\n          description: \"Units Response\"\n          content:\n            application/json:\n              schema:\n                $ref: \"#/definitions/UnitList\"\n        default:\n          description: \"Unexpected Error\"\n\n  \"/unit/{id}\":\n    get:\n      summary: Gets a given unit by ID or name\n      tags:\n        - resources\n      produces:\n        - application/json\n      description: \"Gets a given unit by ID (Integer) or name (String with spaces replaced with hyphens/underscores)\"\n      operationId: \"units.id\"\n      parameters:\n        - name: \"id\"\n          in: \"path\"\n          description: \"ID or name of the unit to fetch\"\n          required: true\n          schema:\n            type: \"string\"\n            example: '4'\n      responses:\n        \"200\":\n          description: \"Unit Response\"\n          content:\n            application/json:\n              schema:\n                $ref: \"#/definitions/Unit\"\n        \"404\":\n          description: \"Unit not found\"\n          content:\n            application:json:\n              schema:\n                $ref: \"#/definitions/NotFoundError\"\n        default:\n          description: \"Unexpected Error\"\n\n  #Structures\n  \"/structures\":\n    get:\n      summary: Gets a list of all the structures\n      tags:\n        - resources\n      produces:\n        - application/json\n      description: Gets a list of all the structures in AOE2\n      operationId: structures\n      responses:\n        \"200\":\n          description: \"Structures Response\"\n          content:\n            application:json:\n              schema:\n                $ref: \"#/definitions/StructureList\"\n        default:\n          description: \"Unexpected Error\"\n\n  \"/structure/{id}\":\n    get:\n      summary: Gets a given structure by ID or name\n      tags:\n        - resources\n      produces:\n        - application/json\n      description: \"Gets a given structure by ID (Integer) or name (String with spaces replaced with hyphens/underscores)\"\n      operationId: \"structure.id\"\n      parameters:\n        - name: \"id\"\n          in: \"path\"\n          description: \"ID or name of the structure to fetch\"\n          required: true\n          schema:\n            type: \"string\"\n            example: '5'\n      responses:\n        \"200\":\n          description: \"Structure Response\"\n          content:\n            application:json:\n              schema:\n                $ref: \"#/definitions/Structure\"\n        \"404\":\n          description: \"Structure not found\"\n          content:\n            application:json:\n              schema:\n                $ref: \"#/definitions/NotFoundError\"\n        default:\n          description: \"Unexpected Error\"\n\n  #Technologies\n  \"/technologies\":\n    get:\n      summary: Gets a list of all the technologies\n      tags:\n        - resources\n      produces:\n        - application/json\n      description: Gets a list of all the technologies in AOE2\n      operationId: \"technologies\"\n      responses:\n        \"200\":\n          description: \"Technologies Response\"\n          content:\n            application:json:\n              schema:\n                $ref: \"#/definitions/TechnologyList\"\n        default:\n          description: \"Unexpected Error\"\n  \n  \"/technology/{id}\":\n    get:\n      summary: Gets a given technology by ID or name\n      tags:\n        - resources\n      produces:\n        - application/json\n      description: \"Gets a given technology by ID (Integer) or name (String with spaces replaced with hyphens/underscores)\"\n      operationId: \"technology.id\"\n      parameters:\n        - name: \"id\"\n          in: \"path\"\n          description: \"ID or name of the technology to fetch\"\n          required: true\n          schema:\n            type: \"string\"\n            example: '3'\n      responses:\n        \"200\":\n          description: \"Technology Response\"\n          content:\n            application/json:\n              schema:\n                $ref: \"#/definitions/Technology\"\n        \"404\":\n          description: \"Technology not found\"\n          content:\n            application/json:\n              schema:\n                $ref: \"#/definitions/NotFoundError\"\n        default:\n          description: \"Unexpected Error\"\n\ndefinitions:\n  Civilization:\n    required:\n      - name\n      - id\n      - expansion\n      - army_type\n      - unique_unit\n      - unique_tech\n      - team_bonus\n      - civilization_bonus\n    properties:\n      id:\n        type: integer\n        description: Unique ID representing the civilization\n      name:\n        type: string\n        description: Name of the civilization\n      expansion:\n        type: string\n        description: Expansion the civilization was introduced\n      army_type:\n        type: string\n        description: Predominant army type of the civilization (e.g Archers, or Infantry)\n      unique_unit:\n        type: array\n        items:\n          type: string\n        description: Unique units of the civilization\n      unique_tech:\n        type: array\n        items:\n          type: string\n        description: Unique technologies of the civilization\n      team_bonus:\n        type: string\n        description: Team bonuses of the civilization\n      civilization_bonus:\n        type: array\n        items:\n          type: string\n        description: Bonuses of the civilization\n  CivilizationList:\n    properties:\n      civilizations:\n        type: array\n        items:\n          $ref: \"#/definitions/Civilization\"\n  Unit:\n    required:\n      - id\n      - name\n      - expansion\n      - age\n      - created_in\n      - cost\n      - build_time\n      - reload_time\n      - movement_rate\n      - line_of_sight\n      - hit_points\n      - attack\n      - armor\n    properties:\n      id:\n        type: integer\n        description: Unique ID representing the unit\n      name:\n        type: string\n        description: Name of the unit\n      description:\n        type: string\n        description: Short description of the unit\n      expansion:\n        type: string\n        description: Expansion in which the unit was introduced\n      age:\n        type: string\n        description: Age in which the unit can be produced\n      created_in:\n        type: string\n        description: Structure the unit is created in\n      cost:\n        type: object\n        $ref: \"#/definitions/Cost\"\n        description: Cost of the unit (JSON Object)\n      build_time:\n        type: integer\n        description: Build time in seconds\n      reload_time:\n        type: number\n        description: Reload time\n      attack_delay:\n        type: number\n        description: Attack delay when you give the order to attack\n      movement_rate:\n        type: number\n        description: Movement Rate\n      line_of_sight:\n        type: integer\n        description: Line of sight of the unit\n      hit_points:\n        type: integer\n        description: Hit points (health) of the unit\n      range:\n        type: string\n        description: Range of the unit. There can be a minimum and maximum range in the format (min-max)\n      attack:\n        type: integer\n        description: Attack of the unit\n      armor:\n        type: string\n        description: Armor of the unit formated as 'melee/pierce'\n      attack_bonus:\n        type: array\n        items:\n          type: string\n        description: Attack bonuses of the unit\n      armor_bonus:\n        type: array\n        items:\n          type: string\n        description: Armor bonuses of the unit\n      search_radius:\n        type: integer\n        description: Search Radius of the unit\n      accuracy:\n        type: string\n        description: Attack accuracy (as %) of the unit\n      blast_radius:\n        type: number\n        description: Attack blast radius\n  UnitList:\n    properties:\n      units:\n        type: array\n        items:\n          $ref: \"#/definitions/Unit\"\n  Structure:\n    required:\n      - id\n      - name\n      - expansion\n      - age\n      - cost\n      - build_time\n      - hit_points\n      - line_of_sight\n      - armor\n    properties:\n      id:\n        type: integer\n        description: Unique ID representing the structure\n      name:\n        type: string\n        description: Name of the structure\n      description:\n        type: string\n        description: Short description of the structure\n      expansion:\n        type: string\n        description: Expansion the structure was introduced\n      age:\n        type: string\n        description: Age in which the structure can be built\n      cost:\n        type: object\n        $ref: \"#/definitions/Cost\"\n        description: Cost of the structure (JSON Object)\n      build_time:\n        type: integer\n        description: Build time in seconds\n      hit_points:\n        type: integer\n        description: Hit points (health) of the structure\n      line_of_sight:\n        type: integer\n        description: Line of sight of the structure\n      armor:\n        type: string\n        description: Armor of the structure formatted as 'melee/pierce'\n      range:\n        type: string\n        description: Range of the structure. There can be a minimum and maximum range in the format (min-max)\n      reload_time:\n        type: number\n        description: Reload time of the structure\n      attack:\n        type: integer\n        description: Attack points of the structure\n      special:\n        type: array\n        items:\n          type: string\n        description: Other information about the structure and the units it can garrison\n  StructureList:\n    properties:\n      structures:\n        type: array\n        items:\n          $ref: \"#/definitions/Structure\"\n  Technology:\n    required:\n      - id\n      - name\n      - expansion\n      - age\n      - develops_in\n      - cost\n      - build_time\n    properties:\n      id:\n        type: integer\n        description: Unique ID representing the technology\n      name:\n        type: string\n        description: Name of the technology\n      description:\n        type: string\n        description: Short description of the technology\n      expansion:\n        type: string\n        description: Expansion the technology was introduced\n      age:\n        type: string\n        description: Age in which the technology can be developed\n      develops_in:\n        type: string\n        description: Structure the technology is developed in\n      cost:\n        type: object\n        $ref: \"#/definitions/Cost\"\n        description: Cost of the technology (JSON Object)\n      build_time:\n        type: integer\n        description: Build time in seconds\n      applies_to:\n        type: array\n        items:\n          type: string\n        description: Units or civilization the technology apply to\n  TechnologyList:\n    properties:\n      technologies:\n        type: array\n        items:\n          $ref: \"#/definitions/Technology\"\n  NotFoundError:\n    required:\n      - message\n    properties:\n      message:\n        type: string\n        description: Description of the error message\n  Cost:\n    properties:\n      Wood:\n        type: integer\n        description: How much wood it costs\n      Food:\n        type: integer\n        description: How much food it costs\n      Stone:\n        type: integer\n        description: How much stone it costs\n      Gold:\n        type: integer\n        description: How much gold it costs",
			"canonicalURL": "/github.com/imfht/flaskapps@d6fc9b7e32d7dc6b493c269b8ccbaa6ee2d690c1/-/blob/repos/age-of-empires-II-api-master/docs/apispecs.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/imfht/flaskapps/blob/d6fc9b7e32d7dc6b493c269b8ccbaa6ee2d690c1/repos/age-of-empires-II-api-master/docs/apispecs.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "parse: parse spec: parse operations: paths: /structures: get: operation \"structures\": responses: 200: content: content type \"application:json\": mime: expected slash after first token"
}