{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/restful-ma/thresholds"
		},
		"file": {
			"name": "amazonaws.com-lex-models-2017-04-19-swagger.yaml",
			"size": 0,
			"path": "benchmark-repository/openapi/amazonaws.com-lex-models-2017-04-19-swagger.yaml",
			"byteSize": 180266,
			"content": "openapi: 3.0.0\ninfo:\n  version: 2017-04-19\n  x-release: v4\n  title: Amazon Lex Model Building Service\n  description: \u003cfullname\u003eAmazon Lex Build-Time Actions\u003c/fullname\u003e \u003cp\u003e Amazon Lex is an AWS\n    service for building conversational voice and text interfaces. Use these\n    actions to create, update, and delete conversational bots for new and\n    existing client applications. \u003c/p\u003e\n  x-logo:\n    url: https://twitter.com/awscloud/profile_image?size=original\n    backgroundColor: \"#FFFFFF\"\n  termsOfService: https://aws.amazon.com/service-terms/\n  contact:\n    name: Mike Ralphson\n    email: mike.ralphson@gmail.com\n    url: https://github.com/mermade/aws2openapi\n    x-twitter: PermittedSoc\n  license:\n    name: Apache 2.0 License\n    url: http://www.apache.org/licenses/\n  x-providerName: amazonaws.com\n  x-serviceName: lex-models\n  x-origin:\n    - contentType: application/json\n      url: https://raw.githubusercontent.com/aws/aws-sdk-js/master/apis/lex-models-2017-04-19.normal.json\n      converter:\n        url: https://github.com/mermade/aws2openapi\n        version: 1.0.0\n      x-apisguru-direct: true\n  x-apiClientRegistration:\n    url: https://portal.aws.amazon.com/gp/aws/developer/registration/index.html?nc2=h_ct\n  x-apisguru-categories:\n    - cloud\n  x-preferred: true\nexternalDocs:\n  description: Amazon Web Services documentation\n  url: https://docs.aws.amazon.com/lex/\nx-hasEquivalentPaths: true\nsecurity:\n  - hmac: []\npaths:\n  \"/bots/{name}/versions\":\n    post:\n      operationId: CreateBotVersion\n      description: \u003cp\u003eCreates a new version of the bot based on the \u003ccode\u003e$LATEST\u003c/code\u003e\n        version. If the \u003ccode\u003e$LATEST\u003c/code\u003e version of this resource hasn't\n        changed since you created the last version, Amazon Lex doesn't create a\n        new version. It returns the last created version.\u003c/p\u003e \u003cnote\u003e \u003cp\u003eYou can\n        update only the \u003ccode\u003e$LATEST\u003c/code\u003e version of the bot. You can't\n        update the numbered versions that you create with the\n        \u003ccode\u003eCreateBotVersion\u003c/code\u003e operation.\u003c/p\u003e \u003c/note\u003e \u003cp\u003e When you create\n        the first version of a bot, Amazon Lex sets the version to 1. Subsequent\n        versions increment by 1. For more information, see\n        \u003ca\u003eversioning-intro\u003c/a\u003e. \u003c/p\u003e \u003cp\u003e This operation requires permission for\n        the \u003ccode\u003elex:CreateBotVersion\u003c/code\u003e action. \u003c/p\u003e\n      responses:\n        \"201\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/CreateBotVersionResponse\"\n        \"480\":\n          description: NotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/NotFoundException\"\n        \"481\":\n          description: ConflictException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ConflictException\"\n        \"482\":\n          description: LimitExceededException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/LimitExceededException\"\n        \"483\":\n          description: InternalFailureException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InternalFailureException\"\n        \"484\":\n          description: BadRequestException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/BadRequestException\"\n        \"485\":\n          description: PreconditionFailedException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/PreconditionFailedException\"\n      parameters:\n        - name: name\n          in: path\n          required: true\n          description: \"The name of the bot that you want to create a new version of. The\n            name is case sensitive. \"\n          schema:\n            type: string\n            minLength: 2\n            maxLength: 50\n            pattern: ^([A-Za-z]_?)+$\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                checksum:\n                  description: Identifies a specific revision of the \u003ccode\u003e$LATEST\u003c/code\u003e\n                    version of the bot. If you specify a checksum and the\n                    \u003ccode\u003e$LATEST\u003c/code\u003e version of the bot has a different\n                    checksum, a \u003ccode\u003ePreconditionFailedException\u003c/code\u003e\n                    exception is returned and Amazon Lex doesn't publish a new\n                    version. If you don't specify a checksum, Amazon Lex\n                    publishes the \u003ccode\u003e$LATEST\u003c/code\u003e version.\n                  type: string\n        required: true\n    parameters:\n      - $ref: \"#/components/parameters/X-Amz-Content-Sha256\"\n      - $ref: \"#/components/parameters/X-Amz-Date\"\n      - $ref: \"#/components/parameters/X-Amz-Algorithm\"\n      - $ref: \"#/components/parameters/X-Amz-Credential\"\n      - $ref: \"#/components/parameters/X-Amz-Security-Token\"\n      - $ref: \"#/components/parameters/X-Amz-Signature\"\n      - $ref: \"#/components/parameters/X-Amz-SignedHeaders\"\n  \"/intents/{name}/versions\":\n    post:\n      operationId: CreateIntentVersion\n      description: \u003cp\u003eCreates a new version of an intent based on the \u003ccode\u003e$LATEST\u003c/code\u003e\n        version of the intent. If the \u003ccode\u003e$LATEST\u003c/code\u003e version of this\n        intent hasn't changed since you last updated it, Amazon Lex doesn't\n        create a new version. It returns the last version you created.\u003c/p\u003e\n        \u003cnote\u003e \u003cp\u003eYou can update only the \u003ccode\u003e$LATEST\u003c/code\u003e version of the\n        intent. You can't update the numbered versions that you create with the\n        \u003ccode\u003eCreateIntentVersion\u003c/code\u003e operation.\u003c/p\u003e \u003c/note\u003e \u003cp\u003e When you\n        create a version of an intent, Amazon Lex sets the version to 1.\n        Subsequent versions increment by 1. For more information, see\n        \u003ca\u003eversioning-intro\u003c/a\u003e. \u003c/p\u003e \u003cp\u003eThis operation requires permissions to\n        perform the \u003ccode\u003elex:CreateIntentVersion\u003c/code\u003e action. \u003c/p\u003e\n      responses:\n        \"201\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/CreateIntentVersionResponse\"\n        \"480\":\n          description: NotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/NotFoundException\"\n        \"481\":\n          description: ConflictException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ConflictException\"\n        \"482\":\n          description: LimitExceededException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/LimitExceededException\"\n        \"483\":\n          description: InternalFailureException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InternalFailureException\"\n        \"484\":\n          description: BadRequestException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/BadRequestException\"\n        \"485\":\n          description: PreconditionFailedException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/PreconditionFailedException\"\n      parameters:\n        - name: name\n          in: path\n          required: true\n          description: \"The name of the intent that you want to create a new version of.\n            The name is case sensitive. \"\n          schema:\n            type: string\n            minLength: 1\n            maxLength: 100\n            pattern: ^([A-Za-z]_?)+$\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                checksum:\n                  description: Checksum of the \u003ccode\u003e$LATEST\u003c/code\u003e version of the intent\n                    that should be used to create the new version. If you\n                    specify a checksum and the \u003ccode\u003e$LATEST\u003c/code\u003e version of\n                    the intent has a different checksum, Amazon Lex returns a\n                    \u003ccode\u003ePreconditionFailedException\u003c/code\u003e exception and\n                    doesn't publish a new version. If you don't specify a\n                    checksum, Amazon Lex publishes the \u003ccode\u003e$LATEST\u003c/code\u003e\n                    version.\n                  type: string\n        required: true\n    parameters:\n      - $ref: \"#/components/parameters/X-Amz-Content-Sha256\"\n      - $ref: \"#/components/parameters/X-Amz-Date\"\n      - $ref: \"#/components/parameters/X-Amz-Algorithm\"\n      - $ref: \"#/components/parameters/X-Amz-Credential\"\n      - $ref: \"#/components/parameters/X-Amz-Security-Token\"\n      - $ref: \"#/components/parameters/X-Amz-Signature\"\n      - $ref: \"#/components/parameters/X-Amz-SignedHeaders\"\n  \"/slottypes/{name}/versions\":\n    post:\n      operationId: CreateSlotTypeVersion\n      description: \u003cp\u003eCreates a new version of a slot type based on the\n        \u003ccode\u003e$LATEST\u003c/code\u003e version of the specified slot type. If the\n        \u003ccode\u003e$LATEST\u003c/code\u003e version of this resource has not changed since the\n        last version that you created, Amazon Lex doesn't create a new version.\n        It returns the last version that you created. \u003c/p\u003e \u003cnote\u003e \u003cp\u003eYou can\n        update only the \u003ccode\u003e$LATEST\u003c/code\u003e version of a slot type. You can't\n        update the numbered versions that you create with the\n        \u003ccode\u003eCreateSlotTypeVersion\u003c/code\u003e operation.\u003c/p\u003e \u003c/note\u003e \u003cp\u003eWhen you\n        create a version of a slot type, Amazon Lex sets the version to 1.\n        Subsequent versions increment by 1. For more information, see\n        \u003ca\u003eversioning-intro\u003c/a\u003e. \u003c/p\u003e \u003cp\u003eThis operation requires permissions for\n        the \u003ccode\u003elex:CreateSlotTypeVersion\u003c/code\u003e action.\u003c/p\u003e\n      responses:\n        \"201\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/CreateSlotTypeVersionResponse\"\n        \"480\":\n          description: NotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/NotFoundException\"\n        \"481\":\n          description: ConflictException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ConflictException\"\n        \"482\":\n          description: LimitExceededException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/LimitExceededException\"\n        \"483\":\n          description: InternalFailureException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InternalFailureException\"\n        \"484\":\n          description: BadRequestException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/BadRequestException\"\n        \"485\":\n          description: PreconditionFailedException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/PreconditionFailedException\"\n      parameters:\n        - name: name\n          in: path\n          required: true\n          description: \"The name of the slot type that you want to create a new version\n            for. The name is case sensitive. \"\n          schema:\n            type: string\n            minLength: 1\n            maxLength: 100\n            pattern: ^([A-Za-z]_?)+$\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                checksum:\n                  description: Checksum for the \u003ccode\u003e$LATEST\u003c/code\u003e version of the slot\n                    type that you want to publish. If you specify a checksum and\n                    the \u003ccode\u003e$LATEST\u003c/code\u003e version of the slot type has a\n                    different checksum, Amazon Lex returns a\n                    \u003ccode\u003ePreconditionFailedException\u003c/code\u003e exception and\n                    doesn't publish the new version. If you don't specify a\n                    checksum, Amazon Lex publishes the \u003ccode\u003e$LATEST\u003c/code\u003e\n                    version.\n                  type: string\n        required: true\n    parameters:\n      - $ref: \"#/components/parameters/X-Amz-Content-Sha256\"\n      - $ref: \"#/components/parameters/X-Amz-Date\"\n      - $ref: \"#/components/parameters/X-Amz-Algorithm\"\n      - $ref: \"#/components/parameters/X-Amz-Credential\"\n      - $ref: \"#/components/parameters/X-Amz-Security-Token\"\n      - $ref: \"#/components/parameters/X-Amz-Signature\"\n      - $ref: \"#/components/parameters/X-Amz-SignedHeaders\"\n  \"/bots/{name}\":\n    delete:\n      operationId: DeleteBot\n      description: \u003cp\u003eDeletes all versions of the bot, including the \u003ccode\u003e$LATEST\u003c/code\u003e\n        version. To delete a specific version of the bot, use the\n        \u003ca\u003eDeleteBotVersion\u003c/a\u003e operation.\u003c/p\u003e \u003cp\u003eIf a bot has an alias, you\n        can't delete it. Instead, the \u003ccode\u003eDeleteBot\u003c/code\u003e operation returns a\n        \u003ccode\u003eResourceInUseException\u003c/code\u003e exception that includes a reference\n        to the alias that refers to the bot. To remove the reference to the bot,\n        delete the alias. If you get the same exception again, delete the\n        referring alias until the \u003ccode\u003eDeleteBot\u003c/code\u003e operation is\n        successful.\u003c/p\u003e \u003cp\u003eThis operation requires permissions for the\n        \u003ccode\u003elex:DeleteBot\u003c/code\u003e action.\u003c/p\u003e\n      responses:\n        \"204\":\n          description: Success\n        \"480\":\n          description: NotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/NotFoundException\"\n        \"481\":\n          description: ConflictException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ConflictException\"\n        \"482\":\n          description: LimitExceededException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/LimitExceededException\"\n        \"483\":\n          description: InternalFailureException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InternalFailureException\"\n        \"484\":\n          description: BadRequestException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/BadRequestException\"\n        \"485\":\n          description: ResourceInUseException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ResourceInUseException\"\n      parameters:\n        - name: name\n          in: path\n          required: true\n          description: \"The name of the bot. The name is case sensitive. \"\n          schema:\n            type: string\n            minLength: 2\n            maxLength: 50\n            pattern: ^([A-Za-z]_?)+$\n    parameters:\n      - $ref: \"#/components/parameters/X-Amz-Content-Sha256\"\n      - $ref: \"#/components/parameters/X-Amz-Date\"\n      - $ref: \"#/components/parameters/X-Amz-Algorithm\"\n      - $ref: \"#/components/parameters/X-Amz-Credential\"\n      - $ref: \"#/components/parameters/X-Amz-Security-Token\"\n      - $ref: \"#/components/parameters/X-Amz-Signature\"\n      - $ref: \"#/components/parameters/X-Amz-SignedHeaders\"\n  \"/bots/{botName}/aliases/{name}\":\n    delete:\n      operationId: DeleteBotAlias\n      description: \u003cp\u003eDeletes an alias for the specified bot. \u003c/p\u003e \u003cp\u003eYou can't delete an\n        alias that is used in the association between a bot and a messaging\n        channel. If an alias is used in a channel association, the\n        \u003ccode\u003eDeleteBot\u003c/code\u003e operation returns a\n        \u003ccode\u003eResourceInUseException\u003c/code\u003e exception that includes a reference\n        to the channel association that refers to the bot. You can remove the\n        reference to the alias by deleting the channel association. If you get\n        the same exception again, delete the referring association until the\n        \u003ccode\u003eDeleteBotAlias\u003c/code\u003e operation is successful.\u003c/p\u003e\n      responses:\n        \"204\":\n          description: Success\n        \"480\":\n          description: NotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/NotFoundException\"\n        \"481\":\n          description: ConflictException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ConflictException\"\n        \"482\":\n          description: LimitExceededException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/LimitExceededException\"\n        \"483\":\n          description: InternalFailureException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InternalFailureException\"\n        \"484\":\n          description: BadRequestException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/BadRequestException\"\n        \"485\":\n          description: ResourceInUseException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ResourceInUseException\"\n      parameters:\n        - name: name\n          in: path\n          required: true\n          description: \"The name of the alias to delete. The name is case sensitive. \"\n          schema:\n            type: string\n            minLength: 1\n            maxLength: 100\n            pattern: ^([A-Za-z]_?)+$\n        - name: botName\n          in: path\n          required: true\n          description: The name of the bot that the alias points to.\n          schema:\n            type: string\n            minLength: 2\n            maxLength: 50\n            pattern: ^([A-Za-z]_?)+$\n    parameters:\n      - $ref: \"#/components/parameters/X-Amz-Content-Sha256\"\n      - $ref: \"#/components/parameters/X-Amz-Date\"\n      - $ref: \"#/components/parameters/X-Amz-Algorithm\"\n      - $ref: \"#/components/parameters/X-Amz-Credential\"\n      - $ref: \"#/components/parameters/X-Amz-Security-Token\"\n      - $ref: \"#/components/parameters/X-Amz-Signature\"\n      - $ref: \"#/components/parameters/X-Amz-SignedHeaders\"\n    get:\n      operationId: GetBotAlias\n      description: \u003cp\u003eReturns information about an Amazon Lex bot alias. For more\n        information about aliases, see \u003ca\u003eversioning-aliases\u003c/a\u003e.\u003c/p\u003e \u003cp\u003eThis\n        operation requires permissions for the \u003ccode\u003elex:GetBotAlias\u003c/code\u003e\n        action.\u003c/p\u003e\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/GetBotAliasResponse\"\n        \"480\":\n          description: NotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/NotFoundException\"\n        \"481\":\n          description: LimitExceededException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/LimitExceededException\"\n        \"482\":\n          description: InternalFailureException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InternalFailureException\"\n        \"483\":\n          description: BadRequestException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/BadRequestException\"\n      parameters:\n        - name: name\n          in: path\n          required: true\n          description: The name of the bot alias. The name is case sensitive.\n          schema:\n            type: string\n            minLength: 1\n            maxLength: 100\n            pattern: ^([A-Za-z]_?)+$\n        - name: botName\n          in: path\n          required: true\n          description: The name of the bot.\n          schema:\n            type: string\n            minLength: 2\n            maxLength: 50\n            pattern: ^([A-Za-z]_?)+$\n    put:\n      operationId: PutBotAlias\n      description: \u003cp\u003eCreates an alias for the specified version of the bot or replaces an\n        alias for the specified bot. To change the version of the bot that the\n        alias points to, replace the alias. For more information about aliases,\n        see \u003ca\u003eversioning-aliases\u003c/a\u003e.\u003c/p\u003e \u003cp\u003eThis operation requires\n        permissions for the \u003ccode\u003elex:PutBotAlias\u003c/code\u003e action. \u003c/p\u003e\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/PutBotAliasResponse\"\n        \"480\":\n          description: ConflictException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ConflictException\"\n        \"481\":\n          description: LimitExceededException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/LimitExceededException\"\n        \"482\":\n          description: InternalFailureException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InternalFailureException\"\n        \"483\":\n          description: BadRequestException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/BadRequestException\"\n        \"484\":\n          description: PreconditionFailedException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/PreconditionFailedException\"\n      parameters:\n        - name: name\n          in: path\n          required: true\n          description: The name of the alias. The name is \u003ci\u003enot\u003c/i\u003e case sensitive.\n          schema:\n            type: string\n            minLength: 1\n            maxLength: 100\n            pattern: ^([A-Za-z]_?)+$\n        - name: botName\n          in: path\n          required: true\n          description: The name of the bot.\n          schema:\n            type: string\n            minLength: 2\n            maxLength: 50\n            pattern: ^([A-Za-z]_?)+$\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              required:\n                - botVersion\n              properties:\n                description:\n                  description: A description of the alias.\n                  type: string\n                  minLength: 0\n                  maxLength: 200\n                botVersion:\n                  description: The version of the bot.\n                  type: string\n                  pattern: \\$LATEST|[0-9]+\n                  minLength: 1\n                  maxLength: 64\n                checksum:\n                  description: \u003cp\u003eIdentifies a specific revision of the\n                    \u003ccode\u003e$LATEST\u003c/code\u003e version.\u003c/p\u003e \u003cp\u003eWhen you create a new\n                    bot alias, leave the \u003ccode\u003echecksum\u003c/code\u003e field blank. If\n                    you specify a checksum you get a\n                    \u003ccode\u003eBadRequestException\u003c/code\u003e exception.\u003c/p\u003e \u003cp\u003eWhen you\n                    want to update a bot alias, set the \u003ccode\u003echecksum\u003c/code\u003e\n                    field to the checksum of the most recent revision of the\n                    \u003ccode\u003e$LATEST\u003c/code\u003e version. If you don't specify the\n                    \u003ccode\u003e checksum\u003c/code\u003e field, or if the checksum does not\n                    match the \u003ccode\u003e$LATEST\u003c/code\u003e version, you get a\n                    \u003ccode\u003ePreconditionFailedException\u003c/code\u003e exception.\u003c/p\u003e\n                  type: string\n        required: true\n  \"/bots/{botName}/aliases/{aliasName}/channels/{name}\":\n    delete:\n      operationId: DeleteBotChannelAssociation\n      description: \u003cp\u003eDeletes the association between an Amazon Lex bot and a messaging\n        platform.\u003c/p\u003e \u003cp\u003eThis operation requires permission for the\n        \u003ccode\u003elex:DeleteBotChannelAssociation\u003c/code\u003e action.\u003c/p\u003e\n      responses:\n        \"204\":\n          description: Success\n        \"480\":\n          description: NotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/NotFoundException\"\n        \"481\":\n          description: ConflictException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ConflictException\"\n        \"482\":\n          description: LimitExceededException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/LimitExceededException\"\n        \"483\":\n          description: InternalFailureException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InternalFailureException\"\n        \"484\":\n          description: BadRequestException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/BadRequestException\"\n      parameters:\n        - name: name\n          in: path\n          required: true\n          description: \"The name of the association. The name is case sensitive. \"\n          schema:\n            type: string\n            minLength: 1\n            maxLength: 100\n            pattern: ^([A-Za-z]_?)+$\n        - name: botName\n          in: path\n          required: true\n          description: The name of the Amazon Lex bot.\n          schema:\n            type: string\n            minLength: 2\n            maxLength: 50\n            pattern: ^([A-Za-z]_?)+$\n        - name: aliasName\n          in: path\n          required: true\n          description: An alias that points to the specific version of the Amazon Lex bot\n            to which this association is being made.\n          schema:\n            type: string\n            minLength: 1\n            maxLength: 100\n            pattern: ^([A-Za-z]_?)+$\n    parameters:\n      - $ref: \"#/components/parameters/X-Amz-Content-Sha256\"\n      - $ref: \"#/components/parameters/X-Amz-Date\"\n      - $ref: \"#/components/parameters/X-Amz-Algorithm\"\n      - $ref: \"#/components/parameters/X-Amz-Credential\"\n      - $ref: \"#/components/parameters/X-Amz-Security-Token\"\n      - $ref: \"#/components/parameters/X-Amz-Signature\"\n      - $ref: \"#/components/parameters/X-Amz-SignedHeaders\"\n    get:\n      operationId: GetBotChannelAssociation\n      description: \u003cp\u003eReturns information about the association between an Amazon Lex bot\n        and a messaging platform.\u003c/p\u003e \u003cp\u003eThis operation requires permissions for\n        the \u003ccode\u003elex:GetBotChannelAssociation\u003c/code\u003e action.\u003c/p\u003e\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/GetBotChannelAssociationResponse\"\n        \"480\":\n          description: NotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/NotFoundException\"\n        \"481\":\n          description: LimitExceededException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/LimitExceededException\"\n        \"482\":\n          description: InternalFailureException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InternalFailureException\"\n        \"483\":\n          description: BadRequestException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/BadRequestException\"\n      parameters:\n        - name: name\n          in: path\n          required: true\n          description: \"The name of the association between the bot and the channel. The\n            name is case sensitive. \"\n          schema:\n            type: string\n            minLength: 1\n            maxLength: 100\n            pattern: ^([A-Za-z]_?)+$\n        - name: botName\n          in: path\n          required: true\n          description: The name of the Amazon Lex bot.\n          schema:\n            type: string\n            minLength: 2\n            maxLength: 50\n            pattern: ^([A-Za-z]_?)+$\n        - name: aliasName\n          in: path\n          required: true\n          description: An alias pointing to the specific version of the Amazon Lex bot to\n            which this association is being made.\n          schema:\n            type: string\n            minLength: 1\n            maxLength: 100\n            pattern: ^([A-Za-z]_?)+$\n  \"/bots/{name}/versions/{version}\":\n    delete:\n      operationId: DeleteBotVersion\n      description: \u003cp\u003eDeletes a specific version of a bot. To delete all versions of a bot,\n        use the \u003ca\u003eDeleteBot\u003c/a\u003e operation. \u003c/p\u003e \u003cp\u003eThis operation requires\n        permissions for the \u003ccode\u003elex:DeleteBotVersion\u003c/code\u003e action.\u003c/p\u003e\n      responses:\n        \"204\":\n          description: Success\n        \"480\":\n          description: NotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/NotFoundException\"\n        \"481\":\n          description: ConflictException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ConflictException\"\n        \"482\":\n          description: LimitExceededException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/LimitExceededException\"\n        \"483\":\n          description: InternalFailureException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InternalFailureException\"\n        \"484\":\n          description: BadRequestException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/BadRequestException\"\n        \"485\":\n          description: ResourceInUseException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ResourceInUseException\"\n      parameters:\n        - name: name\n          in: path\n          required: true\n          description: The name of the bot.\n          schema:\n            type: string\n            minLength: 2\n            maxLength: 50\n            pattern: ^([A-Za-z]_?)+$\n        - name: version\n          in: path\n          required: true\n          description: The version of the bot to delete. You cannot delete the\n            \u003ccode\u003e$LATEST\u003c/code\u003e version of the bot. To delete the\n            \u003ccode\u003e$LATEST\u003c/code\u003e version, use the \u003ca\u003eDeleteBot\u003c/a\u003e operation.\n          schema:\n            type: string\n            minLength: 1\n            maxLength: 64\n            pattern: \"[0-9]+\"\n    parameters:\n      - $ref: \"#/components/parameters/X-Amz-Content-Sha256\"\n      - $ref: \"#/components/parameters/X-Amz-Date\"\n      - $ref: \"#/components/parameters/X-Amz-Algorithm\"\n      - $ref: \"#/components/parameters/X-Amz-Credential\"\n      - $ref: \"#/components/parameters/X-Amz-Security-Token\"\n      - $ref: \"#/components/parameters/X-Amz-Signature\"\n      - $ref: \"#/components/parameters/X-Amz-SignedHeaders\"\n  \"/intents/{name}\":\n    delete:\n      operationId: DeleteIntent\n      description: \u003cp\u003eDeletes all versions of the intent, including the\n        \u003ccode\u003e$LATEST\u003c/code\u003e version. To delete a specific version of the\n        intent, use the \u003ca\u003eDeleteIntentVersion\u003c/a\u003e operation.\u003c/p\u003e \u003cp\u003e You can\n        delete a version of an intent only if it is not referenced. To delete an\n        intent that is referred to in one or more bots (see\n        \u003ca\u003ehow-it-works\u003c/a\u003e), you must remove those references first. \u003c/p\u003e\n        \u003cnote\u003e \u003cp\u003e If you get the \u003ccode\u003eResourceInUseException\u003c/code\u003e exception,\n        it provides an example reference that shows where the intent is\n        referenced. To remove the reference to the intent, either update the bot\n        or delete it. If you get the same exception when you attempt to delete\n        the intent again, repeat until the intent has no references and the call\n        to \u003ccode\u003eDeleteIntent\u003c/code\u003e is successful. \u003c/p\u003e \u003c/note\u003e \u003cp\u003e This\n        operation requires permission for the \u003ccode\u003elex:DeleteIntent\u003c/code\u003e\n        action. \u003c/p\u003e\n      responses:\n        \"204\":\n          description: Success\n        \"480\":\n          description: NotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/NotFoundException\"\n        \"481\":\n          description: ConflictException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ConflictException\"\n        \"482\":\n          description: LimitExceededException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/LimitExceededException\"\n        \"483\":\n          description: InternalFailureException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InternalFailureException\"\n        \"484\":\n          description: BadRequestException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/BadRequestException\"\n        \"485\":\n          description: ResourceInUseException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ResourceInUseException\"\n      parameters:\n        - name: name\n          in: path\n          required: true\n          description: \"The name of the intent. The name is case sensitive. \"\n          schema:\n            type: string\n            minLength: 1\n            maxLength: 100\n            pattern: ^([A-Za-z]_?)+$\n    parameters:\n      - $ref: \"#/components/parameters/X-Amz-Content-Sha256\"\n      - $ref: \"#/components/parameters/X-Amz-Date\"\n      - $ref: \"#/components/parameters/X-Amz-Algorithm\"\n      - $ref: \"#/components/parameters/X-Amz-Credential\"\n      - $ref: \"#/components/parameters/X-Amz-Security-Token\"\n      - $ref: \"#/components/parameters/X-Amz-Signature\"\n      - $ref: \"#/components/parameters/X-Amz-SignedHeaders\"\n  \"/intents/{name}/versions/{version}\":\n    delete:\n      operationId: DeleteIntentVersion\n      description: \u003cp\u003eDeletes a specific version of an intent. To delete all versions of a\n        intent, use the \u003ca\u003eDeleteIntent\u003c/a\u003e operation. \u003c/p\u003e \u003cp\u003eThis operation\n        requires permissions for the \u003ccode\u003elex:DeleteIntentVersion\u003c/code\u003e\n        action.\u003c/p\u003e\n      responses:\n        \"204\":\n          description: Success\n        \"480\":\n          description: NotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/NotFoundException\"\n        \"481\":\n          description: ConflictException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ConflictException\"\n        \"482\":\n          description: LimitExceededException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/LimitExceededException\"\n        \"483\":\n          description: InternalFailureException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InternalFailureException\"\n        \"484\":\n          description: BadRequestException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/BadRequestException\"\n        \"485\":\n          description: ResourceInUseException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ResourceInUseException\"\n      parameters:\n        - name: name\n          in: path\n          required: true\n          description: The name of the intent.\n          schema:\n            type: string\n            minLength: 1\n            maxLength: 100\n            pattern: ^([A-Za-z]_?)+$\n        - name: version\n          in: path\n          required: true\n          description: The version of the intent to delete. You cannot delete the\n            \u003ccode\u003e$LATEST\u003c/code\u003e version of the intent. To delete the\n            \u003ccode\u003e$LATEST\u003c/code\u003e version, use the \u003ca\u003eDeleteIntent\u003c/a\u003e operation.\n          schema:\n            type: string\n            minLength: 1\n            maxLength: 64\n            pattern: \"[0-9]+\"\n    parameters:\n      - $ref: \"#/components/parameters/X-Amz-Content-Sha256\"\n      - $ref: \"#/components/parameters/X-Amz-Date\"\n      - $ref: \"#/components/parameters/X-Amz-Algorithm\"\n      - $ref: \"#/components/parameters/X-Amz-Credential\"\n      - $ref: \"#/components/parameters/X-Amz-Security-Token\"\n      - $ref: \"#/components/parameters/X-Amz-Signature\"\n      - $ref: \"#/components/parameters/X-Amz-SignedHeaders\"\n    get:\n      operationId: GetIntent\n      description: \u003cp\u003e Returns information about an intent. In addition to the intent name,\n        you must specify the intent version. \u003c/p\u003e \u003cp\u003e This operation requires\n        permissions to perform the \u003ccode\u003elex:GetIntent\u003c/code\u003e action. \u003c/p\u003e\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/GetIntentResponse\"\n        \"480\":\n          description: NotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/NotFoundException\"\n        \"481\":\n          description: LimitExceededException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/LimitExceededException\"\n        \"482\":\n          description: InternalFailureException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InternalFailureException\"\n        \"483\":\n          description: BadRequestException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/BadRequestException\"\n      parameters:\n        - name: name\n          in: path\n          required: true\n          description: \"The name of the intent. The name is case sensitive. \"\n          schema:\n            type: string\n            minLength: 1\n            maxLength: 100\n            pattern: ^([A-Za-z]_?)+$\n        - name: version\n          in: path\n          required: true\n          description: The version of the intent.\n          schema:\n            type: string\n            minLength: 1\n            maxLength: 64\n            pattern: \\$LATEST|[0-9]+\n  \"/slottypes/{name}\":\n    delete:\n      operationId: DeleteSlotType\n      description: \u003cp\u003eDeletes all versions of the slot type, including the\n        \u003ccode\u003e$LATEST\u003c/code\u003e version. To delete a specific version of the slot\n        type, use the \u003ca\u003eDeleteSlotTypeVersion\u003c/a\u003e operation.\u003c/p\u003e \u003cp\u003e You can\n        delete a version of a slot type only if it is not referenced. To delete\n        a slot type that is referred to in one or more intents, you must remove\n        those references first. \u003c/p\u003e \u003cnote\u003e \u003cp\u003e If you get the\n        \u003ccode\u003eResourceInUseException\u003c/code\u003e exception, the exception provides an\n        example reference that shows the intent where the slot type is\n        referenced. To remove the reference to the slot type, either update the\n        intent or delete it. If you get the same exception when you attempt to\n        delete the slot type again, repeat until the slot type has no references\n        and the \u003ccode\u003eDeleteSlotType\u003c/code\u003e call is successful. \u003c/p\u003e \u003c/note\u003e\n        \u003cp\u003eThis operation requires permission for the\n        \u003ccode\u003elex:DeleteSlotType\u003c/code\u003e action.\u003c/p\u003e\n      responses:\n        \"204\":\n          description: Success\n        \"480\":\n          description: NotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/NotFoundException\"\n        \"481\":\n          description: ConflictException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ConflictException\"\n        \"482\":\n          description: LimitExceededException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/LimitExceededException\"\n        \"483\":\n          description: InternalFailureException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InternalFailureException\"\n        \"484\":\n          description: BadRequestException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/BadRequestException\"\n        \"485\":\n          description: ResourceInUseException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ResourceInUseException\"\n      parameters:\n        - name: name\n          in: path\n          required: true\n          description: \"The name of the slot type. The name is case sensitive. \"\n          schema:\n            type: string\n            minLength: 1\n            maxLength: 100\n            pattern: ^([A-Za-z]_?)+$\n    parameters:\n      - $ref: \"#/components/parameters/X-Amz-Content-Sha256\"\n      - $ref: \"#/components/parameters/X-Amz-Date\"\n      - $ref: \"#/components/parameters/X-Amz-Algorithm\"\n      - $ref: \"#/components/parameters/X-Amz-Credential\"\n      - $ref: \"#/components/parameters/X-Amz-Security-Token\"\n      - $ref: \"#/components/parameters/X-Amz-Signature\"\n      - $ref: \"#/components/parameters/X-Amz-SignedHeaders\"\n  \"/slottypes/{name}/version/{version}\":\n    delete:\n      operationId: DeleteSlotTypeVersion\n      description: \u003cp\u003eDeletes a specific version of a slot type. To delete all versions of\n        a slot type, use the \u003ca\u003eDeleteSlotType\u003c/a\u003e operation. \u003c/p\u003e \u003cp\u003eThis\n        operation requires permissions for the\n        \u003ccode\u003elex:DeleteSlotTypeVersion\u003c/code\u003e action.\u003c/p\u003e\n      responses:\n        \"204\":\n          description: Success\n        \"480\":\n          description: NotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/NotFoundException\"\n        \"481\":\n          description: ConflictException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ConflictException\"\n        \"482\":\n          description: LimitExceededException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/LimitExceededException\"\n        \"483\":\n          description: InternalFailureException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InternalFailureException\"\n        \"484\":\n          description: BadRequestException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/BadRequestException\"\n        \"485\":\n          description: ResourceInUseException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ResourceInUseException\"\n      parameters:\n        - name: name\n          in: path\n          required: true\n          description: The name of the slot type.\n          schema:\n            type: string\n            minLength: 1\n            maxLength: 100\n            pattern: ^([A-Za-z]_?)+$\n        - name: version\n          in: path\n          required: true\n          description: The version of the slot type to delete. You cannot delete the\n            \u003ccode\u003e$LATEST\u003c/code\u003e version of the slot type. To delete the\n            \u003ccode\u003e$LATEST\u003c/code\u003e version, use the \u003ca\u003eDeleteSlotType\u003c/a\u003e\n            operation.\n          schema:\n            type: string\n            minLength: 1\n            maxLength: 64\n            pattern: \"[0-9]+\"\n    parameters:\n      - $ref: \"#/components/parameters/X-Amz-Content-Sha256\"\n      - $ref: \"#/components/parameters/X-Amz-Date\"\n      - $ref: \"#/components/parameters/X-Amz-Algorithm\"\n      - $ref: \"#/components/parameters/X-Amz-Credential\"\n      - $ref: \"#/components/parameters/X-Amz-Security-Token\"\n      - $ref: \"#/components/parameters/X-Amz-Signature\"\n      - $ref: \"#/components/parameters/X-Amz-SignedHeaders\"\n  \"/bots/{botName}/utterances/{userId}\":\n    delete:\n      operationId: DeleteUtterances\n      description: \u003cp\u003eDeletes stored utterances.\u003c/p\u003e \u003cp\u003eAmazon Lex stores the utterances\n        that users send to your bot. Utterances are stored for 15 days for use\n        with the \u003ca\u003eGetUtterancesView\u003c/a\u003e operation, and then stored\n        indefinitely for use in improving the ability of your bot to respond to\n        user input.\u003c/p\u003e \u003cp\u003eUse the \u003ccode\u003eDeleteStoredUtterances\u003c/code\u003e operation\n        to manually delete stored utterances for a specific user.\u003c/p\u003e \u003cp\u003eThis\n        operation requires permissions for the \u003ccode\u003elex:DeleteUtterances\u003c/code\u003e\n        action.\u003c/p\u003e\n      responses:\n        \"204\":\n          description: Success\n        \"480\":\n          description: NotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/NotFoundException\"\n        \"481\":\n          description: LimitExceededException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/LimitExceededException\"\n        \"482\":\n          description: InternalFailureException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InternalFailureException\"\n        \"483\":\n          description: BadRequestException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/BadRequestException\"\n      parameters:\n        - name: botName\n          in: path\n          required: true\n          description: The name of the bot that stored the utterances.\n          schema:\n            type: string\n            minLength: 2\n            maxLength: 50\n            pattern: ^([A-Za-z]_?)+$\n        - name: userId\n          in: path\n          required: true\n          description: ' The unique identifier for the user that made the utterances. This\n            is the user ID that was sent in the \u003ca\n            href=\"http://docs.aws.amazon.com/lex/latest/dg/API_runtime_PostContent.html\"\u003ePostContent\u003c/a\u003e\n            or \u003ca\n            href=\"http://docs.aws.amazon.com/lex/latest/dg/API_runtime_PostText.html\"\u003ePostText\u003c/a\u003e\n            operation request that contained the utterance.'\n          schema:\n            type: string\n            minLength: 2\n            maxLength: 100\n    parameters:\n      - $ref: \"#/components/parameters/X-Amz-Content-Sha256\"\n      - $ref: \"#/components/parameters/X-Amz-Date\"\n      - $ref: \"#/components/parameters/X-Amz-Algorithm\"\n      - $ref: \"#/components/parameters/X-Amz-Credential\"\n      - $ref: \"#/components/parameters/X-Amz-Security-Token\"\n      - $ref: \"#/components/parameters/X-Amz-Signature\"\n      - $ref: \"#/components/parameters/X-Amz-SignedHeaders\"\n  \"/bots/{name}/versions/{versionoralias}\":\n    get:\n      operationId: GetBot\n      description: \u003cp\u003eReturns metadata information for a specific bot. You must provide the\n        bot name and the bot version or alias. \u003c/p\u003e \u003cp\u003e This operation requires\n        permissions for the \u003ccode\u003elex:GetBot\u003c/code\u003e action. \u003c/p\u003e\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/GetBotResponse\"\n        \"480\":\n          description: NotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/NotFoundException\"\n        \"481\":\n          description: LimitExceededException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/LimitExceededException\"\n        \"482\":\n          description: InternalFailureException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InternalFailureException\"\n        \"483\":\n          description: BadRequestException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/BadRequestException\"\n      parameters:\n        - name: name\n          in: path\n          required: true\n          description: \"The name of the bot. The name is case sensitive. \"\n          schema:\n            type: string\n            minLength: 2\n            maxLength: 50\n            pattern: ^([A-Za-z]_?)+$\n        - name: versionoralias\n          in: path\n          required: true\n          description: The version or alias of the bot.\n          schema:\n            type: string\n    parameters:\n      - $ref: \"#/components/parameters/X-Amz-Content-Sha256\"\n      - $ref: \"#/components/parameters/X-Amz-Date\"\n      - $ref: \"#/components/parameters/X-Amz-Algorithm\"\n      - $ref: \"#/components/parameters/X-Amz-Credential\"\n      - $ref: \"#/components/parameters/X-Amz-Security-Token\"\n      - $ref: \"#/components/parameters/X-Amz-Signature\"\n      - $ref: \"#/components/parameters/X-Amz-SignedHeaders\"\n  \"/bots/{botName}/aliases/\":\n    get:\n      operationId: GetBotAliases\n      description: \u003cp\u003eReturns a list of aliases for a specified Amazon Lex bot.\u003c/p\u003e \u003cp\u003eThis\n        operation requires permissions for the \u003ccode\u003elex:GetBotAliases\u003c/code\u003e\n        action.\u003c/p\u003e\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/GetBotAliasesResponse\"\n        \"480\":\n          description: LimitExceededException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/LimitExceededException\"\n        \"481\":\n          description: InternalFailureException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InternalFailureException\"\n        \"482\":\n          description: BadRequestException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/BadRequestException\"\n      parameters:\n        - name: botName\n          in: path\n          required: true\n          description: The name of the bot.\n          schema:\n            type: string\n            minLength: 2\n            maxLength: 50\n            pattern: ^([A-Za-z]_?)+$\n        - name: nextToken\n          in: query\n          required: false\n          description: \"A pagination token for fetching the next page of aliases. If the\n            response to this call is truncated, Amazon Lex returns a pagination\n            token in the response. To fetch the next page of aliases, specify\n            the pagination token in the next request. \"\n          schema:\n            type: string\n        - name: maxResults\n          in: query\n          required: false\n          description: \"The maximum number of aliases to return in the response. The\n            default is 50. . \"\n          schema:\n            type: integer\n            minimum: 1\n            maximum: 50\n        - name: nameContains\n          in: query\n          required: false\n          description: Substring to match in bot alias names. An alias will be returned if\n            any part of its name matches the substring. For example, \"xyz\"\n            matches both \"xyzabc\" and \"abcxyz.\"\n          schema:\n            type: string\n            minLength: 1\n            maxLength: 100\n            pattern: ^([A-Za-z]_?)+$\n    parameters:\n      - $ref: \"#/components/parameters/X-Amz-Content-Sha256\"\n      - $ref: \"#/components/parameters/X-Amz-Date\"\n      - $ref: \"#/components/parameters/X-Amz-Algorithm\"\n      - $ref: \"#/components/parameters/X-Amz-Credential\"\n      - $ref: \"#/components/parameters/X-Amz-Security-Token\"\n      - $ref: \"#/components/parameters/X-Amz-Signature\"\n      - $ref: \"#/components/parameters/X-Amz-SignedHeaders\"\n  \"/bots/{botName}/aliases/{aliasName}/channels/\":\n    get:\n      operationId: GetBotChannelAssociations\n      description: \u003cp\u003e Returns a list of all of the channels associated with the specified\n        bot. \u003c/p\u003e \u003cp\u003eThe \u003ccode\u003eGetBotChannelAssociations\u003c/code\u003e operation\n        requires permissions for the \u003ccode\u003elex:GetBotChannelAssociations\u003c/code\u003e\n        action.\u003c/p\u003e\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/GetBotChannelAssociationsResponse\"\n        \"480\":\n          description: LimitExceededException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/LimitExceededException\"\n        \"481\":\n          description: InternalFailureException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InternalFailureException\"\n        \"482\":\n          description: BadRequestException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/BadRequestException\"\n      parameters:\n        - name: botName\n          in: path\n          required: true\n          description: The name of the Amazon Lex bot in the association.\n          schema:\n            type: string\n            minLength: 2\n            maxLength: 50\n            pattern: ^([A-Za-z]_?)+$\n        - name: aliasName\n          in: path\n          required: true\n          description: An alias pointing to the specific version of the Amazon Lex bot to\n            which this association is being made.\n          schema:\n            type: string\n            minLength: 1\n            maxLength: 100\n            pattern: ^(-|^([A-Za-z]_?)+$)$\n        - name: nextToken\n          in: query\n          required: false\n          description: \"A pagination token for fetching the next page of associations. If\n            the response to this call is truncated, Amazon Lex returns a\n            pagination token in the response. To fetch the next page of\n            associations, specify the pagination token in the next request. \"\n          schema:\n            type: string\n        - name: maxResults\n          in: query\n          required: false\n          description: \"The maximum number of associations to return in the response. The\n            default is 50. \"\n          schema:\n            type: integer\n            minimum: 1\n            maximum: 50\n        - name: nameContains\n          in: query\n          required: false\n          description: Substring to match in channel association names. An association will\n            be returned if any part of its name matches the substring. For\n            example, \"xyz\" matches both \"xyzabc\" and \"abcxyz.\" To return all bot\n            channel associations, use a hyphen (\"-\") as the\n            \u003ccode\u003enameContains\u003c/code\u003e parameter.\n          schema:\n            type: string\n            minLength: 1\n            maxLength: 100\n            pattern: ^([A-Za-z]_?)+$\n    parameters:\n      - $ref: \"#/components/parameters/X-Amz-Content-Sha256\"\n      - $ref: \"#/components/parameters/X-Amz-Date\"\n      - $ref: \"#/components/parameters/X-Amz-Algorithm\"\n      - $ref: \"#/components/parameters/X-Amz-Credential\"\n      - $ref: \"#/components/parameters/X-Amz-Security-Token\"\n      - $ref: \"#/components/parameters/X-Amz-Signature\"\n      - $ref: \"#/components/parameters/X-Amz-SignedHeaders\"\n  \"/bots/{name}/versions/\":\n    get:\n      operationId: GetBotVersions\n      description: \u003cp\u003eGets information about all of the versions of a bot.\u003c/p\u003e \u003cp\u003eThe\n        \u003ccode\u003eGetBotVersions\u003c/code\u003e operation returns a \u003ccode\u003eBotMetadata\u003c/code\u003e\n        object for each version of a bot. For example, if a bot has three\n        numbered versions, the \u003ccode\u003eGetBotVersions\u003c/code\u003e operation returns\n        four \u003ccode\u003eBotMetadata\u003c/code\u003e objects in the response, one for each\n        numbered version and one for the \u003ccode\u003e$LATEST\u003c/code\u003e version. \u003c/p\u003e\n        \u003cp\u003eThe \u003ccode\u003eGetBotVersions\u003c/code\u003e operation always returns at least one\n        version, the \u003ccode\u003e$LATEST\u003c/code\u003e version.\u003c/p\u003e \u003cp\u003eThis operation\n        requires permissions for the \u003ccode\u003elex:GetBotVersions\u003c/code\u003e action.\u003c/p\u003e\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/GetBotVersionsResponse\"\n        \"480\":\n          description: NotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/NotFoundException\"\n        \"481\":\n          description: LimitExceededException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/LimitExceededException\"\n        \"482\":\n          description: InternalFailureException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InternalFailureException\"\n        \"483\":\n          description: BadRequestException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/BadRequestException\"\n      parameters:\n        - name: name\n          in: path\n          required: true\n          description: The name of the bot for which versions should be returned.\n          schema:\n            type: string\n            minLength: 2\n            maxLength: 50\n            pattern: ^([A-Za-z]_?)+$\n        - name: nextToken\n          in: query\n          required: false\n          description: \"A pagination token for fetching the next page of bot versions. If\n            the response to this call is truncated, Amazon Lex returns a\n            pagination token in the response. To fetch the next page of\n            versions, specify the pagination token in the next request. \"\n          schema:\n            type: string\n        - name: maxResults\n          in: query\n          required: false\n          description: The maximum number of bot versions to return in the response. The\n            default is 10.\n          schema:\n            type: integer\n            minimum: 1\n            maximum: 50\n    parameters:\n      - $ref: \"#/components/parameters/X-Amz-Content-Sha256\"\n      - $ref: \"#/components/parameters/X-Amz-Date\"\n      - $ref: \"#/components/parameters/X-Amz-Algorithm\"\n      - $ref: \"#/components/parameters/X-Amz-Credential\"\n      - $ref: \"#/components/parameters/X-Amz-Security-Token\"\n      - $ref: \"#/components/parameters/X-Amz-Signature\"\n      - $ref: \"#/components/parameters/X-Amz-SignedHeaders\"\n  /bots/:\n    get:\n      operationId: GetBots\n      description: \"\u003cp\u003eReturns bot information as follows: \u003c/p\u003e \u003cul\u003e \u003cli\u003e \u003cp\u003eIf you provide\n        the \u003ccode\u003enameContains\u003c/code\u003e field, the response includes information\n        for the \u003ccode\u003e$LATEST\u003c/code\u003e version of all bots whose name contains the\n        specified string.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003eIf you don't specify the\n        \u003ccode\u003enameContains\u003c/code\u003e field, the operation returns information about\n        the \u003ccode\u003e$LATEST\u003c/code\u003e version of all of your bots.\u003c/p\u003e \u003c/li\u003e \u003c/ul\u003e\n        \u003cp\u003eThis operation requires permission for the \u003ccode\u003elex:GetBots\u003c/code\u003e\n        action.\u003c/p\u003e\"\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/GetBotsResponse\"\n        \"480\":\n          description: NotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/NotFoundException\"\n        \"481\":\n          description: LimitExceededException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/LimitExceededException\"\n        \"482\":\n          description: InternalFailureException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InternalFailureException\"\n        \"483\":\n          description: BadRequestException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/BadRequestException\"\n      parameters:\n        - name: nextToken\n          in: query\n          required: false\n          description: \"A pagination token that fetches the next page of bots. If the\n            response to this call is truncated, Amazon Lex returns a pagination\n            token in the response. To fetch the next page of bots, specify the\n            pagination token in the next request. \"\n          schema:\n            type: string\n        - name: maxResults\n          in: query\n          required: false\n          description: The maximum number of bots to return in the response that the\n            request will return. The default is 10.\n          schema:\n            type: integer\n            minimum: 1\n            maximum: 50\n        - name: nameContains\n          in: query\n          required: false\n          description: Substring to match in bot names. A bot will be returned if any part\n            of its name matches the substring. For example, \"xyz\" matches both\n            \"xyzabc\" and \"abcxyz.\"\n          schema:\n            type: string\n            minLength: 2\n            maxLength: 50\n            pattern: ^([A-Za-z]_?)+$\n    parameters:\n      - $ref: \"#/components/parameters/X-Amz-Content-Sha256\"\n      - $ref: \"#/components/parameters/X-Amz-Date\"\n      - $ref: \"#/components/parameters/X-Amz-Algorithm\"\n      - $ref: \"#/components/parameters/X-Amz-Credential\"\n      - $ref: \"#/components/parameters/X-Amz-Security-Token\"\n      - $ref: \"#/components/parameters/X-Amz-Signature\"\n      - $ref: \"#/components/parameters/X-Amz-SignedHeaders\"\n  \"/builtins/intents/{signature}\":\n    get:\n      operationId: GetBuiltinIntent\n      description: \u003cp\u003eReturns information about a built-in intent.\u003c/p\u003e \u003cp\u003eThis operation\n        requires permission for the \u003ccode\u003elex:GetBuiltinIntent\u003c/code\u003e\n        action.\u003c/p\u003e\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/GetBuiltinIntentResponse\"\n        \"480\":\n          description: NotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/NotFoundException\"\n        \"481\":\n          description: LimitExceededException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/LimitExceededException\"\n        \"482\":\n          description: InternalFailureException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InternalFailureException\"\n        \"483\":\n          description: BadRequestException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/BadRequestException\"\n      parameters:\n        - name: signature\n          in: path\n          required: true\n          description: The unique identifier for a built-in intent. To find the signature\n            for an intent, see \u003ca\n            href=\"https://developer.amazon.com/public/solutions/alexa/alexa-skills-kit/docs/built-in-intent-ref/standard-intents\"\u003eStandard\n            Built-in Intents\u003c/a\u003e in the \u003ci\u003eAlexa Skills Kit\u003c/i\u003e.\n          schema:\n            type: string\n    parameters:\n      - $ref: \"#/components/parameters/X-Amz-Content-Sha256\"\n      - $ref: \"#/components/parameters/X-Amz-Date\"\n      - $ref: \"#/components/parameters/X-Amz-Algorithm\"\n      - $ref: \"#/components/parameters/X-Amz-Credential\"\n      - $ref: \"#/components/parameters/X-Amz-Security-Token\"\n      - $ref: \"#/components/parameters/X-Amz-Signature\"\n      - $ref: \"#/components/parameters/X-Amz-SignedHeaders\"\n  /builtins/intents/:\n    get:\n      operationId: GetBuiltinIntents\n      description: \u003cp\u003eGets a list of built-in intents that meet the specified criteria.\u003c/p\u003e\n        \u003cp\u003eThis operation requires permission for the\n        \u003ccode\u003elex:GetBuiltinIntents\u003c/code\u003e action.\u003c/p\u003e\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/GetBuiltinIntentsResponse\"\n        \"480\":\n          description: LimitExceededException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/LimitExceededException\"\n        \"481\":\n          description: InternalFailureException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InternalFailureException\"\n        \"482\":\n          description: BadRequestException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/BadRequestException\"\n      parameters:\n        - name: locale\n          in: query\n          required: false\n          description: A list of locales that the intent supports.\n          schema:\n            type: string\n            enum:\n              - en-US\n              - en-GB\n              - de-DE\n        - name: signatureContains\n          in: query\n          required: false\n          description: Substring to match in built-in intent signatures. An intent will be\n            returned if any part of its signature matches the substring. For\n            example, \"xyz\" matches both \"xyzabc\" and \"abcxyz.\" To find the\n            signature for an intent, see \u003ca\n            href=\"https://developer.amazon.com/public/solutions/alexa/alexa-skills-kit/docs/built-in-intent-ref/standard-intents\"\u003eStandard\n            Built-in Intents\u003c/a\u003e in the \u003ci\u003eAlexa Skills Kit\u003c/i\u003e.\n          schema:\n            type: string\n        - name: nextToken\n          in: query\n          required: false\n          description: A pagination token that fetches the next page of intents. If this\n            API call is truncated, Amazon Lex returns a pagination token in the\n            response. To fetch the next page of intents, use the pagination\n            token in the next request.\n          schema:\n            type: string\n        - name: maxResults\n          in: query\n          required: false\n          description: The maximum number of intents to return in the response. The default\n            is 10.\n          schema:\n            type: integer\n            minimum: 1\n            maximum: 50\n    parameters:\n      - $ref: \"#/components/parameters/X-Amz-Content-Sha256\"\n      - $ref: \"#/components/parameters/X-Amz-Date\"\n      - $ref: \"#/components/parameters/X-Amz-Algorithm\"\n      - $ref: \"#/components/parameters/X-Amz-Credential\"\n      - $ref: \"#/components/parameters/X-Amz-Security-Token\"\n      - $ref: \"#/components/parameters/X-Amz-Signature\"\n      - $ref: \"#/components/parameters/X-Amz-SignedHeaders\"\n  /builtins/slottypes/:\n    get:\n      operationId: GetBuiltinSlotTypes\n      description: \u003cp\u003eGets a list of built-in slot types that meet the specified\n        criteria.\u003c/p\u003e \u003cp\u003eFor a list of built-in slot types, see \u003ca\n        href=\"https://developer.amazon.com/public/solutions/alexa/alexa-skills-kit/docs/built-in-intent-ref/slot-type-reference\"\u003eSlot\n        Type Reference\u003c/a\u003e in the \u003ci\u003eAlexa Skills Kit\u003c/i\u003e.\u003c/p\u003e \u003cp\u003eThis operation\n        requires permission for the \u003ccode\u003elex:GetBuiltInSlotTypes\u003c/code\u003e\n        action.\u003c/p\u003e\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/GetBuiltinSlotTypesResponse\"\n        \"480\":\n          description: LimitExceededException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/LimitExceededException\"\n        \"481\":\n          description: InternalFailureException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InternalFailureException\"\n        \"482\":\n          description: BadRequestException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/BadRequestException\"\n      parameters:\n        - name: locale\n          in: query\n          required: false\n          description: A list of locales that the slot type supports.\n          schema:\n            type: string\n            enum:\n              - en-US\n              - en-GB\n              - de-DE\n        - name: signatureContains\n          in: query\n          required: false\n          description: Substring to match in built-in slot type signatures. A slot type\n            will be returned if any part of its signature matches the substring.\n            For example, \"xyz\" matches both \"xyzabc\" and \"abcxyz.\"\n          schema:\n            type: string\n        - name: nextToken\n          in: query\n          required: false\n          description: A pagination token that fetches the next page of slot types. If the\n            response to this API call is truncated, Amazon Lex returns a\n            pagination token in the response. To fetch the next page of slot\n            types, specify the pagination token in the next request.\n          schema:\n            type: string\n        - name: maxResults\n          in: query\n          required: false\n          description: The maximum number of slot types to return in the response. The\n            default is 10.\n          schema:\n            type: integer\n            minimum: 1\n            maximum: 50\n    parameters:\n      - $ref: \"#/components/parameters/X-Amz-Content-Sha256\"\n      - $ref: \"#/components/parameters/X-Amz-Date\"\n      - $ref: \"#/components/parameters/X-Amz-Algorithm\"\n      - $ref: \"#/components/parameters/X-Amz-Credential\"\n      - $ref: \"#/components/parameters/X-Amz-Security-Token\"\n      - $ref: \"#/components/parameters/X-Amz-Signature\"\n      - $ref: \"#/components/parameters/X-Amz-SignedHeaders\"\n  /exports/#name\u0026version\u0026resourceType\u0026exportType:\n    get:\n      operationId: GetExport\n      description: \"Exports the contents of a Amazon Lex resource in a specified format. \"\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/GetExportResponse\"\n        \"480\":\n          description: NotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/NotFoundException\"\n        \"481\":\n          description: LimitExceededException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/LimitExceededException\"\n        \"482\":\n          description: InternalFailureException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InternalFailureException\"\n        \"483\":\n          description: BadRequestException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/BadRequestException\"\n      parameters:\n        - name: name\n          in: query\n          required: true\n          description: The name of the bot to export.\n          schema:\n            type: string\n            minLength: 1\n            maxLength: 100\n            pattern: \"[a-zA-Z_]+\"\n        - name: version\n          in: query\n          required: true\n          description: The version of the bot to export.\n          schema:\n            type: string\n            minLength: 1\n            maxLength: 64\n            pattern: \"[0-9]+\"\n        - name: resourceType\n          in: query\n          required: true\n          description: \"The type of resource to export. \"\n          schema:\n            type: string\n            enum:\n              - BOT\n              - INTENT\n              - SLOT_TYPE\n        - name: exportType\n          in: query\n          required: true\n          description: The format of the exported data.\n          schema:\n            type: string\n            enum:\n              - ALEXA_SKILLS_KIT\n              - LEX\n    parameters:\n      - $ref: \"#/components/parameters/X-Amz-Content-Sha256\"\n      - $ref: \"#/components/parameters/X-Amz-Date\"\n      - $ref: \"#/components/parameters/X-Amz-Algorithm\"\n      - $ref: \"#/components/parameters/X-Amz-Credential\"\n      - $ref: \"#/components/parameters/X-Amz-Security-Token\"\n      - $ref: \"#/components/parameters/X-Amz-Signature\"\n      - $ref: \"#/components/parameters/X-Amz-SignedHeaders\"\n  \"/imports/{importId}\":\n    get:\n      operationId: GetImport\n      description: Gets information about an import job started with the\n        \u003ccode\u003eStartImport\u003c/code\u003e operation.\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/GetImportResponse\"\n        \"480\":\n          description: NotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/NotFoundException\"\n        \"481\":\n          description: LimitExceededException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/LimitExceededException\"\n        \"482\":\n          description: InternalFailureException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InternalFailureException\"\n        \"483\":\n          description: BadRequestException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/BadRequestException\"\n      parameters:\n        - name: importId\n          in: path\n          required: true\n          description: The identifier of the import job information to return.\n          schema:\n            type: string\n    parameters:\n      - $ref: \"#/components/parameters/X-Amz-Content-Sha256\"\n      - $ref: \"#/components/parameters/X-Amz-Date\"\n      - $ref: \"#/components/parameters/X-Amz-Algorithm\"\n      - $ref: \"#/components/parameters/X-Amz-Credential\"\n      - $ref: \"#/components/parameters/X-Amz-Security-Token\"\n      - $ref: \"#/components/parameters/X-Amz-Signature\"\n      - $ref: \"#/components/parameters/X-Amz-SignedHeaders\"\n  \"/intents/{name}/versions/\":\n    get:\n      operationId: GetIntentVersions\n      description: \u003cp\u003eGets information about all of the versions of an intent.\u003c/p\u003e \u003cp\u003eThe\n        \u003ccode\u003eGetIntentVersions\u003c/code\u003e operation returns an\n        \u003ccode\u003eIntentMetadata\u003c/code\u003e object for each version of an intent. For\n        example, if an intent has three numbered versions, the\n        \u003ccode\u003eGetIntentVersions\u003c/code\u003e operation returns four\n        \u003ccode\u003eIntentMetadata\u003c/code\u003e objects in the response, one for each\n        numbered version and one for the \u003ccode\u003e$LATEST\u003c/code\u003e version. \u003c/p\u003e\n        \u003cp\u003eThe \u003ccode\u003eGetIntentVersions\u003c/code\u003e operation always returns at least\n        one version, the \u003ccode\u003e$LATEST\u003c/code\u003e version.\u003c/p\u003e \u003cp\u003eThis operation\n        requires permissions for the \u003ccode\u003elex:GetIntentVersions\u003c/code\u003e\n        action.\u003c/p\u003e\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/GetIntentVersionsResponse\"\n        \"480\":\n          description: NotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/NotFoundException\"\n        \"481\":\n          description: LimitExceededException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/LimitExceededException\"\n        \"482\":\n          description: InternalFailureException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InternalFailureException\"\n        \"483\":\n          description: BadRequestException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/BadRequestException\"\n      parameters:\n        - name: name\n          in: path\n          required: true\n          description: The name of the intent for which versions should be returned.\n          schema:\n            type: string\n            minLength: 1\n            maxLength: 100\n            pattern: ^([A-Za-z]_?)+$\n        - name: nextToken\n          in: query\n          required: false\n          description: \"A pagination token for fetching the next page of intent versions.\n            If the response to this call is truncated, Amazon Lex returns a\n            pagination token in the response. To fetch the next page of\n            versions, specify the pagination token in the next request. \"\n          schema:\n            type: string\n        - name: maxResults\n          in: query\n          required: false\n          description: The maximum number of intent versions to return in the response. The\n            default is 10.\n          schema:\n            type: integer\n            minimum: 1\n            maximum: 50\n    parameters:\n      - $ref: \"#/components/parameters/X-Amz-Content-Sha256\"\n      - $ref: \"#/components/parameters/X-Amz-Date\"\n      - $ref: \"#/components/parameters/X-Amz-Algorithm\"\n      - $ref: \"#/components/parameters/X-Amz-Credential\"\n      - $ref: \"#/components/parameters/X-Amz-Security-Token\"\n      - $ref: \"#/components/parameters/X-Amz-Signature\"\n      - $ref: \"#/components/parameters/X-Amz-SignedHeaders\"\n  /intents/:\n    get:\n      operationId: GetIntents\n      description: \"\u003cp\u003eReturns intent information as follows: \u003c/p\u003e \u003cul\u003e \u003cli\u003e \u003cp\u003eIf you\n        specify the \u003ccode\u003enameContains\u003c/code\u003e field, returns the\n        \u003ccode\u003e$LATEST\u003c/code\u003e version of all intents that contain the specified\n        string.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e If you don't specify the\n        \u003ccode\u003enameContains\u003c/code\u003e field, returns information about the\n        \u003ccode\u003e$LATEST\u003c/code\u003e version of all intents. \u003c/p\u003e \u003c/li\u003e \u003c/ul\u003e \u003cp\u003e The\n        operation requires permission for the \u003ccode\u003elex:GetIntents\u003c/code\u003e\n        action. \u003c/p\u003e\"\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/GetIntentsResponse\"\n        \"480\":\n          description: NotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/NotFoundException\"\n        \"481\":\n          description: LimitExceededException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/LimitExceededException\"\n        \"482\":\n          description: InternalFailureException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InternalFailureException\"\n        \"483\":\n          description: BadRequestException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/BadRequestException\"\n      parameters:\n        - name: nextToken\n          in: query\n          required: false\n          description: \"A pagination token that fetches the next page of intents. If the\n            response to this API call is truncated, Amazon Lex returns a\n            pagination token in the response. To fetch the next page of intents,\n            specify the pagination token in the next request. \"\n          schema:\n            type: string\n        - name: maxResults\n          in: query\n          required: false\n          description: The maximum number of intents to return in the response. The default\n            is 10.\n          schema:\n            type: integer\n            minimum: 1\n            maximum: 50\n        - name: nameContains\n          in: query\n          required: false\n          description: Substring to match in intent names. An intent will be returned if\n            any part of its name matches the substring. For example, \"xyz\"\n            matches both \"xyzabc\" and \"abcxyz.\"\n          schema:\n            type: string\n            minLength: 1\n            maxLength: 100\n            pattern: ^([A-Za-z]_?)+$\n    parameters:\n      - $ref: \"#/components/parameters/X-Amz-Content-Sha256\"\n      - $ref: \"#/components/parameters/X-Amz-Date\"\n      - $ref: \"#/components/parameters/X-Amz-Algorithm\"\n      - $ref: \"#/components/parameters/X-Amz-Credential\"\n      - $ref: \"#/components/parameters/X-Amz-Security-Token\"\n      - $ref: \"#/components/parameters/X-Amz-Signature\"\n      - $ref: \"#/components/parameters/X-Amz-SignedHeaders\"\n  \"/slottypes/{name}/versions/{version}\":\n    get:\n      operationId: GetSlotType\n      description: \u003cp\u003eReturns information about a specific version of a slot type. In\n        addition to specifying the slot type name, you must specify the slot\n        type version.\u003c/p\u003e \u003cp\u003eThis operation requires permissions for the\n        \u003ccode\u003elex:GetSlotType\u003c/code\u003e action.\u003c/p\u003e\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/GetSlotTypeResponse\"\n        \"480\":\n          description: NotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/NotFoundException\"\n        \"481\":\n          description: LimitExceededException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/LimitExceededException\"\n        \"482\":\n          description: InternalFailureException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InternalFailureException\"\n        \"483\":\n          description: BadRequestException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/BadRequestException\"\n      parameters:\n        - name: name\n          in: path\n          required: true\n          description: \"The name of the slot type. The name is case sensitive. \"\n          schema:\n            type: string\n            minLength: 1\n            maxLength: 100\n            pattern: ^([A-Za-z]_?)+$\n        - name: version\n          in: path\n          required: true\n          description: \"The version of the slot type. \"\n          schema:\n            type: string\n            minLength: 1\n            maxLength: 64\n            pattern: \\$LATEST|[0-9]+\n    parameters:\n      - $ref: \"#/components/parameters/X-Amz-Content-Sha256\"\n      - $ref: \"#/components/parameters/X-Amz-Date\"\n      - $ref: \"#/components/parameters/X-Amz-Algorithm\"\n      - $ref: \"#/components/parameters/X-Amz-Credential\"\n      - $ref: \"#/components/parameters/X-Amz-Security-Token\"\n      - $ref: \"#/components/parameters/X-Amz-Signature\"\n      - $ref: \"#/components/parameters/X-Amz-SignedHeaders\"\n  \"/slottypes/{name}/versions/\":\n    get:\n      operationId: GetSlotTypeVersions\n      description: \u003cp\u003eGets information about all versions of a slot type.\u003c/p\u003e \u003cp\u003eThe\n        \u003ccode\u003eGetSlotTypeVersions\u003c/code\u003e operation returns a\n        \u003ccode\u003eSlotTypeMetadata\u003c/code\u003e object for each version of a slot type.\n        For example, if a slot type has three numbered versions, the\n        \u003ccode\u003eGetSlotTypeVersions\u003c/code\u003e operation returns four\n        \u003ccode\u003eSlotTypeMetadata\u003c/code\u003e objects in the response, one for each\n        numbered version and one for the \u003ccode\u003e$LATEST\u003c/code\u003e version. \u003c/p\u003e\n        \u003cp\u003eThe \u003ccode\u003eGetSlotTypeVersions\u003c/code\u003e operation always returns at\n        least one version, the \u003ccode\u003e$LATEST\u003c/code\u003e version.\u003c/p\u003e \u003cp\u003eThis\n        operation requires permissions for the\n        \u003ccode\u003elex:GetSlotTypeVersions\u003c/code\u003e action.\u003c/p\u003e\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/GetSlotTypeVersionsResponse\"\n        \"480\":\n          description: NotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/NotFoundException\"\n        \"481\":\n          description: LimitExceededException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/LimitExceededException\"\n        \"482\":\n          description: InternalFailureException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InternalFailureException\"\n        \"483\":\n          description: BadRequestException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/BadRequestException\"\n      parameters:\n        - name: name\n          in: path\n          required: true\n          description: The name of the slot type for which versions should be returned.\n          schema:\n            type: string\n            minLength: 1\n            maxLength: 100\n            pattern: ^([A-Za-z]_?)+$\n        - name: nextToken\n          in: query\n          required: false\n          description: \"A pagination token for fetching the next page of slot type\n            versions. If the response to this call is truncated, Amazon Lex\n            returns a pagination token in the response. To fetch the next page\n            of versions, specify the pagination token in the next request. \"\n          schema:\n            type: string\n        - name: maxResults\n          in: query\n          required: false\n          description: The maximum number of slot type versions to return in the response.\n            The default is 10.\n          schema:\n            type: integer\n            minimum: 1\n            maximum: 50\n    parameters:\n      - $ref: \"#/components/parameters/X-Amz-Content-Sha256\"\n      - $ref: \"#/components/parameters/X-Amz-Date\"\n      - $ref: \"#/components/parameters/X-Amz-Algorithm\"\n      - $ref: \"#/components/parameters/X-Amz-Credential\"\n      - $ref: \"#/components/parameters/X-Amz-Security-Token\"\n      - $ref: \"#/components/parameters/X-Amz-Signature\"\n      - $ref: \"#/components/parameters/X-Amz-SignedHeaders\"\n  /slottypes/:\n    get:\n      operationId: GetSlotTypes\n      description: \"\u003cp\u003eReturns slot type information as follows: \u003c/p\u003e \u003cul\u003e \u003cli\u003e \u003cp\u003eIf you\n        specify the \u003ccode\u003enameContains\u003c/code\u003e field, returns the\n        \u003ccode\u003e$LATEST\u003c/code\u003e version of all slot types that contain the\n        specified string.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e If you don't specify the\n        \u003ccode\u003enameContains\u003c/code\u003e field, returns information about the\n        \u003ccode\u003e$LATEST\u003c/code\u003e version of all slot types. \u003c/p\u003e \u003c/li\u003e \u003c/ul\u003e \u003cp\u003e The\n        operation requires permission for the \u003ccode\u003elex:GetSlotTypes\u003c/code\u003e\n        action. \u003c/p\u003e\"\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/GetSlotTypesResponse\"\n        \"480\":\n          description: NotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/NotFoundException\"\n        \"481\":\n          description: LimitExceededException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/LimitExceededException\"\n        \"482\":\n          description: InternalFailureException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InternalFailureException\"\n        \"483\":\n          description: BadRequestException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/BadRequestException\"\n      parameters:\n        - name: nextToken\n          in: query\n          required: false\n          description: A pagination token that fetches the next page of slot types. If the\n            response to this API call is truncated, Amazon Lex returns a\n            pagination token in the response. To fetch next page of slot types,\n            specify the pagination token in the next request.\n          schema:\n            type: string\n        - name: maxResults\n          in: query\n          required: false\n          description: The maximum number of slot types to return in the response. The\n            default is 10.\n          schema:\n            type: integer\n            minimum: 1\n            maximum: 50\n        - name: nameContains\n          in: query\n          required: false\n          description: Substring to match in slot type names. A slot type will be returned\n            if any part of its name matches the substring. For example, \"xyz\"\n            matches both \"xyzabc\" and \"abcxyz.\"\n          schema:\n            type: string\n            minLength: 1\n            maxLength: 100\n            pattern: ^([A-Za-z]_?)+$\n    parameters:\n      - $ref: \"#/components/parameters/X-Amz-Content-Sha256\"\n      - $ref: \"#/components/parameters/X-Amz-Date\"\n      - $ref: \"#/components/parameters/X-Amz-Algorithm\"\n      - $ref: \"#/components/parameters/X-Amz-Credential\"\n      - $ref: \"#/components/parameters/X-Amz-Security-Token\"\n      - $ref: \"#/components/parameters/X-Amz-Signature\"\n      - $ref: \"#/components/parameters/X-Amz-SignedHeaders\"\n  \"/bots/{botname}/utterances#view=aggregation\u0026bot_versions\u0026status_type\":\n    get:\n      operationId: GetUtterancesView\n      description: \u003cp\u003eUse the \u003ccode\u003eGetUtterancesView\u003c/code\u003e operation to get information\n        about the utterances that your users have made to your bot. You can use\n        this list to tune the utterances that your bot responds to.\u003c/p\u003e \u003cp\u003eFor\n        example, say that you have created a bot to order flowers. After your\n        users have used your bot for a while, use the\n        \u003ccode\u003eGetUtterancesView\u003c/code\u003e operation to see the requests that they\n        have made and whether they have been successful. You might find that the\n        utterance \"I want flowers\" is not being recognized. You could add this\n        utterance to the \u003ccode\u003eOrderFlowers\u003c/code\u003e intent so that your bot\n        recognizes that utterance.\u003c/p\u003e \u003cp\u003eAfter you publish a new version of a\n        bot, you can get information about the old version and the new so that\n        you can compare the performance across the two versions. \u003c/p\u003e \u003cnote\u003e\n        \u003cp\u003eUtterance statistics are generated once a day. Data is available for\n        the last 15 days. You can request information for up to 5 versions in\n        each request. The response contains information about a maximum of 100\n        utterances for each version.\u003c/p\u003e \u003c/note\u003e \u003cp\u003eThis operation requires\n        permissions for the \u003ccode\u003elex:GetUtterancesView\u003c/code\u003e action.\u003c/p\u003e\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/GetUtterancesViewResponse\"\n        \"480\":\n          description: LimitExceededException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/LimitExceededException\"\n        \"481\":\n          description: InternalFailureException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InternalFailureException\"\n        \"482\":\n          description: BadRequestException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/BadRequestException\"\n      parameters:\n        - name: botname\n          in: path\n          required: true\n          description: The name of the bot for which utterance information should be\n            returned.\n          schema:\n            type: string\n            minLength: 2\n            maxLength: 50\n            pattern: ^([A-Za-z]_?)+$\n        - name: bot_versions\n          in: query\n          required: true\n          description: An array of bot versions for which utterance information should be\n            returned. The limit is 5 versions per request.\n          schema:\n            type: array\n            items:\n              type: string\n        - name: status_type\n          in: query\n          required: true\n          description: To return utterances that were recognized and handled,\n            use\u003ccode\u003eDetected\u003c/code\u003e. To return utterances that were not\n            recognized, use \u003ccode\u003eMissed\u003c/code\u003e.\n          schema:\n            type: string\n            enum:\n              - Detected\n              - Missed\n        - name: view\n          in: query\n          required: true\n          schema:\n            type: string\n            enum:\n              - aggregation\n    parameters:\n      - $ref: \"#/components/parameters/X-Amz-Content-Sha256\"\n      - $ref: \"#/components/parameters/X-Amz-Date\"\n      - $ref: \"#/components/parameters/X-Amz-Algorithm\"\n      - $ref: \"#/components/parameters/X-Amz-Credential\"\n      - $ref: \"#/components/parameters/X-Amz-Security-Token\"\n      - $ref: \"#/components/parameters/X-Amz-Signature\"\n      - $ref: \"#/components/parameters/X-Amz-SignedHeaders\"\n  \"/bots/{name}/versions/$LATEST\":\n    put:\n      operationId: PutBot\n      description: \u003cp\u003eCreates an Amazon Lex conversational bot or replaces an existing bot.\n        When you create or update a bot you are only required to specify a name,\n        a locale, and whether the bot is directed toward children under age 13.\n        You can use this to add intents later, or to remove intents from an\n        existing bot. When you create a bot with the minimum information, the\n        bot is created or updated but Amazon Lex returns the \u003ccode/\u003e response\n        \u003ccode\u003eFAILED\u003c/code\u003e. You can build the bot after you add one or more\n        intents. For more information about Amazon Lex bots, see\n        \u003ca\u003ehow-it-works\u003c/a\u003e. \u003c/p\u003e \u003cp\u003eIf you specify the name of an existing bot,\n        the fields in the request replace the existing values in the\n        \u003ccode\u003e$LATEST\u003c/code\u003e version of the bot. Amazon Lex removes any fields\n        that you don't provide values for in the request, except for the\n        \u003ccode\u003eidleTTLInSeconds\u003c/code\u003e and \u003ccode\u003eprivacySettings\u003c/code\u003e fields,\n        which are set to their default values. If you don't specify values for\n        required fields, Amazon Lex throws an exception.\u003c/p\u003e \u003cp\u003eThis operation\n        requires permissions for the \u003ccode\u003elex:PutBot\u003c/code\u003e action. For more\n        information, see \u003ca\u003eauth-and-access-control\u003c/a\u003e.\u003c/p\u003e\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/PutBotResponse\"\n        \"480\":\n          description: ConflictException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ConflictException\"\n        \"481\":\n          description: LimitExceededException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/LimitExceededException\"\n        \"482\":\n          description: InternalFailureException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InternalFailureException\"\n        \"483\":\n          description: BadRequestException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/BadRequestException\"\n        \"484\":\n          description: PreconditionFailedException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/PreconditionFailedException\"\n      parameters:\n        - name: name\n          in: path\n          required: true\n          description: \"The name of the bot. The name is \u003ci\u003enot\u003c/i\u003e case sensitive. \"\n          schema:\n            type: string\n            minLength: 2\n            maxLength: 50\n            pattern: ^([A-Za-z]_?)+$\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              required:\n                - clarificationPrompt\n                - abortStatement\n                - locale\n                - childDirected\n              properties:\n                description:\n                  description: A description of the bot.\n                  type: string\n                  minLength: 0\n                  maxLength: 200\n                intents:\n                  description: An array of \u003ccode\u003eIntent\u003c/code\u003e objects. Each intent\n                    represents a command that a user can express. For example, a\n                    pizza ordering bot might support an OrderPizza intent. For\n                    more information, see \u003ca\u003ehow-it-works\u003c/a\u003e.\n                  type: array\n                  items:\n                    $ref: \"#/components/schemas/Intent\"\n                clarificationPrompt:\n                  description: Obtains information from the user. To define a prompt,\n                    provide one or more messages and specify the number of\n                    attempts to get information from the user. If you provide\n                    more than one message, Amazon Lex chooses one of the\n                    messages to use to prompt the user. For more information,\n                    see \u003ca\u003ehow-it-works\u003c/a\u003e.\n                  type: object\n                  properties:\n                    messages:\n                      $ref: \"#/components/schemas/MessageList\"\n                    maxAttempts:\n                      $ref: \"#/components/schemas/PromptMaxAttempts\"\n                    responseCard:\n                      $ref: \"#/components/schemas/ResponseCard\"\n                abortStatement:\n                  description: \"A collection of messages that convey information to the\n                    user. At runtime, Amazon Lex selects the message to convey.\n                    \"\n                  type: object\n                  properties:\n                    messages:\n                      $ref: \"#/components/schemas/MessageList\"\n                    responseCard:\n                      $ref: \"#/components/schemas/ResponseCard\"\n                idleSessionTTLInSeconds:\n                  description: \u003cp\u003eThe maximum time in seconds that Amazon Lex retains the\n                    data gathered in a conversation.\u003c/p\u003e \u003cp\u003eA user interaction\n                    session remains active for the amount of time specified. If\n                    no conversation occurs during this time, the session expires\n                    and Amazon Lex deletes any data provided before the\n                    timeout.\u003c/p\u003e \u003cp\u003eFor example, suppose that a user chooses the\n                    OrderPizza intent, but gets sidetracked halfway through\n                    placing an order. If the user doesn't complete the order\n                    within the specified time, Amazon Lex discards the slot\n                    information that it gathered, and the user must start\n                    over.\u003c/p\u003e \u003cp\u003eIf you don't include the\n                    \u003ccode\u003eidleSessionTTLInSeconds\u003c/code\u003e element in a\n                    \u003ccode\u003ePutBot\u003c/code\u003e operation request, Amazon Lex uses the\n                    default value. This is also true if the request replaces an\n                    existing bot.\u003c/p\u003e \u003cp\u003eThe default is 300 seconds (5\n                    minutes).\u003c/p\u003e\n                  type: integer\n                  minimum: 60\n                  maximum: 86400\n                voiceId:\n                  description: The Amazon Polly voice ID that you want Amazon Lex to use\n                    for voice interactions with the user. The locale configured\n                    for the voice must match the locale of the bot. For more\n                    information, see \u003ca\n                    href=\"http://docs.aws.amazon.com/polly/latest/dg/voicelist.html\"\u003eAvailable\n                    Voices\u003c/a\u003e in the \u003ci\u003eAmazon Polly Developer Guide\u003c/i\u003e.\n                  type: string\n                checksum:\n                  description: \u003cp\u003eIdentifies a specific revision of the\n                    \u003ccode\u003e$LATEST\u003c/code\u003e version.\u003c/p\u003e \u003cp\u003eWhen you create a new\n                    bot, leave the \u003ccode\u003echecksum\u003c/code\u003e field blank. If you\n                    specify a checksum you get a\n                    \u003ccode\u003eBadRequestException\u003c/code\u003e exception.\u003c/p\u003e \u003cp\u003eWhen you\n                    want to update a bot, set the \u003ccode\u003echecksum\u003c/code\u003e field to\n                    the checksum of the most recent revision of the\n                    \u003ccode\u003e$LATEST\u003c/code\u003e version. If you don't specify the\n                    \u003ccode\u003e checksum\u003c/code\u003e field, or if the checksum does not\n                    match the \u003ccode\u003e$LATEST\u003c/code\u003e version, you get a\n                    \u003ccode\u003ePreconditionFailedException\u003c/code\u003e exception.\u003c/p\u003e\n                  type: string\n                processBehavior:\n                  description: \u003cp\u003eIf you set the \u003ccode\u003eprocessBehavior\u003c/code\u003e element to\n                    \u003ccode\u003eBUILD\u003c/code\u003e, Amazon Lex builds the bot so that it can\n                    be run. If you set the element to \u003ccode\u003eSAVE\u003c/code\u003e Amazon\n                    Lex saves the bot, but doesn't build it. \u003c/p\u003e \u003cp\u003eIf you\n                    don't specify this value, the default value is\n                    \u003ccode\u003eBUILD\u003c/code\u003e.\u003c/p\u003e\n                  type: string\n                  enum:\n                    - SAVE\n                    - BUILD\n                locale:\n                  description: \u003cp\u003e Specifies the target locale for the bot. Any intent used\n                    in the bot must be compatible with the locale of the bot.\n                    \u003c/p\u003e \u003cp\u003eThe default is \u003ccode\u003een-US\u003c/code\u003e.\u003c/p\u003e\n                  type: string\n                  enum:\n                    - en-US\n                    - en-GB\n                    - de-DE\n                childDirected:\n                  description: \u003cp\u003eFor each Amazon Lex bot created with the Amazon Lex Model\n                    Building Service, you must specify whether your use of\n                    Amazon Lex is related to a website, program, or other\n                    application that is directed or targeted, in whole or in\n                    part, to children under age 13 and subject to the Children's\n                    Online Privacy Protection Act (COPPA) by specifying\n                    \u003ccode\u003etrue\u003c/code\u003e or \u003ccode\u003efalse\u003c/code\u003e in the\n                    \u003ccode\u003echildDirected\u003c/code\u003e field. By specifying\n                    \u003ccode\u003etrue\u003c/code\u003e in the \u003ccode\u003echildDirected\u003c/code\u003e field,\n                    you confirm that your use of Amazon Lex \u003cb\u003eis\u003c/b\u003e related to\n                    a website, program, or other application that is directed or\n                    targeted, in whole or in part, to children under age 13 and\n                    subject to COPPA. By specifying \u003ccode\u003efalse\u003c/code\u003e in the\n                    \u003ccode\u003echildDirected\u003c/code\u003e field, you confirm that your use\n                    of Amazon Lex \u003cb\u003eis not\u003c/b\u003e related to a website, program,\n                    or other application that is directed or targeted, in whole\n                    or in part, to children under age 13 and subject to COPPA.\n                    You may not specify a default value for the\n                    \u003ccode\u003echildDirected\u003c/code\u003e field that does not accurately\n                    reflect whether your use of Amazon Lex is related to a\n                    website, program, or other application that is directed or\n                    targeted, in whole or in part, to children under age 13 and\n                    subject to COPPA.\u003c/p\u003e \u003cp\u003eIf your use of Amazon Lex relates\n                    to a website, program, or other application that is directed\n                    in whole or in part, to children under age 13, you must\n                    obtain any required verifiable parental consent under COPPA.\n                    For information regarding the use of Amazon Lex in\n                    connection with websites, programs, or other applications\n                    that are directed or targeted, in whole or in part, to\n                    children under age 13, see the \u003ca\n                    href=\"https://aws.amazon.com/lex/faqs#data-security\"\u003eAmazon\n                    Lex FAQ.\u003c/a\u003e \u003c/p\u003e\n                  type: boolean\n                createVersion:\n                  description: \"\"\n                  type: boolean\n        required: true\n    parameters:\n      - $ref: \"#/components/parameters/X-Amz-Content-Sha256\"\n      - $ref: \"#/components/parameters/X-Amz-Date\"\n      - $ref: \"#/components/parameters/X-Amz-Algorithm\"\n      - $ref: \"#/components/parameters/X-Amz-Credential\"\n      - $ref: \"#/components/parameters/X-Amz-Security-Token\"\n      - $ref: \"#/components/parameters/X-Amz-Signature\"\n      - $ref: \"#/components/parameters/X-Amz-SignedHeaders\"\n  \"/intents/{name}/versions/$LATEST\":\n    put:\n      operationId: PutIntent\n      description: \u003cp\u003eCreates an intent or replaces an existing intent.\u003c/p\u003e \u003cp\u003eTo define\n        the interaction between the user and your bot, you use one or more\n        intents. For a pizza ordering bot, for example, you would create an\n        \u003ccode\u003eOrderPizza\u003c/code\u003e intent. \u003c/p\u003e \u003cp\u003eTo create an intent or replace\n        an existing intent, you must provide the following:\u003c/p\u003e \u003cul\u003e \u003cli\u003e\n        \u003cp\u003eIntent name. For example, \u003ccode\u003eOrderPizza\u003c/code\u003e.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e\n        \u003cp\u003eSample utterances. For example, \"Can I order a pizza, please.\" and \"I\n        want to order a pizza.\"\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003eInformation to be gathered.\n        You specify slot types for the information that your bot will request\n        from the user. You can specify standard slot types, such as a date or a\n        time, or custom slot types such as the size and crust of a pizza.\u003c/p\u003e\n        \u003c/li\u003e \u003cli\u003e \u003cp\u003eHow the intent will be fulfilled. You can provide a Lambda\n        function or configure the intent to return the intent information to the\n        client application. If you use a Lambda function, when all of the intent\n        information is available, Amazon Lex invokes your Lambda function. If\n        you configure your intent to return the intent information to the client\n        application. \u003c/p\u003e \u003c/li\u003e \u003c/ul\u003e \u003cp\u003eYou can specify other optional\n        information in the request, such as:\u003c/p\u003e \u003cul\u003e \u003cli\u003e \u003cp\u003eA confirmation\n        prompt to ask the user to confirm an intent. For example, \"Shall I order\n        your pizza?\"\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003eA conclusion statement to send to the\n        user after the intent has been fulfilled. For example, \"I placed your\n        pizza order.\"\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003eA follow-up prompt that asks the user\n        for additional activity. For example, asking \"Do you want to order a\n        drink with your pizza?\"\u003c/p\u003e \u003c/li\u003e \u003c/ul\u003e \u003cp\u003eIf you specify an existing\n        intent name to update the intent, Amazon Lex replaces the values in the\n        \u003ccode\u003e$LATEST\u003c/code\u003e version of the intent with the values in the\n        request. Amazon Lex removes fields that you don't provide in the\n        request. If you don't specify the required fields, Amazon Lex throws an\n        exception. When you update the \u003ccode\u003e$LATEST\u003c/code\u003e version of an\n        intent, the \u003ccode\u003estatus\u003c/code\u003e field of any bot that uses the\n        \u003ccode\u003e$LATEST\u003c/code\u003e version of the intent is set to\n        \u003ccode\u003eNOT_BUILT\u003c/code\u003e.\u003c/p\u003e \u003cp\u003eFor more information, see\n        \u003ca\u003ehow-it-works\u003c/a\u003e.\u003c/p\u003e \u003cp\u003eThis operation requires permissions for the\n        \u003ccode\u003elex:PutIntent\u003c/code\u003e action.\u003c/p\u003e\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/PutIntentResponse\"\n        \"480\":\n          description: ConflictException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ConflictException\"\n        \"481\":\n          description: LimitExceededException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/LimitExceededException\"\n        \"482\":\n          description: InternalFailureException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InternalFailureException\"\n        \"483\":\n          description: BadRequestException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/BadRequestException\"\n        \"484\":\n          description: PreconditionFailedException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/PreconditionFailedException\"\n      parameters:\n        - name: name\n          in: path\n          required: true\n          description: \u003cp\u003eThe name of the intent. The name is \u003ci\u003enot\u003c/i\u003e case sensitive.\n            \u003c/p\u003e \u003cp\u003eThe name can't match a built-in intent name, or a built-in\n            intent name with \"AMAZON.\" removed. For example, because there is a\n            built-in intent called \u003ccode\u003eAMAZON.HelpIntent\u003c/code\u003e, you can't\n            create a custom intent called \u003ccode\u003eHelpIntent\u003c/code\u003e.\u003c/p\u003e \u003cp\u003eFor a\n            list of built-in intents, see \u003ca\n            href=\"https://developer.amazon.com/public/solutions/alexa/alexa-skills-kit/docs/built-in-intent-ref/standard-intents\"\u003eStandard\n            Built-in Intents\u003c/a\u003e in the \u003ci\u003eAlexa Skills Kit\u003c/i\u003e.\u003c/p\u003e\n          schema:\n            type: string\n            minLength: 1\n            maxLength: 100\n            pattern: ^([A-Za-z]_?)+$\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              required:\n                - confirmationPrompt\n                - rejectionStatement\n                - followUpPrompt\n                - conclusionStatement\n                - dialogCodeHook\n                - fulfillmentActivity\n              properties:\n                description:\n                  description: A description of the intent.\n                  type: string\n                  minLength: 0\n                  maxLength: 200\n                slots:\n                  description: \"An array of intent slots. At runtime, Amazon Lex elicits\n                    required slot values from the user using prompts defined in\n                    the slots. For more information, see \u003ca\u003ehow-it-works\u003c/a\u003e. \"\n                  type: array\n                  items:\n                    $ref: \"#/components/schemas/Slot\"\n                  minItems: 0\n                  maxItems: 100\n                sampleUtterances:\n                  description: \u003cp\u003eAn array of utterances (strings) that a user might say to\n                    signal the intent. For example, \"I want {PizzaSize} pizza\",\n                    \"Order {Quantity} {PizzaSize} pizzas\". \u003c/p\u003e \u003cp\u003eIn each\n                    utterance, a slot name is enclosed in curly braces. \u003c/p\u003e\n                  type: array\n                  items:\n                    $ref: \"#/components/schemas/Utterance\"\n                  minItems: 0\n                  maxItems: 1500\n                confirmationPrompt:\n                  description: Obtains information from the user. To define a prompt,\n                    provide one or more messages and specify the number of\n                    attempts to get information from the user. If you provide\n                    more than one message, Amazon Lex chooses one of the\n                    messages to use to prompt the user. For more information,\n                    see \u003ca\u003ehow-it-works\u003c/a\u003e.\n                  type: object\n                  properties:\n                    messages:\n                      $ref: \"#/components/schemas/MessageList\"\n                    maxAttempts:\n                      $ref: \"#/components/schemas/PromptMaxAttempts\"\n                    responseCard:\n                      $ref: \"#/components/schemas/ResponseCard\"\n                rejectionStatement:\n                  description: \"A collection of messages that convey information to the\n                    user. At runtime, Amazon Lex selects the message to convey.\n                    \"\n                  type: object\n                  properties:\n                    messages:\n                      $ref: \"#/components/schemas/MessageList\"\n                    responseCard:\n                      $ref: \"#/components/schemas/ResponseCard\"\n                followUpPrompt:\n                  description: A prompt for additional activity after an intent is\n                    fulfilled. For example, after the \u003ccode\u003eOrderPizza\u003c/code\u003e\n                    intent is fulfilled, you might prompt the user to find out\n                    whether the user wants to order drinks.\n                  type: object\n                  properties:\n                    prompt:\n                      $ref: \"#/components/schemas/Prompt\"\n                    rejectionStatement:\n                      $ref: \"#/components/schemas/Statement\"\n                conclusionStatement:\n                  description: \"A collection of messages that convey information to the\n                    user. At runtime, Amazon Lex selects the message to convey.\n                    \"\n                  type: object\n                  properties:\n                    messages:\n                      $ref: \"#/components/schemas/MessageList\"\n                    responseCard:\n                      $ref: \"#/components/schemas/ResponseCard\"\n                dialogCodeHook:\n                  description: Specifies a Lambda function that verifies requests to a bot\n                    or fulfills the user's request to a bot..\n                  type: object\n                  properties:\n                    uri:\n                      $ref: \"#/components/schemas/LambdaARN\"\n                    messageVersion:\n                      $ref: \"#/components/schemas/MessageVersion\"\n                fulfillmentActivity:\n                  description: \u003cp\u003e Describes how the intent is fulfilled after the user\n                    provides all of the information required for the intent. You\n                    can provide a Lambda function to process the intent, or you\n                    can return the intent information to the client application.\n                    We recommend that you use a Lambda function so that the\n                    relevant logic lives in the Cloud and limit the client-side\n                    code primarily to presentation. If you need to update the\n                    logic, you only update the Lambda function; you don't need\n                    to upgrade your client application. \u003c/p\u003e \u003cp\u003eConsider the\n                    following examples:\u003c/p\u003e \u003cul\u003e \u003cli\u003e \u003cp\u003eIn a pizza ordering\n                    application, after the user provides all of the information\n                    for placing an order, you use a Lambda function to place an\n                    order with a pizzeria. \u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003eIn a gaming\n                    application, when a user says \"pick up a rock,\" this\n                    information must go back to the client application so that\n                    it can perform the operation and update the graphics. In\n                    this case, you want Amazon Lex to return the intent data to\n                    the client. \u003c/p\u003e \u003c/li\u003e \u003c/ul\u003e\n                  type: object\n                  properties:\n                    type:\n                      $ref: \"#/components/schemas/FulfillmentActivityType\"\n                    codeHook:\n                      $ref: \"#/components/schemas/CodeHook\"\n                parentIntentSignature:\n                  description: A unique identifier for the built-in intent to base this\n                    intent on. To find the signature for an intent, see \u003ca\n                    href=\"https://developer.amazon.com/public/solutions/alexa/alexa-skills-kit/docs/built-in-intent-ref/standard-intents\"\u003eStandard\n                    Built-in Intents\u003c/a\u003e in the \u003ci\u003eAlexa Skills Kit\u003c/i\u003e.\n                  type: string\n                checksum:\n                  description: \u003cp\u003eIdentifies a specific revision of the\n                    \u003ccode\u003e$LATEST\u003c/code\u003e version.\u003c/p\u003e \u003cp\u003eWhen you create a new\n                    intent, leave the \u003ccode\u003echecksum\u003c/code\u003e field blank. If you\n                    specify a checksum you get a\n                    \u003ccode\u003eBadRequestException\u003c/code\u003e exception.\u003c/p\u003e \u003cp\u003eWhen you\n                    want to update a intent, set the \u003ccode\u003echecksum\u003c/code\u003e field\n                    to the checksum of the most recent revision of the\n                    \u003ccode\u003e$LATEST\u003c/code\u003e version. If you don't specify the\n                    \u003ccode\u003e checksum\u003c/code\u003e field, or if the checksum does not\n                    match the \u003ccode\u003e$LATEST\u003c/code\u003e version, you get a\n                    \u003ccode\u003ePreconditionFailedException\u003c/code\u003e exception.\u003c/p\u003e\n                  type: string\n                createVersion:\n                  description: \"\"\n                  type: boolean\n        required: true\n    parameters:\n      - $ref: \"#/components/parameters/X-Amz-Content-Sha256\"\n      - $ref: \"#/components/parameters/X-Amz-Date\"\n      - $ref: \"#/components/parameters/X-Amz-Algorithm\"\n      - $ref: \"#/components/parameters/X-Amz-Credential\"\n      - $ref: \"#/components/parameters/X-Amz-Security-Token\"\n      - $ref: \"#/components/parameters/X-Amz-Signature\"\n      - $ref: \"#/components/parameters/X-Amz-SignedHeaders\"\n  \"/slottypes/{name}/versions/$LATEST\":\n    put:\n      operationId: PutSlotType\n      description: \u003cp\u003eCreates a custom slot type or replaces an existing custom slot\n        type.\u003c/p\u003e \u003cp\u003eTo create a custom slot type, specify a name for the slot\n        type and a set of enumeration values, which are the values that a slot\n        of this type can assume. For more information, see\n        \u003ca\u003ehow-it-works\u003c/a\u003e.\u003c/p\u003e \u003cp\u003eIf you specify the name of an existing slot\n        type, the fields in the request replace the existing values in the\n        \u003ccode\u003e$LATEST\u003c/code\u003e version of the slot type. Amazon Lex removes the\n        fields that you don't provide in the request. If you don't specify\n        required fields, Amazon Lex throws an exception. When you update the\n        \u003ccode\u003e$LATEST\u003c/code\u003e version of a slot type, if a bot uses the\n        \u003ccode\u003e$LATEST\u003c/code\u003e version of an intent that contains the slot type,\n        the bot's \u003ccode\u003estatus\u003c/code\u003e field is set to\n        \u003ccode\u003eNOT_BUILT\u003c/code\u003e.\u003c/p\u003e \u003cp\u003eThis operation requires permissions for\n        the \u003ccode\u003elex:PutSlotType\u003c/code\u003e action.\u003c/p\u003e\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/PutSlotTypeResponse\"\n        \"480\":\n          description: ConflictException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ConflictException\"\n        \"481\":\n          description: LimitExceededException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/LimitExceededException\"\n        \"482\":\n          description: InternalFailureException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InternalFailureException\"\n        \"483\":\n          description: BadRequestException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/BadRequestException\"\n        \"484\":\n          description: PreconditionFailedException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/PreconditionFailedException\"\n      parameters:\n        - name: name\n          in: path\n          required: true\n          description: \u003cp\u003eThe name of the slot type. The name is \u003ci\u003enot\u003c/i\u003e case sensitive.\n            \u003c/p\u003e \u003cp\u003eThe name can't match a built-in slot type name, or a\n            built-in slot type name with \"AMAZON.\" removed. For example, because\n            there is a built-in slot type called \u003ccode\u003eAMAZON.DATE\u003c/code\u003e, you\n            can't create a custom slot type called \u003ccode\u003eDATE\u003c/code\u003e.\u003c/p\u003e \u003cp\u003eFor\n            a list of built-in slot types, see \u003ca\n            href=\"https://developer.amazon.com/public/solutions/alexa/alexa-skills-kit/docs/built-in-intent-ref/slot-type-reference\"\u003eSlot\n            Type Reference\u003c/a\u003e in the \u003ci\u003eAlexa Skills Kit\u003c/i\u003e.\u003c/p\u003e\n          schema:\n            type: string\n            minLength: 1\n            maxLength: 100\n            pattern: ^([A-Za-z]_?)+$\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                description:\n                  description: A description of the slot type.\n                  type: string\n                  minLength: 0\n                  maxLength: 200\n                enumerationValues:\n                  description: \u003cp\u003eA list of \u003ccode\u003eEnumerationValue\u003c/code\u003e objects that\n                    defines the values that the slot type can take. Each value\n                    can have a list of \u003ccode\u003esynonyms\u003c/code\u003e, which are\n                    additional values that help train the machine learning model\n                    about the values that it resolves for a slot. \u003c/p\u003e \u003cp\u003eWhen\n                    Amazon Lex resolves a slot value, it generates a resolution\n                    list that contains up to five possible values for the slot.\n                    If you are using a Lambda function, this resolution list is\n                    passed to the function. If you are not using a Lambda\n                    function you can choose to return the value that the user\n                    entered or the first value in the resolution list as the\n                    slot value. The \u003ccode\u003evalueSelectionStrategy\u003c/code\u003e field\n                    indicates the option to use. \u003c/p\u003e\n                  type: array\n                  items:\n                    $ref: \"#/components/schemas/EnumerationValue\"\n                  minItems: 1\n                  maxItems: 10000\n                checksum:\n                  description: \u003cp\u003eIdentifies a specific revision of the\n                    \u003ccode\u003e$LATEST\u003c/code\u003e version.\u003c/p\u003e \u003cp\u003eWhen you create a new\n                    slot type, leave the \u003ccode\u003echecksum\u003c/code\u003e field blank. If\n                    you specify a checksum you get a\n                    \u003ccode\u003eBadRequestException\u003c/code\u003e exception.\u003c/p\u003e \u003cp\u003eWhen you\n                    want to update a slot type, set the \u003ccode\u003echecksum\u003c/code\u003e\n                    field to the checksum of the most recent revision of the\n                    \u003ccode\u003e$LATEST\u003c/code\u003e version. If you don't specify the\n                    \u003ccode\u003e checksum\u003c/code\u003e field, or if the checksum does not\n                    match the \u003ccode\u003e$LATEST\u003c/code\u003e version, you get a\n                    \u003ccode\u003ePreconditionFailedException\u003c/code\u003e exception.\u003c/p\u003e\n                  type: string\n                valueSelectionStrategy:\n                  description: \u003cp\u003eDetermines the slot resolution strategy that Amazon Lex\n                    uses to return slot type values. The field can be set to one\n                    of the following values:\u003c/p\u003e \u003cul\u003e \u003cli\u003e \u003cp\u003e\n                    \u003ccode\u003eORIGINAL_VALUE\u003c/code\u003e - Returns the value entered by\n                    the user, if the user value is similar to the slot\n                    value.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e \u003ccode\u003eTOP_RESOLUTION\u003c/code\u003e - If\n                    there is a resolution list for the slot, return the first\n                    value in the resolution list as the slot type value. If\n                    there is no resolution list, null is returned.\u003c/p\u003e \u003c/li\u003e\n                    \u003c/ul\u003e \u003cp\u003eIf you don't specify the\n                    \u003ccode\u003evalueSelectionStrategy\u003c/code\u003e, the default is\n                    \u003ccode\u003eORIGINAL_VALUE\u003c/code\u003e.\u003c/p\u003e\n                  type: string\n                  enum:\n                    - ORIGINAL_VALUE\n                    - TOP_RESOLUTION\n                createVersion:\n                  description: \"\"\n                  type: boolean\n        required: true\n    parameters:\n      - $ref: \"#/components/parameters/X-Amz-Content-Sha256\"\n      - $ref: \"#/components/parameters/X-Amz-Date\"\n      - $ref: \"#/components/parameters/X-Amz-Algorithm\"\n      - $ref: \"#/components/parameters/X-Amz-Credential\"\n      - $ref: \"#/components/parameters/X-Amz-Security-Token\"\n      - $ref: \"#/components/parameters/X-Amz-Signature\"\n      - $ref: \"#/components/parameters/X-Amz-SignedHeaders\"\n  /imports/:\n    post:\n      operationId: StartImport\n      description: Starts a job to import a resource to Amazon Lex.\n      responses:\n        \"201\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/StartImportResponse\"\n        \"480\":\n          description: LimitExceededException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/LimitExceededException\"\n        \"481\":\n          description: InternalFailureException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InternalFailureException\"\n        \"482\":\n          description: BadRequestException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/BadRequestException\"\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              required:\n                - payload\n                - resourceType\n                - mergeStrategy\n              properties:\n                payload:\n                  description: A zip archive in binary format. The archive should contain\n                    one file, a JSON file containing the resource to import. The\n                    resource should match the type specified in the\n                    \u003ccode\u003eresourceType\u003c/code\u003e field.\n                  type: string\n                resourceType:\n                  description: \u003cp\u003eSpecifies the type of resource to export. Each resource\n                    also exports any resources that it depends on. \u003c/p\u003e \u003cul\u003e\n                    \u003cli\u003e \u003cp\u003eA bot exports dependent intents.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e\n                    \u003cp\u003eAn intent exports dependent slot types.\u003c/p\u003e \u003c/li\u003e \u003c/ul\u003e\n                  type: string\n                  enum:\n                    - BOT\n                    - INTENT\n                    - SLOT_TYPE\n                mergeStrategy:\n                  description: \u003cp\u003eSpecifies the action that the \u003ccode\u003eStartImport\u003c/code\u003e\n                    operation should take when there is an existing resource\n                    with the same name.\u003c/p\u003e \u003cul\u003e \u003cli\u003e \u003cp\u003eFAIL_ON_CONFLICT - The\n                    import operation is stopped on the first conflict between a\n                    resource in the import file and an existing resource. The\n                    name of the resource causing the conflict is in the\n                    \u003ccode\u003efailureReason\u003c/code\u003e field of the response to the\n                    \u003ccode\u003eGetImport\u003c/code\u003e operation.\u003c/p\u003e \u003cp\u003eOVERWRITE_LATEST -\n                    The import operation proceeds even if there is a conflict\n                    with an existing resource. The $LASTEST version of the\n                    existing resource is overwritten with the data from the\n                    import file.\u003c/p\u003e \u003c/li\u003e \u003c/ul\u003e\n                  type: string\n                  enum:\n                    - OVERWRITE_LATEST\n                    - FAIL_ON_CONFLICT\n        required: true\n    parameters:\n      - $ref: \"#/components/parameters/X-Amz-Content-Sha256\"\n      - $ref: \"#/components/parameters/X-Amz-Date\"\n      - $ref: \"#/components/parameters/X-Amz-Algorithm\"\n      - $ref: \"#/components/parameters/X-Amz-Credential\"\n      - $ref: \"#/components/parameters/X-Amz-Security-Token\"\n      - $ref: \"#/components/parameters/X-Amz-Signature\"\n      - $ref: \"#/components/parameters/X-Amz-SignedHeaders\"\nservers:\n  - url: http://models.lex.{region}.amazonaws.com\n    variables:\n      region:\n        description: The AWS region\n        enum:\n          - us-east-1\n          - us-east-2\n          - us-west-1\n          - us-west-2\n          - us-gov-west-1\n          - us-gov-east-1\n          - ca-central-1\n          - eu-north-1\n          - eu-west-1\n          - eu-west-2\n          - eu-west-3\n          - eu-central-1\n          - ap-northeast-1\n          - ap-northeast-2\n          - ap-northeast-3\n          - ap-southeast-1\n          - ap-southeast-2\n          - ap-south-1\n          - sa-east-1\n        default: us-east-1\n    description: The Amazon Lex Model Building Service multi-region endpoint\n  - url: https://models.lex.{region}.amazonaws.com\n    variables:\n      region:\n        description: The AWS region\n        enum:\n          - us-east-1\n          - us-east-2\n          - us-west-1\n          - us-west-2\n          - us-gov-west-1\n          - us-gov-east-1\n          - ca-central-1\n          - eu-north-1\n          - eu-west-1\n          - eu-west-2\n          - eu-west-3\n          - eu-central-1\n          - ap-northeast-1\n          - ap-northeast-2\n          - ap-northeast-3\n          - ap-southeast-1\n          - ap-southeast-2\n          - ap-south-1\n          - sa-east-1\n        default: us-east-1\n    description: The Amazon Lex Model Building Service multi-region endpoint\n  - url: http://models.lex.{region}.amazonaws.com.cn\n    variables:\n      region:\n        description: The AWS region\n        enum:\n          - cn-north-1\n          - cn-northwest-1\n        default: cn-north-1\n    description: The Amazon Lex Model Building Service endpoint for China (Beijing) and\n      China (Ningxia)\n  - url: https://models.lex.{region}.amazonaws.com.cn\n    variables:\n      region:\n        description: The AWS region\n        enum:\n          - cn-north-1\n          - cn-northwest-1\n        default: cn-north-1\n    description: The Amazon Lex Model Building Service endpoint for China (Beijing) and\n      China (Ningxia)\ncomponents:\n  parameters:\n    X-Amz-Content-Sha256:\n      name: X-Amz-Content-Sha256\n      in: header\n      required: false\n      schema:\n        type: string\n    X-Amz-Date:\n      name: X-Amz-Date\n      in: header\n      required: false\n      schema:\n        type: string\n    X-Amz-Algorithm:\n      name: X-Amz-Algorithm\n      in: header\n      required: false\n      schema:\n        type: string\n    X-Amz-Credential:\n      name: X-Amz-Credential\n      in: header\n      required: false\n      schema:\n        type: string\n    X-Amz-Security-Token:\n      name: X-Amz-Security-Token\n      in: header\n      required: false\n      schema:\n        type: string\n    X-Amz-Signature:\n      name: X-Amz-Signature\n      in: header\n      required: false\n      schema:\n        type: string\n    X-Amz-SignedHeaders:\n      name: X-Amz-SignedHeaders\n      in: header\n      required: false\n      schema:\n        type: string\n  securitySchemes:\n    hmac:\n      type: apiKey\n      name: Authorization\n      in: header\n      description: Amazon Signature authorization v4\n      x-amazon-apigateway-authtype: awsSigv4\n  schemas:\n    CreateBotVersionResponse:\n      type: object\n      properties:\n        name:\n          $ref: \"#/components/schemas/BotName\"\n        description:\n          $ref: \"#/components/schemas/Description\"\n        intents:\n          $ref: \"#/components/schemas/IntentList\"\n        clarificationPrompt:\n          $ref: \"#/components/schemas/Prompt\"\n        abortStatement:\n          $ref: \"#/components/schemas/Statement\"\n        status:\n          $ref: \"#/components/schemas/Status\"\n        failureReason:\n          $ref: \"#/components/schemas/String\"\n        lastUpdatedDate:\n          $ref: \"#/components/schemas/Timestamp\"\n        createdDate:\n          $ref: \"#/components/schemas/Timestamp\"\n        idleSessionTTLInSeconds:\n          $ref: \"#/components/schemas/SessionTTL\"\n        voiceId:\n          $ref: \"#/components/schemas/String\"\n        checksum:\n          $ref: \"#/components/schemas/String\"\n        version:\n          $ref: \"#/components/schemas/Version\"\n        locale:\n          $ref: \"#/components/schemas/Locale\"\n        childDirected:\n          $ref: \"#/components/schemas/Boolean\"\n    NotFoundException: {}\n    ConflictException: {}\n    LimitExceededException: {}\n    InternalFailureException: {}\n    BadRequestException: {}\n    PreconditionFailedException: {}\n    CreateIntentVersionResponse:\n      type: object\n      properties:\n        name:\n          $ref: \"#/components/schemas/IntentName\"\n        description:\n          $ref: \"#/components/schemas/Description\"\n        slots:\n          $ref: \"#/components/schemas/SlotList\"\n        sampleUtterances:\n          $ref: \"#/components/schemas/IntentUtteranceList\"\n        confirmationPrompt:\n          $ref: \"#/components/schemas/Prompt\"\n        rejectionStatement:\n          $ref: \"#/components/schemas/Statement\"\n        followUpPrompt:\n          $ref: \"#/components/schemas/FollowUpPrompt\"\n        conclusionStatement:\n          $ref: \"#/components/schemas/Statement\"\n        dialogCodeHook:\n          $ref: \"#/components/schemas/CodeHook\"\n        fulfillmentActivity:\n          $ref: \"#/components/schemas/FulfillmentActivity\"\n        parentIntentSignature:\n          $ref: \"#/components/schemas/BuiltinIntentSignature\"\n        lastUpdatedDate:\n          $ref: \"#/components/schemas/Timestamp\"\n        createdDate:\n          $ref: \"#/components/schemas/Timestamp\"\n        version:\n          $ref: \"#/components/schemas/Version\"\n        checksum:\n          $ref: \"#/components/schemas/String\"\n    CreateSlotTypeVersionResponse:\n      type: object\n      properties:\n        name:\n          $ref: \"#/components/schemas/SlotTypeName\"\n        description:\n          $ref: \"#/components/schemas/Description\"\n        enumerationValues:\n          $ref: \"#/components/schemas/EnumerationValues\"\n        lastUpdatedDate:\n          $ref: \"#/components/schemas/Timestamp\"\n        createdDate:\n          $ref: \"#/components/schemas/Timestamp\"\n        version:\n          $ref: \"#/components/schemas/Version\"\n        checksum:\n          $ref: \"#/components/schemas/String\"\n        valueSelectionStrategy:\n          $ref: \"#/components/schemas/SlotValueSelectionStrategy\"\n    ResourceInUseException: {}\n    GetBotResponse:\n      type: object\n      example:\n        version: $LATEST\n        name: DocOrderPizzaBot\n        abortStatement:\n          messages:\n            - content: I don't understand. Can you try again?\n              contentType: PlainText\n            - content: I'm sorry, I don't understand.\n              contentType: PlainText\n        checksum: 20172ee3-fa06-49b2-bbc5-667c090303e9\n        childDirected: true\n        clarificationPrompt:\n          maxAttempts: 1\n          messages:\n            - content: I'm sorry, I didn't hear that. Can you repeate what you just\n                said?\n              contentType: PlainText\n            - content: Can you say that again?\n              contentType: PlainText\n        createdDate: 1494360160.133\n        description: Orders a pizza from a local pizzeria.\n        idleSessionTTLInSeconds: 300\n        intents:\n          - intentName: DocOrderPizza\n            intentVersion: $LATEST\n        lastUpdatedDate: 1494360160.133\n        locale: en-US\n        status: NOT_BUILT\n      properties:\n        name:\n          $ref: \"#/components/schemas/BotName\"\n        description:\n          $ref: \"#/components/schemas/Description\"\n        intents:\n          $ref: \"#/components/schemas/IntentList\"\n        clarificationPrompt:\n          $ref: \"#/components/schemas/Prompt\"\n        abortStatement:\n          $ref: \"#/components/schemas/Statement\"\n        status:\n          $ref: \"#/components/schemas/Status\"\n        failureReason:\n          $ref: \"#/components/schemas/String\"\n        lastUpdatedDate:\n          $ref: \"#/components/schemas/Timestamp\"\n        createdDate:\n          $ref: \"#/components/schemas/Timestamp\"\n        idleSessionTTLInSeconds:\n          $ref: \"#/components/schemas/SessionTTL\"\n        voiceId:\n          $ref: \"#/components/schemas/String\"\n        checksum:\n          $ref: \"#/components/schemas/String\"\n        version:\n          $ref: \"#/components/schemas/Version\"\n        locale:\n          $ref: \"#/components/schemas/Locale\"\n        childDirected:\n          $ref: \"#/components/schemas/Boolean\"\n    GetBotAliasResponse:\n      type: object\n      properties:\n        name:\n          $ref: \"#/components/schemas/AliasName\"\n        description:\n          $ref: \"#/components/schemas/Description\"\n        botVersion:\n          $ref: \"#/components/schemas/Version\"\n        botName:\n          $ref: \"#/components/schemas/BotName\"\n        lastUpdatedDate:\n          $ref: \"#/components/schemas/Timestamp\"\n        createdDate:\n          $ref: \"#/components/schemas/Timestamp\"\n        checksum:\n          $ref: \"#/components/schemas/String\"\n    GetBotAliasesResponse:\n      type: object\n      properties:\n        BotAliases:\n          $ref: \"#/components/schemas/BotAliasMetadataList\"\n        nextToken:\n          $ref: \"#/components/schemas/NextToken\"\n    GetBotChannelAssociationResponse:\n      type: object\n      properties:\n        name:\n          $ref: \"#/components/schemas/BotChannelName\"\n        description:\n          $ref: \"#/components/schemas/Description\"\n        botAlias:\n          $ref: \"#/components/schemas/AliasName\"\n        botName:\n          $ref: \"#/components/schemas/BotName\"\n        createdDate:\n          $ref: \"#/components/schemas/Timestamp\"\n        type:\n          $ref: \"#/components/schemas/ChannelType\"\n        botConfiguration:\n          $ref: \"#/components/schemas/ChannelConfigurationMap\"\n        status:\n          $ref: \"#/components/schemas/ChannelStatus\"\n        failureReason:\n          $ref: \"#/components/schemas/String\"\n    GetBotChannelAssociationsResponse:\n      type: object\n      properties:\n        botChannelAssociations:\n          $ref: \"#/components/schemas/BotChannelAssociationList\"\n        nextToken:\n          $ref: \"#/components/schemas/NextToken\"\n    GetBotVersionsResponse:\n      type: object\n      properties:\n        bots:\n          $ref: \"#/components/schemas/BotMetadataList\"\n        nextToken:\n          $ref: \"#/components/schemas/NextToken\"\n    GetBotsResponse:\n      type: object\n      example:\n        bots:\n          - version: $LATEST\n            name: DocOrderPizzaBot\n            createdDate: 1494360160.133\n            description: Orders a pizza from a local pizzeria.\n            lastUpdatedDate: 1494360160.133\n            status: NOT_BUILT\n      properties:\n        bots:\n          $ref: \"#/components/schemas/BotMetadataList\"\n        nextToken:\n          $ref: \"#/components/schemas/NextToken\"\n    GetBuiltinIntentResponse:\n      type: object\n      properties:\n        signature:\n          $ref: \"#/components/schemas/BuiltinIntentSignature\"\n        supportedLocales:\n          $ref: \"#/components/schemas/LocaleList\"\n        slots:\n          $ref: \"#/components/schemas/BuiltinIntentSlotList\"\n    GetBuiltinIntentsResponse:\n      type: object\n      properties:\n        intents:\n          $ref: \"#/components/schemas/BuiltinIntentMetadataList\"\n        nextToken:\n          $ref: \"#/components/schemas/NextToken\"\n    GetBuiltinSlotTypesResponse:\n      type: object\n      properties:\n        slotTypes:\n          $ref: \"#/components/schemas/BuiltinSlotTypeMetadataList\"\n        nextToken:\n          $ref: \"#/components/schemas/NextToken\"\n    GetExportResponse:\n      type: object\n      properties:\n        name:\n          $ref: \"#/components/schemas/Name\"\n        version:\n          $ref: \"#/components/schemas/NumericalVersion\"\n        resourceType:\n          $ref: \"#/components/schemas/ResourceType\"\n        exportType:\n          $ref: \"#/components/schemas/ExportType\"\n        exportStatus:\n          $ref: \"#/components/schemas/ExportStatus\"\n        failureReason:\n          $ref: \"#/components/schemas/String\"\n        url:\n          $ref: \"#/components/schemas/String\"\n    GetImportResponse:\n      type: object\n      properties:\n        name:\n          $ref: \"#/components/schemas/Name\"\n        resourceType:\n          $ref: \"#/components/schemas/ResourceType\"\n        mergeStrategy:\n          $ref: \"#/components/schemas/MergeStrategy\"\n        importId:\n          $ref: \"#/components/schemas/String\"\n        importStatus:\n          $ref: \"#/components/schemas/ImportStatus\"\n        failureReason:\n          $ref: \"#/components/schemas/StringList\"\n        createdDate:\n          $ref: \"#/components/schemas/Timestamp\"\n    GetIntentResponse:\n      type: object\n      example:\n        version: $LATEST\n        name: DocOrderPizza\n        checksum: ca9bc13d-afc8-4706-bbaf-091f7a5935d6\n        conclusionStatement:\n          messages:\n            - content: All right, I ordered  you a {Crust} crust {Type} pizza with\n                {Sauce} sauce.\n              contentType: PlainText\n            - content: OK, your {Crust} crust {Type} pizza with {Sauce} sauce is on the\n                way.\n              contentType: PlainText\n          responseCard: foo\n        confirmationPrompt:\n          maxAttempts: 1\n          messages:\n            - content: Should I order  your {Crust} crust {Type} pizza with {Sauce}\n                sauce?\n              contentType: PlainText\n        createdDate: 1494359783.453\n        description: Order a pizza from a local pizzeria.\n        fulfillmentActivity:\n          type: ReturnIntent\n        lastUpdatedDate: 1494359783.453\n        rejectionStatement:\n          messages:\n            - content: Ok, I'll cancel your order.\n              contentType: PlainText\n            - content: I cancelled your order.\n              contentType: PlainText\n        sampleUtterances:\n          - Order me a pizza.\n          - Order me a {Type} pizza.\n          - I want a {Crust} crust {Type} pizza\n          - I want a {Crust} crust {Type} pizza with {Sauce} sauce.\n        slots:\n          - name: Type\n            description: The type of pizza to order.\n            priority: 1\n            sampleUtterances:\n              - Get me a {Type} pizza.\n              - A {Type} pizza please.\n              - I'd like a {Type} pizza.\n            slotConstraint: Required\n            slotType: DocPizzaType\n            slotTypeVersion: $LATEST\n            valueElicitationPrompt:\n              maxAttempts: 1\n              messages:\n                - content: What type of pizza would you like?\n                  contentType: PlainText\n                - content: Vegie or cheese pizza?\n                  contentType: PlainText\n                - content: I can get you a vegie or a cheese pizza.\n                  contentType: PlainText\n          - name: Crust\n            description: The type of pizza crust to order.\n            priority: 2\n            sampleUtterances:\n              - Make it a {Crust} crust.\n              - I'd like a {Crust} crust.\n            slotConstraint: Required\n            slotType: DocPizzaCrustType\n            slotTypeVersion: $LATEST\n            valueElicitationPrompt:\n              maxAttempts: 1\n              messages:\n                - content: What type of crust would you like?\n                  contentType: PlainText\n                - content: Thick or thin crust?\n                  contentType: PlainText\n          - name: Sauce\n            description: The type of sauce to use on the pizza.\n            priority: 3\n            sampleUtterances:\n              - Make it {Sauce} sauce.\n              - I'd like {Sauce} sauce.\n            slotConstraint: Required\n            slotType: DocPizzaSauceType\n            slotTypeVersion: $LATEST\n            valueElicitationPrompt:\n              maxAttempts: 1\n              messages:\n                - content: White or red sauce?\n                  contentType: PlainText\n                - content: Garlic or tomato sauce?\n                  contentType: PlainText\n      properties:\n        name:\n          $ref: \"#/components/schemas/IntentName\"\n        description:\n          $ref: \"#/components/schemas/Description\"\n        slots:\n          $ref: \"#/components/schemas/SlotList\"\n        sampleUtterances:\n          $ref: \"#/components/schemas/IntentUtteranceList\"\n        confirmationPrompt:\n          $ref: \"#/components/schemas/Prompt\"\n        rejectionStatement:\n          $ref: \"#/components/schemas/Statement\"\n        followUpPrompt:\n          $ref: \"#/components/schemas/FollowUpPrompt\"\n        conclusionStatement:\n          $ref: \"#/components/schemas/Statement\"\n        dialogCodeHook:\n          $ref: \"#/components/schemas/CodeHook\"\n        fulfillmentActivity:\n          $ref: \"#/components/schemas/FulfillmentActivity\"\n        parentIntentSignature:\n          $ref: \"#/components/schemas/BuiltinIntentSignature\"\n        lastUpdatedDate:\n          $ref: \"#/components/schemas/Timestamp\"\n        createdDate:\n          $ref: \"#/components/schemas/Timestamp\"\n        version:\n          $ref: \"#/components/schemas/Version\"\n        checksum:\n          $ref: \"#/components/schemas/String\"\n    GetIntentVersionsResponse:\n      type: object\n      properties:\n        intents:\n          $ref: \"#/components/schemas/IntentMetadataList\"\n        nextToken:\n          $ref: \"#/components/schemas/NextToken\"\n    GetIntentsResponse:\n      type: object\n      example:\n        intents:\n          - version: $LATEST\n            name: DocOrderPizza\n            createdDate: 1494359783.453\n            description: Order a pizza from a local pizzeria.\n            lastUpdatedDate: 1494359783.453\n      properties:\n        intents:\n          $ref: \"#/components/schemas/IntentMetadataList\"\n        nextToken:\n          $ref: \"#/components/schemas/NextToken\"\n    GetSlotTypeResponse:\n      type: object\n      example:\n        version: $LATEST\n        name: DocPizzaCrustType\n        checksum: 210b3d5a-90a3-4b22-ac7e-f50c2c71095f\n        createdDate: 1494359274.403\n        description: Available crust types\n        enumerationValues:\n          - value: thick\n          - value: thin\n        lastUpdatedDate: 1494359274.403\n      properties:\n        name:\n          $ref: \"#/components/schemas/SlotTypeName\"\n        description:\n          $ref: \"#/components/schemas/Description\"\n        enumerationValues:\n          $ref: \"#/components/schemas/EnumerationValues\"\n        lastUpdatedDate:\n          $ref: \"#/components/schemas/Timestamp\"\n        createdDate:\n          $ref: \"#/components/schemas/Timestamp\"\n        version:\n          $ref: \"#/components/schemas/Version\"\n        checksum:\n          $ref: \"#/components/schemas/String\"\n        valueSelectionStrategy:\n          $ref: \"#/components/schemas/SlotValueSelectionStrategy\"\n    GetSlotTypeVersionsResponse:\n      type: object\n      properties:\n        slotTypes:\n          $ref: \"#/components/schemas/SlotTypeMetadataList\"\n        nextToken:\n          $ref: \"#/components/schemas/NextToken\"\n    GetSlotTypesResponse:\n      type: object\n      example:\n        slotTypes:\n          - version: $LATEST\n            name: DocPizzaCrustType\n            createdDate: 1494359274.403\n            description: Available crust types\n            lastUpdatedDate: 1494359274.403\n          - version: $LATEST\n            name: DocPizzaSauceType\n            createdDate: 1494356442.23\n            description: Available pizza sauces\n            lastUpdatedDate: 1494356442.23\n          - version: $LATEST\n            name: DocPizzaType\n            createdDate: 1494359198.656\n            description: Available pizzas\n            lastUpdatedDate: 1494359198.656\n      properties:\n        slotTypes:\n          $ref: \"#/components/schemas/SlotTypeMetadataList\"\n        nextToken:\n          $ref: \"#/components/schemas/NextToken\"\n    GetUtterancesViewResponse:\n      type: object\n      properties:\n        botName:\n          $ref: \"#/components/schemas/BotName\"\n        utterances:\n          $ref: \"#/components/schemas/ListsOfUtterances\"\n    Version:\n      type: string\n      pattern: \\$LATEST|[0-9]+\n      minLength: 1\n      maxLength: 64\n    PutBotResponse:\n      type: object\n      example:\n        version: $LATEST\n        name: DocOrderPizzaBot\n        abortStatement:\n          messages:\n            - content: I don't understand. Can you try again?\n              contentType: PlainText\n            - content: I'm sorry, I don't understand.\n              contentType: PlainText\n        checksum: 20172ee3-fa06-49b2-bbc5-667c090303e9\n        childDirected: true\n        clarificationPrompt:\n          maxAttempts: 1\n          messages:\n            - content: I'm sorry, I didn't hear that. Can you repeate what you just\n                said?\n              contentType: PlainText\n            - content: Can you say that again?\n              contentType: PlainText\n        createdDate: 1494360160.133\n        description: Orders a pizza from a local pizzeria.\n        idleSessionTTLInSeconds: 300\n        intents:\n          - intentName: DocOrderPizza\n            intentVersion: $LATEST\n        lastUpdatedDate: 1494360160.133\n        locale: en-US\n        status: NOT_BUILT\n      properties:\n        name:\n          $ref: \"#/components/schemas/BotName\"\n        description:\n          $ref: \"#/components/schemas/Description\"\n        intents:\n          $ref: \"#/components/schemas/IntentList\"\n        clarificationPrompt:\n          $ref: \"#/components/schemas/Prompt\"\n        abortStatement:\n          $ref: \"#/components/schemas/Statement\"\n        status:\n          $ref: \"#/components/schemas/Status\"\n        failureReason:\n          $ref: \"#/components/schemas/String\"\n        lastUpdatedDate:\n          $ref: \"#/components/schemas/Timestamp\"\n        createdDate:\n          $ref: \"#/components/schemas/Timestamp\"\n        idleSessionTTLInSeconds:\n          $ref: \"#/components/schemas/SessionTTL\"\n        voiceId:\n          $ref: \"#/components/schemas/String\"\n        checksum:\n          $ref: \"#/components/schemas/String\"\n        version:\n          $ref: \"#/components/schemas/Version\"\n        locale:\n          $ref: \"#/components/schemas/Locale\"\n        childDirected:\n          $ref: \"#/components/schemas/Boolean\"\n        createVersion:\n          $ref: \"#/components/schemas/Boolean\"\n    Intent:\n      type: object\n      required:\n        - intentName\n        - intentVersion\n      properties:\n        intentName:\n          $ref: \"#/components/schemas/IntentName\"\n        intentVersion:\n          $ref: \"#/components/schemas/Version\"\n      description: Identifies the specific version of an intent.\n    MessageList:\n      type: array\n      items:\n        $ref: \"#/components/schemas/Message\"\n      minItems: 1\n      maxItems: 15\n    PromptMaxAttempts:\n      type: integer\n      minimum: 1\n      maximum: 5\n    ResponseCard:\n      type: string\n      minLength: 1\n      maxLength: 50000\n    PutBotAliasResponse:\n      type: object\n      properties:\n        name:\n          $ref: \"#/components/schemas/AliasName\"\n        description:\n          $ref: \"#/components/schemas/Description\"\n        botVersion:\n          $ref: \"#/components/schemas/Version\"\n        botName:\n          $ref: \"#/components/schemas/BotName\"\n        lastUpdatedDate:\n          $ref: \"#/components/schemas/Timestamp\"\n        createdDate:\n          $ref: \"#/components/schemas/Timestamp\"\n        checksum:\n          $ref: \"#/components/schemas/String\"\n    PutIntentResponse:\n      type: object\n      example:\n        version: $LATEST\n        name: DocOrderPizza\n        checksum: ca9bc13d-afc8-4706-bbaf-091f7a5935d6\n        conclusionStatement:\n          messages:\n            - content: All right, I ordered  you a {Crust} crust {Type} pizza with\n                {Sauce} sauce.\n              contentType: PlainText\n            - content: OK, your {Crust} crust {Type} pizza with {Sauce} sauce is on the\n                way.\n              contentType: PlainText\n          responseCard: foo\n        confirmationPrompt:\n          maxAttempts: 1\n          messages:\n            - content: Should I order  your {Crust} crust {Type} pizza with {Sauce}\n                sauce?\n              contentType: PlainText\n        createdDate: 1494359783.453\n        description: Order a pizza from a local pizzeria.\n        fulfillmentActivity:\n          type: ReturnIntent\n        lastUpdatedDate: 1494359783.453\n        rejectionStatement:\n          messages:\n            - content: Ok, I'll cancel your order.\n              contentType: PlainText\n            - content: I cancelled your order.\n              contentType: PlainText\n        sampleUtterances:\n          - Order me a pizza.\n          - Order me a {Type} pizza.\n          - I want a {Crust} crust {Type} pizza\n          - I want a {Crust} crust {Type} pizza with {Sauce} sauce.\n        slots:\n          - name: Sauce\n            description: The type of sauce to use on the pizza.\n            priority: 3\n            sampleUtterances:\n              - Make it {Sauce} sauce.\n              - I'd like {Sauce} sauce.\n            slotConstraint: Required\n            slotType: DocPizzaSauceType\n            slotTypeVersion: $LATEST\n            valueElicitationPrompt:\n              maxAttempts: 1\n              messages:\n                - content: White or red sauce?\n                  contentType: PlainText\n                - content: Garlic or tomato sauce?\n                  contentType: PlainText\n          - name: Type\n            description: The type of pizza to order.\n            priority: 1\n            sampleUtterances:\n              - Get me a {Type} pizza.\n              - A {Type} pizza please.\n              - I'd like a {Type} pizza.\n            slotConstraint: Required\n            slotType: DocPizzaType\n            slotTypeVersion: $LATEST\n            valueElicitationPrompt:\n              maxAttempts: 1\n              messages:\n                - content: What type of pizza would you like?\n                  contentType: PlainText\n                - content: Vegie or cheese pizza?\n                  contentType: PlainText\n                - content: I can get you a vegie or a cheese pizza.\n                  contentType: PlainText\n          - name: Crust\n            description: The type of pizza crust to order.\n            priority: 2\n            sampleUtterances:\n              - Make it a {Crust} crust.\n              - I'd like a {Crust} crust.\n            slotConstraint: Required\n            slotType: DocPizzaCrustType\n            slotTypeVersion: $LATEST\n            valueElicitationPrompt:\n              maxAttempts: 1\n              messages:\n                - content: What type of crust would you like?\n                  contentType: PlainText\n                - content: Thick or thin crust?\n                  contentType: PlainText\n      properties:\n        name:\n          $ref: \"#/components/schemas/IntentName\"\n        description:\n          $ref: \"#/components/schemas/Description\"\n        slots:\n          $ref: \"#/components/schemas/SlotList\"\n        sampleUtterances:\n          $ref: \"#/components/schemas/IntentUtteranceList\"\n        confirmationPrompt:\n          $ref: \"#/components/schemas/Prompt\"\n        rejectionStatement:\n          $ref: \"#/components/schemas/Statement\"\n        followUpPrompt:\n          $ref: \"#/components/schemas/FollowUpPrompt\"\n        conclusionStatement:\n          $ref: \"#/components/schemas/Statement\"\n        dialogCodeHook:\n          $ref: \"#/components/schemas/CodeHook\"\n        fulfillmentActivity:\n          $ref: \"#/components/schemas/FulfillmentActivity\"\n        parentIntentSignature:\n          $ref: \"#/components/schemas/BuiltinIntentSignature\"\n        lastUpdatedDate:\n          $ref: \"#/components/schemas/Timestamp\"\n        createdDate:\n          $ref: \"#/components/schemas/Timestamp\"\n        version:\n          $ref: \"#/components/schemas/Version\"\n        checksum:\n          $ref: \"#/components/schemas/String\"\n        createVersion:\n          $ref: \"#/components/schemas/Boolean\"\n    Slot:\n      type: object\n      required:\n        - name\n        - slotConstraint\n      properties:\n        name:\n          $ref: \"#/components/schemas/SlotName\"\n        description:\n          $ref: \"#/components/schemas/Description\"\n        slotConstraint:\n          $ref: \"#/components/schemas/SlotConstraint\"\n        slotType:\n          $ref: \"#/components/schemas/CustomOrBuiltinSlotTypeName\"\n        slotTypeVersion:\n          $ref: \"#/components/schemas/Version\"\n        valueElicitationPrompt:\n          $ref: \"#/components/schemas/Prompt\"\n        priority:\n          $ref: \"#/components/schemas/Priority\"\n        sampleUtterances:\n          $ref: \"#/components/schemas/SlotUtteranceList\"\n        responseCard:\n          $ref: \"#/components/schemas/ResponseCard\"\n      description: Identifies the version of a specific slot.\n    Utterance:\n      type: string\n      minLength: 1\n      maxLength: 200\n    Prompt:\n      type: object\n      required:\n        - messages\n        - maxAttempts\n      properties:\n        messages:\n          $ref: \"#/components/schemas/MessageList\"\n        maxAttempts:\n          $ref: \"#/components/schemas/PromptMaxAttempts\"\n        responseCard:\n          $ref: \"#/components/schemas/ResponseCard\"\n      description: Obtains information from the user. To define a prompt, provide one or\n        more messages and specify the number of attempts to get information from\n        the user. If you provide more than one message, Amazon Lex chooses one\n        of the messages to use to prompt the user. For more information, see\n        \u003ca\u003ehow-it-works\u003c/a\u003e.\n    Statement:\n      type: object\n      required:\n        - messages\n      properties:\n        messages:\n          $ref: \"#/components/schemas/MessageList\"\n        responseCard:\n          $ref: \"#/components/schemas/ResponseCard\"\n      description: \"A collection of messages that convey information to the user. At\n        runtime, Amazon Lex selects the message to convey. \"\n    LambdaARN:\n      type: string\n      pattern: arn:aws:lambda:[a-z]+-[a-z]+-[0-9]:[0-9]{12}:function:[a-zA-Z0-9-_]+(/[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12})?(:[a-zA-Z0-9-_]+)?\n      minLength: 20\n      maxLength: 2048\n    MessageVersion:\n      type: string\n      minLength: 1\n      maxLength: 5\n    FulfillmentActivityType:\n      type: string\n      enum:\n        - ReturnIntent\n        - CodeHook\n    CodeHook:\n      type: object\n      required:\n        - uri\n        - messageVersion\n      properties:\n        uri:\n          $ref: \"#/components/schemas/LambdaARN\"\n        messageVersion:\n          $ref: \"#/components/schemas/MessageVersion\"\n      description: Specifies a Lambda function that verifies requests to a bot or fulfills\n        the user's request to a bot..\n    PutSlotTypeResponse:\n      type: object\n      example:\n        version: $LATEST\n        name: DocPizzaSauceType\n        checksum: cfd00ed1-775d-4357-947c-aca7e73b44ba\n        createdDate: 1494356442.23\n        description: Available pizza sauces\n        enumerationValues:\n          - value: red\n          - value: white\n        lastUpdatedDate: 1494356442.23\n      properties:\n        name:\n          $ref: \"#/components/schemas/SlotTypeName\"\n        description:\n          $ref: \"#/components/schemas/Description\"\n        enumerationValues:\n          $ref: \"#/components/schemas/EnumerationValues\"\n        lastUpdatedDate:\n          $ref: \"#/components/schemas/Timestamp\"\n        createdDate:\n          $ref: \"#/components/schemas/Timestamp\"\n        version:\n          $ref: \"#/components/schemas/Version\"\n        checksum:\n          $ref: \"#/components/schemas/String\"\n        valueSelectionStrategy:\n          $ref: \"#/components/schemas/SlotValueSelectionStrategy\"\n        createVersion:\n          $ref: \"#/components/schemas/Boolean\"\n    EnumerationValue:\n      type: object\n      required:\n        - value\n      properties:\n        value:\n          $ref: \"#/components/schemas/Value\"\n        synonyms:\n          $ref: \"#/components/schemas/SynonymList\"\n      description: \u003cp\u003eEach slot type can have a set of values. Each enumeration value\n        represents a value the slot type can take. \u003c/p\u003e \u003cp\u003eFor example, a pizza\n        ordering bot could have a slot type that specifies the type of crust\n        that the pizza should have. The slot type could include the values \u003c/p\u003e\n        \u003cul\u003e \u003cli\u003e \u003cp\u003ethick\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003ethin\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003estuffed\u003c/p\u003e\n        \u003c/li\u003e \u003c/ul\u003e\n    StartImportResponse:\n      type: object\n      properties:\n        name:\n          $ref: \"#/components/schemas/Name\"\n        resourceType:\n          $ref: \"#/components/schemas/ResourceType\"\n        mergeStrategy:\n          $ref: \"#/components/schemas/MergeStrategy\"\n        importId:\n          $ref: \"#/components/schemas/String\"\n        importStatus:\n          $ref: \"#/components/schemas/ImportStatus\"\n        createdDate:\n          $ref: \"#/components/schemas/Timestamp\"\n    AliasName:\n      type: string\n      pattern: ^([A-Za-z]_?)+$\n      minLength: 1\n      maxLength: 100\n    AliasNameOrListAll:\n      type: string\n      pattern: ^(-|^([A-Za-z]_?)+$)$\n      minLength: 1\n      maxLength: 100\n    Blob:\n      type: string\n    Boolean:\n      type: boolean\n    Description:\n      type: string\n      minLength: 0\n      maxLength: 200\n    BotName:\n      type: string\n      pattern: ^([A-Za-z]_?)+$\n      minLength: 2\n      maxLength: 50\n    Timestamp:\n      type: string\n      format: date-time\n    String:\n      type: string\n    BotAliasMetadata:\n      type: object\n      properties:\n        name:\n          $ref: \"#/components/schemas/AliasName\"\n        description:\n          $ref: \"#/components/schemas/Description\"\n        botVersion:\n          $ref: \"#/components/schemas/Version\"\n        botName:\n          $ref: \"#/components/schemas/BotName\"\n        lastUpdatedDate:\n          $ref: \"#/components/schemas/Timestamp\"\n        createdDate:\n          $ref: \"#/components/schemas/Timestamp\"\n        checksum:\n          $ref: \"#/components/schemas/String\"\n      description: Provides information about a bot alias.\n    BotAliasMetadataList:\n      type: array\n      items:\n        $ref: \"#/components/schemas/BotAliasMetadata\"\n    BotChannelName:\n      type: string\n      pattern: ^([A-Za-z]_?)+$\n      minLength: 1\n      maxLength: 100\n    ChannelType:\n      type: string\n      enum:\n        - Facebook\n        - Slack\n        - Twilio-Sms\n        - Kik\n    ChannelConfigurationMap:\n      type: object\n      minProperties: 1\n      maxProperties: 10\n      additionalProperties:\n        $ref: \"#/components/schemas/String\"\n    ChannelStatus:\n      type: string\n      enum:\n        - IN_PROGRESS\n        - CREATED\n        - FAILED\n    BotChannelAssociation:\n      type: object\n      properties:\n        name:\n          $ref: \"#/components/schemas/BotChannelName\"\n        description:\n          $ref: \"#/components/schemas/Description\"\n        botAlias:\n          $ref: \"#/components/schemas/AliasName\"\n        botName:\n          $ref: \"#/components/schemas/BotName\"\n        createdDate:\n          $ref: \"#/components/schemas/Timestamp\"\n        type:\n          $ref: \"#/components/schemas/ChannelType\"\n        botConfiguration:\n          $ref: \"#/components/schemas/ChannelConfigurationMap\"\n        status:\n          $ref: \"#/components/schemas/ChannelStatus\"\n        failureReason:\n          $ref: \"#/components/schemas/String\"\n      description: Represents an association between an Amazon Lex bot and an external\n        messaging platform.\n    BotChannelAssociationList:\n      type: array\n      items:\n        $ref: \"#/components/schemas/BotChannelAssociation\"\n    Status:\n      type: string\n      enum:\n        - BUILDING\n        - READY\n        - READY_BASIC_TESTING\n        - FAILED\n        - NOT_BUILT\n    BotMetadata:\n      type: object\n      properties:\n        name:\n          $ref: \"#/components/schemas/BotName\"\n        description:\n          $ref: \"#/components/schemas/Description\"\n        status:\n          $ref: \"#/components/schemas/Status\"\n        lastUpdatedDate:\n          $ref: \"#/components/schemas/Timestamp\"\n        createdDate:\n          $ref: \"#/components/schemas/Timestamp\"\n        version:\n          $ref: \"#/components/schemas/Version\"\n      description: Provides information about a bot. .\n    BotMetadataList:\n      type: array\n      items:\n        $ref: \"#/components/schemas/BotMetadata\"\n    BotVersions:\n      type: array\n      items:\n        $ref: \"#/components/schemas/Version\"\n      minItems: 1\n      maxItems: 5\n    BuiltinIntentSignature:\n      type: string\n    LocaleList:\n      type: array\n      items:\n        $ref: \"#/components/schemas/Locale\"\n    BuiltinIntentMetadata:\n      type: object\n      properties:\n        signature:\n          $ref: \"#/components/schemas/BuiltinIntentSignature\"\n        supportedLocales:\n          $ref: \"#/components/schemas/LocaleList\"\n      description: Provides metadata for a built-in intent.\n    BuiltinIntentMetadataList:\n      type: array\n      items:\n        $ref: \"#/components/schemas/BuiltinIntentMetadata\"\n    BuiltinIntentSlot:\n      type: object\n      properties:\n        name:\n          $ref: \"#/components/schemas/String\"\n      description: Provides information about a slot used in a built-in intent.\n    BuiltinIntentSlotList:\n      type: array\n      items:\n        $ref: \"#/components/schemas/BuiltinIntentSlot\"\n    BuiltinSlotTypeSignature:\n      type: string\n    BuiltinSlotTypeMetadata:\n      type: object\n      properties:\n        signature:\n          $ref: \"#/components/schemas/BuiltinSlotTypeSignature\"\n        supportedLocales:\n          $ref: \"#/components/schemas/LocaleList\"\n      description: Provides information about a built in slot type.\n    BuiltinSlotTypeMetadataList:\n      type: array\n      items:\n        $ref: \"#/components/schemas/BuiltinSlotTypeMetadata\"\n    ContentString:\n      type: string\n      minLength: 1\n      maxLength: 1000\n    ContentType:\n      type: string\n      enum:\n        - PlainText\n        - SSML\n        - CustomPayload\n    Count:\n      type: integer\n    CreateBotVersionRequest:\n      type: object\n      properties:\n        checksum:\n          $ref: \"#/components/schemas/String\"\n    IntentList:\n      type: array\n      items:\n        $ref: \"#/components/schemas/Intent\"\n    SessionTTL:\n      type: integer\n      minimum: 60\n      maximum: 86400\n    Locale:\n      type: string\n      enum:\n        - en-US\n        - en-GB\n        - de-DE\n    IntentName:\n      type: string\n      pattern: ^([A-Za-z]_?)+$\n      minLength: 1\n      maxLength: 100\n    CreateIntentVersionRequest:\n      type: object\n      properties:\n        checksum:\n          $ref: \"#/components/schemas/String\"\n    SlotList:\n      type: array\n      items:\n        $ref: \"#/components/schemas/Slot\"\n      minItems: 0\n      maxItems: 100\n    IntentUtteranceList:\n      type: array\n      items:\n        $ref: \"#/components/schemas/Utterance\"\n      minItems: 0\n      maxItems: 1500\n    FollowUpPrompt:\n      type: object\n      required:\n        - prompt\n        - rejectionStatement\n      properties:\n        prompt:\n          $ref: \"#/components/schemas/Prompt\"\n        rejectionStatement:\n          $ref: \"#/components/schemas/Statement\"\n      description: A prompt for additional activity after an intent is fulfilled. For\n        example, after the \u003ccode\u003eOrderPizza\u003c/code\u003e intent is fulfilled, you\n        might prompt the user to find out whether the user wants to order\n        drinks.\n    FulfillmentActivity:\n      type: object\n      required:\n        - type\n      properties:\n        type:\n          $ref: \"#/components/schemas/FulfillmentActivityType\"\n        codeHook:\n          $ref: \"#/components/schemas/CodeHook\"\n      description: \u003cp\u003e Describes how the intent is fulfilled after the user provides all of\n        the information required for the intent. You can provide a Lambda\n        function to process the intent, or you can return the intent information\n        to the client application. We recommend that you use a Lambda function\n        so that the relevant logic lives in the Cloud and limit the client-side\n        code primarily to presentation. If you need to update the logic, you\n        only update the Lambda function; you don't need to upgrade your client\n        application. \u003c/p\u003e \u003cp\u003eConsider the following examples:\u003c/p\u003e \u003cul\u003e \u003cli\u003e\n        \u003cp\u003eIn a pizza ordering application, after the user provides all of the\n        information for placing an order, you use a Lambda function to place an\n        order with a pizzeria. \u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003eIn a gaming application, when\n        a user says \"pick up a rock,\" this information must go back to the\n        client application so that it can perform the operation and update the\n        graphics. In this case, you want Amazon Lex to return the intent data to\n        the client. \u003c/p\u003e \u003c/li\u003e \u003c/ul\u003e\n    SlotTypeName:\n      type: string\n      pattern: ^([A-Za-z]_?)+$\n      minLength: 1\n      maxLength: 100\n    CreateSlotTypeVersionRequest:\n      type: object\n      properties:\n        checksum:\n          $ref: \"#/components/schemas/String\"\n    EnumerationValues:\n      type: array\n      items:\n        $ref: \"#/components/schemas/EnumerationValue\"\n      minItems: 1\n      maxItems: 10000\n    SlotValueSelectionStrategy:\n      type: string\n      enum:\n        - ORIGINAL_VALUE\n        - TOP_RESOLUTION\n    CustomOrBuiltinSlotTypeName:\n      type: string\n      pattern: ^((AMAZON\\.)_?|[A-Za-z]_?)+\n      minLength: 1\n      maxLength: 100\n    DeleteBotAliasRequest:\n      type: object\n      properties: {}\n    DeleteBotChannelAssociationRequest:\n      type: object\n      properties: {}\n    DeleteBotRequest:\n      type: object\n      properties: {}\n    NumericalVersion:\n      type: string\n      pattern: \"[0-9]+\"\n      minLength: 1\n      maxLength: 64\n    DeleteBotVersionRequest:\n      type: object\n      properties: {}\n    DeleteIntentRequest:\n      type: object\n      properties: {}\n    DeleteIntentVersionRequest:\n      type: object\n      properties: {}\n    DeleteSlotTypeRequest:\n      type: object\n      properties: {}\n    DeleteSlotTypeVersionRequest:\n      type: object\n      properties: {}\n    UserId:\n      type: string\n      minLength: 2\n      maxLength: 100\n    DeleteUtterancesRequest:\n      type: object\n      properties: {}\n    Value:\n      type: string\n      minLength: 1\n      maxLength: 140\n    SynonymList:\n      type: array\n      items:\n        $ref: \"#/components/schemas/Value\"\n    ExportStatus:\n      type: string\n      enum:\n        - IN_PROGRESS\n        - READY\n        - FAILED\n    ExportType:\n      type: string\n      enum:\n        - ALEXA_SKILLS_KIT\n        - LEX\n    GetBotAliasRequest:\n      type: object\n      properties: {}\n    NextToken:\n      type: string\n    MaxResults:\n      type: integer\n      minimum: 1\n      maximum: 50\n    GetBotAliasesRequest:\n      type: object\n      properties: {}\n    GetBotChannelAssociationRequest:\n      type: object\n      properties: {}\n    GetBotChannelAssociationsRequest:\n      type: object\n      properties: {}\n    GetBotRequest:\n      type: object\n      properties: {}\n    GetBotVersionsRequest:\n      type: object\n      properties: {}\n    GetBotsRequest:\n      type: object\n      properties: {}\n    GetBuiltinIntentRequest:\n      type: object\n      properties: {}\n    GetBuiltinIntentsRequest:\n      type: object\n      properties: {}\n    GetBuiltinSlotTypesRequest:\n      type: object\n      properties: {}\n    Name:\n      type: string\n      pattern: \"[a-zA-Z_]+\"\n      minLength: 1\n      maxLength: 100\n    ResourceType:\n      type: string\n      enum:\n        - BOT\n        - INTENT\n        - SLOT_TYPE\n    GetExportRequest:\n      type: object\n      properties: {}\n    GetImportRequest:\n      type: object\n      properties: {}\n    MergeStrategy:\n      type: string\n      enum:\n        - OVERWRITE_LATEST\n        - FAIL_ON_CONFLICT\n    ImportStatus:\n      type: string\n      enum:\n        - IN_PROGRESS\n        - COMPLETE\n        - FAILED\n    StringList:\n      type: array\n      items:\n        $ref: \"#/components/schemas/String\"\n    GetIntentRequest:\n      type: object\n      properties: {}\n    GetIntentVersionsRequest:\n      type: object\n      properties: {}\n    IntentMetadataList:\n      type: array\n      items:\n        $ref: \"#/components/schemas/IntentMetadata\"\n    GetIntentsRequest:\n      type: object\n      properties: {}\n    GetSlotTypeRequest:\n      type: object\n      properties: {}\n    GetSlotTypeVersionsRequest:\n      type: object\n      properties: {}\n    SlotTypeMetadataList:\n      type: array\n      items:\n        $ref: \"#/components/schemas/SlotTypeMetadata\"\n    GetSlotTypesRequest:\n      type: object\n      properties: {}\n    StatusType:\n      type: string\n      enum:\n        - Detected\n        - Missed\n    GetUtterancesViewRequest:\n      type: object\n      properties: {}\n    ListsOfUtterances:\n      type: array\n      items:\n        $ref: \"#/components/schemas/UtteranceList\"\n    GroupNumber:\n      type: integer\n      minimum: 1\n      maximum: 5\n    IntentMetadata:\n      type: object\n      properties:\n        name:\n          $ref: \"#/components/schemas/IntentName\"\n        description:\n          $ref: \"#/components/schemas/Description\"\n        lastUpdatedDate:\n          $ref: \"#/components/schemas/Timestamp\"\n        createdDate:\n          $ref: \"#/components/schemas/Timestamp\"\n        version:\n          $ref: \"#/components/schemas/Version\"\n      description: Provides information about an intent.\n    UtteranceData:\n      type: object\n      properties:\n        utteranceString:\n          $ref: \"#/components/schemas/UtteranceString\"\n        count:\n          $ref: \"#/components/schemas/Count\"\n        distinctUsers:\n          $ref: \"#/components/schemas/Count\"\n        firstUtteredDate:\n          $ref: \"#/components/schemas/Timestamp\"\n        lastUtteredDate:\n          $ref: \"#/components/schemas/Timestamp\"\n      description: \"Provides information about a single utterance that was made to your\n        bot. \"\n    ListOfUtterance:\n      type: array\n      items:\n        $ref: \"#/components/schemas/UtteranceData\"\n    UtteranceList:\n      type: object\n      properties:\n        botVersion:\n          $ref: \"#/components/schemas/Version\"\n        utterances:\n          $ref: \"#/components/schemas/ListOfUtterance\"\n      description: Provides a list of utterances that have been made to a specific version\n        of your bot. The list contains a maximum of 100 utterances.\n    Message:\n      type: object\n      required:\n        - contentType\n        - content\n      properties:\n        contentType:\n          $ref: \"#/components/schemas/ContentType\"\n        content:\n          $ref: \"#/components/schemas/ContentString\"\n        groupNumber:\n          $ref: \"#/components/schemas/GroupNumber\"\n      description: The message object that provides the message text and its type.\n    Priority:\n      type: integer\n      minimum: 0\n      maximum: 100\n    ProcessBehavior:\n      type: string\n      enum:\n        - SAVE\n        - BUILD\n    PutBotAliasRequest:\n      type: object\n      required:\n        - botVersion\n      properties:\n        description:\n          $ref: \"#/components/schemas/Description\"\n        botVersion:\n          $ref: \"#/components/schemas/Version\"\n        checksum:\n          $ref: \"#/components/schemas/String\"\n    PutBotRequest:\n      type: object\n      required:\n        - locale\n        - childDirected\n      properties:\n        description:\n          $ref: \"#/components/schemas/Description\"\n        intents:\n          $ref: \"#/components/schemas/IntentList\"\n        clarificationPrompt:\n          $ref: \"#/components/schemas/Prompt\"\n        abortStatement:\n          $ref: \"#/components/schemas/Statement\"\n        idleSessionTTLInSeconds:\n          $ref: \"#/components/schemas/SessionTTL\"\n        voiceId:\n          $ref: \"#/components/schemas/String\"\n        checksum:\n          $ref: \"#/components/schemas/String\"\n        processBehavior:\n          $ref: \"#/components/schemas/ProcessBehavior\"\n        locale:\n          $ref: \"#/components/schemas/Locale\"\n        childDirected:\n          $ref: \"#/components/schemas/Boolean\"\n        createVersion:\n          $ref: \"#/components/schemas/Boolean\"\n    PutIntentRequest:\n      type: object\n      properties:\n        description:\n          $ref: \"#/components/schemas/Description\"\n        slots:\n          $ref: \"#/components/schemas/SlotList\"\n        sampleUtterances:\n          $ref: \"#/components/schemas/IntentUtteranceList\"\n        confirmationPrompt:\n          $ref: \"#/components/schemas/Prompt\"\n        rejectionStatement:\n          $ref: \"#/components/schemas/Statement\"\n        followUpPrompt:\n          $ref: \"#/components/schemas/FollowUpPrompt\"\n        conclusionStatement:\n          $ref: \"#/components/schemas/Statement\"\n        dialogCodeHook:\n          $ref: \"#/components/schemas/CodeHook\"\n        fulfillmentActivity:\n          $ref: \"#/components/schemas/FulfillmentActivity\"\n        parentIntentSignature:\n          $ref: \"#/components/schemas/BuiltinIntentSignature\"\n        checksum:\n          $ref: \"#/components/schemas/String\"\n        createVersion:\n          $ref: \"#/components/schemas/Boolean\"\n    PutSlotTypeRequest:\n      type: object\n      properties:\n        description:\n          $ref: \"#/components/schemas/Description\"\n        enumerationValues:\n          $ref: \"#/components/schemas/EnumerationValues\"\n        checksum:\n          $ref: \"#/components/schemas/String\"\n        valueSelectionStrategy:\n          $ref: \"#/components/schemas/SlotValueSelectionStrategy\"\n        createVersion:\n          $ref: \"#/components/schemas/Boolean\"\n    SlotName:\n      type: string\n      pattern: ^([A-Za-z](-|_|.)?)+$\n      minLength: 1\n      maxLength: 100\n    SlotConstraint:\n      type: string\n      enum:\n        - Required\n        - Optional\n    SlotUtteranceList:\n      type: array\n      items:\n        $ref: \"#/components/schemas/Utterance\"\n      minItems: 0\n      maxItems: 10\n    SlotTypeMetadata:\n      type: object\n      properties:\n        name:\n          $ref: \"#/components/schemas/SlotTypeName\"\n        description:\n          $ref: \"#/components/schemas/Description\"\n        lastUpdatedDate:\n          $ref: \"#/components/schemas/Timestamp\"\n        createdDate:\n          $ref: \"#/components/schemas/Timestamp\"\n        version:\n          $ref: \"#/components/schemas/Version\"\n      description: Provides information about a slot type..\n    StartImportRequest:\n      type: object\n      required:\n        - payload\n        - resourceType\n        - mergeStrategy\n      properties:\n        payload:\n          $ref: \"#/components/schemas/Blob\"\n        resourceType:\n          $ref: \"#/components/schemas/ResourceType\"\n        mergeStrategy:\n          $ref: \"#/components/schemas/MergeStrategy\"\n    UtteranceString:\n      type: string\n      minLength: 1\n      maxLength: 2000\n",
			"canonicalURL": "/github.com/restful-ma/thresholds@5b0b2a3322d3b2b7c0e0f2c0c0ad0e524e67bf82/-/blob/benchmark-repository/openapi/amazonaws.com-lex-models-2017-04-19-swagger.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/restful-ma/thresholds/blob/5b0b2a3322d3b2b7c0e0f2c0c0ad0e524e67bf82/benchmark-repository/openapi/amazonaws.com-lex-models-2017-04-19-swagger.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "parse: parse spec: parse operations: at 1:83861: duplicate path: \"/bots/{name}/versions/{versionoralias}\""
}