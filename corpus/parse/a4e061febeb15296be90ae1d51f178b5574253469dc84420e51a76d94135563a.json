{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/open-formulieren/open-forms"
		},
		"file": {
			"name": "openapi.yaml",
			"size": 0,
			"path": "src/openapi.yaml",
			"byteSize": 154706,
			"content": "openapi: 3.0.3\ninfo:\n  title: Open Forms API\n  version: 1.0.0\n  description: |2\n\n    Open Forms provides an API to manage multi-page or multi-step forms.\n\n    It supports listing and retrieving forms, which are made up of form steps. Each form\n    step has a form definition driven by [FormIO.js](https://github.com/formio/formio.js/)\n    definitions.\n\n    Submissions of forms are supported, where each form step can be submitted individually.\n    Complete submissions are sent to the configured backend, which is a pluggable system\n    to hook into [Open Zaak](https://openzaak.org), [Camunda](https://camunda.com/) or\n    other systems.\n\n    Open Forms fits in the [Common Ground](https://commonground.nl) vision and architecture,\n    and it plays nice with other available components.\n  contact:\n    url: https://github.com/maykinmedia/open-forms\n    email: support@maykinmedia.nl\n  license:\n    name: UNLICENSED\npaths:\n  /api/v1/appointments/{submission_uuid}/cancel:\n    post:\n      operationId: appointments_cancel_create\n      summary: Cancel an appointment\n      parameters:\n      - in: path\n        name: submission_uuid\n        schema:\n          type: string\n          format: uuid\n        required: true\n      tags:\n      - appointments\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/CancelAppointmentInput'\n          application/x-www-form-urlencoded:\n            schema:\n              $ref: '#/components/schemas/CancelAppointmentInput'\n          multipart/form-data:\n            schema:\n              $ref: '#/components/schemas/CancelAppointmentInput'\n        required: true\n      responses:\n        '204':\n          description: No response body\n          headers:\n            X-Session-Expires-In:\n              $ref: '#/components/headers/X-Session-Expires-In'\n        '403':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Exception'\n          description: Unable to verify ownership of the appointment.\n          headers:\n            X-Session-Expires-In:\n              $ref: '#/components/headers/X-Session-Expires-In'\n        '502':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Exception'\n          description: Unable to cancel appointment.\n          headers:\n            X-Session-Expires-In:\n              $ref: '#/components/headers/X-Session-Expires-In'\n  /api/v1/appointments/dates:\n    get:\n      operationId: appointments_dates_list\n      description: |-\n        List all dates for a given product.\n\n        Note that you must include valid querystring parameters to get actual results. If\n        you don't, then an empty list is returned.\n      summary: List available dates for a given location and product\n      parameters:\n      - in: query\n        name: location_id\n        schema:\n          type: string\n        description: ID of the location\n        required: true\n      - in: query\n        name: product_id\n        schema:\n          type: string\n        description: ID of the product\n        required: true\n      tags:\n      - appointments\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/Date'\n          description: ''\n          headers:\n            X-Session-Expires-In:\n              $ref: '#/components/headers/X-Session-Expires-In'\n  /api/v1/appointments/locations:\n    get:\n      operationId: appointments_locations_list\n      description: |-\n        List all locations for a given product.\n\n        Note that you must include valid querystring parameters to get actual results. If\n        you don't, then an empty list is returned.\n      summary: List available locations for a given product\n      parameters:\n      - in: query\n        name: product_id\n        schema:\n          type: string\n        description: ID of the product\n        required: true\n      tags:\n      - appointments\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/Location'\n          description: ''\n          headers:\n            X-Session-Expires-In:\n              $ref: '#/components/headers/X-Session-Expires-In'\n  /api/v1/appointments/products:\n    get:\n      operationId: appointments_products_list\n      description: List all products a user can choose when making an appointment.\n      summary: List available products\n      tags:\n      - appointments\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/AppointmentProduct'\n          description: ''\n          headers:\n            X-Session-Expires-In:\n              $ref: '#/components/headers/X-Session-Expires-In'\n  /api/v1/appointments/times:\n    get:\n      operationId: appointments_times_list\n      description: |-\n        List all times for a given product.\n\n        Note that you must include valid querystring parameters to get actual results. If\n        you don't, then an empty list is returned.\n      summary: List available times for a given location, product, and date\n      parameters:\n      - in: query\n        name: date\n        schema:\n          type: string\n          format: date\n        description: The date\n        required: true\n      - in: query\n        name: location_id\n        schema:\n          type: string\n        description: ID of the location\n        required: true\n      - in: query\n        name: product_id\n        schema:\n          type: string\n        description: ID of the product\n        required: true\n      tags:\n      - appointments\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/Time'\n          description: ''\n          headers:\n            X-Session-Expires-In:\n              $ref: '#/components/headers/X-Session-Expires-In'\n  /api/v1/authentication/{uuid}/session:\n    delete:\n      operationId: submission_session_destroy\n      description: 'Calling this endpoint will clear the current form and submission\n        from the session. This also clears the form authentication state and calls\n        the authentication plugin logout handler, if authenticated. '\n      summary: Delete form session\n      parameters:\n      - in: path\n        name: uuid\n        schema:\n          type: string\n          format: uuid\n        required: true\n      tags:\n      - authentication\n      responses:\n        '204':\n          description: No response body\n          headers:\n            X-Session-Expires-In:\n              $ref: '#/components/headers/X-Session-Expires-In'\n  /api/v1/authentication/plugins:\n    get:\n      operationId: authentication_plugins_list\n      description: |-\n        List all authentication plugins that have been registered.\n\n        Each authentication plugin is tied to a particular (third-party) authentication\n        provider. An authentication plugin usually provides a particular authentication\n        attribute, such as the ``BSN`` or Chamber of Commerce number. A plugin may provide\n        zero, one or multiple authentication attributes.\n      summary: List available authentication plugins\n      tags:\n      - authentication\n      security:\n      - cookieAuth: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/AuthPlugin'\n          description: ''\n          headers:\n            X-Session-Expires-In:\n              $ref: '#/components/headers/X-Session-Expires-In'\n  /api/v1/authentication/session:\n    delete:\n      operationId: authentication_session_destroy\n      description: 'Calling this endpoint will clear the current user session and\n        delete the session cookie. This endpoint is deprecated, instead use the submission-specific\n        endpoint. '\n      summary: Delete session\n      tags:\n      - authentication\n      security:\n      - {}\n      deprecated: true\n      responses:\n        '204':\n          description: No response body\n          headers:\n            X-Session-Expires-In:\n              $ref: '#/components/headers/X-Session-Expires-In'\n  /api/v1/config/privacy_policy_info:\n    get:\n      operationId: config_privacy_policy_info_retrieve\n      summary: Privacybeleid informatie\n      tags:\n      - config\n      security:\n      - tokenAuth: []\n      - cookieAuth: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PrivacyPolicyInfo'\n          description: ''\n          headers:\n            X-Session-Expires-In:\n              $ref: '#/components/headers/X-Session-Expires-In'\n  /api/v1/form-definitions:\n    get:\n      operationId: form_definitions_list\n      summary: List form step definitions\n      parameters:\n      - name: page\n        required: false\n        in: query\n        description: A page number within the paginated result set.\n        schema:\n          type: integer\n      tags:\n      - forms\n      - form-definitions\n      security:\n      - tokenAuth: []\n      - cookieAuth: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PaginatedFormDefinitionList'\n          description: ''\n          headers:\n            X-Session-Expires-In:\n              $ref: '#/components/headers/X-Session-Expires-In'\n    post:\n      operationId: form_definitions_create\n      summary: Create a form definition\n      tags:\n      - forms\n      - form-definitions\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/FormDefinition'\n        required: true\n      security:\n      - tokenAuth: []\n      - cookieAuth: []\n      responses:\n        '201':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/FormDefinition'\n          description: ''\n          headers:\n            X-Session-Expires-In:\n              $ref: '#/components/headers/X-Session-Expires-In'\n  /api/v1/form-definitions/{uuid}:\n    get:\n      operationId: form_definitions_retrieve\n      summary: Retrieve form step definition details\n      parameters:\n      - in: path\n        name: uuid\n        schema:\n          type: string\n          format: uuid\n        required: true\n      tags:\n      - forms\n      - form-definitions\n      security:\n      - tokenAuth: []\n      - cookieAuth: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/FormDefinitionDetail'\n          description: ''\n          headers:\n            X-Session-Expires-In:\n              $ref: '#/components/headers/X-Session-Expires-In'\n    put:\n      operationId: form_definitions_update\n      summary: Update all details of a form definition\n      parameters:\n      - in: path\n        name: uuid\n        schema:\n          type: string\n          format: uuid\n        required: true\n      tags:\n      - forms\n      - form-definitions\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/FormDefinition'\n        required: true\n      security:\n      - tokenAuth: []\n      - cookieAuth: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/FormDefinition'\n          description: ''\n          headers:\n            X-Session-Expires-In:\n              $ref: '#/components/headers/X-Session-Expires-In'\n    patch:\n      operationId: form_definitions_partial_update\n      summary: Update some details of a form definition\n      parameters:\n      - in: path\n        name: uuid\n        schema:\n          type: string\n          format: uuid\n        required: true\n      tags:\n      - forms\n      - form-definitions\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/PatchedFormDefinition'\n      security:\n      - tokenAuth: []\n      - cookieAuth: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/FormDefinition'\n          description: ''\n          headers:\n            X-Session-Expires-In:\n              $ref: '#/components/headers/X-Session-Expires-In'\n    delete:\n      operationId: form_definitions_destroy\n      summary: Delete a form definition\n      parameters:\n      - in: path\n        name: uuid\n        schema:\n          type: string\n          format: uuid\n        required: true\n      tags:\n      - forms\n      - form-definitions\n      security:\n      - tokenAuth: []\n      - cookieAuth: []\n      responses:\n        '204':\n          description: No response body\n          headers:\n            X-Session-Expires-In:\n              $ref: '#/components/headers/X-Session-Expires-In'\n  /api/v1/form-definitions/{uuid}/configuration:\n    get:\n      operationId: form_definitions_configuration_retrieve\n      description: |-\n        Return the raw FormIO.js configuration definition.\n\n        This excludes all the meta-data and just returns the JSON schema blob. In\n        theory, this can be fed directly to a FormIO.js renderer, but note that there\n        may be custom field types in play.\n      summary: Retrieve form definition JSON schema\n      parameters:\n      - in: path\n        name: uuid\n        schema:\n          type: string\n          format: uuid\n        required: true\n      tags:\n      - forms\n      security:\n      - tokenAuth: []\n      - cookieAuth: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                type: object\n                additionalProperties: {}\n          description: ''\n          headers:\n            X-Session-Expires-In:\n              $ref: '#/components/headers/X-Session-Expires-In'\n  /api/v1/formio/fileupload:\n    post:\n      operationId: formio_fileupload_create\n      description: |-\n        Bestandsuploadhandler voor het Form.io bestandsupload opslagtype 'url'.\n\n        Bestandsuploads worden tijdelijke opgeslagen en moeten gekoppeld worden aan een inzending.\n\n        Toegang tot dit endpoint vereist een actieve formulier inzending. Niet gekoppelde bestanden worden automatisch verwijderd na 2 dag(en).\n\n        De maximale toegestane upload-bestandsgrootte is `50,0 MB` voor deze instantie. Merk op dat dit inclusief multipart-metadata en boundaries is. De daadwerkelijke maximale bestandsgrootte is dus iets lager dan deze waarde.\n      summary: Create temporary file upload\n      tags:\n      - formio\n      requestBody:\n        content:\n          multipart/form-data:\n            schema:\n              $ref: '#/components/schemas/TemporaryFileUpload'\n        required: true\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/TemporaryFileUpload'\n          description: ''\n          headers:\n            X-Session-Expires-In:\n              $ref: '#/components/headers/X-Session-Expires-In'\n        '400':\n          content:\n            text/plain:\n              schema:\n                type: string\n          description: ''\n          headers:\n            X-Session-Expires-In:\n              $ref: '#/components/headers/X-Session-Expires-In'\n  /api/v1/forms:\n    get:\n      operationId: forms_list\n      description: |-\n        Geef een lijst van actieve formulieren, inclusief verwijzingen naar de formulierstappen. De formulierstappen komen voor in de volgorde waarin ze zichtbaar moeten zijn.\n\n        **Waarschuwing: de gegevens in het antwoord zijn afhankelijk van je gebruikersrechten**\n\n        Gebruikers die geen beheerder zijn, ontvangen maar een deel van de gedocumenteerde velden - deze zijn enkel relevant voor interne formulierconfiguratie. Het gaat om de velden:\n\n        - `internalName`\n        - `registrationBackend`\n        - `registrationBackendOptions`\n        - `paymentBackend`\n        - `paymentBackendOptions`\n        - `product`\n        - `isDeleted`\n        - `submissionConfirmationTemplate`\n        - `submissionsRemovalOptions`\n        - `confirmationEmailTemplate`\n        - `confirmationEmailOption`\n        - `displayMainWebsiteLink`\n      summary: List forms\n      parameters:\n      - in: header\n        name: X-CSP-Nonce\n        schema:\n          type: string\n        description: The value of the CSP nonce generated by the page embedding the\n          SDK. If provided, fields containing rich text from WYSIWYG editors will\n          be post-processed to allow inline styles with the provided nonce. If the\n          embedding page emits a `style-src` policy containing `unsafe-inline`, then\n          you can omit this header without losing functionality. We recommend favouring\n          the nonce mechanism though.\n      tags:\n      - forms\n      security:\n      - tokenAuth: []\n      - cookieAuth: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/Form'\n          description: ''\n          headers:\n            X-Session-Expires-In:\n              $ref: '#/components/headers/X-Session-Expires-In'\n    post:\n      operationId: forms_create\n      description: |-\n        Manage forms.\n\n        Forms are collections of form steps, where each form step points to a formio.js\n        form definition. Multiple definitions are combined in logical steps to build a\n        multi-step/page form for end-users to fill out. Form definitions can be (and are)\n        re-used among different forms.\n\n        **Warning: the response data depends on user permissions**\n\n        Non-staff users receive a subset of the documented fields which are used\n        for internal form configuration. These fields are:\n\n        - `internalName`\n        - `registrationBackend`\n        - `registrationBackendOptions`\n        - `paymentBackend`\n        - `paymentBackendOptions`\n        - `product`\n        - `isDeleted`\n        - `submissionConfirmationTemplate`\n        - `submissionsRemovalOptions`\n        - `confirmationEmailTemplate`\n        - `confirmationEmailOption`\n        - `displayMainWebsiteLink`\n      summary: Create form\n      parameters:\n      - in: header\n        name: X-CSP-Nonce\n        schema:\n          type: string\n        description: The value of the CSP nonce generated by the page embedding the\n          SDK. If provided, fields containing rich text from WYSIWYG editors will\n          be post-processed to allow inline styles with the provided nonce. If the\n          embedding page emits a `style-src` policy containing `unsafe-inline`, then\n          you can omit this header without losing functionality. We recommend favouring\n          the nonce mechanism though.\n      tags:\n      - forms\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Form'\n        required: true\n      security:\n      - tokenAuth: []\n      - cookieAuth: []\n      responses:\n        '201':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Form'\n          description: ''\n          headers:\n            X-Session-Expires-In:\n              $ref: '#/components/headers/X-Session-Expires-In'\n  /api/v1/forms-import:\n    post:\n      operationId: forms_import_create\n      description: |-\n        Import a Form by uploading a .zip file containing a Form, FormDefinitions\n        and FormSteps\n      summary: Import form\n      tags:\n      - forms\n      requestBody:\n        content:\n          '*/*':\n            schema:\n              $ref: '#/components/schemas/FormImport'\n        required: true\n      security:\n      - tokenAuth: []\n      responses:\n        '204':\n          content:\n            application/json:\n              schema:\n                description: No response body\n          description: ''\n          headers:\n            X-Session-Expires-In:\n              $ref: '#/components/headers/X-Session-Expires-In'\n  /api/v1/forms/{form_uuid_or_slug}/steps:\n    get:\n      operationId: forms_steps_list\n      summary: List form steps\n      parameters:\n      - in: path\n        name: form_uuid_or_slug\n        schema:\n          type: string\n        description: Either a UUID4 or a slug identifiying the form.\n        required: true\n      tags:\n      - forms\n      security:\n      - tokenAuth: []\n      - cookieAuth: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/FormStep'\n          description: ''\n          headers:\n            X-Session-Expires-In:\n              $ref: '#/components/headers/X-Session-Expires-In'\n    post:\n      operationId: forms_steps_create\n      summary: Create a form step\n      parameters:\n      - in: path\n        name: form_uuid_or_slug\n        schema:\n          type: string\n        description: Either a UUID4 or a slug identifiying the form.\n        required: true\n      tags:\n      - forms\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/FormStep'\n          application/x-www-form-urlencoded:\n            schema:\n              $ref: '#/components/schemas/FormStep'\n          multipart/form-data:\n            schema:\n              $ref: '#/components/schemas/FormStep'\n        required: true\n      security:\n      - tokenAuth: []\n      - cookieAuth: []\n      responses:\n        '201':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/FormStep'\n          description: ''\n          headers:\n            X-Session-Expires-In:\n              $ref: '#/components/headers/X-Session-Expires-In'\n  /api/v1/forms/{form_uuid_or_slug}/steps/{uuid}:\n    get:\n      operationId: forms_steps_retrieve\n      summary: Retrieve form step details\n      parameters:\n      - in: path\n        name: form_uuid_or_slug\n        schema:\n          type: string\n        description: Either a UUID4 or a slug identifiying the form.\n        required: true\n      - in: path\n        name: uuid\n        schema:\n          type: string\n          format: uuid\n        required: true\n      tags:\n      - forms\n      security:\n      - tokenAuth: []\n      - cookieAuth: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/FormStep'\n          description: ''\n          headers:\n            X-Session-Expires-In:\n              $ref: '#/components/headers/X-Session-Expires-In'\n    put:\n      operationId: forms_steps_update\n      summary: Update all details of a form step\n      parameters:\n      - in: path\n        name: form_uuid_or_slug\n        schema:\n          type: string\n        description: Either a UUID4 or a slug identifiying the form.\n        required: true\n      - in: path\n        name: uuid\n        schema:\n          type: string\n          format: uuid\n        required: true\n      tags:\n      - forms\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/FormStep'\n          application/x-www-form-urlencoded:\n            schema:\n              $ref: '#/components/schemas/FormStep'\n          multipart/form-data:\n            schema:\n              $ref: '#/components/schemas/FormStep'\n        required: true\n      security:\n      - tokenAuth: []\n      - cookieAuth: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/FormStep'\n          description: ''\n          headers:\n            X-Session-Expires-In:\n              $ref: '#/components/headers/X-Session-Expires-In'\n    patch:\n      operationId: forms_steps_partial_update\n      summary: Update some details of a form step\n      parameters:\n      - in: path\n        name: form_uuid_or_slug\n        schema:\n          type: string\n        description: Either a UUID4 or a slug identifiying the form.\n        required: true\n      - in: path\n        name: uuid\n        schema:\n          type: string\n          format: uuid\n        required: true\n      tags:\n      - forms\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/PatchedFormStep'\n          application/x-www-form-urlencoded:\n            schema:\n              $ref: '#/components/schemas/PatchedFormStep'\n          multipart/form-data:\n            schema:\n              $ref: '#/components/schemas/PatchedFormStep'\n      security:\n      - tokenAuth: []\n      - cookieAuth: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/FormStep'\n          description: ''\n          headers:\n            X-Session-Expires-In:\n              $ref: '#/components/headers/X-Session-Expires-In'\n    delete:\n      operationId: forms_steps_destroy\n      summary: Delete a form step\n      parameters:\n      - in: path\n        name: form_uuid_or_slug\n        schema:\n          type: string\n        description: Either a UUID4 or a slug identifiying the form.\n        required: true\n      - in: path\n        name: uuid\n        schema:\n          type: string\n          format: uuid\n        required: true\n      tags:\n      - forms\n      security:\n      - tokenAuth: []\n      - cookieAuth: []\n      responses:\n        '204':\n          description: No response body\n          headers:\n            X-Session-Expires-In:\n              $ref: '#/components/headers/X-Session-Expires-In'\n  /api/v1/forms/{form_uuid_or_slug}/versions:\n    get:\n      operationId: forms_versions_list\n      summary: List form versions\n      parameters:\n      - in: path\n        name: form_uuid_or_slug\n        schema:\n          type: string\n        description: Either a UUID4 or a slug identifying the form.\n        required: true\n      tags:\n      - forms\n      security:\n      - tokenAuth: []\n      - cookieAuth: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/FormVersion'\n          description: ''\n          headers:\n            X-Session-Expires-In:\n              $ref: '#/components/headers/X-Session-Expires-In'\n    post:\n      operationId: forms_versions_create\n      description: Save the current version of the form so that it can later be retrieved\n      summary: Save form version\n      parameters:\n      - in: path\n        name: form_uuid_or_slug\n        schema:\n          type: string\n        description: Either a UUID4 or a slug identifying the form.\n        required: true\n      tags:\n      - forms\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/FormVersion'\n          application/x-www-form-urlencoded:\n            schema:\n              $ref: '#/components/schemas/FormVersion'\n          multipart/form-data:\n            schema:\n              $ref: '#/components/schemas/FormVersion'\n      security:\n      - tokenAuth: []\n      - cookieAuth: []\n      responses:\n        '201':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/FormVersion'\n          description: ''\n          headers:\n            X-Session-Expires-In:\n              $ref: '#/components/headers/X-Session-Expires-In'\n  /api/v1/forms/{form_uuid_or_slug}/versions/{uuid}/restore:\n    post:\n      operationId: forms_versions_restore_create\n      description: Restore a previously saved version of a form.\n      summary: Restore form version\n      parameters:\n      - in: path\n        name: form_uuid_or_slug\n        schema:\n          type: string\n        description: Either a UUID4 or a slug identifying the form.\n        required: true\n      - in: path\n        name: uuid\n        schema:\n          type: string\n        description: The UUID of the form version\n        required: true\n      tags:\n      - forms\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/FormVersion'\n          application/x-www-form-urlencoded:\n            schema:\n              $ref: '#/components/schemas/FormVersion'\n          multipart/form-data:\n            schema:\n              $ref: '#/components/schemas/FormVersion'\n      security:\n      - tokenAuth: []\n      - cookieAuth: []\n      responses:\n        '204':\n          description: No response body\n          headers:\n            X-Session-Expires-In:\n              $ref: '#/components/headers/X-Session-Expires-In'\n  /api/v1/forms/{uuid_or_slug}:\n    get:\n      operationId: forms_retrieve\n      description: |-\n        Manage forms.\n\n        Forms are collections of form steps, where each form step points to a formio.js\n        form definition. Multiple definitions are combined in logical steps to build a\n        multi-step/page form for end-users to fill out. Form definitions can be (and are)\n        re-used among different forms.\n\n        **Warning: the response data depends on user permissions**\n\n        Non-staff users receive a subset of the documented fields which are used\n        for internal form configuration. These fields are:\n\n        - `internalName`\n        - `registrationBackend`\n        - `registrationBackendOptions`\n        - `paymentBackend`\n        - `paymentBackendOptions`\n        - `product`\n        - `isDeleted`\n        - `submissionConfirmationTemplate`\n        - `submissionsRemovalOptions`\n        - `confirmationEmailTemplate`\n        - `confirmationEmailOption`\n        - `displayMainWebsiteLink`\n      summary: Retrieve form details\n      parameters:\n      - in: header\n        name: X-CSP-Nonce\n        schema:\n          type: string\n        description: The value of the CSP nonce generated by the page embedding the\n          SDK. If provided, fields containing rich text from WYSIWYG editors will\n          be post-processed to allow inline styles with the provided nonce. If the\n          embedding page emits a `style-src` policy containing `unsafe-inline`, then\n          you can omit this header without losing functionality. We recommend favouring\n          the nonce mechanism though.\n      - in: path\n        name: uuid_or_slug\n        schema:\n          type: string\n        description: Either a UUID4 or a slug identifiying the form.\n        required: true\n      tags:\n      - forms\n      security:\n      - tokenAuth: []\n      - cookieAuth: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Form'\n          description: ''\n          headers:\n            X-Session-Expires-In:\n              $ref: '#/components/headers/X-Session-Expires-In'\n    put:\n      operationId: forms_update\n      description: |-\n        Manage forms.\n\n        Forms are collections of form steps, where each form step points to a formio.js\n        form definition. Multiple definitions are combined in logical steps to build a\n        multi-step/page form for end-users to fill out. Form definitions can be (and are)\n        re-used among different forms.\n\n        **Warning: the response data depends on user permissions**\n\n        Non-staff users receive a subset of the documented fields which are used\n        for internal form configuration. These fields are:\n\n        - `internalName`\n        - `registrationBackend`\n        - `registrationBackendOptions`\n        - `paymentBackend`\n        - `paymentBackendOptions`\n        - `product`\n        - `isDeleted`\n        - `submissionConfirmationTemplate`\n        - `submissionsRemovalOptions`\n        - `confirmationEmailTemplate`\n        - `confirmationEmailOption`\n        - `displayMainWebsiteLink`\n      summary: Update all details of a form\n      parameters:\n      - in: header\n        name: X-CSP-Nonce\n        schema:\n          type: string\n        description: The value of the CSP nonce generated by the page embedding the\n          SDK. If provided, fields containing rich text from WYSIWYG editors will\n          be post-processed to allow inline styles with the provided nonce. If the\n          embedding page emits a `style-src` policy containing `unsafe-inline`, then\n          you can omit this header without losing functionality. We recommend favouring\n          the nonce mechanism though.\n      - in: path\n        name: uuid_or_slug\n        schema:\n          type: string\n        description: Either a UUID4 or a slug identifiying the form.\n        required: true\n      tags:\n      - forms\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Form'\n        required: true\n      security:\n      - tokenAuth: []\n      - cookieAuth: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Form'\n          description: ''\n          headers:\n            X-Session-Expires-In:\n              $ref: '#/components/headers/X-Session-Expires-In'\n    patch:\n      operationId: forms_partial_update\n      description: |-\n        Manage forms.\n\n        Forms are collections of form steps, where each form step points to a formio.js\n        form definition. Multiple definitions are combined in logical steps to build a\n        multi-step/page form for end-users to fill out. Form definitions can be (and are)\n        re-used among different forms.\n\n        **Warning: the response data depends on user permissions**\n\n        Non-staff users receive a subset of the documented fields which are used\n        for internal form configuration. These fields are:\n\n        - `internalName`\n        - `registrationBackend`\n        - `registrationBackendOptions`\n        - `paymentBackend`\n        - `paymentBackendOptions`\n        - `product`\n        - `isDeleted`\n        - `submissionConfirmationTemplate`\n        - `submissionsRemovalOptions`\n        - `confirmationEmailTemplate`\n        - `confirmationEmailOption`\n        - `displayMainWebsiteLink`\n      summary: Update given details of a form\n      parameters:\n      - in: header\n        name: X-CSP-Nonce\n        schema:\n          type: string\n        description: The value of the CSP nonce generated by the page embedding the\n          SDK. If provided, fields containing rich text from WYSIWYG editors will\n          be post-processed to allow inline styles with the provided nonce. If the\n          embedding page emits a `style-src` policy containing `unsafe-inline`, then\n          you can omit this header without losing functionality. We recommend favouring\n          the nonce mechanism though.\n      - in: path\n        name: uuid_or_slug\n        schema:\n          type: string\n        description: Either a UUID4 or a slug identifiying the form.\n        required: true\n      tags:\n      - forms\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/PatchedForm'\n      security:\n      - tokenAuth: []\n      - cookieAuth: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Form'\n          description: ''\n          headers:\n            X-Session-Expires-In:\n              $ref: '#/components/headers/X-Session-Expires-In'\n    delete:\n      operationId: forms_destroy\n      description: Destroying a form leads to a soft-delete to protect related submissions.\n        These deleted forms are no longer visible in the API endpoints.\n      summary: Mark form as deleted\n      parameters:\n      - in: header\n        name: X-CSP-Nonce\n        schema:\n          type: string\n        description: The value of the CSP nonce generated by the page embedding the\n          SDK. If provided, fields containing rich text from WYSIWYG editors will\n          be post-processed to allow inline styles with the provided nonce. If the\n          embedding page emits a `style-src` policy containing `unsafe-inline`, then\n          you can omit this header without losing functionality. We recommend favouring\n          the nonce mechanism though.\n      - in: path\n        name: uuid_or_slug\n        schema:\n          type: string\n        description: Either a UUID4 or a slug identifiying the form.\n        required: true\n      tags:\n      - forms\n      security:\n      - tokenAuth: []\n      - cookieAuth: []\n      responses:\n        '204':\n          description: No response body\n          headers:\n            X-Session-Expires-In:\n              $ref: '#/components/headers/X-Session-Expires-In'\n  /api/v1/forms/{uuid_or_slug}/admin-message:\n    post:\n      operationId: forms_admin_message_create\n      description: |-\n        Prepare the relevant message to be displayed in the admin.\n\n        On form create/update, a success message is displayed to the end user on\n        page reload. This exact message varies with the type of submit action that was\n        performed and whether the object was created or updated.\n\n        This endpoint is only available for staff users and prepares messages for display\n        in the admin environment.\n      summary: Prepare form edit admin message\n      parameters:\n      - in: header\n        name: X-CSP-Nonce\n        schema:\n          type: string\n        description: The value of the CSP nonce generated by the page embedding the\n          SDK. If provided, fields containing rich text from WYSIWYG editors will\n          be post-processed to allow inline styles with the provided nonce. If the\n          embedding page emits a `style-src` policy containing `unsafe-inline`, then\n          you can omit this header without losing functionality. We recommend favouring\n          the nonce mechanism though.\n      - in: path\n        name: uuid_or_slug\n        schema:\n          type: string\n        description: Either a UUID4 or a slug identifiying the form.\n        required: true\n      tags:\n      - admin\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/FormAdminMessage'\n        required: true\n      security:\n      - tokenAuth: []\n      - cookieAuth: []\n      responses:\n        '201':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/FormAdminMessage'\n          description: ''\n          headers:\n            X-Session-Expires-In:\n              $ref: '#/components/headers/X-Session-Expires-In'\n  /api/v1/forms/{uuid_or_slug}/copy:\n    post:\n      operationId: forms_copy_create\n      description: |-\n        Create a copy of a form.\n\n        Copying a form copies the meta-data of the form and the steps included.\n        Referenced form definitions inside the form steps are re-used instead of\n        new copies being created.\n      summary: Copy form\n      parameters:\n      - in: header\n        name: X-CSP-Nonce\n        schema:\n          type: string\n        description: The value of the CSP nonce generated by the page embedding the\n          SDK. If provided, fields containing rich text from WYSIWYG editors will\n          be post-processed to allow inline styles with the provided nonce. If the\n          embedding page emits a `style-src` policy containing `unsafe-inline`, then\n          you can omit this header without losing functionality. We recommend favouring\n          the nonce mechanism though.\n      - in: path\n        name: uuid_or_slug\n        schema:\n          type: string\n        description: Either a UUID4 or a slug identifiying the form.\n        required: true\n      tags:\n      - forms\n      security:\n      - tokenAuth: []\n      responses:\n        '201':\n          headers:\n            Location:\n              schema:\n                type: string\n                format: uri\n              description: URL of the created resource\n            X-Session-Expires-In:\n              $ref: '#/components/headers/X-Session-Expires-In'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Form'\n          description: ''\n  /api/v1/forms/{uuid_or_slug}/export:\n    post:\n      operationId: forms_export_create\n      description: |-\n        Export a form with the related steps and form definitions as a ZIP-file.\n\n        The exported ZIP-file can be used to import complete forms.\n      summary: Export form\n      parameters:\n      - in: header\n        name: X-CSP-Nonce\n        schema:\n          type: string\n        description: The value of the CSP nonce generated by the page embedding the\n          SDK. If provided, fields containing rich text from WYSIWYG editors will\n          be post-processed to allow inline styles with the provided nonce. If the\n          embedding page emits a `style-src` policy containing `unsafe-inline`, then\n          you can omit this header without losing functionality. We recommend favouring\n          the nonce mechanism though.\n      - in: path\n        name: uuid_or_slug\n        schema:\n          type: string\n        description: Either a UUID4 or a slug identifiying the form.\n        required: true\n      tags:\n      - forms\n      security:\n      - tokenAuth: []\n      responses:\n        '200':\n          content:\n            application/zip:\n              schema:\n                type: string\n                format: binary\n          description: ''\n          headers:\n            X-Session-Expires-In:\n              $ref: '#/components/headers/X-Session-Expires-In'\n  /api/v1/location/get-street-name-and-city:\n    get:\n      operationId: get_street_name_and_city_list\n      description: Get the street name and city for a given postal code and house\n        number\n      summary: Get a street name and city\n      parameters:\n      - in: query\n        name: house_number\n        schema:\n          type: number\n        description: House number of the address\n        required: true\n      - in: query\n        name: postcode\n        schema:\n          type: string\n        description: Postal code of the address\n        required: true\n      tags:\n      - location\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GetStreetNameAndCityViewResult'\n          description: ''\n          headers:\n            X-Session-Expires-In:\n              $ref: '#/components/headers/X-Session-Expires-In'\n  /api/v1/logic-rules:\n    get:\n      operationId: logic_rules_list\n      summary: List logic rules\n      parameters:\n      - in: query\n        name: form\n        schema:\n          type: string\n          format: uuid\n        description: De UUID van het formulier gekoppeld aan deze logicaregels.\n      tags:\n      - logic-rules\n      security:\n      - tokenAuth: []\n      - cookieAuth: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/FormLogic'\n          description: ''\n          headers:\n            X-Session-Expires-In:\n              $ref: '#/components/headers/X-Session-Expires-In'\n    post:\n      operationId: logic_rules_create\n      summary: Create a logic rule\n      tags:\n      - logic-rules\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/FormLogic'\n          application/x-www-form-urlencoded:\n            schema:\n              $ref: '#/components/schemas/FormLogic'\n          multipart/form-data:\n            schema:\n              $ref: '#/components/schemas/FormLogic'\n        required: true\n      security:\n      - tokenAuth: []\n      - cookieAuth: []\n      responses:\n        '201':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/FormLogic'\n          description: ''\n          headers:\n            X-Session-Expires-In:\n              $ref: '#/components/headers/X-Session-Expires-In'\n  /api/v1/logic-rules/{uuid}:\n    get:\n      operationId: logic_rules_retrieve\n      summary: Retrieve logic rule details\n      parameters:\n      - in: path\n        name: uuid\n        schema:\n          type: string\n          format: uuid\n        required: true\n      tags:\n      - logic-rules\n      security:\n      - tokenAuth: []\n      - cookieAuth: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/FormLogic'\n          description: ''\n          headers:\n            X-Session-Expires-In:\n              $ref: '#/components/headers/X-Session-Expires-In'\n    put:\n      operationId: logic_rules_update\n      summary: Update all details of a logic rule\n      parameters:\n      - in: path\n        name: uuid\n        schema:\n          type: string\n          format: uuid\n        required: true\n      tags:\n      - logic-rules\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/FormLogic'\n          application/x-www-form-urlencoded:\n            schema:\n              $ref: '#/components/schemas/FormLogic'\n          multipart/form-data:\n            schema:\n              $ref: '#/components/schemas/FormLogic'\n        required: true\n      security:\n      - tokenAuth: []\n      - cookieAuth: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/FormLogic'\n          description: ''\n          headers:\n            X-Session-Expires-In:\n              $ref: '#/components/headers/X-Session-Expires-In'\n    patch:\n      operationId: logic_rules_partial_update\n      summary: Update some details of a logic rule\n      parameters:\n      - in: path\n        name: uuid\n        schema:\n          type: string\n          format: uuid\n        required: true\n      tags:\n      - logic-rules\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/PatchedFormLogic'\n          application/x-www-form-urlencoded:\n            schema:\n              $ref: '#/components/schemas/PatchedFormLogic'\n          multipart/form-data:\n            schema:\n              $ref: '#/components/schemas/PatchedFormLogic'\n      security:\n      - tokenAuth: []\n      - cookieAuth: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/FormLogic'\n          description: ''\n          headers:\n            X-Session-Expires-In:\n              $ref: '#/components/headers/X-Session-Expires-In'\n    delete:\n      operationId: logic_rules_destroy\n      summary: Delete a logic rule\n      parameters:\n      - in: path\n        name: uuid\n        schema:\n          type: string\n          format: uuid\n        required: true\n      tags:\n      - logic-rules\n      security:\n      - tokenAuth: []\n      - cookieAuth: []\n      responses:\n        '204':\n          description: No response body\n          headers:\n            X-Session-Expires-In:\n              $ref: '#/components/headers/X-Session-Expires-In'\n  /api/v1/payment/plugins:\n    get:\n      operationId: payment_plugins_list\n      description: |-\n        List all payment plugins that have been registered.\n\n        Each payment plugin is tied to a particular (third-party) payment\n        provider.\n      summary: List available payment plugins\n      tags:\n      - payment\n      security:\n      - tokenAuth: []\n      - cookieAuth: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/PaymentPlugin'\n          description: ''\n          headers:\n            X-Session-Expires-In:\n              $ref: '#/components/headers/X-Session-Expires-In'\n  /api/v1/prefill/plugins:\n    get:\n      operationId: prefill_plugins_list\n      description: List all prefill plugins that have been registered.\n      summary: List available prefill plugins\n      tags:\n      - prefill\n      security:\n      - cookieAuth: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/PrefillPlugin'\n          description: ''\n          headers:\n            X-Session-Expires-In:\n              $ref: '#/components/headers/X-Session-Expires-In'\n  /api/v1/prefill/plugins/{plugin}/attributes:\n    get:\n      operationId: prefill_plugins_attributes_list\n      description: List the available prefill attributes for a given plugin.\n      summary: List available attributes\n      parameters:\n      - in: path\n        name: plugin\n        schema:\n          type: string\n        required: true\n      tags:\n      - prefill\n      security:\n      - cookieAuth: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/PrefillAttribute'\n          description: ''\n          headers:\n            X-Session-Expires-In:\n              $ref: '#/components/headers/X-Session-Expires-In'\n  /api/v1/price-rules:\n    get:\n      operationId: price_rules_list\n      summary: List pricing logic rules\n      parameters:\n      - in: query\n        name: form\n        schema:\n          type: string\n          format: uuid\n        description: De UUID van het formulier gekoppeld aan deze logicaregels.\n      tags:\n      - logic-rules\n      security:\n      - tokenAuth: []\n      - cookieAuth: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/FormPriceLogic'\n          description: ''\n          headers:\n            X-Session-Expires-In:\n              $ref: '#/components/headers/X-Session-Expires-In'\n    post:\n      operationId: price_rules_create\n      summary: Create a pricing logic rule\n      tags:\n      - logic-rules\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/FormPriceLogic'\n          application/x-www-form-urlencoded:\n            schema:\n              $ref: '#/components/schemas/FormPriceLogic'\n          multipart/form-data:\n            schema:\n              $ref: '#/components/schemas/FormPriceLogic'\n        required: true\n      security:\n      - tokenAuth: []\n      - cookieAuth: []\n      responses:\n        '201':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/FormPriceLogic'\n          description: ''\n          headers:\n            X-Session-Expires-In:\n              $ref: '#/components/headers/X-Session-Expires-In'\n  /api/v1/price-rules/{uuid}:\n    get:\n      operationId: price_rules_retrieve\n      summary: Retrieve pricing logic rule details\n      parameters:\n      - in: path\n        name: uuid\n        schema:\n          type: string\n          format: uuid\n        required: true\n      tags:\n      - logic-rules\n      security:\n      - tokenAuth: []\n      - cookieAuth: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/FormPriceLogic'\n          description: ''\n          headers:\n            X-Session-Expires-In:\n              $ref: '#/components/headers/X-Session-Expires-In'\n    put:\n      operationId: price_rules_update\n      summary: Update all details of a pricing logic rule\n      parameters:\n      - in: path\n        name: uuid\n        schema:\n          type: string\n          format: uuid\n        required: true\n      tags:\n      - logic-rules\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/FormPriceLogic'\n          application/x-www-form-urlencoded:\n            schema:\n              $ref: '#/components/schemas/FormPriceLogic'\n          multipart/form-data:\n            schema:\n              $ref: '#/components/schemas/FormPriceLogic'\n        required: true\n      security:\n      - tokenAuth: []\n      - cookieAuth: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/FormPriceLogic'\n          description: ''\n          headers:\n            X-Session-Expires-In:\n              $ref: '#/components/headers/X-Session-Expires-In'\n    patch:\n      operationId: price_rules_partial_update\n      summary: Update some details of a pricing logic rule\n      parameters:\n      - in: path\n        name: uuid\n        schema:\n          type: string\n          format: uuid\n        required: true\n      tags:\n      - logic-rules\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/PatchedFormPriceLogic'\n          application/x-www-form-urlencoded:\n            schema:\n              $ref: '#/components/schemas/PatchedFormPriceLogic'\n          multipart/form-data:\n            schema:\n              $ref: '#/components/schemas/PatchedFormPriceLogic'\n      security:\n      - tokenAuth: []\n      - cookieAuth: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/FormPriceLogic'\n          description: ''\n          headers:\n            X-Session-Expires-In:\n              $ref: '#/components/headers/X-Session-Expires-In'\n    delete:\n      operationId: price_rules_destroy\n      summary: Delete a pricing logic rule\n      parameters:\n      - in: path\n        name: uuid\n        schema:\n          type: string\n          format: uuid\n        required: true\n      tags:\n      - logic-rules\n      security:\n      - tokenAuth: []\n      - cookieAuth: []\n      responses:\n        '204':\n          description: No response body\n          headers:\n            X-Session-Expires-In:\n              $ref: '#/components/headers/X-Session-Expires-In'\n  /api/v1/products:\n    get:\n      operationId: products_list\n      description: |-\n        List and retrieve the products registered in the admin interface.\n\n        Note that these endpoints are only available to authenticated admin users. The\n        products functionality is minimal to be able to register prices. In the future,\n        probably a dedicated products catalogue will become relevant.\n      summary: List available products\n      parameters:\n      - in: header\n        name: X-CSP-Nonce\n        schema:\n          type: string\n        description: The value of the CSP nonce generated by the page embedding the\n          SDK. If provided, fields containing rich text from WYSIWYG editors will\n          be post-processed to allow inline styles with the provided nonce. If the\n          embedding page emits a `style-src` policy containing `unsafe-inline`, then\n          you can omit this header without losing functionality. We recommend favouring\n          the nonce mechanism though.\n      tags:\n      - products\n      security:\n      - tokenAuth: []\n      - cookieAuth: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/Product'\n          description: ''\n          headers:\n            X-Session-Expires-In:\n              $ref: '#/components/headers/X-Session-Expires-In'\n  /api/v1/products/{uuid}:\n    get:\n      operationId: products_retrieve\n      description: |-\n        List and retrieve the products registered in the admin interface.\n\n        Note that these endpoints are only available to authenticated admin users. The\n        products functionality is minimal to be able to register prices. In the future,\n        probably a dedicated products catalogue will become relevant.\n      summary: Retrieve details of a single product\n      parameters:\n      - in: header\n        name: X-CSP-Nonce\n        schema:\n          type: string\n        description: The value of the CSP nonce generated by the page embedding the\n          SDK. If provided, fields containing rich text from WYSIWYG editors will\n          be post-processed to allow inline styles with the provided nonce. If the\n          embedding page emits a `style-src` policy containing `unsafe-inline`, then\n          you can omit this header without losing functionality. We recommend favouring\n          the nonce mechanism though.\n      - in: path\n        name: uuid\n        schema:\n          type: string\n          format: uuid\n          description: Globally unique identifier\n        required: true\n      tags:\n      - products\n      security:\n      - tokenAuth: []\n      - cookieAuth: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Product'\n          description: ''\n          headers:\n            X-Session-Expires-In:\n              $ref: '#/components/headers/X-Session-Expires-In'\n  /api/v1/registration/attributes:\n    get:\n      operationId: registration_attributes_list\n      description: List the available registration attributes.\n      summary: List available registration attributes\n      tags:\n      - registration\n      security:\n      - cookieAuth: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/RegistrationAttribute'\n          description: ''\n          headers:\n            X-Session-Expires-In:\n              $ref: '#/components/headers/X-Session-Expires-In'\n  /api/v1/registration/plugins:\n    get:\n      operationId: registration_plugins_list\n      description: |-\n        List all available registration plugins.\n\n        Registration plugins are responsible for the implementation details to register the form submission\n        with various backends, such as \"API's voor zaakgericht werken\", StUF-ZDS and others.\n      summary: List available registration plugins\n      tags:\n      - registration\n      security:\n      - cookieAuth: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/RegistrationPlugin'\n          description: ''\n          headers:\n            X-Session-Expires-In:\n              $ref: '#/components/headers/X-Session-Expires-In'\n  /api/v1/registration/plugins/camunda/process-definitions:\n    get:\n      operationId: registration_plugins_camunda_process_definitions_list\n      description: List the available process definitions \u0026 their versions.\n      summary: List available Camunda process definitions\n      tags:\n      - registration\n      security:\n      - cookieAuth: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/ProcessDefinition'\n          description: ''\n          headers:\n            X-Session-Expires-In:\n              $ref: '#/components/headers/X-Session-Expires-In'\n  /api/v1/submissions:\n    get:\n      operationId: submissions_list\n      description: Active submissions are submissions whose ID is in the user session.\n        This endpoint returns user-bound submissions. Note that you get different\n        results on different results because of the differing sessions.\n      summary: List active submissions\n      parameters:\n      - name: page\n        required: false\n        in: query\n        description: A page number within the paginated result set.\n        schema:\n          type: integer\n      tags:\n      - submissions\n      security:\n      - cookieAuth: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PaginatedSubmissionList'\n          description: ''\n          headers:\n            X-Session-Expires-In:\n              $ref: '#/components/headers/X-Session-Expires-In'\n    post:\n      operationId: submissions_create\n      description: Start a submission for a particular form. The submission is added\n        to the user session.\n      summary: Start a submission\n      tags:\n      - submissions\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Submission'\n          application/x-www-form-urlencoded:\n            schema:\n              $ref: '#/components/schemas/Submission'\n          multipart/form-data:\n            schema:\n              $ref: '#/components/schemas/Submission'\n        required: true\n      security:\n      - cookieAuth: []\n      responses:\n        '201':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Submission'\n          description: ''\n          headers:\n            X-Session-Expires-In:\n              $ref: '#/components/headers/X-Session-Expires-In'\n  /api/v1/submissions/{report_id}/{token}/download:\n    get:\n      operationId: submissions_download_retrieve\n      description: Download het document met de ingezonden gegevens, in PDF vorm.\n        Dit document kan alleen worden opgevraagd indien het juiste token is meegegeven,\n        die hoort bij de formulier sessie. Nadat het document is gedownload, of na\n        1 dagen, is het token niet meer te gebruiken.\n      summary: Download the PDF report\n      parameters:\n      - in: path\n        name: report_id\n        schema:\n          type: integer\n        required: true\n      - in: path\n        name: token\n        schema:\n          type: string\n        required: true\n      tags:\n      - submissions\n      responses:\n        '200':\n          content:\n            application/pdf:\n              schema:\n                type: string\n                format: binary\n          description: ''\n          headers:\n            X-Session-Expires-In:\n              $ref: '#/components/headers/X-Session-Expires-In'\n  /api/v1/submissions/{submission_uuid}/steps/{step_uuid}:\n    get:\n      operationId: submissions_steps_retrieve\n      description: The details of a particular submission step always return the related\n        form step configuration. If there is no data yet for the step, the ID will\n        be `null`. Set the step data by making a `PUT` request.\n      summary: Retrieve step details\n      parameters:\n      - in: path\n        name: step_uuid\n        schema:\n          type: string\n          format: uuid\n        required: true\n      - in: path\n        name: submission_uuid\n        schema:\n          type: string\n          format: uuid\n        required: true\n      tags:\n      - submissions\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/SubmissionStep'\n          description: ''\n          headers:\n            X-Session-Expires-In:\n              $ref: '#/components/headers/X-Session-Expires-In'\n    put:\n      operationId: submissions_steps_update\n      description: |-\n        The submission data is either created or updated, depending on whether there was\n        submission data present before or not. Make sure to retrieve the step data to\n        display already filled out fields.\n\n        Note that the form step configuration is currently not validated - this may change\n        in the future. I.e. - a step that is marked as not available will still be submitted\n        at the time being.\n      summary: Store submission step data\n      parameters:\n      - in: path\n        name: step_uuid\n        schema:\n          type: string\n          format: uuid\n        required: true\n      - in: path\n        name: submission_uuid\n        schema:\n          type: string\n          format: uuid\n        required: true\n      tags:\n      - submissions\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/SubmissionStep'\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/SubmissionStep'\n          description: ''\n          headers:\n            X-Session-Expires-In:\n              $ref: '#/components/headers/X-Session-Expires-In'\n  /api/v1/submissions/{submission_uuid}/steps/{step_uuid}/_check_logic:\n    post:\n      operationId: submissions_steps__check_logic_create\n      description: Apply/check the logic rules specified on the form step.\n      summary: Apply/check form logic\n      parameters:\n      - in: path\n        name: step_uuid\n        schema:\n          type: string\n          format: uuid\n        required: true\n      - in: path\n        name: submission_uuid\n        schema:\n          type: string\n          format: uuid\n        required: true\n      tags:\n      - submissions\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/FormData'\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/SubmissionStateLogic'\n          description: ''\n          headers:\n            X-Session-Expires-In:\n              $ref: '#/components/headers/X-Session-Expires-In'\n  /api/v1/submissions/{uuid}:\n    get:\n      operationId: submissions_retrieve\n      description: Get the state of a single submission in the user session.\n      summary: Retrieve submission details\n      parameters:\n      - in: path\n        name: uuid\n        schema:\n          type: string\n          format: uuid\n        required: true\n      tags:\n      - submissions\n      security:\n      - cookieAuth: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Submission'\n          description: ''\n          headers:\n            X-Session-Expires-In:\n              $ref: '#/components/headers/X-Session-Expires-In'\n  /api/v1/submissions/{uuid}/{token}/status:\n    get:\n      operationId: submissions_status_retrieve\n      description: |-\n        Obtain the current submission processing status, after completing it.\n\n        The submission is processed asynchronously. Poll this endpoint to receive\n        information on the status of this async processing.\n      summary: Get the submission processing status\n      parameters:\n      - in: path\n        name: token\n        schema:\n          type: string\n        description: Time-based authentication token\n        required: true\n      - in: path\n        name: uuid\n        schema:\n          type: string\n          format: uuid\n        required: true\n      tags:\n      - submissions\n      security:\n      - cookieAuth: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/SubmissionProcessingStatus'\n          description: ''\n          headers:\n            X-Session-Expires-In:\n              $ref: '#/components/headers/X-Session-Expires-In'\n        '403':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Exception'\n          description: ''\n          headers:\n            X-Session-Expires-In:\n              $ref: '#/components/headers/X-Session-Expires-In'\n        '429':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Exception'\n          description: ''\n          headers:\n            X-Session-Expires-In:\n              $ref: '#/components/headers/X-Session-Expires-In'\n  /api/v1/submissions/{uuid}/_complete:\n    post:\n      operationId: submissions__complete_create\n      description: |-\n        Mark the submission as completed.\n\n        Submission completion requires that all required steps are completed.\n\n        Note that the processing of the submission runs in the background, and you\n        should periodically check the submission status endpoint to check the state.\n        Background processing makes sure that:\n\n        * potential appointments are registered\n        * a report PDF is generated\n        * the submission is persisted to the configured backend\n        * payment is initiated if relevant\n\n        Once a submission is completed, it's removed from the submission and time-stamped\n        HMAC token URLs are used for subsequent process flow. This means it's no longer\n        possible to change or read the submission data (including individual steps).\n        This guarantees that the submission is removed from the session without having\n        to rely on the client being able to make another call. IF it is detected in the\n        status endpoint that a retry is needed, the ID is added back to the session.\n\n        ---\n        **Warning**\n\n        The schema of the validation errors response is currently marked as\n        experimental. See our versioning policy in the developer documentation for\n        what this means.\n        ---\n      summary: Complete a submission\n      parameters:\n      - in: path\n        name: uuid\n        schema:\n          type: string\n          format: uuid\n        required: true\n      tags:\n      - submissions\n      security:\n      - cookieAuth: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/SubmissionCompletion'\n          description: ''\n          headers:\n            X-Session-Expires-In:\n              $ref: '#/components/headers/X-Session-Expires-In'\n        '400':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CompletionValidation'\n          description: ''\n          headers:\n            X-Session-Expires-In:\n              $ref: '#/components/headers/X-Session-Expires-In'\n  /api/v1/submissions/{uuid}/_suspend:\n    post:\n      operationId: submissions__suspend_create\n      description: |-\n        Suspend the submission.\n\n        Submission suspension requires contact details to send the end-user a URL to\n        resume the submission (possibly from another device).\n      summary: Suspend a submission\n      parameters:\n      - in: path\n        name: uuid\n        schema:\n          type: string\n          format: uuid\n        required: true\n      tags:\n      - submissions\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/SubmissionSuspension'\n          application/x-www-form-urlencoded:\n            schema:\n              $ref: '#/components/schemas/SubmissionSuspension'\n          multipart/form-data:\n            schema:\n              $ref: '#/components/schemas/SubmissionSuspension'\n        required: true\n      security:\n      - cookieAuth: []\n      responses:\n        '201':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/SubmissionSuspension'\n          description: ''\n          headers:\n            X-Session-Expires-In:\n              $ref: '#/components/headers/X-Session-Expires-In'\n  /api/v1/submissions/{uuid}/co-sign:\n    get:\n      operationId: submissions_co_sign_retrieve\n      description: Retrieve co-sign state.\n      summary: Retrieve co-sign state\n      parameters:\n      - in: path\n        name: uuid\n        schema:\n          type: string\n          format: uuid\n        required: true\n      tags:\n      - submissions\n      security:\n      - cookieAuth: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/SubmissionCoSignStatus'\n          description: ''\n          headers:\n            X-Session-Expires-In:\n              $ref: '#/components/headers/X-Session-Expires-In'\n        '403':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Exception'\n          description: ''\n          headers:\n            X-Session-Expires-In:\n              $ref: '#/components/headers/X-Session-Expires-In'\n        '404':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Exception'\n          description: ''\n          headers:\n            X-Session-Expires-In:\n              $ref: '#/components/headers/X-Session-Expires-In'\n        '405':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Exception'\n          description: ''\n          headers:\n            X-Session-Expires-In:\n              $ref: '#/components/headers/X-Session-Expires-In'\n  /api/v1/submissions/files/{uuid}:\n    get:\n      operationId: submissions_files_retrieve\n      description: |-\n        Haal tijdelijk bestand op.\n\n        Deze aanroep wordt gedaan door het standaard Form.io bestandsupload widget.\n\n        Toegang tot dit endpoint vereist een actieve formulier inzending. Niet gekoppelde bestanden worden automatisch verwijderd na 2 dag(en)\n      summary: Retrieve temporary file upload\n      parameters:\n      - in: path\n        name: uuid\n        schema:\n          type: string\n          format: uuid\n        required: true\n      tags:\n      - submissions\n      responses:\n        '200':\n          content:\n            application/octet-stream:\n              schema:\n                type: string\n                format: binary\n          description: ''\n          headers:\n            X-Session-Expires-In:\n              $ref: '#/components/headers/X-Session-Expires-In'\n    delete:\n      operationId: submissions_files_destroy\n      description: \"Delete temporary file upload by the uploader. \\n\\nThis is called\\\n        \\ by the default Form.io file upload widget. \\n\\nAccess to this view requires\\\n        \\ an active form submission. Unclaimed temporary files automatically expire\\\n        \\ after {expire_days} day(s). \"\n      summary: Delete temporary file upload\n      parameters:\n      - in: path\n        name: uuid\n        schema:\n          type: string\n          format: uuid\n        required: true\n      tags:\n      - submissions\n      responses:\n        '204':\n          description: No response body\n          headers:\n            X-Session-Expires-In:\n              $ref: '#/components/headers/X-Session-Expires-In'\n  /api/v1/submissions/files/upload:\n    post:\n      operationId: submissions_files_upload_create\n      description: |-\n        Bestandsuploadhandler voor het Form.io bestandsupload opslagtype 'url'.\n\n        Bestandsuploads worden tijdelijke opgeslagen en moeten gekoppeld worden aan een inzending.\n\n        Toegang tot dit endpoint vereist een actieve formulier inzending. Niet gekoppelde bestanden worden automatisch verwijderd na 2 dag(en).\n\n        De maximale toegestane upload-bestandsgrootte is `50,0 MB` voor deze instantie. Merk op dat dit inclusief multipart-metadata en boundaries is. De daadwerkelijke maximale bestandsgrootte is dus iets lager dan deze waarde.\n      summary: Create temporary file upload\n      tags:\n      - submissions\n      requestBody:\n        content:\n          multipart/form-data:\n            schema:\n              $ref: '#/components/schemas/TemporaryFileUpload'\n        required: true\n      deprecated: true\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/TemporaryFileUpload'\n          description: ''\n          headers:\n            X-Session-Expires-In:\n              $ref: '#/components/headers/X-Session-Expires-In'\n  /api/v1/translations/formio:\n    get:\n      operationId: translations_formio_retrieve\n      description: Retrieve the translations for the strings used by FormIO\n      summary: Get FormIO translations\n      tags:\n      - translations\n      security:\n      - {}\n      responses:\n        '200':\n          description: No response body\n          headers:\n            X-Session-Expires-In:\n              $ref: '#/components/headers/X-Session-Expires-In'\n  /api/v1/validation/plugins:\n    get:\n      operationId: validation_plugins_list\n      description: List all prefill plugins that have been registered.\n      summary: List available validation plugins\n      tags:\n      - validation\n      security:\n      - cookieAuth: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/ValidationPlugin'\n          description: ''\n          headers:\n            X-Session-Expires-In:\n              $ref: '#/components/headers/X-Session-Expires-In'\n  /api/v1/validation/plugins/{validator}:\n    post:\n      operationId: validation_run\n      description: Validate a value using given validator\n      summary: Validate value using validation plugin\n      parameters:\n      - in: path\n        name: validator\n        schema:\n          type: string\n          enum:\n          - kvk-branchNumber\n          - kvk-kvkNumber\n          - kvk-rsin\n          - phonenumber-international\n          - phonenumber-nl\n        description: ID of the validation plugin, see the [`validation_plugin_list`](./#operation/validation_plugin_list)\n          operation\n        required: true\n      tags:\n      - validation\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/ValidationInput'\n          application/x-www-form-urlencoded:\n            schema:\n              $ref: '#/components/schemas/ValidationInput'\n          multipart/form-data:\n            schema:\n              $ref: '#/components/schemas/ValidationInput'\n        required: true\n      security:\n      - {}\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ValidationResult'\n          description: ''\n          headers:\n            X-Session-Expires-In:\n              $ref: '#/components/headers/X-Session-Expires-In'\n  /auth/{slug}/{plugin_id}/return:\n    get:\n      operationId: auth_return_retrieve\n      description: |-\n        Authentication plugins call this endpoint in the return step of the authentication flow. Depending on the plugin, either `GET` or `POST` is allowed as HTTP method.\n\n        Typically authentication plugins will redirect again to the URL where the SDK is embedded.\n\n        Various validations are performed:\n        * the form must be live\n        * the `plugin_id` is configured on the form\n        * logging in is required on the form\n        * the redirect target must match the CORS policy\n      summary: Return from external login flow\n      parameters:\n      - in: query\n        name: coSignSubmission\n        schema:\n          type: string\n          format: uuid\n        description: UUID of the submission for which this co-sign authentication\n          applies. Presence of this parameter marks a flow as a co-sign flow.\n      - in: path\n        name: plugin_id\n        schema:\n          type: string\n        description: Identifier of the authentication plugin.\n        required: true\n      - in: path\n        name: slug\n        schema:\n          type: string\n        description: Slug identifiying the form.\n        required: true\n      tags:\n      - auth\n      security:\n      - cookieAuth: []\n      - {}\n      responses:\n        '302':\n          headers:\n            Location:\n              schema:\n                type: string\n                format: uri\n              description: URL where the SDK initiated the authentication flow.\n              required: true\n            Allow:\n              schema:\n                type: string\n              description: Allowed HTTP method(s) for this plugin.\n              required: true\n            X-Session-Expires-In:\n              $ref: '#/components/headers/X-Session-Expires-In'\n          description: No response body\n        '400':\n          headers:\n            Allow:\n              schema:\n                type: string\n              description: Allowed HTTP method(s) for this plugin.\n              required: true\n            X-Session-Expires-In:\n              $ref: '#/components/headers/X-Session-Expires-In'\n          content:\n            text/html:\n              schema:\n                type: string\n          description: Bad request. Invalid parameters were passed.\n        '404':\n          headers:\n            Allow:\n              schema:\n                type: string\n              description: Allowed HTTP method(s) for this plugin.\n              required: true\n            X-Session-Expires-In:\n              $ref: '#/components/headers/X-Session-Expires-In'\n          content:\n            text/html:\n              schema:\n                type: string\n          description: Not found. The slug did not point to a live form.\n        '405':\n          headers:\n            Allow:\n              schema:\n                type: string\n              description: Allowed HTTP method(s) for this plugin.\n              required: true\n            X-Session-Expires-In:\n              $ref: '#/components/headers/X-Session-Expires-In'\n          content:\n            text/html:\n              schema:\n                type: string\n          description: Method not allowed. The authentication plugin requires `POST`\n            or `GET`, and the wrong method was used.\n    post:\n      operationId: auth_return_create\n      description: |-\n        Authentication plugins call this endpoint in the return step of the authentication flow. Depending on the plugin, either `GET` or `POST` is allowed as HTTP method.\n\n        Typically authentication plugins will redirect again to the URL where the SDK is embedded.\n\n        Various validations are performed:\n        * the form must be live\n        * the `plugin_id` is configured on the form\n        * logging in is required on the form\n        * the redirect target must match the CORS policy\n      summary: Return from external login flow\n      parameters:\n      - in: query\n        name: coSignSubmission\n        schema:\n          type: string\n          format: uuid\n        description: UUID of the submission for which this co-sign authentication\n          applies. Presence of this parameter marks a flow as a co-sign flow.\n      - in: path\n        name: plugin_id\n        schema:\n          type: string\n        description: Identifier of the authentication plugin.\n        required: true\n      - in: path\n        name: slug\n        schema:\n          type: string\n        description: Slug identifiying the form.\n        required: true\n      tags:\n      - auth\n      requestBody:\n        content:\n          application/x-www-form-urlencoded:\n            schema:\n              type: object\n              additionalProperties: {}\n          multipart/form-data:\n            schema:\n              type: object\n              additionalProperties: {}\n      security:\n      - cookieAuth: []\n      - {}\n      responses:\n        '200':\n          headers:\n            Allow:\n              schema:\n                type: string\n              description: Allowed HTTP method(s) for this plugin.\n              required: true\n            X-Session-Expires-In:\n              $ref: '#/components/headers/X-Session-Expires-In'\n          content:\n            text/html:\n              schema:\n                type: string\n          description: OK. Possibly a form with validation errors is rendered.\n        '302':\n          headers:\n            Location:\n              schema:\n                type: string\n                format: uri\n              description: URL where the SDK initiated the authentication flow.\n              required: true\n            Allow:\n              schema:\n                type: string\n              description: Allowed HTTP method(s) for this plugin.\n              required: true\n            X-Session-Expires-In:\n              $ref: '#/components/headers/X-Session-Expires-In'\n          description: No response body\n        '400':\n          headers:\n            Allow:\n              schema:\n                type: string\n              description: Allowed HTTP method(s) for this plugin.\n              required: true\n            X-Session-Expires-In:\n              $ref: '#/components/headers/X-Session-Expires-In'\n          content:\n            text/html:\n              schema:\n                type: string\n          description: Bad request. Invalid parameters were passed.\n        '404':\n          headers:\n            Allow:\n              schema:\n                type: string\n              description: Allowed HTTP method(s) for this plugin.\n              required: true\n            X-Session-Expires-In:\n              $ref: '#/components/headers/X-Session-Expires-In'\n          content:\n            text/html:\n              schema:\n                type: string\n          description: Not found. The slug did not point to a live form.\n        '405':\n          headers:\n            Allow:\n              schema:\n                type: string\n              description: Allowed HTTP method(s) for this plugin.\n              required: true\n            X-Session-Expires-In:\n              $ref: '#/components/headers/X-Session-Expires-In'\n          content:\n            text/html:\n              schema:\n                type: string\n          description: Method not allowed. The authentication plugin requires `POST`\n            or `GET`, and the wrong method was used.\n  /auth/{slug}/{plugin_id}/start:\n    get:\n      operationId: auth_start_retrieve\n      description: |-\n        This endpoint is the internal redirect target to start external login flow.\n\n        Note that this is NOT a JSON 'endpoint', but rather the browser should be redirected to this URL and will in turn receive another redirect.\n\n        Various validations are performed:\n        * the form must be live\n        * the `plugin_id` is configured on the form\n        * logging in is required on the form\n        * the `next` parameter must be present\n        * the `next` parameter must match the CORS policy\n      summary: Start authentication flow\n      parameters:\n      - in: query\n        name: coSignSubmission\n        schema:\n          type: string\n          format: uuid\n        description: UUID of the submission for which this co-sign authentication\n          applies. Presence of this parameter marks a flow as a co-sign flow.\n      - in: query\n        name: next\n        schema:\n          type: string\n          format: uri\n        description: URL of the form to redirect back to. This URL is validated against\n          the CORS configuration.\n        required: true\n      - in: path\n        name: plugin_id\n        schema:\n          type: string\n        description: Identifier of the authentication plugin. Note that this is validated\n          against the configured available plugins for this particular form.\n        required: true\n      - in: path\n        name: slug\n        schema:\n          type: string\n        description: Slug identifiying the form.\n        required: true\n      tags:\n      - auth\n      security:\n      - cookieAuth: []\n      - {}\n      responses:\n        '200':\n          content:\n            text/html:\n              schema:\n                type: string\n          description: OK. A login page is rendered.\n          headers:\n            X-Session-Expires-In:\n              $ref: '#/components/headers/X-Session-Expires-In'\n        '302':\n          headers:\n            Location:\n              schema:\n                type: string\n                format: uri\n              description: URL of the external authentication service where the end-user\n                will be redirected to. The value is specific to the selected authentication\n                plugin.\n              required: true\n            X-Session-Expires-In:\n              $ref: '#/components/headers/X-Session-Expires-In'\n          description: No response body\n        '400':\n          content:\n            text/html:\n              schema:\n                type: string\n          description: Bad request. Invalid parameters were passed.\n          headers:\n            X-Session-Expires-In:\n              $ref: '#/components/headers/X-Session-Expires-In'\n        '404':\n          content:\n            text/html:\n              schema:\n                type: string\n          description: Not found. The slug did not point to a live form.\n          headers:\n            X-Session-Expires-In:\n              $ref: '#/components/headers/X-Session-Expires-In'\n  /payment/{plugin_id}/webhook:\n    get:\n      operationId: payment_webhook_retrieve\n      description: |-\n        This endpoint is used for server-to-server calls. Depending on the plugin, either `GET` or `POST` is allowed as HTTP method.\n\n        Various validations are performed:\n        * the `plugin_id` is configured on the form\n        * payment is required and configured on the form\n      summary: Webhook handler for external payment flow\n      parameters:\n      - in: path\n        name: plugin_id\n        schema:\n          type: string\n        description: Identifier of the payment plugin. Note that this is validated\n          against the configured available plugins for this particular form.\n        required: true\n      tags:\n      - payment\n      security:\n      - {}\n      responses:\n        '200':\n          headers:\n            Allow:\n              schema:\n                type: string\n              description: Allowed HTTP method(s) for this plugin.\n              required: true\n            X-Session-Expires-In:\n              $ref: '#/components/headers/X-Session-Expires-In'\n          description: No response body\n        '400':\n          headers:\n            Allow:\n              schema:\n                type: string\n              description: Allowed HTTP method(s) for this plugin.\n              required: true\n            X-Session-Expires-In:\n              $ref: '#/components/headers/X-Session-Expires-In'\n          content:\n            application/problem+json:\n              schema:\n                $ref: '#/components/schemas/Exception'\n          description: Bad request. Invalid parameters were passed.\n        '404':\n          headers:\n            Allow:\n              schema:\n                type: string\n              description: Allowed HTTP method(s) for this plugin.\n              required: true\n            X-Session-Expires-In:\n              $ref: '#/components/headers/X-Session-Expires-In'\n          content:\n            application/problem+json:\n              schema:\n                $ref: '#/components/schemas/Exception'\n          description: Not found. The slug did not point to a live plugin.\n    post:\n      operationId: payment_webhook_create\n      description: |-\n        This endpoint is used for server-to-server calls. Depending on the plugin, either `GET` or `POST` is allowed as HTTP method.\n\n        Various validations are performed:\n        * the `plugin_id` is configured on the form\n        * payment is required and configured on the form\n      summary: Webhook handler for external payment flow\n      parameters:\n      - in: path\n        name: plugin_id\n        schema:\n          type: string\n        description: Identifier of the payment plugin. Note that this is validated\n          against the configured available plugins for this particular form.\n        required: true\n      tags:\n      - payment\n      security:\n      - {}\n      responses:\n        '200':\n          headers:\n            Allow:\n              schema:\n                type: string\n              description: Allowed HTTP method(s) for this plugin.\n              required: true\n            X-Session-Expires-In:\n              $ref: '#/components/headers/X-Session-Expires-In'\n          description: No response body\n        '400':\n          headers:\n            Allow:\n              schema:\n                type: string\n              description: Allowed HTTP method(s) for this plugin.\n              required: true\n            X-Session-Expires-In:\n              $ref: '#/components/headers/X-Session-Expires-In'\n          content:\n            application/problem+json:\n              schema:\n                $ref: '#/components/schemas/Exception'\n          description: Bad request. Invalid parameters were passed.\n        '404':\n          headers:\n            Allow:\n              schema:\n                type: string\n              description: Allowed HTTP method(s) for this plugin.\n              required: true\n            X-Session-Expires-In:\n              $ref: '#/components/headers/X-Session-Expires-In'\n          content:\n            application/problem+json:\n              schema:\n                $ref: '#/components/schemas/Exception'\n          description: Not found. The slug did not point to a live plugin.\n  /payment/{uuid}/{plugin_id}/start:\n    post:\n      operationId: payment_start_create\n      description: |-\n        This endpoint provides information to start the payment flow for a submission.\n\n        Due to support for legacy platforms this view doesn't redirect but provides information for the frontend to be used client side.\n\n        Various validations are performed:\n        * the form and submission must require payment\n        * the `plugin_id` is configured on the form\n        * payment is required and configured on the form\n        * the `next` parameter must be present\n        * the `next` parameter must match the CORS policy\n\n        The HTTP 200 response contains the information to start the flow with the payment provider. Depending on the 'type', send a `GET` or `POST` request with the `data` as 'Form Data' to the given 'url'.\n      summary: Start payment flow\n      parameters:\n      - in: query\n        name: next\n        schema:\n          type: string\n          format: uri\n        description: URL of the form to redirect back to. This URL is validated against\n          the CORS configuration.\n        required: true\n      - in: path\n        name: plugin_id\n        schema:\n          type: string\n        description: Identifier of the payment plugin. Note that this is validated\n          against the configured available plugins for this particular form.\n        required: true\n      - in: path\n        name: uuid\n        schema:\n          type: string\n        description: UUID identifying the submission.\n        required: true\n      tags:\n      - payment\n      security:\n      - {}\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PaymentInfo'\n          description: ''\n          headers:\n            X-Session-Expires-In:\n              $ref: '#/components/headers/X-Session-Expires-In'\n        '400':\n          content:\n            application/problem+json:\n              schema:\n                $ref: '#/components/schemas/Exception'\n          description: Bad request. Invalid parameters were passed.\n          headers:\n            X-Session-Expires-In:\n              $ref: '#/components/headers/X-Session-Expires-In'\n        '404':\n          content:\n            application/problem+json:\n              schema:\n                $ref: '#/components/schemas/Exception'\n          description: Not found. The slug did not point to a live submission or the\n            `plugin_id` does not exist.\n          headers:\n            X-Session-Expires-In:\n              $ref: '#/components/headers/X-Session-Expires-In'\n  /payment/{uuid}/return:\n    get:\n      operationId: payment_return_retrieve\n      description: |-\n        Payment plugins call this endpoint in the return step of the payment flow. Depending on the plugin, either `GET` or `POST` is allowed as HTTP method.\n\n        Typically payment plugins will redirect again to the URL where the SDK is embedded.\n\n        Various validations are performed:\n        * the form and submission must require payment\n        * the `plugin_id` is configured on the form\n        * payment is required and configured on the form\n        * the redirect target must match the CORS policy\n      summary: Return from external payment flow\n      parameters:\n      - in: path\n        name: uuid\n        schema:\n          type: string\n        description: UUID identifying the payment.\n        required: true\n      tags:\n      - payment\n      security:\n      - {}\n      responses:\n        '302':\n          headers:\n            Location:\n              schema:\n                type: string\n                format: uri\n              description: URL where the SDK initiated the payment flow.\n              required: true\n            Allow:\n              schema:\n                type: string\n              description: Allowed HTTP method(s) for this plugin.\n              required: true\n            X-Session-Expires-In:\n              $ref: '#/components/headers/X-Session-Expires-In'\n          description: Tempomrary redirect\n        '400':\n          headers:\n            Allow:\n              schema:\n                type: string\n              description: Allowed HTTP method(s) for this plugin.\n              required: true\n            X-Session-Expires-In:\n              $ref: '#/components/headers/X-Session-Expires-In'\n          content:\n            application/problem+json:\n              schema:\n                $ref: '#/components/schemas/Exception'\n          description: Bad request. Invalid parameters were passed.\n        '404':\n          headers:\n            Allow:\n              schema:\n                type: string\n              description: Allowed HTTP method(s) for this plugin.\n              required: true\n            X-Session-Expires-In:\n              $ref: '#/components/headers/X-Session-Expires-In'\n          content:\n            application/problem+json:\n              schema:\n                $ref: '#/components/schemas/Exception'\n          description: Not found. The slug did not point to a live submission payment\n            or the `plugin_id` does not exist.\n    post:\n      operationId: payment_return_create\n      description: |-\n        Payment plugins call this endpoint in the return step of the payment flow. Depending on the plugin, either `GET` or `POST` is allowed as HTTP method.\n\n        Typically payment plugins will redirect again to the URL where the SDK is embedded.\n\n        Various validations are performed:\n        * the form and submission must require payment\n        * the `plugin_id` is configured on the form\n        * payment is required and configured on the form\n        * the redirect target must match the CORS policy\n      summary: Return from external payment flow\n      parameters:\n      - in: path\n        name: uuid\n        schema:\n          type: string\n        description: UUID identifying the payment.\n        required: true\n      tags:\n      - payment\n      security:\n      - {}\n      responses:\n        '302':\n          headers:\n            Location:\n              schema:\n                type: string\n                format: uri\n              description: URL where the SDK initiated the payment flow.\n              required: true\n            Allow:\n              schema:\n                type: string\n              description: Allowed HTTP method(s) for this plugin.\n              required: true\n            X-Session-Expires-In:\n              $ref: '#/components/headers/X-Session-Expires-In'\n          description: Tempomrary redirect\n        '400':\n          headers:\n            Allow:\n              schema:\n                type: string\n              description: Allowed HTTP method(s) for this plugin.\n              required: true\n            X-Session-Expires-In:\n              $ref: '#/components/headers/X-Session-Expires-In'\n          content:\n            application/problem+json:\n              schema:\n                $ref: '#/components/schemas/Exception'\n          description: Bad request. Invalid parameters were passed.\n        '404':\n          headers:\n            Allow:\n              schema:\n                type: string\n              description: Allowed HTTP method(s) for this plugin.\n              required: true\n            X-Session-Expires-In:\n              $ref: '#/components/headers/X-Session-Expires-In'\n          content:\n            application/problem+json:\n              schema:\n                $ref: '#/components/schemas/Exception'\n          description: Not found. The slug did not point to a live submission payment\n            or the `plugin_id` does not exist.\ncomponents:\n  headers:\n    X-Session-Expires-In:\n      schema:\n        type: string\n      description: Amount of time in seconds after which the session expires. After\n        this time has passed, the session is expired and the user is 'logged out'.\n        Note that every subsequent API call resets the expiry.\n      required: true\n  schemas:\n    AppointmentProduct:\n      type: object\n      properties:\n        code:\n          type: string\n          description: Product code\n        identifier:\n          type: string\n          description: ID of the product\n        name:\n          type: string\n          description: Product name\n      required:\n      - code\n      - identifier\n      - name\n    AuthPlugin:\n      type: object\n      properties:\n        id:\n          type: string\n          description: The unique plugin identifier\n        label:\n          type: string\n          description: The human-readable name for a plugin.\n        providesAuth:\n          type: array\n          items:\n            type: string\n            title: Authentication attribute\n          title: Provides authentication attributes\n          description: The authentication attribute provided by this plugin.\n      required:\n      - id\n      - label\n      - providesAuth\n    AuthenticationBackendsEnum:\n      enum:\n      - digid\n      - eherkenning\n      - eidas\n      - digid_oidc\n      - eherkenning_oidc\n      - digid_machtigen_oidc\n      - eherkenning_bewindvoering_oidc\n      type: string\n    BlankEnum:\n      enum:\n      - ''\n    ButtonText:\n      type: object\n      properties:\n        resolved:\n          type: string\n          readOnly: true\n        value:\n          type: string\n      required:\n      - resolved\n      - value\n    CancelAppointmentInput:\n      type: object\n      properties:\n        email:\n          type: string\n          format: email\n          description: Email given when making the appointment\n      required:\n      - email\n    CompletionValidation:\n      type: object\n      properties:\n        incompleteSteps:\n          type: array\n          items:\n            $ref: '#/components/schemas/IncompleteStep'\n        submissionAllowed:\n          allOf:\n          - $ref: '#/components/schemas/SubmissionAllowedEnum'\n          readOnly: true\n        invalidPrefilledFields:\n          type: array\n          items:\n            type: string\n      required:\n      - incompleteSteps\n      - invalidPrefilledFields\n      - submissionAllowed\n      x-experimental: true\n    ComponentProperty:\n      type: object\n      properties:\n        value:\n          type: string\n          title: property key\n          description: The Form.io component property to alter, identified by `component.key`\n        type:\n          allOf:\n          - $ref: '#/components/schemas/ComponentPropertyTypeEnum'\n          description: The type of the value field\n      required:\n      - type\n      - value\n    ComponentPropertyTypeEnum:\n      enum:\n      - bool\n      - json\n      type: string\n    ConfirmationEmailOptionEnum:\n      enum:\n      - form_specific_email\n      - global_email\n      - no_email\n      type: string\n    ConfirmationEmailTemplate:\n      type: object\n      properties:\n        subject:\n          type: string\n          description: Subject of the email message\n          maxLength: 1000\n        content:\n          type: string\n          description: The content of the email message can contain variables that\n            will be templated from the submitted form data.\n    ContextAwareFormStep:\n      type: object\n      properties:\n        index:\n          type: integer\n          readOnly: true\n        configuration:\n          type: object\n          additionalProperties: {}\n          readOnly: true\n      required:\n      - configuration\n      - index\n    Date:\n      type: object\n      properties:\n        date:\n          type: string\n          format: date\n      required:\n      - date\n    Exception:\n      type: object\n      description: |-\n        Error format for HTTP 4xx and 5xx errors.\n\n        See https://docs.geostandaarden.nl/api/API-Strategie-ext/#error-handling-0 for the NL API strategy guidelines.\n      properties:\n        type:\n          type: string\n          description: URI reference to the error type, intended for developers\n        code:\n          type: string\n          description: System code indicating the type of error\n        title:\n          type: string\n          description: Generic title for the type of error\n        status:\n          type: integer\n          description: The HTTP status code\n        detail:\n          type: string\n          description: Extra information about the error, if available\n        instance:\n          type: string\n          description: URI with reference to this specific occurrence of the error.\n            This can be used in conjunction with server logs, for example.\n      required:\n      - code\n      - detail\n      - instance\n      - status\n      - title\n    Form:\n      type: object\n      description: |-\n        Represent a single `Form` definition.\n\n        Contains all the relevant metadata and configuration from the form design. Form\n        renderers should use this as starting point.\n\n        Note that this schema is used for both non-admin users filling out forms and\n        admin users designing forms. The fields that are only relevant for admin users are:\n        `internalName`, `registrationBackend`, `registrationBackendOptions`, `paymentBackend`, `paymentBackendOptions`, `product`, `isDeleted`, `submissionConfirmationTemplate`, `submissionsRemovalOptions`, `confirmationEmailTemplate`, `confirmationEmailOption`, `displayMainWebsiteLink`.\n      properties:\n        uuid:\n          type: string\n          format: uuid\n          readOnly: true\n        name:\n          type: string\n          maxLength: 150\n        internalName:\n          type: string\n          description: internal name for management purposes\n          maxLength: 150\n        loginRequired:\n          type: boolean\n          readOnly: true\n        registrationBackend:\n          type: string\n          maxLength: 100\n        registrationBackendOptions:\n          type: object\n          additionalProperties: {}\n          nullable: true\n        authenticationBackends:\n          type: array\n          items:\n            $ref: '#/components/schemas/AuthenticationBackendsEnum'\n          writeOnly: true\n        loginOptions:\n          type: array\n          items:\n            $ref: '#/components/schemas/LoginOption'\n          readOnly: true\n        autoLoginAuthenticationBackend:\n          type: string\n          description: The authentication backend to which the user will be automatically\n            redirected upon starting the form. The chosen backend must be present\n            in `authentication_backends`\n        paymentRequired:\n          type: boolean\n          readOnly: true\n        paymentBackend:\n          default: ''\n          oneOf:\n          - $ref: '#/components/schemas/PaymentBackendEnum'\n          - $ref: '#/components/schemas/BlankEnum'\n        paymentBackendOptions:\n          type: object\n          additionalProperties: {}\n          nullable: true\n        paymentOptions:\n          type: array\n          items:\n            $ref: '#/components/schemas/PaymentOption'\n          readOnly: true\n        literals:\n          $ref: '#/components/schemas/FormLiterals'\n        product:\n          type: string\n          format: uri\n          nullable: true\n          description: URL to the product in the Open Forms API\n        slug:\n          type: string\n          maxLength: 100\n          pattern: ^[-a-zA-Z0-9_]+$\n        url:\n          type: string\n          format: uri\n          readOnly: true\n        steps:\n          type: array\n          items:\n            $ref: '#/components/schemas/MinimalFormStep'\n          readOnly: true\n        showProgressIndicator:\n          type: boolean\n          description: Whether the step progression should be displayed in the UI\n            or not.\n        maintenanceMode:\n          type: boolean\n          description: Users will not be able to start the form if it is in maintenance\n            mode.\n        active:\n          type: boolean\n        isDeleted:\n          type: boolean\n        submissionConfirmationTemplate:\n          type: string\n          description: The content of the submission confirmation page. It can contain\n            variables that will be templated from the submitted form data. If not\n            specified, the global template will be used.\n        explanationTemplate:\n          type: string\n          description: Content that will be shown on the start page of the form, below\n            the title and above the log in text.\n        submissionAllowed:\n          allOf:\n          - $ref: '#/components/schemas/SubmissionAllowedEnum'\n          description: Whether the user is allowed to submit this form or not, and\n            whether the overview page should be shown if they are not.\n        submissionsRemovalOptions:\n          $ref: '#/components/schemas/SubmissionsRemovalOptions'\n        confirmationEmailTemplate:\n          allOf:\n          - $ref: '#/components/schemas/ConfirmationEmailTemplate'\n          nullable: true\n        confirmationEmailOption:\n          $ref: '#/components/schemas/ConfirmationEmailOptionEnum'\n        displayMainWebsiteLink:\n          type: boolean\n          description: Display the link to the main website on the submission confirmation\n            page.\n        requiredFieldsWithAsterisk:\n          type: boolean\n          readOnly: true\n      required:\n      - loginOptions\n      - loginRequired\n      - name\n      - paymentOptions\n      - paymentRequired\n      - requiredFieldsWithAsterisk\n      - slug\n      - steps\n      - url\n      - uuid\n    FormAdminMessage:\n      type: object\n      description: Collect metadata about which (success) message to send.\n      properties:\n        submitAction:\n          allOf:\n          - $ref: '#/components/schemas/SubmitActionEnum'\n          description: Which submit action was clicked. This determines the success\n            message todisplay.\n        isCreate:\n          type: boolean\n          description: Whether the submit action was a create operation or update.\n        redirectUrl:\n          type: string\n          format: uri\n          readOnly: true\n          description: Where the UI should redirect the user to. The exact admin URL\n            varies with the submit action.\n      required:\n      - isCreate\n      - redirectUrl\n      - submitAction\n    FormData:\n      type: object\n      properties:\n        data:\n          type: object\n          additionalProperties: {}\n          title: form data\n          description: The Form.io submission data object. This will be merged with\n            the full form submission data, including data from other steps, to evaluate\n            the configured form logic.\n    FormDefinition:\n      type: object\n      properties:\n        url:\n          type: string\n          format: uri\n          readOnly: true\n        uuid:\n          type: string\n          format: uuid\n        name:\n          type: string\n          maxLength: 50\n        internalName:\n          type: string\n          description: internal name for management purposes\n          maxLength: 50\n        slug:\n          type: string\n          maxLength: 100\n          pattern: ^[-a-zA-Z0-9_]+$\n        configuration:\n          type: object\n          additionalProperties: {}\n          title: Form.io configuration\n          description: The form definition as Form.io JSON schema\n        loginRequired:\n          type: boolean\n          description: DigID Login required for form step\n        isReusable:\n          type: boolean\n          description: Allow this definition to be re-used in multiple forms\n      required:\n      - configuration\n      - name\n      - slug\n      - url\n    FormDefinitionDetail:\n      type: object\n      properties:\n        url:\n          type: string\n          format: uri\n          readOnly: true\n        uuid:\n          type: string\n          format: uuid\n        name:\n          type: string\n          maxLength: 50\n        internalName:\n          type: string\n          description: internal name for management purposes\n          maxLength: 50\n        slug:\n          type: string\n          maxLength: 100\n          pattern: ^[-a-zA-Z0-9_]+$\n        configuration:\n          type: object\n          additionalProperties: {}\n          title: Form.io configuration\n          description: The form definition as Form.io JSON schema\n        loginRequired:\n          type: boolean\n          description: DigID Login required for form step\n        isReusable:\n          type: boolean\n          description: Allow this definition to be re-used in multiple forms\n        usedIn:\n          type: array\n          items:\n            $ref: '#/components/schemas/UsedInForm'\n          title: Used in forms\n          description: The collection of forms making use of this definition. This\n            includes both active and inactive forms.\n      required:\n      - configuration\n      - name\n      - slug\n      - url\n      - usedIn\n    FormImport:\n      type: object\n      properties:\n        file:\n          type: string\n          format: uri\n          description: The file that contains the form, form definitions and form\n            steps.\n      required:\n      - file\n    FormLiterals:\n      type: object\n      properties:\n        previousText:\n          $ref: '#/components/schemas/ButtonText'\n        beginText:\n          $ref: '#/components/schemas/ButtonText'\n        changeText:\n          $ref: '#/components/schemas/ButtonText'\n        confirmText:\n          $ref: '#/components/schemas/ButtonText'\n    FormLogic:\n      type: object\n      properties:\n        uuid:\n          type: string\n          format: uuid\n          readOnly: true\n        url:\n          type: string\n          format: uri\n          readOnly: true\n        form:\n          type: string\n          format: uri\n          description: Form to which the JSON logic applies.\n        jsonLogicTrigger:\n          type: object\n          additionalProperties: {}\n          title: JSON logic\n          description: The trigger expression to determine if the actions should execute\n            or not. Note that this must be a valid JsonLogic expression, and the first\n            operand must be a reference to a component in the form.\n        actions:\n          type: array\n          items:\n            $ref: '#/components/schemas/LogicComponentAction'\n          description: Actions triggered when the trigger expression evaluates to\n            'truthy'.\n        isAdvanced:\n          type: boolean\n          description: Is this an advanced rule (the admin user manually wrote the\n            trigger as JSON)?\n      required:\n      - actions\n      - form\n      - jsonLogicTrigger\n      - url\n      - uuid\n    FormPriceLogic:\n      type: object\n      properties:\n        uuid:\n          type: string\n          format: uuid\n          readOnly: true\n        url:\n          type: string\n          format: uri\n          readOnly: true\n        form:\n          type: string\n          format: uri\n          description: Form to which the pricing JSON logic applies.\n        jsonLogicTrigger:\n          type: object\n          additionalProperties: {}\n          title: JSON logic\n          description: The trigger expression to determine if the actions should execute\n            or not. Note that this must be a valid JsonLogic expression, and the first\n            operand must be a reference to a component in the form.\n        price:\n          type: string\n          format: decimal\n          pattern: ^\\d{0,8}(?:\\.\\d{0,2})?$\n      required:\n      - form\n      - jsonLogicTrigger\n      - price\n      - url\n      - uuid\n    FormStep:\n      type: object\n      properties:\n        uuid:\n          type: string\n          format: uuid\n          readOnly: true\n        index:\n          type: integer\n        slug:\n          type: string\n          readOnly: true\n        configuration:\n          type: object\n          additionalProperties: {}\n          readOnly: true\n        formDefinition:\n          type: string\n          format: uri\n        name:\n          type: string\n          readOnly: true\n        internalName:\n          type: string\n          readOnly: true\n        url:\n          type: string\n          format: uri\n          readOnly: true\n        loginRequired:\n          type: boolean\n          readOnly: true\n        isReusable:\n          type: boolean\n          readOnly: true\n        literals:\n          $ref: '#/components/schemas/FormStepLiterals'\n      required:\n      - configuration\n      - formDefinition\n      - index\n      - internalName\n      - isReusable\n      - loginRequired\n      - name\n      - slug\n      - url\n      - uuid\n    FormStepLiterals:\n      type: object\n      properties:\n        previousText:\n          $ref: '#/components/schemas/ButtonText'\n        saveText:\n          $ref: '#/components/schemas/ButtonText'\n        nextText:\n          $ref: '#/components/schemas/ButtonText'\n    FormVersion:\n      type: object\n      properties:\n        uuid:\n          type: string\n          format: uuid\n        created:\n          type: string\n          format: date-time\n          readOnly: true\n          description: Date and time of creation of the form version.\n        user:\n          allOf:\n          - $ref: '#/components/schemas/User'\n          readOnly: true\n        description:\n          type: string\n          title: Version description\n          description: Description/context about this particular version.\n      required:\n      - created\n      - user\n    GenericObject:\n      type: object\n      description: Generic object\n      additionalProperties: true\n    GetStreetNameAndCityViewResult:\n      type: object\n      properties:\n        streetName:\n          type: string\n          description: Found street name\n        city:\n          type: string\n          description: Found city\n      required:\n      - city\n      - streetName\n    IncompleteStep:\n      type: object\n      properties:\n        formStep:\n          type: string\n          format: uri\n          readOnly: true\n      required:\n      - formStep\n    IncompleteSubmissionsRemovalMethodEnum:\n      enum:\n      - delete_permanently\n      - make_anonymous\n      type: string\n    Location:\n      type: object\n      properties:\n        identifier:\n          type: string\n          description: ID of the location\n        name:\n          type: string\n          description: Location name\n      required:\n      - identifier\n      - name\n    LogicActionPolymorphic:\n      oneOf:\n      - $ref: '#/components/schemas/LogicActionPolymorphicGenericObject'\n      - $ref: '#/components/schemas/LogicActionPolymorphicLogicPropertyAction'\n      - $ref: '#/components/schemas/LogicActionPolymorphicLogicValueAction'\n      discriminator:\n        propertyName: type\n        mapping:\n          disable-next: '#/components/schemas/LogicActionPolymorphicGenericObject'\n          property: '#/components/schemas/LogicActionPolymorphicLogicPropertyAction'\n          value: '#/components/schemas/LogicActionPolymorphicLogicValueAction'\n          step-not-applicable: '#/components/schemas/LogicActionPolymorphicGenericObject'\n    LogicActionPolymorphicGenericObject:\n      allOf:\n      - $ref: '#/components/schemas/LogicActionPolymorphicShared'\n      - $ref: '#/components/schemas/GenericObject'\n    LogicActionPolymorphicLogicPropertyAction:\n      allOf:\n      - $ref: '#/components/schemas/LogicActionPolymorphicShared'\n      - $ref: '#/components/schemas/LogicPropertyAction'\n    LogicActionPolymorphicLogicValueAction:\n      allOf:\n      - $ref: '#/components/schemas/LogicActionPolymorphicShared'\n      - $ref: '#/components/schemas/LogicValueAction'\n    LogicActionPolymorphicShared:\n      type: object\n      description: |-\n        Polymorphic serializer base class.\n\n        Note that the discriminator field must exist at the same depth as the mapped serializer\n        fields for the OpenAPI introspection. See\n        https://swagger.io/docs/specification/data-models/inheritance-and-polymorphism/ for\n        more information. As such, it's not possible to define something like:\n\n        {\n            \"object_type\": \"foo\",\n            \"polymorphic_context\": {\n                \u003cfoo-specific fields\u003e\n            }\n        }\n\n        without explicitly wrapping this in a parent serializer, i.e. - ``polymorphic_context``\n        can not be a PolymorphicSerializer itself, as it requires access to the ``object_type``\n        in the parent scope.\n      properties:\n        type:\n          allOf:\n          - $ref: '#/components/schemas/LogicActionPolymorphicSharedTypeEnum'\n          description: Action type for this particular action\n      required:\n      - type\n    LogicActionPolymorphicSharedTypeEnum:\n      enum:\n      - step-not-applicable\n      - disable-next\n      - property\n      - value\n      type: string\n    LogicComponentAction:\n      type: object\n      properties:\n        component:\n          type: string\n          title: Form.io component\n          description: 'Sleutel van de Form.io-component waarop de actie van toepassing\n            is. Dit veld is optioneel als het actietype `disable-next` is, anders\n            vereist. '\n        formStep:\n          type: string\n          format: uri\n          nullable: true\n          description: De formulierstap die wordt beïnvloed door de actie. Dit veld\n            is verplicht als het actietype `step-not-applicable` is, anders optioneel.\n        action:\n          $ref: '#/components/schemas/LogicActionPolymorphic'\n      required:\n      - action\n    LogicPropertyAction:\n      type: object\n      properties:\n        property:\n          $ref: '#/components/schemas/ComponentProperty'\n        state:\n          type: object\n          additionalProperties: {}\n          title: value of the property\n          description: 'Valid JSON determining the new value of the specified property.\n            For example: `true` or `false`.'\n      required:\n      - property\n      - state\n    LogicValueAction:\n      type: object\n      properties:\n        value:\n          type: object\n          additionalProperties: {}\n          description: A valid JsonLogic expression describing the value. This may\n            refer to (other) Form.io components.\n      required:\n      - value\n    LoginLogo:\n      type: object\n      properties:\n        title:\n          type: string\n          readOnly: true\n          description: Display title (for accessibility)\n        imageSrc:\n          type: string\n          format: uri\n          readOnly: true\n          title: Image URL\n          description: URL to the logo image\n        href:\n          type: string\n          format: uri\n          readOnly: true\n          title: Click URL\n          description: Information link to the authentication provider\n      required:\n      - href\n      - imageSrc\n      - title\n    LoginOption:\n      type: object\n      properties:\n        identifier:\n          type: string\n          readOnly: true\n        label:\n          type: string\n          readOnly: true\n          title: Button label\n          description: Button label\n        url:\n          type: string\n          format: uri\n          readOnly: true\n          title: Login URL\n          description: URL to start login flow, expects 'next' GET-parameter with\n            return url\n        logo:\n          allOf:\n          - $ref: '#/components/schemas/LoginLogo'\n          readOnly: true\n          title: Optional logo\n          description: Optional logo\n      required:\n      - identifier\n      - label\n      - logo\n      - url\n    MinimalFormStep:\n      type: object\n      properties:\n        uuid:\n          type: string\n          format: uuid\n          readOnly: true\n        slug:\n          type: string\n          pattern: ^[-a-zA-Z0-9_]+$\n        formDefinition:\n          type: string\n          readOnly: true\n        index:\n          type: integer\n        literals:\n          $ref: '#/components/schemas/FormStepLiterals'\n        url:\n          type: string\n          format: uri\n      required:\n      - formDefinition\n      - index\n      - slug\n      - url\n      - uuid\n    NestedSubmissionPaymentDetail:\n      type: object\n      properties:\n        isRequired:\n          type: boolean\n          readOnly: true\n          title: payment required\n          description: Whether the registration requires payment.\n        amount:\n          type: string\n          format: decimal\n          pattern: ^\\d{0,8}(?:\\.\\d{0,2})?$\n          readOnly: true\n          nullable: true\n          title: payment amount\n          description: Amount (to be) paid\n        hasPaid:\n          type: boolean\n          readOnly: true\n          title: user has paid\n          description: Whether the user has completed the required payment.\n      required:\n      - amount\n      - hasPaid\n      - isRequired\n    NestedSubmissionStep:\n      type: object\n      description: |-\n        A type of `ModelSerializer` that uses hyperlinked relationships with compound keys instead\n        of primary key relationships.  Specifically:\n\n        * A 'url' field is included instead of the 'id' field.\n        * Relationships to other instances are hyperlinks, instead of primary keys.\n\n        NOTE: this only works with DRF 3.1.0 and above.\n      properties:\n        id:\n          type: string\n          format: uuid\n        name:\n          type: string\n        url:\n          type: string\n          format: uri\n          readOnly: true\n        formStep:\n          type: string\n          format: uri\n          readOnly: true\n        isApplicable:\n          type: boolean\n          readOnly: true\n        completed:\n          type: boolean\n          readOnly: true\n        optional:\n          type: boolean\n          readOnly: true\n        canSubmit:\n          type: boolean\n          readOnly: true\n      required:\n      - canSubmit\n      - completed\n      - formStep\n      - id\n      - isApplicable\n      - name\n      - optional\n      - url\n    PaginatedFormDefinitionList:\n      type: object\n      properties:\n        count:\n          type: integer\n          example: 123\n        next:\n          type: string\n          nullable: true\n          format: uri\n          example: http://api.example.org/accounts/?page=4\n        previous:\n          type: string\n          nullable: true\n          format: uri\n          example: http://api.example.org/accounts/?page=2\n        results:\n          type: array\n          items:\n            $ref: '#/components/schemas/FormDefinition'\n    PaginatedSubmissionList:\n      type: object\n      properties:\n        count:\n          type: integer\n          example: 123\n        next:\n          type: string\n          nullable: true\n          format: uri\n          example: http://api.example.org/accounts/?page=4\n        previous:\n          type: string\n          nullable: true\n          format: uri\n          example: http://api.example.org/accounts/?page=2\n        results:\n          type: array\n          items:\n            $ref: '#/components/schemas/Submission'\n    PatchedForm:\n      type: object\n      description: |-\n        Represent a single `Form` definition.\n\n        Contains all the relevant metadata and configuration from the form design. Form\n        renderers should use this as starting point.\n\n        Note that this schema is used for both non-admin users filling out forms and\n        admin users designing forms. The fields that are only relevant for admin users are:\n        `internalName`, `registrationBackend`, `registrationBackendOptions`, `paymentBackend`, `paymentBackendOptions`, `product`, `isDeleted`, `submissionConfirmationTemplate`, `submissionsRemovalOptions`, `confirmationEmailTemplate`, `confirmationEmailOption`, `displayMainWebsiteLink`.\n      properties:\n        uuid:\n          type: string\n          format: uuid\n          readOnly: true\n        name:\n          type: string\n          maxLength: 150\n        internalName:\n          type: string\n          description: internal name for management purposes\n          maxLength: 150\n        loginRequired:\n          type: boolean\n          readOnly: true\n        registrationBackend:\n          type: string\n          maxLength: 100\n        registrationBackendOptions:\n          type: object\n          additionalProperties: {}\n          nullable: true\n        authenticationBackends:\n          type: array\n          items:\n            $ref: '#/components/schemas/AuthenticationBackendsEnum'\n          writeOnly: true\n        loginOptions:\n          type: array\n          items:\n            $ref: '#/components/schemas/LoginOption'\n          readOnly: true\n        autoLoginAuthenticationBackend:\n          type: string\n          description: The authentication backend to which the user will be automatically\n            redirected upon starting the form. The chosen backend must be present\n            in `authentication_backends`\n        paymentRequired:\n          type: boolean\n          readOnly: true\n        paymentBackend:\n          default: ''\n          oneOf:\n          - $ref: '#/components/schemas/PaymentBackendEnum'\n          - $ref: '#/components/schemas/BlankEnum'\n        paymentBackendOptions:\n          type: object\n          additionalProperties: {}\n          nullable: true\n        paymentOptions:\n          type: array\n          items:\n            $ref: '#/components/schemas/PaymentOption'\n          readOnly: true\n        literals:\n          $ref: '#/components/schemas/FormLiterals'\n        product:\n          type: string\n          format: uri\n          nullable: true\n          description: URL to the product in the Open Forms API\n        slug:\n          type: string\n          maxLength: 100\n          pattern: ^[-a-zA-Z0-9_]+$\n        url:\n          type: string\n          format: uri\n          readOnly: true\n        steps:\n          type: array\n          items:\n            $ref: '#/components/schemas/MinimalFormStep'\n          readOnly: true\n        showProgressIndicator:\n          type: boolean\n          description: Whether the step progression should be displayed in the UI\n            or not.\n        maintenanceMode:\n          type: boolean\n          description: Users will not be able to start the form if it is in maintenance\n            mode.\n        active:\n          type: boolean\n        isDeleted:\n          type: boolean\n        submissionConfirmationTemplate:\n          type: string\n          description: The content of the submission confirmation page. It can contain\n            variables that will be templated from the submitted form data. If not\n            specified, the global template will be used.\n        explanationTemplate:\n          type: string\n          description: Content that will be shown on the start page of the form, below\n            the title and above the log in text.\n        submissionAllowed:\n          allOf:\n          - $ref: '#/components/schemas/SubmissionAllowedEnum'\n          description: Whether the user is allowed to submit this form or not, and\n            whether the overview page should be shown if they are not.\n        submissionsRemovalOptions:\n          $ref: '#/components/schemas/SubmissionsRemovalOptions'\n        confirmationEmailTemplate:\n          allOf:\n          - $ref: '#/components/schemas/ConfirmationEmailTemplate'\n          nullable: true\n        confirmationEmailOption:\n          $ref: '#/components/schemas/ConfirmationEmailOptionEnum'\n        displayMainWebsiteLink:\n          type: boolean\n          description: Display the link to the main website on the submission confirmation\n            page.\n        requiredFieldsWithAsterisk:\n          type: boolean\n          readOnly: true\n    PatchedFormDefinition:\n      type: object\n      properties:\n        url:\n          type: string\n          format: uri\n          readOnly: true\n        uuid:\n          type: string\n          format: uuid\n        name:\n          type: string\n          maxLength: 50\n        internalName:\n          type: string\n          description: internal name for management purposes\n          maxLength: 50\n        slug:\n          type: string\n          maxLength: 100\n          pattern: ^[-a-zA-Z0-9_]+$\n        configuration:\n          type: object\n          additionalProperties: {}\n          title: Form.io configuration\n          description: The form definition as Form.io JSON schema\n        loginRequired:\n          type: boolean\n          description: DigID Login required for form step\n        isReusable:\n          type: boolean\n          description: Allow this definition to be re-used in multiple forms\n    PatchedFormLogic:\n      type: object\n      properties:\n        uuid:\n          type: string\n          format: uuid\n          readOnly: true\n        url:\n          type: string\n          format: uri\n          readOnly: true\n        form:\n          type: string\n          format: uri\n          description: Form to which the JSON logic applies.\n        jsonLogicTrigger:\n          type: object\n          additionalProperties: {}\n          title: JSON logic\n          description: The trigger expression to determine if the actions should execute\n            or not. Note that this must be a valid JsonLogic expression, and the first\n            operand must be a reference to a component in the form.\n        actions:\n          type: array\n          items:\n            $ref: '#/components/schemas/LogicComponentAction'\n          description: Actions triggered when the trigger expression evaluates to\n            'truthy'.\n        isAdvanced:\n          type: boolean\n          description: Is this an advanced rule (the admin user manually wrote the\n            trigger as JSON)?\n    PatchedFormPriceLogic:\n      type: object\n      properties:\n        uuid:\n          type: string\n          format: uuid\n          readOnly: true\n        url:\n          type: string\n          format: uri\n          readOnly: true\n        form:\n          type: string\n          format: uri\n          description: Form to which the pricing JSON logic applies.\n        jsonLogicTrigger:\n          type: object\n          additionalProperties: {}\n          title: JSON logic\n          description: The trigger expression to determine if the actions should execute\n            or not. Note that this must be a valid JsonLogic expression, and the first\n            operand must be a reference to a component in the form.\n        price:\n          type: string\n          format: decimal\n          pattern: ^\\d{0,8}(?:\\.\\d{0,2})?$\n    PatchedFormStep:\n      type: object\n      properties:\n        uuid:\n          type: string\n          format: uuid\n          readOnly: true\n        index:\n          type: integer\n        slug:\n          type: string\n          readOnly: true\n        configuration:\n          type: object\n          additionalProperties: {}\n          readOnly: true\n        formDefinition:\n          type: string\n          format: uri\n        name:\n          type: string\n          readOnly: true\n        internalName:\n          type: string\n          readOnly: true\n        url:\n          type: string\n          format: uri\n          readOnly: true\n        loginRequired:\n          type: boolean\n          readOnly: true\n        isReusable:\n          type: boolean\n          readOnly: true\n        literals:\n          $ref: '#/components/schemas/FormStepLiterals'\n    PaymentBackendEnum:\n      enum:\n      - ogone-legacy\n      type: string\n    PaymentInfo:\n      type: object\n      properties:\n        type:\n          allOf:\n          - $ref: '#/components/schemas/PaymentInfoTypeEnum'\n          readOnly: true\n          title: Request type\n        url:\n          type: string\n          format: uri\n          readOnly: true\n        data:\n          type: object\n          additionalProperties:\n            type: string\n            readOnly: true\n            title: Value\n          readOnly: true\n      required:\n      - data\n      - type\n      - url\n    PaymentInfoTypeEnum:\n      enum:\n      - get\n      - post\n      type: string\n    PaymentOption:\n      type: object\n      properties:\n        identifier:\n          type: string\n          readOnly: true\n        label:\n          type: string\n          readOnly: true\n          title: Button label\n          description: Button label\n      required:\n      - identifier\n      - label\n    PaymentPlugin:\n      type: object\n      description: Serialize the available plugins for the form builder.\n      properties:\n        id:\n          type: string\n          description: The unique plugin identifier\n        label:\n          type: string\n          description: The human-readable name for a plugin.\n        schema:\n          type: object\n          additionalProperties: {}\n          title: JSON schema\n          description: The generated JSON schema for the plugin options.\n      required:\n      - id\n      - label\n      - schema\n    PrefillAttribute:\n      type: object\n      properties:\n        id:\n          type: string\n          description: The unique attribute identifier\n        label:\n          type: string\n          description: The human-readable name for an attribute.\n      required:\n      - id\n      - label\n    PrefillPlugin:\n      type: object\n      properties:\n        id:\n          type: string\n          description: The unique plugin identifier\n        label:\n          type: string\n          description: The human-readable name for a plugin.\n        requiresAuth:\n          type: string\n          nullable: true\n          title: Required authentication attribute\n          description: The authentication attribute required for this plugin to lookup\n            remote data.\n      required:\n      - id\n      - label\n      - requiresAuth\n    PrivacyPolicyInfo:\n      type: object\n      properties:\n        requiresPrivacyConsent:\n          type: boolean\n          description: Of de gebruiker akkoord moet gaan met het privacybeleid voordat\n            hij een formulier indient.\n        privacyLabel:\n          type: string\n          description: Het opgemaakte label dat naast het selectievakje moet worden\n            getoond wanneer de gebruiker wordt gevraagd akkoord te gaan met het privacybeleid.\n      required:\n      - requiresPrivacyConsent\n    ProcessDefinition:\n      type: object\n      properties:\n        id:\n          type: string\n        key:\n          type: string\n          description: The process definition identifier, used to group different\n            versions.\n        name:\n          type: string\n          description: The human-readable name of the process definition.\n        version:\n          type: integer\n          description: The version identifier relative to the 'key'.\n      required:\n      - id\n      - key\n      - name\n      - version\n    Product:\n      type: object\n      properties:\n        url:\n          type: string\n          format: uri\n          readOnly: true\n        uuid:\n          type: string\n          format: uuid\n          readOnly: true\n          description: Globally unique identifier\n        name:\n          type: string\n          maxLength: 50\n        price:\n          type: string\n          format: decimal\n          pattern: ^\\d{0,8}(?:\\.\\d{0,2})?$\n        information:\n          type: string\n          description: Information text to be displayed in the confirmation page and\n            confirmation email.\n      required:\n      - name\n      - price\n      - url\n      - uuid\n    RegistrationAttribute:\n      type: object\n      properties:\n        id:\n          type: string\n          description: The unique attribute identifier\n        label:\n          type: string\n          description: The human-readable name for an attribute.\n      required:\n      - id\n      - label\n    RegistrationPlugin:\n      type: object\n      properties:\n        id:\n          type: string\n          description: The unique plugin identifier\n        label:\n          type: string\n          description: The human-readable name for a plugin.\n        schema:\n          type: object\n          additionalProperties: {}\n          title: JSON schema\n          description: The generated JSON schema for the plugin options.\n      required:\n      - id\n      - label\n      - schema\n    ResultEnum:\n      enum:\n      - failed\n      - success\n      type: string\n    StatusEnum:\n      enum:\n      - in_progress\n      - done\n      type: string\n    Submission:\n      type: object\n      properties:\n        id:\n          type: string\n          format: uuid\n          readOnly: true\n          title: UUID\n        url:\n          type: string\n          format: uri\n          readOnly: true\n        form:\n          type: string\n          format: uri\n        steps:\n          type: array\n          items:\n            $ref: '#/components/schemas/NestedSubmissionStep'\n          readOnly: true\n          title: Submission steps\n          description: Details of every form step of this submission's form, tracking\n            the progress and other meta-data of each particular step.\n        nextStep:\n          type: string\n          format: uri\n          readOnly: true\n          nullable: true\n        submissionAllowed:\n          allOf:\n          - $ref: '#/components/schemas/SubmissionAllowedEnum'\n          readOnly: true\n          description: Whether the user is allowed to submit this form and whether\n            the user should see the overview page.\n        isAuthenticated:\n          type: boolean\n          readOnly: true\n          description: Whether the user was authenticated when creating this submission.\n        payment:\n          allOf:\n          - $ref: '#/components/schemas/NestedSubmissionPaymentDetail'\n          readOnly: true\n          title: payment information\n        formUrl:\n          type: string\n          format: uri\n          description: URL where the user initialized the submission.\n          maxLength: 255\n      required:\n      - form\n      - formUrl\n      - id\n      - isAuthenticated\n      - nextStep\n      - payment\n      - steps\n      - submissionAllowed\n      - url\n    SubmissionAllowedEnum:\n      enum:\n      - 'yes'\n      - no_with_overview\n      - no_without_overview\n      type: string\n    SubmissionCoSignStatus:\n      type: object\n      properties:\n        coSigned:\n          type: boolean\n          readOnly: true\n          title: is co-signed?\n          description: Indicator whether the submission has been co-signed or not.\n        representation:\n          type: string\n          readOnly: true\n          title: Co-signer display\n          description: Co-signer representation string for the UI.\n      required:\n      - coSigned\n      - representation\n    SubmissionCompletion:\n      type: object\n      properties:\n        statusUrl:\n          type: string\n          format: uri\n          title: status check endpoint\n          description: The API endpoint where the background processing status can\n            be checked. After calling the completion endpoint, this status URL should\n            be polled to report the processing status back to the end-user. Note that\n            the endpoint contains a token which invalidates on state changes and after\n            one day.\n      required:\n      - statusUrl\n    SubmissionProcessingStatus:\n      type: object\n      properties:\n        status:\n          allOf:\n          - $ref: '#/components/schemas/StatusEnum'\n          default: in_progress\n          title: background processing status\n          description: The async task state, managed by the async task queue. Once\n            the status is `done`, check the `result` field for the outcome.\n        result:\n          title: background processing result\n          description: The result from the background processing. This field only\n            has a value if the processing has completed (both successfully or with\n            errors).\n          oneOf:\n          - $ref: '#/components/schemas/ResultEnum'\n          - $ref: '#/components/schemas/BlankEnum'\n        errorMessage:\n          type: string\n          title: Error information\n          description: Error feedback in case the processing did not complete successfully.\n        publicReference:\n          type: string\n          description: The public registration reference, sourced from the registration\n            backend or otherwise uniquely generated in case the backend could not\n            provide it.\n        confirmationPageContent:\n          type: string\n          description: Body text of the confirmation page. May contain HTML!\n        reportDownloadUrl:\n          type: string\n          format: uri\n          description: Download URL for the generated PDF report. Note that this contain\n            a timestamped token generated by the backend.\n        paymentUrl:\n          type: string\n          format: uri\n          description: URL to retrieve the payment information. Note that this (will)\n            contain(s) a timestamped token generated by the backend.\n        mainWebsiteUrl:\n          type: string\n          readOnly: true\n      required:\n      - mainWebsiteUrl\n    SubmissionStateLogic:\n      type: object\n      properties:\n        submission:\n          $ref: '#/components/schemas/Submission'\n        step:\n          $ref: '#/components/schemas/SubmissionStep'\n      required:\n      - step\n      - submission\n    SubmissionStep:\n      type: object\n      description: |-\n        A type of `ModelSerializer` that uses hyperlinked relationships with compound keys instead\n        of primary key relationships.  Specifically:\n\n        * A 'url' field is included instead of the 'id' field.\n        * Relationships to other instances are hyperlinks, instead of primary keys.\n\n        NOTE: this only works with DRF 3.1.0 and above.\n      properties:\n        id:\n          type: string\n          format: uuid\n          readOnly: true\n          nullable: true\n          title: UUID\n        slug:\n          type: string\n          readOnly: true\n          pattern: ^[-a-zA-Z0-9_]+$\n        formStep:\n          allOf:\n          - $ref: '#/components/schemas/ContextAwareFormStep'\n          readOnly: true\n        data:\n          type: object\n          additionalProperties: {}\n          nullable: true\n        isApplicable:\n          type: boolean\n          readOnly: true\n        completed:\n          type: boolean\n          readOnly: true\n        optional:\n          type: boolean\n          readOnly: true\n        canSubmit:\n          type: boolean\n          readOnly: true\n      required:\n      - canSubmit\n      - completed\n      - formStep\n      - id\n      - isApplicable\n      - optional\n      - slug\n    SubmissionSuspension:\n      type: object\n      properties:\n        email:\n          type: string\n          format: email\n          writeOnly: true\n          title: Contact email address\n          description: The email address where the 'magic' resume link should be sent\n            to\n        suspendedOn:\n          type: string\n          format: date-time\n          readOnly: true\n          nullable: true\n      required:\n      - email\n      - suspendedOn\n    SubmissionsRemovalOptions:\n      type: object\n      properties:\n        successfulSubmissionsRemovalLimit:\n          type: integer\n          maximum: 2147483647\n          minimum: 1\n          nullable: true\n          title: Successful submission removal limit\n          description: Amount of days successful submissions of this form will remain\n            before being removed. Leave blank to use value in General Configuration.\n        successfulSubmissionsRemovalMethod:\n          description: How successful submissions of this form will be removed after\n            the limit. Leave blank to use value in General Configuration.\n          oneOf:\n          - $ref: '#/components/schemas/IncompleteSubmissionsRemovalMethodEnum'\n          - $ref: '#/components/schemas/BlankEnum'\n        incompleteSubmissionsRemovalLimit:\n          type: integer\n          maximum: 2147483647\n          minimum: 1\n          nullable: true\n          title: Incomplete submission removal limit\n          description: Amount of days incomplete submissions of this form will remain\n            before being removed. Leave blank to use value in General Configuration.\n        incompleteSubmissionsRemovalMethod:\n          description: How incomplete submissions of this form will be removed after\n            the limit. Leave blank to use value in General Configuration.\n          oneOf:\n          - $ref: '#/components/schemas/IncompleteSubmissionsRemovalMethodEnum'\n          - $ref: '#/components/schemas/BlankEnum'\n        erroredSubmissionsRemovalLimit:\n          type: integer\n          maximum: 2147483647\n          minimum: 1\n          nullable: true\n          title: Errored submission removal limit\n          description: Amount of days errored submissions of this form will remain\n            before being removed. Leave blank to use value in General Configuration.\n        erroredSubmissionsRemovalMethod:\n          title: Errored submission removal limit\n          description: How errored submissions of this form will be removed after\n            the limit. Leave blank to use value in General Configuration.\n          oneOf:\n          - $ref: '#/components/schemas/IncompleteSubmissionsRemovalMethodEnum'\n          - $ref: '#/components/schemas/BlankEnum'\n        allSubmissionsRemovalLimit:\n          type: integer\n          maximum: 2147483647\n          minimum: 1\n          nullable: true\n          description: Amount of days when all submissions of this form will be permanently\n            deleted. Leave blank to use value in General Configuration.\n    SubmitActionEnum:\n      enum:\n      - _save\n      - _addanother\n      - _continue\n      type: string\n    TemporaryFileUpload:\n      type: object\n      description: |-\n        https://help.form.io/integrations/filestorage/#url\n\n        {\n            url: 'http://link.to/file',\n            name: 'The_Name_Of_The_File.doc',\n            size: 1000\n        }\n      properties:\n        file:\n          type: string\n          writeOnly: true\n        url:\n          type: string\n          readOnly: true\n        name:\n          type: string\n          readOnly: true\n          title: File name\n        size:\n          type: integer\n          readOnly: true\n          title: File size\n      required:\n      - file\n      - name\n      - size\n      - url\n    Time:\n      type: object\n      properties:\n        time:\n          type: string\n          format: date-time\n      required:\n      - time\n    UsedInForm:\n      type: object\n      properties:\n        url:\n          type: string\n          format: uri\n          readOnly: true\n        uuid:\n          type: string\n          format: uuid\n        name:\n          type: string\n          readOnly: true\n        active:\n          type: boolean\n        adminUrl:\n          type: string\n          format: uri\n          readOnly: true\n          description: Link to the change/view page in the admin interface\n      required:\n      - adminUrl\n      - name\n      - url\n    User:\n      type: object\n      properties:\n        username:\n          type: string\n          description: Required. 150 characters or fewer. Letters, digits and @/./+/-/_\n            only.\n          pattern: ^[\\w.@+-]+$\n          maxLength: 150\n        fullName:\n          type: string\n        firstName:\n          type: string\n          maxLength: 255\n        lastName:\n          type: string\n          maxLength: 255\n      required:\n      - fullName\n      - username\n    ValidationInput:\n      type: object\n      properties:\n        value:\n          type: string\n          description: Value to be validated\n      required:\n      - value\n    ValidationPlugin:\n      type: object\n      properties:\n        id:\n          type: string\n          description: The unique plugin identifier\n        label:\n          type: string\n          description: The human-readable name for a plugin.\n      required:\n      - id\n      - label\n    ValidationResult:\n      type: object\n      properties:\n        isValid:\n          type: boolean\n          description: Boolean indicating value passed validation.\n        messages:\n          type: array\n          items:\n            type: string\n            title: error message\n            description: error message\n          description: List of validation error messages for display.\n      required:\n      - isValid\n      - messages\n  securitySchemes:\n    cookieAuth:\n      type: apiKey\n      in: cookie\n      name: openforms_sessionid\n    tokenAuth:\n      type: apiKey\n      in: header\n      name: Authorization\n      description: Token-based authentication with required prefix \"Token\"\nexternalDocs:\n  description: Functional and technical documentation\n  url: https://open-forms.readthedocs.io/\n"
		}
	},
	"Error": "parse: parse spec: parse components: schemas: \"SubmissionProcessingStatus\": parse schema: property \"status\": parse default: unexpected type: \"\""
}