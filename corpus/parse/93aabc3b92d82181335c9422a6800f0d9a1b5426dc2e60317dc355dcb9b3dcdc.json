{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/swagger-api/swagger-core"
		},
		"file": {
			"name": "ModelWithSecurityRequirements.json",
			"size": 0,
			"path": "modules/swagger-core/src/test/resources/ModelWithSecurityRequirements.json",
			"byteSize": 2846,
			"content": "{\n  \"openapi\": \"3.0.1\",\n  \"info\": {\n    \"title\": \"Swagger Petstore\",\n    \"contact\": {\n      \"name\": \"Swagger API Team\",\n      \"url\": \"http://swagger.io\",\n      \"email\": \"foo@bar.baz\"\n    },\n    \"version\": \"1.0.0\"\n  },\n  \"servers\": [\n    {\n      \"url\": \"http://petstore.swagger.io\"\n    }\n  ],\n  \"paths\": {\n    \"/pets\": {\n      \"get\": {\n        \"tags\": [\n          \"Pet Operations\"\n        ],\n        \"summary\": \"finds pets in the system\",\n        \"description\": \"a longer description\",\n        \"operationId\": \"get pet by id\",\n        \"parameters\": [\n          {\n            \"name\": \"tags\",\n            \"in\": \"query\",\n            \"description\": \"tags to filter by\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"petId\",\n            \"in\": \"path\",\n            \"description\": \"pet to fetch\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int64\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"pets returned\",\n            \"content\": {\n              \"*/*\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Person\"\n                }\n              }\n            }\n          },\n          \"default\": {\n            \"description\": \"error response\",\n            \"content\": {\n              \"*/*\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Error\"\n                }\n              }\n            }\n          }\n        },\n        \"security\": [\n          {\n            \"internal_oauth2\": [\"user:email\"]\n          },\n          {\n            \"api_key\": []\n          }\n        ]\n      }\n    }\n  },\n  \"components\": {\n    \"schemas\": {\n      \"Person\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"id\": {\n            \"type\": \"integer\",\n            \"format\": \"int64\"\n          },\n          \"firstName\": {\n            \"type\": \"string\"\n          },\n          \"address\": {\n            \"$ref\": \"#/components/schemas/Address\"\n          },\n          \"properties\": {\n            \"type\": \"object\",\n            \"additionalProperties\": {\n              \"type\": \"string\"\n            }\n          },\n          \"birthDate\": {\n            \"type\": \"string\",\n            \"format\": \"date-time\"\n          },\n          \"float\": {\n            \"type\": \"number\",\n            \"format\": \"float\"\n          },\n          \"double\": {\n            \"type\": \"number\",\n            \"format\": \"double\"\n          }\n        }\n      }\n    },\n    \"securitySchemes\": {\n      \"githubAccessCode\": {\n        \"flows\": {\n          \"authorizationCode\": {\n            \"scopes\": {\n              \"user:email\": \"Grants read access to a userâ€™s email addresses.\"\n            }\n          }\n        }\n      }\n    }\n  }\n}\n",
			"canonicalURL": "/github.com/swagger-api/swagger-core@259355ab5088fe15e1c790aa36b53994e17639a1/-/blob/modules/swagger-core/src/test/resources/ModelWithSecurityRequirements.json",
			"externalURLs": [
				{
					"url": "https://github.com/swagger-api/swagger-core/blob/259355ab5088fe15e1c790aa36b53994e17639a1/modules/swagger-core/src/test/resources/ModelWithSecurityRequirements.json",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "parse: parse spec: parse components: at 80:17: schemas: \"Person\": parse schema: property \"address\": at 92:22: parse schema: resolve \"#/components/schemas/Address\": find schema: resolve: can't find value for \"components/schemas/Address\""
}