{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/meltygroup/kisee"
		},
		"file": {
			"name": "kisee.yml",
			"size": 0,
			"path": "kisee.yml",
			"byteSize": 4184,
			"content": "---\n\nopenapi: 3.0.0\ninfo:\n  title: Kisee Identity Manager\n  description: An elementary identity manager, which only expose any user/password storage as an API.\n  contact:\n    name: Author\n    url: https://github.com/meltygroup/kisee\n  license:\n    name: MIT\n    url: https://opensource.org/licenses/mit-license.php\n  version: v1\npaths:\n  /users/:\n    get:\n      description: Just give some informations about the users endpoint.\n      responses:\n        '200':\n          description: \"Endpoint informations, but no users.\"\n    post:\n      description: User registration\n      requestBody:\n        required: true\n        description: User informations\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/user_info'\n      responses:\n        '201':\n          description: Newly created user, see Location header.\n        '400':\n          description: An input field is missing, or email is invalid.\n        '409':\n          description: User already exists.\n    patch:\n      description: To change a user password.\n      requestBody:\n        required: true\n        content:\n          application/json-patch+json:\n            schema:\n              $ref: '#/components/schemas/patch'\n      responses:\n        '204':\n          description: \"Empty body, patch successfull.\"\n        '400':\n          description: \"Patch body may be an invalid json-patch, or try to change something else than the password.\"\n        '403':\n          description: \"You're not allowed to change this user's password.\"\n  /jwt/:\n    post:\n      description: Create a new JWT\n      requestBody:\n        description: User username and password\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/user_password'\n      responses:\n        '200':\n          description: Newly created JWT\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/new_jwt'\n        '400':\n          description: \"A required field is missing.\"\n        '403':\n          description: \"Invalid username or password.\"\n\n    get:\n      description: Only a hint POST is possible.\n      responses:\n        '200':\n          description: 'Currently only here to describe the API.'\n\n  /password_recoveries/:\n    get:\n      description: Only a hint POST is possible.\n      responses:\n        '200':\n          description: 'Currently only here to describe the API.'\n    post:\n      description: Start a password recovery process\n      requestBody:\n        description: User username or email.\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/username_or_email'\n\n  /jwt{/jid}:\n    get:\n      description: Not implemented\n      responses:\n        '500':\n          description: \"This is literally not implemented yet.\"\n\n\ncomponents:\n  schemas:\n    user:\n      type: object\n    new_jwt:\n      type: object\n      properties:\n        tokens:\n          type: array\n          items:\n            type: string\n            example: eyJ0eXAiOiJKV1QiLCJhbGciOiJ...\n    user_password:\n      type: object\n      required: [\"username\", \"password\"]\n      properties:\n        username:\n          type: string\n        password:\n          type: string\n          format: password\n    jwt:\n      type: object\n      additionalProperties:\n        type: object\n    user_info:\n      allOf:\n        - $ref: '#/components/schemas/user_password'\n        - type: object\n          required: [\"email\"]\n          properties:\n            email:\n              type: string\n              format: email\n    username_or_email:\n      oneOf:\n        - type: object\n          required: [\"username\"]\n          properties:\n            username:\n              type: string\n        - type: object\n          required: [\"email\"]\n          properties:\n            email:\n              type: string\n              format: email\n    patch:\n      type: array\n      items:\n        type: object\n        properties:\n          op:\n            type: string\n          path:\n            type: string\n          value:\n            type: string\n",
			"canonicalURL": "/github.com/meltygroup/kisee@9ec60166c3d418c1cf0a7af3e1fb4eb81cbe491b/-/blob/kisee.yml",
			"externalURLs": [
				{
					"url": "https://github.com/meltygroup/kisee/blob/9ec60166c3d418c1cf0a7af3e1fb4eb81cbe491b/kisee.yml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "parse: parse spec: parse operations: paths: /jwt{/jid}: get: parse path \"/jwt{/jid}\": invalid path: /jwt{/jid}"
}