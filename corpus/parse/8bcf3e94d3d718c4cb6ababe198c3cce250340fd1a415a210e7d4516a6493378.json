{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/rekabhq/fantom"
		},
		"file": {
			"name": "petstore.openapi.json",
			"size": 0,
			"path": "openapi_files/petstore.openapi.json",
			"byteSize": 43898,
			"content": "{\n  \"openapi\": \"3.0.0\",\n  \"info\": {\n    \"description\": \"This is a sample Petstore server.  You can find\\nout more about Swagger at\\n[https://swagger.io](https://swagger.io) or on\\n[irc.freenode.net, #swagger](https://swagger.io/irc/).\\n\",\n    \"version\": \"1.0.0\",\n    \"title\": \"Swagger Petstore\",\n    \"termsOfService\": \"https://swagger.io/terms/\",\n    \"contact\": {\n      \"email\": \"apiteam@swagger.io\"\n    },\n    \"license\": {\n      \"name\": \"Apache 2.0\",\n      \"url\": \"https://www.apache.org/licenses/LICENSE-2.0.html\"\n    }\n  },\n  \"servers\": [\n    {\n      \"description\": \"SwaggerHub API Auto Mocking\",\n      \"url\": \"https://virtserver.swaggerhub.com/hpoul/Example/1.0.0\"\n    },\n    {\n      \"url\": \"https://petstore.swagger.io/v2\"\n    }\n  ],\n  \"tags\": [\n    {\n      \"name\": \"pet\",\n      \"description\": \"Everything about your Pets\",\n      \"externalDocs\": {\n        \"description\": \"Find out more\",\n        \"url\": \"https://swagger.io\"\n      }\n    },\n    {\n      \"name\": \"store\",\n      \"description\": \"Access to Petstore orders\"\n    },\n    {\n      \"name\": \"user\",\n      \"description\": \"Operations about user\",\n      \"externalDocs\": {\n        \"description\": \"Find out more about our store\",\n        \"url\": \"https://swagger.io\"\n      }\n    }\n  ],\n  \"paths\": {\n    \"/pet\": {\n      \"get\": {\n        \"tags\": [\n          \"pet\"\n        ],\n        \"summary\": \"Add a new pet to the store\",\n        \"operationId\": \"getAllPets\",\n        \"responses\": {\n          \"200\": {\n            \"$ref\": \"#/components/responses/PetsResult\"\n          },\n          \"404\": {\n            \"$ref\": \"#/components/responses/404NotFound\"\n          }\n        }\n      },\n      \"post\": {\n        \"tags\": [\n          \"pet\"\n        ],\n        \"summary\": \"Add a new pet to the store\",\n        \"operationId\": \"addPet\",\n        \"responses\": {\n          \"405\": {\n            \"description\": \"Invalid input\"\n          }\n        },\n        \"requestBody\": {\n          \"$ref\": \"#/components/requestBodies/Pet\"\n        }\n      },\n      \"put\": {\n        \"tags\": [\n          \"pet\"\n        ],\n        \"summary\": \"Update an existing pet\",\n        \"operationId\": \"updatePet\",\n        \"responses\": {\n          \"400\": {\n            \"description\": \"Invalid ID supplied\"\n          },\n          \"404\": {\n            \"description\": \"Pet not found\"\n          },\n          \"405\": {\n            \"description\": \"Validation exception\"\n          }\n        },\n        \"requestBody\": {\n          \"$ref\": \"#/components/requestBodies/Pet\"\n        }\n      }\n    },\n    \"/pet/findByStatus\": {\n      \"get\": {\n        \"tags\": [\n          \"pet\"\n        ],\n        \"summary\": \"Finds Pets by status\",\n        \"description\": \"Multiple status values can be provided with comma separated strings\",\n        \"operationId\": \"findPetsByStatus\",\n        \"parameters\": [\n          {\n            \"name\": \"status\",\n            \"in\": \"query\",\n            \"description\": \"Status values that need to be considered for filter\",\n            \"required\": true,\n            \"explode\": true,\n            \"schema\": {\n              \"type\": \"array\",\n              \"items\": {\n                \"type\": \"string\",\n                \"enum\": [\n                  \"available\",\n                  \"pending\",\n                  \"sold\"\n                ],\n                \"default\": \"available\"\n              }\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"successful operation\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/Pet\"\n                  }\n                }\n              },\n              \"application/xml\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/Pet\"\n                  }\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"description\": \"Invalid status value\"\n          }\n        }\n      }\n    },\n    \"/pet/findByTags\": {\n      \"get\": {\n        \"tags\": [\n          \"pet\"\n        ],\n        \"summary\": \"Finds Pets by tags\",\n        \"description\": \"Muliple tags can be provided with comma separated strings. Use\\\\ \\\\ tag1, tag2, tag3 for testing.\",\n        \"operationId\": \"findPetsByTags\",\n        \"parameters\": [\n          {\n            \"name\": \"tags\",\n            \"in\": \"query\",\n            \"description\": \"Tags to filter by\",\n            \"required\": true,\n            \"explode\": true,\n            \"schema\": {\n              \"type\": \"array\",\n              \"items\": {\n                \"type\": \"string\"\n              }\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"successful operation\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/Pet\"\n                  }\n                }\n              },\n              \"application/xml\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/Pet\"\n                  }\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"description\": \"Invalid tag value\"\n          }\n        },\n        \"deprecated\": true\n      }\n    },\n    \"/pet/{petId}\": {\n      \"get\": {\n        \"tags\": [\n          \"pet\"\n        ],\n        \"summary\": \"Find pet by ID\",\n        \"description\": \"Returns a single pet\",\n        \"operationId\": \"getPetById\",\n        \"parameters\": [\n          {\n            \"name\": \"petId\",\n            \"in\": \"path\",\n            \"description\": \"ID of pet to return\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int64\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"successful operation\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Pet\"\n                }\n              },\n              \"application/xml\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Pet\"\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"description\": \"Invalid ID supplied\"\n          },\n          \"404\": {\n            \"description\": \"Pet not found\"\n          }\n        }\n      },\n      \"post\": {\n        \"tags\": [\n          \"pet\"\n        ],\n        \"summary\": \"Updates a pet in the store with form data\",\n        \"operationId\": \"updatePetWithForm\",\n        \"parameters\": [\n          {\n            \"name\": \"petId\",\n            \"in\": \"path\",\n            \"description\": \"ID of pet that needs to be updated\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int64\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"405\": {\n            \"description\": \"Invalid input\"\n          }\n        },\n        \"requestBody\": {\n          \"content\": {\n            \"application/x-www-form-urlencoded\": {\n              \"schema\": {\n                \"type\": \"object\",\n                \"properties\": {\n                  \"name\": {\n                    \"description\": \"Updated name of the pet\",\n                    \"type\": \"string\"\n                  },\n                  \"status\": {\n                    \"description\": \"Updated status of the pet\",\n                    \"type\": \"string\"\n                  }\n                }\n              }\n            }\n          }\n        }\n      },\n      \"delete\": {\n        \"tags\": [\n          \"pet\"\n        ],\n        \"summary\": \"Deletes a pet\",\n        \"operationId\": \"deletePet\",\n        \"parameters\": [\n          {\n            \"name\": \"api_key\",\n            \"in\": \"header\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"petId\",\n            \"in\": \"path\",\n            \"description\": \"Pet id to delete\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int64\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"400\": {\n            \"description\": \"Invalid ID supplied\"\n          },\n          \"404\": {\n            \"description\": \"Pet not found\"\n          }\n        }\n      }\n    },\n    \"/pet/{petId}/uploadImage\": {\n      \"post\": {\n        \"tags\": [\n          \"pet\"\n        ],\n        \"summary\": \"uploads an image\",\n        \"operationId\": \"uploadFile\",\n        \"parameters\": [\n          {\n            \"name\": \"petId\",\n            \"in\": \"path\",\n            \"description\": \"ID of pet to update\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int64\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"successful operation\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ApiResponse\"\n                }\n              }\n            }\n          }\n        },\n        \"requestBody\": {\n          \"content\": {\n            \"multipart/form-data\": {\n              \"schema\": {\n                \"type\": \"object\",\n                \"required\": [\n                  \"image\",\n                  \"name\"\n                ],\n                \"properties\": {\n                  \"image\": {\n                    \"type\": \"string\",\n                    \"format\": \"binary\"\n                  },\n                  \"name\": {\n                    \"type\": \"string\"\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/store/inventory\": {\n      \"get\": {\n        \"tags\": [\n          \"store\"\n        ],\n        \"summary\": \"Returns pet inventories by status\",\n        \"description\": \"Returns a map of status codes to quantities\",\n        \"operationId\": \"getInventory\",\n        \"responses\": {\n          \"200\": {\n            \"description\": \"successful operation\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"additionalProperties\": {\n                    \"type\": \"integer\",\n                    \"format\": \"int32\"\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/store/order\": {\n      \"post\": {\n        \"tags\": [\n          \"store\"\n        ],\n        \"summary\": \"Place an order for a pet\",\n        \"operationId\": \"placeOrder\",\n        \"responses\": {\n          \"200\": {\n            \"description\": \"successful operation\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Order\"\n                }\n              },\n              \"application/xml\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Order\"\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"description\": \"Invalid Order\"\n          }\n        },\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/Order\"\n              }\n            }\n          },\n          \"description\": \"order placed for purchasing the pet\",\n          \"required\": true\n        }\n      }\n    },\n    \"/store/order/{orderId}\": {\n      \"get\": {\n        \"tags\": [\n          \"store\"\n        ],\n        \"summary\": \"Find purchase order by ID\",\n        \"description\": \"For valid response try integer IDs with value \u003e= 1 and \u003c= 10.\\\\ \\\\ Other values will generated exceptions\",\n        \"operationId\": \"getOrderById\",\n        \"parameters\": [\n          {\n            \"name\": \"orderId\",\n            \"in\": \"path\",\n            \"description\": \"ID of pet that needs to be fetched\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int64\",\n              \"minimum\": 1,\n              \"maximum\": 10\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"successful operation\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Order\"\n                }\n              },\n              \"application/xml\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Order\"\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"description\": \"Invalid ID supplied\"\n          },\n          \"404\": {\n            \"description\": \"Order not found\"\n          }\n        }\n      },\n      \"delete\": {\n        \"tags\": [\n          \"store\"\n        ],\n        \"summary\": \"Delete purchase order by ID\",\n        \"description\": \"For valid response try integer IDs with positive integer value.\\\\ \\\\ Negative or non-integer values will generate API errors\",\n        \"operationId\": \"deleteOrder\",\n        \"parameters\": [\n          {\n            \"name\": \"orderId\",\n            \"in\": \"path\",\n            \"description\": \"ID of the order that needs to be deleted\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int64\",\n              \"minimum\": 1\n            }\n          }\n        ],\n        \"responses\": {\n          \"400\": {\n            \"description\": \"Invalid ID supplied\"\n          },\n          \"404\": {\n            \"description\": \"Order not found\"\n          }\n        }\n      }\n    },\n    \"/user\": {\n      \"post\": {\n        \"tags\": [\n          \"user\"\n        ],\n        \"summary\": \"Create user\",\n        \"description\": \"This can only be done by the logged in user.\",\n        \"operationId\": \"createUser\",\n        \"responses\": {\n          \"default\": {\n            \"description\": \"successful operation\"\n          }\n        },\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/User\"\n              }\n            }\n          },\n          \"description\": \"Created user object\",\n          \"required\": true\n        }\n      }\n    },\n    \"/user/createWithArray\": {\n      \"post\": {\n        \"tags\": [\n          \"user\"\n        ],\n        \"summary\": \"Creates list of users with given input array\",\n        \"operationId\": \"createUsersWithArrayInput\",\n        \"responses\": {\n          \"default\": {\n            \"description\": \"successful operation\"\n          }\n        },\n        \"requestBody\": {\n          \"$ref\": \"#/components/requestBodies/UserArray\"\n        }\n      }\n    },\n    \"/user/createWithList\": {\n      \"post\": {\n        \"tags\": [\n          \"user\"\n        ],\n        \"summary\": \"Creates list of users with given input array\",\n        \"operationId\": \"createUsersWithListInput\",\n        \"responses\": {\n          \"default\": {\n            \"description\": \"successful operation\"\n          }\n        },\n        \"requestBody\": {\n          \"$ref\": \"#/components/requestBodies/UserArray\"\n        }\n      }\n    },\n    \"/user/login\": {\n      \"get\": {\n        \"tags\": [\n          \"user\"\n        ],\n        \"summary\": \"Logs user into the system\",\n        \"operationId\": \"loginUser\",\n        \"parameters\": [\n          {\n            \"name\": \"username\",\n            \"in\": \"query\",\n            \"description\": \"The user name for login\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"password\",\n            \"in\": \"query\",\n            \"description\": \"The password for login in clear text\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"successful operation\",\n            \"headers\": {\n              \"X-Rate-Limit\": {\n                \"description\": \"calls per hour allowed by the user\",\n                \"schema\": {\n                  \"type\": \"integer\",\n                  \"format\": \"int32\"\n                }\n              },\n              \"X-Expires-After\": {\n                \"description\": \"date in UTC when token expires\",\n                \"schema\": {\n                  \"type\": \"string\",\n                  \"format\": \"date-time\"\n                }\n              }\n            },\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"string\"\n                }\n              },\n              \"application/xml\": {\n                \"schema\": {\n                  \"type\": \"string\"\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"description\": \"Invalid username/password supplied\"\n          }\n        }\n      }\n    },\n    \"/user/logout\": {\n      \"get\": {\n        \"tags\": [\n          \"user\"\n        ],\n        \"summary\": \"Logs out current logged in user session\",\n        \"operationId\": \"logoutUser\",\n        \"responses\": {\n          \"default\": {\n            \"description\": \"successful operation\"\n          }\n        }\n      }\n    },\n    \"/user/{username}\": {\n      \"get\": {\n        \"tags\": [\n          \"user\"\n        ],\n        \"summary\": \"Get user by user name\",\n        \"operationId\": \"getUserByName\",\n        \"parameters\": [\n          {\n            \"name\": \"username\",\n            \"in\": \"path\",\n            \"description\": \"The name that needs to be fetched. Use user1 for testing.\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"successful operation\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/User\"\n                }\n              },\n              \"application/xml\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/User\"\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"description\": \"Invalid username supplied\"\n          },\n          \"404\": {\n            \"description\": \"User not found\"\n          }\n        }\n      },\n      \"put\": {\n        \"tags\": [\n          \"user\"\n        ],\n        \"summary\": \"Updated user\",\n        \"description\": \"This can only be done by the logged in user.\",\n        \"operationId\": \"updateUser\",\n        \"parameters\": [\n          {\n            \"name\": \"username\",\n            \"in\": \"path\",\n            \"description\": \"name that need to be updated\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"password\",\n            \"in\": \"path\",\n            \"description\": \"name that need to be updated\",\n            \"required\": true,\n            \"style\": \"matrix\",\n            \"explode\": true,\n            \"schema\": {\n              \"type\": \"object\",\n              \"properties\": {\n                \"value\": {\n                  \"type\": \"string\"\n                }\n              }\n            }\n          },\n          {\n            \"name\": \"location\",\n            \"in\": \"query\",\n            \"description\": \"name that need to be updated\",\n            \"style\": \"matrix\",\n            \"schema\": {\n              \"type\": \"array\",\n              \"items\": {\n                \"type\": \"string\",\n                \"nullable\": true\n              }\n            }\n          },\n          {\n            \"name\": \"Accept\",\n            \"in\": \"header\",\n            \"description\": \"name that need to be updated\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"value\": {\n                      \"type\": \"string\"\n                    }\n                  }\n                }\n              },\n              \"application/xml\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"value\": {\n                      \"type\": \"string\"\n                    }\n                  }\n                }\n              }\n            }\n          }\n        ],\n        \"responses\": {\n          \"400\": {\n            \"description\": \"Invalid user supplied\"\n          },\n          \"404\": {\n            \"description\": \"User not found\"\n          }\n        },\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/User\"\n              }\n            }\n          },\n          \"description\": \"Updated user object\",\n          \"required\": true\n        }\n      },\n      \"delete\": {\n        \"tags\": [\n          \"user\"\n        ],\n        \"summary\": \"Delete user\",\n        \"description\": \"This can only be done by the logged in user.\",\n        \"operationId\": \"deleteUser\",\n        \"parameters\": [\n          {\n            \"name\": \"username\",\n            \"in\": \"path\",\n            \"description\": \"The name that needs to be deleted\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"400\": {\n            \"description\": \"Invalid username supplied\"\n          },\n          \"404\": {\n            \"description\": \"User not found\"\n          }\n        }\n      }\n    }\n  },\n  \"externalDocs\": {\n    \"description\": \"Find out more about Swagger\",\n    \"url\": \"https://swagger.io\"\n  },\n  \"components\": {\n    \"schemas\": {\n      \"Shalgham\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"id\": {\n            \"type\": \"integer\",\n            \"format\": \"int64\"\n          },\n          \"petId\": {\n            \"type\": \"integer\",\n            \"format\": \"int64\"\n          },\n          \"quantity\": {\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n          },\n          \"shipDate\": {\n            \"type\": \"string\",\n            \"format\": \"date-time\"\n          },\n          \"complete\": {\n            \"type\": \"boolean\",\n            \"default\": false\n          }\n        },\n        \"xml\": {\n          \"name\": \"Order\"\n        }\n      },\n      \"Order\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"id\": {\n            \"type\": \"integer\",\n            \"format\": \"int64\"\n          },\n          \"petId\": {\n            \"type\": \"integer\",\n            \"format\": \"int64\"\n          },\n          \"quantity\": {\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n          },\n          \"shipDate\": {\n            \"type\": \"string\",\n            \"format\": \"date-time\"\n          },\n          \"status\": {\n            \"type\": \"string\",\n            \"description\": \"Order Status\",\n            \"enum\": [\n              \"placed\",\n              \"approved\",\n              \"delivered\"\n            ]\n          },\n          \"complete\": {\n            \"type\": \"boolean\",\n            \"default\": false\n          }\n        },\n        \"xml\": {\n          \"name\": \"Order\"\n        }\n      },\n      \"Category\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"id\": {\n            \"type\": \"integer\",\n            \"format\": \"int64\"\n          },\n          \"name\": {\n            \"type\": \"string\"\n          }\n        },\n        \"xml\": {\n          \"name\": \"Category\"\n        }\n      },\n      \"User\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"id\": {\n            \"type\": \"integer\",\n            \"format\": \"int64\"\n          },\n          \"username\": {\n            \"type\": \"string\"\n          },\n          \"firstName\": {\n            \"type\": \"string\"\n          },\n          \"lastName\": {\n            \"type\": \"string\"\n          },\n          \"email\": {\n            \"type\": \"string\"\n          },\n          \"password\": {\n            \"type\": \"string\"\n          },\n          \"phone\": {\n            \"type\": \"string\"\n          },\n          \"userStatus\": {\n            \"type\": \"integer\",\n            \"format\": \"int32\",\n            \"description\": \"User Status\"\n          }\n        },\n        \"xml\": {\n          \"name\": \"User\"\n        }\n      },\n      \"Tag\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"id\": {\n            \"type\": \"integer\",\n            \"format\": \"int64\"\n          },\n          \"name\": {\n            \"type\": \"string\"\n          }\n        },\n        \"xml\": {\n          \"name\": \"Tag\"\n        }\n      },\n      \"Pet\": {\n        \"type\": \"object\",\n        \"required\": [\n          \"name\",\n          \"photoUrls\"\n        ],\n        \"properties\": {\n          \"id\": {\n            \"type\": \"integer\",\n            \"format\": \"int64\"\n          },\n          \"category\": {\n            \"$ref\": \"#/components/schemas/Category\"\n          },\n          \"name\": {\n            \"type\": \"string\",\n            \"example\": \"doggie\"\n          },\n          \"photoUrls\": {\n            \"type\": \"array\",\n            \"xml\": {\n              \"name\": \"photoUrl\",\n              \"wrapped\": true\n            },\n            \"items\": {\n              \"type\": \"string\"\n            }\n          },\n          \"tags\": {\n            \"type\": \"array\",\n            \"xml\": {\n              \"name\": \"tag\",\n              \"wrapped\": true\n            },\n            \"items\": {\n              \"$ref\": \"#/components/schemas/Tag\"\n            }\n          },\n          \"status\": {\n            \"type\": \"string\",\n            \"description\": \"pet status in the store\",\n            \"enum\": [\n              \"available\",\n              \"pending\",\n              \"sold\"\n            ]\n          }\n        },\n        \"xml\": {\n          \"name\": \"Pet\"\n        }\n      },\n      \"ApiResponse\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"code\": {\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n          },\n          \"type\": {\n            \"type\": \"string\"\n          },\n          \"message\": {\n            \"type\": \"string\"\n          }\n        }\n      },\n      \"ObjEmpty\": {\n        \"type\": \"object\",\n        \"nullable\": false\n      },\n      \"ObjMapInt_DNG\": {\n        \"type\": \"object\",\n        \"nullable\": false,\n        \"additionalProperties\": {\n          \"type\": \"integer\"\n        }\n      },\n      \"ObjMapListObj_DNG\": {\n        \"type\": \"object\",\n        \"nullable\": false,\n        \"additionalProperties\": {\n          \"type\": \"array\",\n          \"nullable\": false,\n          \"items\": {\n            \"$ref\": \"#/components/schemas/Obj\"\n          }\n        }\n      },\n      \"ObjMapMapInt_DNG\": {\n        \"type\": \"object\",\n        \"nullable\": false,\n        \"additionalProperties\": {\n          \"$ref\": \"#/components/schemas/ObjMapInt_DNG\"\n        }\n      },\n      \"Obj\": {\n        \"type\": \"object\",\n        \"nullable\": false,\n        \"properties\": {\n          \"id\": {\n            \"type\": \"integer\",\n            \"nullable\": false\n          }\n        },\n        \"required\": [\n          \"id\"\n        ]\n      },\n      \"ObjEnumerated\": {\n        \"type\": \"object\",\n        \"nullable\": false,\n        \"properties\": {\n          \"id\": {\n            \"type\": \"integer\",\n            \"nullable\": false\n          }\n        },\n        \"required\": [\n          \"id\"\n        ],\n        \"enum\": [\n          {\n            \"id\": 100\n          },\n          {\n            \"id\": 200\n          },\n          {\n            \"id\": 300\n          }\n        ]\n      },\n      \"ObjNullable\": {\n        \"type\": \"object\",\n        \"nullable\": true,\n        \"properties\": {\n          \"id\": {\n            \"type\": \"integer\",\n            \"nullable\": false\n          }\n        },\n        \"required\": [\n          \"id\"\n        ]\n      },\n      \"ObjEnumeratedNullable\": {\n        \"type\": \"object\",\n        \"nullable\": true,\n        \"properties\": {\n          \"id\": {\n            \"type\": \"integer\",\n            \"nullable\": false\n          }\n        },\n        \"required\": [\n          \"id\"\n        ],\n        \"enum\": [\n          {\n            \"id\": 100\n          },\n          {\n            \"id\": 200\n          },\n          {\n            \"id\": 300\n          }\n        ]\n      },\n      \"ObjDefault\": {\n        \"type\": \"object\",\n        \"nullable\": false,\n        \"properties\": {\n          \"id\": {\n            \"type\": \"integer\",\n            \"nullable\": false\n          }\n        },\n        \"required\": [\n          \"id\"\n        ],\n        \"default\": {\n          \"id\": 500\n        }\n      },\n      \"ObjNullableDefault\": {\n        \"type\": \"object\",\n        \"nullable\": true,\n        \"properties\": {\n          \"id\": {\n            \"type\": \"integer\",\n            \"nullable\": false\n          }\n        },\n        \"required\": [\n          \"id\"\n        ],\n        \"default\": {\n          \"id\": 500\n        }\n      },\n      \"ObjNullableDefaultN\": {\n        \"type\": \"object\",\n        \"nullable\": true,\n        \"properties\": {\n          \"id\": {\n            \"type\": \"integer\",\n            \"nullable\": false\n          }\n        },\n        \"required\": [\n          \"id\"\n        ],\n        \"default\": null\n      }\n    },\n    \"requestBodies\": {\n      \"Pet\": {\n        \"content\": {\n          \"application/json\": {\n            \"schema\": {\n              \"type\": \"object\",\n              \"required\": [\n                \"name\",\n                \"photoUrls\",\n                \"o1\",\n                \"o2\",\n                \"o1e\",\n                \"o2e\",\n                \"o7\",\n                \"o8\",\n                \"p1\",\n                \"p2\",\n                \"x1\",\n                \"x2\",\n                \"y1\",\n                \"y2\",\n                \"aa\",\n                \"ab\",\n                \"ac\",\n                \"ad\",\n                \"ae\",\n                \"af\",\n                \"ag\",\n                \"m1\",\n                \"m2\",\n                \"m3\"\n              ],\n              \"properties\": {\n                \"id\": {\n                  \"type\": \"integer\",\n                  \"format\": \"int64\"\n                },\n                \"category\": {\n                  \"$ref\": \"#/components/schemas/Category\"\n                },\n                \"name\": {\n                  \"type\": \"string\",\n                  \"example\": \"doggie\"\n                },\n                \"photoUrls\": {\n                  \"type\": \"array\",\n                  \"xml\": {\n                    \"name\": \"photoUrl\",\n                    \"wrapped\": true\n                  },\n                  \"items\": {\n                    \"type\": \"string\"\n                  }\n                },\n                \"tags\": {\n                  \"type\": \"array\",\n                  \"xml\": {\n                    \"name\": \"tag\",\n                    \"wrapped\": true\n                  },\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/Tag\"\n                  }\n                },\n                \"status\": {\n                  \"type\": \"string\",\n                  \"description\": \"pet status in the store\",\n                  \"enum\": [\n                    \"available\",\n                    \"pending\",\n                    \"sold\"\n                  ]\n                },\n                \"o1\": {\n                  \"$ref\": \"#/components/schemas/Obj\"\n                },\n                \"o2\": {\n                  \"$ref\": \"#/components/schemas/ObjNullable\"\n                },\n                \"o1e\": {\n                  \"$ref\": \"#/components/schemas/ObjEnumerated\"\n                },\n                \"o2e\": {\n                  \"$ref\": \"#/components/schemas/ObjEnumeratedNullable\"\n                },\n                \"o3\": {\n                  \"$ref\": \"#/components/schemas/ObjDefault\"\n                },\n                \"o4\": {\n                  \"$ref\": \"#/components/schemas/ObjNullableDefault\"\n                },\n                \"o4n\": {\n                  \"$ref\": \"#/components/schemas/ObjNullableDefaultN\"\n                },\n                \"o5\": {\n                  \"$ref\": \"#/components/schemas/Obj\"\n                },\n                \"o6\": {\n                  \"$ref\": \"#/components/schemas/ObjNullable\"\n                },\n                \"o7\": {\n                  \"$ref\": \"#/components/schemas/ObjDefault\"\n                },\n                \"o8\": {\n                  \"$ref\": \"#/components/schemas/ObjNullableDefault\"\n                },\n                \"p1\": {\n                  \"nullable\": false,\n                  \"type\": \"integer\"\n                },\n                \"p2\": {\n                  \"nullable\": true,\n                  \"type\": \"integer\"\n                },\n                \"p3\": {\n                  \"nullable\": false,\n                  \"type\": \"integer\",\n                  \"default\": 1000\n                },\n                \"p4\": {\n                  \"nullable\": true,\n                  \"type\": \"integer\",\n                  \"default\": 1000\n                },\n                \"p4n\": {\n                  \"nullable\": true,\n                  \"type\": \"integer\",\n                  \"default\": null\n                },\n                \"p5\": {\n                  \"nullable\": false,\n                  \"type\": \"integer\"\n                },\n                \"p6\": {\n                  \"nullable\": true,\n                  \"type\": \"integer\"\n                },\n                \"x1\": {\n                  \"nullable\": false,\n                  \"type\": \"array\",\n                  \"xml\": {\n                    \"name\": \"x1\",\n                    \"wrapped\": true\n                  },\n                  \"items\": {\n                    \"type\": \"string\"\n                  }\n                },\n                \"x2\": {\n                  \"nullable\": true,\n                  \"type\": \"array\",\n                  \"xml\": {\n                    \"name\": \"x2\",\n                    \"wrapped\": true\n                  },\n                  \"items\": {\n                    \"type\": \"string\"\n                  }\n                },\n                \"x3\": {\n                  \"nullable\": false,\n                  \"type\": \"array\",\n                  \"xml\": {\n                    \"name\": \"x3\",\n                    \"wrapped\": true\n                  },\n                  \"items\": {\n                    \"type\": \"string\"\n                  },\n                  \"default\": [\n                    \"a\",\n                    \"b\",\n                    \"c\"\n                  ]\n                },\n                \"x4\": {\n                  \"nullable\": true,\n                  \"type\": \"array\",\n                  \"xml\": {\n                    \"name\": \"x4\",\n                    \"wrapped\": true\n                  },\n                  \"items\": {\n                    \"type\": \"string\"\n                  },\n                  \"default\": [\n                    \"a\",\n                    \"b\",\n                    \"c\"\n                  ]\n                },\n                \"x5\": {\n                  \"nullable\": false,\n                  \"type\": \"array\",\n                  \"xml\": {\n                    \"name\": \"x5\",\n                    \"wrapped\": true\n                  },\n                  \"items\": {\n                    \"type\": \"string\"\n                  }\n                },\n                \"x6\": {\n                  \"nullable\": true,\n                  \"type\": \"array\",\n                  \"xml\": {\n                    \"name\": \"x6\",\n                    \"wrapped\": true\n                  },\n                  \"items\": {\n                    \"type\": \"string\"\n                  }\n                },\n                \"y1\": {\n                  \"nullable\": false,\n                  \"type\": \"array\",\n                  \"xml\": {\n                    \"name\": \"y1\",\n                    \"wrapped\": true\n                  },\n                  \"items\": {\n                    \"type\": \"string\",\n                    \"nullable\": true\n                  }\n                },\n                \"y2\": {\n                  \"nullable\": true,\n                  \"type\": \"array\",\n                  \"xml\": {\n                    \"name\": \"y2\",\n                    \"wrapped\": true\n                  },\n                  \"items\": {\n                    \"type\": \"string\",\n                    \"nullable\": true\n                  }\n                },\n                \"y3\": {\n                  \"nullable\": false,\n                  \"type\": \"array\",\n                  \"xml\": {\n                    \"name\": \"y3\",\n                    \"wrapped\": true\n                  },\n                  \"items\": {\n                    \"type\": \"string\",\n                    \"nullable\": true\n                  },\n                  \"default\": [\n                    \"a\",\n                    null,\n                    \"c\"\n                  ]\n                },\n                \"y4\": {\n                  \"nullable\": true,\n                  \"type\": \"array\",\n                  \"xml\": {\n                    \"name\": \"y4\",\n                    \"wrapped\": true\n                  },\n                  \"items\": {\n                    \"type\": \"string\",\n                    \"nullable\": true\n                  },\n                  \"default\": [\n                    \"a\",\n                    null,\n                    \"c\"\n                  ]\n                },\n                \"y5\": {\n                  \"nullable\": false,\n                  \"type\": \"array\",\n                  \"xml\": {\n                    \"name\": \"y5\",\n                    \"wrapped\": true\n                  },\n                  \"items\": {\n                    \"type\": \"string\",\n                    \"nullable\": true\n                  }\n                },\n                \"y6\": {\n                  \"nullable\": true,\n                  \"type\": \"array\",\n                  \"xml\": {\n                    \"name\": \"y6\",\n                    \"wrapped\": true\n                  },\n                  \"items\": {\n                    \"type\": \"string\",\n                    \"nullable\": true\n                  }\n                },\n                \"aa\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/Obj\"\n                  }\n                },\n                \"ab\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/ObjNullable\"\n                  }\n                },\n                \"ac\": {\n                  \"type\": \"array\",\n                  \"nullable\": true,\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/Obj\"\n                  }\n                },\n                \"ad\": {\n                  \"type\": \"array\",\n                  \"nullable\": true,\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/ObjNullable\"\n                  }\n                },\n                \"ae\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"type\": \"array\",\n                    \"items\": {\n                      \"$ref\": \"#/components/schemas/Obj\"\n                    }\n                  }\n                },\n                \"af\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"type\": \"array\",\n                    \"nullable\": true,\n                    \"items\": {\n                      \"$ref\": \"#/components/schemas/Obj\"\n                    }\n                  }\n                },\n                \"ag\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"type\": \"array\",\n                    \"items\": {\n                      \"type\": \"integer\"\n                    }\n                  }\n                },\n                \"m1\": {\n                  \"$ref\": \"#/components/schemas/ObjMapInt_DNG\"\n                },\n                \"m2\": {\n                  \"$ref\": \"#/components/schemas/ObjMapListObj_DNG\"\n                },\n                \"m3\": {\n                  \"$ref\": \"#/components/schemas/ObjMapMapInt_DNG\"\n                }\n              },\n              \"xml\": {\n                \"name\": \"Pet\"\n              }\n            }\n          },\n          \"application/xml\": {\n            \"schema\": {\n              \"$ref\": \"#/components/schemas/User\"\n            }\n          },\n          \"application/x-www-form-urlencoded\": {\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          \"text/plain\": {\n            \"description\": \"javascript programmers are not real programmers\"\n          }\n        },\n        \"description\": \"Pet Body \",\n        \"required\": true\n      },\n      \"UserArray\": {\n        \"content\": {\n          \"application/json\": {\n            \"schema\": {\n              \"type\": \"array\",\n              \"items\": {\n                \"$ref\": \"#/components/schemas/User\"\n              }\n            }\n          }\n        },\n        \"description\": \"List of user object\",\n        \"required\": true\n      }\n    },\n    \"responses\": {\n      \"404NotFound\": {\n        \"description\": \"The specified resource was not found.\"\n      },\n      \"ImageResponse\": {\n        \"description\": \"A simple Image\",\n        \"content\": {\n          \"image/*\": {\n            \"schema\": {\n              \"type\": \"string\",\n              \"format\": \"binary\"\n            }\n          }\n        }\n      },\n      \"UsersResult\": {\n        \"content\": {\n          \"application/json\": {\n            \"schema\": {\n              \"type\": \"array\",\n              \"items\": {\n                \"$ref\": \"#/components/schemas/User\"\n              }\n            }\n          },\n          \"application/xml\": {\n            \"schema\": {\n              \"type\": \"array\",\n              \"items\": {\n                \"$ref\": \"#/components/schemas/User\"\n              }\n            }\n          }\n        }\n      },\n      \"PetsResult\": {\n        \"content\": {\n          \"application/json\": {\n            \"schema\": {\n              \"type\": \"array\",\n              \"items\": {\n                \"$ref\": \"#/components/schemas/Pet\"\n              }\n            }\n          },\n          \"application/xml\": {\n            \"schema\": {\n              \"type\": \"array\",\n              \"items\": {\n                \"$ref\": \"#/components/schemas/Pet\"\n              }\n            }\n          }\n        }\n      }\n    },\n    \"parameters\": {\n      \"Status\": {\n        \"name\": \"status\",\n        \"in\": \"query\",\n        \"description\": \"Status values that need to be considered for filter\",\n        \"required\": true,\n        \"explode\": true,\n        \"schema\": {\n          \"type\": \"array\",\n          \"items\": {\n            \"type\": \"string\",\n            \"enum\": [\n              \"available\",\n              \"pending\",\n              \"sold\"\n            ],\n            \"default\": \"available\"\n          }\n        }\n      },\n      \"Id\": {\n        \"name\": \"id\",\n        \"in\": \"path\",\n        \"description\": \"ID of pet to use\",\n        \"required\": true,\n        \"schema\": {\n          \"type\": \"integer\",\n          \"format\": \"int64\"\n        }\n      },\n      \"User\": {\n        \"name\": \"user\",\n        \"in\": \"query\",\n        \"description\": \"user object that needs to be added to the store\",\n        \"required\": true,\n        \"schema\": {\n          \"type\": \"object\",\n          \"properties\": {\n            \"id\": {\n              \"type\": \"integer\"\n            },\n            \"name\": {\n              \"type\": \"string\"\n            }\n          }\n        }\n      },\n      \"What\": {\n        \"name\": \"what\",\n        \"in\": \"query\",\n        \"description\": \"user object that needs to be added to the store\",\n        \"required\": true,\n        \"content\": {\n          \"application/json\": {\n            \"schema\": {\n              \"type\": \"object\",\n              \"properties\": {\n                \"id\": {\n                  \"type\": \"integer\"\n                },\n                \"name\": {\n                  \"type\": \"string\"\n                }\n              }\n            }\n          },\n          \"application/xml\": {\n            \"schema\": {\n              \"type\": \"object\",\n              \"properties\": {\n                \"age\": {\n                  \"type\": \"integer\"\n                },\n                \"name\": {\n                  \"type\": \"string\"\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n}"
		}
	},
	"Error": "parse: parse spec: parse components: schemas: \"ObjEnumeratedNullable\": parse enum values: parse value \"{\\n            \\\"id\\\": 100\\n          }\": unexpected type: \"object\""
}