{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/Finnhub-Stock-API/finnhub-go"
		},
		"file": {
			"name": "openapi.yaml",
			"size": 0,
			"path": "api/openapi.yaml",
			"byteSize": 221875,
			"content": "openapi: 3.0.1\ninfo:\n  license:\n    name: Apache-2.0\n    url: https://www.apache.org/licenses/LICENSE-2.0.html\n  title: Finnhub API\n  version: 1.0.0\nservers:\n- url: https://finnhub.io/api/v1\npaths:\n  /search:\n    get:\n      description: Search for best-matching symbols based on your query. You can input\n        anything from symbol, security's name to ISIN and Cusip.\n      operationId: symbol-search\n      parameters:\n      - description: Query text can be symbol, name, isin, or cusip.\n        in: query\n        name: q\n        required: true\n        schema:\n          type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/SymbolLookup'\n          description: successful operation\n      security:\n      - api_key: []\n      summary: Symbol Lookup\n      tags:\n      - Default\n  /stock/symbol:\n    get:\n      description: List supported stocks. We use the following symbology to identify\n        stocks on Finnhub \u003ccode\u003eExchange_Ticker.Exchange_Code\u003c/code\u003e. A list of supported\n        exchange codes can be found \u003ca href=\"https://docs.google.com/spreadsheets/d/1I3pBxjfXB056-g_JYf_6o3Rns3BV2kMGG1nCatb91ls/edit?usp=sharing\"\n        target=\"_blank\"\u003ehere\u003c/a\u003e.\n      operationId: stock-symbols\n      parameters:\n      - description: Exchange you want to get the list of symbols from. List of exchange\n          codes can be found \u003ca href=\"https://docs.google.com/spreadsheets/d/1I3pBxjfXB056-g_JYf_6o3Rns3BV2kMGG1nCatb91ls/edit?usp=sharing\"\n          target=\"_blank\"\u003ehere\u003c/a\u003e.\n        in: query\n        name: exchange\n        required: true\n        schema:\n          type: string\n      - description: Filter by MIC code.\n        in: query\n        name: mic\n        schema:\n          type: string\n      - description: Filter by security type used by OpenFigi standard.\n        in: query\n        name: securityType\n        schema:\n          type: string\n      - description: Filter by currency.\n        in: query\n        name: currency\n        schema:\n          type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: '#/components/schemas/StockSymbol'\n                type: array\n          description: successful operation\n      security:\n      - api_key: []\n      summary: Stock Symbol\n      tags:\n      - Default\n  /stock/profile:\n    get:\n      description: Get general information of a company. You can query by symbol,\n        ISIN or CUSIP\n      operationId: company-profile\n      parameters:\n      - description: 'Symbol of the company: AAPL e.g.'\n        in: query\n        name: symbol\n        schema:\n          type: string\n      - description: ISIN\n        in: query\n        name: isin\n        schema:\n          type: string\n      - description: CUSIP\n        in: query\n        name: cusip\n        schema:\n          type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CompanyProfile'\n          description: successful operation\n      security:\n      - api_key: []\n      summary: Company Profile\n      tags:\n      - Default\n  /stock/profile2:\n    get:\n      description: Get general information of a company. You can query by symbol,\n        ISIN or CUSIP. This is the free version of \u003ca href=\"#company-profile\"\u003eCompany\n        Profile\u003c/a\u003e.\n      operationId: company-profile2\n      parameters:\n      - description: 'Symbol of the company: AAPL e.g.'\n        in: query\n        name: symbol\n        schema:\n          type: string\n      - description: ISIN\n        in: query\n        name: isin\n        schema:\n          type: string\n      - description: CUSIP\n        in: query\n        name: cusip\n        schema:\n          type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CompanyProfile2'\n          description: successful operation\n      security:\n      - api_key: []\n      summary: Company Profile 2\n      tags:\n      - Default\n  /stock/executive:\n    get:\n      description: Get a list of company's executives and members of the Board.\n      operationId: company-executive\n      parameters:\n      - description: 'Symbol of the company: AAPL.'\n        in: query\n        name: symbol\n        required: true\n        schema:\n          type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CompanyExecutive'\n          description: successful operation\n      security:\n      - api_key: []\n      summary: Company Executive\n      tags:\n      - Default\n  /news:\n    get:\n      description: Get latest market news.\n      operationId: market-news\n      parameters:\n      - description: This parameter can be 1 of the following values \u003ccode\u003egeneral,\n          forex, crypto, merger\u003c/code\u003e.\n        in: query\n        name: category\n        required: true\n        schema:\n          type: string\n      - description: Use this field to get only news after this ID. Default to 0\n        in: query\n        name: minId\n        schema:\n          format: int64\n          type: integer\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: '#/components/schemas/MarketNews'\n                type: array\n          description: successful operation\n      security:\n      - api_key: []\n      summary: Market News\n      tags:\n      - Default\n  /company-news:\n    get:\n      description: List latest company news by symbol. This endpoint is only available\n        for North American companies.\n      operationId: company-news\n      parameters:\n      - description: Company symbol.\n        in: query\n        name: symbol\n        required: true\n        schema:\n          type: string\n      - description: From date \u003ccode\u003eYYYY-MM-DD\u003c/code\u003e.\n        in: query\n        name: from\n        required: true\n        schema:\n          format: date\n          type: string\n      - description: To date \u003ccode\u003eYYYY-MM-DD\u003c/code\u003e.\n        in: query\n        name: to\n        required: true\n        schema:\n          format: date\n          type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: '#/components/schemas/CompanyNews'\n                type: array\n          description: successful operation\n      security:\n      - api_key: []\n      summary: Company News\n      tags:\n      - Default\n  /press-releases:\n    get:\n      description: \u003cp\u003eGet latest major press releases of a company. This data can\n        be used to highlight the most significant events comprised of mostly press\n        releases sourced from the exchanges, BusinessWire, AccessWire, GlobeNewswire,\n        Newsfile, and PRNewswire.\u003c/p\u003e\u003cp\u003eFull-text press releases data is available\n        for Enterprise clients. \u003ca href=\"mailto:support@finnhub.io\"\u003eContact Us\u003c/a\u003e\n        to learn more.\u003c/p\u003e\n      operationId: press-releases\n      parameters:\n      - description: Company symbol.\n        in: query\n        name: symbol\n        required: true\n        schema:\n          type: string\n      - description: 'From time: 2020-01-01.'\n        in: query\n        name: from\n        schema:\n          format: date\n          type: string\n      - description: 'To time: 2020-01-05.'\n        in: query\n        name: to\n        schema:\n          format: date\n          type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PressRelease'\n          description: successful operation\n      security:\n      - api_key: []\n      summary: Major Press Releases\n      tags:\n      - Default\n  /news-sentiment:\n    get:\n      description: Get company's news sentiment and statistics. This endpoint is only\n        available for US companies.\n      operationId: news-sentiment\n      parameters:\n      - description: Company symbol.\n        in: query\n        name: symbol\n        required: true\n        schema:\n          type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/NewsSentiment'\n          description: successful operation\n      security:\n      - api_key: []\n      summary: News Sentiment\n      tags:\n      - Default\n  /stock/peers:\n    get:\n      description: Get company peers. Return a list of peers operating in the same\n        country and sector/industry.\n      operationId: company-peers\n      parameters:\n      - description: 'Symbol of the company: AAPL.'\n        in: query\n        name: symbol\n        required: true\n        schema:\n          type: string\n      - description: 'Specify the grouping criteria for choosing peers.Supporter values:\n          \u003ccode\u003esector\u003c/code\u003e, \u003ccode\u003eindustry\u003c/code\u003e, \u003ccode\u003esubIndustry\u003c/code\u003e. Default\n          to \u003ccode\u003esubIndustry\u003c/code\u003e.'\n        in: query\n        name: grouping\n        schema:\n          type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                items:\n                  type: string\n                type: array\n          description: successful operation\n      security:\n      - api_key: []\n      summary: Peers\n      tags:\n      - Default\n  /stock/metric:\n    get:\n      description: Get company basic financials such as margin, P/E ratio, 52-week\n        high/low etc.\n      operationId: company-basic-financials\n      parameters:\n      - description: 'Symbol of the company: AAPL.'\n        in: query\n        name: symbol\n        required: true\n        schema:\n          type: string\n      - description: Metric type. Can be 1 of the following values \u003ccode\u003eall\u003c/code\u003e\n        in: query\n        name: metric\n        required: true\n        schema:\n          type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BasicFinancials'\n          description: successful operation\n      security:\n      - api_key: []\n      summary: Basic Financials\n      tags:\n      - Default\n  /stock/price-metric:\n    get:\n      description: Get company price performance statistics such as 52-week high/low,\n        YTD return and much more.\n      operationId: price-metrics\n      parameters:\n      - description: 'Symbol of the company: AAPL.'\n        in: query\n        name: symbol\n        required: true\n        schema:\n          type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PriceMetrics'\n          description: successful operation\n      security:\n      - api_key: []\n      summary: Price Metrics\n      tags:\n      - Default\n  /ca/symbol-change:\n    get:\n      description: Get a list of symbol changes for US-listed and EU-listed securities.\n        Limit to 2000 events at a time.\n      operationId: symbol-change\n      parameters:\n      - description: From date \u003ccode\u003eYYYY-MM-DD\u003c/code\u003e.\n        in: query\n        name: from\n        required: true\n        schema:\n          type: string\n      - description: To date \u003ccode\u003eYYYY-MM-DD\u003c/code\u003e.\n        in: query\n        name: to\n        required: true\n        schema:\n          type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/SymbolChange'\n          description: successful operation\n      security:\n      - api_key: []\n      summary: Symbol Change\n      tags:\n      - Default\n  /ca/isin-change:\n    get:\n      description: Get a list of ISIN changes for EU-listed securities. Limit to 2000\n        events at a time.\n      operationId: isin-change\n      parameters:\n      - description: From date \u003ccode\u003eYYYY-MM-DD\u003c/code\u003e.\n        in: query\n        name: from\n        required: true\n        schema:\n          type: string\n      - description: To date \u003ccode\u003eYYYY-MM-DD\u003c/code\u003e.\n        in: query\n        name: to\n        required: true\n        schema:\n          type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/IsinChange'\n          description: successful operation\n      security:\n      - api_key: []\n      summary: ISIN Change\n      tags:\n      - Default\n  /institutional/profile:\n    get:\n      description: Get a list of well-known institutional investors. Currently support\n        60+ profiles.\n      operationId: institutional-profile\n      parameters:\n      - description: Filter by CIK. Leave blank to get the full list.\n        in: query\n        name: cik\n        schema:\n          type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InstitutionalProfile'\n          description: successful operation\n      security:\n      - api_key: []\n      summary: Institutional Profile\n      tags:\n      - Default\n  /institutional/portfolio:\n    get:\n      description: Get the holdings/portfolio data of institutional investors from\n        13-F filings. Limit to 1 year of data at a time.\n      operationId: institutional-portfolio\n      parameters:\n      - description: Fund's CIK.\n        in: query\n        name: cik\n        required: true\n        schema:\n          type: string\n      - description: From date \u003ccode\u003eYYYY-MM-DD\u003c/code\u003e.\n        in: query\n        name: from\n        required: true\n        schema:\n          type: string\n      - description: To date \u003ccode\u003eYYYY-MM-DD\u003c/code\u003e.\n        in: query\n        name: to\n        required: true\n        schema:\n          type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InstitutionalPortfolio'\n          description: successful operation\n      security:\n      - api_key: []\n      summary: Institutional Portfolio\n      tags:\n      - Default\n  /institutional/ownership:\n    get:\n      description: Get a list institutional investors' positions for a particular\n        stock overtime. Data from 13-F filings. Limit to 1 year of data at a time.\n      operationId: institutional-ownership\n      parameters:\n      - description: Filter by symbol.\n        in: query\n        name: symbol\n        required: true\n        schema:\n          type: string\n      - description: Filter by CUSIP.\n        in: query\n        name: cusip\n        required: true\n        schema:\n          type: string\n      - description: From date \u003ccode\u003eYYYY-MM-DD\u003c/code\u003e.\n        in: query\n        name: from\n        required: true\n        schema:\n          type: string\n      - description: To date \u003ccode\u003eYYYY-MM-DD\u003c/code\u003e.\n        in: query\n        name: to\n        required: true\n        schema:\n          type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InstitutionalOwnership'\n          description: successful operation\n      security:\n      - api_key: []\n      summary: Institutional Ownership\n      tags:\n      - Default\n  /stock/ownership:\n    get:\n      description: Get a full list of shareholders of a company in descending order\n        of the number of shares held. Data is sourced from \u003ccode\u003e13F form\u003c/code\u003e,\n        \u003ccode\u003eSchedule 13D\u003c/code\u003e and \u003ccode\u003e13G\u003c/code\u003e for US market, \u003ccode\u003eUK Share\n        Register\u003c/code\u003e for UK market, \u003ccode\u003eSEDI\u003c/code\u003e for Canadian market and equivalent\n        filings for other international markets.\n      operationId: ownership\n      parameters:\n      - description: 'Symbol of the company: AAPL.'\n        in: query\n        name: symbol\n        required: true\n        schema:\n          type: string\n      - description: Limit number of results. Leave empty to get the full list.\n        in: query\n        name: limit\n        schema:\n          format: int64\n          type: integer\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Ownership'\n          description: successful operation\n      security:\n      - api_key: []\n      summary: Ownership\n      tags:\n      - Default\n  /stock/fund-ownership:\n    get:\n      description: Get a full list fund and institutional investors of a company in\n        descending order of the number of shares held. Data is sourced from \u003ccode\u003e13F\n        form\u003c/code\u003e, \u003ccode\u003eSchedule 13D\u003c/code\u003e and \u003ccode\u003e13G\u003c/code\u003e for US market,\n        \u003ccode\u003eUK Share Register\u003c/code\u003e for UK market, \u003ccode\u003eSEDI\u003c/code\u003e for Canadian\n        market and equivalent filings for other international markets.\n      operationId: fund-ownership\n      parameters:\n      - description: 'Symbol of the company: AAPL.'\n        in: query\n        name: symbol\n        required: true\n        schema:\n          type: string\n      - description: Limit number of results. Leave empty to get the full list.\n        in: query\n        name: limit\n        schema:\n          format: int64\n          type: integer\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/FundOwnership'\n          description: successful operation\n      security:\n      - api_key: []\n      summary: Fund Ownership\n      tags:\n      - Default\n  /stock/insider-transactions:\n    get:\n      description: Company insider transactions data sourced from \u003ccode\u003eForm 3,4,5\u003c/code\u003e.\n        This endpoint only covers US companies at the moment. Limit to 100 transactions\n        per API call.\n      operationId: insider-transactions\n      parameters:\n      - description: 'Symbol of the company: AAPL. Leave this param blank to get the\n          latest transactions.'\n        in: query\n        name: symbol\n        required: true\n        schema:\n          type: string\n      - description: 'From date: 2020-03-15.'\n        in: query\n        name: from\n        schema:\n          format: date\n          type: string\n      - description: 'To date: 2020-03-16.'\n        in: query\n        name: to\n        schema:\n          format: date\n          type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InsiderTransactions'\n          description: successful operation\n      security:\n      - api_key: []\n      summary: Insider Transactions\n      tags:\n      - Default\n  /stock/insider-sentiment:\n    get:\n      description: Get insider sentiment data for US companies calculated using method\n        discussed \u003ca href=\"https://medium.com/@stock-api/finnhub-insiders-sentiment-analysis-cc43f9f64b3a\"\n        target=\"_blank\"\u003ehere\u003c/a\u003e. The MSPR ranges from -100 for the most negative\n        to 100 for the most positive which can signal price changes in the coming\n        30-90 days.\n      operationId: insider-sentiment\n      parameters:\n      - description: 'Symbol of the company: AAPL.'\n        in: query\n        name: symbol\n        required: true\n        schema:\n          type: string\n      - description: 'From date: 2020-03-15.'\n        in: query\n        name: from\n        required: true\n        schema:\n          format: date\n          type: string\n      - description: 'To date: 2020-03-16.'\n        in: query\n        name: to\n        required: true\n        schema:\n          format: date\n          type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InsiderSentiments'\n          description: successful operation\n      security:\n      - api_key: []\n      summary: Insider Sentiment\n      tags:\n      - Default\n  /stock/financials:\n    get:\n      description: \u003cp\u003eGet standardized balance sheet, income statement and cash flow\n        for global companies going back 30+ years. Data is sourced from original filings\n        most of which made available through \u003ca href=\"#filings\"\u003eSEC Filings\u003c/a\u003e and\n        \u003ca href=\"#international-filings\"\u003eInternational Filings\u003c/a\u003e endpoints.\u003c/p\u003e\u003cp\u003e\u003ci\u003eWondering\n        why our standardized data is different from Bloomberg, Reuters, Factset, S\u0026P\n        or Yahoo Finance ? Check out our \u003ca href=\"/faq\"\u003eFAQ page\u003c/a\u003e to learn more\u003c/i\u003e\u003c/p\u003e\n      operationId: financials\n      parameters:\n      - description: 'Symbol of the company: AAPL.'\n        in: query\n        name: symbol\n        required: true\n        schema:\n          type: string\n      - description: Statement can take 1 of these values \u003ccode\u003ebs, ic, cf\u003c/code\u003e\n          for Balance Sheet, Income Statement, Cash Flow respectively.\n        in: query\n        name: statement\n        required: true\n        schema:\n          type: string\n      - description: Frequency can take 1 of these values \u003ccode\u003eannual, quarterly,\n          ttm, ytd\u003c/code\u003e.  TTM (Trailing Twelve Months) option is available for Income\n          Statement and Cash Flow. YTD (Year To Date) option is only available for\n          Cash Flow.\n        in: query\n        name: freq\n        required: true\n        schema:\n          type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/FinancialStatements'\n          description: successful operation\n      security:\n      - api_key: []\n      summary: Financial Statements\n      tags:\n      - Default\n  /stock/financials-reported:\n    get:\n      description: Get financials as reported. This data is available for bulk download\n        on \u003ca href=\"https://www.kaggle.com/finnhub/reported-financials\" target=\"_blank\"\u003eKaggle\n        SEC Financials database\u003c/a\u003e.\n      operationId: financials-reported\n      parameters:\n      - description: Symbol.\n        in: query\n        name: symbol\n        schema:\n          type: string\n      - description: CIK.\n        in: query\n        name: cik\n        schema:\n          type: string\n      - description: Access number of a specific report you want to retrieve financials\n          from.\n        in: query\n        name: accessNumber\n        schema:\n          type: string\n      - description: Frequency. Can be either \u003ccode\u003eannual\u003c/code\u003e or \u003ccode\u003equarterly\u003c/code\u003e.\n          Default to \u003ccode\u003eannual\u003c/code\u003e.\n        in: query\n        name: freq\n        schema:\n          type: string\n      - description: From date \u003ccode\u003eYYYY-MM-DD\u003c/code\u003e. Filter for endDate.\n        in: query\n        name: from\n        schema:\n          format: date\n          type: string\n      - description: To date \u003ccode\u003eYYYY-MM-DD\u003c/code\u003e. Filter for endDate.\n        in: query\n        name: to\n        schema:\n          format: date\n          type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/FinancialsAsReported'\n          description: successful operation\n      security:\n      - api_key: []\n      summary: Financials As Reported\n      tags:\n      - Default\n  /stock/revenue-breakdown:\n    get:\n      description: Get revenue breakdown by product. This dataset is only available\n        for US companies which disclose their revenue breakdown in the annual or quarterly\n        reports.\n      operationId: revenue-breakdown\n      parameters:\n      - description: Symbol.\n        in: query\n        name: symbol\n        schema:\n          type: string\n      - description: CIK.\n        in: query\n        name: cik\n        schema:\n          type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RevenueBreakdown'\n          description: successful operation\n      security:\n      - api_key: []\n      summary: Revenue Breakdown\n      tags:\n      - Default\n  /stock/filings:\n    get:\n      description: List company's filing. Limit to 250 documents at a time. This data\n        is available for bulk download on \u003ca href=\"https://www.kaggle.com/finnhub/sec-filings\"\n        target=\"_blank\"\u003eKaggle SEC Filings database\u003c/a\u003e.\n      operationId: filings\n      parameters:\n      - description: Symbol. Leave \u003ccode\u003esymbol\u003c/code\u003e,\u003ccode\u003ecik\u003c/code\u003e and \u003ccode\u003eaccessNumber\u003c/code\u003e\n          empty to list latest filings.\n        in: query\n        name: symbol\n        schema:\n          type: string\n      - description: CIK.\n        in: query\n        name: cik\n        schema:\n          type: string\n      - description: Access number of a specific report you want to retrieve data\n          from.\n        in: query\n        name: accessNumber\n        schema:\n          type: string\n      - description: Filter by form. You can use this value \u003ccode\u003eNT 10-K\u003c/code\u003e to\n          find non-timely filings for a company.\n        in: query\n        name: form\n        schema:\n          type: string\n      - description: 'From date: 2020-03-15.'\n        in: query\n        name: from\n        schema:\n          format: date\n          type: string\n      - description: 'To date: 2020-03-16.'\n        in: query\n        name: to\n        schema:\n          format: date\n          type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: '#/components/schemas/Filing'\n                type: array\n          description: successful operation\n      security:\n      - api_key: []\n      summary: SEC Filings\n      tags:\n      - Default\n  /stock/international-filings:\n    get:\n      description: List filings for international companies. Limit to 250 documents\n        at a time. These are the documents we use to source our fundamental data.\n        Only support SEDAR and UK Companies House for normal usage. Enterprise clients\n        who need access to the full filings for global markets should contact us for\n        the access.\n      operationId: international-filings\n      parameters:\n      - description: Symbol. Leave empty to list latest filings.\n        in: query\n        name: symbol\n        schema:\n          type: string\n      - description: Filter by country using country's 2-letter code.\n        in: query\n        name: country\n        schema:\n          type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: '#/components/schemas/InternationalFiling'\n                type: array\n          description: successful operation\n      security:\n      - api_key: []\n      summary: International Filings\n      tags:\n      - Default\n  /stock/filings-sentiment:\n    get:\n      description: Get sentiment analysis of 10-K and 10-Q filings from SEC. An abnormal\n        increase in the number of positive/negative words in filings can signal a\n        significant change in the company's stock price in the upcoming 4 quarters.\n        We make use of \u003ca href= \"https://sraf.nd.edu/textual-analysis/resources/\"\n        target=\"_blank\"\u003eLoughran and McDonald Sentiment Word Lists\u003c/a\u003e to calculate\n        the sentiment for each filing.\n      operationId: filings-sentiment\n      parameters:\n      - description: Access number of a specific report you want to retrieve data\n          from.\n        in: query\n        name: accessNumber\n        required: true\n        schema:\n          type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/SECSentimentAnalysis'\n          description: successful operation\n      security:\n      - api_key: []\n      summary: SEC Sentiment Analysis\n      tags:\n      - Default\n  /stock/similarity-index:\n    get:\n      description: \u003cp\u003eCalculate the textual difference between a company's 10-K /\n        10-Q reports and the same type of report in the previous year using Cosine\n        Similarity. For example, this endpoint compares 2019's 10-K with 2018's 10-K.\n        Companies breaking from its routines in disclosure of financial condition\n        and risk analysis section can signal a significant change in the company's\n        stock price in the upcoming 4 quarters.\u003c/p\u003e\n      operationId: similarity-index\n      parameters:\n      - description: Symbol. Required if cik is empty\n        in: query\n        name: symbol\n        schema:\n          type: string\n      - description: CIK. Required if symbol is empty\n        in: query\n        name: cik\n        schema:\n          type: string\n      - description: \u003ccode\u003eannual\u003c/code\u003e or \u003ccode\u003equarterly\u003c/code\u003e. Default to \u003ccode\u003eannual\u003c/code\u003e\n        in: query\n        name: freq\n        schema:\n          type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/SimilarityIndex'\n          description: successful operation\n      security:\n      - api_key: []\n      summary: Similarity Index\n      tags:\n      - Default\n  /calendar/ipo:\n    get:\n      description: Get recent and upcoming IPO.\n      operationId: ipo-calendar\n      parameters:\n      - description: 'From date: 2020-03-15.'\n        in: query\n        name: from\n        required: true\n        schema:\n          format: date\n          type: string\n      - description: 'To date: 2020-03-16.'\n        in: query\n        name: to\n        required: true\n        schema:\n          format: date\n          type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/IPOCalendar'\n          description: successful operation\n      security:\n      - api_key: []\n      summary: IPO Calendar\n      tags:\n      - Default\n  /sector/metrics:\n    get:\n      description: Get ratios for different sectors and regions/indices.\n      operationId: sector-metric\n      parameters:\n      - description: Region. A list of supported values for this field can be found\n          \u003ca href=\"https://docs.google.com/spreadsheets/d/1afedyv7yWJ-z7pMjaAZK-f6ENY3mI3EBCk95QffpoHw/edit?usp=sharing\"\n          target=\"_blank\"\u003ehere\u003c/a\u003e.\n        in: query\n        name: region\n        required: true\n        schema:\n          type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/SectorMetric'\n          description: successful operation\n      security:\n      - api_key: []\n      summary: Sector Metrics\n      tags:\n      - Default\n  /stock/dividend:\n    get:\n      description: Get dividends data for common stocks going back 30 years.\n      operationId: stock-dividends\n      parameters:\n      - description: Symbol.\n        in: query\n        name: symbol\n        required: true\n        schema:\n          type: string\n      - description: YYYY-MM-DD.\n        in: query\n        name: from\n        required: true\n        schema:\n          format: date\n          type: string\n      - description: YYYY-MM-DD.\n        in: query\n        name: to\n        required: true\n        schema:\n          format: date\n          type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: '#/components/schemas/Dividends'\n                type: array\n          description: successful operation\n      security:\n      - api_key: []\n      summary: Dividends\n      tags:\n      - Default\n  /stock/recommendation:\n    get:\n      description: Get latest analyst recommendation trends for a company.\n      operationId: recommendation-trends\n      parameters:\n      - description: 'Symbol of the company: AAPL.'\n        in: query\n        name: symbol\n        required: true\n        schema:\n          type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: '#/components/schemas/RecommendationTrend'\n                type: array\n          description: successful operation\n      security:\n      - api_key: []\n      summary: Recommendation Trends\n      tags:\n      - Default\n  /stock/price-target:\n    get:\n      description: Get latest price target consensus.\n      operationId: price-target\n      parameters:\n      - description: 'Symbol of the company: AAPL.'\n        in: query\n        name: symbol\n        required: true\n        schema:\n          type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PriceTarget'\n          description: successful operation\n      security:\n      - api_key: []\n      summary: Price Target\n      tags:\n      - Default\n  /stock/upgrade-downgrade:\n    get:\n      description: Get latest stock upgrade and downgrade.\n      operationId: upgrade-downgrade\n      parameters:\n      - description: 'Symbol of the company: AAPL. If left blank, the API will return\n          latest stock upgrades/downgrades.'\n        in: query\n        name: symbol\n        schema:\n          type: string\n      - description: 'From date: 2000-03-15.'\n        in: query\n        name: from\n        schema:\n          format: date\n          type: string\n      - description: 'To date: 2020-03-16.'\n        in: query\n        name: to\n        schema:\n          format: date\n          type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: '#/components/schemas/UpgradeDowngrade'\n                type: array\n          description: successful operation\n      security:\n      - api_key: []\n      summary: Stock Upgrade/Downgrade\n      tags:\n      - Default\n  /stock/revenue-estimate:\n    get:\n      description: Get company's revenue estimates.\n      operationId: company-revenue-estimates\n      parameters:\n      - description: 'Symbol of the company: AAPL.'\n        in: query\n        name: symbol\n        required: true\n        schema:\n          type: string\n      - description: 'Can take 1 of the following values: \u003ccode\u003eannual, quarterly\u003c/code\u003e.\n          Default to \u003ccode\u003equarterly\u003c/code\u003e'\n        in: query\n        name: freq\n        schema:\n          type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RevenueEstimates'\n          description: successful operation\n      security:\n      - api_key: []\n      summary: Revenue Estimates\n      tags:\n      - Default\n  /stock/ebitda-estimate:\n    get:\n      description: Get company's ebitda estimates.\n      operationId: company-ebitda-estimates\n      parameters:\n      - description: 'Symbol of the company: AAPL.'\n        in: query\n        name: symbol\n        required: true\n        schema:\n          type: string\n      - description: 'Can take 1 of the following values: \u003ccode\u003eannual, quarterly\u003c/code\u003e.\n          Default to \u003ccode\u003equarterly\u003c/code\u003e'\n        in: query\n        name: freq\n        schema:\n          type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/EbitdaEstimates'\n          description: successful operation\n      security:\n      - api_key: []\n      summary: EBITDA Estimates\n      tags:\n      - Default\n  /stock/ebit-estimate:\n    get:\n      description: Get company's ebit estimates.\n      operationId: company-ebit-estimates\n      parameters:\n      - description: 'Symbol of the company: AAPL.'\n        in: query\n        name: symbol\n        required: true\n        schema:\n          type: string\n      - description: 'Can take 1 of the following values: \u003ccode\u003eannual, quarterly\u003c/code\u003e.\n          Default to \u003ccode\u003equarterly\u003c/code\u003e'\n        in: query\n        name: freq\n        schema:\n          type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/EbitEstimates'\n          description: successful operation\n      security:\n      - api_key: []\n      summary: EBIT Estimates\n      tags:\n      - Default\n  /stock/eps-estimate:\n    get:\n      description: Get company's EPS estimates.\n      operationId: company-eps-estimates\n      parameters:\n      - description: 'Symbol of the company: AAPL.'\n        in: query\n        name: symbol\n        required: true\n        schema:\n          type: string\n      - description: 'Can take 1 of the following values: \u003ccode\u003eannual, quarterly\u003c/code\u003e.\n          Default to \u003ccode\u003equarterly\u003c/code\u003e'\n        in: query\n        name: freq\n        schema:\n          type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/EarningsEstimates'\n          description: successful operation\n      security:\n      - api_key: []\n      summary: Earnings Estimates\n      tags:\n      - Default\n  /stock/earnings:\n    get:\n      description: Get company historical quarterly earnings surprise going back to\n        2000.\n      operationId: company-earnings\n      parameters:\n      - description: 'Symbol of the company: AAPL.'\n        in: query\n        name: symbol\n        required: true\n        schema:\n          type: string\n      - description: Limit number of period returned. Leave blank to get the full\n          history.\n        in: query\n        name: limit\n        schema:\n          format: int64\n          type: integer\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: '#/components/schemas/EarningResult'\n                type: array\n          description: successful operation\n      security:\n      - api_key: []\n      summary: Earnings Surprises\n      tags:\n      - Default\n  /calendar/earnings:\n    get:\n      description: Get historical and coming earnings release. EPS and Revenue in\n        this endpoint are non-GAAP, which means they are adjusted to exclude some\n        one-time or unusual items. This is the same data investors usually react to\n        and talked about on the media. Estimates are sourced from both sell-side and\n        buy-side analysts.\n      operationId: earnings-calendar\n      parameters:\n      - description: 'From date: 2020-03-15.'\n        in: query\n        name: from\n        schema:\n          format: date\n          type: string\n      - description: 'To date: 2020-03-16.'\n        in: query\n        name: to\n        schema:\n          format: date\n          type: string\n      - description: 'Filter by symbol: AAPL.'\n        in: query\n        name: symbol\n        schema:\n          type: string\n      - description: Set to \u003ccode\u003etrue\u003c/code\u003e to include international markets. Default\n          value is \u003ccode\u003efalse\u003c/code\u003e\n        in: query\n        name: international\n        schema:\n          type: boolean\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/EarningsCalendar'\n          description: successful operation\n      security:\n      - api_key: []\n      summary: Earnings Calendar\n      tags:\n      - Default\n  /quote:\n    get:\n      description: \u003cp\u003eGet real-time quote data for US stocks. Constant polling is\n        not recommended. Use websocket if you need real-time updates.\u003c/p\u003e\u003cp\u003eReal-time\n        stock prices for international markets are supported for Enterprise clients\n        via our partner's feed. \u003ca href=\"mailto:support@finnhub.io\"\u003eContact Us\u003c/a\u003e\n        to learn more.\u003c/p\u003e\n      operationId: quote\n      parameters:\n      - description: Symbol\n        in: query\n        name: symbol\n        required: true\n        schema:\n          type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Quote'\n          description: successful operation\n      security:\n      - api_key: []\n      summary: Quote\n      tags:\n      - Default\n  /stock/candle:\n    get:\n      description: \u003cp\u003eGet candlestick data (OHLCV) for stocks.\u003c/p\u003e\u003cp\u003eDaily data will\n        be adjusted for Splits. Intraday data will remain unadjusted.\u003c/p\u003e\n      operationId: stock-candles\n      parameters:\n      - description: Symbol.\n        in: query\n        name: symbol\n        required: true\n        schema:\n          type: string\n      - description: Supported resolution includes \u003ccode\u003e1, 5, 15, 30, 60, D, W, M\n          \u003c/code\u003e.Some timeframes might not be available depending on the exchange.\n        in: query\n        name: resolution\n        required: true\n        schema:\n          type: string\n      - description: UNIX timestamp. Interval initial value.\n        in: query\n        name: from\n        required: true\n        schema:\n          format: int64\n          type: integer\n      - description: UNIX timestamp. Interval end value.\n        in: query\n        name: to\n        required: true\n        schema:\n          format: int64\n          type: integer\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/StockCandles'\n          description: successful operation\n      security:\n      - api_key: []\n      summary: Stock Candles\n      tags:\n      - Default\n  /stock/tick:\n    get:\n      description: |-\n        \u003cp\u003eGet historical tick data for global exchanges. You can send the request directly to our tick server at \u003ca href=\"https://tick.finnhub.io/\"\u003ehttps://tick.finnhub.io/\u003c/a\u003e with the same path and parameters or get redirected there if you call our main server.\u003c/p\u003e\u003cp\u003eFor US market, you can visit our bulk download page in the Dashboard \u003ca target=\"_blank\" href=\"/dashboard/download\",\u003ehere\u003c/a\u003e to speed up the download process.\u003c/p\u003e\u003ctable class=\"table table-hover\"\u003e\n          \u003cthead\u003e\n            \u003ctr\u003e\n              \u003cth\u003eExchange\u003c/th\u003e\n              \u003cth\u003eSegment\u003c/th\u003e\n              \u003cth\u003eDelay\u003c/th\u003e\n            \u003c/tr\u003e\n          \u003c/thead\u003e\n          \u003ctbody\u003e\n            \u003ctr\u003e\n              \u003ctd class=\"text-blue\"\u003eUS CTA/UTP\u003c/th\u003e\n              \u003ctd\u003eFull SIP\u003c/td\u003e\n              \u003ctd\u003e15 minute\u003c/td\u003e\n            \u003c/tr\u003e\n            \u003ctr\u003e\n              \u003ctd class=\"text-blue\"\u003eTSX\u003c/th\u003e\n              \u003ctd\u003e\u003cul\u003e\u003cli\u003eTSX\u003c/li\u003e\u003cli\u003eTSX Venture\u003c/li\u003e\u003cli\u003eIndex\u003c/li\u003e\u003c/ul\u003e\u003c/td\u003e\n              \u003ctd\u003eEnd-of-day\u003c/td\u003e\n            \u003c/tr\u003e\n            \u003ctr\u003e\n              \u003ctd class=\"text-blue\"\u003eLSE\u003c/th\u003e\n              \u003ctd\u003e\u003cul\u003e\u003cli\u003eLondon Stock Exchange (L)\u003c/li\u003e\u003cli\u003eLSE International (L)\u003c/li\u003e\u003cli\u003eLSE European (L)\u003c/li\u003e\u003c/ul\u003e\u003c/td\u003e\n              \u003ctd\u003e15 minute\u003c/td\u003e\n            \u003c/tr\u003e\n            \u003ctr\u003e\n              \u003ctd class=\"text-blue\"\u003eEuronext\u003c/th\u003e\n              \u003ctd\u003e\u003cul\u003e \u003cli\u003eEuronext Paris (PA)\u003c/li\u003e \u003cli\u003eEuronext Amsterdam (AS)\u003c/li\u003e \u003cli\u003eEuronext Lisbon (LS)\u003c/li\u003e \u003cli\u003eEuronext Brussels (BR)\u003c/li\u003e \u003cli\u003eEuronext Oslo (OL)\u003c/li\u003e \u003cli\u003eEuronext London (LN)\u003c/li\u003e \u003cli\u003eEuronext Dublin (IR)\u003c/li\u003e \u003cli\u003eIndex\u003c/li\u003e \u003cli\u003eWarrant\u003c/li\u003e\u003c/ul\u003e\u003c/td\u003e\n              \u003ctd\u003eEnd-of-day\u003c/td\u003e\n            \u003c/tr\u003e\n            \u003ctr\u003e\n              \u003ctd class=\"text-blue\"\u003eDeutsche Börse\u003c/th\u003e\n              \u003ctd\u003e\u003cul\u003e \u003cli\u003eFrankfurt (F)\u003c/li\u003e \u003cli\u003eXetra (DE)\u003c/li\u003e \u003cli\u003eDuesseldorf (DU)\u003c/li\u003e \u003cli\u003eHamburg (HM)\u003c/li\u003e \u003cli\u003eBerlin (BE)\u003c/li\u003e \u003cli\u003eHanover (HA)\u003c/li\u003e \u003cli\u003eStoxx (SX)\u003c/li\u003e \u003cli\u003eTradeGate (TG)\u003c/li\u003e \u003cli\u003eZertifikate (SC)\u003c/li\u003e \u003cli\u003eIndex\u003c/li\u003e \u003cli\u003eWarrant\u003c/li\u003e\u003c/ul\u003e\u003c/td\u003e\n              \u003ctd\u003eEnd-of-day\u003c/td\u003e\n            \u003c/tr\u003e\n          \u003c/tbody\u003e\n        \u003c/table\u003e\n      operationId: stock-tick\n      parameters:\n      - description: Symbol.\n        in: query\n        name: symbol\n        required: true\n        schema:\n          type: string\n      - description: 'Date: 2020-04-02.'\n        in: query\n        name: date\n        required: true\n        schema:\n          format: date\n          type: string\n      - description: 'Limit number of ticks returned. Maximum value: \u003ccode\u003e25000\u003c/code\u003e'\n        in: query\n        name: limit\n        required: true\n        schema:\n          format: int64\n          type: integer\n      - description: Number of ticks to skip. Use this parameter to loop through the\n          entire data.\n        in: query\n        name: skip\n        required: true\n        schema:\n          format: int64\n          type: integer\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/TickData'\n          description: successful operation\n      security:\n      - api_key: []\n      summary: Tick Data\n      tags:\n      - Default\n  /stock/bbo:\n    get:\n      description: \u003cp\u003eGet historical best bid and offer for US stocks, LSE, TSX, Euronext\n        and Deutsche Borse.\u003c/p\u003e\u003cp\u003eFor US market, this endpoint only serves historical\n        NBBO from the beginning of 2020. To download more historical data, please\n        visit our bulk download page in the Dashboard \u003ca target=\"_blank\" href=\"/dashboard/download\",\u003ehere\u003c/a\u003e.\u003c/p\u003e\n      operationId: stock-nbbo\n      parameters:\n      - description: Symbol.\n        in: query\n        name: symbol\n        required: true\n        schema:\n          type: string\n      - description: 'Date: 2020-04-02.'\n        in: query\n        name: date\n        required: true\n        schema:\n          format: date\n          type: string\n      - description: 'Limit number of ticks returned. Maximum value: \u003ccode\u003e25000\u003c/code\u003e'\n        in: query\n        name: limit\n        required: true\n        schema:\n          format: int64\n          type: integer\n      - description: Number of ticks to skip. Use this parameter to loop through the\n          entire data.\n        in: query\n        name: skip\n        required: true\n        schema:\n          format: int64\n          type: integer\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/HistoricalNBBO'\n          description: successful operation\n      security:\n      - api_key: []\n      summary: Historical NBBO\n      tags:\n      - Default\n  /stock/bidask:\n    get:\n      description: Get last bid/ask data for US stocks.\n      operationId: stock-bidask\n      parameters:\n      - description: Symbol.\n        in: query\n        name: symbol\n        required: true\n        schema:\n          type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/LastBid-Ask'\n          description: successful operation\n      security:\n      - api_key: []\n      summary: Last Bid-Ask\n      tags:\n      - Default\n  /stock/split:\n    get:\n      description: Get splits data for stocks.\n      operationId: stock-splits\n      parameters:\n      - description: Symbol.\n        in: query\n        name: symbol\n        required: true\n        schema:\n          type: string\n      - description: YYYY-MM-DD.\n        in: query\n        name: from\n        required: true\n        schema:\n          format: date\n          type: string\n      - description: YYYY-MM-DD.\n        in: query\n        name: to\n        required: true\n        schema:\n          format: date\n          type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: '#/components/schemas/Split'\n                type: array\n          description: successful operation\n      security:\n      - api_key: []\n      summary: Splits\n      tags:\n      - Default\n  /stock/dividend2:\n    get:\n      description: Get global dividends data.\n      operationId: stock-basic-dividends\n      parameters:\n      - description: Symbol.\n        in: query\n        name: symbol\n        required: true\n        schema:\n          type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Dividends2'\n          description: successful operation\n      security:\n      - api_key: []\n      summary: Dividends 2 (Basic)\n      tags:\n      - Default\n  /index/constituents:\n    get:\n      description: Get a list of index's constituents. A list of supported indices\n        for this endpoint can be found \u003ca href=\"https://docs.google.com/spreadsheets/d/1Syr2eLielHWsorxkDEZXyc55d6bNx1M3ZeI4vdn7Qzo/edit?usp=sharing\"\n        target=\"_blank\"\u003ehere\u003c/a\u003e.\n      operationId: indices-constituents\n      parameters:\n      - description: symbol\n        in: query\n        name: symbol\n        required: true\n        schema:\n          type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/IndicesConstituents'\n          description: successful operation\n      security:\n      - api_key: []\n      summary: Indices Constituents\n      tags:\n      - Default\n  /index/historical-constituents:\n    get:\n      description: Get full history of index's constituents including symbols and\n        dates of joining and leaving the Index. Currently support \u003ccode\u003e^GSPC\u003c/code\u003e,\n        \u003ccode\u003e^NDX\u003c/code\u003e, \u003ccode\u003e^DJI\u003c/code\u003e\n      operationId: indices-historical-constituents\n      parameters:\n      - description: symbol\n        in: query\n        name: symbol\n        required: true\n        schema:\n          type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/IndicesHistoricalConstituents'\n          description: successful operation\n      security:\n      - api_key: []\n      summary: Indices Historical Constituents\n      tags:\n      - Default\n  /etf/profile:\n    get:\n      description: Get ETF profile information. This endpoint has global coverage.\n      operationId: etfs-profile\n      parameters:\n      - description: ETF symbol.\n        in: query\n        name: symbol\n        schema:\n          type: string\n      - description: ETF isin.\n        in: query\n        name: isin\n        schema:\n          type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ETFsProfile'\n          description: successful operation\n      security:\n      - api_key: []\n      summary: ETFs Profile\n      tags:\n      - Default\n  /etf/holdings:\n    get:\n      description: Get full ETF holdings/constituents. This endpoint has global coverage.\n        Widget only shows top 10 holdings.\n      operationId: etfs-holdings\n      parameters:\n      - description: ETF symbol.\n        in: query\n        name: symbol\n        schema:\n          type: string\n      - description: ETF isin.\n        in: query\n        name: isin\n        schema:\n          type: string\n      - description: Skip the first n results. You can use this parameter to query\n          historical constituents data. The latest result is returned if skip=0 or\n          not set.\n        in: query\n        name: skip\n        schema:\n          format: int64\n          type: integer\n      - description: Query holdings by date. You can use either this param or \u003ccode\u003eskip\u003c/code\u003e\n          param, not both.\n        in: query\n        name: date\n        schema:\n          type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ETFsHoldings'\n          description: successful operation\n      security:\n      - api_key: []\n      summary: ETFs Holdings\n      tags:\n      - Default\n  /etf/sector:\n    get:\n      description: Get ETF sector exposure data.\n      operationId: etfs-sector-exposure\n      parameters:\n      - description: ETF symbol.\n        in: query\n        name: symbol\n        required: true\n        schema:\n          type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ETFsSectorExposure'\n          description: successful operation\n      security:\n      - api_key: []\n      summary: ETFs Sector Exposure\n      tags:\n      - Default\n  /etf/country:\n    get:\n      description: Get ETF country exposure data.\n      operationId: etfs-country-exposure\n      parameters:\n      - description: ETF symbol.\n        in: query\n        name: symbol\n        required: true\n        schema:\n          type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ETFsCountryExposure'\n          description: successful operation\n      security:\n      - api_key: []\n      summary: ETFs Country Exposure\n      tags:\n      - Default\n  /mutual-fund/profile:\n    get:\n      description: Get mutual funds profile information. This endpoint covers both\n        US and global mutual funds. For international funds, you must query the data\n        using ISIN.\n      operationId: mutual-fund-profile\n      parameters:\n      - description: Fund's symbol.\n        in: query\n        name: symbol\n        schema:\n          type: string\n      - description: Fund's isin.\n        in: query\n        name: isin\n        schema:\n          type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/MutualFundProfile'\n          description: successful operation\n      security:\n      - api_key: []\n      summary: Mutual Funds Profile\n      tags:\n      - Default\n  /mutual-fund/holdings:\n    get:\n      description: Get full Mutual Funds holdings/constituents. This endpoint covers\n        both US and global mutual funds. For international funds, you must query the\n        data using ISIN.\n      operationId: mutual-fund-holdings\n      parameters:\n      - description: Fund's symbol.\n        in: query\n        name: symbol\n        schema:\n          type: string\n      - description: Fund's isin.\n        in: query\n        name: isin\n        schema:\n          type: string\n      - description: Skip the first n results. You can use this parameter to query\n          historical constituents data. The latest result is returned if skip=0 or\n          not set.\n        in: query\n        name: skip\n        schema:\n          format: int64\n          type: integer\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/MutualFundHoldings'\n          description: successful operation\n      security:\n      - api_key: []\n      summary: Mutual Funds Holdings\n      tags:\n      - Default\n  /mutual-fund/sector:\n    get:\n      description: Get Mutual Funds sector exposure data.\n      operationId: mutual-fund-sector-exposure\n      parameters:\n      - description: Mutual Fund symbol.\n        in: query\n        name: symbol\n        required: true\n        schema:\n          type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/MutualFundSectorExposure'\n          description: successful operation\n      security:\n      - api_key: []\n      summary: Mutual Funds Sector Exposure\n      tags:\n      - Default\n  /mutual-fund/country:\n    get:\n      description: Get Mutual Funds country exposure data.\n      operationId: mutual-fund-country-exposure\n      parameters:\n      - description: Symbol.\n        in: query\n        name: symbol\n        required: true\n        schema:\n          type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/MutualFundCountryExposure'\n          description: successful operation\n      security:\n      - api_key: []\n      summary: Mutual Funds Country Exposure\n      tags:\n      - Default\n  /forex/exchange:\n    get:\n      description: List supported forex exchanges\n      operationId: forex-exchanges\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                items:\n                  type: string\n                type: array\n          description: successful operation\n      security:\n      - api_key: []\n      summary: Forex Exchanges\n      tags:\n      - Default\n  /forex/symbol:\n    get:\n      description: List supported forex symbols.\n      operationId: forex-symbols\n      parameters:\n      - description: Exchange you want to get the list of symbols from.\n        in: query\n        name: exchange\n        required: true\n        schema:\n          type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: '#/components/schemas/ForexSymbol'\n                type: array\n          description: successful operation\n      security:\n      - api_key: []\n      summary: Forex Symbol\n      tags:\n      - Default\n  /forex/candle:\n    get:\n      description: Get candlestick data for forex symbols.\n      operationId: forex-candles\n      parameters:\n      - description: Use symbol returned in \u003ccode\u003e/forex/symbol\u003c/code\u003e endpoint for\n          this field.\n        in: query\n        name: symbol\n        required: true\n        schema:\n          type: string\n      - description: Supported resolution includes \u003ccode\u003e1, 5, 15, 30, 60, D, W, M\n          \u003c/code\u003e.Some timeframes might not be available depending on the exchange.\n        in: query\n        name: resolution\n        required: true\n        schema:\n          type: string\n      - description: UNIX timestamp. Interval initial value.\n        in: query\n        name: from\n        required: true\n        schema:\n          format: int64\n          type: integer\n      - description: UNIX timestamp. Interval end value.\n        in: query\n        name: to\n        required: true\n        schema:\n          format: int64\n          type: integer\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ForexCandles'\n          description: successful operation\n      security:\n      - api_key: []\n      summary: Forex Candles\n      tags:\n      - Default\n  /forex/rates:\n    get:\n      description: Get rates for all forex pairs. Ideal for currency conversion\n      operationId: forex-rates\n      parameters:\n      - description: Base currency. Default to EUR.\n        in: query\n        name: base\n        schema:\n          type: string\n      - description: Date. Leave blank to get the latest data.\n        in: query\n        name: date\n        schema:\n          type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Forexrates'\n          description: successful operation\n      security:\n      - api_key: []\n      summary: Forex rates\n      tags:\n      - Default\n  /crypto/exchange:\n    get:\n      description: List supported crypto exchanges\n      operationId: crypto-exchanges\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                items:\n                  type: string\n                type: array\n          description: successful operation\n      security:\n      - api_key: []\n      summary: Crypto Exchanges\n      tags:\n      - Default\n  /crypto/symbol:\n    get:\n      description: List supported crypto symbols by exchange\n      operationId: crypto-symbols\n      parameters:\n      - description: Exchange you want to get the list of symbols from.\n        in: query\n        name: exchange\n        required: true\n        schema:\n          type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: '#/components/schemas/CryptoSymbol'\n                type: array\n          description: successful operation\n      security:\n      - api_key: []\n      summary: Crypto Symbol\n      tags:\n      - Default\n  /crypto/profile:\n    get:\n      description: Get crypto's profile.\n      operationId: crypto-profile\n      parameters:\n      - description: Crypto symbol such as BTC or ETH.\n        in: query\n        name: symbol\n        required: true\n        schema:\n          type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CryptoProfile'\n          description: successful operation\n      security:\n      - api_key: []\n      summary: Crypto Profile\n      tags:\n      - Default\n  /crypto/candle:\n    get:\n      description: Get candlestick data for crypto symbols.\n      operationId: crypto-candles\n      parameters:\n      - description: Use symbol returned in \u003ccode\u003e/crypto/symbol\u003c/code\u003e endpoint for\n          this field.\n        in: query\n        name: symbol\n        required: true\n        schema:\n          type: string\n      - description: Supported resolution includes \u003ccode\u003e1, 5, 15, 30, 60, D, W, M\n          \u003c/code\u003e.Some timeframes might not be available depending on the exchange.\n        in: query\n        name: resolution\n        required: true\n        schema:\n          type: string\n      - description: UNIX timestamp. Interval initial value.\n        in: query\n        name: from\n        required: true\n        schema:\n          format: int64\n          type: integer\n      - description: UNIX timestamp. Interval end value.\n        in: query\n        name: to\n        required: true\n        schema:\n          format: int64\n          type: integer\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CryptoCandles'\n          description: successful operation\n      security:\n      - api_key: []\n      summary: Crypto Candles\n      tags:\n      - Default\n  /scan/pattern:\n    get:\n      description: Run pattern recognition algorithm on a symbol. Support double top/bottom,\n        triple top/bottom, head and shoulders, triangle, wedge, channel, flag, and\n        candlestick patterns.\n      operationId: pattern-recognition\n      parameters:\n      - description: Symbol\n        in: query\n        name: symbol\n        required: true\n        schema:\n          type: string\n      - description: Supported resolution includes \u003ccode\u003e1, 5, 15, 30, 60, D, W, M\n          \u003c/code\u003e.Some timeframes might not be available depending on the exchange.\n        in: query\n        name: resolution\n        required: true\n        schema:\n          type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PatternRecognition'\n          description: successful operation\n      security:\n      - api_key: []\n      summary: Pattern Recognition\n      tags:\n      - Default\n  /scan/support-resistance:\n    get:\n      description: Get support and resistance levels for a symbol.\n      operationId: support-resistance\n      parameters:\n      - description: Symbol\n        in: query\n        name: symbol\n        required: true\n        schema:\n          type: string\n      - description: Supported resolution includes \u003ccode\u003e1, 5, 15, 30, 60, D, W, M\n          \u003c/code\u003e.Some timeframes might not be available depending on the exchange.\n        in: query\n        name: resolution\n        required: true\n        schema:\n          type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/SupportResistance'\n          description: successful operation\n      security:\n      - api_key: []\n      summary: Support/Resistance\n      tags:\n      - Default\n  /scan/technical-indicator:\n    get:\n      description: Get aggregate signal of multiple technical indicators such as MACD,\n        RSI, Moving Average v.v.\n      operationId: aggregate-indicator\n      parameters:\n      - description: symbol\n        in: query\n        name: symbol\n        required: true\n        schema:\n          type: string\n      - description: Supported resolution includes \u003ccode\u003e1, 5, 15, 30, 60, D, W, M\n          \u003c/code\u003e.Some timeframes might not be available depending on the exchange.\n        in: query\n        name: resolution\n        required: true\n        schema:\n          type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AggregateIndicators'\n          description: successful operation\n      security:\n      - api_key: []\n      summary: Aggregate Indicators\n      tags:\n      - Default\n  /indicator:\n    post:\n      description: Return technical indicator with price data. List of supported indicators\n        can be found \u003ca href=\"https://docs.google.com/spreadsheets/d/1ylUvKHVYN2E87WdwIza8ROaCpd48ggEl1k5i5SgA29k/edit?usp=sharing\"\n        target=\"_blank\"\u003ehere\u003c/a\u003e.\n      operationId: technical-indicator\n      parameters:\n      - description: symbol\n        in: query\n        name: symbol\n        required: true\n        schema:\n          type: string\n      - description: Supported resolution includes \u003ccode\u003e1, 5, 15, 30, 60, D, W, M\n          \u003c/code\u003e.Some timeframes might not be available depending on the exchange.\n        in: query\n        name: resolution\n        required: true\n        schema:\n          type: string\n      - description: UNIX timestamp. Interval initial value.\n        in: query\n        name: from\n        required: true\n        schema:\n          format: int64\n          type: integer\n      - description: UNIX timestamp. Interval end value.\n        in: query\n        name: to\n        required: true\n        schema:\n          format: int64\n          type: integer\n      - description: Indicator name. Full list can be found \u003ca href=\"https://docs.google.com/spreadsheets/d/1ylUvKHVYN2E87WdwIza8ROaCpd48ggEl1k5i5SgA29k/edit?usp=sharing\"\n          target=\"_blank\"\u003ehere\u003c/a\u003e.\n        in: query\n        name: indicator\n        required: true\n        schema:\n          type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/IndicatorFields'\n        description: Check out \u003ca href=\"https://docs.google.com/spreadsheets/d/1ylUvKHVYN2E87WdwIza8ROaCpd48ggEl1k5i5SgA29k/edit?usp=sharing\"\n          target=\"_blank\"\u003ethis page\u003c/a\u003e to see which indicators and params are supported.\n        required: false\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/TechnicalIndicator'\n          description: successful operation\n      security:\n      - api_key: []\n      summary: Technical Indicators\n      tags:\n      - Default\n      x-codegen-request-body-name: indicator_fields\n  /stock/transcripts/list:\n    get:\n      description: List earnings call transcripts' metadata. This endpoint is available\n        for US, UK, European, Australian and Canadian companies.\n      operationId: transcripts-list\n      parameters:\n      - description: 'Company symbol: AAPL. Leave empty to list the latest transcripts'\n        in: query\n        name: symbol\n        required: true\n        schema:\n          type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/EarningsCallTranscriptsList'\n          description: successful operation\n      security:\n      - api_key: []\n      summary: Earnings Call Transcripts List\n      tags:\n      - Default\n  /stock/transcripts:\n    get:\n      description: \u003cp\u003eGet earnings call transcripts, audio and participants' list.\n        This endpoint is only available for US, UK, and Candian companies. \u003cp\u003e15+\n        years of data is available with 220,000+ audio which add up to 7TB in size.\u003c/p\u003e\n      operationId: transcripts\n      parameters:\n      - description: Transcript's id obtained with \u003ca href=\"#transcripts-list\"\u003eTranscripts\n          List endpoint\u003c/a\u003e.\n        in: query\n        name: id\n        required: true\n        schema:\n          type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/EarningsCallTranscripts'\n          description: successful operation\n      security:\n      - api_key: []\n      summary: Earnings Call Transcripts\n      tags:\n      - Default\n  /stock/social-sentiment:\n    get:\n      description: \u003cp\u003eGet social sentiment for stocks on Reddit and Twitter. This\n        endpoint is currently in Beta.\u003c/p\u003e\n      operationId: social-sentiment\n      parameters:\n      - description: Company symbol.\n        in: query\n        name: symbol\n        required: true\n        schema:\n          type: string\n      - description: From date \u003ccode\u003eYYYY-MM-DD\u003c/code\u003e.\n        in: query\n        name: from\n        schema:\n          format: date\n          type: string\n      - description: To date \u003ccode\u003eYYYY-MM-DD\u003c/code\u003e.\n        in: query\n        name: to\n        schema:\n          format: date\n          type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/SocialSentiment'\n          description: successful operation\n      security:\n      - api_key: []\n      summary: Social Sentiment\n      tags:\n      - Default\n  /stock/investment-theme:\n    get:\n      description: \u003cp\u003eThematic investing involves creating a portfolio (or portion\n        of a portfolio) by gathering together a collection of companies involved in\n        certain areas that you predict will generate above-market returns over the\n        long term. Themes can be based on a concept such as ageing populations or\n        a sub-sector such as robotics, and drones. Thematic investing focuses on predicted\n        long-term trends rather than specific companies or sectors, enabling investors\n        to access structural, one-off shifts that can change an entire industry.\u003c/p\u003e\u003cp\u003eThis\n        endpoint will help you get portfolios of different investment themes that\n        are changing our life and are the way of the future.\u003c/p\u003e\u003cp\u003eA full list of\n        themes supported can be found \u003ca target=\"_blank\" href=\"https://docs.google.com/spreadsheets/d/1ULj9xDh4iPoQj279M084adZ2_S852ttRthKKJ7madYc/edit?usp=sharing\"\u003ehere\u003c/a\u003e.\n        The theme coverage and portfolios are updated bi-weekly by our analysts. Our\n        approach excludes penny, super-small cap and illiquid stocks.\u003c/p\u003e\n      operationId: investment-themes\n      parameters:\n      - description: Investment theme. A full list of themes supported can be found\n          \u003ca target=\"_blank\" href=\"https://docs.google.com/spreadsheets/d/1ULj9xDh4iPoQj279M084adZ2_S852ttRthKKJ7madYc/edit?usp=sharing\"\u003ehere\u003c/a\u003e.\n        in: query\n        name: theme\n        required: true\n        schema:\n          type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InvestmentThemes'\n          description: successful operation\n      security:\n      - api_key: []\n      summary: Investment Themes (Thematic Investing)\n      tags:\n      - Default\n  /stock/supply-chain:\n    get:\n      description: \u003cp\u003eThis endpoint provides an overall map of public companies' key\n        customers and suppliers. The data offers a deeper look into a company's supply\n        chain and how products are created. The data will help investors manage risk,\n        limit exposure or generate alpha-generating ideas and trading insights.\u003c/p\u003e\n      operationId: supply-chain-relationships\n      parameters:\n      - description: Symbol.\n        in: query\n        name: symbol\n        required: true\n        schema:\n          type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/SupplyChainRelationships'\n          description: successful operation\n      security:\n      - api_key: []\n      summary: Supply Chain Relationships\n      tags:\n      - Default\n  /stock/esg:\n    get:\n      description: \u003cp\u003eThis endpoint provides ESG scores and important indicators for\n        1000+ global companies. The data is collected through company's public ESG\n        disclosure and public sources.\u003c/p\u003e\u003cp\u003eOur ESG scoring models takes into account\n        more than 150 different inputs to calculate the level of ESG risks and how\n        well a company is managing them. A higher score means lower ESG risk or better\n        ESG management. ESG scores are in the the range of 0-100. Some key indicators\n        might contain letter-grade score from C- to A+ with C- is the lowest score\n        and A+ is the highest score.\u003c/p\u003e\n      operationId: company-esg-score\n      parameters:\n      - description: Symbol.\n        in: query\n        name: symbol\n        required: true\n        schema:\n          type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CompanyESG'\n          description: successful operation\n      security:\n      - api_key: []\n      summary: Company ESG Scores\n      tags:\n      - Default\n  /stock/earnings-quality-score:\n    get:\n      description: '\u003cp\u003eThis endpoint provides Earnings Quality Score for global companies.\u003c/p\u003e\u003cp\u003e\n        Earnings quality refers to the extent to which current earnings predict future\n        earnings. \"High-quality\" earnings are expected to persist, while \"low-quality\"\n        earnings do not. A higher score means a higher earnings quality\u003c/p\u003e\u003cp\u003eFinnhub\n        uses a proprietary model which takes into consideration 4 criteria:\u003c/p\u003e \u003cul\n        style=\"list-style-type: unset; margin-left: 30px;\"\u003e\u003cli\u003eProfitability\u003c/li\u003e\u003cli\u003eGrowth\u003c/li\u003e\u003cli\u003eCash\n        Generation \u0026 Capital Allocation\u003c/li\u003e\u003cli\u003eLeverage\u003c/li\u003e\u003c/ul\u003e\u003cbr/\u003e\u003cp\u003eWe then\n        compare the metrics of each company in each category against its peers in\n        the same industry to gauge how quality its earnings is.\u003c/p\u003e'\n      operationId: company-earnings-quality-score\n      parameters:\n      - description: Symbol.\n        in: query\n        name: symbol\n        required: true\n        schema:\n          type: string\n      - description: Frequency. Currently support \u003ccode\u003eannual\u003c/code\u003e and \u003ccode\u003equarterly\u003c/code\u003e\n        in: query\n        name: freq\n        required: true\n        schema:\n          type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CompanyEarningsQualityScore'\n          description: successful operation\n      security:\n      - api_key: []\n      summary: Company Earnings Quality Score\n      tags:\n      - Default\n  /covid19/us:\n    get:\n      description: Get real-time updates on the number of COVID-19 (Corona virus)\n        cases in the US with a state-by-state breakdown. Data is sourced from CDC\n        and reputable sources. You can also access this API \u003ca href=\"https://rapidapi.com/Finnhub/api/finnhub-real-time-covid-19\"\n        target=\"_blank\" rel=\"nofollow\"\u003ehere\u003c/a\u003e\n      operationId: covid-19\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: '#/components/schemas/CovidInfo'\n                type: array\n          description: successful operation\n      security:\n      - api_key: []\n      summary: COVID-19\n      tags:\n      - Default\n  /fda-advisory-committee-calendar:\n    get:\n      description: FDA's advisory committees are established to provide functions\n        which support the agency's mission of protecting and promoting the public\n        health, while meeting the requirements set forth in the Federal Advisory Committee\n        Act. Committees are either mandated by statute or established at the discretion\n        of the Department of Health and Human Services. Each committee is subject\n        to renewal at two-year intervals unless the committee charter states otherwise.\n      operationId: fda-committee-meeting-calendar\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: '#/components/schemas/FDAComitteeMeeting'\n                type: array\n          description: successful operation\n      security:\n      - api_key: []\n      summary: FDA Committee Meeting Calendar\n      tags:\n      - Default\n  /stock/uspto-patent:\n    get:\n      description: List USPTO patents for companies. Limit to 250 records per API\n        call.\n      operationId: stock-uspto-patent\n      parameters:\n      - description: Symbol.\n        in: query\n        name: symbol\n        required: true\n        schema:\n          type: string\n      - description: From date \u003ccode\u003eYYYY-MM-DD\u003c/code\u003e.\n        in: query\n        name: from\n        required: true\n        schema:\n          format: date\n          type: string\n      - description: To date \u003ccode\u003eYYYY-MM-DD\u003c/code\u003e.\n        in: query\n        name: to\n        required: true\n        schema:\n          format: date\n          type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/UsptoPatentResult'\n          description: successful operation\n      security:\n      - api_key: []\n      summary: USPTO Patents\n      tags:\n      - Default\n  /stock/visa-application:\n    get:\n      description: Get a list of H1-B and Permanent visa applications for companies\n        from the DOL. The data is updated quarterly.\n      operationId: stock-visa-application\n      parameters:\n      - description: Symbol.\n        in: query\n        name: symbol\n        required: true\n        schema:\n          type: string\n      - description: From date \u003ccode\u003eYYYY-MM-DD\u003c/code\u003e. Filter on the \u003ccode\u003ebeginDate\u003c/code\u003e\n          column.\n        in: query\n        name: from\n        required: true\n        schema:\n          format: date\n          type: string\n      - description: To date \u003ccode\u003eYYYY-MM-DD\u003c/code\u003e. Filter on the \u003ccode\u003ebeginDate\u003c/code\u003e\n          column.\n        in: query\n        name: to\n        required: true\n        schema:\n          format: date\n          type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/VisaApplicationResult'\n          description: successful operation\n      security:\n      - api_key: []\n      summary: H1-B Visa Application\n      tags:\n      - Default\n  /stock/lobbying:\n    get:\n      description: Get a list of reported lobbying activities in the Senate and the\n        House.\n      operationId: stock-lobbying\n      parameters:\n      - description: Symbol.\n        in: query\n        name: symbol\n        required: true\n        schema:\n          type: string\n      - description: From date \u003ccode\u003eYYYY-MM-DD\u003c/code\u003e.\n        in: query\n        name: from\n        required: true\n        schema:\n          format: date\n          type: string\n      - description: To date \u003ccode\u003eYYYY-MM-DD\u003c/code\u003e.\n        in: query\n        name: to\n        required: true\n        schema:\n          format: date\n          type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/LobbyingResult'\n          description: successful operation\n      security:\n      - api_key: []\n      summary: Senate Lobbying\n      tags:\n      - Default\n  /stock/usa-spending:\n    get:\n      description: Get a list of government's spending activities from USASpending\n        dataset for public companies. This dataset can help you identify companies\n        that win big government contracts which is extremely important for industries\n        such as Defense, Aerospace, and Education.\n      operationId: stock-usa-spending\n      parameters:\n      - description: Symbol.\n        in: query\n        name: symbol\n        required: true\n        schema:\n          type: string\n      - description: From date \u003ccode\u003eYYYY-MM-DD\u003c/code\u003e. Filter for \u003ccode\u003eactionDate\u003c/code\u003e\n        in: query\n        name: from\n        required: true\n        schema:\n          format: date\n          type: string\n      - description: To date \u003ccode\u003eYYYY-MM-DD\u003c/code\u003e. Filter for \u003ccode\u003eactionDate\u003c/code\u003e\n        in: query\n        name: to\n        required: true\n        schema:\n          format: date\n          type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/UsaSpendingResult'\n          description: successful operation\n      security:\n      - api_key: []\n      summary: USA Spending\n      tags:\n      - Default\n  /bond/profile:\n    get:\n      description: Get general information of a bond. You can query by FIGI, ISIN\n        or CUSIP\n      operationId: bond-profile\n      parameters:\n      - description: ISIN\n        in: query\n        name: isin\n        schema:\n          type: string\n      - description: CUSIP\n        in: query\n        name: cusip\n        schema:\n          type: string\n      - description: FIGI\n        in: query\n        name: figi\n        schema:\n          type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BondProfile'\n          description: successful operation\n      security:\n      - api_key: []\n      summary: Bond Profile\n      tags:\n      - Default\n  /bond/price:\n    get:\n      description: |-\n        \u003cp\u003eGet bond's price data. The following datasets are supported:\u003c/p\u003e\u003ctable class=\"table table-hover\"\u003e\n          \u003cthead\u003e\n            \u003ctr\u003e\n              \u003cth\u003eExchange\u003c/th\u003e\n              \u003cth\u003eSegment\u003c/th\u003e\n              \u003cth\u003eDelay\u003c/th\u003e\n            \u003c/tr\u003e\n          \u003c/thead\u003e\n          \u003ctbody\u003e\n          \u003ctr\u003e\n              \u003ctd class=\"text-blue\"\u003eUS Government Bonds\u003c/th\u003e\n              \u003ctd\u003eGovernment Bonds\u003c/td\u003e\n              \u003ctd\u003eEnd-of-day\u003c/td\u003e\n            \u003c/tr\u003e\n            \u003ctr\u003e\n              \u003ctd class=\"text-blue\"\u003eFINRA Trace\u003c/th\u003e\n              \u003ctd\u003eBTDS: US Corporate Bonds\u003c/td\u003e\n              \u003ctd\u003eDelayed 4h\u003c/td\u003e\n            \u003c/tr\u003e\n            \u003ctr\u003e\n              \u003ctd class=\"text-blue\"\u003eFINRA Trace\u003c/th\u003e\n              \u003ctd\u003e144A Bonds\u003c/td\u003e\n              \u003ctd\u003eDelayed 4h\u003c/td\u003e\n            \u003c/tr\u003e\n          \u003c/tbody\u003e\n        \u003c/table\u003e\n      operationId: bond-price\n      parameters:\n      - description: ISIN.\n        in: query\n        name: isin\n        required: true\n        schema:\n          type: string\n      - description: UNIX timestamp. Interval initial value.\n        in: query\n        name: from\n        required: true\n        schema:\n          format: int64\n          type: integer\n      - description: UNIX timestamp. Interval end value.\n        in: query\n        name: to\n        required: true\n        schema:\n          format: int64\n          type: integer\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BondCandles'\n          description: successful operation\n      security:\n      - api_key: []\n      summary: Bond price data\n      tags:\n      - Default\n  /bond/tick:\n    get:\n      description: |-\n        \u003cp\u003eGet trade-level data for bonds. The following datasets are supported:\u003c/p\u003e\u003ctable class=\"table table-hover\"\u003e\n          \u003cthead\u003e\n            \u003ctr\u003e\n              \u003cth\u003eExchange\u003c/th\u003e\n              \u003cth\u003eSegment\u003c/th\u003e\n              \u003cth\u003eDelay\u003c/th\u003e\n            \u003c/tr\u003e\n          \u003c/thead\u003e\n          \u003ctbody\u003e\n            \u003ctr\u003e\n              \u003ctd class=\"text-blue\"\u003eFINRA Trace\u003c/th\u003e\n              \u003ctd\u003eBTDS: US Corporate Bonds\u003c/td\u003e\n              \u003ctd\u003eDelayed 4h\u003c/td\u003e\n            \u003c/tr\u003e\n            \u003ctr\u003e\n              \u003ctd class=\"text-blue\"\u003eFINRA Trace\u003c/th\u003e\n              \u003ctd\u003e144A Bonds\u003c/td\u003e\n              \u003ctd\u003eDelayed 4h\u003c/td\u003e\n            \u003c/tr\u003e\n          \u003c/tbody\u003e\n        \u003c/table\u003e\n      operationId: bond-tick\n      parameters:\n      - description: ISIN.\n        in: query\n        name: isin\n        required: true\n        schema:\n          type: string\n      - description: 'Date: 2020-04-02.'\n        in: query\n        name: date\n        required: true\n        schema:\n          format: date\n          type: string\n      - description: 'Limit number of ticks returned. Maximum value: \u003ccode\u003e25000\u003c/code\u003e'\n        in: query\n        name: limit\n        required: true\n        schema:\n          format: int64\n          type: integer\n      - description: Number of ticks to skip. Use this parameter to loop through the\n          entire data.\n        in: query\n        name: skip\n        required: true\n        schema:\n          format: int64\n          type: integer\n      - description: 'Currently support the following values: \u003ccode\u003etrace\u003c/code\u003e.'\n        in: query\n        name: exchange\n        required: true\n        schema:\n          type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BondTickData'\n          description: successful operation\n      security:\n      - api_key: []\n      summary: Bond Tick Data\n      tags:\n      - Default\n  /country:\n    get:\n      description: List all countries and metadata.\n      operationId: country\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: '#/components/schemas/CountryMetadata'\n                type: array\n          description: successful operation\n      security:\n      - api_key: []\n      summary: Country Metadata\n      tags:\n      - Default\n  /calendar/economic:\n    get:\n      description: \u003cp\u003eGet recent and upcoming economic releases.\u003c/p\u003e\u003cp\u003eHistorical\n        events and surprises are available for Enterprise clients.\u003c/p\u003e\n      operationId: economic-calendar\n      parameters:\n      - description: From date \u003ccode\u003eYYYY-MM-DD\u003c/code\u003e.\n        in: query\n        name: from\n        schema:\n          format: date\n          type: string\n      - description: To date \u003ccode\u003eYYYY-MM-DD\u003c/code\u003e.\n        in: query\n        name: to\n        schema:\n          format: date\n          type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/EconomicCalendar'\n          description: successful operation\n      security:\n      - api_key: []\n      summary: Economic Calendar\n      tags:\n      - Default\n  /economic/code:\n    get:\n      description: List codes of supported economic data.\n      operationId: economic-code\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: '#/components/schemas/EconomicCode'\n                type: array\n          description: successful operation\n      security:\n      - api_key: []\n      summary: Economic Code\n      tags:\n      - Default\n  /economic:\n    get:\n      description: Get economic data.\n      operationId: economic-data\n      parameters:\n      - description: Economic code.\n        in: query\n        name: code\n        required: true\n        schema:\n          type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/EconomicData'\n          description: successful operation\n      security:\n      - api_key: []\n      summary: Economic Data\n      tags:\n      - Default\ncomponents:\n  schemas:\n    StockSymbol:\n      example:\n        displaySymbol: displaySymbol\n        symbol: symbol\n        mic: mic\n        description: description\n        figi: figi\n        shareClassFIGI: shareClassFIGI\n        currency: currency\n        type: type\n        isin: isin\n        symbol2: symbol2\n      properties:\n        description:\n          description: Symbol description\n          type: string\n        displaySymbol:\n          description: Display symbol name.\n          type: string\n        symbol:\n          description: Unique symbol used to identify this symbol used in \u003ccode\u003e/stock/candle\u003c/code\u003e\n            endpoint.\n          type: string\n        type:\n          description: Security type.\n          type: string\n        mic:\n          description: Primary exchange's MIC.\n          type: string\n        figi:\n          description: FIGI identifier.\n          type: string\n        shareClassFIGI:\n          description: Global Share Class FIGI.\n          type: string\n        currency:\n          description: Price's currency. This might be different from the reporting\n            currency of fundamental data.\n          type: string\n        symbol2:\n          description: Alternative ticker for exchanges with multiple tickers for\n            1 stock such as BSE.\n          type: string\n        isin:\n          description: ISIN. This field is only available for EU stocks and selected\n            Asian markets. Entitlement from Finnhub is required to access this field.\n          type: string\n      type: object\n    SymbolLookup:\n      example:\n        result:\n        - displaySymbol: displaySymbol\n          symbol: symbol\n          description: description\n          type: type\n        - displaySymbol: displaySymbol\n          symbol: symbol\n          description: description\n          type: type\n        count: 0\n      properties:\n        result:\n          description: Array of search results.\n          items:\n            $ref: '#/components/schemas/SymbolLookupInfo'\n          type: array\n        count:\n          description: Number of results.\n          format: int64\n          type: integer\n      type: object\n    SymbolLookupInfo:\n      example:\n        displaySymbol: displaySymbol\n        symbol: symbol\n        description: description\n        type: type\n      properties:\n        description:\n          description: Symbol description\n          type: string\n        displaySymbol:\n          description: Display symbol name.\n          type: string\n        symbol:\n          description: Unique symbol used to identify this symbol used in \u003ccode\u003e/stock/candle\u003c/code\u003e\n            endpoint.\n          type: string\n        type:\n          description: Security type.\n          type: string\n      type: object\n    CompanyProfile:\n      example:\n        country: country\n        cusip: cusip\n        city: city\n        naicsSector: naicsSector\n        description: description\n        employeeTotal: 1.4658129\n        gsector: gsector\n        weburl: weburl\n        logo: logo\n        currency: currency\n        state: state\n        ggroup: ggroup\n        ticker: ticker\n        address: address\n        marketCapitalization: 0.8008282\n        gind: gind\n        ipo: 2000-01-23\n        sedol: sedol\n        finnhubIndustry: finnhubIndustry\n        naicsNationalIndustry: naicsNationalIndustry\n        naicsSubsector: naicsSubsector\n        phone: phone\n        gsubind: gsubind\n        name: name\n        exchange: exchange\n        naics: naics\n        isin: isin\n        shareOutstanding: 6.0274563\n      properties:\n        address:\n          description: Address of company's headquarter.\n          type: string\n        city:\n          description: City of company's headquarter.\n          type: string\n        country:\n          description: Country of company's headquarter.\n          type: string\n        currency:\n          description: Currency used in company filings.\n          type: string\n        cusip:\n          description: CUSIP number.\n          type: string\n        sedol:\n          description: Sedol number.\n          type: string\n        description:\n          description: Company business summary.\n          type: string\n        exchange:\n          description: Listed exchange.\n          type: string\n        ggroup:\n          description: Industry group.\n          type: string\n        gind:\n          description: Industry.\n          type: string\n        gsector:\n          description: Sector.\n          type: string\n        gsubind:\n          description: Sub-industry.\n          type: string\n        isin:\n          description: ISIN number.\n          type: string\n        naicsNationalIndustry:\n          description: NAICS national industry.\n          type: string\n        naics:\n          description: NAICS industry.\n          type: string\n        naicsSector:\n          description: NAICS sector.\n          type: string\n        naicsSubsector:\n          description: NAICS subsector.\n          type: string\n        name:\n          description: Company name.\n          type: string\n        phone:\n          description: Company phone number.\n          type: string\n        state:\n          description: State of company's headquarter.\n          type: string\n        ticker:\n          description: Company symbol/ticker as used on the listed exchange.\n          type: string\n        weburl:\n          description: Company website.\n          type: string\n        ipo:\n          description: IPO date.\n          format: date\n          type: string\n        marketCapitalization:\n          description: Market Capitalization.\n          format: float\n          type: number\n        shareOutstanding:\n          description: Number of oustanding shares.\n          format: float\n          type: number\n        employeeTotal:\n          description: Number of employee.\n          format: float\n          type: number\n        logo:\n          description: Logo image.\n          type: string\n        finnhubIndustry:\n          description: Finnhub industry classification.\n          type: string\n      type: object\n    CompanyProfile2:\n      example:\n        finnhubIndustry: finnhubIndustry\n        country: country\n        ticker: ticker\n        marketCapitalization: 0.8008282\n        phone: phone\n        weburl: weburl\n        name: name\n        ipo: 2000-01-23\n        logo: logo\n        currency: currency\n        exchange: exchange\n        shareOutstanding: 6.0274563\n      properties:\n        country:\n          description: Country of company's headquarter.\n          type: string\n        currency:\n          description: Currency used in company filings.\n          type: string\n        exchange:\n          description: Listed exchange.\n          type: string\n        name:\n          description: Company name.\n          type: string\n        ticker:\n          description: Company symbol/ticker as used on the listed exchange.\n          type: string\n        ipo:\n          description: IPO date.\n          format: date\n          type: string\n        marketCapitalization:\n          description: Market Capitalization.\n          format: float\n          type: number\n        shareOutstanding:\n          description: Number of oustanding shares.\n          format: float\n          type: number\n        logo:\n          description: Logo image.\n          type: string\n        phone:\n          description: Company phone number.\n          type: string\n        weburl:\n          description: Company website.\n          type: string\n        finnhubIndustry:\n          description: Finnhub industry classification.\n          type: string\n      type: object\n    Company:\n      example:\n        sex: sex\n        name: name\n        compensation: 6\n        currency: currency\n        title: title\n        age: 0\n        since: since\n      properties:\n        name:\n          description: Executive name\n          type: string\n        age:\n          description: Age\n          format: int64\n          type: integer\n        title:\n          description: Title\n          type: string\n        since:\n          description: Year first appointed as executive/director of the company\n          type: string\n        sex:\n          description: Sex\n          type: string\n        compensation:\n          description: Total compensation\n          format: int64\n          type: integer\n        currency:\n          description: Compensation currency\n          type: string\n      type: object\n    CompanyExecutive:\n      example:\n        symbol: symbol\n        executive:\n        - sex: sex\n          name: name\n          compensation: 6\n          currency: currency\n          title: title\n          age: 0\n          since: since\n        - sex: sex\n          name: name\n          compensation: 6\n          currency: currency\n          title: title\n          age: 0\n          since: since\n      properties:\n        symbol:\n          description: Company symbol.\n          type: string\n        executive:\n          description: Array of company's executives and members of the Board.\n          items:\n            $ref: '#/components/schemas/Company'\n          type: array\n      type: object\n    MarketNews:\n      example:\n        summary: summary\n        image: image\n        datetime: 0\n        related: related\n        id: 6\n        source: source\n        category: category\n        headline: headline\n        url: url\n      properties:\n        category:\n          description: News category.\n          type: string\n        datetime:\n          description: Published time in UNIX timestamp.\n          format: int64\n          type: integer\n        headline:\n          description: News headline.\n          type: string\n        id:\n          description: News ID. This value can be used for \u003ccode\u003eminId\u003c/code\u003e params\n            to get the latest news only.\n          format: int64\n          type: integer\n        image:\n          description: Thumbnail image URL.\n          type: string\n        related:\n          description: Related stocks and companies mentioned in the article.\n          type: string\n        source:\n          description: News source.\n          type: string\n        summary:\n          description: News summary.\n          type: string\n        url:\n          description: URL of the original article.\n          type: string\n      type: object\n    CompanyNews:\n      example:\n        summary: summary\n        image: image\n        datetime: 0\n        related: related\n        id: 6\n        source: source\n        category: category\n        headline: headline\n        url: url\n      properties:\n        category:\n          description: News category.\n          type: string\n        datetime:\n          description: Published time in UNIX timestamp.\n          format: int64\n          type: integer\n        headline:\n          description: News headline.\n          type: string\n        id:\n          description: News ID. This value can be used for \u003ccode\u003eminId\u003c/code\u003e params\n            to get the latest news only.\n          format: int64\n          type: integer\n        image:\n          description: Thumbnail image URL.\n          type: string\n        related:\n          description: Related stocks and companies mentioned in the article.\n          type: string\n        source:\n          description: News source.\n          type: string\n        summary:\n          description: News summary.\n          type: string\n        url:\n          description: URL of the original article.\n          type: string\n      type: object\n    Development:\n      example:\n        symbol: symbol\n        datetime: datetime\n        description: description\n        headline: headline\n        url: url\n      properties:\n        symbol:\n          description: Company symbol.\n          type: string\n        datetime:\n          description: Published time in \u003ccode\u003eYYYY-MM-DD HH:MM:SS\u003c/code\u003e format.\n          type: string\n        headline:\n          description: Development headline.\n          type: string\n        description:\n          description: Development description.\n          type: string\n        url:\n          description: URL.\n          type: string\n      type: object\n    PressRelease:\n      example:\n        majorDevelopment:\n        - symbol: symbol\n          datetime: datetime\n          description: description\n          headline: headline\n          url: url\n        - symbol: symbol\n          datetime: datetime\n          description: description\n          headline: headline\n          url: url\n        symbol: symbol\n      properties:\n        symbol:\n          description: Company symbol.\n          type: string\n        majorDevelopment:\n          description: Array of major developments.\n          items:\n            $ref: '#/components/schemas/Development'\n          type: array\n      type: object\n    CompanyNewsStatistics:\n      example:\n        weeklyAverage: 1.4658129\n        articlesInLastWeek: 0\n        buzz: 6.0274563\n      properties:\n        articlesInLastWeek:\n          description: \"\"\n          format: int64\n          type: integer\n        buzz:\n          description: \"\"\n          format: float\n          type: number\n        weeklyAverage:\n          description: \"\"\n          format: float\n          type: number\n      type: object\n    Sentiment:\n      example:\n        bearishPercent: 7.0614014\n        bullishPercent: 9.301444\n      properties:\n        bearishPercent:\n          description: \"\"\n          format: float\n          type: number\n        bullishPercent:\n          description: \"\"\n          format: float\n          type: number\n      type: object\n    NewsSentiment:\n      example:\n        sentiment:\n          bearishPercent: 7.0614014\n          bullishPercent: 9.301444\n        symbol: symbol\n        sectorAverageBullishPercent: 5.637377\n        sectorAverageNewsScore: 2.302136\n        buzz:\n          weeklyAverage: 1.4658129\n          articlesInLastWeek: 0\n          buzz: 6.0274563\n        companyNewsScore: 5.962134\n      properties:\n        buzz:\n          $ref: '#/components/schemas/CompanyNewsStatistics'\n        companyNewsScore:\n          description: News score.\n          format: float\n          type: number\n        sectorAverageBullishPercent:\n          description: Sector average bullish percent.\n          format: float\n          type: number\n        sectorAverageNewsScore:\n          description: Sectore average score.\n          format: float\n          type: number\n        sentiment:\n          $ref: '#/components/schemas/Sentiment'\n        symbol:\n          description: Requested symbol.\n          type: string\n      type: object\n    MetricSeriesMap:\n      type: object\n    MetricMap:\n      type: object\n    PriceMetricMap:\n      type: object\n    BasicFinancials:\n      example:\n        symbol: symbol\n        metricType: metricType\n        metric: '{}'\n        series: '{}'\n      properties:\n        symbol:\n          description: Symbol of the company.\n          type: string\n        metricType:\n          description: Metric type.\n          type: string\n        series:\n          type: object\n        metric:\n          type: object\n      type: object\n    PriceMetrics:\n      example:\n        symbol: symbol\n        data: '{}'\n      properties:\n        symbol:\n          description: Symbol of the company.\n          type: string\n        data:\n          type: object\n      type: object\n    IsinChangeInfo:\n      example:\n        oldIsin: oldIsin\n        atDate: atDate\n        newIsin: newIsin\n      properties:\n        atDate:\n          description: Event's date.\n          type: string\n        oldIsin:\n          description: Old ISIN.\n          type: string\n        newIsin:\n          description: New ISIN.\n          type: string\n      type: object\n    IsinChange:\n      example:\n        fromDate: fromDate\n        data:\n        - oldIsin: oldIsin\n          atDate: atDate\n          newIsin: newIsin\n        - oldIsin: oldIsin\n          atDate: atDate\n          newIsin: newIsin\n        toDate: toDate\n      properties:\n        fromDate:\n          description: From date.\n          type: string\n        toDate:\n          description: To date.\n          type: string\n        data:\n          description: Array of ISIN change events.\n          items:\n            $ref: '#/components/schemas/IsinChangeInfo'\n          type: array\n      type: object\n    SymbolChangeInfo:\n      example:\n        oldSymbol: oldSymbol\n        atDate: atDate\n        newSymbol: newSymbol\n      properties:\n        atDate:\n          description: Event's date.\n          type: string\n        oldSymbol:\n          description: Old symbol.\n          type: string\n        newSymbol:\n          description: New symbol.\n          type: string\n      type: object\n    SymbolChange:\n      example:\n        fromDate: fromDate\n        data:\n        - oldSymbol: oldSymbol\n          atDate: atDate\n          newSymbol: newSymbol\n        - oldSymbol: oldSymbol\n          atDate: atDate\n          newSymbol: newSymbol\n        toDate: toDate\n      properties:\n        fromDate:\n          description: From date.\n          type: string\n        toDate:\n          description: To date.\n          type: string\n        data:\n          description: Array of symbol change events.\n          items:\n            $ref: '#/components/schemas/SymbolChangeInfo'\n          type: array\n      type: object\n    InstitutionalPortfolioInfo:\n      example:\n        noVoting: 6.0274563\n        sharedVoting: 5.637377\n        symbol: symbol\n        cusip: cusip\n        change: 0.8008282\n        percentage: 1.4658129\n        name: name\n        share: 5.962134\n        soleVoting: 2.302136\n        value: 7.0614014\n        putCall: putCall\n      properties:\n        symbol:\n          description: Symbol.\n          type: string\n        cusip:\n          description: CUSIP.\n          type: string\n        name:\n          description: Position's name.\n          type: string\n        putCall:\n          description: \u003ccode\u003eput\u003c/code\u003e or \u003ccode\u003ecall\u003c/code\u003e for options.\n          type: string\n        change:\n          description: Number of shares change.\n          format: float\n          type: number\n        noVoting:\n          description: Number of shares with no voting rights.\n          format: float\n          type: number\n        percentage:\n          description: Percentage of portfolio.\n          format: float\n          type: number\n        share:\n          description: Number of shares.\n          format: float\n          type: number\n        sharedVoting:\n          description: Number of shares with shared voting rights.\n          format: float\n          type: number\n        soleVoting:\n          description: Number of shares with sole voting rights.\n          format: float\n          type: number\n        value:\n          description: Position value.\n          format: float\n          type: number\n      type: object\n    InstitutionalPortfolioGroup:\n      example:\n        reportDate: reportDate\n        filingDate: filingDate\n        portfolio:\n        - noVoting: 6.0274563\n          sharedVoting: 5.637377\n          symbol: symbol\n          cusip: cusip\n          change: 0.8008282\n          percentage: 1.4658129\n          name: name\n          share: 5.962134\n          soleVoting: 2.302136\n          value: 7.0614014\n          putCall: putCall\n        - noVoting: 6.0274563\n          sharedVoting: 5.637377\n          symbol: symbol\n          cusip: cusip\n          change: 0.8008282\n          percentage: 1.4658129\n          name: name\n          share: 5.962134\n          soleVoting: 2.302136\n          value: 7.0614014\n          putCall: putCall\n      properties:\n        reportDate:\n          description: Report date.\n          type: string\n        filingDate:\n          description: Filing date.\n          type: string\n        portfolio:\n          description: Array of positions.\n          items:\n            $ref: '#/components/schemas/InstitutionalPortfolioInfo'\n          type: array\n      type: object\n    InstitutionalPortfolio:\n      example:\n        cik: cik\n        data:\n        - reportDate: reportDate\n          filingDate: filingDate\n          portfolio:\n          - noVoting: 6.0274563\n            sharedVoting: 5.637377\n            symbol: symbol\n            cusip: cusip\n            change: 0.8008282\n            percentage: 1.4658129\n            name: name\n            share: 5.962134\n            soleVoting: 2.302136\n            value: 7.0614014\n            putCall: putCall\n          - noVoting: 6.0274563\n            sharedVoting: 5.637377\n            symbol: symbol\n            cusip: cusip\n            change: 0.8008282\n            percentage: 1.4658129\n            name: name\n            share: 5.962134\n            soleVoting: 2.302136\n            value: 7.0614014\n            putCall: putCall\n        - reportDate: reportDate\n          filingDate: filingDate\n          portfolio:\n          - noVoting: 6.0274563\n            sharedVoting: 5.637377\n            symbol: symbol\n            cusip: cusip\n            change: 0.8008282\n            percentage: 1.4658129\n            name: name\n            share: 5.962134\n            soleVoting: 2.302136\n            value: 7.0614014\n            putCall: putCall\n          - noVoting: 6.0274563\n            sharedVoting: 5.637377\n            symbol: symbol\n            cusip: cusip\n            change: 0.8008282\n            percentage: 1.4658129\n            name: name\n            share: 5.962134\n            soleVoting: 2.302136\n            value: 7.0614014\n            putCall: putCall\n        name: name\n      properties:\n        name:\n          description: Investor's name.\n          type: string\n        cik:\n          description: CIK.\n          type: string\n        data:\n          description: Array of positions.\n          items:\n            $ref: '#/components/schemas/InstitutionalPortfolioGroup'\n          type: array\n      type: object\n    InstitutionalOwnershipInfo:\n      example:\n        noVoting: 6.0274563\n        sharedVoting: 5.637377\n        cik: cik\n        change: 0.8008282\n        percentage: 1.4658129\n        name: name\n        share: 5.962134\n        soleVoting: 2.302136\n        value: 7.0614014\n        putCall: putCall\n      properties:\n        cik:\n          description: Investor's company CIK.\n          type: string\n        name:\n          description: Firm's name.\n          type: string\n        putCall:\n          description: \u003ccode\u003eput\u003c/code\u003e or \u003ccode\u003ecall\u003c/code\u003e for options.\n          type: string\n        change:\n          description: Number of shares change.\n          format: float\n          type: number\n        noVoting:\n          description: Number of shares with no voting rights.\n          format: float\n          type: number\n        percentage:\n          description: Percentage of portfolio.\n          format: float\n          type: number\n        share:\n          description: News score.\n          format: float\n          type: number\n        sharedVoting:\n          description: Number of shares with shared voting rights.\n          format: float\n          type: number\n        soleVoting:\n          description: Number of shares with sole voting rights.\n          format: float\n          type: number\n        value:\n          description: Position value.\n          format: float\n          type: number\n      type: object\n    InstitutionalOwnershipGroup:\n      example:\n        reportDate: reportDate\n        ownership:\n        - noVoting: 6.0274563\n          sharedVoting: 5.637377\n          cik: cik\n          change: 0.8008282\n          percentage: 1.4658129\n          name: name\n          share: 5.962134\n          soleVoting: 2.302136\n          value: 7.0614014\n          putCall: putCall\n        - noVoting: 6.0274563\n          sharedVoting: 5.637377\n          cik: cik\n          change: 0.8008282\n          percentage: 1.4658129\n          name: name\n          share: 5.962134\n          soleVoting: 2.302136\n          value: 7.0614014\n          putCall: putCall\n      properties:\n        reportDate:\n          description: Report date.\n          type: string\n        ownership:\n          description: Array of institutional investors.\n          items:\n            $ref: '#/components/schemas/InstitutionalOwnershipInfo'\n          type: array\n      type: object\n    InstitutionalOwnership:\n      example:\n        symbol: symbol\n        cusip: cusip\n        data:\n        - reportDate: reportDate\n          ownership:\n          - noVoting: 6.0274563\n            sharedVoting: 5.637377\n            cik: cik\n            change: 0.8008282\n            percentage: 1.4658129\n            name: name\n            share: 5.962134\n            soleVoting: 2.302136\n            value: 7.0614014\n            putCall: putCall\n          - noVoting: 6.0274563\n            sharedVoting: 5.637377\n            cik: cik\n            change: 0.8008282\n            percentage: 1.4658129\n            name: name\n            share: 5.962134\n            soleVoting: 2.302136\n            value: 7.0614014\n            putCall: putCall\n        - reportDate: reportDate\n          ownership:\n          - noVoting: 6.0274563\n            sharedVoting: 5.637377\n            cik: cik\n            change: 0.8008282\n            percentage: 1.4658129\n            name: name\n            share: 5.962134\n            soleVoting: 2.302136\n            value: 7.0614014\n            putCall: putCall\n          - noVoting: 6.0274563\n            sharedVoting: 5.637377\n            cik: cik\n            change: 0.8008282\n            percentage: 1.4658129\n            name: name\n            share: 5.962134\n            soleVoting: 2.302136\n            value: 7.0614014\n            putCall: putCall\n      properties:\n        symbol:\n          description: Symbol.\n          type: string\n        cusip:\n          description: Cusip.\n          type: string\n        data:\n          description: Array of institutional investors.\n          items:\n            $ref: '#/components/schemas/InstitutionalOwnershipGroup'\n          type: array\n      type: object\n    InstitutionalProfileInfo:\n      example:\n        cik: cik\n        manager: manager\n        profile: profile\n        philosophy: philosophy\n        profileImg: profileImg\n        firmType: firmType\n      properties:\n        cik:\n          description: Investor's company CIK.\n          type: string\n        firmType:\n          description: Firm type.\n          type: string\n        manager:\n          description: Manager.\n          type: string\n        philosophy:\n          description: Investing philosophy.\n          type: string\n        profile:\n          description: Profile info.\n          type: string\n        profileImg:\n          description: Profile image.\n          type: string\n      type: object\n    InstitutionalProfile:\n      example:\n        cik: cik\n        data:\n        - cik: cik\n          manager: manager\n          profile: profile\n          philosophy: philosophy\n          profileImg: profileImg\n          firmType: firmType\n        - cik: cik\n          manager: manager\n          profile: profile\n          philosophy: philosophy\n          profileImg: profileImg\n          firmType: firmType\n      properties:\n        cik:\n          description: CIK.\n          type: string\n        data:\n          description: Array of investors.\n          items:\n            $ref: '#/components/schemas/InstitutionalProfileInfo'\n          type: array\n      type: object\n    OwnershipInfo:\n      example:\n        filingDate: 2000-01-23\n        change: 6\n        name: name\n        share: 0\n      properties:\n        name:\n          description: Investor's name.\n          type: string\n        share:\n          description: Number of shares held by the investor.\n          format: int64\n          type: integer\n        change:\n          description: Number of share changed (net buy or sell) from the last period.\n          format: int64\n          type: integer\n        filingDate:\n          description: Filing date.\n          format: date\n          type: string\n      type: object\n    Ownership:\n      example:\n        symbol: symbol\n        ownership:\n        - filingDate: 2000-01-23\n          change: 6\n          name: name\n          share: 0\n        - filingDate: 2000-01-23\n          change: 6\n          name: name\n          share: 0\n      properties:\n        symbol:\n          description: Symbol of the company.\n          type: string\n        ownership:\n          description: Array of investors with detailed information about their holdings.\n          items:\n            $ref: '#/components/schemas/OwnershipInfo'\n          type: array\n      type: object\n    FundOwnershipInfo:\n      example:\n        filingDate: 2000-01-23\n        portfolioPercent: 1.4658129\n        change: 6\n        name: name\n        share: 0\n      properties:\n        name:\n          description: Investor's name.\n          type: string\n        share:\n          description: Number of shares held by the investor.\n          format: int64\n          type: integer\n        change:\n          description: Number of share changed (net buy or sell) from the last period.\n          format: int64\n          type: integer\n        filingDate:\n          description: Filing date.\n          format: date\n          type: string\n        portfolioPercent:\n          description: Percent of the fund's portfolio comprised of the company's\n            share.\n          format: float\n          type: number\n      type: object\n    FundOwnership:\n      example:\n        symbol: symbol\n        ownership:\n        - filingDate: 2000-01-23\n          portfolioPercent: 1.4658129\n          change: 6\n          name: name\n          share: 0\n        - filingDate: 2000-01-23\n          portfolioPercent: 1.4658129\n          change: 6\n          name: name\n          share: 0\n      properties:\n        symbol:\n          description: Symbol of the company.\n          type: string\n        ownership:\n          description: Array of investors with detailed information about their holdings.\n          items:\n            $ref: '#/components/schemas/FundOwnershipInfo'\n          type: array\n      type: object\n    Transactions:\n      example:\n        symbol: symbol\n        filingDate: 2000-01-23\n        change: 6\n        name: name\n        transactionPrice: 1.4658129\n        share: 0\n        transactionCode: transactionCode\n        transactionDate: 2000-01-23\n      properties:\n        symbol:\n          description: Symbol.\n          type: string\n        name:\n          description: Insider's name.\n          type: string\n        share:\n          description: Number of shares held after the transaction.\n          format: int64\n          type: integer\n        change:\n          description: Number of share changed from the last period. A positive value\n            suggests a \u003ccode\u003eBUY\u003c/code\u003e transaction. A negative value suggests a \u003ccode\u003eSELL\u003c/code\u003e\n            transaction.\n          format: int64\n          type: integer\n        filingDate:\n          description: Filing date.\n          format: date\n          type: string\n        transactionDate:\n          description: Transaction date.\n          format: date\n          type: string\n        transactionPrice:\n          description: Average transaction price.\n          format: float\n          type: number\n        transactionCode:\n          description: Transaction code. A list of codes and their meanings can be\n            found \u003ca href=\"https://www.sec.gov/about/forms/form4data.pdf\" target=\"_blank\"\n            rel=\"noopener\"\u003ehere\u003c/a\u003e.\n          type: string\n      type: object\n    InsiderTransactions:\n      example:\n        symbol: symbol\n        data:\n        - symbol: symbol\n          filingDate: 2000-01-23\n          change: 6\n          name: name\n          transactionPrice: 1.4658129\n          share: 0\n          transactionCode: transactionCode\n          transactionDate: 2000-01-23\n        - symbol: symbol\n          filingDate: 2000-01-23\n          change: 6\n          name: name\n          transactionPrice: 1.4658129\n          share: 0\n          transactionCode: transactionCode\n          transactionDate: 2000-01-23\n      properties:\n        symbol:\n          description: Symbol of the company.\n          type: string\n        data:\n          description: Array of insider transactions.\n          items:\n            $ref: '#/components/schemas/Transactions'\n          type: array\n      type: object\n    InsiderSentimentsData:\n      example:\n        symbol: symbol\n        month: 6\n        year: 0\n        change: 1\n        mspr: 5.962134\n      properties:\n        symbol:\n          description: Symbol.\n          type: string\n        year:\n          description: Year.\n          format: int64\n          type: integer\n        month:\n          description: Month.\n          format: int64\n          type: integer\n        change:\n          description: Net buying/selling from all insiders' transactions.\n          format: int64\n          type: integer\n        mspr:\n          description: Monthly share purchase ratio.\n          format: float\n          type: number\n      type: object\n    InsiderSentiments:\n      example:\n        symbol: symbol\n        data:\n        - symbol: symbol\n          month: 6\n          year: 0\n          change: 1\n          mspr: 5.962134\n        - symbol: symbol\n          month: 6\n          year: 0\n          change: 1\n          mspr: 5.962134\n      properties:\n        symbol:\n          description: Symbol of the company.\n          type: string\n        data:\n          description: Array of sentiment data.\n          items:\n            $ref: '#/components/schemas/InsiderSentimentsData'\n          type: array\n      type: object\n    FinancialMap:\n      type: object\n    FinancialStatements:\n      example:\n        symbol: symbol\n        financials:\n        - null\n        - null\n      properties:\n        symbol:\n          description: Symbol of the company.\n          type: string\n        financials:\n          description: An array of map of key, value pairs containing the data for\n            each period.\n          items:\n            $ref: '#/components/schemas/FinancialMap'\n          type: array\n      type: object\n    ReportDataMap:\n      type: object\n    Report:\n      example:\n        symbol: symbol\n        cik: cik\n        form: form\n        accessNumber: accessNumber\n        year: 0\n        endDate: endDate\n        report: '{}'\n        filedDate: filedDate\n        acceptedDate: acceptedDate\n        startDate: startDate\n        quarter: 6\n      properties:\n        accessNumber:\n          description: Access number.\n          type: string\n        symbol:\n          description: Symbol.\n          type: string\n        cik:\n          description: CIK.\n          type: string\n        year:\n          description: Year.\n          format: int64\n          type: integer\n        quarter:\n          description: Quarter.\n          format: int64\n          type: integer\n        form:\n          description: Form type.\n          type: string\n        startDate:\n          description: Period start date \u003ccode\u003e%Y-%m-%d %H:%M:%S\u003c/code\u003e.\n          type: string\n        endDate:\n          description: Period end date \u003ccode\u003e%Y-%m-%d %H:%M:%S\u003c/code\u003e.\n          type: string\n        filedDate:\n          description: Filed date \u003ccode\u003e%Y-%m-%d %H:%M:%S\u003c/code\u003e.\n          type: string\n        acceptedDate:\n          description: Accepted date \u003ccode\u003e%Y-%m-%d %H:%M:%S\u003c/code\u003e.\n          type: string\n        report:\n          type: object\n      type: object\n    FinancialsAsReported:\n      example:\n        symbol: symbol\n        cik: cik\n        data:\n        - symbol: symbol\n          cik: cik\n          form: form\n          accessNumber: accessNumber\n          year: 0\n          endDate: endDate\n          report: '{}'\n          filedDate: filedDate\n          acceptedDate: acceptedDate\n          startDate: startDate\n          quarter: 6\n        - symbol: symbol\n          cik: cik\n          form: form\n          accessNumber: accessNumber\n          year: 0\n          endDate: endDate\n          report: '{}'\n          filedDate: filedDate\n          acceptedDate: acceptedDate\n          startDate: startDate\n          quarter: 6\n      properties:\n        symbol:\n          description: Symbol\n          type: string\n        cik:\n          description: CIK\n          type: string\n        data:\n          description: Array of filings.\n          items:\n            $ref: '#/components/schemas/Report'\n          type: array\n      type: object\n    BreakdownItemMap:\n      type: object\n    BreakdownItem:\n      example:\n        accessNumber: accessNumber\n        breakdown: '{}'\n      properties:\n        accessNumber:\n          description: Access number of the report from which the data is sourced.\n          type: string\n        breakdown:\n          type: object\n      type: object\n    RevenueBreakdown:\n      example:\n        symbol: symbol\n        cik: cik\n        data:\n        - accessNumber: accessNumber\n          breakdown: '{}'\n        - accessNumber: accessNumber\n          breakdown: '{}'\n      properties:\n        symbol:\n          description: Symbol\n          type: string\n        cik:\n          description: CIK\n          type: string\n        data:\n          description: Array of revenue breakdown over multiple periods.\n          items:\n            $ref: '#/components/schemas/BreakdownItem'\n          type: array\n      type: object\n    Filing:\n      example:\n        symbol: symbol\n        cik: cik\n        form: form\n        accessNumber: accessNumber\n        reportUrl: reportUrl\n        filedDate: filedDate\n        acceptedDate: acceptedDate\n        filingUrl: filingUrl\n      properties:\n        accessNumber:\n          description: Access number.\n          type: string\n        symbol:\n          description: Symbol.\n          type: string\n        cik:\n          description: CIK.\n          type: string\n        form:\n          description: Form type.\n          type: string\n        filedDate:\n          description: Filed date \u003ccode\u003e%Y-%m-%d %H:%M:%S\u003c/code\u003e.\n          type: string\n        acceptedDate:\n          description: Accepted date \u003ccode\u003e%Y-%m-%d %H:%M:%S\u003c/code\u003e.\n          type: string\n        reportUrl:\n          description: Report's URL.\n          type: string\n        filingUrl:\n          description: Filing's URL.\n          type: string\n      type: object\n    InternationalFiling:\n      example:\n        symbol: symbol\n        country: country\n        companyName: companyName\n        description: description\n        language: language\n        category: category\n        title: title\n        filedDate: filedDate\n        url: url\n      properties:\n        symbol:\n          description: Symbol.\n          type: string\n        companyName:\n          description: Company name.\n          type: string\n        filedDate:\n          description: Filed date \u003ccode\u003e%Y-%m-%d %H:%M:%S\u003c/code\u003e.\n          type: string\n        category:\n          description: Category.\n          type: string\n        title:\n          description: Document's title.\n          type: string\n        description:\n          description: Document's description.\n          type: string\n        url:\n          description: Url.\n          type: string\n        language:\n          description: Language.\n          type: string\n        country:\n          description: Country.\n          type: string\n      type: object\n    FilingSentiment:\n      example:\n        modal-strong: 9.301444\n        negative: 0.8008282\n        constraining: 2.302136\n        modal-weak: 7.0614014\n        modal-moderate: 3.6160767\n        positive: 6.0274563\n        uncertainty: 5.637377\n        polarity: 1.4658129\n        litigious: 5.962134\n      properties:\n        negative:\n          description: '% of negative words in the filing.'\n          format: float\n          type: number\n        positive:\n          description: '% of positive words in the filing.'\n          format: float\n          type: number\n        polarity:\n          description: '% of polarity words in the filing.'\n          format: float\n          type: number\n        litigious:\n          description: '% of litigious words in the filing.'\n          format: float\n          type: number\n        uncertainty:\n          description: '% of uncertainty words in the filing.'\n          format: float\n          type: number\n        constraining:\n          description: '% of constraining words in the filing.'\n          format: float\n          type: number\n        modal-weak:\n          description: '% of modal-weak words in the filing.'\n          format: float\n          type: number\n        modal-strong:\n          description: '% of modal-strong words in the filing.'\n          format: float\n          type: number\n        modal-moderate:\n          description: '% of modal-moderate words in the filing.'\n          format: float\n          type: number\n      type: object\n    SECSentimentAnalysis:\n      example:\n        symbol: symbol\n        sentiment:\n          modal-strong: 9.301444\n          negative: 0.8008282\n          constraining: 2.302136\n          modal-weak: 7.0614014\n          modal-moderate: 3.6160767\n          positive: 6.0274563\n          uncertainty: 5.637377\n          polarity: 1.4658129\n          litigious: 5.962134\n        cik: cik\n        accessNumber: accessNumber\n      properties:\n        accessNumber:\n          description: Access number.\n          type: string\n        symbol:\n          description: Symbol.\n          type: string\n        cik:\n          description: CIK.\n          type: string\n        sentiment:\n          $ref: '#/components/schemas/FilingSentiment'\n      type: object\n    SimilarityIndexInfo:\n      example:\n        item2: 1.4658129\n        item7a: 5.637377\n        item1: 0.8008282\n        cik: cik\n        form: form\n        accessNumber: accessNumber\n        item7: 5.962134\n        reportUrl: reportUrl\n        item1a: 6.0274563\n        filedDate: filedDate\n        acceptedDate: acceptedDate\n        filingUrl: filingUrl\n      properties:\n        cik:\n          description: CIK.\n          type: string\n        item1:\n          description: Cosine similarity of Item 1 (Business). This number is only\n            available for Annual reports.\n          format: float\n          type: number\n        item1a:\n          description: Cosine similarity of Item 1A (Risk Factors). This number is\n            available for both Annual and Quarterly reports.\n          format: float\n          type: number\n        item2:\n          description: Cosine similarity of Item 2 (Management’s Discussion and Analysis\n            of Financial Condition and Results of Operations). This number is only\n            available for Quarterly reports.\n          format: float\n          type: number\n        item7:\n          description: Cosine similarity of Item 7 (Management’s Discussion and Analysis\n            of Financial Condition and Results of Operations). This number is only\n            available for Annual reports.\n          format: float\n          type: number\n        item7a:\n          description: Cosine similarity of Item 7A (Quantitative and Qualitative\n            Disclosures About Market Risk). This number is only available for Annual\n            reports.\n          format: float\n          type: number\n        accessNumber:\n          description: Access number.\n          type: string\n        form:\n          description: Form type.\n          type: string\n        filedDate:\n          description: Filed date \u003ccode\u003e%Y-%m-%d %H:%M:%S\u003c/code\u003e.\n          type: string\n        acceptedDate:\n          description: Accepted date \u003ccode\u003e%Y-%m-%d %H:%M:%S\u003c/code\u003e.\n          type: string\n        reportUrl:\n          description: Report's URL.\n          type: string\n        filingUrl:\n          description: Filing's URL.\n          type: string\n      type: object\n    SimilarityIndex:\n      example:\n        symbol: symbol\n        cik: cik\n        similarity:\n        - item2: 1.4658129\n          item7a: 5.637377\n          item1: 0.8008282\n          cik: cik\n          form: form\n          accessNumber: accessNumber\n          item7: 5.962134\n          reportUrl: reportUrl\n          item1a: 6.0274563\n          filedDate: filedDate\n          acceptedDate: acceptedDate\n          filingUrl: filingUrl\n        - item2: 1.4658129\n          item7a: 5.637377\n          item1: 0.8008282\n          cik: cik\n          form: form\n          accessNumber: accessNumber\n          item7: 5.962134\n          reportUrl: reportUrl\n          item1a: 6.0274563\n          filedDate: filedDate\n          acceptedDate: acceptedDate\n          filingUrl: filingUrl\n      properties:\n        symbol:\n          description: Symbol.\n          type: string\n        cik:\n          description: CIK.\n          type: string\n        similarity:\n          description: Array of filings with its cosine similarity compared to the\n            same report of the previous year.\n          items:\n            $ref: '#/components/schemas/SimilarityIndexInfo'\n          type: array\n      type: object\n    IPOEvent:\n      example:\n        date: 2000-01-23\n        symbol: symbol\n        price: price\n        numberOfShares: 0.8008282\n        totalSharesValue: 6.0274563\n        name: name\n        exchange: exchange\n        status: status\n      properties:\n        symbol:\n          description: Symbol.\n          type: string\n        date:\n          description: IPO date.\n          format: date\n          type: string\n        exchange:\n          description: Exchange.\n          type: string\n        name:\n          description: Company's name.\n          type: string\n        status:\n          description: 'IPO status. Can take 1 of the following values: \u003ccode\u003eexpected\u003c/code\u003e,\u003ccode\u003epriced\u003c/code\u003e,\u003ccode\u003ewithdrawn\u003c/code\u003e,\u003ccode\u003efiled\u003c/code\u003e'\n          type: string\n        price:\n          description: Projected price or price range.\n          type: string\n        numberOfShares:\n          description: Number of shares offered during the IPO.\n          format: float\n          type: number\n        totalSharesValue:\n          description: Total shares value.\n          format: float\n          type: number\n      type: object\n    IPOCalendar:\n      example:\n        ipoCalendar:\n        - date: 2000-01-23\n          symbol: symbol\n          price: price\n          numberOfShares: 0.8008282\n          totalSharesValue: 6.0274563\n          name: name\n          exchange: exchange\n          status: status\n        - date: 2000-01-23\n          symbol: symbol\n          price: price\n          numberOfShares: 0.8008282\n          totalSharesValue: 6.0274563\n          name: name\n          exchange: exchange\n          status: status\n      properties:\n        ipoCalendar:\n          description: Array of IPO events.\n          items:\n            $ref: '#/components/schemas/IPOEvent'\n          type: array\n      type: object\n    Dividends:\n      example:\n        date: 2000-01-23\n        symbol: symbol\n        amount: 0.8008282\n        declarationDate: 2000-01-23\n        adjustedAmount: 6.0274563\n        recordDate: 2000-01-23\n        currency: currency\n        payDate: 2000-01-23\n      properties:\n        symbol:\n          description: Symbol.\n          type: string\n        date:\n          description: Ex-Dividend date.\n          format: date\n          type: string\n        amount:\n          description: Amount in local currency.\n          format: float\n          type: number\n        adjustedAmount:\n          description: Adjusted dividend.\n          format: float\n          type: number\n        payDate:\n          description: Pay date.\n          format: date\n          type: string\n        recordDate:\n          description: Record date.\n          format: date\n          type: string\n        declarationDate:\n          description: Declaration date.\n          format: date\n          type: string\n        currency:\n          description: Currency.\n          type: string\n      type: object\n    Dividends2Info:\n      example:\n        amount: 0.8008282\n        exDate: 2000-01-23\n      properties:\n        exDate:\n          description: Ex-Dividend date.\n          format: date\n          type: string\n        amount:\n          description: Amount in local currency.\n          format: float\n          type: number\n      type: object\n    RecommendationTrend:\n      example:\n        symbol: symbol\n        period: period\n        buy: 0\n        sell: 1\n        strongSell: 5\n        strongBuy: 5\n        hold: 6\n      properties:\n        symbol:\n          description: Company symbol.\n          type: string\n        buy:\n          description: Number of recommendations that fall into the Buy category\n          format: int64\n          type: integer\n        hold:\n          description: Number of recommendations that fall into the Hold category\n          format: int64\n          type: integer\n        period:\n          description: Updated period\n          type: string\n        sell:\n          description: Number of recommendations that fall into the Sell category\n          format: int64\n          type: integer\n        strongBuy:\n          description: Number of recommendations that fall into the Strong Buy category\n          format: int64\n          type: integer\n        strongSell:\n          description: Number of recommendations that fall into the Strong Sell category\n          format: int64\n          type: integer\n      type: object\n    PriceTarget:\n      example:\n        targetLow: 6.0274563\n        symbol: symbol\n        lastUpdated: lastUpdated\n        targetHigh: 0.8008282\n        targetMean: 1.4658129\n        targetMedian: 5.962134\n      properties:\n        symbol:\n          description: Company symbol.\n          type: string\n        targetHigh:\n          description: Highes analysts' target.\n          format: float\n          type: number\n        targetLow:\n          description: Lowest analysts' target.\n          format: float\n          type: number\n        targetMean:\n          description: Mean of all analysts' targets.\n          format: float\n          type: number\n        targetMedian:\n          description: Median of all analysts' targets.\n          format: float\n          type: number\n        lastUpdated:\n          description: Updated time of the data\n          type: string\n      type: object\n    UpgradeDowngrade:\n      example:\n        symbol: symbol\n        gradeTime: 0\n        fromGrade: fromGrade\n        toGrade: toGrade\n        action: action\n        company: company\n      properties:\n        symbol:\n          description: Company symbol.\n          type: string\n        gradeTime:\n          description: Upgrade/downgrade time in UNIX timestamp.\n          format: int64\n          type: integer\n        fromGrade:\n          description: From grade.\n          type: string\n        toGrade:\n          description: To grade.\n          type: string\n        company:\n          description: Company/analyst who did the upgrade/downgrade.\n          type: string\n        action:\n          description: 'Action can take any of the following values: \u003ccode\u003eup(upgrade),\n            down(downgrade), main(maintains), init(initiate), reit(reiterate)\u003c/code\u003e.'\n          type: string\n      type: object\n    RevenueEstimatesInfo:\n      example:\n        revenueLow: 1.4658129\n        period: 2000-01-23\n        numberAnalysts: 5\n        revenueHigh: 6.0274563\n        revenueAvg: 0.8008282\n      properties:\n        revenueAvg:\n          description: Average revenue estimates including Finnhub's proprietary estimates.\n          format: float\n          type: number\n        revenueHigh:\n          description: Highest estimate.\n          format: float\n          type: number\n        revenueLow:\n          description: Lowest estimate.\n          format: float\n          type: number\n        numberAnalysts:\n          description: Number of Analysts.\n          format: int64\n          type: integer\n        period:\n          description: Period.\n          format: date\n          type: string\n      type: object\n    RevenueEstimates:\n      example:\n        symbol: symbol\n        data:\n        - revenueLow: 1.4658129\n          period: 2000-01-23\n          numberAnalysts: 5\n          revenueHigh: 6.0274563\n          revenueAvg: 0.8008282\n        - revenueLow: 1.4658129\n          period: 2000-01-23\n          numberAnalysts: 5\n          revenueHigh: 6.0274563\n          revenueAvg: 0.8008282\n        freq: freq\n      properties:\n        data:\n          description: List of estimates\n          items:\n            $ref: '#/components/schemas/RevenueEstimatesInfo'\n          type: array\n        freq:\n          description: 'Frequency: annual or quarterly.'\n          type: string\n        symbol:\n          description: Company symbol.\n          type: string\n      type: object\n    EbitdaEstimatesInfo:\n      example:\n        period: 2000-01-23\n        numberAnalysts: 5\n        ebitdaAvg: 0.8008282\n        ebitdaLow: 1.4658129\n        ebitdaHigh: 6.0274563\n      properties:\n        ebitdaAvg:\n          description: Average EBITDA estimates including Finnhub's proprietary estimates.\n          format: float\n          type: number\n        ebitdaHigh:\n          description: Highest estimate.\n          format: float\n          type: number\n        ebitdaLow:\n          description: Lowest estimate.\n          format: float\n          type: number\n        numberAnalysts:\n          description: Number of Analysts.\n          format: int64\n          type: integer\n        period:\n          description: Period.\n          format: date\n          type: string\n      type: object\n    EbitdaEstimates:\n      example:\n        symbol: symbol\n        data:\n        - period: 2000-01-23\n          numberAnalysts: 5\n          ebitdaAvg: 0.8008282\n          ebitdaLow: 1.4658129\n          ebitdaHigh: 6.0274563\n        - period: 2000-01-23\n          numberAnalysts: 5\n          ebitdaAvg: 0.8008282\n          ebitdaLow: 1.4658129\n          ebitdaHigh: 6.0274563\n        freq: freq\n      properties:\n        data:\n          description: List of estimates\n          items:\n            $ref: '#/components/schemas/EbitdaEstimatesInfo'\n          type: array\n        freq:\n          description: 'Frequency: annual or quarterly.'\n          type: string\n        symbol:\n          description: Company symbol.\n          type: string\n      type: object\n    EbitEstimatesInfo:\n      example:\n        ebitHigh: 6.0274563\n        ebitLow: 1.4658129\n        period: 2000-01-23\n        numberAnalysts: 5\n        ebitAvg: 0.8008282\n      properties:\n        ebitAvg:\n          description: Average EBIT estimates including Finnhub's proprietary estimates.\n          format: float\n          type: number\n        ebitHigh:\n          description: Highest estimate.\n          format: float\n          type: number\n        ebitLow:\n          description: Lowest estimate.\n          format: float\n          type: number\n        numberAnalysts:\n          description: Number of Analysts.\n          format: int64\n          type: integer\n        period:\n          description: Period.\n          format: date\n          type: string\n      type: object\n    EbitEstimates:\n      example:\n        symbol: symbol\n        data:\n        - ebitHigh: 6.0274563\n          ebitLow: 1.4658129\n          period: 2000-01-23\n          numberAnalysts: 5\n          ebitAvg: 0.8008282\n        - ebitHigh: 6.0274563\n          ebitLow: 1.4658129\n          period: 2000-01-23\n          numberAnalysts: 5\n          ebitAvg: 0.8008282\n        freq: freq\n      properties:\n        data:\n          description: List of estimates\n          items:\n            $ref: '#/components/schemas/EbitEstimatesInfo'\n          type: array\n        freq:\n          description: 'Frequency: annual or quarterly.'\n          type: string\n        symbol:\n          description: Company symbol.\n          type: string\n      type: object\n    EarningsEstimatesInfo:\n      example:\n        epsHigh: 6.0274563\n        period: 2000-01-23\n        epsAvg: 0.8008282\n        epsLow: 1.4658129\n        numberAnalysts: 5\n      properties:\n        epsAvg:\n          description: Average EPS estimates including Finnhub's proprietary estimates.\n          format: float\n          type: number\n        epsHigh:\n          description: Highest estimate.\n          format: float\n          type: number\n        epsLow:\n          description: Lowest estimate.\n          format: float\n          type: number\n        numberAnalysts:\n          description: Number of Analysts.\n          format: int64\n          type: integer\n        period:\n          description: Period.\n          format: date\n          type: string\n      type: object\n    EarningsEstimates:\n      example:\n        symbol: symbol\n        data:\n        - epsHigh: 6.0274563\n          period: 2000-01-23\n          epsAvg: 0.8008282\n          epsLow: 1.4658129\n          numberAnalysts: 5\n        - epsHigh: 6.0274563\n          period: 2000-01-23\n          epsAvg: 0.8008282\n          epsLow: 1.4658129\n          numberAnalysts: 5\n        freq: freq\n      properties:\n        data:\n          description: List of estimates\n          items:\n            $ref: '#/components/schemas/EarningsEstimatesInfo'\n          type: array\n        freq:\n          description: 'Frequency: annual or quarterly.'\n          type: string\n        symbol:\n          description: Company symbol.\n          type: string\n      type: object\n    EarningResult:\n      example:\n        actual: 0.8008282\n        surprise: 1.4658129\n        symbol: symbol\n        period: 2000-01-23\n        surprisePercent: 5.962134\n        estimate: 6.0274563\n      properties:\n        actual:\n          description: Actual earning result.\n          format: float\n          type: number\n        estimate:\n          description: Estimated earning.\n          format: float\n          type: number\n        surprise:\n          description: Surprise - The difference between actual and estimate.\n          format: float\n          type: number\n        surprisePercent:\n          description: Surprise percent.\n          format: float\n          type: number\n        period:\n          description: Reported period.\n          format: date\n          type: string\n        symbol:\n          description: Company symbol.\n          type: string\n      type: object\n    EarningRelease:\n      example:\n        date: 2000-01-23\n        symbol: symbol\n        epsActual: 5.962134\n        hour: hour\n        epsEstimate: 1.4658129\n        revenueEstimate: 5.637377\n        revenueActual: 2.302136\n        year: 0\n        quarter: 6\n      properties:\n        symbol:\n          description: Symbol.\n          type: string\n        date:\n          description: Date.\n          format: date\n          type: string\n        hour:\n          description: Indicates whether the earnings is announced before market open(\u003ccode\u003ebmo\u003c/code\u003e),\n            after market close(\u003ccode\u003eamc\u003c/code\u003e), or during market hour(\u003ccode\u003edmh\u003c/code\u003e).\n          type: string\n        year:\n          description: Earnings year.\n          format: int64\n          type: integer\n        quarter:\n          description: Earnings quarter.\n          format: int64\n          type: integer\n        epsEstimate:\n          description: EPS estimate.\n          format: float\n          type: number\n        epsActual:\n          description: EPS actual.\n          format: float\n          type: number\n        revenueEstimate:\n          description: Revenue estimate including Finnhub's proprietary estimates.\n          format: float\n          type: number\n        revenueActual:\n          description: Revenue actual.\n          format: float\n          type: number\n      type: object\n    EarningsCalendar:\n      example:\n        earningsCalendar:\n        - date: 2000-01-23\n          symbol: symbol\n          epsActual: 5.962134\n          hour: hour\n          epsEstimate: 1.4658129\n          revenueEstimate: 5.637377\n          revenueActual: 2.302136\n          year: 0\n          quarter: 6\n        - date: 2000-01-23\n          symbol: symbol\n          epsActual: 5.962134\n          hour: hour\n          epsEstimate: 1.4658129\n          revenueEstimate: 5.637377\n          revenueActual: 2.302136\n          year: 0\n          quarter: 6\n      properties:\n        earningsCalendar:\n          description: Array of earnings release.\n          items:\n            $ref: '#/components/schemas/EarningRelease'\n          type: array\n      type: object\n    Quote:\n      example:\n        c: 5.962134\n        pc: 5.637377\n        d: 2.302136\n        h: 6.0274563\n        l: 1.4658129\n        dp: 7.0614014\n        o: 0.8008282\n      properties:\n        o:\n          description: Open price of the day\n          format: float\n          type: number\n        h:\n          description: High price of the day\n          format: float\n          type: number\n        l:\n          description: Low price of the day\n          format: float\n          type: number\n        c:\n          description: Current price\n          format: float\n          type: number\n        pc:\n          description: Previous close price\n          format: float\n          type: number\n        d:\n          description: Change\n          format: float\n          type: number\n        dp:\n          description: Percent change\n          format: float\n          type: number\n      type: object\n    StockCandles:\n      example:\n        c:\n        - 5.962134\n        - 5.962134\n        s: s\n        t:\n        - 2\n        - 2\n        v:\n        - 5.637377\n        - 5.637377\n        h:\n        - 6.0274563\n        - 6.0274563\n        l:\n        - 1.4658129\n        - 1.4658129\n        o:\n        - 0.8008282\n        - 0.8008282\n      properties:\n        o:\n          description: List of open prices for returned candles.\n          items:\n            format: float\n            type: number\n          type: array\n        h:\n          description: List of high prices for returned candles.\n          items:\n            format: float\n            type: number\n          type: array\n        l:\n          description: List of low prices for returned candles.\n          items:\n            format: float\n            type: number\n          type: array\n        c:\n          description: List of close prices for returned candles.\n          items:\n            format: float\n            type: number\n          type: array\n        v:\n          description: List of volume data for returned candles.\n          items:\n            format: float\n            type: number\n          type: array\n        t:\n          description: List of timestamp for returned candles.\n          items:\n            format: int64\n            type: integer\n          type: array\n        s:\n          description: Status of the response. This field can either be ok or no_data.\n          type: string\n      type: object\n    TickData:\n      example:\n        p:\n        - 5.637377\n        - 5.637377\n        total: 1\n        s: s\n        c:\n        - - c\n          - c\n        - - c\n          - c\n        t:\n        - 2\n        - 2\n        v:\n        - 5.962134\n        - 5.962134\n        count: 6\n        x:\n        - x\n        - x\n        skip: 0\n      properties:\n        s:\n          description: Symbol.\n          type: string\n        skip:\n          description: Number of ticks skipped.\n          format: int64\n          type: integer\n        count:\n          description: Number of ticks returned. If \u003ccode\u003ecount\u003c/code\u003e \u003c \u003ccode\u003elimit\u003c/code\u003e,\n            all data for that date has been returned.\n          format: int64\n          type: integer\n        total:\n          description: Total number of ticks for that date.\n          format: int64\n          type: integer\n        v:\n          description: List of volume data.\n          items:\n            format: float\n            type: number\n          type: array\n        p:\n          description: List of price data.\n          items:\n            format: float\n            type: number\n          type: array\n        t:\n          description: List of timestamp in UNIX ms.\n          items:\n            format: int64\n            type: integer\n          type: array\n        x:\n          description: List of venues/exchanges. A list of exchange codes can be found\n            \u003ca target=\"_blank\" href=\"https://docs.google.com/spreadsheets/d/1Tj53M1svmr-hfEtbk6_NpVR1yAyGLMaH6ByYU6CG0ZY/edit?usp=sharing\",\u003ehere\u003c/a\u003e\n          items:\n            type: string\n          type: array\n        c:\n          description: List of trade conditions. A comprehensive list of trade conditions\n            code can be found \u003ca target=\"_blank\" href=\"https://docs.google.com/spreadsheets/d/1PUxiSWPHSODbaTaoL2Vef6DgU-yFtlRGZf19oBb9Hp0/edit?usp=sharing\"\u003ehere\u003c/a\u003e\n          items:\n            items:\n              type: string\n            type: array\n          type: array\n      type: object\n    BondTickData:\n      example:\n        p:\n        - 5.637377\n        - 5.637377\n        total: 1\n        c:\n        - - c\n          - c\n        - - c\n          - c\n        t:\n        - 2\n        - 2\n        v:\n        - 5.962134\n        - 5.962134\n        si:\n        - si\n        - si\n        count: 6\n        skip: 0\n        cp:\n        - cp\n        - cp\n      properties:\n        skip:\n          description: Number of ticks skipped.\n          format: int64\n          type: integer\n        count:\n          description: Number of ticks returned. If \u003ccode\u003ecount\u003c/code\u003e \u003c \u003ccode\u003elimit\u003c/code\u003e,\n            all data for that date has been returned.\n          format: int64\n          type: integer\n        total:\n          description: Total number of ticks for that date.\n          format: int64\n          type: integer\n        v:\n          description: List of volume data.\n          items:\n            format: float\n            type: number\n          type: array\n        p:\n          description: List of price data.\n          items:\n            format: float\n            type: number\n          type: array\n        t:\n          description: List of timestamp in UNIX ms.\n          items:\n            format: int64\n            type: integer\n          type: array\n        si:\n          description: 'List of values showing the side (Buy/sell) of each trade.\n            List of supported values: \u003ca target=\"_blank\" href=\"https://docs.google.com/spreadsheets/d/1O3aueXSPOqo7Iuyz4PqDG6yZunHsX8BTefZ2kFk5pz4/edit?usp=sharing\",\u003ehere\u003c/a\u003e'\n          items:\n            type: string\n          type: array\n        cp:\n          description: 'List of values showing the counterparty of each trade. List\n            of supported values: \u003ca target=\"_blank\" href=\"https://docs.google.com/spreadsheets/d/1O3aueXSPOqo7Iuyz4PqDG6yZunHsX8BTefZ2kFk5pz4/edit?usp=sharing\",\u003ehere\u003c/a\u003e'\n          items:\n            type: string\n          type: array\n        c:\n          description: List of trade conditions. A comprehensive list of trade conditions\n            code can be found \u003ca target=\"_blank\" href=\"https://docs.google.com/spreadsheets/d/1O3aueXSPOqo7Iuyz4PqDG6yZunHsX8BTefZ2kFk5pz4/edit?usp=sharing\"\u003ehere\u003c/a\u003e\n          items:\n            items:\n              type: string\n            type: array\n          type: array\n      type: object\n    HistoricalNBBO:\n      example:\n        a:\n        - 5.637377\n        - 5.637377\n        total: 1\n        b:\n        - 7.0614014\n        - 7.0614014\n        s: s\n        c:\n        - - c\n          - c\n        - - c\n          - c\n        bv:\n        - 2.302136\n        - 2.302136\n        t:\n        - 9\n        - 9\n        av:\n        - 5.962134\n        - 5.962134\n        bx:\n        - bx\n        - bx\n        ax:\n        - ax\n        - ax\n        count: 6\n        skip: 0\n      properties:\n        s:\n          description: Symbol.\n          type: string\n        skip:\n          description: Number of ticks skipped.\n          format: int64\n          type: integer\n        count:\n          description: Number of ticks returned. If \u003ccode\u003ecount\u003c/code\u003e \u003c \u003ccode\u003elimit\u003c/code\u003e,\n            all data for that date has been returned.\n          format: int64\n          type: integer\n        total:\n          description: Total number of ticks for that date.\n          format: int64\n          type: integer\n        av:\n          description: List of Ask volume data.\n          items:\n            format: float\n            type: number\n          type: array\n        a:\n          description: List of Ask price data.\n          items:\n            format: float\n            type: number\n          type: array\n        ax:\n          description: List of venues/exchanges - Ask price. A list of exchange codes\n            can be found \u003ca target=\"_blank\" href=\"https://docs.google.com/spreadsheets/d/1Tj53M1svmr-hfEtbk6_NpVR1yAyGLMaH6ByYU6CG0ZY/edit?usp=sharing\",\u003ehere\u003c/a\u003e\n          items:\n            type: string\n          type: array\n        bv:\n          description: List of Bid volume data.\n          items:\n            format: float\n            type: number\n          type: array\n        b:\n          description: List of Bid price data.\n          items:\n            format: float\n            type: number\n          type: array\n        bx:\n          description: List of venues/exchanges - Bid price. A list of exchange codes\n            can be found \u003ca target=\"_blank\" href=\"https://docs.google.com/spreadsheets/d/1Tj53M1svmr-hfEtbk6_NpVR1yAyGLMaH6ByYU6CG0ZY/edit?usp=sharing\",\u003ehere\u003c/a\u003e\n          items:\n            type: string\n          type: array\n        t:\n          description: List of timestamp in UNIX ms.\n          items:\n            format: int64\n            type: integer\n          type: array\n        c:\n          description: List of quote conditions. A comprehensive list of quote conditions\n            code can be found \u003ca target=\"_blank\" href=\"https://docs.google.com/spreadsheets/d/1iiA6e7Osdtai0oPMOUzgAIKXCsay89dFDmsegz6OpEg/edit?usp=sharing\"\u003ehere\u003c/a\u003e\n          items:\n            items:\n              type: string\n            type: array\n          type: array\n      type: object\n    LastBid-Ask:\n      example:\n        a: 6.0274563\n        b: 0.8008282\n        bv: 1.4658129\n        t: 5\n        av: 5.962134\n      properties:\n        b:\n          description: Bid price.\n          format: float\n          type: number\n        a:\n          description: Ask price.\n          format: float\n          type: number\n        bv:\n          description: Bid volume.\n          format: float\n          type: number\n        av:\n          description: Ask volume.\n          format: float\n          type: number\n        t:\n          description: Reference UNIX timestamp in ms.\n          format: int64\n          type: integer\n      type: object\n    Split:\n      example:\n        date: 2000-01-23\n        symbol: symbol\n        fromFactor: 0.8008282\n        toFactor: 6.0274563\n      properties:\n        symbol:\n          description: Symbol.\n          type: string\n        date:\n          description: Split date.\n          format: date\n          type: string\n        fromFactor:\n          description: From factor.\n          format: float\n          type: number\n        toFactor:\n          description: To factor.\n          format: float\n          type: number\n      type: object\n    Dividends2:\n      example:\n        symbol: symbol\n        data:\n        - amount: 0.8008282\n          exDate: 2000-01-23\n        - amount: 0.8008282\n          exDate: 2000-01-23\n      properties:\n        symbol:\n          description: Symbol\n          type: string\n        data:\n          description: \"\"\n          items:\n            $ref: '#/components/schemas/Dividends2Info'\n          type: array\n      type: object\n    IndicesConstituents:\n      example:\n        symbol: symbol\n        constituents:\n        - constituents\n        - constituents\n      properties:\n        symbol:\n          description: Index's symbol.\n          type: string\n        constituents:\n          description: Array of constituents.\n          items:\n            type: string\n          type: array\n      type: object\n    IndexHistoricalConstituent:\n      example:\n        date: 2000-01-23\n        symbol: symbol\n        action: action\n      properties:\n        symbol:\n          description: Symbol\n          type: string\n        action:\n          description: \u003ccode\u003eadd\u003c/code\u003e or \u003ccode\u003eremove\u003c/code\u003e.\n          type: string\n        date:\n          description: Date of joining or leaving the index.\n          format: date\n          type: string\n      type: object\n    IndicesHistoricalConstituents:\n      example:\n        historicalConstituents:\n        - date: 2000-01-23\n          symbol: symbol\n          action: action\n        - date: 2000-01-23\n          symbol: symbol\n          action: action\n        symbol: symbol\n      properties:\n        symbol:\n          description: Index's symbol.\n          type: string\n        historicalConstituents:\n          description: Array of historical constituents.\n          items:\n            $ref: '#/components/schemas/IndexHistoricalConstituent'\n          type: array\n      type: object\n    ETFProfileData:\n      example:\n        nav: 6.0274563\n        website: website\n        cusip: cusip\n        priceToEarnings: 5.962134\n        isInverse: true\n        avgVolume: 2.302136\n        description: description\n        assetClass: assetClass\n        leverageFactor: 7.0614014\n        etfCompany: etfCompany\n        inceptionDate: 2000-01-23\n        expenseRatio: 1.4658129\n        name: name\n        aum: 0.8008282\n        domicile: domicile\n        isLeveraged: true\n        trackingIndex: trackingIndex\n        priceToBook: 5.637377\n        investmentSegment: investmentSegment\n        navCurrency: navCurrency\n        isin: isin\n      properties:\n        name:\n          description: Name\n          type: string\n        assetClass:\n          description: Asset Class.\n          type: string\n        investmentSegment:\n          description: Investment Segment.\n          type: string\n        aum:\n          description: AUM.\n          format: float\n          type: number\n        nav:\n          description: NAV.\n          format: float\n          type: number\n        navCurrency:\n          description: NAV currency.\n          type: string\n        expenseRatio:\n          description: Expense ratio. For non-US funds, this is the \u003ca href=\"https://www.esma.europa.eu/sites/default/files/library/2015/11/09_1028_final_kid_ongoing_charges_methodology_for_publication_u_2_.pdf\"\n            target=\"_blank\"\u003eKID ongoing charges\u003ca/\u003e.\n          format: float\n          type: number\n        trackingIndex:\n          description: Tracking Index.\n          type: string\n        etfCompany:\n          description: ETF issuer.\n          type: string\n        domicile:\n          description: ETF domicile.\n          type: string\n        inceptionDate:\n          description: Inception date.\n          format: date\n          type: string\n        website:\n          description: ETF's website.\n          type: string\n        isin:\n          description: ISIN.\n          type: string\n        cusip:\n          description: CUSIP.\n          type: string\n        priceToEarnings:\n          description: P/E.\n          format: float\n          type: number\n        priceToBook:\n          description: P/B.\n          format: float\n          type: number\n        avgVolume:\n          description: 30-day average volume.\n          format: float\n          type: number\n        description:\n          description: ETF's description.\n          type: string\n        isInverse:\n          description: Whether the ETF is inverse\n          type: boolean\n        isLeveraged:\n          description: Whether the ETF is leveraged\n          type: boolean\n        leverageFactor:\n          description: Leverage factor.\n          format: float\n          type: number\n      type: object\n    ETFsProfile:\n      example:\n        symbol: symbol\n        profile:\n          nav: 6.0274563\n          website: website\n          cusip: cusip\n          priceToEarnings: 5.962134\n          isInverse: true\n          avgVolume: 2.302136\n          description: description\n          assetClass: assetClass\n          leverageFactor: 7.0614014\n          etfCompany: etfCompany\n          inceptionDate: 2000-01-23\n          expenseRatio: 1.4658129\n          name: name\n          aum: 0.8008282\n          domicile: domicile\n          isLeveraged: true\n          trackingIndex: trackingIndex\n          priceToBook: 5.637377\n          investmentSegment: investmentSegment\n          navCurrency: navCurrency\n          isin: isin\n      properties:\n        symbol:\n          description: Symbol.\n          type: string\n        profile:\n          $ref: '#/components/schemas/ETFProfileData'\n      type: object\n    ETFHoldingsData:\n      example:\n        symbol: symbol\n        cusip: cusip\n        name: name\n        share: 6.0274563\n        percent: 1.4658129\n        value: 5.962134\n        isin: isin\n      properties:\n        symbol:\n          description: Symbol description\n          type: string\n        name:\n          description: Security name\n          type: string\n        isin:\n          description: ISIN.\n          type: string\n        cusip:\n          description: CUSIP.\n          type: string\n        share:\n          description: Number of shares owned by the ETF.\n          format: float\n          type: number\n        percent:\n          description: Portfolio's percent\n          format: float\n          type: number\n        value:\n          description: Market value\n          format: float\n          type: number\n      type: object\n    ETFsHoldings:\n      example:\n        symbol: symbol\n        atDate: 2000-01-23\n        holdings:\n        - symbol: symbol\n          cusip: cusip\n          name: name\n          share: 6.0274563\n          percent: 1.4658129\n          value: 5.962134\n          isin: isin\n        - symbol: symbol\n          cusip: cusip\n          name: name\n          share: 6.0274563\n          percent: 1.4658129\n          value: 5.962134\n          isin: isin\n        numberOfHoldings: 0\n      properties:\n        symbol:\n          description: ETF symbol.\n          type: string\n        atDate:\n          description: Holdings update date.\n          format: date\n          type: string\n        numberOfHoldings:\n          description: Number of holdings.\n          format: int64\n          type: integer\n        holdings:\n          description: Array of holdings.\n          items:\n            $ref: '#/components/schemas/ETFHoldingsData'\n          type: array\n      type: object\n    ETFSectorExposureData:\n      example:\n        exposure: 0.8008282\n        industry: industry\n      properties:\n        industry:\n          description: Industry\n          type: string\n        exposure:\n          description: Percent of exposure.\n          format: float\n          type: number\n      type: object\n    ETFsSectorExposure:\n      example:\n        symbol: symbol\n        sectorExposure:\n        - exposure: 0.8008282\n          industry: industry\n        - exposure: 0.8008282\n          industry: industry\n      properties:\n        symbol:\n          description: ETF symbol.\n          type: string\n        sectorExposure:\n          description: Array of industries and exposure levels.\n          items:\n            $ref: '#/components/schemas/ETFSectorExposureData'\n          type: array\n      type: object\n    ETFCountryExposureData:\n      example:\n        country: country\n        exposure: 0.8008282\n      properties:\n        country:\n          description: Country\n          type: string\n        exposure:\n          description: Percent of exposure.\n          format: float\n          type: number\n      type: object\n    ETFsCountryExposure:\n      example:\n        symbol: symbol\n        countryExposure:\n        - country: country\n          exposure: 0.8008282\n        - country: country\n          exposure: 0.8008282\n      properties:\n        symbol:\n          description: ETF symbol.\n          type: string\n        countryExposure:\n          description: Array of countries and and exposure levels.\n          items:\n            $ref: '#/components/schemas/ETFCountryExposureData'\n          type: array\n      type: object\n    MutualFundProfileData:\n      example:\n        cusip: cusip\n        deferredLoad: 5.962134\n        description: description\n        className: className\n        fee12b1: 5.637377\n        seriesId: seriesId\n        standardMinInvestment: 3.6160767\n        classId: classId\n        inceptionDate: 2000-01-23\n        currency: currency\n        turnover: 2.027123\n        investmentSegment: investmentSegment\n        beta: 1.4658129\n        maxRedemptionFee: 9.301444\n        sfdrClassification: sfdrClassification\n        manager: manager\n        iraMinInvestment: 7.0614014\n        seriesName: seriesName\n        totalNav: 0.8008282\n        benchmark: benchmark\n        frontLoad: 2.302136\n        expenseRatio: 6.0274563\n        name: name\n        category: category\n        fundFamily: fundFamily\n        isin: isin\n        status: status\n      properties:\n        name:\n          description: Name\n          type: string\n        category:\n          description: Fund's category.\n          type: string\n        investmentSegment:\n          description: Investment Segment.\n          type: string\n        totalNav:\n          description: NAV.\n          format: float\n          type: number\n        expenseRatio:\n          description: Expense ratio.\n          format: float\n          type: number\n        benchmark:\n          description: Index benchmark.\n          type: string\n        inceptionDate:\n          description: Inception date.\n          format: date\n          type: string\n        description:\n          description: Fund's description.\n          type: string\n        fundFamily:\n          description: Fund Family.\n          type: string\n        manager:\n          description: Fund's managers.\n          type: string\n        status:\n          description: Status.\n          type: string\n        beta:\n          description: Beta.\n          format: float\n          type: number\n        deferredLoad:\n          description: Deferred load.\n          format: float\n          type: number\n        fee12b1:\n          description: 12B-1 fee.\n          format: float\n          type: number\n        frontLoad:\n          description: Front Load.\n          format: float\n          type: number\n        iraMinInvestment:\n          description: IRA minimum investment.\n          format: float\n          type: number\n        isin:\n          description: ISIN.\n          type: string\n        cusip:\n          description: CUSIP.\n          type: string\n        maxRedemptionFee:\n          description: Max redemption fee.\n          format: float\n          type: number\n        standardMinInvestment:\n          description: Minimum investment for standard accounts.\n          format: float\n          type: number\n        turnover:\n          description: Turnover.\n          format: float\n          type: number\n        seriesId:\n          description: Fund's series ID. This field can be used to group multiple\n            share classes into 1 unique fund.\n          type: string\n        seriesName:\n          description: Fund's series name.\n          type: string\n        classId:\n          description: Class ID.\n          type: string\n        className:\n          description: Class name.\n          type: string\n        sfdrClassification:\n          description: SFDR classification for EU funds. Under the new classifications,\n            a fund's strategy will labeled under either Article 6, 8 or 9. Article\n            6 covers funds which do not integrate any kind of sustainability into\n            the investment process. Article 8, also known as ‘environmental and socially\n            promoting’, applies “… where a financial product promotes, among other\n            characteristics, environmental or social characteristics, or a combination\n            of those characteristics, provided that the companies in which the investments\n            are made follow good governance practices.”. Article 9, also known as\n            ‘products targeting sustainable investments’, covers products targeting\n            bespoke sustainable investments and applies “… where a financial product\n            has sustainable investment as its objective and an index has been designated\n            as a reference benchmark.”\n          type: string\n        currency:\n          description: Fund's currency\n          type: string\n      type: object\n    MutualFundProfile:\n      example:\n        symbol: symbol\n        profile:\n          cusip: cusip\n          deferredLoad: 5.962134\n          description: description\n          className: className\n          fee12b1: 5.637377\n          seriesId: seriesId\n          standardMinInvestment: 3.6160767\n          classId: classId\n          inceptionDate: 2000-01-23\n          currency: currency\n          turnover: 2.027123\n          investmentSegment: investmentSegment\n          beta: 1.4658129\n          maxRedemptionFee: 9.301444\n          sfdrClassification: sfdrClassification\n          manager: manager\n          iraMinInvestment: 7.0614014\n          seriesName: seriesName\n          totalNav: 0.8008282\n          benchmark: benchmark\n          frontLoad: 2.302136\n          expenseRatio: 6.0274563\n          name: name\n          category: category\n          fundFamily: fundFamily\n          isin: isin\n          status: status\n      properties:\n        symbol:\n          description: Symbol.\n          type: string\n        profile:\n          $ref: '#/components/schemas/MutualFundProfileData'\n      type: object\n    MutualFundHoldingsData:\n      example:\n        symbol: symbol\n        cusip: cusip\n        name: name\n        share: 6.0274563\n        percent: 1.4658129\n        value: 5.962134\n        isin: isin\n      properties:\n        symbol:\n          description: Symbol description\n          type: string\n        name:\n          description: Security name\n          type: string\n        isin:\n          description: ISIN.\n          type: string\n        cusip:\n          description: CUSIP.\n          type: string\n        share:\n          description: Number of shares.\n          format: float\n          type: number\n        percent:\n          description: Portfolio's percent\n          format: float\n          type: number\n        value:\n          description: Market value\n          format: float\n          type: number\n      type: object\n    MutualFundHoldings:\n      example:\n        symbol: symbol\n        atDate: 2000-01-23\n        holdings:\n        - symbol: symbol\n          cusip: cusip\n          name: name\n          share: 6.0274563\n          percent: 1.4658129\n          value: 5.962134\n          isin: isin\n        - symbol: symbol\n          cusip: cusip\n          name: name\n          share: 6.0274563\n          percent: 1.4658129\n          value: 5.962134\n          isin: isin\n        numberOfHoldings: 0\n      properties:\n        symbol:\n          description: Symbol.\n          type: string\n        atDate:\n          description: Holdings update date.\n          format: date\n          type: string\n        numberOfHoldings:\n          description: Number of holdings.\n          format: int64\n          type: integer\n        holdings:\n          description: Array of holdings.\n          items:\n            $ref: '#/components/schemas/MutualFundHoldingsData'\n          type: array\n      type: object\n    MutualFundSectorExposureData:\n      example:\n        exposure: 0.8008282\n        sector: sector\n      properties:\n        sector:\n          description: Sector\n          type: string\n        exposure:\n          description: Percent of exposure.\n          format: float\n          type: number\n      type: object\n    MutualFundSectorExposure:\n      example:\n        symbol: symbol\n        sectorExposure:\n        - exposure: 0.8008282\n          sector: sector\n        - exposure: 0.8008282\n          sector: sector\n      properties:\n        symbol:\n          description: Mutual symbol.\n          type: string\n        sectorExposure:\n          description: Array of sector and exposure levels.\n          items:\n            $ref: '#/components/schemas/MutualFundSectorExposureData'\n          type: array\n      type: object\n    MutualFundCountryExposureData:\n      example:\n        country: country\n        exposure: 0.8008282\n      properties:\n        country:\n          description: Country\n          type: string\n        exposure:\n          description: Percent of exposure.\n          format: float\n          type: number\n      type: object\n    MutualFundCountryExposure:\n      example:\n        symbol: symbol\n        countryExposure:\n        - country: country\n          exposure: 0.8008282\n        - country: country\n          exposure: 0.8008282\n      properties:\n        symbol:\n          description: Symbol.\n          type: string\n        countryExposure:\n          description: Array of countries and and exposure levels.\n          items:\n            $ref: '#/components/schemas/MutualFundCountryExposureData'\n          type: array\n      type: object\n    ForexSymbol:\n      example:\n        displaySymbol: displaySymbol\n        symbol: symbol\n        description: description\n      properties:\n        description:\n          description: Symbol description\n          type: string\n        displaySymbol:\n          description: Display symbol name.\n          type: string\n        symbol:\n          description: Unique symbol used to identify this symbol used in \u003ccode\u003e/forex/candle\u003c/code\u003e\n            endpoint.\n          type: string\n      type: object\n    ForexCandles:\n      example:\n        c:\n        - 5.962134\n        - 5.962134\n        s: s\n        t:\n        - 2.302136\n        - 2.302136\n        v:\n        - 5.637377\n        - 5.637377\n        h:\n        - 6.0274563\n        - 6.0274563\n        l:\n        - 1.4658129\n        - 1.4658129\n        o:\n        - 0.8008282\n        - 0.8008282\n      properties:\n        o:\n          description: List of open prices for returned candles.\n          items:\n            format: float\n            type: number\n          type: array\n        h:\n          description: List of high prices for returned candles.\n          items:\n            format: float\n            type: number\n          type: array\n        l:\n          description: List of low prices for returned candles.\n          items:\n            format: float\n            type: number\n          type: array\n        c:\n          description: List of close prices for returned candles.\n          items:\n            format: float\n            type: number\n          type: array\n        v:\n          description: List of volume data for returned candles.\n          items:\n            format: float\n            type: number\n          type: array\n        t:\n          description: List of timestamp for returned candles.\n          items:\n            format: float\n            type: number\n          type: array\n        s:\n          description: Status of the response. This field can either be ok or no_data.\n          type: string\n      type: object\n    ForexRate:\n      type: object\n    Forexrates:\n      example:\n        quote: '{}'\n        base: base\n      properties:\n        base:\n          description: Base currency.\n          type: string\n        quote:\n          type: object\n      type: object\n    CryptoSymbol:\n      example:\n        displaySymbol: displaySymbol\n        symbol: symbol\n        description: description\n      properties:\n        description:\n          description: Symbol description\n          type: string\n        displaySymbol:\n          description: Display symbol name.\n          type: string\n        symbol:\n          description: Unique symbol used to identify this symbol used in \u003ccode\u003e/crypto/candle\u003c/code\u003e\n            endpoint.\n          type: string\n      type: object\n    CryptoProfile:\n      example:\n        marketCap: 0.8008282\n        website: website\n        totalSupply: 6.0274563\n        proofType: proofType\n        name: name\n        description: description\n        logo: logo\n        maxSupply: 1.4658129\n        launchDate: launchDate\n        circulatingSupply: 5.962134\n        longName: longName\n      properties:\n        longName:\n          description: Long name.\n          type: string\n        name:\n          description: Name.\n          type: string\n        description:\n          description: Description.\n          type: string\n        website:\n          description: Project's website.\n          type: string\n        marketCap:\n          description: Market capitalization.\n          format: float\n          type: number\n        totalSupply:\n          description: Total supply.\n          format: float\n          type: number\n        maxSupply:\n          description: Max supply.\n          format: float\n          type: number\n        circulatingSupply:\n          description: Circulating supply.\n          format: float\n          type: number\n        logo:\n          description: Logo image.\n          type: string\n        launchDate:\n          description: Launch date.\n          type: string\n        proofType:\n          description: Proof type.\n          type: string\n      type: object\n    CryptoCandles:\n      example:\n        c:\n        - 5.962134\n        - 5.962134\n        s: s\n        t:\n        - 2\n        - 2\n        v:\n        - 5.637377\n        - 5.637377\n        h:\n        - 6.0274563\n        - 6.0274563\n        l:\n        - 1.4658129\n        - 1.4658129\n        o:\n        - 0.8008282\n        - 0.8008282\n      properties:\n        o:\n          description: List of open prices for returned candles.\n          items:\n            format: float\n            type: number\n          type: array\n        h:\n          description: List of high prices for returned candles.\n          items:\n            format: float\n            type: number\n          type: array\n        l:\n          description: List of low prices for returned candles.\n          items:\n            format: float\n            type: number\n          type: array\n        c:\n          description: List of close prices for returned candles.\n          items:\n            format: float\n            type: number\n          type: array\n        v:\n          description: List of volume data for returned candles.\n          items:\n            format: float\n            type: number\n          type: array\n        t:\n          description: List of timestamp for returned candles.\n          items:\n            format: int64\n            type: integer\n          type: array\n        s:\n          description: Status of the response. This field can either be ok or no_data.\n          type: string\n      type: object\n    ScanPattern:\n      type: object\n    PatternRecognition:\n      example:\n        points:\n        - null\n        - null\n      properties:\n        points:\n          description: Array of patterns.\n          items:\n            $ref: '#/components/schemas/ScanPattern'\n          type: array\n      type: object\n    SupportResistance:\n      example:\n        levels:\n        - 0.8008282\n        - 0.8008282\n      properties:\n        levels:\n          description: Array of support and resistance levels.\n          items:\n            format: float\n            type: number\n          type: array\n      type: object\n    Indicator:\n      example:\n        buy: 0\n        sell: 1\n        neutral: 6\n      properties:\n        buy:\n          description: Number of buy signals\n          format: int64\n          type: integer\n        neutral:\n          description: Number of neutral signals\n          format: int64\n          type: integer\n        sell:\n          description: Number of sell signals\n          format: int64\n          type: integer\n      type: object\n    TechnicalAnalysis:\n      example:\n        count:\n          buy: 0\n          sell: 1\n          neutral: 6\n        signal: signal\n      properties:\n        count:\n          $ref: '#/components/schemas/Indicator'\n        signal:\n          description: Aggregate Signal\n          type: string\n      type: object\n    Trend:\n      example:\n        trending: true\n        adx: 5.962134\n      properties:\n        adx:\n          description: ADX reading\n          format: float\n          type: number\n        trending:\n          description: Whether market is trending or going sideway\n          type: boolean\n      type: object\n    AggregateIndicators:\n      example:\n        trend:\n          trending: true\n          adx: 5.962134\n        technicalAnalysis:\n          count:\n            buy: 0\n            sell: 1\n            neutral: 6\n          signal: signal\n      properties:\n        technicalAnalysis:\n          $ref: '#/components/schemas/TechnicalAnalysis'\n        trend:\n          $ref: '#/components/schemas/Trend'\n      type: object\n    TechnicalIndicator:\n      type: object\n    IndicatorFields:\n      type: object\n    StockTranscripts:\n      example:\n        year: 0\n        id: id\n        time: time\n        title: title\n        quarter: 6\n      properties:\n        id:\n          description: Transcript's ID used to get the \u003ca href=\"#transcripts\"\u003efull\n            transcript\u003c/a\u003e.\n          type: string\n        title:\n          description: Title.\n          type: string\n        time:\n          description: Time of the event.\n          type: string\n        year:\n          description: Year of earnings result in the case of earnings call transcript.\n          format: int64\n          type: integer\n        quarter:\n          description: Quarter of earnings result in the case of earnings call transcript.\n          format: int64\n          type: integer\n      type: object\n    EarningsCallTranscriptsList:\n      example:\n        symbol: symbol\n        transcripts:\n        - year: 0\n          id: id\n          time: time\n          title: title\n          quarter: 6\n        - year: 0\n          id: id\n          time: time\n          title: title\n          quarter: 6\n      properties:\n        symbol:\n          description: Company symbol.\n          type: string\n        transcripts:\n          description: Array of transcripts' metadata\n          items:\n            $ref: '#/components/schemas/StockTranscripts'\n          type: array\n      type: object\n    TranscriptContent:\n      example:\n        speech:\n        - speech\n        - speech\n        session: session\n        name: name\n      properties:\n        name:\n          description: Speaker's name\n          type: string\n        speech:\n          description: Speaker's speech\n          items:\n            type: string\n          type: array\n        session:\n          description: Earnings calls section (management discussion or Q\u0026A)\n          type: string\n      type: object\n    TranscriptParticipant:\n      example:\n        role: role\n        name: name\n        description: description\n      properties:\n        name:\n          description: Participant's name\n          type: string\n        description:\n          description: Participant's description\n          type: string\n        role:\n          description: Whether the speak is a company's executive or an analyst\n          type: string\n      type: object\n    EarningsCallTranscripts:\n      example:\n        symbol: symbol\n        transcript:\n        - speech:\n          - speech\n          - speech\n          session: session\n          name: name\n        - speech:\n          - speech\n          - speech\n          session: session\n          name: name\n        year: 0\n        audio: audio\n        id: id\n        time: time\n        title: title\n        participant:\n        - role: role\n          name: name\n          description: description\n        - role: role\n          name: name\n          description: description\n        quarter: 6\n      properties:\n        symbol:\n          description: Company symbol.\n          type: string\n        transcript:\n          description: Transcript content.\n          items:\n            $ref: '#/components/schemas/TranscriptContent'\n          type: array\n        participant:\n          description: Participant list\n          items:\n            $ref: '#/components/schemas/TranscriptParticipant'\n          type: array\n        audio:\n          description: Audio link.\n          type: string\n        id:\n          description: Transcript's ID.\n          type: string\n        title:\n          description: Title.\n          type: string\n        time:\n          description: Time of the event.\n          type: string\n        year:\n          description: Year of earnings result in the case of earnings call transcript.\n          format: int64\n          type: integer\n        quarter:\n          description: Quarter of earnings result in the case of earnings call transcript.\n          format: int64\n          type: integer\n      type: object\n    RedditSentimentContent:\n      example:\n        positiveMention: 6\n        atTime: atTime\n        score: 2.302136\n        positiveScore: 5.962134\n        negativeMention: 1\n        negativeScore: 5.637377\n        mention: 0\n      properties:\n        mention:\n          description: Number of mentions\n          format: int64\n          type: integer\n        positiveMention:\n          description: Number of positive mentions\n          format: int64\n          type: integer\n        negativeMention:\n          description: Number of negative mentions\n          format: int64\n          type: integer\n        positiveScore:\n          description: Positive score. Range 0-1\n          format: float\n          type: number\n        negativeScore:\n          description: Negative score. Range 0-1\n          format: float\n          type: number\n        score:\n          description: 'Final score. Range: -1 to 1 with 1 is very positive and -1\n            is very negative'\n          format: float\n          type: number\n        atTime:\n          description: Period.\n          type: string\n      type: object\n    TwitterSentimentContent:\n      example:\n        positiveMention: 9\n        atTime: atTime\n        score: 7.386282\n        positiveScore: 2.027123\n        negativeMention: 3\n        negativeScore: 4.145608\n        mention: 7\n      properties:\n        mention:\n          description: Number of mentions\n          format: int64\n          type: integer\n        positiveMention:\n          description: Number of positive mentions\n          format: int64\n          type: integer\n        negativeMention:\n          description: Number of negative mentions\n          format: int64\n          type: integer\n        positiveScore:\n          description: Positive score. Range 0-1\n          format: float\n          type: number\n        negativeScore:\n          description: Negative score. Range 0-1\n          format: float\n          type: number\n        score:\n          description: 'Final score. Range: -1 to 1 with 1 is very positive and -1\n            is very negative'\n          format: float\n          type: number\n        atTime:\n          description: Period.\n          type: string\n      type: object\n    SocialSentiment:\n      example:\n        symbol: symbol\n        twitter:\n        - positiveMention: 9\n          atTime: atTime\n          score: 7.386282\n          positiveScore: 2.027123\n          negativeMention: 3\n          negativeScore: 4.145608\n          mention: 7\n        - positiveMention: 9\n          atTime: atTime\n          score: 7.386282\n          positiveScore: 2.027123\n          negativeMention: 3\n          negativeScore: 4.145608\n          mention: 7\n        reddit:\n        - positiveMention: 6\n          atTime: atTime\n          score: 2.302136\n          positiveScore: 5.962134\n          negativeMention: 1\n          negativeScore: 5.637377\n          mention: 0\n        - positiveMention: 6\n          atTime: atTime\n          score: 2.302136\n          positiveScore: 5.962134\n          negativeMention: 1\n          negativeScore: 5.637377\n          mention: 0\n      properties:\n        symbol:\n          description: Company symbol.\n          type: string\n        reddit:\n          description: Reddit sentiment.\n          items:\n            $ref: '#/components/schemas/RedditSentimentContent'\n          type: array\n        twitter:\n          description: Twitter sentiment.\n          items:\n            $ref: '#/components/schemas/TwitterSentimentContent'\n          type: array\n      type: object\n    InvestmentThemePortfolio:\n      example:\n        symbol: symbol\n      properties:\n        symbol:\n          description: Symbol\n          type: string\n      type: object\n    InvestmentThemes:\n      example:\n        data:\n        - symbol: symbol\n        - symbol: symbol\n        theme: theme\n      properties:\n        theme:\n          description: Investment theme\n          type: string\n        data:\n          description: Investment theme portfolio.\n          items:\n            $ref: '#/components/schemas/InvestmentThemePortfolio'\n          type: array\n      type: object\n    SectorMetric:\n      example:\n        data:\n        - metrics: '{}'\n          sector: sector\n        - metrics: '{}'\n          sector: sector\n        region: region\n      properties:\n        region:\n          description: Region.\n          type: string\n        data:\n          description: Metrics for each sector.\n          items:\n            $ref: '#/components/schemas/SectorMetricData'\n          type: array\n      type: object\n    SectorMetricData:\n      example:\n        metrics: '{}'\n        sector: sector\n      properties:\n        sector:\n          description: Sector\n          type: string\n        metrics:\n          description: Metrics data in key-value format. \u003ccode\u003ea\u003c/code\u003e and \u003ccode\u003em\u003c/code\u003e\n            fields are for average and median respectively.\n          properties: {}\n          type: object\n      type: object\n    KeyCustomersSuppliers:\n      example:\n        twoYearCorrelation: 2.302136\n        symbol: symbol\n        country: country\n        twoWeekCorrelation: 5.637377\n        oneMonthCorrelation: 0.8008282\n        supplier: true\n        name: name\n        industry: industry\n        threeMonthCorrelation: 5.962134\n        oneYearCorrelation: 6.0274563\n        sixMonthCorrelation: 1.4658129\n        customer: true\n      properties:\n        symbol:\n          description: Symbol\n          type: string\n        name:\n          description: Name\n          type: string\n        country:\n          description: Country\n          type: string\n        industry:\n          description: Industry\n          type: string\n        customer:\n          description: Whether the company is a customer.\n          type: boolean\n        supplier:\n          description: Whether the company is a supplier\n          type: boolean\n        oneMonthCorrelation:\n          description: 1-month price correlation\n          format: float\n          type: number\n        oneYearCorrelation:\n          description: 1-year price correlation\n          format: float\n          type: number\n        sixMonthCorrelation:\n          description: 6-month price correlation\n          format: float\n          type: number\n        threeMonthCorrelation:\n          description: 3-month price correlation\n          format: float\n          type: number\n        twoWeekCorrelation:\n          description: 2-week price correlation\n          format: float\n          type: number\n        twoYearCorrelation:\n          description: 2-year price correlation\n          format: float\n          type: number\n      type: object\n    SupplyChainRelationships:\n      example:\n        symbol: symbol\n        data:\n        - twoYearCorrelation: 2.302136\n          symbol: symbol\n          country: country\n          twoWeekCorrelation: 5.637377\n          oneMonthCorrelation: 0.8008282\n          supplier: true\n          name: name\n          industry: industry\n          threeMonthCorrelation: 5.962134\n          oneYearCorrelation: 6.0274563\n          sixMonthCorrelation: 1.4658129\n          customer: true\n        - twoYearCorrelation: 2.302136\n          symbol: symbol\n          country: country\n          twoWeekCorrelation: 5.637377\n          oneMonthCorrelation: 0.8008282\n          supplier: true\n          name: name\n          industry: industry\n          threeMonthCorrelation: 5.962134\n          oneYearCorrelation: 6.0274563\n          sixMonthCorrelation: 1.4658129\n          customer: true\n      properties:\n        symbol:\n          description: symbol\n          type: string\n        data:\n          description: Key customers and suppliers.\n          items:\n            $ref: '#/components/schemas/KeyCustomersSuppliers'\n          type: array\n      type: object\n    CompanyESG:\n      example:\n        symbol: symbol\n        data: '{}'\n        totalESGScore: 0.8008282\n        environmentScore: 6.0274563\n        governanceScore: 1.4658129\n        socialScore: 5.962134\n      properties:\n        symbol:\n          description: symbol\n          type: string\n        totalESGScore:\n          description: Total ESG Score\n          format: float\n          type: number\n        environmentScore:\n          description: Environment Score\n          format: float\n          type: number\n        governanceScore:\n          description: Governance Score\n          format: float\n          type: number\n        socialScore:\n          description: Social Score\n          format: float\n          type: number\n        data:\n          type: object\n      type: object\n    CompanyESGMap:\n      type: object\n    CompanyEarningsQualityScore:\n      example:\n        symbol: symbol\n        data:\n        - profitability: 6.0274563\n          leverage: 5.962134\n          score: 5.637377\n          letterScore: letterScore\n          period: period\n          cashGenerationCapitalAllocation: 1.4658129\n          growth: 0.8008282\n        - profitability: 6.0274563\n          leverage: 5.962134\n          score: 5.637377\n          letterScore: letterScore\n          period: period\n          cashGenerationCapitalAllocation: 1.4658129\n          growth: 0.8008282\n        freq: freq\n      properties:\n        symbol:\n          description: Symbol\n          type: string\n        freq:\n          description: Frequency\n          type: string\n        data:\n          description: Array of earnings quality score.\n          items:\n            $ref: '#/components/schemas/CompanyEarningsQualityScoreData'\n          type: array\n      type: object\n    CompanyEarningsQualityScoreData:\n      example:\n        profitability: 6.0274563\n        leverage: 5.962134\n        score: 5.637377\n        letterScore: letterScore\n        period: period\n        cashGenerationCapitalAllocation: 1.4658129\n        growth: 0.8008282\n      properties:\n        period:\n          description: Period\n          type: string\n        growth:\n          description: Growth Score\n          format: float\n          type: number\n        profitability:\n          description: Profitability Score\n          format: float\n          type: number\n        cashGenerationCapitalAllocation:\n          description: Cash Generation and Capital Allocation\n          format: float\n          type: number\n        leverage:\n          description: Leverage Score\n          format: float\n          type: number\n        score:\n          description: Total Score\n          format: float\n          type: number\n        letterScore:\n          description: Letter Score\n          type: string\n      type: object\n    CovidInfo:\n      example:\n        death: 6.0274563\n        state: state\n        updated: updated\n        case: 0.8008282\n      properties:\n        state:\n          description: State.\n          type: string\n        case:\n          description: Number of confirmed cases.\n          format: float\n          type: number\n        death:\n          description: Number of confirmed deaths.\n          format: float\n          type: number\n        updated:\n          description: Updated time.\n          type: string\n      type: object\n    FDAComitteeMeeting:\n      example:\n        fromDate: fromDate\n        toDate: toDate\n        eventDescription: eventDescription\n        url: url\n      properties:\n        fromDate:\n          description: Start time of the event in EST.\n          type: string\n        toDate:\n          description: End time of the event in EST.\n          type: string\n        eventDescription:\n          description: Event's description.\n          type: string\n        url:\n          description: URL.\n          type: string\n      type: object\n    CountryMetadata:\n      example:\n        country: country\n        code3: code3\n        code2: code2\n        subRegion: subRegion\n        codeNo: codeNo\n        currency: currency\n        region: region\n        currencyCode: currencyCode\n      properties:\n        country:\n          description: Country name\n          type: string\n        code2:\n          description: Alpha 2 code\n          type: string\n        code3:\n          description: Alpha 3 code\n          type: string\n        codeNo:\n          description: UN code\n          type: string\n        currency:\n          description: Currency name\n          type: string\n        currencyCode:\n          description: Currency code\n          type: string\n        region:\n          description: Region\n          type: string\n        subRegion:\n          description: Sub-Region\n          type: string\n      type: object\n    Economic event:\n      example:\n        actual: 0.8008282\n        country: country\n        unit: unit\n        prev: 6.0274563\n        impact: impact\n        estimate: 1.4658129\n        time: time\n        event: event\n      properties:\n        actual:\n          description: Actual release\n          format: float\n          type: number\n        prev:\n          description: Previous release\n          format: float\n          type: number\n        country:\n          description: Country\n          type: string\n        unit:\n          description: Unit\n          type: string\n        estimate:\n          description: Estimate\n          format: float\n          type: number\n        event:\n          description: Event\n          type: string\n        impact:\n          description: Impact level\n          type: string\n        time:\n          description: Release time\n          type: string\n      type: object\n    EconomicCalendar:\n      example:\n        economicCalendar:\n        - actual: 0.8008282\n          country: country\n          unit: unit\n          prev: 6.0274563\n          impact: impact\n          estimate: 1.4658129\n          time: time\n          event: event\n        - actual: 0.8008282\n          country: country\n          unit: unit\n          prev: 6.0274563\n          impact: impact\n          estimate: 1.4658129\n          time: time\n          event: event\n      properties:\n        economicCalendar:\n          description: Array of economic events.\n          items:\n            $ref: '#/components/schemas/Economic event'\n          type: array\n      type: object\n    EconomicCode:\n      example:\n        country: country\n        unit: unit\n        code: code\n        name: name\n      properties:\n        code:\n          description: Finnhub economic code used to get historical data\n          type: string\n        country:\n          description: Country\n          type: string\n        name:\n          description: Indicator name\n          type: string\n        unit:\n          description: Unit\n          type: string\n      type: object\n    EconomicDataInfo:\n      example:\n        date: date\n        value: 0.8008282\n      properties:\n        date:\n          description: Date of the reading\n          type: string\n        value:\n          description: Value\n          format: float\n          type: number\n      type: object\n    EconomicData:\n      example:\n        code: code\n        data:\n        - date: date\n          value: 0.8008282\n        - date: date\n          value: 0.8008282\n      properties:\n        data:\n          description: Array of economic data for requested code.\n          items:\n            $ref: '#/components/schemas/EconomicDataInfo'\n          type: array\n        code:\n          description: Finnhub economic code\n          type: string\n      type: object\n    UsptoPatentResult:\n      example:\n        symbol: symbol\n        data:\n        - companyFilingName:\n          - companyFilingName\n          - companyFilingName\n          filingStatus: filingStatus\n          applicationNumber: applicationNumber\n          filingDate: filingDate\n          patentNumber: patentNumber\n          description: description\n          publicationDate: publicationDate\n          url: url\n          patentType: patentType\n        - companyFilingName:\n          - companyFilingName\n          - companyFilingName\n          filingStatus: filingStatus\n          applicationNumber: applicationNumber\n          filingDate: filingDate\n          patentNumber: patentNumber\n          description: description\n          publicationDate: publicationDate\n          url: url\n          patentType: patentType\n      properties:\n        symbol:\n          description: Symbol.\n          type: string\n        data:\n          description: Array of patents.\n          items:\n            $ref: '#/components/schemas/UsptoPatent'\n          type: array\n      type: object\n    UsptoPatent:\n      example:\n        companyFilingName:\n        - companyFilingName\n        - companyFilingName\n        filingStatus: filingStatus\n        applicationNumber: applicationNumber\n        filingDate: filingDate\n        patentNumber: patentNumber\n        description: description\n        publicationDate: publicationDate\n        url: url\n        patentType: patentType\n      properties:\n        applicationNumber:\n          description: Application Number.\n          type: string\n        companyFilingName:\n          description: Array of companies' name on the patent.\n          items:\n            type: string\n          type: array\n        filingDate:\n          description: Filing date.\n          type: string\n        description:\n          description: Description.\n          type: string\n        filingStatus:\n          description: Filing status.\n          type: string\n        patentNumber:\n          description: Patent number.\n          type: string\n        publicationDate:\n          description: Publication date.\n          type: string\n        patentType:\n          description: Patent's type.\n          type: string\n        url:\n          description: URL of the original article.\n          type: string\n      type: object\n    VisaApplicationResult:\n      example:\n        symbol: symbol\n        data:\n        - worksiteCity: worksiteCity\n          symbol: symbol\n          fullTimePosition: fullTimePosition\n          year: 0\n          endDate: endDate\n          h1bDependent: h1bDependent\n          caseStatus: caseStatus\n          jobTitle: jobTitle\n          wageLevel: wageLevel\n          employerName: employerName\n          wageRangeFrom: 1.4658129\n          visaClass: visaClass\n          worksiteCounty: worksiteCounty\n          beginDate: beginDate\n          wageRangeTo: 5.962134\n          caseNumber: caseNumber\n          worksiteAddress: worksiteAddress\n          worksitePostalCode: worksitePostalCode\n          receivedDate: receivedDate\n          socCode: socCode\n          wageUnitOfPay: wageUnitOfPay\n          quarter: 6\n          worksiteState: worksiteState\n        - worksiteCity: worksiteCity\n          symbol: symbol\n          fullTimePosition: fullTimePosition\n          year: 0\n          endDate: endDate\n          h1bDependent: h1bDependent\n          caseStatus: caseStatus\n          jobTitle: jobTitle\n          wageLevel: wageLevel\n          employerName: employerName\n          wageRangeFrom: 1.4658129\n          visaClass: visaClass\n          worksiteCounty: worksiteCounty\n          beginDate: beginDate\n          wageRangeTo: 5.962134\n          caseNumber: caseNumber\n          worksiteAddress: worksiteAddress\n          worksitePostalCode: worksitePostalCode\n          receivedDate: receivedDate\n          socCode: socCode\n          wageUnitOfPay: wageUnitOfPay\n          quarter: 6\n          worksiteState: worksiteState\n      properties:\n        symbol:\n          description: Symbol.\n          type: string\n        data:\n          description: Array of H1b and Permanent visa applications.\n          items:\n            $ref: '#/components/schemas/VisaApplication'\n          type: array\n      type: object\n    LobbyingResult:\n      example:\n        symbol: symbol\n        data:\n        - income: 6.0274563\n          date: date\n          symbol: symbol\n          country: country\n          period: period\n          clientId: clientId\n          year: 0\n          documentUrl: documentUrl\n          registrantId: registrantId\n          description: description\n          postedName: postedName\n          senateId: senateId\n          name: name\n          houseregistrantId: houseregistrantId\n          expenses: 1.4658129\n        - income: 6.0274563\n          date: date\n          symbol: symbol\n          country: country\n          period: period\n          clientId: clientId\n          year: 0\n          documentUrl: documentUrl\n          registrantId: registrantId\n          description: description\n          postedName: postedName\n          senateId: senateId\n          name: name\n          houseregistrantId: houseregistrantId\n          expenses: 1.4658129\n      properties:\n        symbol:\n          description: Symbol.\n          type: string\n        data:\n          description: Array of lobbying activities.\n          items:\n            $ref: '#/components/schemas/LobbyingData'\n          type: array\n      type: object\n    UsaSpendingResult:\n      example:\n        symbol: symbol\n        data:\n        - totalValue: 0.8008282\n          symbol: symbol\n          country: country\n          awardingOfficeName: awardingOfficeName\n          performanceCity: performanceCity\n          recipientParentName: recipientParentName\n          performanceCongressionalDistrict: performanceCongressionalDistrict\n          performanceCounty: performanceCounty\n          performanceStartDate: performanceStartDate\n          awardingAgencyName: awardingAgencyName\n          performanceCountry: performanceCountry\n          performanceZipCode: performanceZipCode\n          awardDescription: awardDescription\n          performanceState: performanceState\n          recipientName: recipientName\n          awardingSubAgencyName: awardingSubAgencyName\n          permalink: permalink\n          actionDate: actionDate\n          performanceEndDate: performanceEndDate\n          naicsCode: naicsCode\n        - totalValue: 0.8008282\n          symbol: symbol\n          country: country\n          awardingOfficeName: awardingOfficeName\n          performanceCity: performanceCity\n          recipientParentName: recipientParentName\n          performanceCongressionalDistrict: performanceCongressionalDistrict\n          performanceCounty: performanceCounty\n          performanceStartDate: performanceStartDate\n          awardingAgencyName: awardingAgencyName\n          performanceCountry: performanceCountry\n          performanceZipCode: performanceZipCode\n          awardDescription: awardDescription\n          performanceState: performanceState\n          recipientName: recipientName\n          awardingSubAgencyName: awardingSubAgencyName\n          permalink: permalink\n          actionDate: actionDate\n          performanceEndDate: performanceEndDate\n          naicsCode: naicsCode\n      properties:\n        symbol:\n          description: Symbol.\n          type: string\n        data:\n          description: Array of government's spending data points.\n          items:\n            $ref: '#/components/schemas/UsaSpending'\n          type: array\n      type: object\n    UsaSpending:\n      example:\n        totalValue: 0.8008282\n        symbol: symbol\n        country: country\n        awardingOfficeName: awardingOfficeName\n        performanceCity: performanceCity\n        recipientParentName: recipientParentName\n        performanceCongressionalDistrict: performanceCongressionalDistrict\n        performanceCounty: performanceCounty\n        performanceStartDate: performanceStartDate\n        awardingAgencyName: awardingAgencyName\n        performanceCountry: performanceCountry\n        performanceZipCode: performanceZipCode\n        awardDescription: awardDescription\n        performanceState: performanceState\n        recipientName: recipientName\n        awardingSubAgencyName: awardingSubAgencyName\n        permalink: permalink\n        actionDate: actionDate\n        performanceEndDate: performanceEndDate\n        naicsCode: naicsCode\n      properties:\n        symbol:\n          description: Symbol.\n          type: string\n        recipientName:\n          description: Company's name.\n          type: string\n        recipientParentName:\n          description: Company's name.\n          type: string\n        awardDescription:\n          description: Description.\n          type: string\n        country:\n          description: Recipient's country.\n          type: string\n        actionDate:\n          description: Period.\n          type: string\n        totalValue:\n          description: Income reported by lobbying firms.\n          format: float\n          type: number\n        performanceStartDate:\n          description: Performance start date.\n          type: string\n        performanceEndDate:\n          description: Performance end date.\n          type: string\n        awardingAgencyName:\n          description: Award agency.\n          type: string\n        awardingSubAgencyName:\n          description: Award sub-agency.\n          type: string\n        awardingOfficeName:\n          description: Award office name.\n          type: string\n        performanceCountry:\n          description: Performance country.\n          type: string\n        performanceCity:\n          description: Performance city.\n          type: string\n        performanceCounty:\n          description: Performance county.\n          type: string\n        performanceState:\n          description: Performance state.\n          type: string\n        performanceZipCode:\n          description: Performance zip code.\n          type: string\n        performanceCongressionalDistrict:\n          description: Performance congressional district.\n          type: string\n        naicsCode:\n          description: NAICS code.\n          type: string\n        permalink:\n          description: Permalink.\n          type: string\n      type: object\n    LobbyingData:\n      example:\n        income: 6.0274563\n        date: date\n        symbol: symbol\n        country: country\n        period: period\n        clientId: clientId\n        year: 0\n        documentUrl: documentUrl\n        registrantId: registrantId\n        description: description\n        postedName: postedName\n        senateId: senateId\n        name: name\n        houseregistrantId: houseregistrantId\n        expenses: 1.4658129\n      properties:\n        symbol:\n          description: Symbol.\n          type: string\n        name:\n          description: Company's name.\n          type: string\n        description:\n          description: Description.\n          type: string\n        country:\n          description: Country.\n          type: string\n        year:\n          description: Year.\n          format: int64\n          type: integer\n        period:\n          description: Period.\n          type: string\n        income:\n          description: Income reported by lobbying firms.\n          format: float\n          type: number\n        expenses:\n          description: Expenses reported by the company.\n          format: float\n          type: number\n        documentUrl:\n          description: Document's URL.\n          type: string\n        postedName:\n          description: Posted name.\n          type: string\n        date:\n          description: Date.\n          type: string\n        clientId:\n          description: Client ID.\n          type: string\n        registrantId:\n          description: Registrant ID.\n          type: string\n        senateId:\n          description: Senate ID.\n          type: string\n        houseregistrantId:\n          description: House registrant ID.\n          type: string\n      type: object\n    BondProfile:\n      example:\n        cusip: cusip\n        callable: true\n        coupon: 0.8008282\n        amountOutstanding: 5.962134\n        figi: figi\n        paymentFrequency: paymentFrequency\n        assetType: assetType\n        firstCouponDate: firstCouponDate\n        securityLevel: securityLevel\n        offeringPrice: 6.0274563\n        industrySubGroup: industrySubGroup\n        originalOffering: 1.4658129\n        maturityDate: maturityDate\n        couponType: couponType\n        bondType: bondType\n        issueDate: issueDate\n        asset: asset\n        debtType: debtType\n        isin: isin\n        industryGroup: industryGroup\n        datedDate: datedDate\n      properties:\n        isin:\n          description: ISIN.\n          type: string\n        cusip:\n          description: Cusip.\n          type: string\n        figi:\n          description: FIGI.\n          type: string\n        coupon:\n          description: Coupon.\n          format: float\n          type: number\n        maturityDate:\n          description: Period.\n          type: string\n        offeringPrice:\n          description: Offering price.\n          format: float\n          type: number\n        issueDate:\n          description: Issue date.\n          type: string\n        bondType:\n          description: Bond type.\n          type: string\n        debtType:\n          description: Bond type.\n          type: string\n        industryGroup:\n          description: Industry.\n          type: string\n        industrySubGroup:\n          description: Sub-Industry.\n          type: string\n        asset:\n          description: Asset.\n          type: string\n        assetType:\n          description: Asset.\n          type: string\n        datedDate:\n          description: Dated date.\n          type: string\n        firstCouponDate:\n          description: First coupon date.\n          type: string\n        originalOffering:\n          description: Offering amount.\n          format: float\n          type: number\n        amountOutstanding:\n          description: Outstanding amount.\n          format: float\n          type: number\n        paymentFrequency:\n          description: Payment frequency.\n          type: string\n        securityLevel:\n          description: Security level.\n          type: string\n        callable:\n          description: Callable.\n          type: boolean\n        couponType:\n          description: Coupon type.\n          type: string\n      type: object\n    BondCandles:\n      example:\n        c:\n        - 0.8008282\n        - 0.8008282\n        s: s\n        t:\n        - 6\n        - 6\n      properties:\n        c:\n          description: List of close prices for returned candles.\n          items:\n            format: float\n            type: number\n          type: array\n        t:\n          description: List of timestamp for returned candles.\n          items:\n            format: int64\n            type: integer\n          type: array\n        s:\n          description: Status of the response. This field can either be ok or no_data.\n          type: string\n      type: object\n    VisaApplication:\n      example:\n        worksiteCity: worksiteCity\n        symbol: symbol\n        fullTimePosition: fullTimePosition\n        year: 0\n        endDate: endDate\n        h1bDependent: h1bDependent\n        caseStatus: caseStatus\n        jobTitle: jobTitle\n        wageLevel: wageLevel\n        employerName: employerName\n        wageRangeFrom: 1.4658129\n        visaClass: visaClass\n        worksiteCounty: worksiteCounty\n        beginDate: beginDate\n        wageRangeTo: 5.962134\n        caseNumber: caseNumber\n        worksiteAddress: worksiteAddress\n        worksitePostalCode: worksitePostalCode\n        receivedDate: receivedDate\n        socCode: socCode\n        wageUnitOfPay: wageUnitOfPay\n        quarter: 6\n        worksiteState: worksiteState\n      properties:\n        year:\n          description: Year.\n          format: int64\n          type: integer\n        quarter:\n          description: Quarter.\n          format: int64\n          type: integer\n        symbol:\n          description: Symbol.\n          type: string\n        caseNumber:\n          description: Case number.\n          type: string\n        caseStatus:\n          description: Case status.\n          type: string\n        receivedDate:\n          description: Received date.\n          type: string\n        visaClass:\n          description: Visa class.\n          type: string\n        jobTitle:\n          description: Job Title.\n          type: string\n        socCode:\n          description: SOC Code. A list of SOC code can be found \u003ca href=\"https://www.bls.gov/oes/current/oes_stru.htm\"\n            target=\"_blank\"\u003ehere\u003c/a\u003e.\n          type: string\n        fullTimePosition:\n          description: Full-time position flag.\n          type: string\n        beginDate:\n          description: Job's start date.\n          type: string\n        endDate:\n          description: Job's end date.\n          type: string\n        employerName:\n          description: Company's name.\n          type: string\n        worksiteAddress:\n          description: Worksite address.\n          type: string\n        worksiteCity:\n          description: Worksite city.\n          type: string\n        worksiteCounty:\n          description: Worksite county.\n          type: string\n        worksiteState:\n          description: Worksite state.\n          type: string\n        worksitePostalCode:\n          description: Worksite postal code.\n          type: string\n        wageRangeFrom:\n          description: Wage range from.\n          format: float\n          type: number\n        wageRangeTo:\n          description: Wage range to.\n          format: float\n          type: number\n        wageUnitOfPay:\n          description: Wage unit of pay.\n          type: string\n        wageLevel:\n          description: Wage level.\n          type: string\n        h1bDependent:\n          description: H1B dependent flag.\n          type: string\n      type: object\n  securitySchemes:\n    api_key:\n      in: query\n      name: token\n      type: apiKey\nx-original-swagger-version: \"2.0\"\n",
			"canonicalURL": "/github.com/Finnhub-Stock-API/finnhub-go@ecdb3768cabb3b225ece79ae665444f5fa8e10fd/-/blob/api/openapi.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/Finnhub-Stock-API/finnhub-go/blob/ecdb3768cabb3b225ece79ae665444f5fa8e10fd/api/openapi.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "parse: parse spec: parse components: schemas: at api/openapi.yaml:7138:5: invalid name: \"Economic event\" doesn't match \"^[a-zA-Z0-9.\\\\-_]+$\""
}