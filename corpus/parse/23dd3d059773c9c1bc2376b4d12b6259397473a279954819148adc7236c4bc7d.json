{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/APIs-guru/openapi-directory"
		},
		"file": {
			"name": "openapi.yaml",
			"size": 0,
			"path": "APIs/ote-godaddy.com/subscriptions/1.0.0/openapi.yaml",
			"byteSize": 35580,
			"content": "openapi: 3.0.0\nservers:\n  - url: //api.ote-godaddy.com\ninfo:\n  title: \"\"\n  version: 1.0.0\n  x-apisguru-categories:\n    - hosting\n  x-origin:\n    - format: swagger\n      url: https://developer.godaddy.com/swagger/swagger_subscriptions.json\n      version: \"2.0\"\n  x-providerName: ote-godaddy.com\n  x-serviceName: subscriptions\ntags:\n  - description: \"\"\n    name: v1\npaths:\n  /v1/subscriptions:\n    get:\n      operationId: list\n      parameters:\n        - description: Shopper ID to return subscriptions for when not using JWT\n          in: header\n          name: X-Shopper-Id\n          required: false\n          schema:\n            type: string\n        - description: The market that the response should be formatted for\n          in: header\n          name: X-Market-Id\n          required: false\n          schema:\n            default: en-US\n            type: string\n        - description: Only return Subscriptions with the specified product groups\n          explode: false\n          in: query\n          name: productGroupKeys\n          required: false\n          schema:\n            items:\n              type: string\n            type: array\n          style: form\n        - description: Optional details to be included in the response\n          explode: false\n          in: query\n          name: includes\n          required: false\n          schema:\n            enum:\n              - addons\n              - relations\n            items:\n              type: string\n            type: array\n          style: form\n        - description: Number of Subscriptions to skip before starting to return paged results (must be a multiple of the limit)\n          in: query\n          name: offset\n          required: false\n          schema:\n            default: 0\n            type: integer\n        - description: Number of Subscriptions to retrieve in this page, starting after offset\n          in: query\n          name: limit\n          required: false\n          schema:\n            default: 25\n            maximum: 2000\n            minimum: 1\n            type: integer\n        - description: Property name that will be used to sort results. \"-\" indicates descending\n          in: query\n          name: sort\n          required: false\n          schema:\n            default: -expiresAt\n            enum:\n              - expiresAt\n              - -expiresAt\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/javascript:\n              schema:\n                $ref: \"#/components/schemas/SubscriptionList\"\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/SubscriptionList\"\n            application/xml:\n              schema:\n                $ref: \"#/components/schemas/SubscriptionList\"\n            text/javascript:\n              schema:\n                $ref: \"#/components/schemas/SubscriptionList\"\n            text/xml:\n              schema:\n                $ref: \"#/components/schemas/SubscriptionList\"\n          description: Request was successful\n        \"400\":\n          content:\n            application/javascript:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n            application/xml:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n            text/javascript:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n            text/xml:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n          description: Request was malformed\n        \"401\":\n          content:\n            application/javascript:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n            application/xml:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n            text/javascript:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n            text/xml:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n          description: Authentication info not sent or invalid\n        \"403\":\n          content:\n            application/javascript:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n            application/xml:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n            text/javascript:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n            text/xml:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n          description: Authenticated user is not allowed access\n        \"422\":\n          content:\n            application/javascript:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n            application/xml:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n            text/javascript:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n            text/xml:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n          description: Invalid query parameter (custom message returned for each parameter)\n        \"429\":\n          content:\n            application/javascript:\n              schema:\n                $ref: \"#/components/schemas/ErrorLimit\"\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorLimit\"\n            application/xml:\n              schema:\n                $ref: \"#/components/schemas/ErrorLimit\"\n            text/javascript:\n              schema:\n                $ref: \"#/components/schemas/ErrorLimit\"\n            text/xml:\n              schema:\n                $ref: \"#/components/schemas/ErrorLimit\"\n          description: Too many requests received within interval\n        \"500\":\n          content:\n            application/javascript:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n            application/xml:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n            text/javascript:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n            text/xml:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n          description: Internal server error\n      summary: Retrieve a list of Subscriptions for the specified Shopper\n      tags:\n        - v1\n  /v1/subscriptions/productGroups:\n    get:\n      operationId: productGroups\n      parameters:\n        - description: Shopper ID to return data for when not using JWT\n          in: header\n          name: X-Shopper-Id\n          required: false\n          schema:\n            type: string\n        - description: The market that the response should be formatted for\n          in: header\n          name: X-Market-Id\n          required: false\n          schema:\n            default: en-US\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/javascript:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/ProductGroup\"\n                type: array\n            application/json:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/ProductGroup\"\n                type: array\n            application/xml:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/ProductGroup\"\n                type: array\n            text/javascript:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/ProductGroup\"\n                type: array\n            text/xml:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/ProductGroup\"\n                type: array\n          description: Request was successful\n        \"400\":\n          content:\n            application/javascript:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n            application/xml:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n            text/javascript:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n            text/xml:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n          description: Request was malformed\n        \"401\":\n          content:\n            application/javascript:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n            application/xml:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n            text/javascript:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n            text/xml:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n          description: Authentication info not sent or invalid\n        \"403\":\n          content:\n            application/javascript:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n            application/xml:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n            text/javascript:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n            text/xml:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n          description: Authenticated user is not allowed access\n        \"429\":\n          content:\n            application/javascript:\n              schema:\n                $ref: \"#/components/schemas/ErrorLimit\"\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorLimit\"\n            application/xml:\n              schema:\n                $ref: \"#/components/schemas/ErrorLimit\"\n            text/javascript:\n              schema:\n                $ref: \"#/components/schemas/ErrorLimit\"\n            text/xml:\n              schema:\n                $ref: \"#/components/schemas/ErrorLimit\"\n          description: Too many requests received within interval\n        \"500\":\n          content:\n            application/javascript:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n            application/xml:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n            text/javascript:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n            text/xml:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n          description: Internal server error\n      summary: Retrieve a list of ProductGroups for the specified Shopper\n      tags:\n        - v1\n  \"/v1/subscriptions/{subscriptionId}\":\n    delete:\n      operationId: cancel\n      parameters:\n        - description: Shopper ID to cancel subscriptions for when not using JWT\n          in: header\n          name: X-Shopper-Id\n          required: false\n          schema:\n            type: string\n        - description: Unique identifier of the Subscription to cancel\n          in: path\n          name: subscriptionId\n          required: true\n          schema:\n            type: string\n      responses:\n        \"204\":\n          description: Request was successful\n        \"400\":\n          content:\n            application/javascript:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n            application/xml:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n            text/javascript:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n            text/xml:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n          description: Request was malformed\n        \"401\":\n          content:\n            application/javascript:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n            application/xml:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n            text/javascript:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n            text/xml:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n          description: Authentication info not sent or invalid\n        \"403\":\n          content:\n            application/javascript:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n            application/xml:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n            text/javascript:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n            text/xml:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n          description: Authenticated user is not allowed access\n        \"404\":\n          content:\n            application/javascript:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n            application/xml:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n            text/javascript:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n            text/xml:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n          description: Resource not found\n        \"422\":\n          content:\n            application/javascript:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n            application/xml:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n            text/javascript:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n            text/xml:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n          description: Failed to determine if the domain is protected (invalid domain ID)<br>Invalid Subscription Id<br>The Office 365 Subscription cannot be cancelled (shopper is migrating)<br>The Subscription cannot be cancelled<br>The Subscription cannot be cancelled (PFID is disabled for cancellation)<br>The Subscription cannot be cancelled (domain is protected)<br>The domain alert Subscription cannot be cancelled\n        \"429\":\n          content:\n            application/javascript:\n              schema:\n                $ref: \"#/components/schemas/ErrorLimit\"\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorLimit\"\n            application/xml:\n              schema:\n                $ref: \"#/components/schemas/ErrorLimit\"\n            text/javascript:\n              schema:\n                $ref: \"#/components/schemas/ErrorLimit\"\n            text/xml:\n              schema:\n                $ref: \"#/components/schemas/ErrorLimit\"\n          description: Too many requests received within interval\n        \"500\":\n          content:\n            application/javascript:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n            application/xml:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n            text/javascript:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n            text/xml:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n          description: Failed to determine if the Office 365 account is migrating<br>Failed to determine if the domain alert is cancellable<br>Failed to determine if the domain is protected<br>Internal server error\n        \"504\":\n          content:\n            application/javascript:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n            application/xml:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n            text/javascript:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n            text/xml:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n          description: Gateway timeout\n      summary: Cancel the specified Subscription\n      tags:\n        - v1\n    get:\n      operationId: get\n      parameters:\n        - description: Shopper ID to be operated on, if different from JWT\n          in: header\n          name: X-Shopper-Id\n          required: false\n          schema:\n            type: string\n        - description: Unique identifier of the Market in which the request is happening\n          in: header\n          name: X-Market-Id\n          required: false\n          schema:\n            default: en-US\n            type: string\n        - description: Unique identifier of the Subscription to retrieve\n          in: path\n          name: subscriptionId\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/javascript:\n              schema:\n                $ref: \"#/components/schemas/Subscription\"\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Subscription\"\n            application/xml:\n              schema:\n                $ref: \"#/components/schemas/Subscription\"\n            text/javascript:\n              schema:\n                $ref: \"#/components/schemas/Subscription\"\n            text/xml:\n              schema:\n                $ref: \"#/components/schemas/Subscription\"\n          description: Request was successful\n        \"400\":\n          content:\n            application/javascript:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n            application/xml:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n            text/javascript:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n            text/xml:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n          description: Request was malformed\n        \"401\":\n          content:\n            application/javascript:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n            application/xml:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n            text/javascript:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n            text/xml:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n          description: Authentication info not sent or invalid\n        \"403\":\n          content:\n            application/javascript:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n            application/xml:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n            text/javascript:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n            text/xml:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n          description: Authenticated user is not allowed access\n        \"404\":\n          content:\n            application/javascript:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n            application/xml:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n            text/javascript:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n            text/xml:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n          description: Resource not found\n        \"422\":\n          content:\n            application/javascript:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n            application/xml:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n            text/javascript:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n            text/xml:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n          description: Invalid Subscription Id\n        \"429\":\n          content:\n            application/javascript:\n              schema:\n                $ref: \"#/components/schemas/ErrorLimit\"\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorLimit\"\n            application/xml:\n              schema:\n                $ref: \"#/components/schemas/ErrorLimit\"\n            text/javascript:\n              schema:\n                $ref: \"#/components/schemas/ErrorLimit\"\n            text/xml:\n              schema:\n                $ref: \"#/components/schemas/ErrorLimit\"\n          description: Too many requests received within interval\n        \"500\":\n          content:\n            application/javascript:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n            application/xml:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n            text/javascript:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n            text/xml:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n          description: Internal server error\n        \"504\":\n          content:\n            application/javascript:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n            application/xml:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n            text/javascript:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n            text/xml:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n          description: Gateway timeout\n      summary: Retrieve details for the specified Subscription\n      tags:\n        - v1\n    patch:\n      description: Only Subscription properties that can be changed without immediate financial impact can be modified via PATCH, whereas some properties can be changed by purchasing a renewal<br/><strong>This endpoint only supports JWT authentication</strong>\n      operationId: update\n      parameters:\n        - description: Unique identifier of the Subscription to update\n          in: path\n          name: subscriptionId\n          required: true\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/SubscriptionUpdate\"\n          application/x-www-form-urlencoded:\n            schema:\n              $ref: \"#/components/schemas/SubscriptionUpdate\"\n          application/xml:\n            schema:\n              $ref: \"#/components/schemas/SubscriptionUpdate\"\n          text/xml:\n            schema:\n              $ref: \"#/components/schemas/SubscriptionUpdate\"\n        description: Details of the Subscription to change\n        required: true\n      responses:\n        \"204\":\n          description: Request was successful\n        \"400\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n            application/xml:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n          description: Request was malformed\n        \"401\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n            application/xml:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n          description: Authentication info not sent or invalid\n        \"403\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n            application/xml:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n          description: Authenticated user is not allowed access <br> This method only supports JWT authentication\n        \"404\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n            application/xml:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n          description: Subscription not found <br> Payment profile not found\n        \"500\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n            application/xml:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n          description: Internal server error\n      summary: Update details for the specified Subscription\n      tags:\n        - v1\ncomponents:\n  schemas:\n    Error:\n      properties:\n        code:\n          description: Short identifier for the error, suitable for indicating the specific error within client code\n          format: constant\n          type: string\n        fields:\n          description: List of the specific fields, and the errors found with their contents\n          items:\n            $ref: \"#/components/schemas/ErrorField\"\n          type: array\n        message:\n          description: Human-readable, English description of the error\n          type: string\n      required:\n        - code\n    ErrorField:\n      properties:\n        code:\n          description: Short identifier for the error, suitable for indicating the specific error within client code\n          format: constant\n          type: string\n        message:\n          description: Human-readable, English description of the problem with the contents of the field\n          type: string\n        path:\n          description: |-\n            <ul>\n            <li style='margin-left: 12px;'>JSONPath referring to a field containing an error</li>\n            <strong style='margin-left: 12px;'>OR</strong>\n            <li style='margin-left: 12px;'>JSONPath referring to a field that refers to an object containing an error, with more detail in `pathRelated`</li>\n            </ul>\n          format: json-path\n          type: string\n        pathRelated:\n          description: JSONPath referring to a field containing an error, which is referenced by `path`\n          format: json-path\n          type: string\n      required:\n        - path\n        - code\n    ErrorLimit:\n      properties:\n        code:\n          description: Short identifier for the error, suitable for indicating the specific error within client code\n          format: constant\n          type: string\n        fields:\n          description: List of the specific fields, and the errors found with their contents\n          items:\n            $ref: \"#/components/schemas/ErrorField\"\n          type: array\n        message:\n          description: Human-readable, English description of the error\n          type: string\n        retryAfterSec:\n          description: Number of seconds to wait before attempting a similar request\n          format: integer-positive\n          type: integer\n      required:\n        - retryAfterSec\n        - code\n    Pagination:\n      properties:\n        first:\n          description: URI to access the first page\n          type: string\n        last:\n          description: URI to access the last page\n          type: string\n        next:\n          description: URI to access the next page\n          type: string\n        previous:\n          description: URI to access the previous page\n          type: string\n        total:\n          description: Number of records available\n          type: integer\n    ProductGroup:\n      properties:\n        productGroupKey:\n          description: Primary key of a grouping of related Subscriptions\n          type: string\n        subscriptionCount:\n          description: The number of Subscriptions that the shopper owns in this group\n          type: integer\n      required:\n        - productGroupKey\n        - subscriptionCount\n    Subscription:\n      properties:\n        addons:\n          description: An array of additional products that have been purchased to augment this Subscription\n          items:\n            $ref: \"#/components/schemas/SubscriptionAddon\"\n          type: array\n        billing:\n          $ref: \"#/components/schemas/SubscriptionBilling\"\n        cancelable:\n          description: Whether or not the Subscription is allowed to be canceled\n          type: boolean\n        createdAt:\n          description: When the Subscription was created\n          format: iso-datetime\n          type: string\n        expiresAt:\n          description: When the Subscription will expire\n          format: iso-datetime\n          type: string\n        label:\n          description: A human readable description of this Subscription\n          type: string\n        launchUrl:\n          description: The url to use or manage this Subscription's active product\n          format: url\n          type: string\n        paymentProfileId:\n          description: Unique identifier of the payment profile that will be used to automatically renew this Subscription\n          type: integer\n        priceLocked:\n          description: Whether the renewal price will be based from the list price or a locked-in price for this shopper\n          type: boolean\n        product:\n          $ref: \"#/components/schemas/SubscriptionProduct\"\n        relations:\n          $ref: \"#/components/schemas/SubscriptionRelations\"\n        renewAuto:\n          description: Whether or not the Subscription is set to be automatically renewed via the billing agent\n          type: boolean\n        renewable:\n          description: Whether or not the Subscription is allowed to be renewed\n          type: boolean\n        status:\n          description: Whether the Subscription is active or the specific non-active state\n          enum:\n            - ACTIVE\n            - PENDING\n            - CANCELED\n          type: string\n        subscriptionId:\n          description: Unique identifier of the Subscription\n          type: string\n        upgradeable:\n          description: Whether or not the Subscription is allowed to be upgraded\n          type: boolean\n      required:\n        - subscriptionId\n        - status\n        - product\n        - createdAt\n        - billing\n        - renewable\n        - upgradeable\n        - priceLocked\n        - renewAuto\n    SubscriptionAddon:\n      properties:\n        commitment:\n          description: The financial commitment the customer has in the product\n          enum:\n            - PAID\n            - FREE\n            - TRIAL\n          type: string\n        pfid:\n          description: Unique identifier of the add-in product\n          type: integer\n        quantity:\n          type: integer\n      required:\n        - pfid\n        - commitment\n        - quantity\n    SubscriptionBilling:\n      properties:\n        commitment:\n          description: The financial commitment the customer has in the product\n          enum:\n            - PAID\n            - FREE\n            - TRIAL\n          type: string\n        pastDueTypes:\n          description: The types of charges that are past due when `status` is PAST_DUE\n          items:\n            enum:\n              - ADDON\n              - BURST\n              - SUBSCRIPTION\n            type: string\n          type: array\n        renewAt:\n          description: The point in time after which the Subscription will bill for automatic renewal\n          format: iso-datetime\n          type: string\n        status:\n          description: Whether payments are past due\n          enum:\n            - CURRENT\n            - PAST_DUE\n          type: string\n      required:\n        - renewAt\n        - status\n        - commitment\n    SubscriptionList:\n      properties:\n        pagination:\n          $ref: \"#/components/schemas/Pagination\"\n        subscriptions:\n          description: A collection of subscriptions\n          items:\n            $ref: \"#/components/schemas/Subscription\"\n          type: array\n      required:\n        - subscriptions\n        - pagination\n    SubscriptionProduct:\n      properties:\n        label:\n          description: A human readable description of the Product that is subscribed\n          type: string\n        namespace:\n          description: Grouping of related Subscriptions\n          type: string\n        pfid:\n          description: Unique identifier of the Product that is subscribed\n          type: integer\n        productGroupKey:\n          description: Primary key of a grouping of related Subscriptions\n          type: string\n        renewalPeriod:\n          description: The number of `renewalPeriodUnits` that will be added by the `renewalPfid`\n          type: integer\n        renewalPeriodUnit:\n          description: The unit of time that `renewalPeriod` is measured in\n          enum:\n            - MONTH\n            - QUARTER\n            - SEMI_ANNUAL\n            - YEAR\n          type: string\n        renewalPfid:\n          description: Unique identifier of the renewal Product\n          type: integer\n        supportBillOn:\n          description: Whether the product supports the `billOn` option on the renewal endpoint\n          type: boolean\n      required:\n        - pfid\n        - label\n        - renewalPfid\n        - renewalPeriod\n        - renewalPeriodUnit\n        - productGroupKey\n        - supportBillOn\n        - namespace\n    SubscriptionRelations:\n      properties:\n        children:\n          description: A set of related Subscriptions that will be canceled automatically if this Subscription is canceled\n          items:\n            type: string\n          type: array\n        parent:\n          description: Unique identifier of this Subscription's parent\n          type: string\n    SubscriptionUpdate:\n      properties:\n        paymentProfileId:\n          description: Unique identifier of the payment profile you want to be used for automatic renewal\n          type: integer\n        renewAuto:\n          description: Whether or not you want the Subscription renew automatically\n          type: boolean\n",
			"canonicalURL": "/github.com/APIs-guru/openapi-directory@3237843a76543b0ee2c1e5f65e28ec6b526e8700/-/blob/APIs/ote-godaddy.com/subscriptions/1.0.0/openapi.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/APIs-guru/openapi-directory/blob/3237843a76543b0ee2c1e5f65e28ec6b526e8700/APIs/ote-godaddy.com/subscriptions/1.0.0/openapi.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "parse: parse spec: parse operations: path \"/v1/subscriptions\": at 1:7842: get: operation \"list\": at 1:7849: parameters: parse parameter \"includes\": at 1:8426: schema: at 1:8564: parse enum values: parse value \"\\\"addons\\\"\": expected type \"array\", got \"string\""
}