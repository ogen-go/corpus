{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/APIs-guru/openapi-directory"
		},
		"file": {
			"name": "openapi.yaml",
			"size": 0,
			"path": "APIs/amazonaws.com/codeartifact/2018-09-22/openapi.yaml",
			"byteSize": 210727,
			"content": "openapi: 3.0.0\ninfo:\n  version: '2018-09-22'\n  x-release: v4\n  title: CodeArtifact\n  description: '<p> AWS CodeArtifact is a fully managed artifact repository compatible with language-native package managers and build tools such as npm, Apache Maven, and pip. You can use CodeArtifact to share packages with development teams and pull packages. Packages can be pulled from both public and CodeArtifact repositories. You can also create an upstream relationship between a CodeArtifact repository and another repository, which effectively merges their contents from the point of view of a package manager client. </p> <p> <b>AWS CodeArtifact Components</b> </p> <p>Use the information in this guide to help you work with the following CodeArtifact components:</p> <ul> <li> <p> <b>Repository</b>: A CodeArtifact repository contains a set of <a href=\"https://docs.aws.amazon.com/codeartifact/latest/ug/welcome.html#welcome-concepts-package-version\">package versions</a>, each of which maps to a set of assets, or files. Repositories are polyglot, so a single repository can contain packages of any supported type. Each repository exposes endpoints for fetching and publishing packages using tools like the <b> <code>npm</code> </b> CLI, the Maven CLI (<b> <code>mvn</code> </b>), and <b> <code>pip</code> </b>.</p> </li> <li> <p> <b>Domain</b>: Repositories are aggregated into a higher-level entity known as a <i>domain</i>. All package assets and metadata are stored in the domain, but are consumed through repositories. A given package asset, such as a Maven JAR file, is stored once per domain, no matter how many repositories it''s present in. All of the assets and metadata in a domain are encrypted with the same customer master key (CMK) stored in AWS Key Management Service (AWS KMS).</p> <p>Each repository is a member of a single domain and can''t be moved to a different domain.</p> <p>The domain allows organizational policy to be applied across multiple repositories, such as which accounts can access repositories in the domain, and which public repositories can be used as sources of packages.</p> <p>Although an organization can have multiple domains, we recommend a single production domain that contains all published artifacts so that teams can find and share packages across their organization.</p> </li> <li> <p> <b>Package</b>: A <i>package</i> is a bundle of software and the metadata required to resolve dependencies and install the software. CodeArtifact supports <a href=\"https://docs.aws.amazon.com/codeartifact/latest/ug/using-npm.html\">npm</a>, <a href=\"https://docs.aws.amazon.com/codeartifact/latest/ug/using-python.html\">PyPI</a>, and <a href=\"https://docs.aws.amazon.com/codeartifact/latest/ug/using-maven\">Maven</a> package formats.</p> <p>In CodeArtifact, a package consists of:</p> <ul> <li> <p>A <i>name</i> (for example, <code>webpack</code> is the name of a popular npm package)</p> </li> <li> <p>An optional namespace (for example, <code>@types</code> in <code>@types/node</code>)</p> </li> <li> <p>A set of versions (for example, <code>1.0.0</code>, <code>1.0.1</code>, <code>1.0.2</code>, etc.)</p> </li> <li> <p> Package-level metadata (for example, npm tags)</p> </li> </ul> </li> <li> <p> <b>Package version</b>: A version of a package, such as <code>@types/node 12.6.9</code>. The version number format and semantics vary for different package formats. For example, npm package versions must conform to the <a href=\"https://semver.org/\">Semantic Versioning specification</a>. In CodeArtifact, a package version consists of the version identifier, metadata at the package version level, and a set of assets.</p> </li> <li> <p> <b>Upstream repository</b>: One repository is <i>upstream</i> of another when the package versions in it can be accessed from the repository endpoint of the downstream repository, effectively merging the contents of the two repositories from the point of view of a client. CodeArtifact allows creating an upstream relationship between two repositories.</p> </li> <li> <p> <b>Asset</b>: An individual file stored in CodeArtifact associated with a package version, such as an npm <code>.tgz</code> file or Maven POM and JAR files.</p> </li> </ul> <p>CodeArtifact supports these operations:</p> <ul> <li> <p> <code>AssociateExternalConnection</code>: Adds an existing external connection to a repository. </p> </li> <li> <p> <code>CopyPackageVersions</code>: Copies package versions from one repository to another repository in the same domain.</p> </li> <li> <p> <code>CreateDomain</code>: Creates a domain</p> </li> <li> <p> <code>CreateRepository</code>: Creates a CodeArtifact repository in a domain. </p> </li> <li> <p> <code>DeleteDomain</code>: Deletes a domain. You cannot delete a domain that contains repositories. </p> </li> <li> <p> <code>DeleteDomainPermissionsPolicy</code>: Deletes the resource policy that is set on a domain.</p> </li> <li> <p> <code>DeletePackageVersions</code>: Deletes versions of a package. After a package has been deleted, it can be republished, but its assets and metadata cannot be restored because they have been permanently removed from storage.</p> </li> <li> <p> <code>DeleteRepository</code>: Deletes a repository. </p> </li> <li> <p> <code>DeleteRepositoryPermissionsPolicy</code>: Deletes the resource policy that is set on a repository.</p> </li> <li> <p> <code>DescribeDomain</code>: Returns a <code>DomainDescription</code> object that contains information about the requested domain.</p> </li> <li> <p> <code>DescribePackageVersion</code>: Returns a <a href=\"https://docs.aws.amazon.com/codeartifact/latest/APIReference/API_PackageVersionDescription.html\">PackageVersionDescription</a> object that contains details about a package version. </p> </li> <li> <p> <code>DescribeRepository</code>: Returns a <code>RepositoryDescription</code> object that contains detailed information about the requested repository. </p> </li> <li> <p> <code>DisposePackageVersions</code>: Disposes versions of a package. A package version with the status <code>Disposed</code> cannot be restored because they have been permanently removed from storage.</p> </li> <li> <p> <code>DisassociateExternalConnection</code>: Removes an existing external connection from a repository. </p> </li> <li> <p> <code>GetAuthorizationToken</code>: Generates a temporary authorization token for accessing repositories in the domain. The token expires the authorization period has passed. The default authorization period is 12 hours and can be customized to any length with a maximum of 12 hours.</p> </li> <li> <p> <code>GetDomainPermissionsPolicy</code>: Returns the policy of a resource that is attached to the specified domain. </p> </li> <li> <p> <code>GetPackageVersionAsset</code>: Returns the contents of an asset that is in a package version. </p> </li> <li> <p> <code>GetPackageVersionReadme</code>: Gets the readme file or descriptive text for a package version.</p> </li> <li> <p> <code>GetRepositoryEndpoint</code>: Returns the endpoint of a repository for a specific package format. A repository has one endpoint for each package format: </p> <ul> <li> <p> <code>npm</code> </p> </li> <li> <p> <code>pypi</code> </p> </li> <li> <p> <code>maven</code> </p> </li> </ul> </li> <li> <p> <code>GetRepositoryPermissionsPolicy</code>: Returns the resource policy that is set on a repository. </p> </li> <li> <p> <code>ListDomains</code>: Returns a list of <code>DomainSummary</code> objects. Each returned <code>DomainSummary</code> object contains information about a domain.</p> </li> <li> <p> <code>ListPackages</code>: Lists the packages in a repository.</p> </li> <li> <p> <code>ListPackageVersionAssets</code>: Lists the assets for a given package version.</p> </li> <li> <p> <code>ListPackageVersionDependencies</code>: Returns a list of the direct dependencies for a package version. </p> </li> <li> <p> <code>ListPackageVersions</code>: Returns a list of package versions for a specified package in a repository.</p> </li> <li> <p> <code>ListRepositories</code>: Returns a list of repositories owned by the AWS account that called this method.</p> </li> <li> <p> <code>ListRepositoriesInDomain</code>: Returns a list of the repositories in a domain.</p> </li> <li> <p> <code>PutDomainPermissionsPolicy</code>: Attaches a resource policy to a domain.</p> </li> <li> <p> <code>PutRepositoryPermissionsPolicy</code>: Sets the resource policy on a repository that specifies permissions to access it. </p> </li> <li> <p> <code>UpdatePackageVersionsStatus</code>: Updates the status of one or more versions of a package.</p> </li> <li> <p> <code>UpdateRepository</code>: Updates the properties of a repository.</p> </li> </ul>'\n  x-logo:\n    url: 'https://twitter.com/awscloud/profile_image?size=original'\n    backgroundColor: '#FFFFFF'\n  termsOfService: 'https://aws.amazon.com/service-terms/'\n  contact:\n    name: Mike Ralphson\n    email: mike.ralphson@gmail.com\n    url: 'https://github.com/mermade/aws2openapi'\n    x-twitter: PermittedSoc\n  license:\n    name: Apache 2.0 License\n    url: 'http://www.apache.org/licenses/'\n  x-providerName: amazonaws.com\n  x-serviceName: codeartifact\n  x-aws-signingName: codeartifact\n  x-origin:\n    - contentType: application/json\n      url: 'https://raw.githubusercontent.com/aws/aws-sdk-js/master/apis/codeartifact-2018-09-22.normal.json'\n      converter:\n        url: 'https://github.com/mermade/aws2openapi'\n        version: 1.0.0\n      x-apisguru-driver: external\n  x-apiClientRegistration:\n    url: 'https://portal.aws.amazon.com/gp/aws/developer/registration/index.html?nc2=h_ct'\n  x-apisguru-categories:\n    - cloud\n  x-preferred: true\nexternalDocs:\n  description: Amazon Web Services documentation\n  url: 'https://docs.aws.amazon.com/codeartifact/'\nservers:\n  - url: 'http://codeartifact.{region}.amazonaws.com'\n    variables:\n      region:\n        description: The AWS region\n        enum:\n          - us-east-1\n          - us-east-2\n          - us-west-1\n          - us-west-2\n          - us-gov-west-1\n          - us-gov-east-1\n          - ca-central-1\n          - eu-north-1\n          - eu-west-1\n          - eu-west-2\n          - eu-west-3\n          - eu-central-1\n          - eu-south-1\n          - af-south-1\n          - ap-northeast-1\n          - ap-northeast-2\n          - ap-northeast-3\n          - ap-southeast-1\n          - ap-southeast-2\n          - ap-east-1\n          - ap-south-1\n          - sa-east-1\n          - me-south-1\n        default: us-east-1\n    description: The CodeArtifact multi-region endpoint\n  - url: 'https://codeartifact.{region}.amazonaws.com'\n    variables:\n      region:\n        description: The AWS region\n        enum:\n          - us-east-1\n          - us-east-2\n          - us-west-1\n          - us-west-2\n          - us-gov-west-1\n          - us-gov-east-1\n          - ca-central-1\n          - eu-north-1\n          - eu-west-1\n          - eu-west-2\n          - eu-west-3\n          - eu-central-1\n          - eu-south-1\n          - af-south-1\n          - ap-northeast-1\n          - ap-northeast-2\n          - ap-northeast-3\n          - ap-southeast-1\n          - ap-southeast-2\n          - ap-east-1\n          - ap-south-1\n          - sa-east-1\n          - me-south-1\n        default: us-east-1\n    description: The CodeArtifact multi-region endpoint\n  - url: 'http://codeartifact.{region}.amazonaws.com.cn'\n    variables:\n      region:\n        description: The AWS region\n        enum:\n          - cn-north-1\n          - cn-northwest-1\n        default: cn-north-1\n    description: The CodeArtifact endpoint for China (Beijing) and China (Ningxia)\n  - url: 'https://codeartifact.{region}.amazonaws.com.cn'\n    variables:\n      region:\n        description: The AWS region\n        enum:\n          - cn-north-1\n          - cn-northwest-1\n        default: cn-north-1\n    description: The CodeArtifact endpoint for China (Beijing) and China (Ningxia)\nx-hasEquivalentPaths: true\npaths:\n  /v1/repository/external-connection#domain&repository&external-connection:\n    post:\n      operationId: AssociateExternalConnection\n      description: '<p>Adds an existing external connection to a repository. One external connection is allowed per repository.</p> <note> <p>A repository can have one or more upstream repositories, or an external connection.</p> </note>'\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AssociateExternalConnectionResult'\n        '480':\n          description: AccessDeniedException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AccessDeniedException'\n        '481':\n          description: ConflictException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ConflictException'\n        '482':\n          description: InternalServerException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InternalServerException'\n        '483':\n          description: ResourceNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResourceNotFoundException'\n        '484':\n          description: ServiceQuotaExceededException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ServiceQuotaExceededException'\n        '485':\n          description: ThrottlingException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ThrottlingException'\n        '486':\n          description: ValidationException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ValidationException'\n      parameters:\n        - name: domain\n          in: query\n          required: true\n          description: The name of the domain that contains the repository.\n          schema:\n            type: string\n            pattern: '[a-z][a-z0-9\\-]{0,48}[a-z0-9]'\n            minLength: 2\n            maxLength: 50\n        - name: domain-owner\n          in: query\n          required: false\n          description: ' The 12-digit account number of the AWS account that owns the domain. It does not include dashes or spaces. '\n          schema:\n            type: string\n            pattern: '[0-9]{12}'\n            minLength: 12\n            maxLength: 12\n        - name: repository\n          in: query\n          required: true\n          description: ' The name of the repository to which the external connection is added. '\n          schema:\n            type: string\n            pattern: '[A-Za-z0-9][A-Za-z0-9._\\-]{1,99}'\n            minLength: 2\n            maxLength: 100\n        - name: external-connection\n          in: query\n          required: true\n          description: '<p> The name of the external connection to add to the repository. The following values are supported: </p> <ul> <li> <p> <code>public:npmjs</code> - for the npm public repository. </p> </li> <li> <p> <code>public:pypi</code> - for the Python Package Index. </p> </li> <li> <p> <code>public:maven-central</code> - for Maven Central. </p> </li> <li> <p> <code>public:maven-googleandroid</code> - for the Google Android repository. </p> </li> <li> <p> <code>public:maven-gradleplugins</code> - for the Gradle plugins repository. </p> </li> <li> <p> <code>public:maven-commonsware</code> - for the CommonsWare Android repository. </p> </li> </ul>'\n          schema:\n            type: string\n            pattern: '[A-Za-z0-9][A-Za-z0-9._\\-:]{1,99}'\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n    delete:\n      operationId: DisassociateExternalConnection\n      description: ' Removes an existing external connection from a repository. '\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DisassociateExternalConnectionResult'\n        '480':\n          description: AccessDeniedException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AccessDeniedException'\n        '481':\n          description: ConflictException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ConflictException'\n        '482':\n          description: InternalServerException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InternalServerException'\n        '483':\n          description: ResourceNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResourceNotFoundException'\n        '484':\n          description: ServiceQuotaExceededException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ServiceQuotaExceededException'\n        '485':\n          description: ThrottlingException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ThrottlingException'\n        '486':\n          description: ValidationException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ValidationException'\n      parameters:\n        - name: domain\n          in: query\n          required: true\n          description: 'The name of the domain that contains the repository from which to remove the external repository. '\n          schema:\n            type: string\n            pattern: '[a-z][a-z0-9\\-]{0,48}[a-z0-9]'\n            minLength: 2\n            maxLength: 50\n        - name: domain-owner\n          in: query\n          required: false\n          description: ' The 12-digit account number of the AWS account that owns the domain. It does not include dashes or spaces. '\n          schema:\n            type: string\n            pattern: '[0-9]{12}'\n            minLength: 12\n            maxLength: 12\n        - name: repository\n          in: query\n          required: true\n          description: 'The name of the repository from which the external connection will be removed. '\n          schema:\n            type: string\n            pattern: '[A-Za-z0-9][A-Za-z0-9._\\-]{1,99}'\n            minLength: 2\n            maxLength: 100\n        - name: external-connection\n          in: query\n          required: true\n          description: 'The name of the external connection to be removed from the repository. '\n          schema:\n            type: string\n            pattern: '[A-Za-z0-9][A-Za-z0-9._\\-:]{1,99}'\n  /v1/package/versions/copy#domain&source-repository&destination-repository&format&package:\n    post:\n      operationId: CopyPackageVersions\n      description: <p> Copies package versions from one repository to another repository in the same domain. </p> <note> <p> You must specify <code>versions</code> or <code>versionRevisions</code>. You cannot specify both. </p> </note>\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CopyPackageVersionsResult'\n        '480':\n          description: AccessDeniedException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AccessDeniedException'\n        '481':\n          description: ConflictException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ConflictException'\n        '482':\n          description: InternalServerException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InternalServerException'\n        '483':\n          description: ResourceNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResourceNotFoundException'\n        '484':\n          description: ServiceQuotaExceededException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ServiceQuotaExceededException'\n        '485':\n          description: ThrottlingException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ThrottlingException'\n        '486':\n          description: ValidationException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ValidationException'\n      parameters:\n        - name: domain\n          in: query\n          required: true\n          description: ' The name of the domain that contains the source and destination repositories. '\n          schema:\n            type: string\n            pattern: '[a-z][a-z0-9\\-]{0,48}[a-z0-9]'\n            minLength: 2\n            maxLength: 50\n        - name: domain-owner\n          in: query\n          required: false\n          description: ' The 12-digit account number of the AWS account that owns the domain. It does not include dashes or spaces. '\n          schema:\n            type: string\n            pattern: '[0-9]{12}'\n            minLength: 12\n            maxLength: 12\n        - name: source-repository\n          in: query\n          required: true\n          description: ' The name of the repository that contains the package versions to copy. '\n          schema:\n            type: string\n            pattern: '[A-Za-z0-9][A-Za-z0-9._\\-]{1,99}'\n            minLength: 2\n            maxLength: 100\n        - name: destination-repository\n          in: query\n          required: true\n          description: ' The name of the repository into which package versions are copied. '\n          schema:\n            type: string\n            pattern: '[A-Za-z0-9][A-Za-z0-9._\\-]{1,99}'\n            minLength: 2\n            maxLength: 100\n        - name: format\n          in: query\n          required: true\n          description: '<p> The format of the package that is copied. The valid package types are: </p> <ul> <li> <p> <code>npm</code>: A Node Package Manager (npm) package. </p> </li> <li> <p> <code>pypi</code>: A Python Package Index (PyPI) package. </p> </li> <li> <p> <code>maven</code>: A Maven package that contains compiled code in a distributable format, such as a JAR file. </p> </li> </ul>'\n          schema:\n            type: string\n            enum:\n              - npm\n              - pypi\n              - maven\n              - nuget\n        - name: namespace\n          in: query\n          required: false\n          description: '<p> The namespace of the package. The package component that specifies its namespace depends on its type. For example: </p> <ul> <li> <p> The namespace of a Maven package is its <code>groupId</code>. </p> </li> <li> <p> The namespace of an npm package is its <code>scope</code>. </p> </li> <li> <p> A Python package does not contain a corresponding component, so Python packages do not have a namespace. </p> </li> </ul>'\n          schema:\n            type: string\n            pattern: '[^!#/\\s]+'\n            minLength: 1\n            maxLength: 255\n        - name: package\n          in: query\n          required: true\n          description: ' The name of the package that is copied. '\n          schema:\n            type: string\n            pattern: '[^!#/\\s]+'\n            minLength: 1\n            maxLength: 255\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                versions:\n                  description: <p> The versions of the package to copy. </p> <note> <p> You must specify <code>versions</code> or <code>versionRevisions</code>. You cannot specify both. </p> </note>\n                  type: array\n                  items:\n                    $ref: '#/components/schemas/PackageVersion'\n                  maxItems: 100\n                versionRevisions:\n                  description: <p> A list of key-value pairs. The keys are package versions and the values are package version revisions. A <code>CopyPackageVersion</code> operation succeeds if the specified versions in the source repository match the specified package version revision. </p> <note> <p> You must specify <code>versions</code> or <code>versionRevisions</code>. You cannot specify both. </p> </note>\n                  type: object\n                  additionalProperties:\n                    $ref: '#/components/schemas/PackageVersionRevision'\n                allowOverwrite:\n                  description: ' Set to true to overwrite a package version that already exists in the destination repository. If set to false and the package version already exists in the destination repository, the package version is returned in the <code>failedVersions</code> field of the response with an <code>ALREADY_EXISTS</code> error code. '\n                  type: boolean\n                includeFromUpstream:\n                  description: ' Set to true to copy packages from repositories that are upstream from the source repository to the destination repository. The default setting is false. For more information, see <a href=\"https://docs.aws.amazon.com/codeartifact/latest/ug/repos-upstream.html\">Working with upstream repositories</a>. '\n                  type: boolean\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n  /v1/domain#domain:\n    post:\n      operationId: CreateDomain\n      description: '<p> Creates a domain. CodeArtifact <i>domains</i> make it easier to manage multiple repositories across an organization. You can use a domain to apply permissions across many repositories owned by different AWS accounts. An asset is stored only once in a domain, even if it''s in multiple repositories. </p> <p>Although you can have multiple domains, we recommend a single production domain that contains all published artifacts so that your development teams can find and share packages. You can use a second pre-production domain to test changes to the production domain configuration. </p>'\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CreateDomainResult'\n        '480':\n          description: AccessDeniedException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AccessDeniedException'\n        '481':\n          description: ConflictException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ConflictException'\n        '482':\n          description: InternalServerException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InternalServerException'\n        '483':\n          description: ResourceNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResourceNotFoundException'\n        '484':\n          description: ServiceQuotaExceededException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ServiceQuotaExceededException'\n        '485':\n          description: ThrottlingException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ThrottlingException'\n        '486':\n          description: ValidationException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ValidationException'\n      parameters:\n        - name: domain\n          in: query\n          required: true\n          description: ' The name of the domain to create. All domain names in an AWS Region that are in the same AWS account must be unique. The domain name is used as the prefix in DNS hostnames. Do not use sensitive information in a domain name because it is publicly discoverable. '\n          schema:\n            type: string\n            pattern: '[a-z][a-z0-9\\-]{0,48}[a-z0-9]'\n            minLength: 2\n            maxLength: 50\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                encryptionKey:\n                  description: '<p> The encryption key for the domain. This is used to encrypt content stored in a domain. An encryption key can be a key ID, a key Amazon Resource Name (ARN), a key alias, or a key alias ARN. To specify an <code>encryptionKey</code>, your IAM role must have <code>kms:DescribeKey</code> and <code>kms:CreateGrant</code> permissions on the encryption key that is used. For more information, see <a href=\"https://docs.aws.amazon.com/kms/latest/APIReference/API_DescribeKey.html#API_DescribeKey_RequestSyntax\">DescribeKey</a> in the <i>AWS Key Management Service API Reference</i> and <a href=\"https://docs.aws.amazon.com/kms/latest/developerguide/kms-api-permissions-reference.html\">AWS KMS API Permissions Reference</a> in the <i>AWS Key Management Service Developer Guide</i>. </p> <important> <p> CodeArtifact supports only symmetric CMKs. Do not associate an asymmetric CMK with your domain. For more information, see <a href=\"https://docs.aws.amazon.com/kms/latest/developerguide/symmetric-asymmetric.html\">Using symmetric and asymmetric keys</a> in the <i>AWS Key Management Service Developer Guide</i>. </p> </important>'\n                  type: string\n                  pattern: \\S+\n                  minLength: 1\n                  maxLength: 1011\n                tags:\n                  description: One or more tag key-value pairs for the domain.\n                  type: array\n                  items:\n                    $ref: '#/components/schemas/Tag'\n                  minItems: 0\n                  maxItems: 200\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n    delete:\n      operationId: DeleteDomain\n      description: ' Deletes a domain. You cannot delete a domain that contains repositories. If you want to delete a domain with repositories, first delete its repositories. '\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DeleteDomainResult'\n        '480':\n          description: AccessDeniedException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AccessDeniedException'\n        '481':\n          description: ConflictException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ConflictException'\n        '482':\n          description: InternalServerException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InternalServerException'\n        '483':\n          description: ThrottlingException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ThrottlingException'\n        '484':\n          description: ValidationException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ValidationException'\n      parameters:\n        - name: domain\n          in: query\n          required: true\n          description: ' The name of the domain to delete. '\n          schema:\n            type: string\n            pattern: '[a-z][a-z0-9\\-]{0,48}[a-z0-9]'\n            minLength: 2\n            maxLength: 50\n        - name: domain-owner\n          in: query\n          required: false\n          description: ' The 12-digit account number of the AWS account that owns the domain. It does not include dashes or spaces. '\n          schema:\n            type: string\n            pattern: '[0-9]{12}'\n            minLength: 12\n            maxLength: 12\n    get:\n      operationId: DescribeDomain\n      description: ' Returns a <a href=\"https://docs.aws.amazon.com/codeartifact/latest/APIReference/API_DomainDescription.html\">DomainDescription</a> object that contains information about the requested domain. '\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DescribeDomainResult'\n        '480':\n          description: AccessDeniedException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AccessDeniedException'\n        '481':\n          description: InternalServerException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InternalServerException'\n        '482':\n          description: ResourceNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResourceNotFoundException'\n        '483':\n          description: ThrottlingException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ThrottlingException'\n        '484':\n          description: ValidationException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ValidationException'\n      parameters:\n        - name: domain\n          in: query\n          required: true\n          description: ' A string that specifies the name of the requested domain. '\n          schema:\n            type: string\n            pattern: '[a-z][a-z0-9\\-]{0,48}[a-z0-9]'\n            minLength: 2\n            maxLength: 50\n        - name: domain-owner\n          in: query\n          required: false\n          description: ' The 12-digit account number of the AWS account that owns the domain. It does not include dashes or spaces. '\n          schema:\n            type: string\n            pattern: '[0-9]{12}'\n            minLength: 12\n            maxLength: 12\n  /v1/repository#domain&repository:\n    post:\n      operationId: CreateRepository\n      description: ' Creates a repository. '\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CreateRepositoryResult'\n        '480':\n          description: AccessDeniedException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AccessDeniedException'\n        '481':\n          description: ConflictException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ConflictException'\n        '482':\n          description: InternalServerException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InternalServerException'\n        '483':\n          description: ResourceNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResourceNotFoundException'\n        '484':\n          description: ServiceQuotaExceededException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ServiceQuotaExceededException'\n        '485':\n          description: ThrottlingException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ThrottlingException'\n        '486':\n          description: ValidationException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ValidationException'\n      parameters:\n        - name: domain\n          in: query\n          required: true\n          description: ' The name of the domain that contains the created repository. '\n          schema:\n            type: string\n            pattern: '[a-z][a-z0-9\\-]{0,48}[a-z0-9]'\n            minLength: 2\n            maxLength: 50\n        - name: domain-owner\n          in: query\n          required: false\n          description: ' The 12-digit account number of the AWS account that owns the domain. It does not include dashes or spaces. '\n          schema:\n            type: string\n            pattern: '[0-9]{12}'\n            minLength: 12\n            maxLength: 12\n        - name: repository\n          in: query\n          required: true\n          description: ' The name of the repository to create. '\n          schema:\n            type: string\n            pattern: '[A-Za-z0-9][A-Za-z0-9._\\-]{1,99}'\n            minLength: 2\n            maxLength: 100\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                description:\n                  description: ' A description of the created repository. '\n                  type: string\n                  pattern: '\\P{C}+'\n                  maxLength: 1000\n                upstreams:\n                  description: ' A list of upstream repositories to associate with the repository. The order of the upstream repositories in the list determines their priority order when AWS CodeArtifact looks for a requested package version. For more information, see <a href=\"https://docs.aws.amazon.com/codeartifact/latest/ug/repos-upstream.html\">Working with upstream repositories</a>. '\n                  type: array\n                  items:\n                    $ref: '#/components/schemas/UpstreamRepository'\n                tags:\n                  description: One or more tag key-value pairs for the repository.\n                  type: array\n                  items:\n                    $ref: '#/components/schemas/Tag'\n                  minItems: 0\n                  maxItems: 200\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n    delete:\n      operationId: DeleteRepository\n      description: ' Deletes a repository. '\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DeleteRepositoryResult'\n        '480':\n          description: AccessDeniedException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AccessDeniedException'\n        '481':\n          description: ConflictException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ConflictException'\n        '482':\n          description: InternalServerException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InternalServerException'\n        '483':\n          description: ResourceNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResourceNotFoundException'\n        '484':\n          description: ThrottlingException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ThrottlingException'\n        '485':\n          description: ValidationException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ValidationException'\n      parameters:\n        - name: domain\n          in: query\n          required: true\n          description: ' The name of the domain that contains the repository to delete. '\n          schema:\n            type: string\n            pattern: '[a-z][a-z0-9\\-]{0,48}[a-z0-9]'\n            minLength: 2\n            maxLength: 50\n        - name: domain-owner\n          in: query\n          required: false\n          description: ' The 12-digit account number of the AWS account that owns the domain. It does not include dashes or spaces. '\n          schema:\n            type: string\n            pattern: '[0-9]{12}'\n            minLength: 12\n            maxLength: 12\n        - name: repository\n          in: query\n          required: true\n          description: ' The name of the repository to delete. '\n          schema:\n            type: string\n            pattern: '[A-Za-z0-9][A-Za-z0-9._\\-]{1,99}'\n            minLength: 2\n            maxLength: 100\n    get:\n      operationId: DescribeRepository\n      description: ' Returns a <code>RepositoryDescription</code> object that contains detailed information about the requested repository. '\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DescribeRepositoryResult'\n        '480':\n          description: AccessDeniedException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AccessDeniedException'\n        '481':\n          description: InternalServerException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InternalServerException'\n        '482':\n          description: ResourceNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResourceNotFoundException'\n        '483':\n          description: ThrottlingException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ThrottlingException'\n        '484':\n          description: ValidationException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ValidationException'\n      parameters:\n        - name: domain\n          in: query\n          required: true\n          description: ' The name of the domain that contains the repository to describe. '\n          schema:\n            type: string\n            pattern: '[a-z][a-z0-9\\-]{0,48}[a-z0-9]'\n            minLength: 2\n            maxLength: 50\n        - name: domain-owner\n          in: query\n          required: false\n          description: ' The 12-digit account number of the AWS account that owns the domain. It does not include dashes or spaces. '\n          schema:\n            type: string\n            pattern: '[0-9]{12}'\n            minLength: 12\n            maxLength: 12\n        - name: repository\n          in: query\n          required: true\n          description: ' A string that specifies the name of the requested repository. '\n          schema:\n            type: string\n            pattern: '[A-Za-z0-9][A-Za-z0-9._\\-]{1,99}'\n            minLength: 2\n            maxLength: 100\n    put:\n      operationId: UpdateRepository\n      description: ' Update the properties of a repository. '\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/UpdateRepositoryResult'\n        '480':\n          description: AccessDeniedException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AccessDeniedException'\n        '481':\n          description: ConflictException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ConflictException'\n        '482':\n          description: InternalServerException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InternalServerException'\n        '483':\n          description: ResourceNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResourceNotFoundException'\n        '484':\n          description: ServiceQuotaExceededException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ServiceQuotaExceededException'\n        '485':\n          description: ThrottlingException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ThrottlingException'\n        '486':\n          description: ValidationException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ValidationException'\n      parameters:\n        - name: domain\n          in: query\n          required: true\n          description: ' The name of the domain associated with the repository to update. '\n          schema:\n            type: string\n            pattern: '[a-z][a-z0-9\\-]{0,48}[a-z0-9]'\n            minLength: 2\n            maxLength: 50\n        - name: domain-owner\n          in: query\n          required: false\n          description: ' The 12-digit account number of the AWS account that owns the domain. It does not include dashes or spaces. '\n          schema:\n            type: string\n            pattern: '[0-9]{12}'\n            minLength: 12\n            maxLength: 12\n        - name: repository\n          in: query\n          required: true\n          description: ' The name of the repository to update. '\n          schema:\n            type: string\n            pattern: '[A-Za-z0-9][A-Za-z0-9._\\-]{1,99}'\n            minLength: 2\n            maxLength: 100\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                description:\n                  description: ' An updated repository description. '\n                  type: string\n                  pattern: '\\P{C}+'\n                  maxLength: 1000\n                upstreams:\n                  description: ' A list of upstream repositories to associate with the repository. The order of the upstream repositories in the list determines their priority order when AWS CodeArtifact looks for a requested package version. For more information, see <a href=\"https://docs.aws.amazon.com/codeartifact/latest/ug/repos-upstream.html\">Working with upstream repositories</a>. '\n                  type: array\n                  items:\n                    $ref: '#/components/schemas/UpstreamRepository'\n  /v1/domain/permissions/policy#domain:\n    delete:\n      operationId: DeleteDomainPermissionsPolicy\n      description: ' Deletes the resource policy set on a domain. '\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DeleteDomainPermissionsPolicyResult'\n        '480':\n          description: AccessDeniedException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AccessDeniedException'\n        '481':\n          description: ConflictException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ConflictException'\n        '482':\n          description: InternalServerException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InternalServerException'\n        '483':\n          description: ResourceNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResourceNotFoundException'\n        '484':\n          description: ThrottlingException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ThrottlingException'\n        '485':\n          description: ValidationException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ValidationException'\n      parameters:\n        - name: domain\n          in: query\n          required: true\n          description: ' The name of the domain associated with the resource policy to be deleted. '\n          schema:\n            type: string\n            pattern: '[a-z][a-z0-9\\-]{0,48}[a-z0-9]'\n            minLength: 2\n            maxLength: 50\n        - name: domain-owner\n          in: query\n          required: false\n          description: ' The 12-digit account number of the AWS account that owns the domain. It does not include dashes or spaces. '\n          schema:\n            type: string\n            pattern: '[0-9]{12}'\n            minLength: 12\n            maxLength: 12\n        - name: policy-revision\n          in: query\n          required: false\n          description: ' The current revision of the resource policy to be deleted. This revision is used for optimistic locking, which prevents others from overwriting your changes to the domain''s resource policy. '\n          schema:\n            type: string\n            pattern: \\S+\n            minLength: 1\n            maxLength: 100\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n    get:\n      operationId: GetDomainPermissionsPolicy\n      description: '<p> Returns the resource policy attached to the specified domain. </p> <note> <p> The policy is a resource-based policy, not an identity-based policy. For more information, see <a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/access_policies_identity-vs-resource.html\">Identity-based policies and resource-based policies </a> in the <i>AWS Identity and Access Management User Guide</i>. </p> </note>'\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GetDomainPermissionsPolicyResult'\n        '480':\n          description: AccessDeniedException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AccessDeniedException'\n        '481':\n          description: InternalServerException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InternalServerException'\n        '482':\n          description: ResourceNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResourceNotFoundException'\n        '483':\n          description: ThrottlingException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ThrottlingException'\n        '484':\n          description: ValidationException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ValidationException'\n      parameters:\n        - name: domain\n          in: query\n          required: true\n          description: ' The name of the domain to which the resource policy is attached. '\n          schema:\n            type: string\n            pattern: '[a-z][a-z0-9\\-]{0,48}[a-z0-9]'\n            minLength: 2\n            maxLength: 50\n        - name: domain-owner\n          in: query\n          required: false\n          description: ' The 12-digit account number of the AWS account that owns the domain. It does not include dashes or spaces. '\n          schema:\n            type: string\n            pattern: '[0-9]{12}'\n            minLength: 12\n            maxLength: 12\n  /v1/package/versions/delete#domain&repository&format&package:\n    post:\n      operationId: DeletePackageVersions\n      description: ' Deletes one or more versions of a package. A deleted package version cannot be restored in your repository. If you want to remove a package version from your repository and be able to restore it later, set its status to <code>Archived</code>. Archived packages cannot be downloaded from a repository and don''t show up with list package APIs (for example, <a href=\"https://docs.aws.amazon.com/codeartifact/latest/APIReference/API_ListPackageVersions.html\">ListackageVersions</a>), but you can restore them using <a href=\"https://docs.aws.amazon.com/codeartifact/latest/APIReference/API_UpdatePackageVersionsStatus.html\">UpdatePackageVersionsStatus</a>. '\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DeletePackageVersionsResult'\n        '480':\n          description: AccessDeniedException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AccessDeniedException'\n        '481':\n          description: ConflictException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ConflictException'\n        '482':\n          description: InternalServerException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InternalServerException'\n        '483':\n          description: ResourceNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResourceNotFoundException'\n        '484':\n          description: ThrottlingException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ThrottlingException'\n        '485':\n          description: ValidationException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ValidationException'\n      parameters:\n        - name: domain\n          in: query\n          required: true\n          description: ' The name of the domain that contains the package to delete. '\n          schema:\n            type: string\n            pattern: '[a-z][a-z0-9\\-]{0,48}[a-z0-9]'\n            minLength: 2\n            maxLength: 50\n        - name: domain-owner\n          in: query\n          required: false\n          description: ' The 12-digit account number of the AWS account that owns the domain. It does not include dashes or spaces. '\n          schema:\n            type: string\n            pattern: '[0-9]{12}'\n            minLength: 12\n            maxLength: 12\n        - name: repository\n          in: query\n          required: true\n          description: ' The name of the repository that contains the package versions to delete. '\n          schema:\n            type: string\n            pattern: '[A-Za-z0-9][A-Za-z0-9._\\-]{1,99}'\n            minLength: 2\n            maxLength: 100\n        - name: format\n          in: query\n          required: true\n          description: '<p> The format of the package versions to delete. The valid values are: </p> <ul> <li> <p> <code>npm</code> </p> </li> <li> <p> <code>pypi</code> </p> </li> <li> <p> <code>maven</code> </p> </li> </ul>'\n          schema:\n            type: string\n            enum:\n              - npm\n              - pypi\n              - maven\n              - nuget\n        - name: namespace\n          in: query\n          required: false\n          description: '<p> The namespace of the package. The package component that specifies its namespace depends on its type. For example: </p> <ul> <li> <p> The namespace of a Maven package is its <code>groupId</code>. </p> </li> <li> <p> The namespace of an npm package is its <code>scope</code>. </p> </li> <li> <p> A Python package does not contain a corresponding component, so Python packages do not have a namespace. </p> </li> </ul>'\n          schema:\n            type: string\n            pattern: '[^!#/\\s]+'\n            minLength: 1\n            maxLength: 255\n        - name: package\n          in: query\n          required: true\n          description: ' The name of the package with the versions to delete. '\n          schema:\n            type: string\n            pattern: '[^!#/\\s]+'\n            minLength: 1\n            maxLength: 255\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              required:\n                - versions\n              properties:\n                versions:\n                  description: ' An array of strings that specify the versions of the package to delete. '\n                  type: array\n                  items:\n                    $ref: '#/components/schemas/PackageVersion'\n                  maxItems: 100\n                expectedStatus:\n                  description: '<p> The expected status of the package version to delete. Valid values are: </p> <ul> <li> <p> <code>Published</code> </p> </li> <li> <p> <code>Unfinished</code> </p> </li> <li> <p> <code>Unlisted</code> </p> </li> <li> <p> <code>Archived</code> </p> </li> <li> <p> <code>Disposed</code> </p> </li> </ul>'\n                  type: string\n                  enum:\n                    - Published\n                    - Unfinished\n                    - Unlisted\n                    - Archived\n                    - Disposed\n                    - Deleted\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n  /v1/repository/permissions/policies#domain&repository:\n    delete:\n      operationId: DeleteRepositoryPermissionsPolicy\n      description: '<p> Deletes the resource policy that is set on a repository. After a resource policy is deleted, the permissions allowed and denied by the deleted policy are removed. The effect of deleting a resource policy might not be immediate. </p> <important> <p> Use <code>DeleteRepositoryPermissionsPolicy</code> with caution. After a policy is deleted, AWS users, roles, and accounts lose permissions to perform the repository actions granted by the deleted policy. </p> </important>'\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DeleteRepositoryPermissionsPolicyResult'\n        '480':\n          description: AccessDeniedException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AccessDeniedException'\n        '481':\n          description: ConflictException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ConflictException'\n        '482':\n          description: InternalServerException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InternalServerException'\n        '483':\n          description: ResourceNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResourceNotFoundException'\n        '484':\n          description: ThrottlingException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ThrottlingException'\n        '485':\n          description: ValidationException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ValidationException'\n      parameters:\n        - name: domain\n          in: query\n          required: true\n          description: ' The name of the domain that contains the repository associated with the resource policy to be deleted. '\n          schema:\n            type: string\n            pattern: '[a-z][a-z0-9\\-]{0,48}[a-z0-9]'\n            minLength: 2\n            maxLength: 50\n        - name: domain-owner\n          in: query\n          required: false\n          description: ' The 12-digit account number of the AWS account that owns the domain. It does not include dashes or spaces. '\n          schema:\n            type: string\n            pattern: '[0-9]{12}'\n            minLength: 12\n            maxLength: 12\n        - name: repository\n          in: query\n          required: true\n          description: ' The name of the repository that is associated with the resource policy to be deleted '\n          schema:\n            type: string\n            pattern: '[A-Za-z0-9][A-Za-z0-9._\\-]{1,99}'\n            minLength: 2\n            maxLength: 100\n        - name: policy-revision\n          in: query\n          required: false\n          description: ' The revision of the repository''s resource policy to be deleted. This revision is used for optimistic locking, which prevents others from accidentally overwriting your changes to the repository''s resource policy. '\n          schema:\n            type: string\n            pattern: \\S+\n            minLength: 1\n            maxLength: 100\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n  /v1/package/version#domain&repository&format&package&version:\n    get:\n      operationId: DescribePackageVersion\n      description: ' Returns a <a href=\"https://docs.aws.amazon.com/codeartifact/latest/APIReference/API_PackageVersionDescription.html\">PackageVersionDescription</a> object that contains information about the requested package version. '\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DescribePackageVersionResult'\n        '480':\n          description: AccessDeniedException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AccessDeniedException'\n        '481':\n          description: ConflictException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ConflictException'\n        '482':\n          description: InternalServerException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InternalServerException'\n        '483':\n          description: ResourceNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResourceNotFoundException'\n        '484':\n          description: ThrottlingException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ThrottlingException'\n        '485':\n          description: ValidationException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ValidationException'\n      parameters:\n        - name: domain\n          in: query\n          required: true\n          description: ' The name of the domain that contains the repository that contains the package version. '\n          schema:\n            type: string\n            pattern: '[a-z][a-z0-9\\-]{0,48}[a-z0-9]'\n            minLength: 2\n            maxLength: 50\n        - name: domain-owner\n          in: query\n          required: false\n          description: ' The 12-digit account number of the AWS account that owns the domain. It does not include dashes or spaces. '\n          schema:\n            type: string\n            pattern: '[0-9]{12}'\n            minLength: 12\n            maxLength: 12\n        - name: repository\n          in: query\n          required: true\n          description: ' The name of the repository that contains the package version. '\n          schema:\n            type: string\n            pattern: '[A-Za-z0-9][A-Za-z0-9._\\-]{1,99}'\n            minLength: 2\n            maxLength: 100\n        - name: format\n          in: query\n          required: true\n          description: '<p> A format that specifies the type of the requested package version. The valid values are: </p> <ul> <li> <p> <code>npm</code> </p> </li> <li> <p> <code>pypi</code> </p> </li> <li> <p> <code>maven</code> </p> </li> </ul>'\n          schema:\n            type: string\n            enum:\n              - npm\n              - pypi\n              - maven\n              - nuget\n        - name: namespace\n          in: query\n          required: false\n          description: '<p> The namespace of the package. The package component that specifies its namespace depends on its type. For example: </p> <ul> <li> <p> The namespace of a Maven package is its <code>groupId</code>. </p> </li> <li> <p> The namespace of an npm package is its <code>scope</code>. </p> </li> <li> <p> A Python package does not contain a corresponding component, so Python packages do not have a namespace. </p> </li> </ul>'\n          schema:\n            type: string\n            pattern: '[^!#/\\s]+'\n            minLength: 1\n            maxLength: 255\n        - name: package\n          in: query\n          required: true\n          description: ' The name of the requested package version. '\n          schema:\n            type: string\n            pattern: '[^!#/\\s]+'\n            minLength: 1\n            maxLength: 255\n        - name: version\n          in: query\n          required: true\n          description: ' A string that contains the package version (for example, <code>3.5.2</code>). '\n          schema:\n            type: string\n            pattern: '[^!#/\\s]+'\n            minLength: 1\n            maxLength: 255\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n  /v1/package/versions/dispose#domain&repository&format&package:\n    post:\n      operationId: DisposePackageVersions\n      description: '<p> Deletes the assets in package versions and sets the package versions'' status to <code>Disposed</code>. A disposed package version cannot be restored in your repository because its assets are deleted. </p> <p> To view all disposed package versions in a repository, use <a href=\"https://docs.aws.amazon.com/codeartifact/latest/APIReference/API_ListPackageVersions.html\">ListPackageVersions</a> and set the <a href=\"https://docs.aws.amazon.com/codeartifact/latest/APIReference/API_ListPackageVersions.html#API_ListPackageVersions_RequestSyntax\">status</a> parameter to <code>Disposed</code>. </p> <p> To view information about a disposed package version, use <a href=\"https://docs.aws.amazon.com/codeartifact/latest/APIReference/API_DescribePackageVersion.html\">DescribePackageVersion</a>. </p>'\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DisposePackageVersionsResult'\n        '480':\n          description: AccessDeniedException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AccessDeniedException'\n        '481':\n          description: ConflictException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ConflictException'\n        '482':\n          description: InternalServerException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InternalServerException'\n        '483':\n          description: ResourceNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResourceNotFoundException'\n        '484':\n          description: ThrottlingException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ThrottlingException'\n        '485':\n          description: ValidationException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ValidationException'\n      parameters:\n        - name: domain\n          in: query\n          required: true\n          description: ' The name of the domain that contains the repository you want to dispose. '\n          schema:\n            type: string\n            pattern: '[a-z][a-z0-9\\-]{0,48}[a-z0-9]'\n            minLength: 2\n            maxLength: 50\n        - name: domain-owner\n          in: query\n          required: false\n          description: ' The 12-digit account number of the AWS account that owns the domain. It does not include dashes or spaces. '\n          schema:\n            type: string\n            pattern: '[0-9]{12}'\n            minLength: 12\n            maxLength: 12\n        - name: repository\n          in: query\n          required: true\n          description: ' The name of the repository that contains the package versions you want to dispose. '\n          schema:\n            type: string\n            pattern: '[A-Za-z0-9][A-Za-z0-9._\\-]{1,99}'\n            minLength: 2\n            maxLength: 100\n        - name: format\n          in: query\n          required: true\n          description: '<p> A format that specifies the type of package versions you want to dispose. The valid values are: </p> <ul> <li> <p> <code>npm</code> </p> </li> <li> <p> <code>pypi</code> </p> </li> <li> <p> <code>maven</code> </p> </li> </ul>'\n          schema:\n            type: string\n            enum:\n              - npm\n              - pypi\n              - maven\n              - nuget\n        - name: namespace\n          in: query\n          required: false\n          description: '<p> The namespace of the package. The package component that specifies its namespace depends on its type. For example: </p> <ul> <li> <p> The namespace of a Maven package is its <code>groupId</code>. </p> </li> <li> <p> The namespace of an npm package is its <code>scope</code>. </p> </li> <li> <p> A Python package does not contain a corresponding component, so Python packages do not have a namespace. </p> </li> </ul>'\n          schema:\n            type: string\n            pattern: '[^!#/\\s]+'\n            minLength: 1\n            maxLength: 255\n        - name: package\n          in: query\n          required: true\n          description: ' The name of the package with the versions you want to dispose. '\n          schema:\n            type: string\n            pattern: '[^!#/\\s]+'\n            minLength: 1\n            maxLength: 255\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              required:\n                - versions\n              properties:\n                versions:\n                  description: ' The versions of the package you want to dispose. '\n                  type: array\n                  items:\n                    $ref: '#/components/schemas/PackageVersion'\n                  maxItems: 100\n                versionRevisions:\n                  description: ' The revisions of the package versions you want to dispose. '\n                  type: object\n                  additionalProperties:\n                    $ref: '#/components/schemas/PackageVersionRevision'\n                expectedStatus:\n                  description: '<p> The expected status of the package version to dispose. Valid values are: </p> <ul> <li> <p> <code>Published</code> </p> </li> <li> <p> <code>Unfinished</code> </p> </li> <li> <p> <code>Unlisted</code> </p> </li> <li> <p> <code>Archived</code> </p> </li> <li> <p> <code>Disposed</code> </p> </li> </ul>'\n                  type: string\n                  enum:\n                    - Published\n                    - Unfinished\n                    - Unlisted\n                    - Archived\n                    - Disposed\n                    - Deleted\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n  /v1/authorization-token#domain:\n    post:\n      operationId: GetAuthorizationToken\n      description: '<p> Generates a temporary authorization token for accessing repositories in the domain. This API requires the <code>codeartifact:GetAuthorizationToken</code> and <code>sts:GetServiceBearerToken</code> permissions. For more information about authorization tokens, see <a href=\"https://docs.aws.amazon.com/codeartifact/latest/ug/tokens-authentication.html\">AWS CodeArtifact authentication and tokens</a>. </p> <note> <p>CodeArtifact authorization tokens are valid for a period of 12 hours when created with the <code>login</code> command. You can call <code>login</code> periodically to refresh the token. When you create an authorization token with the <code>GetAuthorizationToken</code> API, you can set a custom authorization period, up to a maximum of 12 hours, with the <code>durationSeconds</code> parameter.</p> <p>The authorization period begins after <code>login</code> or <code>GetAuthorizationToken</code> is called. If <code>login</code> or <code>GetAuthorizationToken</code> is called while assuming a role, the token lifetime is independent of the maximum session duration of the role. For example, if you call <code>sts assume-role</code> and specify a session duration of 15 minutes, then generate a CodeArtifact authorization token, the token will be valid for the full authorization period even though this is longer than the 15-minute session duration.</p> <p>See <a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/id_roles_use.html\">Using IAM Roles</a> for more information on controlling session duration. </p> </note>'\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GetAuthorizationTokenResult'\n        '480':\n          description: AccessDeniedException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AccessDeniedException'\n        '481':\n          description: InternalServerException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InternalServerException'\n        '482':\n          description: ResourceNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResourceNotFoundException'\n        '483':\n          description: ThrottlingException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ThrottlingException'\n        '484':\n          description: ValidationException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ValidationException'\n      parameters:\n        - name: domain\n          in: query\n          required: true\n          description: ' The name of the domain that is in scope for the generated authorization token. '\n          schema:\n            type: string\n            pattern: '[a-z][a-z0-9\\-]{0,48}[a-z0-9]'\n            minLength: 2\n            maxLength: 50\n        - name: domain-owner\n          in: query\n          required: false\n          description: ' The 12-digit account number of the AWS account that owns the domain. It does not include dashes or spaces. '\n          schema:\n            type: string\n            pattern: '[0-9]{12}'\n            minLength: 12\n            maxLength: 12\n        - name: duration\n          in: query\n          required: false\n          description: 'The time, in seconds, that the generated authorization token is valid. Valid values are <code>0</code> and any number between <code>900</code> (15 minutes) and <code>43200</code> (12 hours). A value of <code>0</code> will set the expiration of the authorization token to the same expiration of the user''s role''s temporary credentials.'\n          schema:\n            type: integer\n            minimum: 0\n            maximum: 43200\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n  /v1/package/version/asset#domain&repository&format&package&version&asset:\n    get:\n      operationId: GetPackageVersionAsset\n      description: ' Returns an asset (or file) that is in a package. For example, for a Maven package version, use <code>GetPackageVersionAsset</code> to download a <code>JAR</code> file, a <code>POM</code> file, or any other assets in the package version. '\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GetPackageVersionAssetResult'\n        '480':\n          description: AccessDeniedException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AccessDeniedException'\n        '481':\n          description: InternalServerException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InternalServerException'\n        '482':\n          description: ResourceNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResourceNotFoundException'\n        '483':\n          description: ThrottlingException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ThrottlingException'\n        '484':\n          description: ValidationException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ValidationException'\n        '485':\n          description: ConflictException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ConflictException'\n      parameters:\n        - name: domain\n          in: query\n          required: true\n          description: ' The name of the domain that contains the repository that contains the package version with the requested asset. '\n          schema:\n            type: string\n            pattern: '[a-z][a-z0-9\\-]{0,48}[a-z0-9]'\n            minLength: 2\n            maxLength: 50\n        - name: domain-owner\n          in: query\n          required: false\n          description: ' The 12-digit account number of the AWS account that owns the domain. It does not include dashes or spaces. '\n          schema:\n            type: string\n            pattern: '[0-9]{12}'\n            minLength: 12\n            maxLength: 12\n        - name: repository\n          in: query\n          required: true\n          description: ' The repository that contains the package version with the requested asset. '\n          schema:\n            type: string\n            pattern: '[A-Za-z0-9][A-Za-z0-9._\\-]{1,99}'\n            minLength: 2\n            maxLength: 100\n        - name: format\n          in: query\n          required: true\n          description: '<p> A format that specifies the type of the package version with the requested asset file. The valid values are: </p> <ul> <li> <p> <code>npm</code> </p> </li> <li> <p> <code>pypi</code> </p> </li> <li> <p> <code>maven</code> </p> </li> </ul>'\n          schema:\n            type: string\n            enum:\n              - npm\n              - pypi\n              - maven\n              - nuget\n        - name: namespace\n          in: query\n          required: false\n          description: '<p> The namespace of the package. The package component that specifies its namespace depends on its type. For example: </p> <ul> <li> <p> The namespace of a Maven package is its <code>groupId</code>. </p> </li> <li> <p> The namespace of an npm package is its <code>scope</code>. </p> </li> <li> <p> A Python package does not contain a corresponding component, so Python packages do not have a namespace. </p> </li> </ul>'\n          schema:\n            type: string\n            pattern: '[^!#/\\s]+'\n            minLength: 1\n            maxLength: 255\n        - name: package\n          in: query\n          required: true\n          description: ' The name of the package that contains the requested asset. '\n          schema:\n            type: string\n            pattern: '[^!#/\\s]+'\n            minLength: 1\n            maxLength: 255\n        - name: version\n          in: query\n          required: true\n          description: ' A string that contains the package version (for example, <code>3.5.2</code>). '\n          schema:\n            type: string\n            pattern: '[^!#/\\s]+'\n            minLength: 1\n            maxLength: 255\n        - name: asset\n          in: query\n          required: true\n          description: ' The name of the requested asset. '\n          schema:\n            type: string\n            pattern: '\\P{C}+'\n            minLength: 1\n            maxLength: 255\n        - name: revision\n          in: query\n          required: false\n          description: ' The name of the package version revision that contains the requested asset. '\n          schema:\n            type: string\n            pattern: \\S+\n            minLength: 1\n            maxLength: 50\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n  /v1/package/version/readme#domain&repository&format&package&version:\n    get:\n      operationId: GetPackageVersionReadme\n      description: '<p> Gets the readme file or descriptive text for a package version. For packages that do not contain a readme file, CodeArtifact extracts a description from a metadata file. For example, from the <code>&lt;description&gt;</code> element in the <code>pom.xml</code> file of a Maven package. </p> <p> The returned text might contain formatting. For example, it might contain formatting for Markdown or reStructuredText. </p>'\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GetPackageVersionReadmeResult'\n        '480':\n          description: AccessDeniedException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AccessDeniedException'\n        '481':\n          description: InternalServerException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InternalServerException'\n        '482':\n          description: ResourceNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResourceNotFoundException'\n        '483':\n          description: ThrottlingException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ThrottlingException'\n        '484':\n          description: ValidationException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ValidationException'\n      parameters:\n        - name: domain\n          in: query\n          required: true\n          description: ' The name of the domain that contains the repository that contains the package version with the requested readme file. '\n          schema:\n            type: string\n            pattern: '[a-z][a-z0-9\\-]{0,48}[a-z0-9]'\n            minLength: 2\n            maxLength: 50\n        - name: domain-owner\n          in: query\n          required: false\n          description: ' The 12-digit account number of the AWS account that owns the domain. It does not include dashes or spaces. '\n          schema:\n            type: string\n            pattern: '[0-9]{12}'\n            minLength: 12\n            maxLength: 12\n        - name: repository\n          in: query\n          required: true\n          description: ' The repository that contains the package with the requested readme file. '\n          schema:\n            type: string\n            pattern: '[A-Za-z0-9][A-Za-z0-9._\\-]{1,99}'\n            minLength: 2\n            maxLength: 100\n        - name: format\n          in: query\n          required: true\n          description: '<p> A format that specifies the type of the package version with the requested readme file. The valid values are: </p> <ul> <li> <p> <code>npm</code> </p> </li> <li> <p> <code>pypi</code> </p> </li> <li> <p> <code>maven</code> </p> </li> </ul>'\n          schema:\n            type: string\n            enum:\n              - npm\n              - pypi\n              - maven\n              - nuget\n        - name: namespace\n          in: query\n          required: false\n          description: '<p> The namespace of the package. The package component that specifies its namespace depends on its type. For example: </p> <ul> <li> <p> The namespace of a Maven package is its <code>groupId</code>. </p> </li> <li> <p> The namespace of an npm package is its <code>scope</code>. </p> </li> <li> <p> A Python package does not contain a corresponding component, so Python packages do not have a namespace. </p> </li> </ul>'\n          schema:\n            type: string\n            pattern: '[^!#/\\s]+'\n            minLength: 1\n            maxLength: 255\n        - name: package\n          in: query\n          required: true\n          description: ' The name of the package version that contains the requested readme file. '\n          schema:\n            type: string\n            pattern: '[^!#/\\s]+'\n            minLength: 1\n            maxLength: 255\n        - name: version\n          in: query\n          required: true\n          description: ' A string that contains the package version (for example, <code>3.5.2</code>). '\n          schema:\n            type: string\n            pattern: '[^!#/\\s]+'\n            minLength: 1\n            maxLength: 255\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n  /v1/repository/endpoint#domain&repository&format:\n    get:\n      operationId: GetRepositoryEndpoint\n      description: '<p> Returns the endpoint of a repository for a specific package format. A repository has one endpoint for each package format: </p> <ul> <li> <p> <code>npm</code> </p> </li> <li> <p> <code>pypi</code> </p> </li> <li> <p> <code>maven</code> </p> </li> </ul>'\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GetRepositoryEndpointResult'\n        '480':\n          description: AccessDeniedException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AccessDeniedException'\n        '481':\n          description: InternalServerException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InternalServerException'\n        '482':\n          description: ResourceNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResourceNotFoundException'\n        '483':\n          description: ThrottlingException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ThrottlingException'\n        '484':\n          description: ValidationException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ValidationException'\n      parameters:\n        - name: domain\n          in: query\n          required: true\n          description: ' The name of the domain that contains the repository. '\n          schema:\n            type: string\n            pattern: '[a-z][a-z0-9\\-]{0,48}[a-z0-9]'\n            minLength: 2\n            maxLength: 50\n        - name: domain-owner\n          in: query\n          required: false\n          description: ' The 12-digit account number of the AWS account that owns the domain that contains the repository. It does not include dashes or spaces. '\n          schema:\n            type: string\n            pattern: '[0-9]{12}'\n            minLength: 12\n            maxLength: 12\n        - name: repository\n          in: query\n          required: true\n          description: ' The name of the repository. '\n          schema:\n            type: string\n            pattern: '[A-Za-z0-9][A-Za-z0-9._\\-]{1,99}'\n            minLength: 2\n            maxLength: 100\n        - name: format\n          in: query\n          required: true\n          description: '<p> Returns which endpoint of a repository to return. A repository has one endpoint for each package format: </p> <ul> <li> <p> <code>npm</code> </p> </li> <li> <p> <code>pypi</code> </p> </li> <li> <p> <code>maven</code> </p> </li> </ul>'\n          schema:\n            type: string\n            enum:\n              - npm\n              - pypi\n              - maven\n              - nuget\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n  /v1/repository/permissions/policy#domain&repository:\n    get:\n      operationId: GetRepositoryPermissionsPolicy\n      description: ' Returns the resource policy that is set on a repository. '\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GetRepositoryPermissionsPolicyResult'\n        '480':\n          description: AccessDeniedException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AccessDeniedException'\n        '481':\n          description: InternalServerException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InternalServerException'\n        '482':\n          description: ResourceNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResourceNotFoundException'\n        '483':\n          description: ThrottlingException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ThrottlingException'\n        '484':\n          description: ValidationException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ValidationException'\n      parameters:\n        - name: domain\n          in: query\n          required: true\n          description: ' The name of the domain containing the repository whose associated resource policy is to be retrieved. '\n          schema:\n            type: string\n            pattern: '[a-z][a-z0-9\\-]{0,48}[a-z0-9]'\n            minLength: 2\n            maxLength: 50\n        - name: domain-owner\n          in: query\n          required: false\n          description: ' The 12-digit account number of the AWS account that owns the domain. It does not include dashes or spaces. '\n          schema:\n            type: string\n            pattern: '[0-9]{12}'\n            minLength: 12\n            maxLength: 12\n        - name: repository\n          in: query\n          required: true\n          description: ' The name of the repository whose associated resource policy is to be retrieved. '\n          schema:\n            type: string\n            pattern: '[A-Za-z0-9][A-Za-z0-9._\\-]{1,99}'\n            minLength: 2\n            maxLength: 100\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n    put:\n      operationId: PutRepositoryPermissionsPolicy\n      description: '<p> Sets the resource policy on a repository that specifies permissions to access it. </p> <p> When you call <code>PutRepositoryPermissionsPolicy</code>, the resource policy on the repository is ignored when evaluting permissions. This ensures that the owner of a repository cannot lock themselves out of the repository, which would prevent them from being able to update the resource policy. </p>'\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PutRepositoryPermissionsPolicyResult'\n        '480':\n          description: AccessDeniedException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AccessDeniedException'\n        '481':\n          description: ConflictException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ConflictException'\n        '482':\n          description: InternalServerException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InternalServerException'\n        '483':\n          description: ResourceNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResourceNotFoundException'\n        '484':\n          description: ServiceQuotaExceededException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ServiceQuotaExceededException'\n        '485':\n          description: ThrottlingException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ThrottlingException'\n        '486':\n          description: ValidationException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ValidationException'\n      parameters:\n        - name: domain\n          in: query\n          required: true\n          description: ' The name of the domain containing the repository to set the resource policy on. '\n          schema:\n            type: string\n            pattern: '[a-z][a-z0-9\\-]{0,48}[a-z0-9]'\n            minLength: 2\n            maxLength: 50\n        - name: domain-owner\n          in: query\n          required: false\n          description: ' The 12-digit account number of the AWS account that owns the domain. It does not include dashes or spaces. '\n          schema:\n            type: string\n            pattern: '[0-9]{12}'\n            minLength: 12\n            maxLength: 12\n        - name: repository\n          in: query\n          required: true\n          description: ' The name of the repository to set the resource policy on. '\n          schema:\n            type: string\n            pattern: '[A-Za-z0-9][A-Za-z0-9._\\-]{1,99}'\n            minLength: 2\n            maxLength: 100\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              required:\n                - policyDocument\n              properties:\n                policyRevision:\n                  description: ' Sets the revision of the resource policy that specifies permissions to access the repository. This revision is used for optimistic locking, which prevents others from overwriting your changes to the repository''s resource policy. '\n                  type: string\n                  pattern: \\S+\n                  minLength: 1\n                  maxLength: 100\n                policyDocument:\n                  description: ' A valid displayable JSON Aspen policy string to be set as the access control resource policy on the provided repository. '\n                  type: string\n                  minLength: 1\n                  maxLength: 5120\n  /v1/domains:\n    post:\n      operationId: ListDomains\n      description: ' Returns a list of <a href=\"https://docs.aws.amazon.com/codeartifact/latest/APIReference/API_PackageVersionDescription.html\">DomainSummary</a> objects for all domains owned by the AWS account that makes this call. Each returned <code>DomainSummary</code> object contains information about a domain. '\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ListDomainsResult'\n        '480':\n          description: AccessDeniedException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AccessDeniedException'\n        '481':\n          description: InternalServerException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InternalServerException'\n        '482':\n          description: ThrottlingException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ThrottlingException'\n        '483':\n          description: ValidationException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ValidationException'\n      parameters:\n        - name: maxResults\n          in: query\n          schema:\n            type: string\n          description: Pagination limit\n          required: false\n        - name: nextToken\n          in: query\n          schema:\n            type: string\n          description: Pagination token\n          required: false\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                maxResults:\n                  description: ' The maximum number of results to return per page. '\n                  type: integer\n                  minimum: 1\n                  maximum: 1000\n                nextToken:\n                  description: ' The token for the next set of results. Use the value returned in the previous response in the next request to retrieve the next set of results. '\n                  type: string\n                  pattern: \\S+\n                  minLength: 1\n                  maxLength: 2000\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n  /v1/package/version/assets#domain&repository&format&package&version:\n    post:\n      operationId: ListPackageVersionAssets\n      description: ' Returns a list of <a href=\"https://docs.aws.amazon.com/codeartifact/latest/APIReference/API_AssetSummary.html\">AssetSummary</a> objects for assets in a package version. '\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ListPackageVersionAssetsResult'\n        '480':\n          description: AccessDeniedException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AccessDeniedException'\n        '481':\n          description: InternalServerException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InternalServerException'\n        '482':\n          description: ResourceNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResourceNotFoundException'\n        '483':\n          description: ThrottlingException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ThrottlingException'\n        '484':\n          description: ValidationException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ValidationException'\n      parameters:\n        - name: domain\n          in: query\n          required: true\n          description: ' The name of the domain that contains the repository associated with the package version assets. '\n          schema:\n            type: string\n            pattern: '[a-z][a-z0-9\\-]{0,48}[a-z0-9]'\n            minLength: 2\n            maxLength: 50\n        - name: domain-owner\n          in: query\n          required: false\n          description: ' The 12-digit account number of the AWS account that owns the domain. It does not include dashes or spaces. '\n          schema:\n            type: string\n            pattern: '[0-9]{12}'\n            minLength: 12\n            maxLength: 12\n        - name: repository\n          in: query\n          required: true\n          description: ' The name of the repository that contains the package that contains the returned package version assets. '\n          schema:\n            type: string\n            pattern: '[A-Za-z0-9][A-Za-z0-9._\\-]{1,99}'\n            minLength: 2\n            maxLength: 100\n        - name: format\n          in: query\n          required: true\n          description: '<p> The format of the package that contains the returned package version assets. The valid package types are: </p> <ul> <li> <p> <code>npm</code>: A Node Package Manager (npm) package. </p> </li> <li> <p> <code>pypi</code>: A Python Package Index (PyPI) package. </p> </li> <li> <p> <code>maven</code>: A Maven package that contains compiled code in a distributable format, such as a JAR file. </p> </li> </ul>'\n          schema:\n            type: string\n            enum:\n              - npm\n              - pypi\n              - maven\n              - nuget\n        - name: namespace\n          in: query\n          required: false\n          description: '<p> The namespace of the package. The package component that specifies its namespace depends on its type. For example: </p> <ul> <li> <p> The namespace of a Maven package is its <code>groupId</code>. </p> </li> <li> <p> The namespace of an npm package is its <code>scope</code>. </p> </li> <li> <p> A Python package does not contain a corresponding component, so Python packages do not have a namespace. </p> </li> </ul>'\n          schema:\n            type: string\n            pattern: '[^!#/\\s]+'\n            minLength: 1\n            maxLength: 255\n        - name: package\n          in: query\n          required: true\n          description: ' The name of the package that contains the returned package version assets. '\n          schema:\n            type: string\n            pattern: '[^!#/\\s]+'\n            minLength: 1\n            maxLength: 255\n        - name: version\n          in: query\n          required: true\n          description: ' A string that contains the package version (for example, <code>3.5.2</code>). '\n          schema:\n            type: string\n            pattern: '[^!#/\\s]+'\n            minLength: 1\n            maxLength: 255\n        - name: max-results\n          in: query\n          required: false\n          description: ' The maximum number of results to return per page. '\n          schema:\n            type: integer\n            minimum: 1\n            maximum: 1000\n        - name: next-token\n          in: query\n          required: false\n          description: ' The token for the next set of results. Use the value returned in the previous response in the next request to retrieve the next set of results. '\n          schema:\n            type: string\n            pattern: \\S+\n            minLength: 1\n            maxLength: 2000\n        - name: maxResults\n          in: query\n          schema:\n            type: string\n          description: Pagination limit\n          required: false\n        - name: nextToken\n          in: query\n          schema:\n            type: string\n          description: Pagination token\n          required: false\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n  /v1/package/version/dependencies#domain&repository&format&package&version:\n    post:\n      operationId: ListPackageVersionDependencies\n      description: ' Returns the direct dependencies for a package version. The dependencies are returned as <a href=\"https://docs.aws.amazon.com/codeartifact/latest/APIReference/API_PackageDependency.html\">PackageDependency</a> objects. CodeArtifact extracts the dependencies for a package version from the metadata file for the package format (for example, the <code>package.json</code> file for npm packages and the <code>pom.xml</code> file for Maven). Any package version dependencies that are not listed in the configuration file are not returned. '\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ListPackageVersionDependenciesResult'\n        '480':\n          description: AccessDeniedException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AccessDeniedException'\n        '481':\n          description: InternalServerException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InternalServerException'\n        '482':\n          description: ResourceNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResourceNotFoundException'\n        '483':\n          description: ThrottlingException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ThrottlingException'\n        '484':\n          description: ValidationException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ValidationException'\n      parameters:\n        - name: domain\n          in: query\n          required: true\n          description: ' The name of the domain that contains the repository that contains the requested package version dependencies. '\n          schema:\n            type: string\n            pattern: '[a-z][a-z0-9\\-]{0,48}[a-z0-9]'\n            minLength: 2\n            maxLength: 50\n        - name: domain-owner\n          in: query\n          required: false\n          description: ' The 12-digit account number of the AWS account that owns the domain. It does not include dashes or spaces. '\n          schema:\n            type: string\n            pattern: '[0-9]{12}'\n            minLength: 12\n            maxLength: 12\n        - name: repository\n          in: query\n          required: true\n          description: ' The name of the repository that contains the requested package version. '\n          schema:\n            type: string\n            pattern: '[A-Za-z0-9][A-Za-z0-9._\\-]{1,99}'\n            minLength: 2\n            maxLength: 100\n        - name: format\n          in: query\n          required: true\n          description: '<p> The format of the package with the requested dependencies. The valid package types are: </p> <ul> <li> <p> <code>npm</code>: A Node Package Manager (npm) package. </p> </li> <li> <p> <code>pypi</code>: A Python Package Index (PyPI) package. </p> </li> <li> <p> <code>maven</code>: A Maven package that contains compiled code in a distributable format, such as a JAR file. </p> </li> </ul>'\n          schema:\n            type: string\n            enum:\n              - npm\n              - pypi\n              - maven\n              - nuget\n        - name: namespace\n          in: query\n          required: false\n          description: '<p> The namespace of the package. The package component that specifies its namespace depends on its type. For example: </p> <ul> <li> <p> The namespace of a Maven package is its <code>groupId</code>. </p> </li> <li> <p> The namespace of an npm package is its <code>scope</code>. </p> </li> <li> <p> A Python package does not contain a corresponding component, so Python packages do not have a namespace. </p> </li> </ul>'\n          schema:\n            type: string\n            pattern: '[^!#/\\s]+'\n            minLength: 1\n            maxLength: 255\n        - name: package\n          in: query\n          required: true\n          description: ' The name of the package versions'' package. '\n          schema:\n            type: string\n            pattern: '[^!#/\\s]+'\n            minLength: 1\n            maxLength: 255\n        - name: version\n          in: query\n          required: true\n          description: ' A string that contains the package version (for example, <code>3.5.2</code>). '\n          schema:\n            type: string\n            pattern: '[^!#/\\s]+'\n            minLength: 1\n            maxLength: 255\n        - name: next-token\n          in: query\n          required: false\n          description: ' The token for the next set of results. Use the value returned in the previous response in the next request to retrieve the next set of results. '\n          schema:\n            type: string\n            pattern: \\S+\n            minLength: 1\n            maxLength: 2000\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n  /v1/package/versions#domain&repository&format&package:\n    post:\n      operationId: ListPackageVersions\n      description: ' Returns a list of <a href=\"https://docs.aws.amazon.com/codeartifact/latest/APIReference/API_PackageVersionSummary.html\">PackageVersionSummary</a> objects for package versions in a repository that match the request parameters. '\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ListPackageVersionsResult'\n        '480':\n          description: AccessDeniedException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AccessDeniedException'\n        '481':\n          description: InternalServerException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InternalServerException'\n        '482':\n          description: ResourceNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResourceNotFoundException'\n        '483':\n          description: ThrottlingException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ThrottlingException'\n        '484':\n          description: ValidationException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ValidationException'\n      parameters:\n        - name: domain\n          in: query\n          required: true\n          description: ' The name of the domain that contains the repository that contains the returned package versions. '\n          schema:\n            type: string\n            pattern: '[a-z][a-z0-9\\-]{0,48}[a-z0-9]'\n            minLength: 2\n            maxLength: 50\n        - name: domain-owner\n          in: query\n          required: false\n          description: ' The 12-digit account number of the AWS account that owns the domain. It does not include dashes or spaces. '\n          schema:\n            type: string\n            pattern: '[0-9]{12}'\n            minLength: 12\n            maxLength: 12\n        - name: repository\n          in: query\n          required: true\n          description: ' The name of the repository that contains the package. '\n          schema:\n            type: string\n            pattern: '[A-Za-z0-9][A-Za-z0-9._\\-]{1,99}'\n            minLength: 2\n            maxLength: 100\n        - name: format\n          in: query\n          required: true\n          description: '<p> The format of the returned packages. The valid package types are: </p> <ul> <li> <p> <code>npm</code>: A Node Package Manager (npm) package. </p> </li> <li> <p> <code>pypi</code>: A Python Package Index (PyPI) package. </p> </li> <li> <p> <code>maven</code>: A Maven package that contains compiled code in a distributable format, such as a JAR file. </p> </li> </ul>'\n          schema:\n            type: string\n            enum:\n              - npm\n              - pypi\n              - maven\n              - nuget\n        - name: namespace\n          in: query\n          required: false\n          description: '<p> The namespace of the package. The package component that specifies its namespace depends on its type. For example: </p> <ul> <li> <p> The namespace of a Maven package is its <code>groupId</code>. </p> </li> <li> <p> The namespace of an npm package is its <code>scope</code>. </p> </li> <li> <p> A Python package does not contain a corresponding component, so Python packages do not have a namespace. </p> </li> </ul>'\n          schema:\n            type: string\n            pattern: '[^!#/\\s]+'\n            minLength: 1\n            maxLength: 255\n        - name: package\n          in: query\n          required: true\n          description: ' The name of the package for which you want to return a list of package versions. '\n          schema:\n            type: string\n            pattern: '[^!#/\\s]+'\n            minLength: 1\n            maxLength: 255\n        - name: status\n          in: query\n          required: false\n          description: '<p> A string that specifies the status of the package versions to include in the returned list. It can be one of the following: </p> <ul> <li> <p> <code>Published</code> </p> </li> <li> <p> <code>Unfinished</code> </p> </li> <li> <p> <code>Unlisted</code> </p> </li> <li> <p> <code>Archived</code> </p> </li> <li> <p> <code>Disposed</code> </p> </li> </ul>'\n          schema:\n            type: string\n            enum:\n              - Published\n              - Unfinished\n              - Unlisted\n              - Archived\n              - Disposed\n              - Deleted\n        - name: sortBy\n          in: query\n          required: false\n          description: ' How to sort the returned list of package versions. '\n          schema:\n            type: string\n            enum:\n              - PUBLISHED_TIME\n        - name: max-results\n          in: query\n          required: false\n          description: ' The maximum number of results to return per page. '\n          schema:\n            type: integer\n            minimum: 1\n            maximum: 1000\n        - name: next-token\n          in: query\n          required: false\n          description: ' The token for the next set of results. Use the value returned in the previous response in the next request to retrieve the next set of results. '\n          schema:\n            type: string\n            pattern: \\S+\n            minLength: 1\n            maxLength: 2000\n        - name: maxResults\n          in: query\n          schema:\n            type: string\n          description: Pagination limit\n          required: false\n        - name: nextToken\n          in: query\n          schema:\n            type: string\n          description: Pagination token\n          required: false\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n  /v1/packages#domain&repository:\n    post:\n      operationId: ListPackages\n      description: ' Returns a list of <a href=\"https://docs.aws.amazon.com/codeartifact/latest/APIReference/API_PackageSummary.html\">PackageSummary</a> objects for packages in a repository that match the request parameters. '\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ListPackagesResult'\n        '480':\n          description: AccessDeniedException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AccessDeniedException'\n        '481':\n          description: InternalServerException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InternalServerException'\n        '482':\n          description: ResourceNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResourceNotFoundException'\n        '483':\n          description: ThrottlingException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ThrottlingException'\n        '484':\n          description: ValidationException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ValidationException'\n      parameters:\n        - name: domain\n          in: query\n          required: true\n          description: ' The name of the domain that contains the repository that contains the requested list of packages. '\n          schema:\n            type: string\n            pattern: '[a-z][a-z0-9\\-]{0,48}[a-z0-9]'\n            minLength: 2\n            maxLength: 50\n        - name: domain-owner\n          in: query\n          required: false\n          description: ' The 12-digit account number of the AWS account that owns the domain. It does not include dashes or spaces. '\n          schema:\n            type: string\n            pattern: '[0-9]{12}'\n            minLength: 12\n            maxLength: 12\n        - name: repository\n          in: query\n          required: true\n          description: ' The name of the repository from which packages are to be listed. '\n          schema:\n            type: string\n            pattern: '[A-Za-z0-9][A-Za-z0-9._\\-]{1,99}'\n            minLength: 2\n            maxLength: 100\n        - name: format\n          in: query\n          required: false\n          description: '<p> The format of the packages. The valid package types are: </p> <ul> <li> <p> <code>npm</code>: A Node Package Manager (npm) package. </p> </li> <li> <p> <code>pypi</code>: A Python Package Index (PyPI) package. </p> </li> <li> <p> <code>maven</code>: A Maven package that contains compiled code in a distributable format, such as a JAR file. </p> </li> </ul>'\n          schema:\n            type: string\n            enum:\n              - npm\n              - pypi\n              - maven\n              - nuget\n        - name: namespace\n          in: query\n          required: false\n          description: '<p> The namespace of the package. The package component that specifies its namespace depends on its type. For example: </p> <ul> <li> <p> The namespace of a Maven package is its <code>groupId</code>. </p> </li> <li> <p> The namespace of an npm package is its <code>scope</code>. </p> </li> <li> <p> A Python package does not contain a corresponding component, so Python packages do not have a namespace. </p> </li> </ul>'\n          schema:\n            type: string\n            pattern: '[^!#/\\s]+'\n            minLength: 1\n            maxLength: 255\n        - name: package-prefix\n          in: query\n          required: false\n          description: ' A prefix used to filter returned packages. Only packages with names that start with <code>packagePrefix</code> are returned. '\n          schema:\n            type: string\n            pattern: '[^!#/\\s]+'\n            minLength: 1\n            maxLength: 255\n        - name: max-results\n          in: query\n          required: false\n          description: ' The maximum number of results to return per page. '\n          schema:\n            type: integer\n            minimum: 1\n            maximum: 1000\n        - name: next-token\n          in: query\n          required: false\n          description: ' The token for the next set of results. Use the value returned in the previous response in the next request to retrieve the next set of results. '\n          schema:\n            type: string\n            pattern: \\S+\n            minLength: 1\n            maxLength: 2000\n        - name: maxResults\n          in: query\n          schema:\n            type: string\n          description: Pagination limit\n          required: false\n        - name: nextToken\n          in: query\n          schema:\n            type: string\n          description: Pagination token\n          required: false\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n  /v1/repositories:\n    post:\n      operationId: ListRepositories\n      description: ' Returns a list of <a href=\"https://docs.aws.amazon.com/codeartifact/latest/APIReference/API_RepositorySummary.html\">RepositorySummary</a> objects. Each <code>RepositorySummary</code> contains information about a repository in the specified AWS account and that matches the input parameters. '\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ListRepositoriesResult'\n        '480':\n          description: AccessDeniedException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AccessDeniedException'\n        '481':\n          description: InternalServerException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InternalServerException'\n        '482':\n          description: ThrottlingException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ThrottlingException'\n        '483':\n          description: ValidationException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ValidationException'\n      parameters:\n        - name: repository-prefix\n          in: query\n          required: false\n          description: ' A prefix used to filter returned repositories. Only repositories with names that start with <code>repositoryPrefix</code> are returned.'\n          schema:\n            type: string\n            pattern: '[A-Za-z0-9][A-Za-z0-9._\\-]{1,99}'\n            minLength: 2\n            maxLength: 100\n        - name: max-results\n          in: query\n          required: false\n          description: ' The maximum number of results to return per page. '\n          schema:\n            type: integer\n            minimum: 1\n            maximum: 1000\n        - name: next-token\n          in: query\n          required: false\n          description: ' The token for the next set of results. Use the value returned in the previous response in the next request to retrieve the next set of results. '\n          schema:\n            type: string\n            pattern: \\S+\n            minLength: 1\n            maxLength: 2000\n        - name: maxResults\n          in: query\n          schema:\n            type: string\n          description: Pagination limit\n          required: false\n        - name: nextToken\n          in: query\n          schema:\n            type: string\n          description: Pagination token\n          required: false\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n  /v1/domain/repositories#domain:\n    post:\n      operationId: ListRepositoriesInDomain\n      description: ' Returns a list of <a href=\"https://docs.aws.amazon.com/codeartifact/latest/APIReference/API_RepositorySummary.html\">RepositorySummary</a> objects. Each <code>RepositorySummary</code> contains information about a repository in the specified domain and that matches the input parameters. '\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ListRepositoriesInDomainResult'\n        '480':\n          description: AccessDeniedException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AccessDeniedException'\n        '481':\n          description: InternalServerException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InternalServerException'\n        '482':\n          description: ResourceNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResourceNotFoundException'\n        '483':\n          description: ThrottlingException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ThrottlingException'\n        '484':\n          description: ValidationException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ValidationException'\n      parameters:\n        - name: domain\n          in: query\n          required: true\n          description: ' The name of the domain that contains the returned list of repositories. '\n          schema:\n            type: string\n            pattern: '[a-z][a-z0-9\\-]{0,48}[a-z0-9]'\n            minLength: 2\n            maxLength: 50\n        - name: domain-owner\n          in: query\n          required: false\n          description: ' The 12-digit account number of the AWS account that owns the domain. It does not include dashes or spaces. '\n          schema:\n            type: string\n            pattern: '[0-9]{12}'\n            minLength: 12\n            maxLength: 12\n        - name: administrator-account\n          in: query\n          required: false\n          description: ' Filter the list of repositories to only include those that are managed by the AWS account ID. '\n          schema:\n            type: string\n            pattern: '[0-9]{12}'\n            minLength: 12\n            maxLength: 12\n        - name: repository-prefix\n          in: query\n          required: false\n          description: ' A prefix used to filter returned repositories. Only repositories with names that start with <code>repositoryPrefix</code> are returned. '\n          schema:\n            type: string\n            pattern: '[A-Za-z0-9][A-Za-z0-9._\\-]{1,99}'\n            minLength: 2\n            maxLength: 100\n        - name: max-results\n          in: query\n          required: false\n          description: ' The maximum number of results to return per page. '\n          schema:\n            type: integer\n            minimum: 1\n            maximum: 1000\n        - name: next-token\n          in: query\n          required: false\n          description: ' The token for the next set of results. Use the value returned in the previous response in the next request to retrieve the next set of results. '\n          schema:\n            type: string\n            pattern: \\S+\n            minLength: 1\n            maxLength: 2000\n        - name: maxResults\n          in: query\n          schema:\n            type: string\n          description: Pagination limit\n          required: false\n        - name: nextToken\n          in: query\n          schema:\n            type: string\n          description: Pagination token\n          required: false\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n  /v1/tags#resourceArn:\n    post:\n      operationId: ListTagsForResource\n      description: Gets information about AWS tags for a specified Amazon Resource Name (ARN) in AWS CodeArtifact.\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ListTagsForResourceResult'\n        '480':\n          description: AccessDeniedException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AccessDeniedException'\n        '481':\n          description: ResourceNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResourceNotFoundException'\n        '482':\n          description: ThrottlingException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ThrottlingException'\n        '483':\n          description: ValidationException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ValidationException'\n      parameters:\n        - name: resourceArn\n          in: query\n          required: true\n          description: The Amazon Resource Name (ARN) of the resource to get tags for.\n          schema:\n            type: string\n            pattern: \\S+\n            minLength: 1\n            maxLength: 1011\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n  /v1/domain/permissions/policy:\n    put:\n      operationId: PutDomainPermissionsPolicy\n      description: '<p> Sets a resource policy on a domain that specifies permissions to access it. </p> <p> When you call <code>PutDomainPermissionsPolicy</code>, the resource policy on the domain is ignored when evaluting permissions. This ensures that the owner of a domain cannot lock themselves out of the domain, which would prevent them from being able to update the resource policy. </p>'\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PutDomainPermissionsPolicyResult'\n        '480':\n          description: AccessDeniedException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AccessDeniedException'\n        '481':\n          description: ConflictException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ConflictException'\n        '482':\n          description: InternalServerException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InternalServerException'\n        '483':\n          description: ResourceNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResourceNotFoundException'\n        '484':\n          description: ServiceQuotaExceededException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ServiceQuotaExceededException'\n        '485':\n          description: ThrottlingException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ThrottlingException'\n        '486':\n          description: ValidationException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ValidationException'\n      parameters: []\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              required:\n                - domain\n                - policyDocument\n              properties:\n                domain:\n                  description: ' The name of the domain on which to set the resource policy. '\n                  type: string\n                  pattern: '[a-z][a-z0-9\\-]{0,48}[a-z0-9]'\n                  minLength: 2\n                  maxLength: 50\n                domainOwner:\n                  description: ' The 12-digit account number of the AWS account that owns the domain. It does not include dashes or spaces. '\n                  type: string\n                  pattern: '[0-9]{12}'\n                  minLength: 12\n                  maxLength: 12\n                policyRevision:\n                  description: ' The current revision of the resource policy to be set. This revision is used for optimistic locking, which prevents others from overwriting your changes to the domain''s resource policy. '\n                  type: string\n                  pattern: \\S+\n                  minLength: 1\n                  maxLength: 100\n                policyDocument:\n                  description: ' A valid displayable JSON Aspen policy string to be set as the access control resource policy on the provided domain. '\n                  type: string\n                  minLength: 1\n                  maxLength: 5120\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n  /v1/tag#resourceArn:\n    post:\n      operationId: TagResource\n      description: Adds or updates tags for a resource in AWS CodeArtifact.\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/TagResourceResult'\n        '480':\n          description: AccessDeniedException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AccessDeniedException'\n        '481':\n          description: ResourceNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResourceNotFoundException'\n        '482':\n          description: ServiceQuotaExceededException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ServiceQuotaExceededException'\n        '483':\n          description: ThrottlingException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ThrottlingException'\n        '484':\n          description: ValidationException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ValidationException'\n      parameters:\n        - name: resourceArn\n          in: query\n          required: true\n          description: The Amazon Resource Name (ARN) of the resource that you want to add or update tags for.\n          schema:\n            type: string\n            pattern: \\S+\n            minLength: 1\n            maxLength: 1011\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              required:\n                - tags\n              properties:\n                tags:\n                  description: The tags you want to modify or add to the resource.\n                  type: array\n                  items:\n                    $ref: '#/components/schemas/Tag'\n                  minItems: 0\n                  maxItems: 200\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n  /v1/untag#resourceArn:\n    post:\n      operationId: UntagResource\n      description: Removes tags from a resource in AWS CodeArtifact.\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/UntagResourceResult'\n        '480':\n          description: AccessDeniedException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AccessDeniedException'\n        '481':\n          description: ResourceNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResourceNotFoundException'\n        '482':\n          description: ThrottlingException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ThrottlingException'\n        '483':\n          description: ValidationException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ValidationException'\n      parameters:\n        - name: resourceArn\n          in: query\n          required: true\n          description: The Amazon Resource Name (ARN) of the resource that you want to remove tags from.\n          schema:\n            type: string\n            pattern: \\S+\n            minLength: 1\n            maxLength: 1011\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              required:\n                - tagKeys\n              properties:\n                tagKeys:\n                  description: The tag key for each tag that you want to remove from the resource.\n                  type: array\n                  items:\n                    $ref: '#/components/schemas/TagKey'\n                  minItems: 0\n                  maxItems: 200\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n  /v1/package/versions/update_status#domain&repository&format&package:\n    post:\n      operationId: UpdatePackageVersionsStatus\n      description: ' Updates the status of one or more versions of a package. '\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/UpdatePackageVersionsStatusResult'\n        '480':\n          description: AccessDeniedException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AccessDeniedException'\n        '481':\n          description: ConflictException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ConflictException'\n        '482':\n          description: InternalServerException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InternalServerException'\n        '483':\n          description: ResourceNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResourceNotFoundException'\n        '484':\n          description: ThrottlingException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ThrottlingException'\n        '485':\n          description: ValidationException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ValidationException'\n      parameters:\n        - name: domain\n          in: query\n          required: true\n          description: ' The name of the domain that contains the repository that contains the package versions with a status to be updated. '\n          schema:\n            type: string\n            pattern: '[a-z][a-z0-9\\-]{0,48}[a-z0-9]'\n            minLength: 2\n            maxLength: 50\n        - name: domain-owner\n          in: query\n          required: false\n          description: ' The 12-digit account number of the AWS account that owns the domain. It does not include dashes or spaces. '\n          schema:\n            type: string\n            pattern: '[0-9]{12}'\n            minLength: 12\n            maxLength: 12\n        - name: repository\n          in: query\n          required: true\n          description: ' The repository that contains the package versions with the status you want to update. '\n          schema:\n            type: string\n            pattern: '[A-Za-z0-9][A-Za-z0-9._\\-]{1,99}'\n            minLength: 2\n            maxLength: 100\n        - name: format\n          in: query\n          required: true\n          description: '<p> A format that specifies the type of the package with the statuses to update. The valid values are: </p> <ul> <li> <p> <code>npm</code> </p> </li> <li> <p> <code>pypi</code> </p> </li> <li> <p> <code>maven</code> </p> </li> </ul>'\n          schema:\n            type: string\n            enum:\n              - npm\n              - pypi\n              - maven\n              - nuget\n        - name: namespace\n          in: query\n          required: false\n          description: '<p> The namespace of the package. The package component that specifies its namespace depends on its type. For example: </p> <ul> <li> <p> The namespace of a Maven package is its <code>groupId</code>. </p> </li> <li> <p> The namespace of an npm package is its <code>scope</code>. </p> </li> <li> <p> A Python package does not contain a corresponding component, so Python packages do not have a namespace. </p> </li> </ul>'\n          schema:\n            type: string\n            pattern: '[^!#/\\s]+'\n            minLength: 1\n            maxLength: 255\n        - name: package\n          in: query\n          required: true\n          description: ' The name of the package with the version statuses to update. '\n          schema:\n            type: string\n            pattern: '[^!#/\\s]+'\n            minLength: 1\n            maxLength: 255\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              required:\n                - versions\n                - targetStatus\n              properties:\n                versions:\n                  description: ' An array of strings that specify the versions of the package with the statuses to update. '\n                  type: array\n                  items:\n                    $ref: '#/components/schemas/PackageVersion'\n                  maxItems: 100\n                versionRevisions:\n                  description: ' A map of package versions and package version revisions. The map <code>key</code> is the package version (for example, <code>3.5.2</code>), and the map <code>value</code> is the package version revision. '\n                  type: object\n                  additionalProperties:\n                    $ref: '#/components/schemas/PackageVersionRevision'\n                expectedStatus:\n                  description: ' The package version’s expected status before it is updated. If <code>expectedStatus</code> is provided, the package version''s status is updated only if its status at the time <code>UpdatePackageVersionsStatus</code> is called matches <code>expectedStatus</code>. '\n                  type: string\n                  enum:\n                    - Published\n                    - Unfinished\n                    - Unlisted\n                    - Archived\n                    - Disposed\n                    - Deleted\n                targetStatus:\n                  description: ' The status you want to change the package version status to. '\n                  type: string\n                  enum:\n                    - Published\n                    - Unfinished\n                    - Unlisted\n                    - Archived\n                    - Disposed\n                    - Deleted\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\ncomponents:\n  parameters:\n    X-Amz-Content-Sha256:\n      name: X-Amz-Content-Sha256\n      in: header\n      schema:\n        type: string\n      required: false\n    X-Amz-Date:\n      name: X-Amz-Date\n      in: header\n      schema:\n        type: string\n      required: false\n    X-Amz-Algorithm:\n      name: X-Amz-Algorithm\n      in: header\n      schema:\n        type: string\n      required: false\n    X-Amz-Credential:\n      name: X-Amz-Credential\n      in: header\n      schema:\n        type: string\n      required: false\n    X-Amz-Security-Token:\n      name: X-Amz-Security-Token\n      in: header\n      schema:\n        type: string\n      required: false\n    X-Amz-Signature:\n      name: X-Amz-Signature\n      in: header\n      schema:\n        type: string\n      required: false\n    X-Amz-SignedHeaders:\n      name: X-Amz-SignedHeaders\n      in: header\n      schema:\n        type: string\n      required: false\n  securitySchemes:\n    hmac:\n      type: apiKey\n      name: Authorization\n      in: header\n      description: Amazon Signature authorization v4\n      x-amazon-apigateway-authtype: awsSigv4\n  schemas:\n    AssociateExternalConnectionResult:\n      type: object\n      properties:\n        repository:\n          allOf:\n            - $ref: '#/components/schemas/RepositoryDescription'\n            - description: ' Information about the connected repository after processing the request. '\n    AccessDeniedException: {}\n    ConflictException: {}\n    InternalServerException: {}\n    ResourceNotFoundException: {}\n    ServiceQuotaExceededException: {}\n    ThrottlingException: {}\n    ValidationException: {}\n    CopyPackageVersionsResult:\n      type: object\n      properties:\n        successfulVersions:\n          allOf:\n            - $ref: '#/components/schemas/SuccessfulPackageVersionInfoMap'\n            - description: ' A list of the package versions that were successfully copied to your repository. '\n        failedVersions:\n          allOf:\n            - $ref: '#/components/schemas/PackageVersionErrorMap'\n            - description: '<p> A map of package versions that failed to copy and their error codes. The possible error codes are in the <code>PackageVersionError</code> data type. They are: </p> <ul> <li> <p> <code>ALREADY_EXISTS</code> </p> </li> <li> <p> <code>MISMATCHED_REVISION</code> </p> </li> <li> <p> <code>MISMATCHED_STATUS</code> </p> </li> <li> <p> <code>NOT_ALLOWED</code> </p> </li> <li> <p> <code>NOT_FOUND</code> </p> </li> <li> <p> <code>SKIPPED</code> </p> </li> </ul>'\n    PackageVersion:\n      type: string\n      pattern: '[^!#/\\s]+'\n      minLength: 1\n      maxLength: 255\n    PackageVersionRevision:\n      type: string\n      pattern: \\S+\n      minLength: 1\n      maxLength: 50\n    CreateDomainResult:\n      type: object\n      properties:\n        domain:\n          allOf:\n            - $ref: '#/components/schemas/DomainDescription'\n            - description: ' Contains information about the created domain after processing the request. '\n    Tag:\n      type: object\n      required:\n        - key\n        - value\n      properties:\n        key:\n          allOf:\n            - $ref: '#/components/schemas/TagKey'\n            - description: The tag key.\n        value:\n          allOf:\n            - $ref: '#/components/schemas/TagValue'\n            - description: The tag value.\n      description: 'A tag is a key-value pair that can be used to manage, search for, or filter resources in AWS CodeArtifact.'\n    CreateRepositoryResult:\n      type: object\n      properties:\n        repository:\n          allOf:\n            - $ref: '#/components/schemas/RepositoryDescription'\n            - description: ' Information about the created repository after processing the request. '\n    UpstreamRepository:\n      type: object\n      required:\n        - repositoryName\n      properties:\n        repositoryName:\n          allOf:\n            - $ref: '#/components/schemas/RepositoryName'\n            - description: ' The name of an upstream repository. '\n      description: ' Information about an upstream repository. A list of <code>UpstreamRepository</code> objects is an input parameter to <a href=\"https://docs.aws.amazon.com/codeartifact/latest/APIReference/API_CreateRepository.html\">CreateRepository</a> and <a href=\"https://docs.aws.amazon.com/codeartifact/latest/APIReference/API_UpdateRepository.html\">UpdateRepository</a>. '\n    DeleteDomainResult:\n      type: object\n      properties:\n        domain:\n          allOf:\n            - $ref: '#/components/schemas/DomainDescription'\n            - description: ' Contains information about the deleted domain after processing the request. '\n    DeleteDomainPermissionsPolicyResult:\n      type: object\n      properties:\n        policy:\n          allOf:\n            - $ref: '#/components/schemas/ResourcePolicy'\n            - description: ' Information about the deleted resource policy after processing the request. '\n    DeletePackageVersionsResult:\n      type: object\n      properties:\n        successfulVersions:\n          allOf:\n            - $ref: '#/components/schemas/SuccessfulPackageVersionInfoMap'\n            - description: ' A list of the package versions that were successfully deleted. '\n        failedVersions:\n          allOf:\n            - $ref: '#/components/schemas/PackageVersionErrorMap'\n            - description: '<p> A <code>PackageVersionError</code> object that contains a map of errors codes for the deleted package that failed. The possible error codes are: </p> <ul> <li> <p> <code>ALREADY_EXISTS</code> </p> </li> <li> <p> <code>MISMATCHED_REVISION</code> </p> </li> <li> <p> <code>MISMATCHED_STATUS</code> </p> </li> <li> <p> <code>NOT_ALLOWED</code> </p> </li> <li> <p> <code>NOT_FOUND</code> </p> </li> <li> <p> <code>SKIPPED</code> </p> </li> </ul>'\n    DeleteRepositoryResult:\n      type: object\n      properties:\n        repository:\n          allOf:\n            - $ref: '#/components/schemas/RepositoryDescription'\n            - description: ' Information about the deleted repository after processing the request. '\n    DeleteRepositoryPermissionsPolicyResult:\n      type: object\n      properties:\n        policy:\n          allOf:\n            - $ref: '#/components/schemas/ResourcePolicy'\n            - description: ' Information about the deleted policy after processing the request. '\n    DescribeDomainResult:\n      type: object\n      properties:\n        domain:\n          $ref: '#/components/schemas/DomainDescription'\n    DescribePackageVersionResult:\n      type: object\n      required:\n        - packageVersion\n      properties:\n        packageVersion:\n          allOf:\n            - $ref: '#/components/schemas/PackageVersionDescription'\n            - description: ' A <a href=\"https://docs.aws.amazon.com/codeartifact/latest/APIReference/API_PackageVersionDescription.html\">PackageVersionDescription</a> object that contains information about the requested package version. '\n    DescribeRepositoryResult:\n      type: object\n      properties:\n        repository:\n          allOf:\n            - $ref: '#/components/schemas/RepositoryDescription'\n            - description: ' A <code>RepositoryDescription</code> object that contains the requested repository information. '\n    DisassociateExternalConnectionResult:\n      type: object\n      properties:\n        repository:\n          allOf:\n            - $ref: '#/components/schemas/RepositoryDescription'\n            - description: ' The repository associated with the removed external connection. '\n    DisposePackageVersionsResult:\n      type: object\n      properties:\n        successfulVersions:\n          allOf:\n            - $ref: '#/components/schemas/SuccessfulPackageVersionInfoMap'\n            - description: ' A list of the package versions that were successfully disposed. '\n        failedVersions:\n          allOf:\n            - $ref: '#/components/schemas/PackageVersionErrorMap'\n            - description: '<p> A <code>PackageVersionError</code> object that contains a map of errors codes for the disposed package versions that failed. The possible error codes are: </p> <ul> <li> <p> <code>ALREADY_EXISTS</code> </p> </li> <li> <p> <code>MISMATCHED_REVISION</code> </p> </li> <li> <p> <code>MISMATCHED_STATUS</code> </p> </li> <li> <p> <code>NOT_ALLOWED</code> </p> </li> <li> <p> <code>NOT_FOUND</code> </p> </li> <li> <p> <code>SKIPPED</code> </p> </li> </ul>'\n    GetAuthorizationTokenResult:\n      type: object\n      properties:\n        authorizationToken:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: ' The returned authentication token. '\n        expiration:\n          allOf:\n            - $ref: '#/components/schemas/Timestamp'\n            - description: ' A timestamp that specifies the date and time the authorization token expires. '\n    GetDomainPermissionsPolicyResult:\n      type: object\n      properties:\n        policy:\n          allOf:\n            - $ref: '#/components/schemas/ResourcePolicy'\n            - description: ' The returned resource policy. '\n    GetPackageVersionAssetResult:\n      type: object\n      properties:\n        asset:\n          allOf:\n            - $ref: '#/components/schemas/Asset'\n            - description: ' The binary file, or asset, that is downloaded.'\n    GetPackageVersionReadmeResult:\n      type: object\n      properties:\n        format:\n          allOf:\n            - $ref: '#/components/schemas/PackageFormat'\n            - description: '<p> The format of the package with the requested readme file. Valid format types are: </p> <ul> <li> <p> <code>npm</code> </p> </li> <li> <p> <code>pypi</code> </p> </li> <li> <p> <code>maven</code> </p> </li> </ul>'\n        namespace:\n          allOf:\n            - $ref: '#/components/schemas/PackageNamespace'\n            - description: '<p> The namespace of the package. The package component that specifies its namespace depends on its type. For example: </p> <ul> <li> <p> The namespace of a Maven package is its <code>groupId</code>. </p> </li> <li> <p> The namespace of an npm package is its <code>scope</code>. </p> </li> <li> <p> A Python package does not contain a corresponding component, so Python packages do not have a namespace. </p> </li> </ul>'\n        package:\n          allOf:\n            - $ref: '#/components/schemas/PackageName'\n            - description: ' The name of the package that contains the returned readme file. '\n        version:\n          allOf:\n            - $ref: '#/components/schemas/PackageVersion'\n            - description: ' The version of the package with the requested readme file. '\n        versionRevision:\n          allOf:\n            - $ref: '#/components/schemas/PackageVersionRevision'\n            - description: ' The current revision associated with the package version. '\n        readme:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: ' The text of the returned readme file. '\n    GetRepositoryEndpointResult:\n      type: object\n      properties:\n        repositoryEndpoint:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: ' A string that specifies the URL of the returned endpoint. '\n    GetRepositoryPermissionsPolicyResult:\n      type: object\n      properties:\n        policy:\n          allOf:\n            - $ref: '#/components/schemas/ResourcePolicy'\n            - description: ' The returned resource policy. '\n    ListDomainsResult:\n      type: object\n      properties:\n        domains:\n          allOf:\n            - $ref: '#/components/schemas/DomainSummaryList'\n            - description: ' The returned list of <a href=\"https://docs.aws.amazon.com/codeartifact/latest/APIReference/API_DomainSummary.html\">DomainSummary</a> objects. '\n        nextToken:\n          allOf:\n            - $ref: '#/components/schemas/PaginationToken'\n            - description: ' The token for the next set of results. Use the value returned in the previous response in the next request to retrieve the next set of results. '\n    ListPackageVersionAssetsResult:\n      type: object\n      properties:\n        format:\n          allOf:\n            - $ref: '#/components/schemas/PackageFormat'\n            - description: ' The format of the package that contains the returned package version assets. '\n        namespace:\n          allOf:\n            - $ref: '#/components/schemas/PackageNamespace'\n            - description: '<p> The namespace of the package. The package component that specifies its namespace depends on its type. For example: </p> <ul> <li> <p> The namespace of a Maven package is its <code>groupId</code>. </p> </li> <li> <p> The namespace of an npm package is its <code>scope</code>. </p> </li> <li> <p> A Python package does not contain a corresponding component, so Python packages do not have a namespace. </p> </li> </ul>'\n        package:\n          allOf:\n            - $ref: '#/components/schemas/PackageName'\n            - description: ' The name of the package that contains the returned package version assets. '\n        version:\n          allOf:\n            - $ref: '#/components/schemas/PackageVersion'\n            - description: ' The version of the package associated with the returned assets. '\n        versionRevision:\n          allOf:\n            - $ref: '#/components/schemas/PackageVersionRevision'\n            - description: ' The current revision associated with the package version. '\n        nextToken:\n          allOf:\n            - $ref: '#/components/schemas/PaginationToken'\n            - description: ' If there are additional results, this is the token for the next set of results. '\n        assets:\n          allOf:\n            - $ref: '#/components/schemas/AssetSummaryList'\n            - description: ' The returned list of <a href=\"https://docs.aws.amazon.com/codeartifact/latest/APIReference/API_AssetSummary.html\">AssetSummary</a> objects. '\n    ListPackageVersionDependenciesResult:\n      type: object\n      properties:\n        format:\n          allOf:\n            - $ref: '#/components/schemas/PackageFormat'\n            - description: '<p> A format that specifies the type of the package that contains the returned dependencies. The valid values are: </p> <ul> <li> <p> <code>npm</code> </p> </li> <li> <p> <code>pypi</code> </p> </li> <li> <p> <code>maven</code> </p> </li> </ul>'\n        namespace:\n          allOf:\n            - $ref: '#/components/schemas/PackageNamespace'\n            - description: '<p> The namespace of the package. The package component that specifies its namespace depends on its type. For example: </p> <ul> <li> <p> The namespace of a Maven package is its <code>groupId</code>. </p> </li> <li> <p> The namespace of an npm package is its <code>scope</code>. </p> </li> <li> <p> A Python package does not contain a corresponding component, so Python packages do not have a namespace. </p> </li> </ul>'\n        package:\n          allOf:\n            - $ref: '#/components/schemas/PackageName'\n            - description: ' The name of the package that contains the returned package versions dependencies. '\n        version:\n          allOf:\n            - $ref: '#/components/schemas/PackageVersion'\n            - description: ' The version of the package that is specified in the request. '\n        versionRevision:\n          allOf:\n            - $ref: '#/components/schemas/PackageVersionRevision'\n            - description: ' The current revision associated with the package version. '\n        nextToken:\n          allOf:\n            - $ref: '#/components/schemas/PaginationToken'\n            - description: ' The token for the next set of results. Use the value returned in the previous response in the next request to retrieve the next set of results. '\n        dependencies:\n          allOf:\n            - $ref: '#/components/schemas/PackageDependencyList'\n            - description: ' The returned list of <a href=\"https://docs.aws.amazon.com/codeartifact/latest/APIReference/API_PackageDependency.html\">PackageDependency</a> objects. '\n    ListPackageVersionsResult:\n      type: object\n      properties:\n        defaultDisplayVersion:\n          allOf:\n            - $ref: '#/components/schemas/PackageVersion'\n            - description: '<p> The default package version to display. This depends on the package format: </p> <ul> <li> <p> For Maven and PyPI packages, it''s the most recently published package version. </p> </li> <li> <p> For npm packages, it''s the version referenced by the <code>latest</code> tag. If the <code>latest</code> tag is not set, it''s the most recently published package version. </p> </li> </ul>'\n        format:\n          allOf:\n            - $ref: '#/components/schemas/PackageFormat'\n            - description: '<p> A format of the package. Valid package format values are: </p> <ul> <li> <p> <code>npm</code> </p> </li> <li> <p> <code>pypi</code> </p> </li> <li> <p> <code>maven</code> </p> </li> </ul>'\n        namespace:\n          allOf:\n            - $ref: '#/components/schemas/PackageNamespace'\n            - description: '<p> The namespace of the package. The package component that specifies its namespace depends on its type. For example: </p> <ul> <li> <p> The namespace of a Maven package is its <code>groupId</code>. </p> </li> <li> <p> The namespace of an npm package is its <code>scope</code>. </p> </li> <li> <p> A Python package does not contain a corresponding component, so Python packages do not have a namespace. </p> </li> </ul>'\n        package:\n          allOf:\n            - $ref: '#/components/schemas/PackageName'\n            - description: ' The name of the package. '\n        versions:\n          allOf:\n            - $ref: '#/components/schemas/PackageVersionSummaryList'\n            - description: ' The returned list of <a href=\"https://docs.aws.amazon.com/codeartifact/latest/APIReference/API_PackageVersionSummary.html\">PackageVersionSummary</a> objects. '\n        nextToken:\n          allOf:\n            - $ref: '#/components/schemas/PaginationToken'\n            - description: ' If there are additional results, this is the token for the next set of results. '\n    ListPackagesResult:\n      type: object\n      properties:\n        packages:\n          allOf:\n            - $ref: '#/components/schemas/PackageSummaryList'\n            - description: ' The list of returned <a href=\"https://docs.aws.amazon.com/codeartifact/latest/APIReference/API_PackageSummary.html\">PackageSummary</a> objects. '\n        nextToken:\n          allOf:\n            - $ref: '#/components/schemas/PaginationToken'\n            - description: ' If there are additional results, this is the token for the next set of results. '\n    ListRepositoriesResult:\n      type: object\n      properties:\n        repositories:\n          allOf:\n            - $ref: '#/components/schemas/RepositorySummaryList'\n            - description: ' The returned list of <a href=\"https://docs.aws.amazon.com/codeartifact/latest/APIReference/API_RepositorySummary.html\">RepositorySummary</a> objects. '\n        nextToken:\n          allOf:\n            - $ref: '#/components/schemas/PaginationToken'\n            - description: ' If there are additional results, this is the token for the next set of results. '\n    ListRepositoriesInDomainResult:\n      type: object\n      properties:\n        repositories:\n          allOf:\n            - $ref: '#/components/schemas/RepositorySummaryList'\n            - description: ' The returned list of repositories. '\n        nextToken:\n          allOf:\n            - $ref: '#/components/schemas/PaginationToken'\n            - description: ' If there are additional results, this is the token for the next set of results. '\n    ListTagsForResourceResult:\n      type: object\n      properties:\n        tags:\n          allOf:\n            - $ref: '#/components/schemas/TagList'\n            - description: A list of tag key and value pairs associated with the specified resource.\n    PutDomainPermissionsPolicyResult:\n      type: object\n      properties:\n        policy:\n          allOf:\n            - $ref: '#/components/schemas/ResourcePolicy'\n            - description: ' The resource policy that was set after processing the request. '\n    PutRepositoryPermissionsPolicyResult:\n      type: object\n      properties:\n        policy:\n          allOf:\n            - $ref: '#/components/schemas/ResourcePolicy'\n            - description: ' The resource policy that was set after processing the request. '\n    TagResourceResult:\n      type: object\n      properties: {}\n    UntagResourceResult:\n      type: object\n      properties: {}\n    TagKey:\n      type: string\n      minLength: 1\n      maxLength: 128\n    UpdatePackageVersionsStatusResult:\n      type: object\n      properties:\n        successfulVersions:\n          allOf:\n            - $ref: '#/components/schemas/SuccessfulPackageVersionInfoMap'\n            - description: ' A list of <code>PackageVersionError</code> objects, one for each package version with a status that failed to update. '\n        failedVersions:\n          allOf:\n            - $ref: '#/components/schemas/PackageVersionErrorMap'\n            - description: ' A list of <code>SuccessfulPackageVersionInfo</code> objects, one for each package version with a status that successfully updated. '\n    UpdateRepositoryResult:\n      type: object\n      properties:\n        repository:\n          allOf:\n            - $ref: '#/components/schemas/RepositoryDescription'\n            - description: ' The updated repository. '\n    AccountId:\n      type: string\n      pattern: '[0-9]{12}'\n      minLength: 12\n      maxLength: 12\n    Arn:\n      type: string\n      pattern: \\S+\n      minLength: 1\n      maxLength: 1011\n    Asset:\n      type: string\n    HashValue:\n      type: string\n      pattern: '[0-9a-f]+'\n      minLength: 32\n      maxLength: 512\n    AssetHashes:\n      type: object\n      additionalProperties:\n        $ref: '#/components/schemas/HashValue'\n    AssetName:\n      type: string\n      pattern: '\\P{C}+'\n      minLength: 1\n      maxLength: 255\n    LongOptional:\n      type: integer\n    AssetSummary:\n      type: object\n      required:\n        - name\n      properties:\n        name:\n          allOf:\n            - $ref: '#/components/schemas/AssetName'\n            - description: ' The name of the asset. '\n        size:\n          allOf:\n            - $ref: '#/components/schemas/LongOptional'\n            - description: ' The size of the asset. '\n        hashes:\n          allOf:\n            - $ref: '#/components/schemas/AssetHashes'\n            - description: ' The hashes of the asset. '\n      description: ' Contains details about a package version asset. '\n    AssetSummaryList:\n      type: array\n      items:\n        $ref: '#/components/schemas/AssetSummary'\n    DomainName:\n      type: string\n      pattern: '[a-z][a-z0-9\\-]{0,48}[a-z0-9]'\n      minLength: 2\n      maxLength: 50\n    RepositoryName:\n      type: string\n      pattern: '[A-Za-z0-9][A-Za-z0-9._\\-]{1,99}'\n      minLength: 2\n      maxLength: 100\n    ExternalConnectionName:\n      type: string\n      pattern: '[A-Za-z0-9][A-Za-z0-9._\\-:]{1,99}'\n    AssociateExternalConnectionRequest:\n      type: object\n      title: AssociateExternalConnectionRequest\n      properties: {}\n    RepositoryDescription:\n      type: object\n      properties:\n        name:\n          allOf:\n            - $ref: '#/components/schemas/RepositoryName'\n            - description: ' The name of the repository. '\n        administratorAccount:\n          allOf:\n            - $ref: '#/components/schemas/AccountId'\n            - description: ' The 12-digit account number of the AWS account that manages the repository. '\n        domainName:\n          allOf:\n            - $ref: '#/components/schemas/DomainName'\n            - description: ' The name of the domain that contains the repository. '\n        domainOwner:\n          allOf:\n            - $ref: '#/components/schemas/AccountId'\n            - description: ' The 12-digit account number of the AWS account that owns the domain that contains the repository. It does not include dashes or spaces. '\n        arn:\n          allOf:\n            - $ref: '#/components/schemas/Arn'\n            - description: ' The Amazon Resource Name (ARN) of the repository. '\n        description:\n          allOf:\n            - $ref: '#/components/schemas/Description'\n            - description: ' A text description of the repository. '\n        upstreams:\n          allOf:\n            - $ref: '#/components/schemas/UpstreamRepositoryInfoList'\n            - description: ' A list of upstream repositories to associate with the repository. The order of the upstream repositories in the list determines their priority order when AWS CodeArtifact looks for a requested package version. For more information, see <a href=\"https://docs.aws.amazon.com/codeartifact/latest/ug/repos-upstream.html\">Working with upstream repositories</a>. '\n        externalConnections:\n          allOf:\n            - $ref: '#/components/schemas/RepositoryExternalConnectionInfoList'\n            - description: ' An array of external connections associated with the repository. '\n      description: ' The details of a repository stored in AWS CodeArtifact. A CodeArtifact repository contains a set of package versions, each of which maps to a set of assets. Repositories are polyglot—a single repository can contain packages of any supported type. Each repository exposes endpoints for fetching and publishing packages using tools like the <code>npm</code> CLI, the Maven CLI (<code>mvn</code>), and <code>pip</code>. You can create up to 100 repositories per AWS account. '\n    AuthorizationTokenDurationSeconds:\n      type: integer\n      minimum: 0\n      maximum: 43200\n    BooleanOptional:\n      type: boolean\n    PackageFormat:\n      type: string\n      enum:\n        - npm\n        - pypi\n        - maven\n        - nuget\n    PackageNamespace:\n      type: string\n      pattern: '[^!#/\\s]+'\n      minLength: 1\n      maxLength: 255\n    PackageName:\n      type: string\n      pattern: '[^!#/\\s]+'\n      minLength: 1\n      maxLength: 255\n    PackageVersionList:\n      type: array\n      items:\n        $ref: '#/components/schemas/PackageVersion'\n      maxItems: 100\n    PackageVersionRevisionMap:\n      type: object\n      additionalProperties:\n        $ref: '#/components/schemas/PackageVersionRevision'\n    CopyPackageVersionsRequest:\n      type: object\n      title: CopyPackageVersionsRequest\n      properties:\n        versions:\n          allOf:\n            - $ref: '#/components/schemas/PackageVersionList'\n            - description: <p> The versions of the package to copy. </p> <note> <p> You must specify <code>versions</code> or <code>versionRevisions</code>. You cannot specify both. </p> </note>\n        versionRevisions:\n          allOf:\n            - $ref: '#/components/schemas/PackageVersionRevisionMap'\n            - description: <p> A list of key-value pairs. The keys are package versions and the values are package version revisions. A <code>CopyPackageVersion</code> operation succeeds if the specified versions in the source repository match the specified package version revision. </p> <note> <p> You must specify <code>versions</code> or <code>versionRevisions</code>. You cannot specify both. </p> </note>\n        allowOverwrite:\n          allOf:\n            - $ref: '#/components/schemas/BooleanOptional'\n            - description: ' Set to true to overwrite a package version that already exists in the destination repository. If set to false and the package version already exists in the destination repository, the package version is returned in the <code>failedVersions</code> field of the response with an <code>ALREADY_EXISTS</code> error code. '\n        includeFromUpstream:\n          allOf:\n            - $ref: '#/components/schemas/BooleanOptional'\n            - description: ' Set to true to copy packages from repositories that are upstream from the source repository to the destination repository. The default setting is false. For more information, see <a href=\"https://docs.aws.amazon.com/codeartifact/latest/ug/repos-upstream.html\">Working with upstream repositories</a>. '\n    SuccessfulPackageVersionInfoMap:\n      type: object\n      additionalProperties:\n        $ref: '#/components/schemas/SuccessfulPackageVersionInfo'\n    PackageVersionErrorMap:\n      type: object\n      additionalProperties:\n        $ref: '#/components/schemas/PackageVersionError'\n    TagList:\n      type: array\n      items:\n        $ref: '#/components/schemas/Tag'\n      minItems: 0\n      maxItems: 200\n    CreateDomainRequest:\n      type: object\n      title: CreateDomainRequest\n      properties:\n        encryptionKey:\n          allOf:\n            - $ref: '#/components/schemas/Arn'\n            - description: '<p> The encryption key for the domain. This is used to encrypt content stored in a domain. An encryption key can be a key ID, a key Amazon Resource Name (ARN), a key alias, or a key alias ARN. To specify an <code>encryptionKey</code>, your IAM role must have <code>kms:DescribeKey</code> and <code>kms:CreateGrant</code> permissions on the encryption key that is used. For more information, see <a href=\"https://docs.aws.amazon.com/kms/latest/APIReference/API_DescribeKey.html#API_DescribeKey_RequestSyntax\">DescribeKey</a> in the <i>AWS Key Management Service API Reference</i> and <a href=\"https://docs.aws.amazon.com/kms/latest/developerguide/kms-api-permissions-reference.html\">AWS KMS API Permissions Reference</a> in the <i>AWS Key Management Service Developer Guide</i>. </p> <important> <p> CodeArtifact supports only symmetric CMKs. Do not associate an asymmetric CMK with your domain. For more information, see <a href=\"https://docs.aws.amazon.com/kms/latest/developerguide/symmetric-asymmetric.html\">Using symmetric and asymmetric keys</a> in the <i>AWS Key Management Service Developer Guide</i>. </p> </important>'\n        tags:\n          allOf:\n            - $ref: '#/components/schemas/TagList'\n            - description: One or more tag key-value pairs for the domain.\n    DomainDescription:\n      type: object\n      properties:\n        name:\n          allOf:\n            - $ref: '#/components/schemas/DomainName'\n            - description: ' The name of the domain. '\n        owner:\n          allOf:\n            - $ref: '#/components/schemas/AccountId'\n            - description: ' The AWS account ID that owns the domain. '\n        arn:\n          allOf:\n            - $ref: '#/components/schemas/Arn'\n            - description: ' The Amazon Resource Name (ARN) of the domain. '\n        status:\n          allOf:\n            - $ref: '#/components/schemas/DomainStatus'\n            - description: <p> The current status of a domain. The valid values are </p> <ul> <li> <p> <code>Active</code> </p> </li> <li> <p> <code>Deleted</code> </p> </li> </ul>\n        createdTime:\n          allOf:\n            - $ref: '#/components/schemas/Timestamp'\n            - description: ' A timestamp that represents the date and time the domain was created. '\n        encryptionKey:\n          allOf:\n            - $ref: '#/components/schemas/Arn'\n            - description: ' The ARN of an AWS Key Management Service (AWS KMS) key associated with a domain. '\n        repositoryCount:\n          allOf:\n            - $ref: '#/components/schemas/Integer'\n            - description: ' The number of repositories in the domain. '\n        assetSizeBytes:\n          allOf:\n            - $ref: '#/components/schemas/Long'\n            - description: ' The total size of all assets in the domain. '\n        s3BucketArn:\n          allOf:\n            - $ref: '#/components/schemas/Arn'\n            - description: The Amazon Resource Name (ARN) of the Amazon S3 bucket that is used to store package assets in the domain.\n      description: ' Information about a domain. A domain is a container for repositories. When you create a domain, it is empty until you add one or more repositories. '\n    Description:\n      type: string\n      pattern: '\\P{C}+'\n      maxLength: 1000\n    UpstreamRepositoryList:\n      type: array\n      items:\n        $ref: '#/components/schemas/UpstreamRepository'\n    CreateRepositoryRequest:\n      type: object\n      title: CreateRepositoryRequest\n      properties:\n        description:\n          allOf:\n            - $ref: '#/components/schemas/Description'\n            - description: ' A description of the created repository. '\n        upstreams:\n          allOf:\n            - $ref: '#/components/schemas/UpstreamRepositoryList'\n            - description: ' A list of upstream repositories to associate with the repository. The order of the upstream repositories in the list determines their priority order when AWS CodeArtifact looks for a requested package version. For more information, see <a href=\"https://docs.aws.amazon.com/codeartifact/latest/ug/repos-upstream.html\">Working with upstream repositories</a>. '\n        tags:\n          allOf:\n            - $ref: '#/components/schemas/TagList'\n            - description: One or more tag key-value pairs for the repository.\n    PolicyRevision:\n      type: string\n      pattern: \\S+\n      minLength: 1\n      maxLength: 100\n    DeleteDomainPermissionsPolicyRequest:\n      type: object\n      title: DeleteDomainPermissionsPolicyRequest\n      properties: {}\n    ResourcePolicy:\n      type: object\n      properties:\n        resourceArn:\n          allOf:\n            - $ref: '#/components/schemas/Arn'\n            - description: ' The ARN of the resource associated with the resource policy '\n        revision:\n          allOf:\n            - $ref: '#/components/schemas/PolicyRevision'\n            - description: ' The current revision of the resource policy. '\n        document:\n          allOf:\n            - $ref: '#/components/schemas/PolicyDocument'\n            - description: ' The resource policy formatted in JSON. '\n      description: ' An AWS CodeArtifact resource policy that contains a resource ARN, document details, and a revision. '\n    DeleteDomainRequest:\n      type: object\n      title: DeleteDomainRequest\n      properties: {}\n    PackageVersionStatus:\n      type: string\n      enum:\n        - Published\n        - Unfinished\n        - Unlisted\n        - Archived\n        - Disposed\n        - Deleted\n    DeletePackageVersionsRequest:\n      type: object\n      required:\n        - versions\n      title: DeletePackageVersionsRequest\n      properties:\n        versions:\n          allOf:\n            - $ref: '#/components/schemas/PackageVersionList'\n            - description: ' An array of strings that specify the versions of the package to delete. '\n        expectedStatus:\n          allOf:\n            - $ref: '#/components/schemas/PackageVersionStatus'\n            - description: '<p> The expected status of the package version to delete. Valid values are: </p> <ul> <li> <p> <code>Published</code> </p> </li> <li> <p> <code>Unfinished</code> </p> </li> <li> <p> <code>Unlisted</code> </p> </li> <li> <p> <code>Archived</code> </p> </li> <li> <p> <code>Disposed</code> </p> </li> </ul>'\n    DeleteRepositoryPermissionsPolicyRequest:\n      type: object\n      title: DeleteRepositoryPermissionsPolicyRequest\n      properties: {}\n    DeleteRepositoryRequest:\n      type: object\n      title: DeleteRepositoryRequest\n      properties: {}\n    DescribeDomainRequest:\n      type: object\n      title: DescribeDomainRequest\n      properties: {}\n    DescribePackageVersionRequest:\n      type: object\n      title: DescribePackageVersionRequest\n      properties: {}\n    PackageVersionDescription:\n      type: object\n      properties:\n        format:\n          allOf:\n            - $ref: '#/components/schemas/PackageFormat'\n            - description: '<p> The format of the package version. The valid package formats are: </p> <ul> <li> <p> <code>npm</code>: A Node Package Manager (npm) package. </p> </li> <li> <p> <code>pypi</code>: A Python Package Index (PyPI) package. </p> </li> <li> <p> <code>maven</code>: A Maven package that contains compiled code in a distributable format, such as a JAR file. </p> </li> </ul>'\n        namespace:\n          allOf:\n            - $ref: '#/components/schemas/PackageNamespace'\n            - description: '<p> The namespace of the package. The package component that specifies its namespace depends on its type. For example: </p> <ul> <li> <p> The namespace of a Maven package is its <code>groupId</code>. </p> </li> <li> <p> The namespace of an npm package is its <code>scope</code>. </p> </li> <li> <p> A Python package does not contain a corresponding component, so Python packages do not have a namespace. </p> </li> </ul>'\n        packageName:\n          allOf:\n            - $ref: '#/components/schemas/PackageName'\n            - description: ' The name of the requested package. '\n        displayName:\n          allOf:\n            - $ref: '#/components/schemas/String255'\n            - description: ' The name of the package that is displayed. The <code>displayName</code> varies depending on the package version''s format. For example, if an npm package is named <code>ui</code>, is in the namespace <code>vue</code>, and has the format <code>npm</code>, then the <code>displayName</code> is <code>@vue/ui</code>. '\n        version:\n          allOf:\n            - $ref: '#/components/schemas/PackageVersion'\n            - description: ' The version of the package. '\n        summary:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: ' A summary of the package version. The summary is extracted from the package. The information in and detail level of the summary depends on the package version''s format. '\n        homePage:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: ' The homepage associated with the package. '\n        sourceCodeRepository:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: ' The repository for the source code in the package version, or the source code used to build it. '\n        publishedTime:\n          allOf:\n            - $ref: '#/components/schemas/Timestamp'\n            - description: ' A timestamp that contains the date and time the package version was published. '\n        licenses:\n          allOf:\n            - $ref: '#/components/schemas/LicenseInfoList'\n            - description: ' Information about licenses associated with the package version. '\n        revision:\n          allOf:\n            - $ref: '#/components/schemas/PackageVersionRevision'\n            - description: ' The revision of the package version. '\n        status:\n          allOf:\n            - $ref: '#/components/schemas/PackageVersionStatus'\n            - description: '<p> A string that contains the status of the package version. It can be one of the following: </p> <ul> <li> <p> <code>Published</code> </p> </li> <li> <p> <code>Unfinished</code> </p> </li> <li> <p> <code>Unlisted</code> </p> </li> <li> <p> <code>Archived</code> </p> </li> <li> <p> <code>Disposed</code> </p> </li> </ul>'\n      description: ' Details about a package version. '\n    DescribeRepositoryRequest:\n      type: object\n      title: DescribeRepositoryRequest\n      properties: {}\n    DisassociateExternalConnectionRequest:\n      type: object\n      title: DisassociateExternalConnectionRequest\n      properties: {}\n    DisposePackageVersionsRequest:\n      type: object\n      required:\n        - versions\n      title: DisposePackageVersionsRequest\n      properties:\n        versions:\n          allOf:\n            - $ref: '#/components/schemas/PackageVersionList'\n            - description: ' The versions of the package you want to dispose. '\n        versionRevisions:\n          allOf:\n            - $ref: '#/components/schemas/PackageVersionRevisionMap'\n            - description: ' The revisions of the package versions you want to dispose. '\n        expectedStatus:\n          allOf:\n            - $ref: '#/components/schemas/PackageVersionStatus'\n            - description: '<p> The expected status of the package version to dispose. Valid values are: </p> <ul> <li> <p> <code>Published</code> </p> </li> <li> <p> <code>Unfinished</code> </p> </li> <li> <p> <code>Unlisted</code> </p> </li> <li> <p> <code>Archived</code> </p> </li> <li> <p> <code>Disposed</code> </p> </li> </ul>'\n    DomainStatus:\n      type: string\n      enum:\n        - Active\n        - Deleted\n    Timestamp:\n      type: string\n      format: date-time\n    Integer:\n      type: integer\n    Long:\n      type: integer\n    DomainSummary:\n      type: object\n      properties:\n        name:\n          allOf:\n            - $ref: '#/components/schemas/DomainName'\n            - description: ' The name of the domain. '\n        owner:\n          allOf:\n            - $ref: '#/components/schemas/AccountId'\n            - description: ' The 12-digit account number of the AWS account that owns the domain. It does not include dashes or spaces. '\n        arn:\n          allOf:\n            - $ref: '#/components/schemas/Arn'\n            - description: ' The ARN of the domain. '\n        status:\n          allOf:\n            - $ref: '#/components/schemas/DomainStatus'\n            - description: '<p> A string that contains the status of the domain. The valid values are: </p> <ul> <li> <p> <code>Active</code> </p> </li> <li> <p> <code>Deleted</code> </p> </li> </ul>'\n        createdTime:\n          allOf:\n            - $ref: '#/components/schemas/Timestamp'\n            - description: ' A timestamp that contains the date and time the domain was created. '\n        encryptionKey:\n          allOf:\n            - $ref: '#/components/schemas/Arn'\n            - description: ' The key used to encrypt the domain. '\n      description: ' Information about a domain, including its name, Amazon Resource Name (ARN), and status. The <a href=\"https://docs.aws.amazon.com/codeartifact/latest/APIReference/API_ListDomains.html\">ListDomains</a> operation returns a list of <code>DomainSummary</code> objects. '\n    DomainSummaryList:\n      type: array\n      items:\n        $ref: '#/components/schemas/DomainSummary'\n    ErrorMessage:\n      type: string\n    ExternalConnectionStatus:\n      type: string\n      enum:\n        - Available\n    GetAuthorizationTokenRequest:\n      type: object\n      title: GetAuthorizationTokenRequest\n      properties: {}\n    String:\n      type: string\n    GetDomainPermissionsPolicyRequest:\n      type: object\n      title: GetDomainPermissionsPolicyRequest\n      properties: {}\n    GetPackageVersionAssetRequest:\n      type: object\n      title: GetPackageVersionAssetRequest\n      properties: {}\n    GetPackageVersionReadmeRequest:\n      type: object\n      title: GetPackageVersionReadmeRequest\n      properties: {}\n    GetRepositoryEndpointRequest:\n      type: object\n      title: GetRepositoryEndpointRequest\n      properties: {}\n    GetRepositoryPermissionsPolicyRequest:\n      type: object\n      title: GetRepositoryPermissionsPolicyRequest\n      properties: {}\n    HashAlgorithm:\n      type: string\n      enum:\n        - MD5\n        - SHA-1\n        - SHA-256\n        - SHA-512\n    LicenseInfo:\n      type: object\n      properties:\n        name:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: ' Name of the license. '\n        url:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: ' The URL for license data. '\n      description: ' Details of the license data. '\n    LicenseInfoList:\n      type: array\n      items:\n        $ref: '#/components/schemas/LicenseInfo'\n    ListDomainsMaxResults:\n      type: integer\n      minimum: 1\n      maximum: 1000\n    PaginationToken:\n      type: string\n      pattern: \\S+\n      minLength: 1\n      maxLength: 2000\n    ListDomainsRequest:\n      type: object\n      title: ListDomainsRequest\n      properties:\n        maxResults:\n          allOf:\n            - $ref: '#/components/schemas/ListDomainsMaxResults'\n            - description: ' The maximum number of results to return per page. '\n        nextToken:\n          allOf:\n            - $ref: '#/components/schemas/PaginationToken'\n            - description: ' The token for the next set of results. Use the value returned in the previous response in the next request to retrieve the next set of results. '\n    ListPackageVersionAssetsMaxResults:\n      type: integer\n      minimum: 1\n      maximum: 1000\n    ListPackageVersionAssetsRequest:\n      type: object\n      title: ListPackageVersionAssetsRequest\n      properties: {}\n    ListPackageVersionDependenciesRequest:\n      type: object\n      title: ListPackageVersionDependenciesRequest\n      properties: {}\n    PackageDependencyList:\n      type: array\n      items:\n        $ref: '#/components/schemas/PackageDependency'\n    ListPackageVersionsMaxResults:\n      type: integer\n      minimum: 1\n      maximum: 1000\n    PackageVersionSortType:\n      type: string\n      enum:\n        - PUBLISHED_TIME\n    ListPackageVersionsRequest:\n      type: object\n      title: ListPackageVersionsRequest\n      properties: {}\n    PackageVersionSummaryList:\n      type: array\n      items:\n        $ref: '#/components/schemas/PackageVersionSummary'\n    ListPackagesMaxResults:\n      type: integer\n      minimum: 1\n      maximum: 1000\n    ListPackagesRequest:\n      type: object\n      title: ListPackagesRequest\n      properties: {}\n    PackageSummaryList:\n      type: array\n      items:\n        $ref: '#/components/schemas/PackageSummary'\n    ListRepositoriesInDomainMaxResults:\n      type: integer\n      minimum: 1\n      maximum: 1000\n    ListRepositoriesInDomainRequest:\n      type: object\n      title: ListRepositoriesInDomainRequest\n      properties: {}\n    RepositorySummaryList:\n      type: array\n      items:\n        $ref: '#/components/schemas/RepositorySummary'\n    ListRepositoriesMaxResults:\n      type: integer\n      minimum: 1\n      maximum: 1000\n    ListRepositoriesRequest:\n      type: object\n      title: ListRepositoriesRequest\n      properties: {}\n    ListTagsForResourceRequest:\n      type: object\n      title: ListTagsForResourceRequest\n      properties: {}\n    PackageDependency:\n      type: object\n      properties:\n        namespace:\n          allOf:\n            - $ref: '#/components/schemas/PackageNamespace'\n            - description: '<p> The namespace of the package. The package component that specifies its namespace depends on its type. For example: </p> <ul> <li> <p> The namespace of a Maven package is its <code>groupId</code>. </p> </li> <li> <p> The namespace of an npm package is its <code>scope</code>. </p> </li> <li> <p> A Python package does not contain a corresponding component, so Python packages do not have a namespace. </p> </li> </ul>'\n        package:\n          allOf:\n            - $ref: '#/components/schemas/PackageName'\n            - description: ' The name of the package that this package depends on. '\n        dependencyType:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: ' The type of a package dependency. The possible values depend on the package type. Example types are <code>compile</code>, <code>runtime</code>, and <code>test</code> for Maven packages, and <code>dev</code>, <code>prod</code>, and <code>optional</code> for npm packages. '\n        versionRequirement:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: ' The required version, or version range, of the package that this package depends on. The version format is specific to the package type. For example, the following are possible valid required versions: <code>1.2.3</code>, <code>^2.3.4</code>, or <code>4.x</code>. '\n      description: ' Details about a package dependency. '\n    PackageSummary:\n      type: object\n      properties:\n        format:\n          allOf:\n            - $ref: '#/components/schemas/PackageFormat'\n            - description: '<p> The format of the package. Valid values are: </p> <ul> <li> <p> <code>npm</code> </p> </li> <li> <p> <code>pypi</code> </p> </li> <li> <p> <code>maven</code> </p> </li> </ul>'\n        namespace:\n          allOf:\n            - $ref: '#/components/schemas/PackageNamespace'\n            - description: '<p> The namespace of the package. The package component that specifies its namespace depends on its type. For example: </p> <ul> <li> <p> The namespace of a Maven package is its <code>groupId</code>. </p> </li> <li> <p> The namespace of an npm package is its <code>scope</code>. </p> </li> <li> <p> A Python package does not contain a corresponding component, so Python packages do not have a namespace. </p> </li> </ul>'\n        package:\n          allOf:\n            - $ref: '#/components/schemas/PackageName'\n            - description: ' The name of the package. '\n      description: ' Details about a package, including its format, namespace, and name. The <a href=\"https://docs.aws.amazon.com/codeartifact/latest/APIReference/API_ListPackages.html\">ListPackages</a> operation returns a list of <code>PackageSummary</code> objects. '\n    String255:\n      type: string\n      minLength: 1\n      maxLength: 255\n    PackageVersionErrorCode:\n      type: string\n      enum:\n        - ALREADY_EXISTS\n        - MISMATCHED_REVISION\n        - MISMATCHED_STATUS\n        - NOT_ALLOWED\n        - NOT_FOUND\n        - SKIPPED\n    PackageVersionError:\n      type: object\n      properties:\n        errorCode:\n          allOf:\n            - $ref: '#/components/schemas/PackageVersionErrorCode'\n            - description: '<p> The error code associated with the error. Valid error codes are: </p> <ul> <li> <p> <code>ALREADY_EXISTS</code> </p> </li> <li> <p> <code>MISMATCHED_REVISION</code> </p> </li> <li> <p> <code>MISMATCHED_STATUS</code> </p> </li> <li> <p> <code>NOT_ALLOWED</code> </p> </li> <li> <p> <code>NOT_FOUND</code> </p> </li> <li> <p> <code>SKIPPED</code> </p> </li> </ul>'\n        errorMessage:\n          allOf:\n            - $ref: '#/components/schemas/ErrorMessage'\n            - description: ' The error message associated with the error. '\n      description: ' An error associated with package. '\n    PackageVersionSummary:\n      type: object\n      required:\n        - version\n        - status\n      properties:\n        version:\n          allOf:\n            - $ref: '#/components/schemas/PackageVersion'\n            - description: ' Information about a package version. '\n        revision:\n          allOf:\n            - $ref: '#/components/schemas/PackageVersionRevision'\n            - description: ' The revision associated with a package version. '\n        status:\n          allOf:\n            - $ref: '#/components/schemas/PackageVersionStatus'\n            - description: '<p> A string that contains the status of the package version. It can be one of the following: </p> <ul> <li> <p> <code>Published</code> </p> </li> <li> <p> <code>Unfinished</code> </p> </li> <li> <p> <code>Unlisted</code> </p> </li> <li> <p> <code>Archived</code> </p> </li> <li> <p> <code>Disposed</code> </p> </li> </ul>'\n      description: ' Details about a package version, including its status, version, and revision. The <a href=\"https://docs.aws.amazon.com/codeartifact/latest/APIReference/API_ListPackageVersions.html\">ListPackageVersions</a> operation returns a list of <code>PackageVersionSummary</code> objects. '\n    PolicyDocument:\n      type: string\n      minLength: 1\n      maxLength: 5120\n    PutDomainPermissionsPolicyRequest:\n      type: object\n      required:\n        - domain\n        - policyDocument\n      title: PutDomainPermissionsPolicyRequest\n      properties:\n        domain:\n          allOf:\n            - $ref: '#/components/schemas/DomainName'\n            - description: ' The name of the domain on which to set the resource policy. '\n        domainOwner:\n          allOf:\n            - $ref: '#/components/schemas/AccountId'\n            - description: ' The 12-digit account number of the AWS account that owns the domain. It does not include dashes or spaces. '\n        policyRevision:\n          allOf:\n            - $ref: '#/components/schemas/PolicyRevision'\n            - description: ' The current revision of the resource policy to be set. This revision is used for optimistic locking, which prevents others from overwriting your changes to the domain''s resource policy. '\n        policyDocument:\n          allOf:\n            - $ref: '#/components/schemas/PolicyDocument'\n            - description: ' A valid displayable JSON Aspen policy string to be set as the access control resource policy on the provided domain. '\n    PutRepositoryPermissionsPolicyRequest:\n      type: object\n      required:\n        - policyDocument\n      title: PutRepositoryPermissionsPolicyRequest\n      properties:\n        policyRevision:\n          allOf:\n            - $ref: '#/components/schemas/PolicyRevision'\n            - description: ' Sets the revision of the resource policy that specifies permissions to access the repository. This revision is used for optimistic locking, which prevents others from overwriting your changes to the repository''s resource policy. '\n        policyDocument:\n          allOf:\n            - $ref: '#/components/schemas/PolicyDocument'\n            - description: ' A valid displayable JSON Aspen policy string to be set as the access control resource policy on the provided repository. '\n    UpstreamRepositoryInfoList:\n      type: array\n      items:\n        $ref: '#/components/schemas/UpstreamRepositoryInfo'\n    RepositoryExternalConnectionInfoList:\n      type: array\n      items:\n        $ref: '#/components/schemas/RepositoryExternalConnectionInfo'\n    RepositoryExternalConnectionInfo:\n      type: object\n      properties:\n        externalConnectionName:\n          allOf:\n            - $ref: '#/components/schemas/ExternalConnectionName'\n            - description: ' The name of the external connection associated with a repository. '\n        packageFormat:\n          allOf:\n            - $ref: '#/components/schemas/PackageFormat'\n            - description: '<p> The package format associated with a repository''s external connection. The valid package formats are: </p> <ul> <li> <p> <code>npm</code>: A Node Package Manager (npm) package. </p> </li> <li> <p> <code>pypi</code>: A Python Package Index (PyPI) package. </p> </li> <li> <p> <code>maven</code>: A Maven package that contains compiled code in a distributable format, such as a JAR file. </p> </li> </ul>'\n        status:\n          allOf:\n            - $ref: '#/components/schemas/ExternalConnectionStatus'\n            - description: ' The status of the external connection of a repository. There is one valid value, <code>Available</code>. '\n      description: ' Contains information about the external connection of a repository. '\n    RepositorySummary:\n      type: object\n      properties:\n        name:\n          allOf:\n            - $ref: '#/components/schemas/RepositoryName'\n            - description: ' The name of the repository. '\n        administratorAccount:\n          allOf:\n            - $ref: '#/components/schemas/AccountId'\n            - description: ' The AWS account ID that manages the repository. '\n        domainName:\n          allOf:\n            - $ref: '#/components/schemas/DomainName'\n            - description: ' The name of the domain that contains the repository. '\n        domainOwner:\n          allOf:\n            - $ref: '#/components/schemas/AccountId'\n            - description: ' The 12-digit account number of the AWS account that owns the domain. It does not include dashes or spaces. '\n        arn:\n          allOf:\n            - $ref: '#/components/schemas/Arn'\n            - description: ' The ARN of the repository. '\n        description:\n          allOf:\n            - $ref: '#/components/schemas/Description'\n            - description: ' The description of the repository. '\n      description: ' Details about a repository, including its Amazon Resource Name (ARN), description, and domain information. The <a href=\"https://docs.aws.amazon.com/codeartifact/latest/APIReference/API_ListRepositories.html\">ListRepositories</a> operation returns a list of <code>RepositorySummary</code> objects. '\n    SuccessfulPackageVersionInfo:\n      type: object\n      properties:\n        revision:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: ' The revision of a package version. '\n        status:\n          allOf:\n            - $ref: '#/components/schemas/PackageVersionStatus'\n            - description: '<p> The status of a package version. Valid statuses are: </p> <ul> <li> <p> <code>Published</code> </p> </li> <li> <p> <code>Unfinished</code> </p> </li> <li> <p> <code>Unlisted</code> </p> </li> <li> <p> <code>Archived</code> </p> </li> <li> <p> <code>Disposed</code> </p> </li> </ul>'\n      description: ' Contains the revision and status of a package version. '\n    TagValue:\n      type: string\n      minLength: 0\n      maxLength: 256\n    TagKeyList:\n      type: array\n      items:\n        $ref: '#/components/schemas/TagKey'\n      minItems: 0\n      maxItems: 200\n    TagResourceRequest:\n      type: object\n      required:\n        - tags\n      title: TagResourceRequest\n      properties:\n        tags:\n          allOf:\n            - $ref: '#/components/schemas/TagList'\n            - description: The tags you want to modify or add to the resource.\n    UntagResourceRequest:\n      type: object\n      required:\n        - tagKeys\n      title: UntagResourceRequest\n      properties:\n        tagKeys:\n          allOf:\n            - $ref: '#/components/schemas/TagKeyList'\n            - description: The tag key for each tag that you want to remove from the resource.\n    UpdatePackageVersionsStatusRequest:\n      type: object\n      required:\n        - versions\n        - targetStatus\n      title: UpdatePackageVersionsStatusRequest\n      properties:\n        versions:\n          allOf:\n            - $ref: '#/components/schemas/PackageVersionList'\n            - description: ' An array of strings that specify the versions of the package with the statuses to update. '\n        versionRevisions:\n          allOf:\n            - $ref: '#/components/schemas/PackageVersionRevisionMap'\n            - description: ' A map of package versions and package version revisions. The map <code>key</code> is the package version (for example, <code>3.5.2</code>), and the map <code>value</code> is the package version revision. '\n        expectedStatus:\n          allOf:\n            - $ref: '#/components/schemas/PackageVersionStatus'\n            - description: ' The package version’s expected status before it is updated. If <code>expectedStatus</code> is provided, the package version''s status is updated only if its status at the time <code>UpdatePackageVersionsStatus</code> is called matches <code>expectedStatus</code>. '\n        targetStatus:\n          allOf:\n            - $ref: '#/components/schemas/PackageVersionStatus'\n            - description: ' The status you want to change the package version status to. '\n    UpdateRepositoryRequest:\n      type: object\n      title: UpdateRepositoryRequest\n      properties:\n        description:\n          allOf:\n            - $ref: '#/components/schemas/Description'\n            - description: ' An updated repository description. '\n        upstreams:\n          allOf:\n            - $ref: '#/components/schemas/UpstreamRepositoryList'\n            - description: ' A list of upstream repositories to associate with the repository. The order of the upstream repositories in the list determines their priority order when AWS CodeArtifact looks for a requested package version. For more information, see <a href=\"https://docs.aws.amazon.com/codeartifact/latest/ug/repos-upstream.html\">Working with upstream repositories</a>. '\n    UpstreamRepositoryInfo:\n      type: object\n      properties:\n        repositoryName:\n          allOf:\n            - $ref: '#/components/schemas/RepositoryName'\n            - description: ' The name of an upstream repository. '\n      description: ' Information about an upstream repository. '\nsecurity:\n  - hmac: []\n",
			"canonicalURL": "/github.com/APIs-guru/openapi-directory@3237843a76543b0ee2c1e5f65e28ec6b526e8700/-/blob/APIs/amazonaws.com/codeartifact/2018-09-22/openapi.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/APIs-guru/openapi-directory/blob/3237843a76543b0ee2c1e5f65e28ec6b526e8700/APIs/amazonaws.com/codeartifact/2018-09-22/openapi.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "parse: parse spec: parse operations: path \"/v1/package/versions#domain&repository&format&package\": at 1:122512: post: operation \"ListPackageVersions\": at 1:122902: parse path \"/v1/package/versions#domain&repository&format&package\": path MUST NOT contain a fragment"
}