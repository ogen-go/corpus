{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/openclarity/apiclarity"
		},
		"file": {
			"name": "openapi.gen.yaml",
			"size": 0,
			"path": "api3/global/openapi.gen.yaml",
			"byteSize": 75161,
			"content": "components:\n  parameters:\n    alertIsFilter:\n      description: Alert Kind [ALERT_INFO or ALERT_WARN]\n      in: query\n      name: alert[is]\n      schema:\n        items:\n          $ref: ../common/openapi.yaml#/components/schemas/AlertSeverityEnum\n        type: array\n    alertIsType:\n      in: query\n      name: alertType[is]\n      schema:\n        items:\n          type: string\n        type: array\n    apiEventSortKey:\n      description: Sort key\n      in: query\n      name: sortKey\n      required: true\n      schema:\n        $ref: ../common/openapi.yaml#/components/schemas/ApiEventSortKey\n    apiId:\n      in: path\n      name: apiId\n      required: true\n      schema:\n        format: uint32\n        type: integer\n    apiIdFilter:\n      description: api id to return\n      in: query\n      name: apiId\n      schema:\n        type: string\n    apiInfoIdIsFilter:\n      in: query\n      name: apiInfoId[is]\n      schema:\n        format: uint32\n        type: integer\n    apiInventorySortKey:\n      description: Sort key\n      in: query\n      name: sortKey\n      required: true\n      schema:\n        $ref: ../common/openapi.yaml#/components/schemas/ApiInventorySortKey\n    apiNameContainsFilter:\n      in: query\n      name: name[contains]\n      schema:\n        items:\n          type: string\n        type: array\n    apiNameEndsWithFilter:\n      in: query\n      name: name[end]\n      schema:\n        type: string\n    apiNameIsFilter:\n      in: query\n      name: name[is]\n      schema:\n        items:\n          type: string\n        type: array\n    apiNameIsNotFilter:\n      in: query\n      name: name[isNot]\n      schema:\n        items:\n          type: string\n        type: array\n    apiNameStartsWithFilter:\n      in: query\n      name: name[start]\n      schema:\n        type: string\n    apiType:\n      description: API type [INTERNAL or EXTERNAL]\n      in: query\n      name: type\n      required: true\n      schema:\n        $ref: ../common/openapi.yaml#/components/schemas/ApiTypeEnum\n    destinationIPIsFilter:\n      in: query\n      name: destinationIP[is]\n      schema:\n        items:\n          type: string\n        type: array\n    destinationIPIsNotFilter:\n      in: query\n      name: destinationIP[isNot]\n      schema:\n        items:\n          type: string\n        type: array\n    destinationPortIsFilter:\n      in: query\n      name: destinationPort[is]\n      schema:\n        items:\n          type: string\n        type: array\n    destinationPortIsNotFilter:\n      in: query\n      name: destinationPort[isNot]\n      schema:\n        items:\n          type: string\n        type: array\n    endTime:\n      description: End time of the query\n      in: query\n      name: endTime\n      required: true\n      schema:\n        format: date-time\n        type: string\n    hasProvidedSpecFilter:\n      in: query\n      name: hasProvidedSpec[is]\n      schema:\n        type: boolean\n    hasReconstructedSpecFilter:\n      in: query\n      name: hasReconstructedSpec[is]\n      schema:\n        type: boolean\n    hasSpecDiffFilter:\n      in: query\n      name: hasSpecDiff[is]\n      schema:\n        type: boolean\n    host:\n      description: api host name\n      in: query\n      name: host\n      required: true\n      schema:\n        type: string\n    methodIsFilter:\n      in: query\n      name: method[is]\n      schema:\n        items:\n          $ref: ../common/openapi.yaml#/components/schemas/HttpMethod\n        type: array\n    page:\n      description: Page number of the query\n      in: query\n      name: page\n      required: true\n      schema:\n        type: integer\n    pageSize:\n      description: Maximum items to return\n      in: query\n      name: pageSize\n      required: true\n      schema:\n        maximum: 50\n        minimum: 1\n        type: integer\n    pathContainsFilter:\n      in: query\n      name: path[contains]\n      schema:\n        items:\n          type: string\n        type: array\n    pathEndsWithFilter:\n      in: query\n      name: path[end]\n      schema:\n        type: string\n    pathIsFilter:\n      in: query\n      name: path[is]\n      schema:\n        items:\n          type: string\n        type: array\n    pathIsNotFilter:\n      in: query\n      name: path[isNot]\n      schema:\n        items:\n          type: string\n        type: array\n    pathStartsWithFilter:\n      in: query\n      name: path[start]\n      schema:\n        type: string\n    port:\n      description: api port\n      in: query\n      name: port\n      required: true\n      schema:\n        type: string\n    portIsFilter:\n      in: query\n      name: port[is]\n      schema:\n        items:\n          type: string\n        type: array\n    portIsNotFilter:\n      in: query\n      name: port[isNot]\n      schema:\n        items:\n          type: string\n        type: array\n    providedPathIDIsFilter:\n      in: query\n      name: providedPathID[is]\n      schema:\n        items:\n          type: string\n        type: array\n    reconstructedPathIDIsFilter:\n      in: query\n      name: reconstructedPathID[is]\n      schema:\n        items:\n          type: string\n        type: array\n    redacted:\n      in: query\n      name: redacted\n      schema:\n        default: false\n        type: boolean\n    reviewId:\n      in: path\n      name: reviewId\n      required: true\n      schema:\n        format: uint32\n        type: integer\n    showNonApi:\n      in: query\n      name: showNonApi\n      required: true\n      schema:\n        type: boolean\n    sortDir:\n      description: Sorting direction\n      in: query\n      name: sortDir\n      schema:\n        default: ASC\n        enum:\n        - ASC\n        - DESC\n        type: string\n    sourceIPIsFilter:\n      in: query\n      name: sourceIP[is]\n      schema:\n        items:\n          type: string\n        type: array\n    sourceIPIsNotFilter:\n      in: query\n      name: sourceIP[isNot]\n      schema:\n        items:\n          type: string\n        type: array\n    specContainsFilter:\n      in: query\n      name: spec[contains]\n      schema:\n        items:\n          type: string\n        type: array\n    specDiffTypeIsFilter:\n      in: query\n      name: specDiffType[is]\n      schema:\n        items:\n          $ref: ../common/openapi.yaml#/components/schemas/DiffType\n        type: array\n    specEndsWithFilter:\n      in: query\n      name: spec[end]\n      schema:\n        type: string\n    specIsFilter:\n      in: query\n      name: spec[is]\n      schema:\n        items:\n          type: string\n        type: array\n    specIsNotFilter:\n      in: query\n      name: spec[isNot]\n      schema:\n        items:\n          type: string\n        type: array\n    specStartsWithFilter:\n      in: query\n      name: spec[start]\n      schema:\n        type: string\n    startTime:\n      description: Start time of the query\n      in: query\n      name: startTime\n      required: true\n      schema:\n        format: date-time\n        type: string\n    statusCodeGteFilter:\n      description: greater than or equal\n      in: query\n      name: statusCode[gte]\n      schema:\n        type: string\n    statusCodeIsFilter:\n      in: query\n      name: statusCode[is]\n      schema:\n        items:\n          type: string\n        type: array\n    statusCodeIsNotFilter:\n      in: query\n      name: statusCode[isNot]\n      schema:\n        items:\n          type: string\n        type: array\n    statusCodeLteFilter:\n      description: less than or equal\n      in: query\n      name: statusCode[lte]\n      schema:\n        type: string\n    traceSourceId:\n      description: Trace Source ID\n      in: path\n      name: traceSourceId\n      required: true\n      schema:\n        format: uuid\n        type: string\n    traceSourceIdQuery:\n      description: Trace Source ID\n      in: query\n      name: traceSourceId\n      required: true\n      schema:\n        format: uuid\n        type: string\n  responses:\n    UnknownError:\n      content:\n        application/json:\n          schema:\n            $ref: ../common/openapi.yaml#/components/schemas/ApiResponse\n      description: unknown error\n  schemas:\n    APIClarityFeature:\n      description: Description of APIClarity feature and the list of API hosts (Group\n        by trace sources, in the form 'host:port') the feature requires to get trace\n        for\n      properties:\n        featureDescription:\n          description: Short human readable description of the feature\n          type: string\n        featureName:\n          $ref: '#/components/schemas/APIClarityFeatureEnum'\n        hostsToTrace:\n          $ref: '#/components/schemas/HostsToTraceForComponent'\n      required:\n      - featureName\n      type: object\n    APIClarityFeatureEnum:\n      description: APIClarity Feature Name\n      enum:\n      - bfla\n      - fuzzer\n      - spec_differ\n      - specdiffs\n      - specreconstructor\n      - specreconstructor\n      - traceanalyzer\n      type: string\n    APIClarityFeatureList:\n      description: List of APIClarity features and for each feature the list of API\n        hosts (Group by trace sources, in the form 'host:port') the feature requires\n        to get trace for\n      properties:\n        features:\n          items:\n            $ref: '#/components/schemas/APIClarityFeature'\n          type: array\n      type: object\n    APIDiffs:\n      properties:\n        apiInfo:\n          $ref: ../common/openapi.yaml#/components/schemas/ApiInfoWithType\n        diffs:\n          items:\n            $ref: '#/components/schemas/Diff'\n          type: array\n      required:\n      - apiInfo\n      - diffs\n      type: object\n    APIEventAnnotations:\n      properties:\n        bflaStatus:\n          $ref: '#/components/schemas/BFLAStatus'\n        destinationK8sObject:\n          $ref: '#/components/schemas/K8sObjectRef'\n        detectedUser:\n          $ref: '#/components/schemas/DetectedUser'\n        external:\n          type: boolean\n        mismatchedScopes:\n          type: boolean\n        sourceK8sObject:\n          $ref: '#/components/schemas/K8sObjectRef'\n      required:\n      - bflaStatus\n      - external\n      - mismatchedScopes\n    Annotation:\n      properties:\n        annotation:\n          type: string\n        kind:\n          type: string\n        name:\n          type: string\n        severity:\n          type: string\n      required:\n      - id\n      - name\n      - annotation\n      - severity\n      - kind\n      type: object\n    Annotations:\n      properties:\n        items:\n          items:\n            $ref: '#/components/schemas/Annotation'\n          type: array\n        total:\n          description: Total event annotations count\n          type: integer\n      required:\n      - total\n      type: object\n    ApiToken:\n      allOf:\n      - $ref: '#/components/schemas/AuthorizationSchemeBase'\n      - properties:\n          key:\n            type: string\n          value:\n            type: string\n        required:\n        - key\n        - value\n        type: object\n    AuthorizationModel:\n      properties:\n        learning:\n          type: boolean\n        operations:\n          items:\n            $ref: '#/components/schemas/AuthorizationModelOperation'\n          type: array\n        specType:\n          $ref: '#/components/schemas/SpecType'\n      required:\n      - specType\n      - operations\n      - learning\n      type: object\n    AuthorizationModelAudience:\n      properties:\n        authorized:\n          type: boolean\n        end_users:\n          items:\n            $ref: '#/components/schemas/DetectedUser'\n          type: array\n        external:\n          type: boolean\n        k8s_object:\n          $ref: '#/components/schemas/K8sObjectRef'\n        lastTime:\n          format: date-time\n          type: string\n        statusCode:\n          type: integer\n        warningStatus:\n          $ref: '#/components/schemas/BFLAStatus'\n      required:\n      - end_users\n      - authorized\n      - external\n      - statusCode\n      - warningStatus\n      type: object\n    AuthorizationModelNotification:\n      allOf:\n      - $ref: ../common/openapi.yaml#/components/schemas/BaseNotification\n      - $ref: '#/components/schemas/AuthorizationModel'\n    AuthorizationModelOperation:\n      properties:\n        audience:\n          items:\n            $ref: '#/components/schemas/AuthorizationModelAudience'\n          type: array\n        method:\n          type: string\n        path:\n          type: string\n        tags:\n          items:\n            type: string\n          type: array\n      required:\n      - path\n      - method\n      - audience\n      - tags\n      type: object\n    AuthorizationScheme:\n      discriminator:\n        mapping:\n          ApiToken: '#/components/schemas/ApiToken'\n          BasicAuth: '#/components/schemas/BasicAuth'\n          BearerToken: '#/components/schemas/BearerToken'\n        propertyName: type\n      oneOf:\n      - $ref: '#/components/schemas/BasicAuth'\n      - $ref: '#/components/schemas/ApiToken'\n      - $ref: '#/components/schemas/BearerToken'\n    AuthorizationSchemeBase:\n      properties:\n        type:\n          $ref: '#/components/schemas/AuthorizationTypeEnum'\n      required:\n      - type\n      type: object\n    AuthorizationTypeEnum:\n      description: An enumeration for the authorization type parameter.\n      enum:\n      - BASICAUTH\n      - APITOKEN\n      - BEARERTOKEN\n      title: AuthorizationType\n      type: string\n    BFLAState:\n      enum:\n      - BFLA_START\n      - BFLA_LEARNING\n      - BFLA_DETECTING\n      - BFLA_LEARNT\n      type: string\n    BFLAStatus:\n      enum:\n      - NO_SPEC\n      - LEARNING\n      - LEGITIMATE\n      - SUSPICIOUS_MEDIUM\n      - SUSPICIOUS_HIGH\n      type: string\n    BasicAuth:\n      allOf:\n      - $ref: '#/components/schemas/AuthorizationSchemeBase'\n      - properties:\n          password:\n            type: string\n          username:\n            type: string\n        required:\n        - username\n        - password\n        type: object\n    BearerToken:\n      allOf:\n      - $ref: '#/components/schemas/AuthorizationSchemeBase'\n      - properties:\n          token:\n            type: string\n        required:\n        - token\n        type: object\n    DetectedUser:\n      properties:\n        id:\n          type: string\n        ip_address:\n          type: string\n        source:\n          enum:\n          - JWT\n          - BASIC\n          - KONG_X_CONSUMER_ID\n          type: string\n      required:\n      - id\n      - source\n      - ip_address\n    Diff:\n      properties:\n        diffType:\n          $ref: ../common/openapi.yaml#/components/schemas/DiffType\n        lastSeen:\n          description: The time that the diff was last seen\n          format: date-time\n          type: string\n        method:\n          $ref: ../common/openapi.yaml#/components/schemas/HttpMethod\n        newSpec:\n          description: New spec json string\n          type: string\n        oldSpec:\n          description: Old spec json string\n          type: string\n        path:\n          description: Path of the diff element\n          type: string\n        specTimestamp:\n          description: the time that this spec was created. used also as spec version\n          format: date-time\n          type: string\n        specType:\n          $ref: ../common/openapi.yaml#/components/schemas/SpecType\n      required:\n      - lastSeen\n      - diffType\n      - oldSpec\n      - newSpec\n      - method\n      - path\n      - specType\n      - specTimestamp\n      type: object\n    FeatureEnable:\n      description: Enable/disable a feature\n      properties:\n        enable:\n          description: enable flag\n          type: boolean\n      type: object\n    Finding:\n      properties:\n        description:\n          description: description of the finding\n          title: Description\n          type: string\n        name:\n          description: Name of the finding\n          title: Name\n          type: string\n        risk:\n          description: risk of the finding\n          title: Risk\n          type: string\n      title: Finding\n      type: object\n    Findings:\n      properties:\n        items:\n          items:\n            $ref: '#/components/schemas/Finding'\n          title: Items\n          type: array\n        total:\n          description: Nb of items, used for pagination\n          title: Total\n          type: integer\n      title: Findings\n      type: object\n    FuzzingReportItem:\n      description: Current fuzzer report\n      properties:\n        description:\n          type: string\n        findings:\n          description: List of paths that has been fuzzed\n          items:\n            $ref: '#/components/schemas/RawFindings'\n          title: Paths\n          type: array\n        name:\n          type: string\n        paths:\n          description: List of paths that has been fuzzed\n          items:\n            $ref: '#/components/schemas/FuzzingReportPath'\n          title: Paths\n          type: array\n        source:\n          type: string\n        status:\n          type: string\n        testType:\n          type: string\n      title: FuzzingReportItem\n      type: object\n    FuzzingReportOperation:\n      description: Report tag operation\n      properties:\n        findings:\n          items:\n            $ref: ../common/openapi.yaml#/components/schemas/APIFinding\n          title: Findings list\n          type: array\n        highestSeverity:\n          $ref: ../common/openapi.yaml#/components/schemas/Severity\n        operation:\n          $ref: ../common/openapi.yaml#/components/schemas/MethodAndPath\n        requestsCount:\n          description: Request count to this operation item during the test\n          format: int32\n          title: Request count to the opea\n          type: integer\n      required:\n      - operation\n      - requestsCount\n      title: Report tag operation\n      type: object\n    FuzzingReportPath:\n      description: Current fuzzer report\n      properties:\n        payload:\n          type: string\n        response:\n          type: string\n        result:\n          type: integer\n        uri:\n          type: string\n        verb:\n          type: string\n      title: FuzzingReportPath\n      type: object\n    FuzzingReportTag:\n      description: Report tag item\n      properties:\n        highestSeverity:\n          $ref: ../common/openapi.yaml#/components/schemas/Severity\n        name:\n          description: Tag name\n          title: Tag name\n          type: string\n        operations:\n          items:\n            $ref: '#/components/schemas/FuzzingReportOperation'\n          title: Operations list\n          type: array\n      required:\n      - name\n      - operations\n      title: Report tag item\n      type: object\n    FuzzingStatusAndReport:\n      description: fuzzing status and reporting\n      properties:\n        progress:\n          type: integer\n        report:\n          additionalProperties:\n            $ref: '#/components/schemas/FuzzingReportItem'\n          description: List of report item\n          title: Report\n          type: object\n        status:\n          $ref: '#/components/schemas/FuzzingStatusEnum'\n      required:\n      - status\n      - report\n      - progress\n      title: FuzzingStatusAndReport\n      type: object\n    FuzzingStatusEnum:\n      description: An enumeration.\n      enum:\n      - DONE\n      - ERROR\n      - IN_PROGRESS\n      title: FuzzingStatus\n      type: string\n    HostsToTraceForComponent:\n      description: List of trace sources for a component, with theirs list of API\n        hosts to get trace for\n      properties:\n        component:\n          description: Component name\n          type: string\n        traceSourcesHosts:\n          items:\n            $ref: '#/components/schemas/HostsToTraceForTraceSource'\n          type: array\n      type: object\n    HostsToTraceForTraceSource:\n      description: list of API hosts (in the form 'host:port') managed by a traceSource\n      properties:\n        hostsToTrace:\n          description: List of hosts (in the form 'host:port')\n          items:\n            type: string\n          type: array\n        traceSourceID:\n          description: ID of the trace source\n          format: uint32\n          type: integer\n      type: object\n    K8sObjectRef:\n      properties:\n        apiVersion:\n          type: string\n        kind:\n          type: string\n        name:\n          type: string\n        namespace:\n          type: string\n        uid:\n          type: string\n      required:\n      - uid\n      - kind\n      - name\n      - namespace\n      - apiVersion\n      type: object\n    OperationEnum:\n      enum:\n      - approve\n      - deny\n      - approve_user\n      - deny_user\n      type: string\n    RawFindings:\n      properties:\n        additionalInfo:\n          type: string\n        description:\n          type: string\n        location:\n          description: location string token\n          items:\n            type: string\n          title: Paths location\n          type: array\n        namespace:\n          type: string\n        request:\n          $ref: '#/components/schemas/RawFindingsSeverity'\n        type:\n          type: string\n      title: RawFindings\n      type: object\n    RawFindingsBundle:\n      properties:\n        data:\n          description: Opaque data structure for the raw finding\n          title: Data\n          type: string\n        source:\n          $ref: '#/components/schemas/RawFindingsSourceEnum'\n        status:\n          $ref: '#/components/schemas/ScoreExitStatusEnum'\n        status_message:\n          description: Message giving details about the exist status\n          title: Status Message\n          type: string\n        timestamp:\n          description: Raw finding timestamp format= date-time\n          title: Timestamp\n          type: string\n      required:\n      - status\n      - timestamp\n      - source\n      - data\n      title: RawFindingsBundle\n      type: object\n    RawFindingsSeverity:\n      properties:\n        severity:\n          type: string\n    RawFindingsSourceEnum:\n      description: An enumeration.\n      enum:\n      - BITSIGHT\n      - TALOS\n      - OPENDNS\n      - OAS_ANALYSER\n      - GRPC_ANALYZER\n      - OAS_TRACE_ANALYZER\n      - API_FUZZER\n      title: RawFindingsSource\n      type: string\n    ScoreExitStatusEnum:\n      description: An enumeration.\n      enum:\n      - SUCCESS\n      - NETWORK_FAILURE\n      - TOO_LONG\n      - PARSE_ERROR\n      - GENERIC_FAILURE\n      title: ScoreExitStatusEnum\n      type: string\n    ShortTestProgress:\n      description: Describes the progress of an ongoing test\n      properties:\n        apiID:\n          $ref: ../common/openapi.yaml#/components/schemas/ApiID\n        progress:\n          description: Progress of the test\n          maximum: 100\n          minimum: 0\n          title: Description\n          type: integer\n        starttime:\n          description: Timestamp of the start of the test\n          format: int64\n          title: Start time\n          type: integer\n      required:\n      - starttime\n      - progress\n      title: Short Test Progress Report\n      type: object\n    ShortTestReport:\n      description: Short Test Report\n      properties:\n        apiID:\n          $ref: ../common/openapi.yaml#/components/schemas/ApiID\n        highestSeverity:\n          $ref: ../common/openapi.yaml#/components/schemas/Severity\n        starttime:\n          description: Timestamp of the start of the test\n          format: int64\n          title: Start time\n          type: integer\n        status:\n          $ref: '#/components/schemas/FuzzingStatusEnum'\n        statusMessage:\n          description: Message for status details, if any\n          title: Status message details\n          type: string\n        tags:\n          items:\n            $ref: '#/components/schemas/FuzzingReportTag'\n          title: Tags list\n          type: array\n      required:\n      - starttime\n      - status\n      title: Short Test Report\n      type: object\n    SpecDiffs:\n      properties:\n        diffs:\n          $ref: '#/components/schemas/APIDiffs'\n      required:\n      - diffs\n      type: object\n    SpecDiffsNotification:\n      allOf:\n      - $ref: ../common/openapi.yaml#/components/schemas/BaseNotification\n      - $ref: '#/components/schemas/SpecDiffs'\n    SpecType:\n      enum:\n      - NONE\n      - PROVIDED\n      - RECONSTRUCTED\n      type: string\n    Test:\n      properties:\n        errorMessage:\n          description: A message in case of error\n          title: ErrorMessage\n          type: string\n        progress:\n          description: Progress of the test\n          maximum: 100\n          minimum: 0\n          title: Progress\n          type: integer\n        starttime:\n          description: Timestamp of the start of the test\n          format: int64\n          title: Start time\n          type: integer\n        vulnerabilities:\n          $ref: '#/components/schemas/Vulnerabilities'\n      title: Test\n      type: object\n    TestHandle:\n      properties:\n        apiID:\n          $ref: ../common/openapi.yaml#/components/schemas/ApiID\n        timestamp:\n          format: int64\n          type: integer\n      type: object\n    TestInput:\n      description: contains all input parameters for a test\n      properties:\n        auth:\n          $ref: '#/components/schemas/AuthorizationScheme'\n        depth:\n          $ref: '#/components/schemas/TestInputDepthEnum'\n      required:\n      - depth\n      type: object\n    TestInputDepthEnum:\n      description: An enumeration for input depth parameter.\n      enum:\n      - QUICK\n      - DEFAULT\n      - DEEP\n      title: TestInputDepth\n      type: string\n    TestProgressNotification:\n      allOf:\n      - $ref: ../common/openapi.yaml#/components/schemas/BaseNotification\n      - $ref: '#/components/schemas/ShortTestProgress'\n    TestReportNotification:\n      allOf:\n      - $ref: ../common/openapi.yaml#/components/schemas/BaseNotification\n      - $ref: '#/components/schemas/ShortTestReport'\n    TestWithReport:\n      properties:\n        errorMessage:\n          description: A message in case of error\n          title: ErrorMessage\n          type: string\n        lastReportTime:\n          description: Timestamp of the last report received for the test\n          format: int64\n          title: Start time\n          type: integer\n        progress:\n          description: Progress of the test\n          maximum: 100\n          minimum: 0\n          title: Description\n          type: integer\n        report:\n          $ref: '#/components/schemas/FuzzingStatusAndReport'\n        starttime:\n          description: Timestamp of the start of the test\n          format: int64\n          title: Start time\n          type: integer\n        vulnerabilities:\n          $ref: '#/components/schemas/Vulnerabilities'\n      title: Test\n      type: object\n    TestingModuleState:\n      properties:\n        APIsInCache:\n          type: integer\n        version:\n          type: string\n      required:\n      - version\n      - APIsInCache\n      type: object\n    Tests:\n      properties:\n        items:\n          items:\n            $ref: '#/components/schemas/Test'\n          title: Items\n          type: array\n        total:\n          description: Nb of items, used for pagination\n          title: Total\n          type: integer\n      title: Tests\n      type: object\n    TraceSource:\n      description: A Source which is sending traces to APIClarity\n      properties:\n        description:\n          type: string\n        id:\n          type: integer\n        name:\n          description: Unique name identifying a Trace Source\n          type: string\n        token:\n          type: string\n        type:\n          $ref: '#/components/schemas/TraceSourceType'\n        uid:\n          format: uuid\n          type: string\n      required:\n      - name\n      - type\n      type: object\n    TraceSourceType:\n      enum:\n      - APIGEE_X\n      - KONG_INTERNAL\n      - TYK_INTERNAL\n      type: string\n    Version:\n      properties:\n        version:\n          type: string\n      required:\n      - version\n      type: object\n    Vulnerabilities:\n      description: risk of the finding\n      properties:\n        critical:\n          description: Total of vuln\n          title: Critical\n          type: integer\n        high:\n          description: Total of vuln\n          title: High\n          type: integer\n        low:\n          description: Total of vuln\n          title: Low\n          type: integer\n        medium:\n          description: Total of vuln\n          title: Medium\n          type: integer\n        total:\n          description: Total of vuln\n          title: Total\n          type: integer\n      title: Risk\n      type: object\ninfo:\n  title: APIClarity APIs\n  version: 1.0.0\nopenapi: 3.0.0\npaths:\n  /apiEvents:\n    get:\n      parameters:\n      - $ref: '#/components/parameters/startTime'\n      - $ref: '#/components/parameters/endTime'\n      - $ref: '#/components/parameters/page'\n      - $ref: '#/components/parameters/pageSize'\n      - $ref: '#/components/parameters/apiEventSortKey'\n      - $ref: '#/components/parameters/sortDir'\n      - $ref: '#/components/parameters/showNonApi'\n      - $ref: '#/components/parameters/apiInfoIdIsFilter'\n      - $ref: '#/components/parameters/methodIsFilter'\n      - $ref: '#/components/parameters/pathIsFilter'\n      - $ref: '#/components/parameters/pathIsNotFilter'\n      - $ref: '#/components/parameters/pathStartsWithFilter'\n      - $ref: '#/components/parameters/pathEndsWithFilter'\n      - $ref: '#/components/parameters/pathContainsFilter'\n      - $ref: '#/components/parameters/statusCodeIsFilter'\n      - $ref: '#/components/parameters/statusCodeIsNotFilter'\n      - $ref: '#/components/parameters/statusCodeGteFilter'\n      - $ref: '#/components/parameters/statusCodeLteFilter'\n      - $ref: '#/components/parameters/sourceIPIsFilter'\n      - $ref: '#/components/parameters/sourceIPIsNotFilter'\n      - $ref: '#/components/parameters/destinationIPIsFilter'\n      - $ref: '#/components/parameters/destinationIPIsNotFilter'\n      - $ref: '#/components/parameters/destinationPortIsFilter'\n      - $ref: '#/components/parameters/destinationPortIsNotFilter'\n      - $ref: '#/components/parameters/hasSpecDiffFilter'\n      - $ref: '#/components/parameters/specDiffTypeIsFilter'\n      - $ref: '#/components/parameters/specIsFilter'\n      - $ref: '#/components/parameters/specIsNotFilter'\n      - $ref: '#/components/parameters/specStartsWithFilter'\n      - $ref: '#/components/parameters/specEndsWithFilter'\n      - $ref: '#/components/parameters/specContainsFilter'\n      - $ref: '#/components/parameters/alertIsFilter'\n      - $ref: '#/components/parameters/alertIsType'\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                properties:\n                  items:\n                    description: List of API events in the given time range, filters\n                      and page. List length must be lower or equal to pageSize\n                    items:\n                      $ref: ../common/openapi.yaml#/components/schemas/ApiEvent\n                    type: array\n                  total:\n                    description: Total events count in the given time range and filters\n                    type: integer\n                required:\n                - total\n                type: object\n          description: Success\n        default:\n          $ref: '#/components/responses/UnknownError'\n      summary: Get API events\n  /apiEvents/{eventId}:\n    get:\n      parameters:\n      - description: API event ID\n        in: path\n        name: eventId\n        required: true\n        schema:\n          format: uint32\n          type: integer\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: ../common/openapi.yaml#/components/schemas/ApiEvent\n          description: Success\n        default:\n          $ref: '#/components/responses/UnknownError'\n      summary: Get API event\n  /apiEvents/{eventId}/providedSpecDiff:\n    get:\n      parameters:\n      - description: API event ID\n        in: path\n        name: eventId\n        required: true\n        schema:\n          format: uint32\n          type: integer\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: ../common/openapi.yaml#/components/schemas/ApiEventSpecDiff\n          description: Success\n        default:\n          $ref: '#/components/responses/UnknownError'\n      summary: Get API event provided spec diff\n  /apiEvents/{eventId}/reconstructedSpecDiff:\n    get:\n      parameters:\n      - description: API event ID\n        in: path\n        name: eventId\n        required: true\n        schema:\n          format: uint32\n          type: integer\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: ../common/openapi.yaml#/components/schemas/ApiEventSpecDiff\n          description: Success\n        default:\n          $ref: '#/components/responses/UnknownError'\n      summary: Get API event reconstructed spec diff\n  /apiInventory:\n    get:\n      parameters:\n      - $ref: '#/components/parameters/apiType'\n      - $ref: '#/components/parameters/page'\n      - $ref: '#/components/parameters/pageSize'\n      - $ref: '#/components/parameters/apiInventorySortKey'\n      - $ref: '#/components/parameters/sortDir'\n      - $ref: '#/components/parameters/apiNameIsFilter'\n      - $ref: '#/components/parameters/apiNameIsNotFilter'\n      - $ref: '#/components/parameters/apiNameStartsWithFilter'\n      - $ref: '#/components/parameters/apiNameEndsWithFilter'\n      - $ref: '#/components/parameters/apiNameContainsFilter'\n      - $ref: '#/components/parameters/portIsFilter'\n      - $ref: '#/components/parameters/portIsNotFilter'\n      - $ref: '#/components/parameters/hasProvidedSpecFilter'\n      - $ref: '#/components/parameters/hasReconstructedSpecFilter'\n      - $ref: '#/components/parameters/apiIdFilter'\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                properties:\n                  items:\n                    description: List of filtered APIs in the given page. List length\n                      must be lower or equal to pageSize\n                    items:\n                      $ref: ../common/openapi.yaml#/components/schemas/ApiInfo\n                    type: array\n                  total:\n                    description: Total filtered APIs count\n                    type: integer\n                required:\n                - total\n                type: object\n          description: Success\n        default:\n          $ref: '#/components/responses/UnknownError'\n      summary: Get API inventory\n    post:\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: ../common/openapi.yaml#/components/schemas/ApiInfoWithType\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: ../common/openapi.yaml#/components/schemas/ApiInfo\n          description: Success\n        default:\n          $ref: '#/components/responses/UnknownError'\n      summary: Create API inventory item\n  /apiInventory/{apiId}/apiInfo:\n    get:\n      parameters:\n      - $ref: '#/components/parameters/apiId'\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: ../common/openapi.yaml#/components/schemas/ApiInfoWithType\n          description: Success\n        default:\n          $ref: '#/components/responses/UnknownError'\n      summary: Get api info from apiId\n  /apiInventory/{apiId}/provided_swagger.json:\n    get:\n      parameters:\n      - $ref: '#/components/parameters/apiId'\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                description: spec in json format\n                type: object\n          description: Success\n        default:\n          $ref: '#/components/responses/UnknownError'\n      summary: Get provided API spec json file\n  /apiInventory/{apiId}/reconstructed_swagger.json:\n    get:\n      parameters:\n      - $ref: '#/components/parameters/apiId'\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                description: spec in json format\n                type: object\n          description: Success\n        default:\n          $ref: '#/components/responses/UnknownError'\n      summary: Get reconstructed API spec json file\n  /apiInventory/{apiId}/specs:\n    get:\n      parameters:\n      - $ref: '#/components/parameters/apiId'\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: ../common/openapi.yaml#/components/schemas/OpenApiSpecs\n          description: Success\n        default:\n          $ref: '#/components/responses/UnknownError'\n      summary: Get provided and reconstructed open api specs for a specific API\n  /apiInventory/{apiId}/specs/providedSpec:\n    delete:\n      parameters:\n      - $ref: '#/components/parameters/apiId'\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: ../common/openapi.yaml#/components/schemas/SuccessResponse\n          description: Success\n        default:\n          $ref: '#/components/responses/UnknownError'\n      summary: Unset a provided spec for a specific API\n    put:\n      parameters:\n      - $ref: '#/components/parameters/apiId'\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: ../common/openapi.yaml#/components/schemas/rawSpec\n        required: true\n      responses:\n        \"201\":\n          content:\n            application/json:\n              schema:\n                $ref: ../common/openapi.yaml#/components/schemas/rawSpec\n          description: Success\n        \"400\":\n          content:\n            application/json:\n              schema:\n                type: string\n          description: Spec validation failure\n        default:\n          $ref: '#/components/responses/UnknownError'\n      summary: Add or edit a spec for a specific API\n  /apiInventory/{apiId}/specs/reconstructedSpec:\n    delete:\n      parameters:\n      - $ref: '#/components/parameters/apiId'\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: ../common/openapi.yaml#/components/schemas/SuccessResponse\n          description: Success\n        default:\n          $ref: '#/components/responses/UnknownError'\n      summary: Unset a reconstructed spec for a specific API\n  /apiInventory/{apiId}/suggestedReview:\n    get:\n      parameters:\n      - $ref: '#/components/parameters/apiId'\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: ../common/openapi.yaml#/components/schemas/SuggestedReview\n          description: Success\n        default:\n          $ref: '#/components/responses/UnknownError'\n      summary: Get reconstructed spec for review\n  /apiInventory/{reviewId}/approvedReview:\n    post:\n      parameters:\n      - $ref: '#/components/parameters/reviewId'\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: ../common/openapi.yaml#/components/schemas/ApprovedReview\n        required: true\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: ../common/openapi.yaml#/components/schemas/SuccessResponse\n          description: Success\n        default:\n          $ref: '#/components/responses/UnknownError'\n      summary: Apply the approved review to create the reconstructed spec\n  /apiInventory/apiId/fromHostAndPort:\n    get:\n      parameters:\n      - $ref: '#/components/parameters/host'\n      - $ref: '#/components/parameters/port'\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                description: api id\n                format: uint32\n                type: integer\n          description: Success\n        \"404\":\n          content:\n            application/json:\n              schema:\n                $ref: ../common/openapi.yaml#/components/schemas/ApiResponse\n          description: API ID Not Found\n        default:\n          $ref: '#/components/responses/UnknownError'\n      summary: Get apiId from host and port\n  /apiInventory/apiId/fromHostAndPortAndTraceSourceID:\n    get:\n      parameters:\n      - $ref: '#/components/parameters/host'\n      - $ref: '#/components/parameters/port'\n      - $ref: '#/components/parameters/traceSourceIdQuery'\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                description: api id\n                format: uint32\n                type: integer\n          description: Success\n        \"404\":\n          content:\n            application/json:\n              schema:\n                $ref: ../common/openapi.yaml#/components/schemas/ApiResponse\n          description: API ID Not Found\n        default:\n          $ref: '#/components/responses/UnknownError'\n      summary: Get apiId from host and port and Trace Source ID\n  /apiUsage/hitCount:\n    get:\n      parameters:\n      - $ref: '#/components/parameters/startTime'\n      - $ref: '#/components/parameters/endTime'\n      - $ref: '#/components/parameters/showNonApi'\n      - $ref: '#/components/parameters/methodIsFilter'\n      - $ref: '#/components/parameters/providedPathIDIsFilter'\n      - $ref: '#/components/parameters/reconstructedPathIDIsFilter'\n      - $ref: '#/components/parameters/pathIsFilter'\n      - $ref: '#/components/parameters/pathIsNotFilter'\n      - $ref: '#/components/parameters/pathStartsWithFilter'\n      - $ref: '#/components/parameters/pathEndsWithFilter'\n      - $ref: '#/components/parameters/pathContainsFilter'\n      - $ref: '#/components/parameters/statusCodeIsFilter'\n      - $ref: '#/components/parameters/statusCodeIsNotFilter'\n      - $ref: '#/components/parameters/statusCodeGteFilter'\n      - $ref: '#/components/parameters/statusCodeLteFilter'\n      - $ref: '#/components/parameters/sourceIPIsFilter'\n      - $ref: '#/components/parameters/sourceIPIsNotFilter'\n      - $ref: '#/components/parameters/destinationIPIsFilter'\n      - $ref: '#/components/parameters/destinationIPIsNotFilter'\n      - $ref: '#/components/parameters/destinationPortIsFilter'\n      - $ref: '#/components/parameters/destinationPortIsNotFilter'\n      - $ref: '#/components/parameters/hasSpecDiffFilter'\n      - $ref: '#/components/parameters/specDiffTypeIsFilter'\n      - $ref: '#/components/parameters/specIsFilter'\n      - $ref: '#/components/parameters/specIsNotFilter'\n      - $ref: '#/components/parameters/specStartsWithFilter'\n      - $ref: '#/components/parameters/specEndsWithFilter'\n      - $ref: '#/components/parameters/specContainsFilter'\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: ../common/openapi.yaml#/components/schemas/HitCount\n                type: array\n          description: Success\n        default:\n          $ref: '#/components/responses/UnknownError'\n      summary: Get a hit count within a selected timeframe for the filtered API events\n  /control/newDiscoveredAPIs:\n    post:\n      description: This allows a client (a gateway for example) to notify APIclarity\n        about newly discovered APIs. If one of the APIs already exists, it is ignored.\n      requestBody:\n        content:\n          application/json:\n            schema:\n              properties:\n                hosts:\n                  description: List of discovered APIs, format of hostname:port\n                  items:\n                    type: string\n                  type: array\n              required:\n              - hosts\n              type: object\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: ../common/openapi.yaml#/components/schemas/SuccessResponse\n          description: Success\n        default:\n          $ref: '#/components/responses/UnknownError'\n      summary: Allows a client to notify APIClarity about new APIs.\n  /control/traceSources:\n    get:\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                properties:\n                  trace_sources:\n                    description: List of trace sources\n                    items:\n                      $ref: '#/components/schemas/TraceSource'\n                    type: array\n                required:\n                - trace_sources\n                type: object\n          description: Success\n        default:\n          $ref: '#/components/responses/UnknownError'\n      summary: List of configured trace sources\n    post:\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/TraceSource'\n      responses:\n        \"201\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/TraceSource'\n          description: Success\n        default:\n          $ref: '#/components/responses/UnknownError'\n      summary: Create a new Trace Source\n  /control/traceSources/{traceSourceId}:\n    delete:\n      responses:\n        \"204\":\n          description: Success\n        \"404\":\n          content:\n            application/json:\n              schema:\n                $ref: ../common/openapi.yaml#/components/schemas/ApiResponse\n          description: Trace Source not found\n        default:\n          $ref: '#/components/responses/UnknownError'\n      summary: Delete a Trace Source\n    get:\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/TraceSource'\n          description: Trace Source information\n        \"404\":\n          content:\n            application/json:\n              schema:\n                $ref: ../common/openapi.yaml#/components/schemas/ApiResponse\n          description: Trace Source not found\n        default:\n          $ref: '#/components/responses/UnknownError'\n      summary: Get Trace Source information\n    parameters:\n    - $ref: '#/components/parameters/traceSourceId'\n  /dashboard/apiUsage:\n    get:\n      parameters:\n      - $ref: '#/components/parameters/startTime'\n      - $ref: '#/components/parameters/endTime'\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: ../common/openapi.yaml#/components/schemas/ApiUsages\n          description: Success\n        default:\n          $ref: '#/components/responses/UnknownError'\n      summary: Get API usage\n  /dashboard/apiUsage/latestDiffs:\n    get:\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: ../common/openapi.yaml#/components/schemas/SpecDiffTime\n                type: array\n          description: Success\n        default:\n          $ref: '#/components/responses/UnknownError'\n      summary: Get latest spec diffs\n  /dashboard/apiUsage/mostUsed:\n    get:\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: ../common/openapi.yaml#/components/schemas/ApiCount\n                type: array\n          description: Success\n        default:\n          $ref: '#/components/responses/UnknownError'\n      summary: Get most used APIs\n  /features:\n    get:\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/APIClarityFeatureList'\n          description: Success\n      summary: Get the list of APIClarity features and for each feature the list of\n        API hosts (in the form 'host:port') the feature requires to get trace for\n  /modules/bfla/apiFindings/{apiID}:\n    get:\n      description: Asks for findings of an APIClarity module, and API. Implemented\n        by each module\n      operationId: bflaGetApiFindings\n      parameters:\n      - in: path\n        name: apiID\n        required: true\n        schema:\n          $ref: ../common/openapi.yaml#/components/schemas/ApiID\n      - $ref: ../common/openapi.yaml#/components/parameters/Sensitive\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: ../common/openapi.yaml#/components/schemas/APIFindings\n          description: An API Findings Bundle\n        default:\n          content:\n            application/json:\n              schema:\n                $ref: ../common/openapi.yaml#/components/schemas/ApiResponse\n          description: Error response\n      summary: Get findings for an API and module\n      tags:\n      - bfla\n  /modules/bfla/authorizationModel/{apiID}:\n    get:\n      parameters:\n      - in: path\n        name: apiID\n        required: true\n        schema:\n          $ref: ../common/openapi.yaml#/components/schemas/ApiID\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AuthorizationModel'\n          description: Success\n        default:\n          content:\n            application/json:\n              schema:\n                $ref: ../common/openapi.yaml#/components/schemas/ApiResponse\n          description: Error response\n      tags:\n      - bfla\n    post:\n      parameters:\n      - in: path\n        name: apiID\n        required: true\n        schema:\n          $ref: ../common/openapi.yaml#/components/schemas/ApiID\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/AuthorizationModel'\n      responses:\n        \"201\":\n          content:\n            application/json:\n              schema:\n                $ref: ../common/openapi.yaml#/components/schemas/ApiResponse\n          description: Success\n        default:\n          content:\n            application/json:\n              schema:\n                $ref: ../common/openapi.yaml#/components/schemas/ApiResponse\n          description: Error response\n      tags:\n      - bfla\n  /modules/bfla/authorizationModel/{apiID}/approve:\n    put:\n      parameters:\n      - in: path\n        name: apiID\n        required: true\n        schema:\n          $ref: ../common/openapi.yaml#/components/schemas/ApiID\n      - in: query\n        name: method\n        required: true\n        schema:\n          type: string\n      - in: query\n        name: path\n        required: true\n        schema:\n          type: string\n      - in: query\n        name: k8sClientUid\n        required: true\n        schema:\n          type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: ../common/openapi.yaml#/components/schemas/ApiResponse\n          description: Success\n        default:\n          content:\n            application/json:\n              schema:\n                $ref: ../common/openapi.yaml#/components/schemas/ApiResponse\n          description: Error response\n      tags:\n      - local-bfla\n  /modules/bfla/authorizationModel/{apiID}/deny:\n    put:\n      parameters:\n      - in: path\n        name: apiID\n        required: true\n        schema:\n          $ref: ../common/openapi.yaml#/components/schemas/ApiID\n      - in: query\n        name: method\n        required: true\n        schema:\n          type: string\n      - in: query\n        name: path\n        required: true\n        schema:\n          type: string\n      - in: query\n        name: k8sClientUid\n        required: true\n        schema:\n          type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: ../common/openapi.yaml#/components/schemas/ApiResponse\n          description: Success\n        default:\n          content:\n            application/json:\n              schema:\n                $ref: ../common/openapi.yaml#/components/schemas/ApiResponse\n          description: Error response\n      tags:\n      - local-bfla\n  /modules/bfla/authorizationModel/{apiID}/detection/start:\n    put:\n      parameters:\n      - in: path\n        name: apiID\n        required: true\n        schema:\n          $ref: ../common/openapi.yaml#/components/schemas/ApiID\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: ../common/openapi.yaml#/components/schemas/ApiResponse\n          description: Success\n        default:\n          content:\n            application/json:\n              schema:\n                $ref: ../common/openapi.yaml#/components/schemas/ApiResponse\n          description: Error response\n      tags:\n      - bfla\n  /modules/bfla/authorizationModel/{apiID}/detection/stop:\n    put:\n      parameters:\n      - in: path\n        name: apiID\n        required: true\n        schema:\n          $ref: ../common/openapi.yaml#/components/schemas/ApiID\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: ../common/openapi.yaml#/components/schemas/ApiResponse\n          description: Success\n        default:\n          content:\n            application/json:\n              schema:\n                $ref: ../common/openapi.yaml#/components/schemas/ApiResponse\n          description: Error response\n      tags:\n      - bfla\n  /modules/bfla/authorizationModel/{apiID}/learning/start:\n    put:\n      parameters:\n      - in: path\n        name: apiID\n        required: true\n        schema:\n          $ref: ../common/openapi.yaml#/components/schemas/ApiID\n      - in: query\n        name: nr_traces\n        schema:\n          type: integer\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: ../common/openapi.yaml#/components/schemas/ApiResponse\n          description: Success\n        default:\n          content:\n            application/json:\n              schema:\n                $ref: ../common/openapi.yaml#/components/schemas/ApiResponse\n          description: Error response\n      tags:\n      - bfla\n  /modules/bfla/authorizationModel/{apiID}/learning/stop:\n    put:\n      parameters:\n      - in: path\n        name: apiID\n        required: true\n        schema:\n          $ref: ../common/openapi.yaml#/components/schemas/ApiID\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: ../common/openapi.yaml#/components/schemas/ApiResponse\n          description: Success\n        default:\n          content:\n            application/json:\n              schema:\n                $ref: ../common/openapi.yaml#/components/schemas/ApiResponse\n          description: Error response\n      tags:\n      - bfla\n  /modules/bfla/authorizationModel/{apiID}/reset:\n    post:\n      parameters:\n      - in: path\n        name: apiID\n        required: true\n        schema:\n          $ref: ../common/openapi.yaml#/components/schemas/ApiID\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: ../common/openapi.yaml#/components/schemas/ApiResponse\n          description: Success\n        default:\n          content:\n            application/json:\n              schema:\n                $ref: ../common/openapi.yaml#/components/schemas/ApiResponse\n          description: Error response\n      tags:\n      - bfla\n  /modules/bfla/authorizationModel/{apiID}/state:\n    get:\n      parameters:\n      - in: path\n        name: apiID\n        required: true\n        schema:\n          $ref: ../common/openapi.yaml#/components/schemas/ApiID\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BFLAState'\n          description: Success\n        default:\n          content:\n            application/json:\n              schema:\n                $ref: ../common/openapi.yaml#/components/schemas/ApiResponse\n          description: Error response\n      tags:\n      - bfla\n  /modules/bfla/event/{id}:\n    get:\n      operationId: bflaget_event\n      parameters:\n      - in: path\n        name: id\n        required: true\n        schema:\n          type: integer\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/APIEventAnnotations'\n          description: API Event with annotations\n      summary: Get the event with the annotations and bfla status\n      tags:\n      - local-bfla\n  /modules/bfla/event/{id}/{operation}:\n    put:\n      parameters:\n      - in: path\n        name: id\n        required: true\n        schema:\n          type: integer\n      - in: path\n        name: operation\n        required: true\n        schema:\n          $ref: '#/components/schemas/OperationEnum'\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: ../common/openapi.yaml#/components/schemas/ApiResponse\n          description: Success\n        default:\n          content:\n            application/json:\n              schema:\n                $ref: ../common/openapi.yaml#/components/schemas/ApiResponse\n          description: Error response\n      tags:\n      - local-bfla\n  /modules/bfla/version:\n    get:\n      description: Get the version of this Module\n      operationId: bflagetVersion\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: ../common/openapi.yaml#/components/schemas/ModuleVersion\n          description: Version of the Module\n      summary: Get the version of this Module\n      tags:\n      - local-bfla\n  /modules/fuzzer/annotatedspec/{apiID}:\n    get:\n      description: Retreive the annotated spec for an API if any, 404 Not Found otherwise\n      operationId: fuzzerGetAnnotatedSpec\n      parameters:\n      - in: path\n        name: apiID\n        required: true\n        schema:\n          $ref: ../common/openapi.yaml#/components/schemas/ApiID\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                description: spec in json format\n                type: object\n          description: List of tests\n        \"404\":\n          content:\n            application/json:\n              schema:\n                description: error message\n                type: string\n          description: Spec not found\n      summary: Retreive the annotated spec for an API\n      tags:\n      - local-fuzzer\n  /modules/fuzzer/apiFindings/{apiID}:\n    get:\n      description: Asks for findings of an APIClarity module, and API. Implemented\n        by each module\n      operationId: fuzzerGetAPIFindings\n      parameters:\n      - in: path\n        name: apiID\n        required: true\n        schema:\n          $ref: ../common/openapi.yaml#/components/schemas/ApiID\n      - $ref: ../common/openapi.yaml#/components/parameters/Sensitive\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: ../common/openapi.yaml#/components/schemas/APIFindings\n          description: An API Findings Bundle\n        default:\n          content:\n            application/json:\n              schema:\n                $ref: ../common/openapi.yaml#/components/schemas/ApiResponse\n          description: Error response\n      summary: Get findings for an API and module\n  /modules/fuzzer/fuzz/{apiID}/progress:\n    get:\n      description: Start a test for an API\n      operationId: fuzzerGetTestProgress\n      parameters:\n      - in: path\n        name: apiID\n        required: true\n        schema:\n          $ref: ../common/openapi.yaml#/components/schemas/ApiID\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ShortTestProgress'\n          description: Successful Response\n        \"404\":\n          content:\n            application/json:\n              schema:\n                description: error message\n                type: string\n          description: Service not found\n        \"500\":\n          content:\n            application/json:\n              schema:\n                description: error message\n                type: string\n          description: Internal Error\n      summary: Start a test for an API\n      tags:\n      - fuzzer\n  /modules/fuzzer/fuzz/{apiID}/report:\n    get:\n      description: Start a test for an API\n      operationId: fuzzerGetTestReport\n      parameters:\n      - in: path\n        name: apiID\n        required: true\n        schema:\n          $ref: ../common/openapi.yaml#/components/schemas/ApiID\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ShortTestReport'\n          description: Successful Response\n        \"404\":\n          content:\n            application/json:\n              schema:\n                description: error message\n                type: string\n          description: Service not found\n        \"500\":\n          content:\n            application/json:\n              schema:\n                description: error message\n                type: string\n          description: Internal Error\n      summary: Start a test for an API\n      tags:\n      - fuzzer\n  /modules/fuzzer/fuzz/{apiID}/start:\n    post:\n      description: Start a test for an API\n      operationId: fuzzerStartTest\n      parameters:\n      - in: path\n        name: apiID\n        required: true\n        schema:\n          $ref: ../common/openapi.yaml#/components/schemas/ApiID\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/TestInput'\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/TestHandle'\n          description: Successful Response\n        \"400\":\n          content:\n            application/json:\n              schema:\n                description: error message\n                type: string\n          description: Status Bad Request\n        \"404\":\n          content:\n            application/json:\n              schema:\n                description: error message\n                type: string\n          description: Service not found\n        \"500\":\n          content:\n            application/json:\n              schema:\n                description: error message\n                type: string\n          description: Internal Error\n      summary: Start a test for an API\n      tags:\n      - fuzzer\n  /modules/fuzzer/fuzz/{apiID}/stop:\n    post:\n      description: Stop (cancel) a running test for an API\n      operationId: fuzzerStopTest\n      parameters:\n      - in: path\n        name: apiID\n        required: true\n        schema:\n          $ref: ../common/openapi.yaml#/components/schemas/ApiID\n      responses:\n        \"204\":\n          description: Successful Response\n        \"400\":\n          content:\n            application/json:\n              schema:\n                description: error message\n                type: string\n          description: Status Bad Request\n        \"404\":\n          content:\n            application/json:\n              schema:\n                description: error message\n                type: string\n          description: Service not found\n        \"500\":\n          content:\n            application/json:\n              schema:\n                description: error message\n                type: string\n          description: Internal Error\n      summary: Stop (cancel) a running test for an API\n      tags:\n      - fuzzer\n  /modules/fuzzer/report/{apiID}/{timestamp}:\n    get:\n      description: Retreive a report for an API identified by its timestamp\n      operationId: fuzzerGetReport\n      parameters:\n      - in: path\n        name: apiID\n        required: true\n        schema:\n          $ref: ../common/openapi.yaml#/components/schemas/ApiID\n      - description: Timestamp of the start of the test\n        in: path\n        name: timestamp\n        required: true\n        schema:\n          format: int64\n          type: integer\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/TestWithReport'\n          description: List of tests\n      summary: Retreive a report for an API\n      tags:\n      - local-fuzzer\n  /modules/fuzzer/report/{apiID}/{timestamp}/short:\n    get:\n      description: Retreive a report for an API identified by its timestamp\n      operationId: fuzzerGetShortReportByTimestamp\n      parameters:\n      - in: path\n        name: apiID\n        required: true\n        schema:\n          $ref: ../common/openapi.yaml#/components/schemas/ApiID\n      - description: Timestamp of the start of the test\n        in: path\n        name: timestamp\n        required: true\n        schema:\n          format: int64\n          type: integer\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ShortTestReport'\n          description: List of tests\n      summary: Retrieve a report for an API for a specific test\n      tags:\n      - local-fuzzer\n  /modules/fuzzer/state:\n    get:\n      description: Get useful informations about the current running state of the\n        testing module\n      operationId: fuzzergetState\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/TestingModuleState'\n          description: Current testing module running state\n      summary: Get the current running state of this module\n  /modules/fuzzer/tests/{apiID}:\n    get:\n      description: Retreive the list of tests for an API (without report)\n      operationId: fuzzerGetTests\n      parameters:\n      - in: path\n        name: apiID\n        required: true\n        schema:\n          $ref: ../common/openapi.yaml#/components/schemas/ApiID\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Tests'\n          description: List of tests\n      summary: Retreieve the list of tests for an API\n      tags:\n      - local-fuzzer\n  /modules/fuzzer/updateStatus/{apiID}:\n    get:\n      description: Retreive last update status for an API under fuzzing\n      operationId: fuzzerGetUpdateStatus\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/FuzzingStatusAndReport'\n          description: Raw Finding Bundle\n      summary: Retreive last update status for an API under fuzzing\n      tags:\n      - local-fuzzer\n    parameters:\n    - in: path\n      name: apiID\n      required: true\n      schema:\n        $ref: ../common/openapi.yaml#/components/schemas/ApiID\n    post:\n      description: Provide the Update status for an API under fuzzing\n      operationId: fuzzerPostUpdateStatus\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/FuzzingStatusAndReport'\n        required: true\n      responses:\n        \"204\":\n          description: Successful Response\n      summary: Update status for an API under fuzzing\n      tags:\n      - local-fuzzer\n  /modules/fuzzer/version:\n    get:\n      description: Get the version of this Module\n      operationId: fuzzergetVersion\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Version'\n          description: Version of the Module\n      summary: Get the version of this Module\n  /modules/spec_differ/{apiID}/start:\n    post:\n      description: Start Differ for an API.\n      operationId: spec_differStartDiffer\n      parameters:\n      - in: path\n        name: apiID\n        required: true\n        schema:\n          $ref: ../common/openapi.yaml#/components/schemas/ApiID\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: ../common/openapi.yaml#/components/schemas/ApiResponse\n          description: Success\n        default:\n          content:\n            application/json:\n              schema:\n                $ref: ../common/openapi.yaml#/components/schemas/ApiResponse\n          description: Error response\n      summary: Start Differ for an API\n  /modules/spec_differ/{apiID}/stop:\n    post:\n      description: Stop Differ for an API.\n      operationId: spec_differStopDiffer\n      parameters:\n      - in: path\n        name: apiID\n        required: true\n        schema:\n          $ref: ../common/openapi.yaml#/components/schemas/ApiID\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: ../common/openapi.yaml#/components/schemas/ApiResponse\n          description: Success\n        default:\n          content:\n            application/json:\n              schema:\n                $ref: ../common/openapi.yaml#/components/schemas/ApiResponse\n          description: Error response\n      summary: Stop Differ for an API\n  /modules/specreconstructor/{apiID}/start:\n    post:\n      operationId: specreconstructorPostAPIIDStart\n      parameters:\n      - in: path\n        name: apiID\n        required: true\n        schema:\n          $ref: ../common/openapi.yaml#/components/schemas/ApiID\n      responses:\n        \"204\":\n          description: Success\n        default:\n          content:\n            application/json:\n              schema:\n                $ref: ../common/openapi.yaml#/components/schemas/ApiResponse\n          description: Error response\n      summary: Start the spec reconstruction for this API.\n  /modules/specreconstructor/{apiID}/stop:\n    post:\n      operationId: specreconstructorPostAPIIDStop\n      parameters:\n      - in: path\n        name: apiID\n        required: true\n        schema:\n          $ref: ../common/openapi.yaml#/components/schemas/ApiID\n      responses:\n        \"204\":\n          description: Success\n        default:\n          content:\n            application/json:\n              schema:\n                $ref: ../common/openapi.yaml#/components/schemas/ApiResponse\n          description: Error response\n      summary: Stop the spec reconstruction for this API.\n  /modules/specreconstructor/enable:\n    post:\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/FeatureEnable'\n      responses:\n        \"204\":\n          description: Success\n        default:\n          content:\n            application/json:\n              schema:\n                $ref: ../common/openapi.yaml#/components/schemas/ApiResponse\n          description: Error response\n      summary: enable/disable the spec reconstruction\n  /modules/specreconstructor/version:\n    get:\n      description: Get the version of this Plugin\n      operationId: specreconstructorgetVersion\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: ../common/openapi.yaml#/components/schemas/ModuleVersion\n          description: Version of the Plugin\n      summary: Get the version of this Plugin\n  /modules/traceanalyzer/{apiID}/start:\n    post:\n      description: Start Trace Analysis for an API.\n      operationId: traceanalyzerStartTraceAnalysis\n      parameters:\n      - in: path\n        name: apiID\n        required: true\n        schema:\n          $ref: ../common/openapi.yaml#/components/schemas/ApiID\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: ../common/openapi.yaml#/components/schemas/ApiResponse\n          description: Success\n        default:\n          content:\n            application/json:\n              schema:\n                $ref: ../common/openapi.yaml#/components/schemas/ApiResponse\n          description: Error response\n      summary: Start Trace Analysis for an API\n  /modules/traceanalyzer/{apiID}/stop:\n    post:\n      description: Stop Trace Analysis for an API.\n      operationId: traceanalyzerStopTraceAnalysis\n      parameters:\n      - in: path\n        name: apiID\n        required: true\n        schema:\n          $ref: ../common/openapi.yaml#/components/schemas/ApiID\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: ../common/openapi.yaml#/components/schemas/ApiResponse\n          description: Success\n        default:\n          content:\n            application/json:\n              schema:\n                $ref: ../common/openapi.yaml#/components/schemas/ApiResponse\n          description: Error response\n      summary: Stop Trace Analysis for an API\n  /modules/traceanalyzer/apiFindings/{apiID}:\n    get:\n      description: Asks for findings of an APIClarity module, and API. Implemented\n        by each module\n      operationId: traceanalyzerGetApiFindings\n      parameters:\n      - in: path\n        name: apiID\n        required: true\n        schema:\n          $ref: ../common/openapi.yaml#/components/schemas/ApiID\n      - $ref: ../common/openapi.yaml#/components/parameters/Sensitive\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: ../common/openapi.yaml#/components/schemas/APIFindings\n          description: An API Findings Bundle\n        default:\n          content:\n            application/json:\n              schema:\n                $ref: ../common/openapi.yaml#/components/schemas/ApiResponse\n          description: Error response\n      summary: Get findings for an API and module\n  /modules/traceanalyzer/apiFindings/{apiID}/reset:\n    post:\n      operationId: traceanalyzerResetApiFindings\n      parameters:\n      - in: path\n        name: apiID\n        required: true\n        schema:\n          $ref: ../common/openapi.yaml#/components/schemas/ApiID\n      responses:\n        \"204\":\n          description: Reset\n        default:\n          content:\n            application/json:\n              schema:\n                $ref: ../common/openapi.yaml#/components/schemas/ApiResponse\n          description: Error response\n      summary: Delete all API findings for an API\n  /modules/traceanalyzer/eventAnnotations/{eventID}:\n    get:\n      description: Get Trace Analyzer Annotations for a specific event\n      operationId: traceanalyzerGetEventAnnotations\n      parameters:\n      - in: path\n        name: eventID\n        required: true\n        schema:\n          format: int64\n          type: integer\n      - $ref: '#/components/parameters/redacted'\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Annotations'\n          description: Annotation\n      summary: Get Annotations for an event\nservers:\n- url: /api\n",
			"canonicalURL": "/github.com/openclarity/apiclarity@ccb39d95ed8bbacd6f93d11094f8de8d8e6dc816/-/blob/api3/global/openapi.gen.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/openclarity/apiclarity/blob/ccb39d95ed8bbacd6f93d11094f8de8d8e6dc816/api3/global/openapi.gen.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "parse: parse spec: parse components: schemas: \"APIClarityFeatureEnum\": resolve \"#/components/schemas/APIClarityFeatureEnum\": at api3/global/openapi.gen.yaml:397:9: duplicate enum value: \"\\\"specreconstructor\\\"\""
}