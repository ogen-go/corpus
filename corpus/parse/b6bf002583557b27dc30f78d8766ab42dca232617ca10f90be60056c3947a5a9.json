{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/theopenconversationkit/tock"
		},
		"file": {
			"name": "admin.yaml",
			"size": 0,
			"path": "nlp/api/doc/src/main/doc/admin.yaml",
			"byteSize": 16945,
			"content": "openapi: \"3.0.0\"\ninfo:\n  description: \"This is the Tock NLP ADMIN API. You can manage your model with it!\"\n  version: \"20.9\"\n  title: \"Tock NLP Admin API\"\n  termsOfService: \"https://doc.tock.ai\"\n  contact:\n    name: Contact us on Gitter\n    url: https://gitter.im/tockchat/Lobby\n  license:\n    name: Licence Apache 2.0\n    url: http://www.apache.org/licenses/LICENSE-2.0.html\nservers:\n  - url: https://demo.tock.ai/rest/admin\n    description: Public demo server\n  - url: http://localhost/rest/admin\n    description: Local server (default tock-docker implementation)\ntags:\n  - name: \"Application\"\n    description: \"Manage application models\"\n  - name: \"Sentence\"\n    description: \"Manage sentences of the model\"\n  - name: \"Dump\"\n    description: \"Upload model dumps\"\n\nschemes:\n  - \"http\"\n  - \"https\"\ncomponents:\n  securitySchemes:\n    basicAuth:     \n      type: http\n      scheme: basic\nsecurity:\n  - basicAuth: []\npaths:\n  /parse:\n    post:\n      tags:\n        - \"Sentence\"\n      summary: \"Parse a sentence\"\n      requestBody:\n        description: \"Query to be sent with user ID\"\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/definitions/ParseQuery'\n      responses:\n        200:\n          content:\n            application/json:\n              description: \"successful operation\"\n              schema:\n                $ref: \"#/definitions/SentenceReport\"\n\n  /applications:\n    get:\n      tags:\n        - \"Application\"\n      summary: \"Retrieve all applications of the namespace\"\n      consumes:\n        - \"application/json\"\n      produces:\n        - \"application/json\"\n      responses:\n        200:\n          description: \"successful operation\"\n          content:\n            application/json:\n              schema:\n                type: \"array\"\n                items:\n                  $ref: \"#/definitions/ApplicationWithIntents\"\n  /application/{applicationId}:\n    get:\n      tags:\n        - \"Application\"\n      summary: \"Retrieve application that matches given identifier\"\n      consumes:\n        - \"application/json\"\n      produces:\n        - \"application/json\"\n      parameters:\n        - name: \"applicationId\"\n          in: \"path\"\n          description: \"Application identifier\"\n          required: true\n          schema:\n            type: \"string\"\n      responses:\n        200:\n          content:\n            application/json:\n              description: \"successful operation\"\n              schema:\n                $ref: \"#/definitions/ApplicationWithIntents\"\n\n    delete:\n      tags:\n        - \"Application\"\n      summary: \"Delete application that matches given identifier\"\n      consumes:\n        - \"application/json\"\n      produces:\n        - \"application/json\"\n      parameters:\n        - name: \"applicationId\"\n          in: \"path\"\n          description: \"Application identifier\"\n          required: true\n          schema:\n            type: \"string\"\n      responses:\n        200:\n          content:\n            application/json:\n              description: \"successful operation\"\n\n  /application:\n    post:\n      tags:\n        - \"Application\"\n      summary: \"Create or update application\"\n      consumes:\n        - \"application/json\"\n      produces:\n        - \"application/json\"\n      parameters:\n        - in: \"body\"\n          name: \"body\"\n          description: \"Application content\"\n          required: true\n          schema:\n            $ref: \"#/definitions/ApplicationWithIntents\"\n      responses:\n        200:\n          content:\n            application/json:\n              description: \"successful operation\"\n              schema:\n                $ref: \"#/definitions/ApplicationWithIntents\"\n\n  /application/dump/{applicationId}:\n    get:\n      tags:\n        - \"Application\"\n      summary: \"Retrieve full application dump that matches given identifier\"\n      consumes:\n        - \"application/json\"\n      produces:\n        - \"application/json\"\n      parameters:\n        - name: \"applicationId\"\n          in: \"path\"\n          description: \"Application identifier\"\n          required: true\n          schema:\n            type: \"string\"\n      responses:\n        200:\n          content:\n            application/json:\n              description: \"successful operation\"\n              schema:\n                type: \"object\"\n\n  /application/{applicationId}/intent/{intentId}:\n    delete:\n      tags:\n        - \"Application\"\n      summary: \"Remove an intent from an application model. If the intent does not belong to an other model, delete the intent.\"\n      consumes:\n        - \"application/json\"\n      produces:\n        - \"application/json\"\n      parameters:\n        - name: \"applicationId\"\n          in: \"path\"\n          description: \"Application identifier\"\n          required: true\n          schema:\n            type: \"string\"\n        - name: \"intentId\"\n          in: \"path\"\n          description: \"Intent identifier\"\n          required: true\n          schema:\n            type: \"string\"\n      responses:\n        200:\n          content:\n            application/json:\n              description: \"successful operation\"\n              schema:\n                type: \"object\"\n\n  /application/{applicationId}/intent/{intentId}/entity/{entityType}/{role}:\n    delete:\n      tags:\n        - \"Application\"\n      summary: \"Remove a entity role from intent of an application model.\"\n      consumes:\n        - \"application/json\"\n      produces:\n        - \"application/json\"\n      parameters:\n        - name: \"applicationId\"\n          in: \"path\"\n          description: \"Application identifier\"\n          required: true\n          schema:\n            type: \"string\"\n        - name: \"intentId\"\n          in: \"path\"\n          description: \"Intent identifier\"\n          required: true\n          schema:\n            type: \"string\"\n        - name: \"entityType\"\n          in: \"path\"\n          description: \"Entity type qualified name\"\n          required: true\n          schema:\n            type: \"string\"\n        - name: \"role\"\n          in: \"path\"\n          description: \"Role of the entity to remove\"\n          required: true\n          schema:\n            type: \"string\"\n      responses:\n        200:\n          content:\n            application/json:\n              description: \"successful operation\"\n              schema:\n                type: \"object\"\n\n  /sentences/dump/{dumpType}/{applicationId}/{intent}/{locale}:\n    get:\n      tags:\n        - \"Sentence\"\n      summary: \"Retrieve qualified sentences dump that matches given application identifier, intent and locale\"\n      consumes:\n        - \"application/json\"\n      produces:\n        - \"application/json\"\n      parameters:\n        - name: \"dumpType\"\n          in: \"path\"\n          description: \"Dump type\"\n          required: true\n          schema:\n            type: \"string\"\n            enum: [full, obfuscated]\n        - name: \"applicationId\"\n          in: \"path\"\n          description: \"Application identifier\"\n          required: true\n          schema:\n            type: \"string\"\n        - name: \"intent\"\n          in: \"path\"\n          description: \"Intent name\"\n          required: false\n          schema:\n            type: \"string\"\n        - name: \"locale\"\n          in: \"path\"\n          description: \"Locale\"\n          required: false\n          schema:\n            type: \"string\"\n      responses:\n        200:\n          content:\n            application/json:\n              description: \"successful operation\"\n              schema:\n                type: \"object\"\n\n  /dump/application:\n    post:\n      tags:\n        - \"Dump\"\n      summary: \"Upload a complete application model\"\n      requestBody:\n        content:\n          multipart/form-data:\n            schema:\n              type: object\n              properties:\n                fileName:\n                  type: string\n                  format: binary\n      responses:\n        200:\n          content:\n            application/json:\n              description: \"successful operation\"\n  /dump/application/{name}:\n    post:\n      tags:\n        - \"Dump\"\n      summary: \"Upload complete application dump and set specified name as application name\"\n      requestBody:\n        content:\n          multipart/form-data:\n            schema:\n              type: object\n              properties:\n                fileName:\n                  type: string\n                  format: binary\n      parameters:\n        - name: \"name\"\n          in: \"path\"\n          description: \"Application name\"\n          required: true\n          schema:\n            type: \"string\"\n      responses:\n        200:\n          content:\n            application/json:\n              description: \"successful operation\"\n\n  /dump/sentences:\n    post:\n      tags:\n        - \"Dump\"\n      summary: \"Upload a complete application model [sentences dump format]\"\n      requestBody:\n        content:\n          multipart/form-data:\n            schema:\n              type: object\n              properties:\n                fileName:\n                  type: string\n                  format: binary\n      responses:\n        200:\n          content:\n            application/json:\n              description: \"successful operation\"\n  /dump/sentences/{name}:\n    post:\n      tags:\n        - \"Dump\"\n      summary: \"Upload complete application dump [sentences dump format] and set specified name as application name\"\n      requestBody:\n        content:\n          multipart/form-data:\n            schema:\n              type: object\n              properties:\n                fileName:\n                  type: string\n                  format: binary\n      parameters:\n        - name: \"name\"\n          in: \"path\"\n          description: \"Application name\"\n          required: true\n          schema:\n            type: \"string\"\n      responses:\n        200:\n          content:\n            application/json:\n              description: \"successful operation\"\n\ndefinitions:\n  ParseQuery:\n    type: \"object\"\n    description: \"A sentence-parse query\"\n    required: [ \"query\" ]\n    properties:\n      namespace:\n        type: \"string\"\n        description: \"The application namespace\"\n      applicationName:\n        type: \"string\"\n        description: \"The application name\"\n      language:\n        type: \"string\"\n        description: \"The sentence language or locale\"\n      query:\n        type: \"string\"\n        description: \"The sentence\"\n      checkExistingQuery:\n        type: \"boolean\"\n        description: \"Check already-qualified sentences\"\n      state:\n        type: \"string\"\n        description: \"The sentence state\"\n    example:\n      namespace: \"app\"\n      applicationName: \"new_assistant\"\n      language: \"fr\"\n      query: \"Bonjour\"\n      checkExistingQuery: true\n      state: null\n\n  ClassifiedEntityReport:\n    type: \"object\"\n    description: \"An entity classification report\"\n    properties:\n      type:\n        type: \"string\"\n        description: \"The entity type\"\n      role:\n        type: \"string\"\n        description: \"The entity role\"\n      start:\n        type: \"integer\"\n        description: \"The entity start index in sentence\"\n      end:\n        type: \"integer\"\n        description: \"The entity end index in sentence\"\n      value:\n        type: \"string\"\n        description: \"The entity value\"\n      probability:\n        type: \"number\"\n        format: \"double\"\n        description: \"The entity probability score\"\n      subEntities:\n        type: \"array\"\n        description: \"Sub-entities\"\n        items:\n          $ref: \"#/definitions/ClassifiedEntityReport\"\n\n  ClassificationReport:\n    type: \"object\"\n    description: \"A sentence classification report\"\n    properties:\n      intentId:\n        type: \"string\"\n        description: \"The intent ID\"\n      entities:\n        type: \"array\"\n        description: \"The classified entities\"\n        items:\n          $ref: \"#/definitions/ClassifiedEntityReport\"\n      notRetainedEntities:\n        type: \"array\"\n        description: \"The entities found but not retained\"\n        items:\n          $ref: \"#/definitions/ClassifiedEntityReport\"\n      intentProbability:\n        type: \"number\"\n        format: \"double\"\n        description: \"The intent probability score\"\n      entitiesProbability:\n        type: \"number\"\n        format: \"double\"\n        description: \"The entities average probability score\"\n      otherIntentsProbabilities:\n        type: object\n        description: \"Other intents with significant probabilities\"\n        additionalProperties:\n          type: \"number\"\n      lastUsage:\n        type: \"string\"\n        format: \"date-time\"\n        description: \"The sentence last use instant\"\n      usageCount:\n        type: \"string\"\n        description: \"The sentence uses count\"\n      unknownCount:\n        type: \"string\"\n        description: \"The unknown count for the sentence\"\n\n  SentenceReport:\n    type: \"object\"\n    required: [ \"text\", \"intentNamespace\", \"language\", \"retainedQuery\" ]\n    properties:\n      text:\n        type: \"string\"\n        description: \"The sentence\"\n      language:\n        type: \"string\"\n        description: \"The sentence language\"\n      applicationId:\n        type: \"string\"\n        description: \"The application ID\"\n      creationDate:\n        type: \"string\"\n        format: \"date-time\"\n        description: \"The sentence creation date\"\n      updateDate:\n        type: \"string\"\n        format: \"date-time\"\n        description: \"The sentence update date\"\n      status:\n        type: \"string\"\n        description: \"The sentence status\"\n      classification:\n        $ref: \"#/definitions/ClassificationReport\"\n        description: \"The sentence classification (intents and entities)\"\n      key:\n        type: \"string\"\n        description: \"The key\"\n      forReview:\n        type: \"boolean\"\n        description: \"Is the sentence waiting for classification review?\"\n      reviewComment:\n        type: \"string\"\n        description: \"The review comment\"\n      qualifier:\n        type: \"string\"\n        description: \"The sentence qualifier (user)\"\n\n  ApplicationWithIntents:\n    type: \"object\"\n    description: \"An application with supported intents\"\n    required: [ \"_id\", \"name\", \"namespace\", \"intents\", \"supportedLocales\", \"nlpEngineType\" ]\n    properties:\n      _id:\n        type: \"string\"\n        description: \"The id of the app\"\n      namespace:\n        type: \"string\"\n        description: \"The namespace of the application\"\n      applicationName:\n        type: \"string\"\n        description: \"The name of the application\"\n      intents:\n        type: \"array\"\n        description: \"The intent definitions of the application\"\n        items:\n          $ref: \"#/definitions/IntentDefinition\"\n      supportedLocales:\n        type: \"array\"\n        description: \"The locales supported by the application\"\n        items:\n          type: \"string\"\n      nlpEngineType:\n        type: \"object\"\n        description: \"The current nlp engine used to build the model\"\n        properties:\n          name:\n            type: \"string\"\n            description: \"he unique name of nlp engine\"\n      mergeEngineTypes:\n        type: \"boolean\"\n        description: \"Is intent entity model and standalone entity models are used to find the better values ?\"\n      useEntityModels:\n        type: \"boolean\"\n        description: \"Is standalone entity models used? Useful for entity disambiguation\"\n      supportSubEntities:\n        type: \"boolean\"\n        description: \"Does this app support sub entities ?\"\n\n  IntentDefinition:\n    type: \"object\"\n    description: \"An intent definition\"\n    required: [ \"name\", \"namespace\", \"applications\", \"entities\" ]\n    properties:\n      name:\n        type: \"string\"\n        description: \"The name of the intent\"\n      namespace:\n        type: \"string\"\n        description: \"The namespace of the intent\"\n      category:\n        type: \"string\"\n        description: \"The category of the intent\"\n      _id:\n        type: \"string\"\n        description: \"Technical identifier\"\n      applications:\n        type: \"array\"\n        description: \"The application ids using this intent\"\n        items:\n          type: \"string\"\n      entities:\n        type: \"array\"\n        description: \"The entity definitions of the intent\"\n        items:\n          $ref: \"#/definitions/EntityDefinition\"\n      mandatoryStates:\n        type: \"array\"\n        description: \"The optional mandatory states\"\n        items:\n          type: \"string\"\n      sharedIntents:\n        type: \"array\"\n        description: \"The optional shared intents names\"\n        items:\n          type: \"string\"\n\n  EntityDefinition:\n    type: \"object\"\n    description: \"An entity definition\"\n    required: [ \"entityTypeName\", \"role\"]\n    properties:\n      entityTypeName:\n        type: \"string\"\n        description: \"The qualified name of the entity type\"\n      role:\n        type: \"string\"\n        description: \"The role\"\n      atStartOfDay:\n        type: \"boolean\"\n        description: \"To evaluate time for entity date types\"\n\nexternalDocs:\n  description: \"Tock Home\"\n  url: \"https://doc.tock.ai/\""
		}
	},
	"Error": "parse: parse spec: parse operations: paths: /sentences/dump/{dumpType}/{applicationId}/{intent}/{locale}: get: parameters: parse parameter \"intent\": path parameters must be required"
}