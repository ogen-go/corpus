{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/soracom/soracom-cli"
		},
		"file": {
			"name": "soracom-api.en.yaml",
			"size": 0,
			"path": "soracom/generated/cmd/assets/soracom-api.en.yaml",
			"byteSize": 498248,
			"content": "openapi: 3.0.0\ninfo:\n  description: SORACOM API v1\n  title: SORACOM API\n  version: VERSION_PLACEHOLDER\nservers:\n- description: Japan coverage production API\n  url: https://api.soracom.io/v1\n- description: Global coverage production API\n  url: https://g.api.soracom.io/v1\npaths:\n  /audit_logs/api:\n    get:\n      description: Retrieve audit logs for API calls.\n      operationId: getApiAuditLogs\n      parameters:\n      - description: Filter item for audit log retrieval by API kind (e.g. `/v1/auth`).\n        in: query\n        name: api_kind\n        required: false\n        schema:\n          type: string\n      - description: Start time for the log search range (unixtime milliseconds).\n        in: query\n        name: from_epoch_ms\n        required: false\n        schema:\n          type: integer\n      - description: End time for the log search range (unixtime milliseconds).\n        in: query\n        name: to_epoch_ms\n        required: false\n        schema:\n          type: integer\n      - description: Maximum number of log entries to retrieve.\n        in: query\n        name: limit\n        required: false\n        schema:\n          type: integer\n      - description: The value of `requestedTimeEpochMs` in the last log entry retrieved\n          in the previous page. By specifying this parameter, you can continue to\n          retrieve the list from the next page onward.\n        in: query\n        name: last_evaluated_key\n        required: false\n        schema:\n          type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: '#/components/schemas/APIAuditLogEntry'\n                type: array\n          description: A list of API audit log entries.\n      security:\n      - api_key: []\n        api_token: []\n      summary: Retrieve audit logs for API calls\n      tags:\n      - AuditLog\n      x-soracom-cli:\n      - audit-logs api get\n      x-soracom-cli-pagination:\n        request:\n          param: last_evaluated_key\n        response:\n          header: x-soracom-next-key\n  /audit_logs/napter:\n    get:\n      description: Retrieve audit logs for Napter.\n      operationId: getNapterAuditLogs\n      parameters:\n      - description: Type of the target resource to query Napter audit log entries.\n        in: query\n        name: resource_type\n        required: false\n        schema:\n          enum:\n          - Subscriber\n          type: string\n      - description: Identity of the target resource to query log entries.\n        in: query\n        name: resource_id\n        required: false\n        schema:\n          type: string\n      - description: Start time for the log search range (unixtime milliseconds).\n        in: query\n        name: from\n        required: false\n        schema:\n          type: integer\n      - description: End time for the log search range (unixtime milliseconds).\n        in: query\n        name: to\n        required: false\n        schema:\n          type: integer\n      - description: Maximum number of log entries to retrieve.\n        in: query\n        name: limit\n        required: false\n        schema:\n          type: integer\n      - description: The value of `time` in the last log entry retrieved in the previous\n          page. By specifying this parameter, you can continue to retrieve the list\n          from the next page onward.\n        in: query\n        name: last_evaluated_key\n        required: false\n        schema:\n          type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: '#/components/schemas/NapterAuditLogEntry'\n                type: array\n          description: A list of Napter audit log entries.\n      security:\n      - api_key: []\n        api_token: []\n      summary: Retrieve audit logs for Napter\n      tags:\n      - AuditLog\n      x-soracom-cli:\n      - audit-logs napter get\n      x-soracom-cli-pagination:\n        request:\n          param: last_evaluated_key\n        response:\n          header: x-soracom-next-key\n  /auth:\n    post:\n      description: Performs authentication to access to the SORACOM API. To perform\n        authentication by a root account, specify `email` and `password`. To perform\n        authentication by an AuthKey, specify `authKeyId` and `authKey`. To perform\n        authentication by a SAM user, specify `operatorId`, `userName` and `password`.\n        An API Key and an API Token will be included in the response if successful.\n        Specify the API Key and the API Token to requests afterwards\n      operationId: auth\n      requestBody:\n        content:\n          application/json:\n            examples:\n              To perform authentication by a SAM user:\n                value:\n                  operatorId: OPXXXXXXXXXX\n                  password: p@$$w0rd\n                  userName: SORACOMAPI\n              To perform authentication by a root account:\n                value:\n                  email: soracomapi@example.com\n                  password: p@$$w0rd\n              To perform authentication by an AuthKeyId and AuthKey:\n                value:\n                  authKey: secret-abcde12345fghij67890klmno12345pqrst67890uvwxy12345abcde67890fghi...\n                  authKeyId: keyId-abcde12345fghij67890klmno12345pq\n            schema:\n              $ref: '#/components/schemas/AuthRequest'\n        description: Authentication request.\n        required: true\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AuthResponse'\n          description: Authentication successful.\n        \"401\":\n          description: Authentication failed.\n      summary: Performs authentication to access to the SORACOM API.\n      tags:\n      - Auth\n      x-soracom-cli:\n      - auth\n  /auth/logout:\n    post:\n      description: Revoke the API key and API token that are used to call this API.\n        Once revoked, the API key and API token cannot be used to call the SORACOM\n        API, regardless of their expiration time. This API can be called regardless\n        of permission settings.\n      operationId: logout\n      responses:\n        \"204\":\n          description: Successfully revoked the API key and the API token.\n      security:\n      - api_key: []\n        api_token: []\n      summary: Revoke API key and API token to access to the SORACOM API.\n      tags:\n      - Auth\n      x-soracom-cli:\n      - logout\n  /auth/password_reset_token/issue:\n    post:\n      description: Generates a password reset token and send it to the operator's\n        mail address. After receiving the password reset token, call /v1/auth/password_reset_token/verify\n        API with the token to update operator's password.\n      operationId: issuePasswordResetToken\n      requestBody:\n        content:\n          application/json:\n            example:\n              email: soracomapi@example.com\n            schema:\n              $ref: '#/components/schemas/IssuePasswordResetTokenRequest'\n        description: email address\n        required: true\n      responses:\n        \"200\":\n          description: OK.\n        \"400\":\n          description: Invalid email address.\n      summary: Issues a password reset token for the operator.\n      tags:\n      - Auth\n      x-soracom-cli:\n      - auth issue-password-reset-token\n  /auth/password_reset_token/verify:\n    post:\n      description: Updates the operator's password if the password reset token is\n        verified.\n      operationId: verifyPasswordResetToken\n      requestBody:\n        content:\n          application/json:\n            example:\n              password: p@$$w0rd\n              token: abcde12345fghij67890klmno12345pqrst67890uvwxy12345abcde67890fghi...\n            schema:\n              $ref: '#/components/schemas/VerifyPasswordResetTokenRequest'\n        description: token, password\n        required: true\n      responses:\n        \"200\":\n          description: OK.\n        \"400\":\n          description: Invalid token.\n        \"404\":\n          description: Token expired.\n      summary: Verifies the password reset token and updates password.\n      tags:\n      - Auth\n      x-soracom-cli:\n      - auth verify-password-reset-token\n  /bills:\n    get:\n      description: Returns past billing history (after applied discounts such as free\n        tiers, etc., inclusive of tax). This API only returns the billing amounts\n        that have been finalized at the end of the month.\n      operationId: getBillingHistory\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GetBillingHistoryResponse'\n          description: OK.\n      security:\n      - api_key: []\n        api_token: []\n      summary: Get billing history.\n      tags:\n      - Billing\n      x-soracom-cli:\n      - bills list\n  /bills/{yyyyMM}:\n    get:\n      description: Returns the billing history for the specified month (after applied\n        discounts such as free tiers, etc., inclusive of tax). The amounts retrieved\n        using this API correspond to the values before the invoice was finalized.\n      operationId: getBilling\n      parameters:\n      - description: year and month\n        in: path\n        name: yyyyMM\n        required: true\n        schema:\n          type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/MonthlyBill'\n          description: OK.\n      security:\n      - api_key: []\n        api_token: []\n      summary: Get bill.\n      tags:\n      - Billing\n      x-soracom-cli:\n      - bills get\n  /bills/{yyyyMM}/daily:\n    get:\n      description: Returns detailed information of billing amounts per day for the\n        specified month. This API only returns the billing amounts that have been\n        finalized.\n      operationId: getBillingPerDay\n      parameters:\n      - description: year and month\n        in: path\n        name: yyyyMM\n        required: true\n        schema:\n          type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DailyBillResponse'\n          description: OK.\n      security:\n      - api_key: []\n        api_token: []\n      summary: Get bill per day.\n      tags:\n      - Billing\n      x-soracom-cli:\n      - bills get-daily\n  /bills/{yyyyMM}/export:\n    post:\n      description: Returns detailed information for the billing amounts for the specified\n        month. This detailed information includes billing amounts per day, subscriber,\n        and billing item.\n      operationId: exportBilling\n      parameters:\n      - description: yyyyMM\n        in: path\n        name: yyyyMM\n        required: true\n        schema:\n          type: string\n      - description: export_mode (async, sync)\n        in: query\n        name: export_mode\n        required: false\n        schema:\n          enum:\n          - async\n          - sync\n          type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/FileExportResponse'\n          description: OK.\n      security:\n      - api_key: []\n        api_token: []\n      summary: Output billing CSV file to S3.\n      tags:\n      - Billing\n      x-soracom-cli:\n      - bills export\n  /bills/latest:\n    get:\n      description: Returns the latest billing amounts after applied discounts such\n        as free tiers, etc. The amounts retrieved using this API correspond to the\n        values before the invoice was finalized.\n      operationId: getLatestBilling\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GetLatestBill'\n          description: OK\n      security:\n      - api_key: []\n        api_token: []\n      summary: Get latest bill.\n      tags:\n      - Billing\n      x-soracom-cli:\n      - bills get-latest\n  /bills/latest/export:\n    post:\n      description: Returns detailed information of the billing amounts for the latest\n        month. This detailed information includes billing amounts per day, subscriber,\n        and billing item. The amounts retrieved using this API correspond to the values\n        before the invoice was finalized.\n      operationId: exportLatestBilling\n      parameters:\n      - description: export_mode (async, sync)\n        in: query\n        name: export_mode\n        required: false\n        schema:\n          enum:\n          - async\n          - sync\n          type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/FileExportResponse'\n          description: OK.\n      security:\n      - api_key: []\n        api_token: []\n      summary: Export latest billing CSV file to S3.\n      tags:\n      - Billing\n      x-soracom-cli:\n      - bills export-latest\n  /cell_locations:\n    get:\n      description: Retrieves location information (latitude / longitude) for a cell\n        tower which is identified by Cell ID etc. Please specify MCC, MNC, LAC and\n        CID when the access radio technology is 3G. It is possible to retrieve location\n        information without CID, but the location information will be low accuracy.  For\n        LTE (4G), please specify MCC, MNC, TAC and ECID. As it is based on an open\n        database to convert cell information into location information, the location\n        information does not exist or might be incorrect.\n      operationId: getCellLocation\n      parameters:\n      - description: MCC - Mobile Country Code\n        in: query\n        name: mcc\n        required: true\n        schema:\n          type: string\n      - description: MNC - Mobile Network Code\n        in: query\n        name: mnc\n        required: true\n        schema:\n          type: string\n      - description: LAC - Location Area Code (for 3G)\n        in: query\n        name: lac\n        required: false\n        schema:\n          type: string\n      - description: CID - Cell ID (for 3G)\n        in: query\n        name: cid\n        required: false\n        schema:\n          type: string\n      - description: TAC - Tracking Area Code (for 4G)\n        in: query\n        name: tac\n        required: false\n        schema:\n          type: string\n      - description: ECID - Enhanced Cell ID (for 4G) - specify either `ecid` or `eci`\n        in: query\n        name: ecid\n        required: false\n        schema:\n          type: string\n      - description: ECID - Enhanced Cell ID (for 4G) - specify either `ecid` or `eci`\n        in: query\n        name: eci\n        required: false\n        schema:\n          type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CellLocation'\n          description: Location information for the cell tower\n        \"404\":\n          description: Location information is not found for the cell tower\n      security:\n      - api_key: []\n        api_token: []\n      summary: Get location information for a cell tower.\n      tags:\n      - CellLocation\n      x-soracom-cli:\n      - cell-locations get\n    post:\n      description: Retrieves a list of location information (latitude / longitude)\n        for multiple cell towers which are identified by Cell IDs etc.\n      operationId: batchGetCellLocations\n      requestBody:\n        content:\n          application/json:\n            schema:\n              items:\n                $ref: '#/components/schemas/CellIdentifier'\n              type: array\n        description: List of cell identifiers.\n        required: true\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: '#/components/schemas/CellLocation'\n                type: array\n          description: List of location information for the specified cell towers\n      security:\n      - api_key: []\n        api_token: []\n      summary: List location information for multiple cell towers.\n      tags:\n      - CellLocation\n      x-soracom-cli:\n      - cell-locations batch-get\n  /coupons:\n    get:\n      description: Returns a list of currently registered coupons.\n      operationId: listCoupons\n      responses:\n        \"200\":\n          content:\n            application/json;charset=UTF-8:\n              schema:\n                $ref: '#/components/schemas/ListCouponResponse'\n          description: OK.\n      security:\n      - api_key: []\n        api_token: []\n      summary: List coupons.\n      tags:\n      - Payment\n      x-soracom-cli:\n      - coupons list\n    post:\n      description: Creates a new coupon quotation. If the orderId is put in /confirm,\n        the order is complete.\n      operationId: createCouponQuotation\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/CreateEstimatedCouponRequest'\n        description: Coupon details\n        required: true\n      responses:\n        \"201\":\n          content:\n            application/json;charset=UTF-8:\n              schema:\n                $ref: '#/components/schemas/EstimatedCouponModel'\n          description: Created\n      security:\n      - api_key: []\n        api_token: []\n      summary: Create coupon quotation.\n      tags:\n      - Order\n      x-soracom-cli:\n      - coupons create\n  /coupons/{coupon_code}/register:\n    post:\n      description: Registers a coupon.\n      operationId: registerCoupon\n      parameters:\n      - description: Coupon code\n        in: path\n        name: coupon_code\n        required: true\n        schema:\n          type: string\n      responses:\n        \"200\":\n          content:\n            application/json;charset=UTF-8:\n              schema:\n                $ref: '#/components/schemas/CouponResponse'\n          description: OK.\n        \"400\":\n          description: The coupon code is invalid or the coupon code registration\n            limit has been reached.\n      security:\n      - api_key: []\n        api_token: []\n      summary: Register Coupon.\n      tags:\n      - Payment\n      x-soracom-cli:\n      - coupons register\n  /coupons/{order_id}/confirm:\n    put:\n      description: Performs a credit limit and confirms the order if no problems are\n        encountered.\n      operationId: confirmCouponOrder\n      parameters:\n      - description: order_id\n        in: path\n        name: order_id\n        required: true\n        schema:\n          type: string\n      responses:\n        \"200\":\n          content:\n            application/json;charset=UTF-8:\n              schema:\n                $ref: '#/components/schemas/CouponResponse'\n          description: OK.\n      security:\n      - api_key: []\n        api_token: []\n      summary: Confirm coupon order.\n      tags:\n      - Order\n      x-soracom-cli:\n      - coupons confirm\n  /credentials:\n    get:\n      description: Returns a list of credentials.\n      operationId: listCredentials\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: '#/components/schemas/CredentialsModel'\n                type: array\n          description: OK.\n      security:\n      - api_key: []\n        api_token: []\n      summary: List of credentials.\n      tags:\n      - Credential\n      x-soracom-cli:\n      - credentials list\n  /credentials/{credentials_id}:\n    delete:\n      description: Deletes a credential.\n      operationId: deleteCredential\n      parameters:\n      - description: Credentials ID\n        in: path\n        name: credentials_id\n        required: true\n        schema:\n          type: string\n      responses:\n        \"204\":\n          description: Deleted\n        \"404\":\n          description: Not Found\n      security:\n      - api_key: []\n        api_token: []\n      summary: Delete a credential.\n      tags:\n      - Credential\n      x-soracom-cli:\n      - credentials delete\n    post:\n      description: Creates a new credential.\n      operationId: createCredential\n      parameters:\n      - description: credentials_id\n        in: path\n        name: credentials_id\n        required: true\n        schema:\n          type: string\n      requestBody:\n        content:\n          application/json;charset=UTF-8:\n            examples:\n              API Token credentials:\n                $ref: '#/components/examples/APITokenCredentials'\n              AWS IAM Role credentials:\n                $ref: '#/components/examples/IAMRoleCredentials'\n              AWS credentials:\n                $ref: '#/components/examples/AWSCredentials'\n              Asteria Platio credentials:\n                $ref: '#/components/examples/InfoteriaPlatioCredentials'\n              Azure IoT credentials:\n                $ref: '#/components/examples/AzureIoTCredentials'\n              Azure credentials:\n                $ref: '#/components/examples/AzureCredentials'\n              Esri Japan ArcGIS Online credentials:\n                $ref: '#/components/examples/EsrijCredentials'\n              Google Cloud IoT Core credentials:\n                $ref: '#/components/examples/GoogleIoTCredentials'\n              Google Service Account (JSON):\n                $ref: '#/components/examples/GoogleServiceAccountJson'\n              Kii Thing-IF credentials:\n                $ref: '#/components/examples/KiiThingifCredentials'\n              LANDLOG credentials:\n                $ref: '#/components/examples/LandlogCredentials'\n              OPTiM Cloud IoT OS credentials:\n                $ref: '#/components/examples/OptimCloudCredentials'\n              Pre-Shared Key:\n                $ref: '#/components/examples/PreSharedKey'\n              PubNub credentials:\n                $ref: '#/components/examples/PubnubCredentials'\n              SensorCorpus credentials:\n                $ref: '#/components/examples/SensorcorpusCredentials'\n              Username password credentials:\n                $ref: '#/components/examples/UsernamePasswordCredentials'\n              Watson IoT credentials:\n                $ref: '#/components/examples/WatsonIoTCredentials'\n              WingArc1st MotionBoard credentials:\n                $ref: '#/components/examples/MotionboardCredentials'\n              X.509 certificate:\n                $ref: '#/components/examples/X509Certificate'\n              YE DIGITAL MMCloud credentials:\n                $ref: '#/components/examples/MmcloudCredentials'\n              mockmock DataRecorder credentials:\n                $ref: '#/components/examples/MockmockDatarecorderCredentials'\n            schema:\n              $ref: '#/components/schemas/CreateAndUpdateCredentialsModel'\n        description: credentials\n        required: true\n      responses:\n        \"201\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CredentialsModel'\n          description: Created\n      security:\n      - api_key: []\n        api_token: []\n      summary: Create a credential.\n      tags:\n      - Credential\n      x-soracom-cli:\n      - credentials create\n    put:\n      description: Updates a credential.\n      operationId: updateCredential\n      parameters:\n      - description: credentials_id\n        in: path\n        name: credentials_id\n        required: true\n        schema:\n          type: string\n      requestBody:\n        content:\n          application/json;charset=UTF-8:\n            schema:\n              $ref: '#/components/schemas/CreateAndUpdateCredentialsModel'\n        description: credentials\n        required: true\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CredentialsModel'\n          description: OK.\n        \"400\":\n          description: There was an error in the request or the specified token has\n            already expired. (In the latter case, you will need to use the /auth API\n            to do authentication once again.)\n      security:\n      - api_key: []\n        api_token: []\n      summary: Update a credential.\n      tags:\n      - Credential\n      x-soracom-cli:\n      - credentials update\n  /data/{resource_type}/{resource_id}:\n    get:\n      description: Returns a list of data entries sent from a resource that match\n        certain criteria. If the total number of entries does not fit in one page,\n        a URL for accessing the next page is returned in the 'Link' header of the\n        response.\n      operationId: getDataEntries\n      parameters:\n      - description: Type of data source resource\n        in: path\n        name: resource_type\n        required: true\n        schema:\n          enum:\n          - Subscriber\n          - LoraDevice\n          - SubscriberIdentityModule\n          - SigfoxDevice\n          - Device\n          type: string\n      - description: ID of data source resource\n        in: path\n        name: resource_id\n        required: true\n        schema:\n          type: string\n      - description: Start time for the data entries search range (unixtime in milliseconds).\n        in: query\n        name: from\n        required: false\n        schema:\n          type: integer\n      - description: End time for the data entries search range (unixtime in milliseconds).\n        in: query\n        name: to\n        required: false\n        schema:\n          type: integer\n      - description: Sort order of the data entries. Either descending (latest data\n          entry first) or ascending (oldest data entry first).\n        in: query\n        name: sort\n        required: false\n        schema:\n          default: desc\n          enum:\n          - desc\n          - asc\n          type: string\n      - description: Maximum number of data entries to retrieve.\n        in: query\n        name: limit\n        required: false\n        schema:\n          type: integer\n      - description: The value of `time` in the last log entry retrieved in the previous\n          page. By specifying this parameter, you can continue to retrieve the list\n          from the next page onward.\n        in: query\n        name: last_evaluated_key\n        required: false\n        schema:\n          type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: '#/components/schemas/DataEntry'\n                type: array\n          description: A list of data entries.\n      security:\n      - api_key: []\n        api_token: []\n      summary: Get data sent from a resource.\n      tags:\n      - DataEntry\n      x-soracom-cli:\n      - data get-entries\n      x-soracom-cli-pagination:\n        request:\n          param: last_evaluated_key\n        response:\n          header: x-soracom-next-key\n  /data/{resource_type}/{resource_id}/{time}:\n    delete:\n      description: Deletes a data entry identified with resource ID and timestamp\n      operationId: deleteDataEntry\n      parameters:\n      - description: Type of data source resource\n        in: path\n        name: resource_type\n        required: true\n        schema:\n          enum:\n          - Subscriber\n          - LoraDevice\n          - SubscriberIdentityModule\n          - SigfoxDevice\n          - Device\n          type: string\n      - description: ID of data source resource\n        in: path\n        name: resource_id\n        required: true\n        schema:\n          type: string\n      - description: Timestamp of the target data entry to delete (unixtime in milliseconds).\n        in: path\n        name: time\n        required: true\n        schema:\n          type: integer\n      responses:\n        \"204\":\n          description: The data entry has been successfully deleted\n      security:\n      - api_key: []\n        api_token: []\n      summary: Deletes a data entry\n      tags:\n      - DataEntry\n      x-soracom-cli:\n      - data delete-entry\n    get:\n      description: Gets a data entry identified with resource ID and timestamp\n      operationId: getDataEntry\n      parameters:\n      - description: Type of data source resource\n        in: path\n        name: resource_type\n        required: true\n        schema:\n          enum:\n          - Subscriber\n          - LoraDevice\n          - SubscriberIdentityModule\n          - SigfoxDevice\n          - Device\n          type: string\n      - description: ID of data source resource\n        in: path\n        name: resource_id\n        required: true\n        schema:\n          type: string\n      - description: Timestamp of the target data entry to get (unixtime in milliseconds).\n        in: path\n        name: time\n        required: true\n        schema:\n          type: integer\n      responses:\n        \"200\":\n          description: The data entry specified with resource ID and timestamp\n        \"404\":\n          description: No such entry found\n      security:\n      - api_key: []\n        api_token: []\n      summary: Gets a data entry\n      tags:\n      - DataEntry\n      x-soracom-cli:\n      - data get-entry\n  /data/resources:\n    get:\n      description: Returns a list of data source resources that have sent data from\n        resources that belong to the operator. If the total number of entries does\n        not fit in one page, a URL for accessing the next page is returned in the\n        'Link' header of the response.\n      operationId: listDataSourceResources\n      parameters:\n      - description: Type of data source resource\n        in: query\n        name: resource_type\n        required: false\n        schema:\n          enum:\n          - Subscriber\n          - LoraDevice\n          - SubscriberIdentityModule\n          - SigfoxDevice\n          - Device\n          type: string\n      - description: Maximum number of data entries to retrieve.\n        in: query\n        name: limit\n        required: false\n        schema:\n          type: integer\n      - description: The value of `resourceId` in the last log entry retrieved in\n          the previous page. By specifying this parameter, you can continue to retrieve\n          the list from the next page onward.\n        in: query\n        name: last_evaluated_key\n        required: false\n        schema:\n          type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: '#/components/schemas/DataSourceResourceMetadata'\n                type: array\n          description: A list of data source resources.\n      security:\n      - api_key: []\n        api_token: []\n      summary: Get the list of data source resources\n      tags:\n      - DataEntry\n      x-soracom-cli:\n      - data list-source-resources\n      x-soracom-cli-pagination:\n        request:\n          param: last_evaluated_key\n        response:\n          header: x-soracom-next-key\n  /device_object_models:\n    get:\n      description: Returns a list of device object models\n      operationId: listDeviceObjectModels\n      parameters:\n      - description: ID of the last device object model in the previous page\n        in: query\n        name: last_evaluated_key\n        required: false\n        schema:\n          type: string\n      - description: Max number of device object models in a response\n        in: query\n        name: limit\n        required: false\n        schema:\n          default: -1\n          format: int32\n          type: integer\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: '#/components/schemas/DeviceObjectModel'\n                type: array\n          description: List of device object models\n      security:\n      - api_key: []\n        api_token: []\n      summary: Returns a list of device object models\n      tags:\n      - DeviceObjectModel\n      x-soracom-cli:\n      - devices list-object-models\n      x-soracom-cli-pagination:\n        request:\n          param: last_evaluated_key\n        response:\n          header: x-soracom-next-key\n    post:\n      description: Creates a new device object model\n      operationId: createDeviceObjectModel\n      requestBody:\n        $ref: '#/components/requestBodies/DeviceObjectModel'\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DeviceObjectModel'\n          description: Device object model created\n        \"400\":\n          description: Failed to parse device object model definition\n      security:\n      - api_key: []\n        api_token: []\n      summary: Creates a new device object model\n      tags:\n      - DeviceObjectModel\n      x-soracom-cli:\n      - devices create-object-model\n  /device_object_models/{model_id}:\n    delete:\n      description: Deletes a device object model\n      operationId: deleteDeviceObjectModel\n      parameters:\n      - description: Device object model ID\n        in: path\n        name: model_id\n        required: true\n        schema:\n          type: string\n      responses:\n        \"204\":\n          description: Successfully deleted\n        \"404\":\n          description: No such device object model found\n      security:\n      - api_key: []\n        api_token: []\n      summary: Deletes a device object model\n      tags:\n      - DeviceObjectModel\n      x-soracom-cli:\n      - devices delete-object-model\n    get:\n      description: Gets a device object model\n      operationId: getDeviceObjectModel\n      parameters:\n      - description: Device object model ID\n        in: path\n        name: model_id\n        required: true\n        schema:\n          type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DeviceObjectModel'\n          description: Device object model\n        \"404\":\n          description: No such device object model found\n      security:\n      - api_key: []\n        api_token: []\n      summary: Gets a device object model\n      tags:\n      - DeviceObjectModel\n      x-soracom-cli:\n      - devices get-object-model\n    post:\n      description: Updates a device object model\n      operationId: updateDeviceObjectModel\n      parameters:\n      - description: Device object model ID\n        in: path\n        name: model_id\n        required: true\n        schema:\n          type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/DeviceObjectModel'\n          application/xml:\n            schema:\n              $ref: '#/components/schemas/DeviceObjectModel'\n        description: Device object model definition in either XML or JSON format.\n        required: true\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DeviceObjectModel'\n          description: Device object model updated\n        \"400\":\n          description: Failed to parse device object model definition\n        \"404\":\n          description: No such device object model found\n      security:\n      - api_key: []\n        api_token: []\n      summary: Updates a device object model\n      tags:\n      - DeviceObjectModel\n      x-soracom-cli:\n      - devices update-object-model\n  /device_object_models/{model_id}/set_scope:\n    post:\n      description: Sets scope for a device object model\n      operationId: setDeviceObjectModelScope\n      parameters:\n      - description: Target device object model ID\n        in: path\n        name: model_id\n        required: true\n        schema:\n          type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/SetDeviceObjectModelScopeRequest'\n        description: Scope value that is applied to the target device object model\n        required: true\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DeviceObjectModel'\n          description: Scope is set to the target device object model\n        \"404\":\n          description: No such device object model found\n      security:\n      - api_key: []\n        api_token: []\n      summary: Sets scope for a device object model\n      tags:\n      - DeviceObjectModel\n      x-soracom-cli:\n      - devices set-object-model-scope\n  /devices:\n    get:\n      description: Returns a list of Devices\n      operationId: listDevices\n      parameters:\n      - description: Tag name\n        in: query\n        name: tag_name\n        required: false\n        schema:\n          type: string\n      - description: Tag value\n        in: query\n        name: tag_value\n        required: false\n        schema:\n          type: string\n      - description: Tag value match mode (exact | prefix)\n        in: query\n        name: tag_value_match_mode\n        required: false\n        schema:\n          type: string\n      - description: ID of the last Device in the previous page\n        in: query\n        name: last_evaluated_key\n        required: false\n        schema:\n          type: string\n      - description: Max number of Devices in a response\n        in: query\n        name: limit\n        required: false\n        schema:\n          default: -1\n          format: int32\n          type: integer\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: '#/components/schemas/Device'\n                type: array\n          description: List of Devices\n      security:\n      - api_key: []\n        api_token: []\n      summary: Returns a list of Devices\n      tags:\n      - Device\n      x-soracom-cli:\n      - devices list\n      x-soracom-cli-pagination:\n        request:\n          param: last_evaluated_key\n        response:\n          header: x-soracom-next-key\n    post:\n      description: Creates a new Device\n      operationId: createDevice\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Device'\n        description: Device to create\n        required: true\n      responses:\n        \"201\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Device'\n          description: Device created\n      security:\n      - api_key: []\n        api_token: []\n      summary: Creates a new Device\n      tags:\n      - Device\n      x-soracom-cli:\n      - devices create\n  /devices/{device_id}:\n    delete:\n      description: Delete Device\n      operationId: deleteDevice\n      parameters:\n      - description: Device to delete\n        in: path\n        name: device_id\n        required: true\n        schema:\n          type: string\n      responses:\n        \"204\":\n          description: Device deleted\n        \"404\":\n          description: No such device found\n      security:\n      - api_key: []\n        api_token: []\n      summary: Delete Device\n      tags:\n      - Device\n      x-soracom-cli:\n      - devices delete\n    get:\n      description: Returns a Device identified by device ID\n      operationId: getDevice\n      parameters:\n      - description: Device ID\n        in: path\n        name: device_id\n        required: true\n        schema:\n          type: string\n      - description: Whether or not to add model information\n        in: query\n        name: model\n        required: false\n        schema:\n          default: false\n          type: boolean\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Device'\n          description: A Device identified by device ID\n        \"404\":\n          description: No such device found\n      security:\n      - api_key: []\n        api_token: []\n      summary: Returns a Device identified by device ID\n      tags:\n      - Device\n      x-soracom-cli:\n      - devices get\n  /devices/{device_id}/{object}/{instance}:\n    get:\n      description: Get resources under an object instance of a device\n      operationId: readDeviceResources\n      parameters:\n      - description: Target device\n        in: path\n        name: device_id\n        required: true\n        schema:\n          type: string\n      - description: Object ID\n        in: path\n        name: object\n        required: true\n        schema:\n          type: string\n      - description: Instance ID\n        in: path\n        name: instance\n        required: true\n        schema:\n          type: string\n      - description: Whether or not to add model information\n        in: query\n        name: model\n        required: false\n        schema:\n          default: false\n          type: boolean\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ObjectInstance'\n          description: Resources under the specified object instance\n        \"400\":\n          description: Object instance is not readable\n        \"404\":\n          description: Object instance is not found\n      security:\n      - api_key: []\n        api_token: []\n      summary: Get resources under an object instance of a device\n      tags:\n      - Device\n      x-soracom-cli:\n      - devices get-instance\n  /devices/{device_id}/{object}/{instance}/{resource}:\n    get:\n      description: Get the specified resource of a device\n      operationId: readDeviceResource\n      parameters:\n      - description: Target device\n        in: path\n        name: device_id\n        required: true\n        schema:\n          type: string\n      - description: Object ID\n        in: path\n        name: object\n        required: true\n        schema:\n          type: string\n      - description: Instance ID\n        in: path\n        name: instance\n        required: true\n        schema:\n          type: string\n      - description: Resource ID\n        in: path\n        name: resource\n        required: true\n        schema:\n          type: string\n      - description: Whether or not to add model information\n        in: query\n        name: model\n        required: false\n        schema:\n          default: false\n          type: boolean\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResourceInstance'\n          description: Resource\n        \"400\":\n          description: Resource is not readable\n        \"404\":\n          description: Resource is not found\n      security:\n      - api_key: []\n        api_token: []\n      summary: Get the specified resource of a device\n      tags:\n      - Device\n      x-soracom-cli:\n      - devices get-resource\n    put:\n      description: Write value to a resource of a device\n      operationId: writeDeviceResource\n      parameters:\n      - description: Target device\n        in: path\n        name: device_id\n        required: true\n        schema:\n          type: string\n      - description: Object ID\n        in: path\n        name: object\n        required: true\n        schema:\n          type: string\n      - description: Instance ID\n        in: path\n        name: instance\n        required: true\n        schema:\n          type: string\n      - description: Resource ID\n        in: path\n        name: resource\n        required: true\n        schema:\n          type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              properties:\n                value:\n                  oneOf:\n                  - type: string\n                  - type: number\n                  - type: boolean\n              type: object\n        description: Value(s) to write to the resource. This value accepts LwM2M basic\n          data types. You have to use the property name `values` (instead of `value`)\n          with an array value if the resource model is multiple-mode.\n        required: true\n      responses:\n        \"202\":\n          description: Updating resource is accepted\n        \"400\":\n          description: Specified Resource does not support write (Including case of\n            connection error such as offline device)\n        \"404\":\n          description: Resource is not found\n        \"500\":\n          description: Error response from the device. (It includes the case where\n            the LwM2M response message is error from the device, and the error message\n            from the device is included in the response 'message'.)\n      security:\n      - api_key: []\n        api_token: []\n      summary: Write value to a resource of a device\n      tags:\n      - Device\n      x-soracom-cli:\n      - devices put-resource\n  /devices/{device_id}/{object}/{instance}/{resource}/execute:\n    post:\n      description: Executes a resource of a device\n      operationId: executeDeviceResource\n      parameters:\n      - description: Target device\n        in: path\n        name: device_id\n        required: true\n        schema:\n          type: string\n      - description: Object ID\n        in: path\n        name: object\n        required: true\n        schema:\n          type: string\n      - description: Instance ID\n        in: path\n        name: instance\n        required: true\n        schema:\n          type: string\n      - description: Resource ID\n        in: path\n        name: resource\n        required: true\n        schema:\n          type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              properties:\n                value:\n                  type: string\n              type: object\n        description: Argument string when executing the resource\n      responses:\n        \"202\":\n          description: Execution request is accepted\n        \"400\":\n          description: Resource is not executable\n        \"404\":\n          description: Resource is not found\n      security:\n      - api_key: []\n        api_token: []\n      summary: Executes a resource of a device\n      tags:\n      - Device\n      x-soracom-cli:\n      - devices execute-resource\n  /devices/{device_id}/{object}/{instance}/{resource}/observe:\n    post:\n      description: Triggers observation of the specified resource of a device\n      operationId: observeDeviceResource\n      parameters:\n      - description: Target device\n        in: path\n        name: device_id\n        required: true\n        schema:\n          type: string\n      - description: Object ID\n        in: path\n        name: object\n        required: true\n        schema:\n          type: string\n      - description: Instance ID\n        in: path\n        name: instance\n        required: true\n        schema:\n          type: string\n      - description: Resource ID\n        in: path\n        name: resource\n        required: true\n        schema:\n          type: string\n      - description: Whether or not to add model information\n        in: query\n        name: model\n        required: false\n        schema:\n          default: false\n          type: boolean\n      responses:\n        \"202\":\n          description: Observation started.\n        \"400\":\n          description: Resource is not readable\n        \"404\":\n          description: Resource is not found\n      security:\n      - api_key: []\n        api_token: []\n      summary: Triggers observation of the specified resource of a device\n      tags:\n      - Device\n      x-soracom-cli:\n      - devices observe-resource\n  /devices/{device_id}/{object}/{instance}/{resource}/unobserve:\n    post:\n      description: Stops observation of a resource of a device\n      operationId: unobserveDeviceResource\n      parameters:\n      - description: Target device\n        in: path\n        name: device_id\n        required: true\n        schema:\n          type: string\n      - description: Object ID\n        in: path\n        name: object\n        required: true\n        schema:\n          type: string\n      - description: Instance ID\n        in: path\n        name: instance\n        required: true\n        schema:\n          type: string\n      - description: Resource ID\n        in: path\n        name: resource\n        required: true\n        schema:\n          type: string\n      responses:\n        \"204\":\n          description: Observation cancelled\n        \"404\":\n          description: Resource is not found\n      security:\n      - api_key: []\n        api_token: []\n      summary: Stops observation of a resource of a device\n      tags:\n      - Device\n      x-soracom-cli:\n      - devices unobserve-resource\n  /devices/{device_id}/{object}/{instance}/observe:\n    post:\n      description: Triggers observation of resources under an object instance of a\n        device\n      operationId: observeDeviceResources\n      parameters:\n      - description: Target device\n        in: path\n        name: device_id\n        required: true\n        schema:\n          type: string\n      - description: Object ID\n        in: path\n        name: object\n        required: true\n        schema:\n          type: string\n      - description: Instance ID\n        in: path\n        name: instance\n        required: true\n        schema:\n          type: string\n      - description: Whether or not to add model information\n        in: query\n        name: model\n        required: false\n        schema:\n          default: false\n          type: boolean\n      responses:\n        \"202\":\n          description: Observation started.\n        \"400\":\n          description: Resource is not readable\n        \"404\":\n          description: Resource is not found\n      security:\n      - api_key: []\n        api_token: []\n      summary: Triggers observation of resources under an object instance of a device\n      tags:\n      - Device\n      x-soracom-cli:\n      - devices observe-resources\n  /devices/{device_id}/{object}/{instance}/unobserve:\n    post:\n      description: Stops observation of resources under an object instance of a device\n      operationId: unobserveDeviceResources\n      parameters:\n      - description: Target device\n        in: path\n        name: device_id\n        required: true\n        schema:\n          type: string\n      - description: Object ID\n        in: path\n        name: object\n        required: true\n        schema:\n          type: string\n      - description: Instance ID\n        in: path\n        name: instance\n        required: true\n        schema:\n          type: string\n      responses:\n        \"204\":\n          description: Observation cancelled\n        \"404\":\n          description: Resource is not found\n      security:\n      - api_key: []\n        api_token: []\n      summary: Stops observation of resources under an object instance of a device\n      tags:\n      - Device\n      x-soracom-cli:\n      - devices unobserve-resources\n  /devices/{device_id}/data:\n    get:\n      description: Returns a list of data entries sent from a device that match certain\n        criteria. If the total number of entries does not fit in one page, a URL for\n        accessing the next page is returned in the 'Link' header of the response.\n      operationId: getDataFromDevice\n      parameters:\n      - description: Device ID of the target subscriber that generated data entries.\n        in: path\n        name: device_id\n        required: true\n        schema:\n          type: string\n      - description: Start time for the data entries search range (unixtime in milliseconds).\n        in: query\n        name: from\n        required: false\n        schema:\n          type: integer\n      - description: End time for the data entries search range (unixtime in milliseconds).\n        in: query\n        name: to\n        required: false\n        schema:\n          type: integer\n      - description: Sort order of the data entries. Either descending (latest data\n          entry first) or ascending (oldest data entry first).\n        in: query\n        name: sort\n        required: false\n        schema:\n          default: desc\n          enum:\n          - desc\n          - asc\n          type: string\n      - description: Maximum number of data entries to retrieve.\n        in: query\n        name: limit\n        required: false\n        schema:\n          type: integer\n      - description: The value of `time` in the last log entry retrieved in the previous\n          page. By specifying this parameter, you can continue to retrieve the list\n          from the next page onward.\n        in: query\n        name: last_evaluated_key\n        required: false\n        schema:\n          type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: '#/components/schemas/DataEntry'\n                type: array\n          description: A list of data entries.\n      security:\n      - api_key: []\n        api_token: []\n      summary: Get data sent from a device.\n      tags:\n      - Device\n      x-soracom-cli:\n      - devices get-data\n      x-soracom-cli-pagination:\n        request:\n          param: last_evaluated_key\n        response:\n          header: x-soracom-next-key\n  /devices/{device_id}/set_group:\n    post:\n      description: Lets a device join a group\n      operationId: setDeviceGroup\n      parameters:\n      - description: Device to update\n        in: path\n        name: device_id\n        required: true\n        schema:\n          type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              properties:\n                groupId:\n                  type: string\n              type: object\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Device'\n          description: Device updated\n        \"404\":\n          description: No such device found\n      security:\n      - api_key: []\n        api_token: []\n      summary: Lets a device join a group\n      tags:\n      - Device\n      x-soracom-cli:\n      - devices set-group\n  /devices/{device_id}/tags:\n    put:\n      description: Updates device tags\n      operationId: putDeviceTags\n      parameters:\n      - description: Device to update\n        in: path\n        name: device_id\n        required: true\n        schema:\n          type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              items:\n                $ref: '#/components/schemas/TagUpdateRequest'\n              type: array\n        description: Array of values for tags to be updated.\n        required: true\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Device'\n          description: Device updated\n        \"404\":\n          description: No such device found\n      security:\n      - api_key: []\n        api_token: []\n      summary: Updates device tags\n      tags:\n      - Device\n      x-soracom-cli:\n      - devices put-device-tags\n  /devices/{device_id}/tags/{tag_name}:\n    delete:\n      description: Delete device tag\n      operationId: deleteDeviceTag\n      parameters:\n      - description: Device to update\n        in: path\n        name: device_id\n        required: true\n        schema:\n          type: string\n      - description: Name of tag to delete\n        in: path\n        name: tag_name\n        required: true\n        schema:\n          type: string\n      responses:\n        \"204\":\n          description: Device tag deleted\n        \"404\":\n          description: No such device or tag found\n      security:\n      - api_key: []\n        api_token: []\n      summary: Delete device tag\n      tags:\n      - Device\n      x-soracom-cli:\n      - devices delete-device-tag\n  /devices/{device_id}/unset_group:\n    post:\n      description: Lets a device leave from a group\n      operationId: unsetDeviceGroup\n      parameters:\n      - description: Device to update\n        in: path\n        name: device_id\n        required: true\n        schema:\n          type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Device'\n          description: Device updated\n        \"404\":\n          description: No such device found\n      security:\n      - api_key: []\n        api_token: []\n      summary: Lets a device leave from a group\n      tags:\n      - Device\n      x-soracom-cli:\n      - devices unset-group\n  /diagnostics:\n    post:\n      description: Send a diagnostic request.\n      operationId: sendDiagnosticRequest\n      requestBody:\n        content:\n          application/json:\n            examples:\n              Diagnosing SORACOM Air for Cellular:\n                value:\n                  from: 1655251200000\n                  resouceType: sim\n                  resourceId: XXXXXXXXXXXXXXXXXXX\n                  service: Air\n                  to: 1655337600000\n            schema:\n              $ref: '#/components/schemas/DiagnosticRequest'\n        description: request\n        required: true\n      responses:\n        \"201\":\n          content:\n            application/json;charset=UTF-8:\n              schema:\n                items:\n                  $ref: '#/components/schemas/DiagnosticResponse'\n                type: array\n          description: Successfully accepted a diagnostic request.\n        \"400\":\n          description: Bad definitions among diagnostic time range (from/to queries).\n        \"404\":\n          description: The specified resource is not found.\n      security:\n      - api_key: []\n        api_token: []\n      summary: Send diagnostic request\n      tags:\n      - Diagnostic\n      x-soracom-cli:\n      - diagnostics send-request\n  /diagnostics/{diagnostic_id}:\n    get:\n      description: Returns a diagnostic.\n      operationId: getDiagnostic\n      parameters:\n      - description: The identifier of diagnostic request.\n        in: path\n        name: diagnostic_id\n        required: true\n        schema:\n          type: string\n      responses:\n        \"200\":\n          content:\n            application/json;charset=UTF-8:\n              schema:\n                $ref: '#/components/schemas/DiagnosticResponse'\n          description: OK.\n        \"404\":\n          description: The specified diagnostic_id is not found.\n      security:\n      - api_key: []\n        api_token: []\n      summary: Get diagnostic\n      tags:\n      - Diagnostic\n      x-soracom-cli:\n      - diagnostics get\n  /event_handlers:\n    get:\n      description: Returns a list of event handlers.\n      operationId: listEventHandlers\n      parameters:\n      - description: target\n        in: query\n        name: target\n        required: false\n        schema:\n          enum:\n          - operator\n          - imsi\n          - sim\n          - group\n          type: string\n      responses:\n        \"200\":\n          content:\n            application/json;charset=UTF-8:\n              schema:\n                items:\n                  $ref: '#/components/schemas/EventHandlerModel'\n                type: array\n          description: OK.\n      security:\n      - api_key: []\n        api_token: []\n      summary: List Event Handlers.\n      tags:\n      - EventHandler\n      x-soracom-cli:\n      - event-handlers list\n    post:\n      description: Creates a new event handler. Please see also https://developers.soracom.io/en/docs/air/event-handler/\n      operationId: createEventHandler\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/CreateEventHandlerRequest'\n        description: event handler settings\n        required: true\n      responses:\n        \"201\":\n          content:\n            application/json;charset=UTF-8:\n              schema:\n                $ref: '#/components/schemas/EventHandlerModel'\n          description: Created\n      security:\n      - api_key: []\n        api_token: []\n      summary: Create Event Handler.\n      tags:\n      - EventHandler\n      x-soracom-cli:\n      - event-handlers create\n  /event_handlers/{handler_id}:\n    delete:\n      description: Deletes the specified event handler.\n      operationId: deleteEventHandler\n      parameters:\n      - description: handler ID\n        in: path\n        name: handler_id\n        required: true\n        schema:\n          type: string\n      responses:\n        \"204\":\n          description: OK.\n        \"404\":\n          description: EventHandler not found.\n      security:\n      - api_key: []\n        api_token: []\n      summary: Delete Event Handler.\n      tags:\n      - EventHandler\n      x-soracom-cli:\n      - event-handlers delete\n    get:\n      description: Returns information about the specified event handler.\n      operationId: getEventHandler\n      parameters:\n      - description: handler ID\n        in: path\n        name: handler_id\n        required: true\n        schema:\n          type: string\n      responses:\n        \"200\":\n          content:\n            application/json;charset=UTF-8:\n              schema:\n                $ref: '#/components/schemas/EventHandlerModel'\n          description: OK.\n        \"404\":\n          description: Handler not found.\n      security:\n      - api_key: []\n        api_token: []\n      summary: Get Event Handler.\n      tags:\n      - EventHandler\n      x-soracom-cli:\n      - event-handlers get\n    put:\n      description: Updates the specified event handler. Please see also https://developers.soracom.io/en/docs/air/event-handler/\n      operationId: updateEventHandler\n      parameters:\n      - description: handler ID\n        in: path\n        name: handler_id\n        required: true\n        schema:\n          type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/UpdateEventHandlerRequest'\n        description: event handler settings\n        required: true\n      responses:\n        \"200\":\n          description: OK.\n        \"400\":\n          description: Invalid handlerId.\n      security:\n      - api_key: []\n        api_token: []\n      summary: Update Event Handler.\n      tags:\n      - EventHandler\n      x-soracom-cli:\n      - event-handlers update\n  /event_handlers/{handler_id}/subscribers/{imsi}/ignore:\n    delete:\n      description: Deletes the setting for ignoring the specified event handler of\n        the specified IMSI.\n      operationId: deleteIgnoreEventHandler\n      parameters:\n      - description: imsi\n        in: path\n        name: imsi\n        required: true\n        schema:\n          type: string\n      - description: handler_id\n        in: path\n        name: handler_id\n        required: true\n        schema:\n          type: string\n      responses:\n        \"204\":\n          description: OK\n        \"404\":\n          description: not found\n      security:\n      - api_key: []\n        api_token: []\n      summary: Delete Ignore Event Handler.\n      tags:\n      - EventHandler\n      x-soracom-cli:\n      - event-handlers unignore\n    post:\n      description: Adds a setting for ignoring the specified event handler of the\n        specified IMSI.\n      operationId: setIgnoreEventHandler\n      parameters:\n      - description: imsi\n        in: path\n        name: imsi\n        required: true\n        schema:\n          type: string\n      - description: handler_id\n        in: path\n        name: handler_id\n        required: true\n        schema:\n          type: string\n      responses:\n        \"200\":\n          description: OK\n      security:\n      - api_key: []\n        api_token: []\n      summary: Ignore Event Handler.\n      tags:\n      - EventHandler\n      x-soracom-cli:\n      - event-handlers ignore\n  /event_handlers/subscribers/{imsi}:\n    get:\n      description: Returns a list of event handlers related to the specified IMSI.\n      operationId: listEventHandlersBySubscriber\n      parameters:\n      - description: imsi\n        in: path\n        name: imsi\n        required: true\n        schema:\n          type: string\n      responses:\n        \"200\":\n          content:\n            application/json;charset=UTF-8:\n              schema:\n                items:\n                  $ref: '#/components/schemas/EventHandlerModel'\n                type: array\n          description: OK.\n        \"404\":\n          description: not found\n      security:\n      - api_key: []\n        api_token: []\n      summary: List Event Handlers related to Subscriber.\n      tags:\n      - EventHandler\n      x-soracom-cli:\n      - event-handlers list-for-subscriber\n  /files:\n    get:\n      description: Returns a list of file entries which beginnings of their file paths\n        are matched with the `prefix` query string in the ascending sorted UTF-8 bytes\n        order of their file paths. An empty list is returned if the prefix does not\n        match with any paths of file entries.\n      operationId: findFiles\n      parameters:\n      - description: Scope of the request\n        in: query\n        name: scope\n        required: true\n        schema:\n          enum:\n          - private\n          - public\n          type: string\n      - description: Prefix to match with file path\n        in: query\n        name: prefix\n        required: true\n        schema:\n          type: string\n      - description: Num of entries\n        in: query\n        name: limit\n        required: false\n        schema:\n          default: 10\n          type: integer\n      - description: The filePath of the last file entry retrieved on the current\n          page. By specifying this parameter, you can continue to retrieve the list\n          from the next file entry onward.\n        in: query\n        name: last_evaluated_key\n        required: false\n        schema:\n          type: string\n      responses:\n        \"200\":\n          content:\n            application/json;charset=UTF-8:\n              schema:\n                items:\n                  $ref: '#/components/schemas/FileEntry'\n                type: array\n          description: List of file entries found with query parameters, which can\n            be empty if the prefix does not match with any paths of file entries.\n        \"404\":\n          description: The specified scope does not exist\n      security:\n      - api_key: []\n        api_token: []\n      summary: Find files with prefix query parameter in the scope\n      tags:\n      - FileEntry\n      x-soracom-cli:\n      - files find\n      x-soracom-cli-pagination:\n        request:\n          param: last_evaluated_key\n        response:\n          header: x-soracom-next-key\n  /files/{scope}/{path}:\n    delete:\n      description: Deletes the specified file in the scope. Only `private` scope is\n        allowed for the operation.\n      operationId: deleteFile\n      parameters:\n      - description: Scope of the request\n        in: path\n        name: scope\n        required: true\n        schema:\n          default: private\n          enum:\n          - private\n          type: string\n      - description: Target path\n        in: path\n        name: path\n        required: true\n        schema:\n          type: string\n      responses:\n        \"204\":\n          description: The specified file is successfully deleted\n        \"404\":\n          description: No such file\n      security:\n      - api_key: []\n        api_token: []\n      summary: Delete specified file in the scope.\n      tags:\n      - FileEntry\n      x-soracom-cli:\n      - files delete\n    get:\n      description: Redirects the client to URL for the link to download the file specified\n        by the scope and the path. By issuing HTTP GET request to the link returned\n        in the response, the client is able to download the file.\n      operationId: getFile\n      parameters:\n      - description: Scope of the request\n        in: path\n        name: scope\n        required: true\n        schema:\n          default: private\n          enum:\n          - private\n          - public\n          type: string\n      - description: Target path\n        in: path\n        name: path\n        required: true\n        schema:\n          type: string\n      responses:\n        \"302\":\n          description: Client is redirected to the link to download the file.\n        \"404\":\n          description: No such file\n      security:\n      - api_key: []\n        api_token: []\n      summary: Download file specified by the path and the scope\n      tags:\n      - FileEntry\n      x-soracom-cli:\n      - files get\n    head:\n      description: Gets metadata of the file specified by the path and the scope.\n      operationId: getFileMetadata\n      parameters:\n      - description: Scope of the request\n        in: path\n        name: scope\n        required: true\n        schema:\n          default: private\n          enum:\n          - private\n          - public\n          type: string\n      - description: Target path\n        in: path\n        name: path\n        required: true\n        schema:\n          type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/FileEntry'\n          description: Metadata of the file\n        \"404\":\n          description: No such file\n      security:\n      - api_key: []\n        api_token: []\n      summary: Get the metadata of the file specified by the path and the scope\n      tags:\n      - FileEntry\n      x-soracom-cli:\n      - files get-metadata\n    put:\n      description: Uploads the file to the specified path in the scope. Only `private`\n        scope is allowed for the operation.\n      operationId: putFile\n      parameters:\n      - description: Scope of the request\n        in: path\n        name: scope\n        required: true\n        schema:\n          default: private\n          enum:\n          - private\n          type: string\n      - description: Target path\n        in: path\n        name: path\n        required: true\n        schema:\n          type: string\n      - description: Content type of the file to upload\n        in: header\n        name: content-type\n        schema:\n          type: string\n      requestBody:\n        content:\n          '*/*':\n            schema:\n              format: binary\n              type: string\n        description: Content of the file to upload\n        required: true\n      responses:\n        \"200\":\n          description: File is successfully updated with the content\n        \"201\":\n          description: File is successfully created\n      security:\n      - api_key: []\n        api_token: []\n      summary: Upload file to the path in the scope.\n      tags:\n      - FileEntry\n      x-soracom-cli:\n      - files put\n  /files/{scope}/{path}/:\n    delete:\n      description: Deletes the specified directory in the scope. Only `private` scope\n        is allowed for the operation.\n      operationId: deleteDirectory\n      parameters:\n      - description: Scope of the request\n        in: path\n        name: scope\n        required: true\n        schema:\n          default: private\n          enum:\n          - private\n          type: string\n      - description: Target directory path\n        in: path\n        name: path\n        required: true\n        schema:\n          type: string\n      responses:\n        \"204\":\n          description: The specified directory is successfully deleted\n        \"400\":\n          description: The specified directory is not empty\n        \"404\":\n          description: No such directory\n      security:\n      - api_key: []\n        api_token: []\n      summary: Delete specified directory in the scope.\n      tags:\n      - FileEntry\n      x-soracom-cli:\n      - files delete-directory\n    get:\n      description: Returns a list of file entries under the path in the scope. This\n        operation works only for directories and an error will be retrurned if the\n        file entry corresponds to the given path is not a directory. If the total\n        number of entries does not fit in one page, a URL for accessing the next page\n        is returned in the 'Link' header of the response.\n      operationId: listFiles\n      parameters:\n      - description: Scope of the request\n        in: path\n        name: scope\n        required: true\n        schema:\n          default: private\n          enum:\n          - private\n          - public\n          type: string\n      - description: Target path\n        in: path\n        name: path\n        required: true\n        schema:\n          default: /\n          type: string\n      - description: Num of entries\n        in: query\n        name: limit\n        required: false\n        schema:\n          default: 10\n          type: integer\n      - description: The filename  of the last file entry retrieved on the current\n          page. By specifying this parameter, you can continue to retrieve the list\n          from the next file entry onward.\n        in: query\n        name: last_evaluated_key\n        required: false\n        schema:\n          type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: '#/components/schemas/FileEntry'\n                type: array\n          description: A list of file entries.\n        \"404\":\n          description: No such directory\n      security:\n      - api_key: []\n        api_token: []\n      summary: List files and directories on the path in the scope\n      tags:\n      - FileEntry\n      x-soracom-cli:\n      - files list\n      x-soracom-cli-pagination:\n        request:\n          param: last_evaluated_key\n        response:\n          header: x-soracom-next-key\n  /files/exported/{exported_file_id}:\n    get:\n      description: Get an exported file. The `url` field in the response will contain\n        a URL to download the exported file.\n      operationId: getExportedFile\n      parameters:\n      - description: file export id\n        in: path\n        name: exported_file_id\n        required: true\n        schema:\n          type: string\n      responses:\n        \"200\":\n          content:\n            application/json;charset=UTF-8:\n              schema:\n                $ref: '#/components/schemas/GetExportedFileResponse'\n          description: OK\n      security:\n      - api_key: []\n        api_token: []\n      summary: Get an exported file.\n      tags:\n      - Files\n      x-soracom-cli:\n      - files get-exported\n  /gadgets:\n    get:\n      description: Returns a list of gadgets that match certain criteria. If the total\n        number of gadgets does not fit in one page, a URL for accessing the next page\n        is returned in the 'Link' header of the response.\n      operationId: listGadgets\n      parameters:\n      - description: Product ID for filtering the search.\n        in: query\n        name: product_id\n        required: false\n        schema:\n          type: string\n      - description: Tag name for filtering the search (exact match).\n        in: query\n        name: tag_name\n        required: false\n        schema:\n          type: string\n      - description: Tag search string for filtering the search. Required when `tag_name`\n          has been specified.\n        in: query\n        name: tag_value\n        required: false\n        schema:\n          type: string\n      - description: Tag match mode.\n        in: query\n        name: tag_value_match_mode\n        required: false\n        schema:\n          default: exact\n          enum:\n          - exact\n          - prefix\n          type: string\n      - description: Maximum number of gadgets to retrieve.\n        in: query\n        name: limit\n        required: false\n        schema:\n          type: integer\n      - description: The ID ({product_id}/{serial_number}) of the last gadget retrieved\n          on the current page. By specifying this parameter, you can continue to retrieve\n          the list from the next device onward.\n        in: query\n        name: last_evaluated_key\n        required: false\n        schema:\n          type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: '#/components/schemas/Gadget'\n                type: array\n          description: A list of Gadgets.\n      security:\n      - api_key: []\n        api_token: []\n      summary: List gadgets.\n      tags:\n      - Gadget\n      x-soracom-cli:\n      - gadgets list\n      x-soracom-cli-pagination:\n        request:\n          param: last_evaluated_key\n        response:\n          header: x-soracom-next-key\n  /gadgets/{product_id}/{serial_number}:\n    get:\n      description: Returns information about the specified gadget.\n      operationId: getGadget\n      parameters:\n      - description: Product ID of the target gadget.\n        in: path\n        name: product_id\n        required: true\n        schema:\n          type: string\n      - description: Serial Number of the target gadget.\n        in: path\n        name: serial_number\n        required: true\n        schema:\n          type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Gadget'\n          description: The gadget's detailed information.\n        \"404\":\n          description: The specified gadget does not exist.\n      security:\n      - api_key: []\n        api_token: []\n      summary: Get gadget.\n      tags:\n      - Gadget\n      x-soracom-cli:\n      - gadgets get\n  /gadgets/{product_id}/{serial_number}/disable_termination:\n    post:\n      description: Disables termination of specified gadget.\n      operationId: disableTerminationOnGadget\n      parameters:\n      - description: Product ID of the target gadget.\n        in: path\n        name: product_id\n        required: true\n        schema:\n          type: string\n      - description: Serial Number of the target gadget.\n        in: path\n        name: serial_number\n        required: true\n        schema:\n          type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Gadget'\n          description: The gadget's detailed information after the update.\n        \"404\":\n          description: The specified gadget does not exist.\n      security:\n      - api_key: []\n        api_token: []\n      summary: Disable Termination of gadget.\n      tags:\n      - Gadget\n      x-soracom-cli:\n      - gadgets disable-termination\n  /gadgets/{product_id}/{serial_number}/enable_termination:\n    post:\n      description: Enables termination of specified gadget.\n      operationId: enableTerminationOnGadget\n      parameters:\n      - description: Product ID of the target gadget.\n        in: path\n        name: product_id\n        required: true\n        schema:\n          type: string\n      - description: Serial Number of the target gadget.\n        in: path\n        name: serial_number\n        required: true\n        schema:\n          type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Gadget'\n          description: The gadget's detailed information after the update.\n        \"404\":\n          description: The specified gadget does not exist.\n      security:\n      - api_key: []\n        api_token: []\n      summary: Enable Termination of gadget.\n      tags:\n      - Gadget\n      x-soracom-cli:\n      - gadgets enable-termination\n  /gadgets/{product_id}/{serial_number}/register:\n    post:\n      description: Registers a gadget\n      operationId: registerGadget\n      parameters:\n      - description: Product ID of the target gadget.\n        in: path\n        name: product_id\n        required: true\n        schema:\n          type: string\n      - description: Serial Number of the target gadget.\n        in: path\n        name: serial_number\n        required: true\n        schema:\n          type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/GadgetRegistrationRequest'\n        description: Gadget registration request\n        required: true\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Gadget'\n          description: Gadget successfully registered\n        \"404\":\n          description: No such resource found.\n      security:\n      - api_key: []\n        api_token: []\n      summary: Register a gadget.\n      tags:\n      - Gadget\n      x-soracom-cli:\n      - gadgets register\n  /gadgets/{product_id}/{serial_number}/set_group:\n    post:\n      description: Sets or overwrites a group for the specified gadget.\n      operationId: setGadgetGroup\n      parameters:\n      - description: Product ID of the target gadget.\n        in: path\n        name: product_id\n        required: true\n        schema:\n          type: string\n      - description: Serial Number of the target gadget.\n        in: path\n        name: serial_number\n        required: true\n        schema:\n          type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Group'\n        description: Group (may include ID only).\n        required: true\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Gadget'\n          description: The gadget's detailed information after the update.\n        \"404\":\n          description: The specified gadget does not exist.\n      security:\n      - api_key: []\n        api_token: []\n      summary: Set Group of gadget.\n      tags:\n      - Gadget\n      x-soracom-cli:\n      - gadgets set-group\n  /gadgets/{product_id}/{serial_number}/tags:\n    put:\n      description: Inserts/updates tags for the specified gadget.\n      operationId: putGadgetTags\n      parameters:\n      - description: Product ID of the target gadget.\n        in: path\n        name: product_id\n        required: true\n        schema:\n          type: string\n      - description: Serial Number of the target gadget.\n        in: path\n        name: serial_number\n        required: true\n        schema:\n          type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              items:\n                $ref: '#/components/schemas/TagUpdateRequest'\n              type: array\n        description: Array of tags to be inserted/updated.\n        required: true\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Gadget'\n          description: The gadget's detailed information after the update.\n        \"404\":\n          description: The specified gadget does not exist.\n      security:\n      - api_key: []\n        api_token: []\n      summary: Bulk Insert or Update gadget Tags.\n      tags:\n      - Gadget\n      x-soracom-cli:\n      - gadgets put-tags\n  /gadgets/{product_id}/{serial_number}/tags/{tag_name}:\n    delete:\n      description: Deletes a tag from the specified gadget.\n      operationId: deleteGadgetTag\n      parameters:\n      - description: Product ID of the target gadget.\n        in: path\n        name: product_id\n        required: true\n        schema:\n          type: string\n      - description: Serial Number of the target gadget.\n        in: path\n        name: serial_number\n        required: true\n        schema:\n          type: string\n      - description: Tag name to be deleted. (This will be part of a URL path, so\n          it needs to be percent-encoded. In JavaScript, specify the name after it\n          has been encoded using encodeURIComponent().)\n        in: path\n        name: tag_name\n        required: true\n        schema:\n          type: string\n      responses:\n        \"204\":\n          description: Deletion of specified tag complete.\n        \"404\":\n          description: The specified gadget or the tag does not exist.\n      security:\n      - api_key: []\n        api_token: []\n      summary: Delete gadget Tag.\n      tags:\n      - Gadget\n      x-sam-operationId: deleteTag\n      x-soracom-cli:\n      - gadgets delete-tag\n  /gadgets/{product_id}/{serial_number}/terminate:\n    post:\n      description: Terminates the specified gadget\n      operationId: terminateGadget\n      parameters:\n      - description: Product ID of the target gadget.\n        in: path\n        name: product_id\n        required: true\n        schema:\n          type: string\n      - description: Serial Number of the target gadget.\n        in: path\n        name: serial_number\n        required: true\n        schema:\n          type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Gadget'\n          description: The gadget's detailed information after the update.\n        \"404\":\n          description: The specified gadget does not exist.\n      security:\n      - api_key: []\n        api_token: []\n      summary: Terminate gadget.\n      tags:\n      - Gadget\n      x-soracom-cli:\n      - gadgets terminate\n  /gadgets/{product_id}/{serial_number}/unset_group:\n    post:\n      description: Removes the group configuration from the specified gadget.\n      operationId: unsetGadgetGroup\n      parameters:\n      - description: Product ID of the target gadget.\n        in: path\n        name: product_id\n        required: true\n        schema:\n          type: string\n      - description: Serial Number of the target gadget.\n        in: path\n        name: serial_number\n        required: true\n        schema:\n          type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Gadget'\n          description: The gadget's detailed information after the update.\n        \"404\":\n          description: The specified gadget does not exist or the gadget does not\n            belong to a group.\n      security:\n      - api_key: []\n        api_token: []\n      summary: Unset Group of gadget.\n      tags:\n      - Gadget\n      x-soracom-cli:\n      - gadgets unset-group\n  /groups:\n    get:\n      description: Returns a list of groups.\n      operationId: listGroups\n      parameters:\n      - description: Tag name of the group. Filters through all groups that exactly\n          match the tag name. When tag_name is specified, tag_value is required.\n        in: query\n        name: tag_name\n        required: false\n        schema:\n          type: string\n      - description: Tag value of the groups.\n        in: query\n        name: tag_value\n        required: false\n        schema:\n          type: string\n      - description: Tag match mode.\n        in: query\n        name: tag_value_match_mode\n        required: false\n        schema:\n          default: exact\n          enum:\n          - exact\n          - prefix\n          type: string\n      - description: Maximum number of results per response page.\n        in: query\n        name: limit\n        required: false\n        schema:\n          type: integer\n      - description: The last Group ID retrieved on the current page. By specifying\n          this parameter, you can continue to retrieve the list from the next group\n          onward.\n        in: query\n        name: last_evaluated_key\n        required: false\n        schema:\n          type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: '#/components/schemas/Group'\n                type: array\n          description: A list of groups.\n      security:\n      - api_key: []\n        api_token: []\n      summary: List Groups.\n      tags:\n      - Group\n      x-soracom-cli:\n      - groups list\n      x-soracom-cli-pagination:\n        request:\n          param: last_evaluated_key\n        response:\n          header: x-soracom-next-key\n    post:\n      description: Create a new group.\n      operationId: createGroup\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/CreateGroupRequest'\n        description: Tags for group to be created.\n        required: true\n      responses:\n        \"201\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Group'\n          description: Created\n      security:\n      - api_key: []\n        api_token: []\n      summary: Create Group.\n      tags:\n      - Group\n      x-soracom-cli:\n      - groups create\n  /groups/{group_id}:\n    delete:\n      description: Deletes the specified group by group ID\n      operationId: deleteGroup\n      parameters:\n      - description: Target group ID.\n        in: path\n        name: group_id\n        required: true\n        schema:\n          type: string\n      responses:\n        \"204\":\n          description: Deletion of specified group complete.\n        \"404\":\n          description: The specified group does not exist.\n      security:\n      - api_key: []\n        api_token: []\n      summary: Delete Group.\n      tags:\n      - Group\n      x-soracom-cli:\n      - groups delete\n    get:\n      description: Returns the group specified by the group ID.\n      operationId: getGroup\n      parameters:\n      - description: Target group ID.\n        in: path\n        name: group_id\n        required: true\n        schema:\n          type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Group'\n          description: The specified group.\n        \"404\":\n          description: The specified group does not exist.\n      security:\n      - api_key: []\n        api_token: []\n      summary: Get Group.\n      tags:\n      - Group\n      x-soracom-cli:\n      - groups get\n  /groups/{group_id}/configuration/{namespace}:\n    delete:\n      description: Delete a namespace for the specified group.\n      operationId: deleteConfigurationNamespace\n      parameters:\n      - description: Target group.\n        in: path\n        name: group_id\n        required: true\n        schema:\n          type: string\n      - description: Namespace to be deleted.\n        in: path\n        name: namespace\n        required: true\n        schema:\n          enum:\n          - SoracomAir\n          - SoracomBeam\n          - SoracomEndorse\n          - SoracomFunk\n          - SoracomFunnel\n          - SoracomHarvest\n          - SoracomHarvestFiles\n          - SoracomKrypton\n          - UnifiedEndpoint\n          type: string\n      responses:\n        \"204\":\n          description: The namespace was successfully deleted.\n        \"400\":\n          description: The specified namespace does not exist.\n        \"404\":\n          description: The specified group does not exist.\n      security:\n      - api_key: []\n        api_token: []\n      summary: Delete Group Configuration Namespace.\n      tags:\n      - Group\n      x-soracom-cli:\n      - groups delete-config-namespace\n    put:\n      description: Adds/updates parameters for the specified group.\n      operationId: putConfigurationParameters\n      parameters:\n      - description: Target group.\n        in: path\n        name: group_id\n        required: true\n        schema:\n          type: string\n      - description: Target configuration.\n        in: path\n        name: namespace\n        required: true\n        schema:\n          enum:\n          - SoracomAir\n          - SoracomBeam\n          - SoracomEndorse\n          - SoracomFunk\n          - SoracomFunnel\n          - SoracomHarvest\n          - SoracomHarvestFiles\n          - SoracomKrypton\n          - SoracomOrbit\n          - UnifiedEndpoint\n          type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              items:\n                $ref: '#/components/schemas/GroupConfigurationUpdateRequest'\n              type: array\n        description: Array of values for target object to be updated.\n        required: true\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Group'\n          description: The group after the update.\n        \"404\":\n          description: The specified group does not exist.\n      security:\n      - api_key: []\n        api_token: []\n      summary: Update Group Configuration Parameters.\n      tags:\n      - Group\n      x-soracom-cli:\n      - groups put-config\n  /groups/{group_id}/configuration/{namespace}/{name}:\n    delete:\n      description: Delete parameters for the specified group.\n      operationId: deleteConfigurationParameter\n      parameters:\n      - description: Target group.\n        in: path\n        name: group_id\n        required: true\n        schema:\n          type: string\n      - description: Namespace of target parameters.\n        in: path\n        name: namespace\n        required: true\n        schema:\n          enum:\n          - SoracomAir\n          - SoracomBeam\n          - SoracomEndorse\n          - SoracomFunk\n          - SoracomFunnel\n          - SoracomHarvest\n          - SoracomHarvestFiles\n          - SoracomKrypton\n          - UnifiedEndpoint\n          type: string\n      - description: Parameter name to be deleted. (This will be part of a URL path,\n          so it needs to be percent-encoded. In JavaScript, specify the name after\n          it has been encoded using encodeURIComponent().)\n        in: path\n        name: name\n        required: true\n        schema:\n          type: string\n      responses:\n        \"204\":\n          description: The parameter was successfully deleted.\n        \"404\":\n          description: The specified group does not exist.\n      security:\n      - api_key: []\n        api_token: []\n      summary: Delete Group Configuration Parameters.\n      tags:\n      - Group\n      x-soracom-cli:\n      - groups delete-config\n  /groups/{group_id}/subscribers:\n    get:\n      description: Returns a list of subscribers that belong to the specified group\n        by group ID.\n      operationId: listSubscribersInGroup\n      parameters:\n      - description: Target group ID.\n        in: path\n        name: group_id\n        required: true\n        schema:\n          type: string\n      - description: Maximum number of results per response page.\n        in: query\n        name: limit\n        required: false\n        schema:\n          type: integer\n      - description: The IMSI of the last subscriber retrieved on the current page.\n          By specifying this parameter, you can continue to retrieve the list from\n          the next subscriber onward.\n        in: query\n        name: last_evaluated_key\n        required: false\n        schema:\n          type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Group'\n          description: Target group ID\n        \"404\":\n          description: The specified group does not exist.\n      security:\n      - api_key: []\n        api_token: []\n      summary: List Subscribers in a group.\n      tags:\n      - Group\n      x-sam-operationId: listSubscribers\n      x-soracom-cli:\n      - groups list-subscribers\n      x-soracom-cli-pagination:\n        request:\n          param: last_evaluated_key\n        response:\n          header: x-soracom-next-key\n  /groups/{group_id}/tags:\n    put:\n      description: Adds/updates tags of specified configuration group.\n      operationId: putGroupTags\n      parameters:\n      - description: Target group ID.\n        in: path\n        name: group_id\n        required: true\n        schema:\n          type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              items:\n                $ref: '#/components/schemas/TagUpdateRequest'\n              type: array\n        description: Array of values for tags to be updated.\n        required: true\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Group'\n          description: The group after the update.\n        \"404\":\n          description: The specified group does not exist.\n      security:\n      - api_key: []\n        api_token: []\n      summary: Update Group Tags.\n      tags:\n      - Group\n      x-sam-operationId: putTags\n      x-soracom-cli:\n      - groups put-tags\n  /groups/{group_id}/tags/{tag_name}:\n    delete:\n      description: Deletes tag from the specified group.\n      operationId: deleteGroupTag\n      parameters:\n      - description: Target group ID.\n        in: path\n        name: group_id\n        required: true\n        schema:\n          type: string\n      - description: Tag name to be deleted. (This will be part of a URL path, so\n          it needs to be percent-encoded. In JavaScript, specify the name after it\n          has been encoded using encodeURIComponent().)\n        in: path\n        name: tag_name\n        required: true\n        schema:\n          type: string\n      responses:\n        \"204\":\n          description: Tag deletion complete.\n        \"404\":\n          description: The specified subscriber or the tag does not exist.\n      security:\n      - api_key: []\n        api_token: []\n      summary: Delete Group Tag.\n      tags:\n      - Group\n      x-sam-operationId: deleteTag\n      x-soracom-cli:\n      - groups delete-tag\n  /lagoon/dashboards/{dashboard_id}/permissions:\n    put:\n      description: Update permissions for a dashboard of SORACOM Lagoon\n      operationId: updateLagoonDashboardPermissions\n      parameters:\n      - description: dashboard_id\n        in: path\n        name: dashboard_id\n        required: true\n        schema:\n          format: int64\n          type: integer\n      - description: If the value is true, a request will be issued to Lagoon Classic.\n          This is only valid if both Lagoon and Lagoon Classic are enabled.\n        in: query\n        name: classic\n        required: false\n        schema:\n          type: boolean\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/LagoonDashboardPermissionsUpdatingRequest'\n        description: req\n        required: true\n      responses:\n        \"204\":\n          description: Updated\n        \"400\":\n          description: Bad request\n        \"403\":\n          description: Unauthorized operation\n      security:\n      - api_key: []\n        api_token: []\n      summary: Update permissions for a dashboard of SORACOM Lagoon\n      tags:\n      - Lagoon\n      x-soracom-cli:\n      - lagoon dashboards update-permissions\n  /lagoon/dashboards/{dashboard_id}/permissions/init:\n    post:\n      description: Update permissions to the initial state for a dashboard of SORACOM\n        Lagoon\n      operationId: initializeLagoonDashboardPermissions\n      parameters:\n      - description: dashboard_id\n        in: path\n        name: dashboard_id\n        required: true\n        schema:\n          format: int64\n          type: integer\n      - description: If the value is true, a request will be issued to Lagoon Classic.\n          This is only valid if both Lagoon and Lagoon Classic are enabled.\n        in: query\n        name: classic\n        required: false\n        schema:\n          type: boolean\n      responses:\n        \"204\":\n          description: Updated\n        \"400\":\n          description: Bad request\n        \"403\":\n          description: Unauthorized operation\n      security:\n      - api_key: []\n        api_token: []\n      summary: Update permissions to the initial state for a dashboard of SORACOM\n        Lagoon\n      tags:\n      - Lagoon\n      x-soracom-cli:\n      - lagoon dashboards init-permissions\n  /lagoon/dashboards/permissions:\n    get:\n      description: List permissions for all SORACOM Lagoon dashboards\n      operationId: listLagoonDashboardsPermissions\n      parameters:\n      - description: If the value is true, a request will be issued to Lagoon Classic.\n          This is only valid if both Lagoon and Lagoon Classic are enabled.\n        in: query\n        name: classic\n        required: false\n        schema:\n          type: boolean\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: '#/components/schemas/LagoonDashboardPermissionsResponse'\n                type: array\n          description: OK\n        \"400\":\n          description: Bad request\n      security:\n      - api_key: []\n        api_token: []\n      summary: List permissions for all SORACOM Lagoon dashboards\n      tags:\n      - Lagoon\n      x-soracom-cli:\n      - lagoon dashboards list-permissions\n  /lagoon/image/link:\n    get:\n      description: Get a custom icon image link of SORACOM Lagoon\n      operationId: getImageLink\n      parameters:\n      - description: If the value is true, a request will be issued to Lagoon Classic.\n          This is only valid if both Lagoon and Lagoon Classic are enabled.\n        in: query\n        name: classic\n        required: false\n        schema:\n          type: boolean\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                type: string\n          description: OK\n        \"400\":\n          description: Bad request\n      security:\n      - api_key: []\n        api_token: []\n      summary: Get a custom icon image link of SORACOM Lagoon\n      tags:\n      - Lagoon\n      x-soracom-cli:\n      - lagoon get-image-link\n  /lagoon/license_packs:\n    get:\n      description: Get the status of active SORACOM Lagoon license packs\n      operationId: listLagoonLicensePackStatus\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: '#/components/schemas/LagoonLicensePackStatusResponse'\n                type: array\n          description: OK\n        \"400\":\n          description: Bad request\n      security:\n      - api_key: []\n        api_token: []\n      summary: Get the status of active SORACOM Lagoon license packs\n      tags:\n      - Lagoon\n      x-soracom-cli:\n      - lagoon license-packs list-status\n    put:\n      description: Update the quantities for license packs of SORACOM Lagoon. This\n        API is only allowed to operate by root account.\n      operationId: updateLagoonLicensePack\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/LagoonLicensePacksUpdatingRequest'\n        description: req\n        required: true\n      responses:\n        \"204\":\n          description: Updated\n        \"400\":\n          description: Bad request\n        \"404\":\n          description: Operator Not Found\n      security:\n      - api_key: []\n        api_token: []\n      summary: Update the quantities for license packs of SORACOM Lagoon\n      tags:\n      - Lagoon\n      x-soracom-cli:\n      - lagoon license-packs update\n  /lagoon/migration:\n    get:\n      deprecated: true\n      description: '(OBSOLETE) This API always returns `410 GONE`: Get the version\n        migration information for SORACOM Lagoon. Only the root account can operate\n        this.'\n      operationId: getLagoonMigrationInfo\n      requestBody:\n        $ref: '#/components/requestBodies/LagoonPlanChangingRequest'\n      responses:\n        \"410\":\n          description: No longer migration supported\n      security:\n      - api_key: []\n        api_token: []\n      summary: '(OBSOLETE) This API always returns `410 GONE`: Get the version migration\n        information for SORACOM Lagoon'\n      tags:\n      - Lagoon\n      x-soracom-cli:\n      - lagoon migration get-info\n    post:\n      deprecated: true\n      description: '(OBSOLETE) This API always returns `410 GONE`: Migrate SORACOM\n        Lagoon version. Only the root account can operate this.'\n      operationId: migrateLagoon\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/LagoonMigrationFromClassicRequest'\n        description: req\n        required: true\n      responses:\n        \"410\":\n          description: No longer migration supported\n      security:\n      - api_key: []\n        api_token: []\n      summary: '(OBSOLETE) This API always returns `410 GONE`: Migrate SORACOM Lagoon\n        version'\n      tags:\n      - Lagoon\n      x-soracom-cli:\n      - lagoon migration migrate\n  /lagoon/plan:\n    put:\n      description: Update the plan of SORACOM Lagoon. This API is only allowed to\n        operate by root account.\n      operationId: updateLagoonPlan\n      requestBody:\n        $ref: '#/components/requestBodies/LagoonPlanChangingRequest'\n      responses:\n        \"204\":\n          description: Updated\n        \"400\":\n          description: Bad request\n        \"404\":\n          description: Operator Not Found\n      security:\n      - api_key: []\n        api_token: []\n      summary: Update the plan of SORACOM Lagoon\n      tags:\n      - Lagoon\n      x-soracom-cli:\n      - lagoon updated-plan\n  /lagoon/register:\n    post:\n      description: Register (activate) SORACOM Lagoon. This API is only allowed to\n        operate by root account.\n      operationId: registerLagoon\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/LagoonRegistrationRequest'\n        description: request\n        required: true\n      responses:\n        \"201\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/LagoonRegistrationResponse'\n          description: Registered\n        \"400\":\n          description: Bad request\n      security:\n      - api_key: []\n        api_token: []\n      summary: Register (activate) SORACOM Lagoon\n      tags:\n      - Lagoon\n      x-soracom-cli:\n      - lagoon register\n  /lagoon/terminate:\n    post:\n      description: Terminate (deactivate) SORACOM Lagoon.\n      operationId: terminateLagoon\n      responses:\n        \"204\":\n          description: Terminated\n        \"400\":\n          description: Bad request\n        \"404\":\n          description: Operator not found\n      security:\n      - api_key: []\n        api_token: []\n      summary: Terminate (deactivate) SORACOM Lagoon\n      tags:\n      - Lagoon\n      x-soracom-cli:\n      - lagoon terminate\n  /lagoon/users:\n    get:\n      description: List SORACOM Lagoon users that belong to operator.\n      operationId: listLagoonUsers\n      parameters:\n      - description: If the value is true, a request will be issued to Lagoon Classic.\n          This is only valid if both Lagoon and Lagoon Classic are enabled.\n        in: query\n        name: classic\n        required: false\n        schema:\n          type: boolean\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: '#/components/schemas/LagoonUser'\n                type: array\n          description: OK\n        \"400\":\n          description: Bad request\n      security:\n      - api_key: []\n        api_token: []\n      summary: List SORACOM Lagoon users that belong to operator\n      tags:\n      - Lagoon\n      x-soracom-cli:\n      - lagoon list-users\n      - lagoon users list\n    post:\n      description: Create a SORACOM Lagoon user.\n      operationId: createLagoonUser\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/LagoonUserCreationRequest'\n        description: request\n        required: true\n      responses:\n        \"201\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/LagoonUserCreationResponse'\n          description: Created\n        \"400\":\n          description: Bad request\n      security:\n      - api_key: []\n        api_token: []\n      summary: Create a SORACOM Lagoon user\n      tags:\n      - Lagoon\n      x-soracom-cli:\n      - lagoon create-user\n      - lagoon users create\n  /lagoon/users/{lagoon_user_id}:\n    delete:\n      description: Delete a SORACOM Lagoon user.\n      operationId: deleteLagoonUser\n      parameters:\n      - description: Target ID of the lagoon user\n        in: path\n        name: lagoon_user_id\n        required: true\n        schema:\n          type: integer\n      responses:\n        \"204\":\n          description: Deleted\n        \"400\":\n          description: Bad request\n      security:\n      - api_key: []\n        api_token: []\n      summary: Delete a SORACOM Lagoon user\n      tags:\n      - Lagoon\n      x-soracom-cli:\n      - lagoon delete-user\n      - lagoon users delete\n  /lagoon/users/{lagoon_user_id}/email:\n    put:\n      description: Update email address of a SORACOM Lagoon user.\n      operationId: updateLagoonUserEmail\n      parameters:\n      - description: Target ID of the lagoon user\n        in: path\n        name: lagoon_user_id\n        required: true\n        schema:\n          type: integer\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/LagoonUserEmailUpdatingRequest'\n        description: request\n        required: true\n      responses:\n        \"200\":\n          description: OK\n        \"400\":\n          description: Bad request\n      security:\n      - api_key: []\n        api_token: []\n      summary: Update email address of a SORACOM Lagoon user\n      tags:\n      - Lagoon\n      x-soracom-cli:\n      - lagoon update-user-email\n      - lagoon users update-email\n  /lagoon/users/{lagoon_user_id}/password:\n    put:\n      description: Update password of a SORACOM Lagoon user.\n      operationId: updateLagoonUserPassword\n      parameters:\n      - description: Target ID of the lagoon user\n        in: path\n        name: lagoon_user_id\n        required: true\n        schema:\n          type: integer\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/LagoonUserPasswordUpdatingRequest'\n        description: request\n        required: true\n      responses:\n        \"200\":\n          description: OK\n        \"400\":\n          description: Bad request\n      security:\n      - api_key: []\n        api_token: []\n      summary: Update password of a SORACOM Lagoon user\n      tags:\n      - Lagoon\n      x-soracom-cli:\n      - lagoon update-user-password\n      - lagoon users update-password\n  /lagoon/users/{lagoon_user_id}/permission:\n    put:\n      description: Update permission of a SORACOM Lagoon user.\n      operationId: updateLagoonUserPermission\n      parameters:\n      - description: Target ID of the lagoon user\n        in: path\n        name: lagoon_user_id\n        required: true\n        schema:\n          type: integer\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/LagoonUserPermissionUpdatingRequest'\n        description: request\n        required: true\n      responses:\n        \"200\":\n          description: OK\n        \"400\":\n          description: Bad request\n      security:\n      - api_key: []\n        api_token: []\n      summary: Update permission of a SORACOM Lagoon user\n      tags:\n      - Lagoon\n      x-soracom-cli:\n      - lagoon update-user-permission\n      - lagoon users update-permission\n  /logs:\n    get:\n      description: Returns a list of log entries that match certain criteria. If the\n        total number of entries does not fit in one page, a URL for accessing the\n        next page is returned in the 'Link' header of the response.\n      operationId: getLogs\n      parameters:\n      - description: Type of the target resource to query log entries.\n        in: query\n        name: resource_type\n        required: false\n        schema:\n          enum:\n          - Subscriber\n          - EventHandler\n          - VirtualPrivateGateway\n          type: string\n      - description: Identity of the target resource to query log entries.\n        in: query\n        name: resource_id\n        required: false\n        schema:\n          type: string\n      - description: Service name to filter log entries.\n        in: query\n        name: service\n        required: false\n        schema:\n          enum:\n          - Air\n          - Beam\n          - Canal\n          - Direct\n          - Door\n          - Endorse\n          - Funnel\n          - Gate\n          type: string\n      - description: Start time for the log search range (unixtime).\n        in: query\n        name: from\n        required: false\n        schema:\n          type: integer\n      - description: End time for the log search range (unixtime).\n        in: query\n        name: to\n        required: false\n        schema:\n          type: integer\n      - description: Maximum number of log entries to retrieve.\n        in: query\n        name: limit\n        required: false\n        schema:\n          type: integer\n      - description: The value of `time` in the last log entry retrieved in the previous\n          page. By specifying this parameter, you can continue to retrieve the list\n          from the next page onward.\n        in: query\n        name: last_evaluated_key\n        required: false\n        schema:\n          type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: '#/components/schemas/LogEntry'\n                type: array\n          description: A list of log entries.\n      security:\n      - api_key: []\n        api_token: []\n      summary: Get Logs.\n      tags:\n      - Log\n      x-soracom-cli:\n      - logs get\n      x-soracom-cli-pagination:\n        request:\n          param: last_evaluated_key\n        response:\n          header: x-soracom-next-key\n  /lora_devices:\n    get:\n      description: Returns a list of LoRa devices that match certain criteria. If\n        the total number of LoRa devices does not fit in one page, a URL for accessing\n        the next page is returned in the 'Link' header of the response.\n      operationId: listLoraDevices\n      parameters:\n      - description: Tag name for filtering the search (exact match).\n        in: query\n        name: tag_name\n        required: false\n        schema:\n          type: string\n      - description: Tag search string for filtering the search. Required when `tag_name`\n          has been specified.\n        in: query\n        name: tag_value\n        required: false\n        schema:\n          type: string\n      - description: Tag match mode.\n        in: query\n        name: tag_value_match_mode\n        required: false\n        schema:\n          default: exact\n          enum:\n          - exact\n          - prefix\n          type: string\n      - description: Maximum number of LoRa devices to retrieve.\n        in: query\n        name: limit\n        required: false\n        schema:\n          type: integer\n      - description: The device ID of the last device retrieved on the current page.\n          By specifying this parameter, you can continue to retrieve the list from\n          the next device onward.\n        in: query\n        name: last_evaluated_key\n        required: false\n        schema:\n          type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: '#/components/schemas/LoraDevice'\n                type: array\n          description: A list of LoRa devices.\n      security:\n      - api_key: []\n        api_token: []\n      summary: List LoRa devices.\n      tags:\n      - LoraDevice\n      x-soracom-cli:\n      - lora-devices list\n      x-soracom-cli-pagination:\n        request:\n          param: last_evaluated_key\n        response:\n          header: x-soracom-next-key\n  /lora_devices/{device_id}:\n    get:\n      description: Returns information about the specified LoRa device.\n      operationId: getLoraDevice\n      parameters:\n      - description: Device ID of the target LoRa device.\n        in: path\n        name: device_id\n        required: true\n        schema:\n          type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/LoraDevice'\n          description: The LoRa device's detailed information.\n        \"404\":\n          description: The specified LoRa device does not exist.\n      security:\n      - api_key: []\n        api_token: []\n      summary: Get LoRa device.\n      tags:\n      - LoraDevice\n      x-soracom-cli:\n      - lora-devices get\n  /lora_devices/{device_id}/data:\n    get:\n      description: Returns a list of data entries sent from a LoRa device that match\n        certain criteria. If the total number of entries does not fit in one page,\n        a URL for accessing the next page is returned in the 'Link' header of the\n        response.\n      operationId: getDataFromLoraDevice\n      parameters:\n      - description: Device ID of the target subscriber that generated data entries.\n        in: path\n        name: device_id\n        required: true\n        schema:\n          type: string\n      - description: Start time for the data entries search range (unixtime in milliseconds).\n        in: query\n        name: from\n        required: false\n        schema:\n          type: integer\n      - description: End time for the data entries search range (unixtime in milliseconds).\n        in: query\n        name: to\n        required: false\n        schema:\n          type: integer\n      - description: Sort order of the data entries. Either descending (latest data\n          entry first) or ascending (oldest data entry first).\n        in: query\n        name: sort\n        required: false\n        schema:\n          default: desc\n          enum:\n          - desc\n          - asc\n          type: string\n      - description: Maximum number of data entries to retrieve.\n        in: query\n        name: limit\n        required: false\n        schema:\n          type: integer\n      - description: The value of `time` in the last log entry retrieved in the previous\n          page. By specifying this parameter, you can continue to retrieve the list\n          from the next page onward.\n        in: query\n        name: last_evaluated_key\n        required: false\n        schema:\n          type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: '#/components/schemas/DataEntry'\n                type: array\n          description: A list of data entries.\n      security:\n      - api_key: []\n        api_token: []\n      summary: Get data sent from a LoRa device.\n      tags:\n      - LoraDevice\n      x-soracom-cli:\n      - lora-devices get-data\n      x-soracom-cli-pagination:\n        request:\n          param: last_evaluated_key\n        response:\n          header: x-soracom-next-key\n    post:\n      description: Sends data to the specified LoRa device. The data is sent to the\n        LoRa network server, to be sent out to the device using the next available\n        slot. If another message destined for the same LoRa device ID is already waiting\n        to be sent, the existing message will be discarded, and the new message will\n        be sent instead.\n      operationId: sendDataToLoraDevice\n      parameters:\n      - description: ID of the recipient device.\n        in: path\n        name: device_id\n        required: true\n        schema:\n          type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/LoraData'\n        description: Binary data encoded as a hexadecimal string. Maximum length of\n          original binary data is 11 octets (22 characters when encoded as a hexadecimal\n          string). The number of characters must be even. fPort MUST be equal to or\n          greater than 0. 0 is used for the control plane and 1 or greater values\n          should be used in general. It defaults to 2 to avoid the issues of some\n          devices from some vendors and all invalid values that can not be parsed\n          fallback to 2.\n        required: true\n      responses:\n        \"204\":\n          description: Data has been received and sent to the LoRa network server\n            for the recipient device to retrieve.\n        \"400\":\n          description: The payload JSON data contains one or more invalid parameters.\n        \"404\":\n          description: No such device found.\n      security:\n      - api_key: []\n        api_token: []\n      summary: Send data to a LoRa device.\n      tags:\n      - LoraDevice\n      x-soracom-cli:\n      - lora-devices send-data\n  /lora_devices/{device_id}/disable_termination:\n    post:\n      description: Disables termination of specified LoRa device.\n      operationId: disableTerminationOnLoraDevice\n      parameters:\n      - description: Device ID of the target LoRa device.\n        in: path\n        name: device_id\n        required: true\n        schema:\n          type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/LoraDevice'\n          description: The LoRa device's detailed information after the update.\n        \"404\":\n          description: The specified LoRa device does not exist.\n      security:\n      - api_key: []\n        api_token: []\n      summary: Disable Termination of LoRa device.\n      tags:\n      - LoraDevice\n      x-soracom-cli:\n      - lora-devices disable-termination\n  /lora_devices/{device_id}/enable_termination:\n    post:\n      description: Enables termination of specified LoRa device.\n      operationId: enableTerminationOnLoraDevice\n      parameters:\n      - description: Device ID of the target LoRa device.\n        in: path\n        name: device_id\n        required: true\n        schema:\n          type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/LoraDevice'\n          description: The LoRa device's detailed information after the update.\n        \"404\":\n          description: The specified LoRa device does not exist.\n      security:\n      - api_key: []\n        api_token: []\n      summary: Enable Termination of LoRa device.\n      tags:\n      - LoraDevice\n      x-soracom-cli:\n      - lora-devices enable-termination\n  /lora_devices/{device_id}/register:\n    post:\n      description: Registers a LoRa device.\n      operationId: registerLoraDevice\n      parameters:\n      - description: Device ID of the target LoRa device.\n        in: path\n        name: device_id\n        required: true\n        schema:\n          type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/RegisterLoraDeviceRequest'\n        description: LoRa device\n        required: true\n      responses:\n        \"201\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/LoraDevice'\n          description: LoRa device registration complete.\n      security:\n      - api_key: []\n        api_token: []\n      summary: Register LoRa device.\n      tags:\n      - LoraDevice\n      x-soracom-cli:\n      - lora-devices register\n  /lora_devices/{device_id}/set_group:\n    post:\n      description: Sets or overwrites a group for the specified LoRa device.\n      operationId: setLoraDeviceGroup\n      parameters:\n      - description: Device ID of the target LoRa device.\n        in: path\n        name: device_id\n        required: true\n        schema:\n          type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Group'\n        description: Group (may include ID only).\n        required: true\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/LoraDevice'\n          description: The LoRa device's detailed information after the update.\n        \"404\":\n          description: The specified LoRa device does not exist.\n      security:\n      - api_key: []\n        api_token: []\n      summary: Set Group of LoRa device.\n      tags:\n      - LoraDevice\n      x-soracom-cli:\n      - lora-devices set-group\n  /lora_devices/{device_id}/tags:\n    put:\n      description: Inserts/updates tags for the specified LoRa device.\n      operationId: putLoraDeviceTags\n      parameters:\n      - description: Device ID of the target LoRa device.\n        in: path\n        name: device_id\n        required: true\n        schema:\n          type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              items:\n                $ref: '#/components/schemas/TagUpdateRequest'\n              type: array\n        description: Array of tags to be inserted/updated.\n        required: true\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/LoraDevice'\n          description: The LoRa device's detailed information after the update.\n        \"404\":\n          description: The specified LoRa device does not exist.\n      security:\n      - api_key: []\n        api_token: []\n      summary: Bulk Insert or Update LoRa device Tags.\n      tags:\n      - LoraDevice\n      x-soracom-cli:\n      - lora-devices put-tags\n  /lora_devices/{device_id}/tags/{tag_name}:\n    delete:\n      description: Deletes a tag from the specified LoRa device.\n      operationId: deleteLoraDeviceTag\n      parameters:\n      - description: device ID of the target LoRa device.\n        in: path\n        name: device_id\n        required: true\n        schema:\n          type: string\n      - description: Tag name to be deleted. (This will be part of a URL path, so\n          it needs to be percent-encoded. In JavaScript, specify the name after it\n          has been encoded using encodeURIComponent().)\n        in: path\n        name: tag_name\n        required: true\n        schema:\n          type: string\n      responses:\n        \"204\":\n          description: Deletion of specified tag complete.\n        \"404\":\n          description: The specified LoRa device or the tag does not exist.\n      security:\n      - api_key: []\n        api_token: []\n      summary: Delete LoRa device Tag.\n      tags:\n      - LoraDevice\n      x-sam-operationId: deleteTag\n      x-soracom-cli:\n      - lora-devices delete-tag\n  /lora_devices/{device_id}/terminate:\n    post:\n      description: Terminates the specified LoRa device\n      operationId: terminateLoraDevice\n      parameters:\n      - description: Device ID of the target LoRa device.\n        in: path\n        name: device_id\n        required: true\n        schema:\n          type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/LoraDevice'\n          description: The LoRa device's detailed information after the update.\n        \"404\":\n          description: The specified LoRa device does not exist.\n      security:\n      - api_key: []\n        api_token: []\n      summary: Terminate LoRa device.\n      tags:\n      - LoraDevice\n      x-soracom-cli:\n      - lora-devices terminate\n  /lora_devices/{device_id}/unset_group:\n    post:\n      description: Removes the group configuration from the specified LoRa device.\n      operationId: unsetLoraDeviceGroup\n      parameters:\n      - description: Device ID of the target LoRa device.\n        in: path\n        name: device_id\n        required: true\n        schema:\n          type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/LoraDevice'\n          description: The LoRa device's detailed information after the update.\n        \"404\":\n          description: The specified LoRa device does not exist or the LoRa device\n            does not belong to a group.\n      security:\n      - api_key: []\n        api_token: []\n      summary: Unset Group of LoRa device.\n      tags:\n      - LoraDevice\n      x-soracom-cli:\n      - lora-devices unset-group\n  /lora_gateways:\n    get:\n      description: Returns a list of LoRa gateways that match certain criteria. If\n        the total number of LoRa gateways does not fit in one page, a URL for accessing\n        the next page is returned in the 'Link' header of the response.\n      operationId: listLoraGateways\n      parameters:\n      - description: Tag name for filtering the search (exact match).\n        in: query\n        name: tag_name\n        required: false\n        schema:\n          type: string\n      - description: Tag search string for filtering the search. Required when `tag_name`\n          has been specified.\n        in: query\n        name: tag_value\n        required: false\n        schema:\n          type: string\n      - description: Tag match mode.\n        in: query\n        name: tag_value_match_mode\n        required: false\n        schema:\n          default: exact\n          enum:\n          - exact\n          - prefix\n          type: string\n      - description: Maximum number of LoRa devices to retrieve.\n        in: query\n        name: limit\n        required: false\n        schema:\n          format: int32d\n          type: integer\n      - description: The device ID of the last device retrieved on the current page.\n          By specifying this parameter, you can continue to retrieve the list from\n          the next device onward.\n        in: query\n        name: last_evaluated_key\n        required: false\n        schema:\n          type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: '#/components/schemas/LoraGateway'\n                type: array\n          description: A list of LoRa gateways.\n      security:\n      - api_key: []\n        api_token: []\n      summary: List LoRa Gateways.\n      tags:\n      - LoraGateway\n      x-soracom-cli:\n      - lora-gateways list\n      x-soracom-cli-pagination:\n        request:\n          param: last_evaluated_key\n        response:\n          header: x-soracom-next-key\n  /lora_gateways/{gateway_id}:\n    get:\n      description: Returns information about the specified LoRa gateway.\n      operationId: getLoraGateway\n      parameters:\n      - description: Gateway ID of the target LoRa gateway.\n        in: path\n        name: gateway_id\n        required: true\n        schema:\n          type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/LoraGateway'\n          description: The LoRa gateway's detailed information.\n        \"404\":\n          description: The specified LoRa gateway does not exist.\n      security:\n      - api_key: []\n        api_token: []\n      summary: Get LoRa gateway.\n      tags:\n      - LoraGateway\n      x-soracom-cli:\n      - lora-gateways get\n  /lora_gateways/{gateway_id}/disable_termination:\n    post:\n      description: Disables termination of specified LoRa gateway.\n      operationId: disableTerminationOnLoraGateway\n      parameters:\n      - description: ID of the target LoRa gateway.\n        in: path\n        name: gateway_id\n        required: true\n        schema:\n          type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/LoraGateway'\n          description: The LoRa gateway's detailed information after the update.\n        \"404\":\n          description: The specified LoRa gateway does not exist.\n      security:\n      - api_key: []\n        api_token: []\n      summary: Disable Termination of LoRa gateway.\n      tags:\n      - LoraGateway\n      x-soracom-cli:\n      - lora-gateways disable-termination\n  /lora_gateways/{gateway_id}/enable_termination:\n    post:\n      description: Enables termination of specified LoRa gateway.\n      operationId: enableTerminationOnLoraGateway\n      parameters:\n      - description: ID of the target LoRa gateway.\n        in: path\n        name: gateway_id\n        required: true\n        schema:\n          type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/LoraGateway'\n          description: The LoRa gateway's detailed information after the update.\n        \"404\":\n          description: The specified LoRa gateway does not exist.\n      security:\n      - api_key: []\n        api_token: []\n      summary: Enable Termination of LoRa gateway.\n      tags:\n      - LoraGateway\n      x-soracom-cli:\n      - lora-gateways enable-termination\n  /lora_gateways/{gateway_id}/set_network_set:\n    post:\n      description: Sets or overwrites network set ID for the specified LoRa gateway.\n      operationId: setLoraNetworkSet\n      parameters:\n      - description: ID of the target LoRa gateway.\n        in: path\n        name: gateway_id\n        required: true\n        schema:\n          type: string\n      requestBody:\n        content:\n          text/plain:\n            schema:\n              $ref: '#/components/schemas/SetNetworkSetRequest'\n        description: LoRa Network Set ID.\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/LoraGateway'\n          description: The LoRa gateway's detailed information after the update.\n        \"404\":\n          description: The specified LoRa device does not exist.\n      security:\n      - api_key: []\n        api_token: []\n      summary: Set Network Set ID of LoRa gateway.\n      tags:\n      - LoraGateway\n      x-soracom-cli:\n      - lora-gateways set-network-set\n  /lora_gateways/{gateway_id}/tags:\n    put:\n      description: Inserts/updates tags for the specified LoRa gateway.\n      operationId: putLoraGatewayTags\n      parameters:\n      - description: ID of the target LoRa gateway.\n        in: path\n        name: gateway_id\n        required: true\n        schema:\n          type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              items:\n                $ref: '#/components/schemas/TagUpdateRequest'\n              type: array\n        description: Array of tags to be inserted/updated.\n        required: true\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/LoraGateway'\n          description: The LoRa gateway's detailed information after the update.\n        \"404\":\n          description: The specified LoRa gateway does not exist.\n      security:\n      - api_key: []\n        api_token: []\n      summary: Bulk Insert or Update LoRa gateway Tags.\n      tags:\n      - LoraGateway\n      x-soracom-cli:\n      - lora-gateways put-tags\n  /lora_gateways/{gateway_id}/tags/{tag_name}:\n    delete:\n      description: Deletes a tag from the specified LoRa gateway.\n      operationId: deleteLoraGatewayTag\n      parameters:\n      - description: ID of the target LoRa gateway.\n        in: path\n        name: gateway_id\n        required: true\n        schema:\n          type: string\n      - description: Name of tag to be deleted. (This will be part of a URL path,\n          so it needs to be percent-encoded. In JavaScript, specify the name after\n          it has been encoded using encodeURIComponent().)\n        in: path\n        name: tag_name\n        required: true\n        schema:\n          type: string\n      responses:\n        \"204\":\n          description: Deletion of specified tag complete.\n        \"404\":\n          description: The specified LoRa gateway or the tag does not exist.\n      security:\n      - api_key: []\n        api_token: []\n      summary: Delete LoRa gateway tag.\n      tags:\n      - LoraGateway\n      x-soracom-cli:\n      - lora-gateways delete-tag\n  /lora_gateways/{gateway_id}/terminate:\n    post:\n      description: Terminates the specified LoRa gateway\n      operationId: terminateLoraGateway\n      parameters:\n      - description: Device ID of the target LoRa gateway.\n        in: path\n        name: gateway_id\n        required: true\n        schema:\n          type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/LoraGateway'\n          description: The LoRa gateway's detailed information after the update.\n        \"404\":\n          description: The specified LoRa gateway does not exist.\n      security:\n      - api_key: []\n        api_token: []\n      summary: Terminate LoRa gateway.\n      tags:\n      - LoraGateway\n      x-soracom-cli:\n      - lora-gateways terminate\n  /lora_gateways/{gateway_id}/unset_network_set:\n    post:\n      description: Unset network set ID of the specified LoRa gateway.\n      operationId: unsetLoraNetworkSet\n      parameters:\n      - description: ID of the target LoRa gateway.\n        in: path\n        name: gateway_id\n        required: true\n        schema:\n          type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/LoraGateway'\n          description: The LoRa gateway's detailed information after the update.\n        \"404\":\n          description: The specified LoRa gateway does not exist.\n      security:\n      - api_key: []\n        api_token: []\n      summary: Unset Network Set ID of LoRa gateway.\n      tags:\n      - LoraGateway\n      x-soracom-cli:\n      - lora-gateways unset-network-set\n  /lora_network_sets:\n    get:\n      description: Returns a list of LoRa network sets that match certain criteria.\n        If the total number of LoRa network sets does not fit in one page, a URL for\n        accessing the next page is returned in the 'Link' header of the response.\n      operationId: listLoraNetworkSets\n      parameters:\n      - description: Tag name for filtering the search (exact match).\n        in: query\n        name: tag_name\n        required: false\n        schema:\n          type: string\n      - description: Tag search string for filtering the search. Required when `tag_name`\n          has been specified.\n        in: query\n        name: tag_value\n        required: false\n        schema:\n          type: string\n      - description: Tag match mode.\n        in: query\n        name: tag_value_match_mode\n        required: false\n        schema:\n          default: exact\n          enum:\n          - exact\n          - prefix\n          type: string\n      - description: Maximum number of LoRa devices to retrieve.\n        in: query\n        name: limit\n        required: false\n        schema:\n          format: int32d\n          type: integer\n      - description: The ID of the last network set retrieved on the current page.\n          By specifying this parameter, you can continue to retrieve the list from\n          the next device onward.\n        in: query\n        name: last_evaluated_key\n        required: false\n        schema:\n          type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: '#/components/schemas/LoraNetworkSet'\n                type: array\n          description: A list of LoRa network sets.\n      security:\n      - api_key: []\n        api_token: []\n      summary: List LoRa Network Sets.\n      tags:\n      - LoraNetworkSet\n      x-soracom-cli:\n      - lora-network-sets list\n      x-soracom-cli-pagination:\n        request:\n          param: last_evaluated_key\n        response:\n          header: x-soracom-next-key\n    post:\n      description: Creates a specified LoRa network set\n      operationId: createLoraNetworkSet\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/LoraNetworkSet'\n        description: Additional metadata such as tags for a LoRa network set to create.\n        required: true\n      responses:\n        \"201\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/LoraNetworkSet'\n          description: A LoRa network set was created.\n      security:\n      - api_key: []\n        api_token: []\n      summary: Create a LoRa network set.\n      tags:\n      - LoraNetworkSet\n      x-soracom-cli:\n      - lora-network-sets create\n  /lora_network_sets/{ns_id}:\n    delete:\n      description: Deletes the specified LoRa network set\n      operationId: deleteLoraNetworkSet\n      parameters:\n      - description: ID of the target LoRa network set.\n        in: path\n        name: ns_id\n        required: true\n        schema:\n          type: string\n      responses:\n        \"204\":\n          description: Successfully deleted.\n        \"404\":\n          description: The specified LoRa network set does not exist.\n      security:\n      - api_key: []\n        api_token: []\n      summary: Delete LoRa network set.\n      tags:\n      - LoraNetworkSet\n      x-soracom-cli:\n      - lora-network-sets delete\n    get:\n      description: Returns information about the specified LoRa network set.\n      operationId: getLoraNetworkSet\n      parameters:\n      - description: ID of the target LoRa network set.\n        in: path\n        name: ns_id\n        required: true\n        schema:\n          type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/LoraNetworkSet'\n          description: The LoRa network set's detailed information.\n        \"404\":\n          description: The specified LoRa network set does not exist.\n      security:\n      - api_key: []\n        api_token: []\n      summary: Get LoRa network set.\n      tags:\n      - LoraNetworkSet\n      x-soracom-cli:\n      - lora-network-sets get\n  /lora_network_sets/{ns_id}/add_permission:\n    post:\n      description: Adds permission to allow another operator to use the network set.\n      operationId: addPermissionToLoraNetworkSet\n      parameters:\n      - description: ID of the target LoRa network set.\n        in: path\n        name: ns_id\n        required: true\n        schema:\n          type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/UpdatePermissionRequest'\n        description: ID of the operator to be added to the list of allowed operators.\n        required: true\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/LoraNetworkSet'\n          description: Permission added to the network set.\n      security:\n      - api_key: []\n        api_token: []\n      summary: Adds permission to a LoRa network set.\n      tags:\n      - LoraNetworkSet\n      x-soracom-cli:\n      - lora-network-sets add-permission\n  /lora_network_sets/{ns_id}/gateways:\n    get:\n      description: Returns a list of LoRa gateways that belong to the specified network\n        set. If the total number of LoRa gateways does not fit in one page, a URL\n        for accessing the next page is returned in the 'Link' header of the response.\n      operationId: listGatewaysInLoraNetworkSet\n      parameters:\n      - description: ID of the target LoRa network set.\n        in: path\n        name: ns_id\n        required: true\n        schema:\n          type: string\n      - description: Maximum number of LoRa gateways to retrieve.\n        in: query\n        name: limit\n        required: false\n        schema:\n          format: int32d\n          type: integer\n      - description: The ID of the last gateway retrieved on the current page. By\n          specifying this parameter, you can continue to retrieve the list from the\n          next device onward.\n        in: query\n        name: last_evaluated_key\n        required: false\n        schema:\n          type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: '#/components/schemas/LoraGateway'\n                type: array\n          description: A list of LoRa gateways.\n        \"404\":\n          description: The specified network set does not exist.\n      security:\n      - api_key: []\n        api_token: []\n      summary: List LoRa Gateways in a Network Set.\n      tags:\n      - LoraNetworkSet\n      x-soracom-cli:\n      - lora-network-sets list-gateways\n      x-soracom-cli-pagination:\n        request:\n          param: last_evaluated_key\n        response:\n          header: x-soracom-next-key\n  /lora_network_sets/{ns_id}/revoke_permission:\n    post:\n      description: Revokes a permission and removes an operator from the list of allowed\n        operators in the network set.\n      operationId: revokePermissionFromLoraNetworkSet\n      parameters:\n      - description: ID of the target LoRa network set.\n        in: path\n        name: ns_id\n        required: true\n        schema:\n          type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/UpdatePermissionRequest'\n        description: ID of the operator to be added to the list of allowed operators.\n        required: true\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/LoraNetworkSet'\n          description: Permission revoked from the network set.\n      security:\n      - api_key: []\n        api_token: []\n      summary: Revokes a permission from a LoRa network set.\n      tags:\n      - LoraNetworkSet\n      x-soracom-cli:\n      - lora-network-sets revoke-permission\n  /lora_network_sets/{ns_id}/tags:\n    put:\n      description: Inserts/updates tags for the specified LoRa network set.\n      operationId: putLoraNetworkSetTags\n      parameters:\n      - description: ID of the target LoRa network set.\n        in: path\n        name: ns_id\n        required: true\n        schema:\n          type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              items:\n                $ref: '#/components/schemas/TagUpdateRequest'\n              type: array\n        description: Array of tags to be inserted/updated.\n        required: true\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/LoraNetworkSet'\n          description: The LoRa network set's detailed information after the update.\n        \"404\":\n          description: The specified LoRa network set does not exist.\n      security:\n      - api_key: []\n        api_token: []\n      summary: Bulk Insert or Update LoRa network set tags.\n      tags:\n      - LoraNetworkSet\n  /lora_network_sets/{ns_id}/tags/{tag_name}:\n    delete:\n      description: Deletes a tag from the specified LoRa network set.\n      operationId: deleteLoraNetworkSetTag\n      parameters:\n      - description: ID of the target LoRa network set.\n        in: path\n        name: ns_id\n        required: true\n        schema:\n          type: string\n      - description: Name of tag to be deleted. (This will be part of a URL path,\n          so it needs to be percent-encoded. In JavaScript, specify the name after\n          it has been encoded using encodeURIComponent().)\n        in: path\n        name: tag_name\n        required: true\n        schema:\n          type: string\n      responses:\n        \"204\":\n          description: Deletion of specified tag complete.\n        \"404\":\n          description: The specified LoRa network set or the tag does not exist.\n      security:\n      - api_key: []\n        api_token: []\n      summary: Delete LoRa network set tag.\n      tags:\n      - LoraNetworkSet\n      x-soracom-cli:\n      - lora-network-sets delete-tag\n  /operators:\n    post:\n      description: Makes a request to create a new operator. An e-mail is sent to\n        the e-mail address specified in the parameters, containing a one-time token\n        for verifying the operator’s registration.\n      operationId: createOperator\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/RegisterOperatorsRequest'\n        description: email, password\n        required: true\n      responses:\n        \"201\":\n          description: Operator created.\n        \"400\":\n          description: The e-mail address is already registered or the password has\n            an incorrect format.\n      security:\n      - api_key: []\n        api_token: []\n      summary: Create Operator.\n      tags:\n      - Operator\n      x-soracom-cli:\n      - operator create\n  /operators/{operator_id}:\n    get:\n      description: Returns information about the operator.\n      operationId: getOperator\n      parameters:\n      - description: operator_id\n        in: path\n        name: operator_id\n        required: true\n        schema:\n          type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GetOperatorResponse'\n          description: OK.\n        \"400\":\n          description: Invalid Operator Id\n      security:\n      - api_key: []\n        api_token: []\n      summary: Get Operator.\n      tags:\n      - Operator\n      x-soracom-cli:\n      - operator get\n  /operators/{operator_id}/auth_keys:\n    get:\n      description: Returns the operator's AuthKey list.\n      operationId: listOperatorAuthKeys\n      parameters:\n      - description: operator_id\n        in: path\n        name: operator_id\n        required: true\n        schema:\n          type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: '#/components/schemas/AuthKeyResponse'\n                type: array\n          description: OK.\n      security:\n      - api_key: []\n        api_token: []\n      summary: List Operator AuthKeys.\n      tags:\n      - Operator\n      x-soracom-cli:\n      - operator auth-keys list\n    post:\n      description: Generates an AuthKey for the operator.\n      operationId: generateOperatorAuthKey\n      parameters:\n      - description: operator_id\n        in: path\n        name: operator_id\n        required: true\n        schema:\n          type: string\n      responses:\n        \"201\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GenerateOperatorsAuthKeyResponse'\n          description: AuthKey was generated.\n      security:\n      - api_key: []\n        api_token: []\n      summary: Generate Operator AuthKey.\n      tags:\n      - Operator\n      x-soracom-cli:\n      - operator auth-keys generate\n  /operators/{operator_id}/auth_keys/{auth_key_id}:\n    delete:\n      description: Deletes an AuthKey from the operator.\n      operationId: deleteOperatorAuthKey\n      parameters:\n      - description: operator_id\n        in: path\n        name: operator_id\n        required: true\n        schema:\n          type: string\n      - description: auth_key_id\n        in: path\n        name: auth_key_id\n        required: true\n        schema:\n          type: string\n      responses:\n        \"204\":\n          description: AuthKey was deleted.\n      security:\n      - api_key: []\n        api_token: []\n      summary: Delete Operator AuthKey.\n      tags:\n      - Operator\n      x-soracom-cli:\n      - operator auth-keys delete\n  /operators/{operator_id}/company_information:\n    get:\n      description: Gets the operator's company information.\n      operationId: getCompanyInformation\n      parameters:\n      - description: operator_id\n        in: path\n        name: operator_id\n        required: true\n        schema:\n          type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CompanyInformationModel'\n          description: OK.\n      security:\n      - api_key: []\n        api_token: []\n      summary: Get company information.\n      tags:\n      - Operator\n      x-soracom-cli:\n      - operator get-company-information\n    post:\n      description: Creates the operator's company information.\n      operationId: createCompanyInformation\n      parameters:\n      - description: operator_id\n        in: path\n        name: operator_id\n        required: true\n        schema:\n          type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/CompanyInformationModel'\n        description: model\n        required: true\n      responses:\n        \"201\":\n          description: Created.\n      security:\n      - api_key: []\n        api_token: []\n      summary: Create company information.\n      tags:\n      - Operator\n      x-soracom-cli:\n      - operator create-company-information\n    put:\n      description: Updates the operator's company information.\n      operationId: updateCompanyInformation\n      parameters:\n      - description: operator_id\n        in: path\n        name: operator_id\n        required: true\n        schema:\n          type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/CompanyInformationModel'\n        description: model\n        required: true\n      responses:\n        \"200\":\n          description: OK.\n      security:\n      - api_key: []\n        api_token: []\n      summary: Update company information.\n      tags:\n      - Operator\n      x-soracom-cli:\n      - operator update-company-information\n  /operators/{operator_id}/contracts:\n    post:\n      description: Adds the operator's contract.\n      operationId: addOperatorContract\n      parameters:\n      - description: operator_id\n        in: path\n        name: operator_id\n        required: true\n        schema:\n          type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/ContractUpdatingRequest'\n        description: model\n        required: true\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ContractUpdatedResponse'\n          description: OK.\n      security:\n      - api_key: []\n        api_token: []\n      summary: Add Operator Contract.\n      tags:\n      - Operator\n      x-soracom-cli:\n      - operator add-contract\n  /operators/{operator_id}/contracts/{contract_name}:\n    delete:\n      description: Deletes the operator's contract.\n      operationId: deleteOperatorContract\n      parameters:\n      - description: operator_id\n        in: path\n        name: operator_id\n        required: true\n        schema:\n          type: string\n      - description: contract_name\n        in: path\n        name: contract_name\n        required: true\n        schema:\n          type: string\n      responses:\n        \"204\":\n          description: No Content.\n      security:\n      - api_key: []\n        api_token: []\n      summary: Delete Operator Contract.\n      tags:\n      - Operator\n      x-soracom-cli:\n      - operator delete-contract\n  /operators/{operator_id}/coverage_type/{coverage_type}:\n    post:\n      description: Adds the operator's coverage type.\n      operationId: addCoverageType\n      parameters:\n      - description: operator_id\n        in: path\n        name: operator_id\n        required: true\n        schema:\n          type: string\n      - description: coverage_type\n        in: path\n        name: coverage_type\n        required: true\n        schema:\n          type: string\n      responses:\n        \"201\":\n          description: Created.\n      security:\n      - api_key: []\n        api_token: []\n      summary: Add coverage type.\n      tags:\n      - Operator\n      x-soracom-cli:\n      - operator add-coverage-type\n  /operators/{operator_id}/emails:\n    get:\n      description: Returns a list of email addresses.\n      operationId: listEmails\n      parameters:\n      - description: operator_id\n        in: path\n        name: operator_id\n        required: true\n        schema:\n          type: string\n      responses:\n        \"200\":\n          content:\n            application/json;charset=UTF-8:\n              schema:\n                items:\n                  $ref: '#/components/schemas/EmailsModel'\n                type: array\n          description: OK.\n        \"400\":\n          description: |\n            This operation is allowed only for root user.\n      security:\n      - api_key: []\n        api_token: []\n      summary: List email addresses\n      tags:\n      - Email\n      x-soracom-cli:\n      - emails list\n  /operators/{operator_id}/emails/{email_id}:\n    delete:\n      description: Deletes an email address.\n      operationId: deleteEmail\n      parameters:\n      - description: operator_id\n        in: path\n        name: operator_id\n        required: true\n        schema:\n          type: string\n      - description: email_id\n        in: path\n        name: email_id\n        required: true\n        schema:\n          type: string\n      responses:\n        \"204\":\n          description: OK\n      security:\n      - api_key: []\n        api_token: []\n      summary: Delete email address\n      tags:\n      - Email\n      x-soracom-cli:\n      - emails delete\n    get:\n      description: Returns an email address.\n      operationId: getEmail\n      parameters:\n      - description: operator_id\n        in: path\n        name: operator_id\n        required: true\n        schema:\n          type: string\n      - description: email_id\n        in: path\n        name: email_id\n        required: true\n        schema:\n          type: string\n      responses:\n        \"200\":\n          content:\n            application/json;charset=UTF-8:\n              schema:\n                $ref: '#/components/schemas/EmailsModel'\n          description: OK.\n      security:\n      - api_key: []\n        api_token: []\n      summary: Get email address\n      tags:\n      - Email\n      x-soracom-cli:\n      - emails get\n  /operators/{operator_id}/individual_information:\n    get:\n      description: Gets the operator's individual information.\n      operationId: getIndividualInformation\n      parameters:\n      - description: operator_id\n        in: path\n        name: operator_id\n        required: true\n        schema:\n          type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/IndividualInformationModel'\n          description: OK.\n      security:\n      - api_key: []\n        api_token: []\n      summary: Get individual information.\n      tags:\n      - Operator\n      x-soracom-cli:\n      - operator get-individual-information\n    post:\n      description: Creates the operator's individual information.\n      operationId: createIndividualInformation\n      parameters:\n      - description: operator_id\n        in: path\n        name: operator_id\n        required: true\n        schema:\n          type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/IndividualInformationModel'\n        description: model\n        required: true\n      responses:\n        \"201\":\n          description: Created.\n      security:\n      - api_key: []\n        api_token: []\n      summary: Create individual information.\n      tags:\n      - Operator\n      x-soracom-cli:\n      - operator create-individual-information\n    put:\n      description: Updates the operator's individual information.\n      operationId: updateIndividualInformation\n      parameters:\n      - description: operator_id\n        in: path\n        name: operator_id\n        required: true\n        schema:\n          type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/IndividualInformationModel'\n        description: model\n        required: true\n      responses:\n        \"200\":\n          description: OK.\n      security:\n      - api_key: []\n        api_token: []\n      summary: Update individual information.\n      tags:\n      - Operator\n      x-soracom-cli:\n      - operator update-individual-information\n  /operators/{operator_id}/mfa:\n    delete:\n      description: Revokes operator's MFA without backup codes.\n      operationId: revokeMFA\n      parameters:\n      - description: operator_id\n        in: path\n        name: operator_id\n        required: true\n        schema:\n          type: string\n      responses:\n        \"204\":\n          description: Revoked\n        \"400\":\n          description: Bad request\n      security:\n      - api_key: []\n        api_token: []\n      summary: Revoke Operator's MFA.\n      tags:\n      - Operator\n      x-soracom-cli:\n      - operator revoke-mfa\n    get:\n      description: |-\n        Gets operator's MFA status. The MFA status is one of `ACTIVE`,\n        `INACTIVE` or `UNCONFIRMED`.\n      operationId: getMFAStatus\n      parameters:\n      - description: operator_id\n        in: path\n        name: operator_id\n        required: true\n        schema:\n          type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/MFAStatusOfUseResponse'\n          description: OK\n        \"400\":\n          description: Bad request\n      security:\n      - api_key: []\n        api_token: []\n      summary: Get Operator's MFA Status.\n      tags:\n      - Operator\n      x-soracom-cli:\n      - operator get-mfa-status\n    post:\n      description: Enables operator's MFA. After calling this APIg, it should be verified\n        by calling `Operator:verifyMFA` API.\n      operationId: enableMFA\n      parameters:\n      - description: operator_id\n        in: path\n        name: operator_id\n        required: true\n        schema:\n          type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/EnableMFAOTPResponse'\n          description: OK\n        \"400\":\n          description: Bad request\n      security:\n      - api_key: []\n        api_token: []\n      summary: Enable Operator's MFA.\n      tags:\n      - Operator\n      x-soracom-cli:\n      - operator enable-mfa\n  /operators/{operator_id}/mfa/verify:\n    post:\n      description: Verifies operator's MFA with OTP code after calling `Operator:enableMFA`\n        API. MFA will not be activated unless the MFA OTP is verified with this API.  Backup\n        codes are going to be returned in the response. These codes must be securely\n        stored.\n      operationId: verifyMFA\n      parameters:\n      - description: operator_id\n        in: path\n        name: operator_id\n        required: true\n        schema:\n          type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/MFAAuthenticationRequest'\n        description: request\n        required: true\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/OperatorMFAVerifyingResponse'\n          description: OK\n        \"400\":\n          description: Bad request\n      security:\n      - api_key: []\n        api_token: []\n      summary: Verify Operator's MFA OTP Code.\n      tags:\n      - Operator\n      x-soracom-cli:\n      - operator verify-mfa-otp\n  /operators/{operator_id}/password:\n    post:\n      description: Updates the operator's password.\n      operationId: updateOperatorPassword\n      parameters:\n      - description: operator_id\n        in: path\n        name: operator_id\n        required: true\n        schema:\n          type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/UpdatePasswordRequest'\n        description: current password, new password\n        required: true\n      responses:\n        \"200\":\n          description: OK.\n        \"400\":\n          description: Invalid password.\n      security:\n      - api_key: []\n        api_token: []\n      summary: Update Operator Password.\n      tags:\n      - Operator\n      x-soracom-cli:\n      - operator update-password\n  /operators/{operator_id}/roles:\n    get:\n      description: Returns a list of roles.\n      operationId: listRoles\n      parameters:\n      - description: operator_id\n        in: path\n        name: operator_id\n        required: true\n        schema:\n          type: string\n      responses:\n        \"200\":\n          content:\n            application/json;charset=UTF-8:\n              schema:\n                items:\n                  $ref: '#/components/schemas/ListRolesResponse'\n                type: array\n          description: OK.\n      security:\n      - api_key: []\n        api_token: []\n      summary: List Roles.\n      tags:\n      - Role\n      x-soracom-cli:\n      - roles list\n  /operators/{operator_id}/roles/{role_id}:\n    delete:\n      description: Deletes a role.\n      operationId: deleteRole\n      parameters:\n      - description: operator_id\n        in: path\n        name: operator_id\n        required: true\n        schema:\n          type: string\n      - description: role_id\n        in: path\n        name: role_id\n        required: true\n        schema:\n          type: string\n      responses:\n        \"204\":\n          description: The role was deleted.\n      security:\n      - api_key: []\n        api_token: []\n      summary: Delete Role.\n      tags:\n      - Role\n      x-soracom-cli:\n      - roles delete\n    get:\n      description: Retrieves a role.\n      operationId: getRole\n      parameters:\n      - description: operator_id\n        in: path\n        name: operator_id\n        required: true\n        schema:\n          type: string\n      - description: role_id\n        in: path\n        name: role_id\n        required: true\n        schema:\n          type: string\n      responses:\n        \"200\":\n          content:\n            application/json;charset=UTF-8:\n              schema:\n                $ref: '#/components/schemas/RoleResponse'\n          description: OK.\n      security:\n      - api_key: []\n        api_token: []\n      summary: Get Role.\n      tags:\n      - Role\n      x-soracom-cli:\n      - roles get\n    post:\n      description: Adds a new role.\n      operationId: createRole\n      parameters:\n      - description: operator_id\n        in: path\n        name: operator_id\n        required: true\n        schema:\n          type: string\n      - description: role_id\n        in: path\n        name: role_id\n        required: true\n        schema:\n          type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/CreateOrUpdateRoleRequest'\n        description: permission\n        required: true\n      responses:\n        \"200\":\n          content:\n            application/json;charset=UTF-8:\n              schema:\n                $ref: '#/components/schemas/CreateRoleResponse'\n          description: OK.\n      security:\n      - api_key: []\n        api_token: []\n      summary: Create Role.\n      tags:\n      - Role\n      x-soracom-cli:\n      - roles create\n    put:\n      description: Edits a role.\n      operationId: updateRole\n      parameters:\n      - description: operator_id\n        in: path\n        name: operator_id\n        required: true\n        schema:\n          type: string\n      - description: role_id\n        in: path\n        name: role_id\n        required: true\n        schema:\n          type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/CreateOrUpdateRoleRequest'\n        description: permission\n        required: true\n      responses:\n        \"200\":\n          description: OK\n      security:\n      - api_key: []\n        api_token: []\n      summary: Update Role.\n      tags:\n      - Role\n      x-soracom-cli:\n      - roles update\n  /operators/{operator_id}/roles/{role_id}/users:\n    get:\n      description: Retrieves a list of users attached to a role.\n      operationId: listRoleAttachedUsers\n      parameters:\n      - description: operator_id\n        in: path\n        name: operator_id\n        required: true\n        schema:\n          type: string\n      - description: role_id\n        in: path\n        name: role_id\n        required: true\n        schema:\n          type: string\n      responses:\n        \"200\":\n          content:\n            application/json;charset=UTF-8:\n              schema:\n                items:\n                  $ref: '#/components/schemas/UserDetailResponse'\n                type: array\n          description: OK.\n      security:\n      - api_key: []\n        api_token: []\n      summary: List Role Attached Users.\n      tags:\n      - Role\n      x-soracom-cli:\n      - roles list-users\n  /operators/{operator_id}/shipping_addresses:\n    get:\n      description: Returns a list of shipping addresses.\n      operationId: listShippingAddresses\n      parameters:\n      - description: operator_id\n        in: path\n        name: operator_id\n        required: true\n        schema:\n          type: string\n      responses:\n        \"200\":\n          content:\n            application/json;charset=UTF-8:\n              schema:\n                $ref: '#/components/schemas/ListShippingAddressResponse'\n          description: OK.\n      security:\n      - api_key: []\n        api_token: []\n      summary: List shipping addresses.\n      tags:\n      - ShippingAddress\n      x-soracom-cli:\n      - shipping-addresses list\n    post:\n      description: Creates a new shipping address.\n      operationId: createShippingAddress\n      parameters:\n      - description: operator_id\n        in: path\n        name: operator_id\n        required: true\n        schema:\n          type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/ShippingAddressModel'\n        description: model\n        required: true\n      responses:\n        \"201\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GetShippingAddressResponse'\n          description: Shipping address was registered.\n      security:\n      - api_key: []\n        api_token: []\n      summary: Create shipping address.\n      tags:\n      - ShippingAddress\n      x-soracom-cli:\n      - shipping-addresses create\n  /operators/{operator_id}/shipping_addresses/{shipping_address_id}:\n    delete:\n      description: Deletes a shipping address.\n      operationId: deleteShippingAddress\n      parameters:\n      - description: operator_id\n        in: path\n        name: operator_id\n        required: true\n        schema:\n          type: string\n      - description: shipping_address_id\n        in: path\n        name: shipping_address_id\n        required: true\n        schema:\n          type: string\n      responses:\n        \"200\":\n          description: OK\n      security:\n      - api_key: []\n        api_token: []\n      summary: Delete shipping address.\n      tags:\n      - ShippingAddress\n      x-soracom-cli:\n      - shipping-addresses delete\n    get:\n      description: Returns a shipping address.\n      operationId: getShippingAddress\n      parameters:\n      - description: operator_id\n        in: path\n        name: operator_id\n        required: true\n        schema:\n          type: string\n      - description: shipping_address_id\n        in: path\n        name: shipping_address_id\n        required: true\n        schema:\n          type: string\n      responses:\n        \"200\":\n          content:\n            application/json;charset=UTF-8:\n              schema:\n                $ref: '#/components/schemas/GetShippingAddressResponse'\n          description: OK.\n      security:\n      - api_key: []\n        api_token: []\n      summary: Get shipping address.\n      tags:\n      - ShippingAddress\n      x-soracom-cli:\n      - shipping-addresses get\n    put:\n      description: Updates a shipping address.\n      operationId: updateShippingAddress\n      parameters:\n      - description: Operator ID\n        in: path\n        name: operator_id\n        required: true\n        schema:\n          type: string\n      - description: shipping_address_id\n        in: path\n        name: shipping_address_id\n        required: true\n        schema:\n          type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/ShippingAddressModel'\n        description: model\n        required: true\n      responses:\n        \"200\":\n          description: OK\n      security:\n      - api_key: []\n        api_token: []\n      summary: Update shipping address.\n      tags:\n      - ShippingAddress\n      x-soracom-cli:\n      - shipping-addresses update\n  /operators/{operator_id}/support/token:\n    post:\n      description: Returns a token for accessing the support console.\n      operationId: generateSupportToken\n      parameters:\n      - description: operator_id\n        in: path\n        name: operator_id\n        required: true\n        schema:\n          type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/SupportTokenResponse'\n          description: OK.\n        \"400\":\n          description: Invalid Operator Id\n        \"403\":\n          description: Invalid token.\n      security:\n      - api_key: []\n        api_token: []\n      summary: Generate Token for Support Console.\n      tags:\n      - Operator\n      x-soracom-cli:\n      - operator get-support-token\n  /operators/{operator_id}/system_notifications:\n    get:\n      description: Returns a list of system notifications.\n      operationId: listSystemNotifications\n      parameters:\n      - description: operator_id\n        in: path\n        name: operator_id\n        required: true\n        schema:\n          type: string\n      responses:\n        \"200\":\n          content:\n            application/json;charset=UTF-8:\n              schema:\n                items:\n                  $ref: '#/components/schemas/SystemNotificationsModel'\n                type: array\n          description: OK.\n      security:\n      - api_key: []\n        api_token: []\n      summary: List system notifications\n      tags:\n      - SystemNotification\n      x-soracom-cli:\n      - system-notifications list\n  /operators/{operator_id}/system_notifications/{type}:\n    delete:\n      description: Deletes a system notification.\n      operationId: deleteSystemNotification\n      parameters:\n      - description: operator_id\n        in: path\n        name: operator_id\n        required: true\n        schema:\n          type: string\n      - description: system notification type\n        in: path\n        name: type\n        required: true\n        schema:\n          enum:\n          - recovery\n          - billing\n          - support\n          type: string\n      responses:\n        \"204\":\n          description: OK\n      security:\n      - api_key: []\n        api_token: []\n      summary: Delete system notification\n      tags:\n      - SystemNotification\n      x-soracom-cli:\n      - system-notifications delete\n    get:\n      description: Returns a system notification.\n      operationId: getSystemNotification\n      parameters:\n      - description: operator_id\n        in: path\n        name: operator_id\n        required: true\n        schema:\n          type: string\n      - description: system notification type\n        in: path\n        name: type\n        required: true\n        schema:\n          enum:\n          - primary\n          - recovery\n          - billing\n          - support\n          type: string\n      responses:\n        \"200\":\n          content:\n            application/json;charset=UTF-8:\n              schema:\n                $ref: '#/components/schemas/SystemNotificationsModel'\n          description: OK.\n      security:\n      - api_key: []\n        api_token: []\n      summary: Get system notification\n      tags:\n      - SystemNotification\n      x-soracom-cli:\n      - system-notifications get\n    post:\n      description: Sets a system notification.\n      operationId: setSystemNotification\n      parameters:\n      - description: operator_id\n        in: path\n        name: operator_id\n        required: true\n        schema:\n          type: string\n      - description: system notification type\n        in: path\n        name: type\n        required: true\n        schema:\n          enum:\n          - primary\n          - recovery\n          - billing\n          - support\n          type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/SetSystemNotificationsRequest'\n        description: request\n        required: true\n      responses:\n        \"200\":\n          content:\n            application/json;charset=UTF-8:\n              schema:\n                $ref: '#/components/schemas/SystemNotificationsModel'\n          description: OK\n      security:\n      - api_key: []\n        api_token: []\n      summary: Set system notification\n      tags:\n      - SystemNotification\n      x-soracom-cli:\n      - system-notifications set\n  /operators/{operator_id}/token:\n    post:\n      description: Generates a new API token. If you insert the current API token\n        into the header and make a request, a response is returned containing the\n        new API token. You can then use the new API token in future requests.\n      operationId: generateAuthToken\n      parameters:\n      - description: operator_id\n        in: path\n        name: operator_id\n        required: true\n        schema:\n          type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/GenerateTokenRequest'\n        description: token timeout seconds\n        required: true\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GenerateTokenResponse'\n          description: OK.\n        \"400\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/APICallError'\n          description: There was an error in the request or the specified token has\n            already expired. (In the latter case, you will need to use the /auth API\n            to do authentication once again.)\n      security:\n      - api_key: []\n        api_token: []\n      summary: Generate Authentication Token.\n      tags:\n      - Operator\n      x-soracom-cli:\n      - operator generate-api-token\n  /operators/{operator_id}/tokens:\n    delete:\n      description: Revoke all API keys and API tokens that were generated by the root\n        user. Once revoked, the API key and API token cannot be used to call the SORACOM\n        API, regardless of their expiration time.\n      operationId: revokeOperatorAuthTokens\n      parameters:\n      - description: Operator ID\n        in: path\n        name: operator_id\n        required: true\n        schema:\n          type: string\n      responses:\n        \"204\":\n          description: Successfully revoked all API keys and API tokens.\n        \"400\":\n          description: Wrong operator ID was specified.\n      security:\n      - api_key: []\n        api_token: []\n      summary: Revoke all API keys and API tokens that were generated by the root\n        user.\n      tags:\n      - Operator\n      x-soracom-cli:\n      - operator revoke-operator-auth-tokens\n  /operators/{operator_id}/users:\n    get:\n      description: Returns a list of SAM users.\n      operationId: listUsers\n      parameters:\n      - description: operator_id\n        in: path\n        name: operator_id\n        required: true\n        schema:\n          type: string\n      responses:\n        \"200\":\n          content:\n            application/json;charset=UTF-8:\n              schema:\n                items:\n                  $ref: '#/components/schemas/UserDetailResponse'\n                type: array\n          description: OK.\n      security:\n      - api_key: []\n        api_token: []\n      summary: List Users.\n      tags:\n      - User\n      x-soracom-cli:\n      - users list\n  /operators/{operator_id}/users/{user_name}:\n    delete:\n      description: Deletes the SAM user.\n      operationId: deleteUser\n      parameters:\n      - description: operator_id\n        in: path\n        name: operator_id\n        required: true\n        schema:\n          type: string\n      - description: user_name\n        in: path\n        name: user_name\n        required: true\n        schema:\n          type: string\n      responses:\n        \"204\":\n          description: The SAM user was deleted.\n        \"404\":\n          content:\n            application/json;charset=UTF-8:\n              schema:\n                $ref: '#/components/schemas/APICallError'\n          description: SAM User not found.\n      security:\n      - api_key: []\n        api_token: []\n      summary: Delete User.\n      tags:\n      - User\n      x-soracom-cli:\n      - users delete\n    get:\n      description: Returns a SAM user.\n      operationId: getUser\n      parameters:\n      - description: operator_id\n        in: path\n        name: operator_id\n        required: true\n        schema:\n          type: string\n      - description: user_name\n        in: path\n        name: user_name\n        required: true\n        schema:\n          type: string\n      responses:\n        \"200\":\n          content:\n            application/json;charset=UTF-8:\n              schema:\n                $ref: '#/components/schemas/UserDetailResponse'\n          description: OK.\n      security:\n      - api_key: []\n        api_token: []\n      summary: Get User.\n      tags:\n      - User\n      x-soracom-cli:\n      - users get\n    post:\n      description: Adds a new SAM user.\n      operationId: createUser\n      parameters:\n      - description: operator_id\n        in: path\n        name: operator_id\n        required: true\n        schema:\n          type: string\n      - description: user_name\n        in: path\n        name: user_name\n        required: true\n        schema:\n          type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/CreateUserRequest'\n        description: description\n        required: true\n      responses:\n        \"201\":\n          description: A new user was added.\n      security:\n      - api_key: []\n        api_token: []\n      summary: Create User.\n      tags:\n      - User\n      x-soracom-cli:\n      - users create\n    put:\n      description: Updates the SAM user.\n      operationId: updateUser\n      parameters:\n      - description: operator_id\n        in: path\n        name: operator_id\n        required: true\n        schema:\n          type: string\n      - description: user_name\n        in: path\n        name: user_name\n        required: true\n        schema:\n          type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/UpdateUserRequest'\n        description: description\n        required: true\n      responses:\n        \"200\":\n          description: OK\n        \"404\":\n          content:\n            application/json;charset=UTF-8:\n              schema:\n                $ref: '#/components/schemas/APICallError'\n          description: SAM User not found.\n      security:\n      - api_key: []\n        api_token: []\n      summary: Update User.\n      tags:\n      - User\n      x-soracom-cli:\n      - users update\n  /operators/{operator_id}/users/{user_name}/auth_keys:\n    get:\n      description: Returns the SAM user's AuthKey list.\n      operationId: listUserAuthKeys\n      parameters:\n      - description: operator_id\n        in: path\n        name: operator_id\n        required: true\n        schema:\n          type: string\n      - description: user_name\n        in: path\n        name: user_name\n        required: true\n        schema:\n          type: string\n      responses:\n        \"200\":\n          content:\n            application/json;charset=UTF-8:\n              schema:\n                items:\n                  $ref: '#/components/schemas/AuthKeyResponse'\n                type: array\n          description: OK.\n      security:\n      - api_key: []\n        api_token: []\n      summary: List User AuthKeys.\n      tags:\n      - User\n      x-soracom-cli:\n      - users auth-keys list\n    post:\n      description: Generates an AuthKey for the SAM user.\n      operationId: generateUserAuthKey\n      parameters:\n      - description: operator_id\n        in: path\n        name: operator_id\n        required: true\n        schema:\n          type: string\n      - description: user_name\n        in: path\n        name: user_name\n        required: true\n        schema:\n          type: string\n      responses:\n        \"200\":\n          content:\n            application/json;charset=UTF-8:\n              schema:\n                $ref: '#/components/schemas/GenerateUserAuthKeyResponse'\n          description: OK.\n      security:\n      - api_key: []\n        api_token: []\n      summary: Generate AuthKey.\n      tags:\n      - User\n      x-soracom-cli:\n      - users auth-keys generate\n  /operators/{operator_id}/users/{user_name}/auth_keys/{auth_key_id}:\n    delete:\n      description: Deletes an AuthKey from the SAM user.\n      operationId: deleteUserAuthKey\n      parameters:\n      - description: operator_id\n        in: path\n        name: operator_id\n        required: true\n        schema:\n          type: string\n      - description: user_name\n        in: path\n        name: user_name\n        required: true\n        schema:\n          type: string\n      - description: auth_key_id\n        in: path\n        name: auth_key_id\n        required: true\n        schema:\n          type: string\n      responses:\n        \"204\":\n          description: The AuthKey was deleted.\n        \"404\":\n          content:\n            application/json;charset=UTF-8:\n              schema:\n                $ref: '#/components/schemas/APICallError'\n          description: AuthKey not found.\n      security:\n      - api_key: []\n        api_token: []\n      summary: Delete User AuthKey.\n      tags:\n      - User\n      x-soracom-cli:\n      - users auth-keys delete\n    get:\n      description: Returns the SAM user's AuthKey.\n      operationId: getUserAuthKey\n      parameters:\n      - description: operator_id\n        in: path\n        name: operator_id\n        required: true\n        schema:\n          type: string\n      - description: user_name\n        in: path\n        name: user_name\n        required: true\n        schema:\n          type: string\n      - description: auth_key_id\n        in: path\n        name: auth_key_id\n        required: true\n        schema:\n          type: string\n      responses:\n        \"200\":\n          content:\n            application/json;charset=UTF-8:\n              schema:\n                $ref: '#/components/schemas/AuthKeyResponse'\n          description: OK.\n      security:\n      - api_key: []\n        api_token: []\n      summary: Get AuthKey.\n      tags:\n      - User\n      x-soracom-cli:\n      - users auth-keys get\n  /operators/{operator_id}/users/{user_name}/mfa:\n    delete:\n      description: Revoke SAM user's MFA\n      operationId: revokeUserMFA\n      parameters:\n      - description: Operator ID\n        in: path\n        name: operator_id\n        required: true\n        schema:\n          type: string\n      - description: SAM user name\n        in: path\n        name: user_name\n        required: true\n        schema:\n          type: string\n      responses:\n        \"204\":\n          description: Revoked\n        \"400\":\n          description: Bad request\n      security:\n      - api_key: []\n        api_token: []\n      summary: Revoke SAM user's MFA\n      tags:\n      - User\n      x-soracom-cli:\n      - users mfa revoke\n    get:\n      description: Get SAM user's MFA status\n      operationId: getUserMFAStatus\n      parameters:\n      - description: Operator ID\n        in: path\n        name: operator_id\n        required: true\n        schema:\n          type: string\n      - description: SAM user name\n        in: path\n        name: user_name\n        required: true\n        schema:\n          type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/MFAStatusOfUseResponse'\n          description: OK\n        \"400\":\n          description: Bad request\n      security:\n      - api_key: []\n        api_token: []\n      summary: Get SAM user's MFA status\n      tags:\n      - User\n      x-soracom-cli:\n      - users mfa get\n    post:\n      description: Enable SAM user's MFA\n      operationId: enableUserMFA\n      parameters:\n      - description: Operator ID\n        in: path\n        name: operator_id\n        required: true\n        schema:\n          type: string\n      - description: SAM user name\n        in: path\n        name: user_name\n        required: true\n        schema:\n          type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/EnableMFAOTPResponse'\n          description: OK\n        \"400\":\n          description: Bad request\n      security:\n      - api_key: []\n        api_token: []\n      summary: Enable SAM user's MFA\n      tags:\n      - User\n      x-soracom-cli:\n      - users mfa enable\n  /operators/{operator_id}/users/{user_name}/mfa/verify:\n    post:\n      description: Verify SAM user's MFA OTP code when MFA activation phase\n      operationId: verifyUserMFA\n      parameters:\n      - description: Operator ID\n        in: path\n        name: operator_id\n        required: true\n        schema:\n          type: string\n      - description: SAM user name\n        in: path\n        name: user_name\n        required: true\n        schema:\n          type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/MFAAuthenticationRequest'\n        description: request\n        required: true\n      responses:\n        \"204\":\n          description: Verified\n        \"400\":\n          description: Bad request\n      security:\n      - api_key: []\n        api_token: []\n      summary: Verify SAM user's MFA OTP code when MFA activation phase\n      tags:\n      - User\n      x-soracom-cli:\n      - users mfa verify\n  /operators/{operator_id}/users/{user_name}/password:\n    delete:\n      description: Deletes the user's password.\n      operationId: deleteUserPassword\n      parameters:\n      - description: operator_id\n        in: path\n        name: operator_id\n        required: true\n        schema:\n          type: string\n      - description: user_name\n        in: path\n        name: user_name\n        required: true\n        schema:\n          type: string\n      responses:\n        \"204\":\n          description: The user's password was deleted.\n        \"404\":\n          content:\n            application/json;charset=UTF-8:\n              schema:\n                $ref: '#/components/schemas/APICallError'\n          description: Password registration is required.\n      security:\n      - api_key: []\n        api_token: []\n      summary: Delete Password.\n      tags:\n      - User\n      x-soracom-cli:\n      - users password delete\n    get:\n      description: Retrieves whether the SAM user has a password or not.\n      operationId: hasUserPassword\n      parameters:\n      - description: operator_id\n        in: path\n        name: operator_id\n        required: true\n        schema:\n          type: string\n      - description: user_name\n        in: path\n        name: user_name\n        required: true\n        schema:\n          type: string\n      responses:\n        \"200\":\n          content:\n            application/json;charset=UTF-8:\n              schema:\n                $ref: '#/components/schemas/GetUserPasswordResponse'\n          description: OK.\n      security:\n      - api_key: []\n        api_token: []\n      summary: Has User Password.\n      tags:\n      - User\n      x-soracom-cli:\n      - users password configured\n    post:\n      description: Creates a password for the SAM user.\n      operationId: createUserPassword\n      parameters:\n      - description: operator_id\n        in: path\n        name: operator_id\n        required: true\n        schema:\n          type: string\n      - description: user_name\n        in: path\n        name: user_name\n        required: true\n        schema:\n          type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/CreateUserPasswordRequest'\n        description: password\n        required: true\n      responses:\n        \"201\":\n          description: Password for the SAM user was registered.\n      security:\n      - api_key: []\n        api_token: []\n      summary: Create Password.\n      tags:\n      - User\n      x-soracom-cli:\n      - users password create\n    put:\n      description: Updates the password of the SAM user.\n      operationId: updateUserPassword\n      parameters:\n      - description: operator_id\n        in: path\n        name: operator_id\n        required: true\n        schema:\n          type: string\n      - description: user_name\n        in: path\n        name: user_name\n        required: true\n        schema:\n          type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/UpdatePasswordRequest'\n        description: password\n        required: true\n      responses:\n        \"200\":\n          description: OK\n      security:\n      - api_key: []\n        api_token: []\n      summary: Update Password.\n      tags:\n      - User\n      x-soracom-cli:\n      - users password update\n  /operators/{operator_id}/users/{user_name}/permission:\n    delete:\n      description: Deletes the SAM user's permission.\n      operationId: deleteUserPermission\n      parameters:\n      - description: Operator ID\n        in: path\n        name: operator_id\n        required: true\n        schema:\n          type: string\n      - description: SAM user name\n        in: path\n        name: user_name\n        required: true\n        schema:\n          type: string\n      responses:\n        \"204\":\n          description: Deleted\n        \"400\":\n          description: Invalid Operator ID or SAM user name\n      security:\n      - api_key: []\n        api_token: []\n      summary: Delete user permission.\n      tags:\n      - User\n      x-soracom-cli:\n      - users permissions delete\n    get:\n      description: Retrieves the SAM user's permissions.\n      operationId: getUserPermission\n      parameters:\n      - description: operator_id\n        in: path\n        name: operator_id\n        required: true\n        schema:\n          type: string\n      - description: user_name\n        in: path\n        name: user_name\n        required: true\n        schema:\n          type: string\n      responses:\n        \"200\":\n          content:\n            application/json;charset=UTF-8:\n              schema:\n                $ref: '#/components/schemas/GetUserPermissionResponse'\n          description: OK.\n      security:\n      - api_key: []\n        api_token: []\n      summary: Get User Permission.\n      tags:\n      - User\n      x-soracom-cli:\n      - users permissions get\n    put:\n      description: Updates the SAM user's permissions.\n      operationId: updateUserPermission\n      parameters:\n      - description: operator_id\n        in: path\n        name: operator_id\n        required: true\n        schema:\n          type: string\n      - description: user_name\n        in: path\n        name: user_name\n        required: true\n        schema:\n          type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/SetUserPermissionRequest'\n        description: permission\n        required: true\n      responses:\n        \"200\":\n          description: OK\n      security:\n      - api_key: []\n        api_token: []\n      summary: Update user permission.\n      tags:\n      - User\n      x-soracom-cli:\n      - users permissions update\n  /operators/{operator_id}/users/{user_name}/roles:\n    get:\n      description: Retrieves a list of the user's roles.\n      operationId: listUserRoles\n      parameters:\n      - description: operator_id\n        in: path\n        name: operator_id\n        required: true\n        schema:\n          type: string\n      - description: user_name\n        in: path\n        name: user_name\n        required: true\n        schema:\n          type: string\n      responses:\n        \"200\":\n          content:\n            application/json;charset=UTF-8:\n              schema:\n                items:\n                  $ref: '#/components/schemas/RoleResponse'\n                type: array\n          description: OK.\n      security:\n      - api_key: []\n        api_token: []\n      summary: List User Roles.\n      tags:\n      - Role\n      x-soracom-cli:\n      - users list-roles\n    post:\n      description: Attaches a role to a user.\n      operationId: attachRole\n      parameters:\n      - description: operator_id\n        in: path\n        name: operator_id\n        required: true\n        schema:\n          type: string\n      - description: user_name\n        in: path\n        name: user_name\n        required: true\n        schema:\n          type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/AttachRoleRequest'\n        description: role_id\n        required: true\n      responses:\n        \"200\":\n          description: OK\n      security:\n      - api_key: []\n        api_token: []\n      summary: Attach Role to User.\n      tags:\n      - Role\n      x-soracom-cli:\n      - users attach-role\n  /operators/{operator_id}/users/{user_name}/roles/{role_id}:\n    delete:\n      description: Detaches a role from a user.\n      operationId: detachRole\n      parameters:\n      - description: operator_id\n        in: path\n        name: operator_id\n        required: true\n        schema:\n          type: string\n      - description: user_name\n        in: path\n        name: user_name\n        required: true\n        schema:\n          type: string\n      - description: role_id\n        in: path\n        name: role_id\n        required: true\n        schema:\n          type: string\n      responses:\n        \"200\":\n          description: OK\n      security:\n      - api_key: []\n        api_token: []\n      summary: Detach Role from User.\n      tags:\n      - Role\n      x-soracom-cli:\n      - users detach-role\n  /operators/{operator_id}/users/{user_name}/tokens:\n    delete:\n      description: Revoke all API keys and API tokens that were generated by the specified\n        SAM user. Once revoked, the API key and API token cannot be used to call the\n        SORACOM API, regardless of their expiration time.\n      operationId: revokeUserAuthTokens\n      parameters:\n      - description: Operator ID\n        in: path\n        name: operator_id\n        required: true\n        schema:\n          type: string\n      - description: SAM user name\n        in: path\n        name: user_name\n        required: true\n        schema:\n          type: string\n      responses:\n        \"204\":\n          description: Successfully revoked all API keys and API tokens\n        \"400\":\n          description: Wrong operator ID or username was specified.\n      security:\n      - api_key: []\n        api_token: []\n      summary: Revoke all API keys and API tokens that were generated by the specified\n        SAM user.\n      tags:\n      - User\n      x-soracom-cli:\n      - users revoke-user-auth-tokens\n  /operators/{operator_id}/users/default_permissions:\n    delete:\n      description: Delete the default permissions rule that is applied to all of the\n        SAM\n      operationId: deleteDefaultPermissions\n      parameters:\n      - description: Operator ID\n        in: path\n        name: operator_id\n        required: true\n        schema:\n          type: string\n      responses:\n        \"204\":\n          description: Deleted\n        \"403\":\n          description: Not privileged\n        \"404\":\n          description: Operator not found\n      security:\n      - api_key: []\n        api_token: []\n      summary: Delete the default permissions\n      tags:\n      - User\n      x-soracom-cli:\n      - users default-permissions delete\n    get:\n      description: Get the default permissions rule that is applied to all of the\n        SAM users\n      operationId: getDefaultPermissions\n      parameters:\n      - description: Operator ID\n        in: path\n        name: operator_id\n        required: true\n        schema:\n          type: string\n      responses:\n        \"200\":\n          content:\n            application/json;charset=UTF-8:\n              schema:\n                $ref: '#/components/schemas/GetDefaultPermissionsResponse'\n          description: OK\n        \"403\":\n          description: Not privileged\n        \"404\":\n          description: Operator Not Found\n      security:\n      - api_key: []\n        api_token: []\n      summary: Get the default permissions\n      tags:\n      - User\n      x-soracom-cli:\n      - users default-permissions get\n    put:\n      description: Update the default permissions rule that is applied to all of the\n        SAM\n      operationId: updateDefaultPermissions\n      parameters:\n      - description: Operator ID\n        in: path\n        name: operator_id\n        required: true\n        schema:\n          type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/UpdateDefaultPermissionsRequest'\n        description: request\n        required: true\n      responses:\n        \"202\":\n          description: Accepted\n        \"400\":\n          description: Bad Request\n        \"403\":\n          description: Not privileged\n      security:\n      - api_key: []\n        api_token: []\n      summary: Update the default permissions\n      tags:\n      - User\n      x-soracom-cli:\n      - users default-permissions update\n  /operators/add_email_token/issue:\n    post:\n      description: Sends an email with a one-time token for adding an e-mail address.\n      operationId: issueAddEmailToken\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/IssueAddEmailTokenRequest'\n        description: request\n        required: true\n      responses:\n        \"200\":\n          description: OK\n        \"400\":\n          description: Exceeds maximum number of emails.\n      security:\n      - api_key: []\n        api_token: []\n      summary: Issue a token to add an email address\n      tags:\n      - Email\n      x-soracom-cli:\n      - emails issue-add-email-token\n  /operators/add_email_token/verify:\n    post:\n      description: Verifies the token for adding email address.\n      operationId: verifyAddEmailToken\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/VerifyAddEmailTokenRequest'\n        description: request\n        required: true\n      responses:\n        \"200\":\n          description: OK\n      summary: Verify a token to add an email address\n      tags:\n      - Email\n      x-soracom-cli:\n      - emails verify-add-email-token\n  /operators/mfa_revoke_token/issue:\n    post:\n      description: Issues a token to revoke operator's MFA. The issued token will\n        be sent to the operator via email.\n      operationId: issueMFARevokingToken\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/MFAIssueRevokingTokenRequest'\n        description: request\n        required: true\n      responses:\n        \"200\":\n          description: OK\n        \"400\":\n          description: Bad request\n        \"404\":\n          description: Operator not found\n      summary: Issue Operator's MFA Revoke Token.\n      tags:\n      - Operator\n      x-soracom-cli:\n      - operator issue-mfa-revoke-token\n  /operators/mfa_revoke_token/verify:\n    post:\n      description: Verifies the one-time token which is previously issued by calling\n        `/operators/mfa_revoke_token/issue` API, operator's email address, password,\n        and one of the backup codes. If verified, operator's MFA is going to be revoked.\n      operationId: verifyMFARevokingToken\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/MFARevokingTokenVerifyRequest'\n        description: request\n        required: true\n      responses:\n        \"200\":\n          description: Revoked\n        \"400\":\n          description: Bad request\n        \"403\":\n          description: Invalid username or password\n      summary: Verify Operator's MFA revoke token.\n      tags:\n      - Operator\n      x-soracom-cli:\n      - operator verify-mfa-revoke-token\n  /operators/verify:\n    post:\n      description: Verifies the operator's registration. Called by setting as parameter\n        the one-time verification token received via e-mail.\n      operationId: verifyOperator\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/VerifyOperatorsRequest'\n        description: token\n        required: true\n      responses:\n        \"200\":\n          description: Registration successful.\n        \"400\":\n          description: The one-time token is incorrect.\n        \"404\":\n          description: The one-time token has expired.\n      summary: Verify Operator.\n      tags:\n      - Operator\n      x-soracom-cli:\n      - operator verify\n  /orders:\n    get:\n      description: Returns a list of confirmed orders.\n      operationId: listOrders\n      responses:\n        \"200\":\n          content:\n            application/json;charset=UTF-8:\n              schema:\n                $ref: '#/components/schemas/ListOrderResponse'\n          description: OK.\n      security:\n      - api_key: []\n        api_token: []\n      summary: List confirmed orders.\n      tags:\n      - Order\n      x-soracom-cli:\n      - orders list\n    post:\n      description: Creates a new order quotation. If the orderId is put in /confirm,\n        the order is complete.\n      operationId: createQuotation\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/CreateEstimatedOrderRequest'\n        description: Order item list and shipping address ID\n        required: true\n      responses:\n        \"201\":\n          content:\n            application/json;charset=UTF-8:\n              schema:\n                $ref: '#/components/schemas/EstimatedOrderModel'\n          description: A new order quotation was created.\n      security:\n      - api_key: []\n        api_token: []\n      summary: Create Quotation.\n      tags:\n      - Order\n      x-soracom-cli:\n      - orders create\n  /orders/{order_id}:\n    get:\n      description: Returns a confirmed order.\n      operationId: getOrder\n      parameters:\n      - description: order_id\n        in: path\n        name: order_id\n        required: true\n        schema:\n          type: string\n      responses:\n        \"200\":\n          content:\n            application/json;charset=UTF-8:\n              schema:\n                $ref: '#/components/schemas/GetOrderResponse'\n          description: OK.\n      security:\n      - api_key: []\n        api_token: []\n      summary: Get confirmed order.\n      tags:\n      - Order\n      x-soracom-cli:\n      - orders get\n  /orders/{order_id}/cancel:\n    put:\n      description: Cancels an order. If the order has already been dispatched, an\n        error is returned.\n      operationId: cancelOrder\n      parameters:\n      - description: order_id\n        in: path\n        name: order_id\n        required: true\n        schema:\n          type: string\n      responses:\n        \"204\":\n          content:\n            application/json;charset=UTF-8:\n              schema:\n                type: string\n          description: The order was cancelled.\n      security:\n      - api_key: []\n        api_token: []\n      summary: Cancel order.\n      tags:\n      - Order\n      x-soracom-cli:\n      - orders cancel\n  /orders/{order_id}/confirm:\n    put:\n      description: Performs a credit limit and confirms the order if no problems are\n        encountered.\n      operationId: confirmOrder\n      parameters:\n      - description: order_id\n        in: path\n        name: order_id\n        required: true\n        schema:\n          type: string\n      responses:\n        \"200\":\n          description: OK.\n      security:\n      - api_key: []\n        api_token: []\n      summary: Confirm order.\n      tags:\n      - Order\n      x-soracom-cli:\n      - orders confirm\n  /orders/{order_id}/subscribers:\n    get:\n      description: List ordered subscribers\n      operationId: listOrderedSubscribers\n      parameters:\n      - description: order_id\n        in: path\n        name: order_id\n        required: true\n        schema:\n          type: string\n      - description: Serial number of the last subscriber in the previous page that\n          is set to response header with X-Soracom-Next-Key.\n        in: query\n        name: last_evaluated_key\n        required: false\n        schema:\n          type: string\n      - description: Max number of subscribers in a response.\n        in: query\n        name: limit\n        required: false\n        schema:\n          format: int32\n          type: integer\n      responses:\n        \"200\":\n          content:\n            application/json;charset=UTF-8:\n              schema:\n                $ref: '#/components/schemas/ListOrderedSubscriberResponse'\n          description: OK.\n      security:\n      - api_key: []\n        api_token: []\n      summary: List ordered subscribers.\n      tags:\n      - Order\n      x-soracom-cli:\n      - orders list-subscribers\n      x-soracom-cli-pagination:\n        request:\n          param: last_evaluated_key\n        response:\n          header: x-soracom-next-key\n  /orders/{order_id}/subscribers/register:\n    post:\n      description: Registers the ordered SIM with the operator.\n      operationId: registerOrderedSim\n      parameters:\n      - description: order_id\n        in: path\n        name: order_id\n        required: true\n        schema:\n          type: string\n      responses:\n        \"204\":\n          content:\n            application/json;charset=UTF-8:\n              schema:\n                type: string\n          description: Subscribers were registered for the operator.\n      security:\n      - api_key: []\n        api_token: []\n      summary: Register subscribers for operator.\n      tags:\n      - Order\n      x-soracom-cli:\n      - orders register-subscribers\n  /payment_history/transactions/{payment_transaction_id}:\n    get:\n      description: Returns result of a payment transaction.\n      operationId: getPaymentTransaction\n      parameters:\n      - description: Payment transaction ID\n        in: path\n        name: payment_transaction_id\n        required: true\n        schema:\n          type: string\n      responses:\n        \"200\":\n          content:\n            application/json;charset=UTF-8:\n              schema:\n                $ref: '#/components/schemas/GetPaymentTransactionResult'\n          description: OK.\n        \"400\":\n          description: Invalid payment transaction ID.\n        \"404\":\n          description: Payment transaction result not found.\n      security:\n      - api_key: []\n        api_token: []\n      summary: Get payment transaction result.\n      tags:\n      - Payment\n      x-soracom-cli:\n      - payment-history get\n  /payment_methods/current:\n    get:\n      description: Returns current payment methods. Detailed information is included\n        in the properties.\n      operationId: getPaymentMethod\n      responses:\n        \"200\":\n          content:\n            application/json;charset=UTF-8:\n              schema:\n                $ref: '#/components/schemas/GetPaymentMethodResult'\n          description: OK.\n        \"404\":\n          description: Payment method not found.\n      security:\n      - api_key: []\n        api_token: []\n      summary: Get payment method information.\n      tags:\n      - Payment\n      x-soracom-cli:\n      - payment-methods get-current\n  /payment_methods/current/activate:\n    post:\n      description: Activates a current payment method that has an error.\n      operationId: activatePaymentMethod\n      responses:\n        \"200\":\n          content:\n            application/json;charset=UTF-8:\n              schema:\n                type: object\n          description: OK.\n        \"404\":\n          description: Payment method not found.\n      security:\n      - api_key: []\n        api_token: []\n      summary: Activate payment method.\n      tags:\n      - Payment\n      x-soracom-cli:\n      - payment-methods reactivate-current\n  /payment_statements:\n    get:\n      description: List payment statements.\n      operationId: listPaymentStatements\n      responses:\n        \"200\":\n          content:\n            application/json;charset=UTF-8:\n              schema:\n                $ref: '#/components/schemas/ListPaymentStatementResponse'\n          description: OK\n      security:\n      - api_key: []\n        api_token: []\n      summary: List payment statements.\n      tags:\n      - Payment\n      x-soracom-cli:\n      - payment-statements list\n  /payment_statements/{payment_statement_id}/export:\n    post:\n      description: Export payment statement.\n      operationId: exportPaymentStatement\n      parameters:\n      - description: Payment statement ID\n        in: path\n        name: payment_statement_id\n        required: true\n        schema:\n          type: string\n      - description: Export mode (async, sync)\n        in: query\n        name: export_mode\n        required: false\n        schema:\n          enum:\n          - async\n          - sync\n          type: string\n      responses:\n        \"200\":\n          content:\n            application/json;charset=UTF-8:\n              schema:\n                $ref: '#/components/schemas/FileExportResponse'\n          description: OK\n        \"400\":\n          description: Invalid payment statement ID.\n      security:\n      - api_key: []\n        api_token: []\n      summary: Export payment statement.\n      tags:\n      - Payment\n      x-soracom-cli:\n      - payment-statements export\n  /payment_statements/payer_information:\n    get:\n      description: Export payer information.\n      operationId: getPayerInformation\n      responses:\n        \"200\":\n          content:\n            application/json;charset=UTF-8:\n              schema:\n                $ref: '#/components/schemas/RegisterPayerInformationModel'\n          description: OK\n        \"400\":\n          description: Payer information not found.\n      security:\n      - api_key: []\n        api_token: []\n      summary: Export payer information.\n      tags:\n      - Payment\n      x-soracom-cli:\n      - payer-information get\n    post:\n      description: Register payer information.\n      operationId: registerPayerInformation\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/RegisterPayerInformationModel'\n        description: Payer information to be registered in the accounting specification\n        required: true\n      responses:\n        \"201\":\n          description: Created.\n        \"400\":\n          description: Invalid payer information.\n      security:\n      - api_key: []\n        api_token: []\n      summary: Register payer information.\n      tags:\n      - Payment\n      x-soracom-cli:\n      - payer-information register\n  /port_mappings:\n    get:\n      description: Returns a list of port mappings.\n      operationId: listPortMappings\n      parameters:\n      - description: Maximum number of results per response page.\n        in: query\n        name: limit\n        required: false\n        schema:\n          type: integer\n      - description: The last Port Mapping ID retrieved on the current page. By specifying\n          this parameter, you can continue to retrieve the list from the next group\n          onward.\n        in: query\n        name: last_evaluated_key\n        required: false\n        schema:\n          type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: '#/components/schemas/PortMapping'\n                type: array\n          description: A list of port mappings.\n      security:\n      - api_key: []\n        api_token: []\n      summary: List Port Mapping Entries.\n      tags:\n      - PortMapping\n      x-soracom-cli:\n      - port-mappings list\n      x-soracom-cli-pagination:\n        request:\n          param: last_evaluated_key\n        response:\n          header: x-soracom-next-key\n    post:\n      description: Create a new port mapping.\n      operationId: createPortMapping\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/CreatePortMappingRequest'\n        description: Port mapping to be created.\n        required: true\n      responses:\n        \"201\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PortMapping'\n          description: Created\n      security:\n      - api_key: []\n        api_token: []\n      summary: Create Port Mapping.\n      tags:\n      - PortMapping\n      x-soracom-cli:\n      - port-mappings create\n  /port_mappings/{ip_address}/{port}:\n    delete:\n      description: Deletes the specified port mapping entry\n      operationId: deletePortMapping\n      parameters:\n      - description: IP address of the target port mapping entry\n        in: path\n        name: ip_address\n        required: true\n        schema:\n          type: string\n      - description: Port of the target port mapping entry\n        in: path\n        name: port\n        required: true\n        schema:\n          type: string\n      responses:\n        \"204\":\n          description: Deletion of specified port mapping entry complete.\n        \"404\":\n          description: The specified port mapping entry does not exist.\n      security:\n      - api_key: []\n        api_token: []\n      summary: Delete PortMapping.\n      tags:\n      - PortMapping\n      x-soracom-cli:\n      - port-mappings delete\n  /port_mappings/subscribers/{imsi}:\n    get:\n      description: Returns the port mapping entries for a subscriber.\n      operationId: listPortMappingsForSubscriber\n      parameters:\n      - description: Target subscriber IMSI.\n        in: path\n        name: imsi\n        required: true\n        schema:\n          type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PortMapping'\n          description: List of port mapping entries for the subscriber.\n        \"404\":\n          description: The specified subscriber does not exist.\n      security:\n      - api_key: []\n        api_token: []\n      summary: Get Port Mapping entries for a subscriber.\n      tags:\n      - PortMapping\n      x-soracom-cli:\n      - port-mappings get\n  /products:\n    get:\n      description: Returns a list of products.\n      operationId: listProducts\n      responses:\n        \"200\":\n          content:\n            application/json;charset=UTF-8:\n              schema:\n                $ref: '#/components/schemas/ListProductResponse'\n          description: OK.\n      security:\n      - api_key: []\n        api_token: []\n      summary: List products.\n      tags:\n      - Order\n      x-soracom-cli:\n      - products list\n  /query/devices:\n    get:\n      description: Search SORACOM Inventory devices by query terms. It returns partial\n        match results. When this API permission is allowed, it grants the authority\n        to search and retrieve all SORACOM Inventory devices that includes their group\n        information.\n      operationId: searchDevices\n      parameters:\n      - description: Name to search\n        explode: true\n        in: query\n        name: name\n        required: false\n        schema:\n          items:\n            type: string\n          type: array\n      - description: Group name to search\n        explode: true\n        in: query\n        name: group\n        required: false\n        schema:\n          items:\n            type: string\n          type: array\n      - description: SORACOM Inventory device ID to search\n        explode: true\n        in: query\n        name: deviceId\n        required: false\n        schema:\n          items:\n            type: string\n          type: array\n      - description: String of tag values to search\n        explode: true\n        in: query\n        name: tag\n        required: false\n        schema:\n          items:\n            type: string\n          type: array\n      - description: IMSI of the device that was used on bootstrapping\n        explode: true\n        in: query\n        name: imsi\n        required: false\n        schema:\n          items:\n            type: string\n          type: array\n      - description: IMEI of the device that was used on bootstrapping\n        explode: true\n        in: query\n        name: imei\n        required: false\n        schema:\n          items:\n            type: string\n          type: array\n      - description: The maximum number of item to retrieve\n        in: query\n        name: limit\n        required: false\n        schema:\n          default: 10\n          format: int32\n          maximum: 100\n          type: integer\n      - description: The SORACOM Inventory device ID of the last Inventory device\n          retrieved on the current page. By specifying this parameter, you can continue\n          to retrieve the list from the next Inventory device onward.\n        in: query\n        name: last_evaluated_key\n        required: false\n        schema:\n          type: string\n      - description: Type of the search ('AND searching' or 'OR searching')\n        in: query\n        name: search_type\n        required: false\n        schema:\n          default: and\n          enum:\n          - and\n          - or\n          type: string\n      responses:\n        \"200\":\n          content:\n            application/json;charset=UTF-8:\n              schema:\n                items:\n                  $ref: '#/components/schemas/Device'\n                type: array\n          description: Returns result of searching\n        \"400\":\n          description: Invalid search queries\n      security:\n      - api_key: []\n        api_token: []\n      summary: Search SORACOM Inventory devices by query\n      tags:\n      - Query\n      x-soracom-cli:\n      - query devices\n      x-soracom-cli-pagination:\n        request:\n          param: last_evaluated_key\n        response:\n          header: x-soracom-next-key\n  /query/sigfox_devices:\n    get:\n      description: Search Sigfox devices by query terms. It returns partial match\n        results. When this API permission is allowed, it grants the authority to search\n        and retrieve all Sigfox devices that includes their group information.\n      operationId: searchSigfoxDevices\n      parameters:\n      - description: Name to search\n        explode: true\n        in: query\n        name: name\n        required: false\n        schema:\n          items:\n            type: string\n          type: array\n      - description: Group name to search\n        explode: true\n        in: query\n        name: group\n        required: false\n        schema:\n          items:\n            type: string\n          type: array\n      - description: Sigfox device ID to search\n        explode: true\n        in: query\n        name: deviceId\n        required: false\n        schema:\n          items:\n            type: string\n          type: array\n      - description: String of tag values to search\n        explode: true\n        in: query\n        name: tag\n        required: false\n        schema:\n          items:\n            type: string\n          type: array\n      - description: Status of sigfox devices\n        in: query\n        name: status\n        required: false\n        schema:\n          default: and\n          enum:\n          - active\n          - inactive\n          - suspended\n          - terminated\n          - shipped\n          - ready\n          - inStock\n          - banned\n          - standby\n          type: string\n      - description: Registration status of sigfox devices\n        in: query\n        name: registration\n        required: false\n        schema:\n          default: and\n          enum:\n          - notStarted\n          - pending\n          - success\n          - failed\n          type: string\n      - description: The maximum number of item to retrieve\n        in: query\n        name: limit\n        required: false\n        schema:\n          default: 10\n          format: int32\n          maximum: 100\n          type: integer\n      - description: The Sigfox device ID of the last Sigfox device retrieved on the\n          current page. By specifying this parameter, you can continue to retrieve\n          the list from the next Sigfox device onward.\n        in: query\n        name: last_evaluated_key\n        required: false\n        schema:\n          type: string\n      - description: Type of the search ('AND searching' or 'OR searching')\n        in: query\n        name: search_type\n        required: false\n        schema:\n          default: and\n          enum:\n          - and\n          - or\n          type: string\n      responses:\n        \"200\":\n          content:\n            application/json;charset=UTF-8:\n              schema:\n                items:\n                  $ref: '#/components/schemas/SigfoxDevice'\n                type: array\n          description: Returns result of searching\n        \"400\":\n          description: Invalid search queries\n      security:\n      - api_key: []\n        api_token: []\n      summary: Search Sigfox devices by query\n      tags:\n      - Query\n      x-soracom-cli:\n      - query sigfox-devices\n      x-soracom-cli-pagination:\n        request:\n          param: last_evaluated_key\n        response:\n          header: x-soracom-next-key\n  /query/sims:\n    get:\n      description: Search SIMs by query terms. It returns partial match results. When\n        this API permission is allowed, it grants the authority to search and retrieve\n        all SIMs that includes their group information.\n      operationId: searchSims\n      parameters:\n      - description: Name to search\n        explode: true\n        in: query\n        name: name\n        required: false\n        schema:\n          items:\n            type: string\n          type: array\n      - description: Group name to search\n        explode: true\n        in: query\n        name: group\n        required: false\n        schema:\n          items:\n            type: string\n          type: array\n      - description: Identifier of the SIM to search\n        explode: true\n        in: query\n        name: sim_id\n        required: false\n        schema:\n          items:\n            type: string\n          type: array\n      - description: IMSI to search\n        explode: true\n        in: query\n        name: imsi\n        required: false\n        schema:\n          items:\n            type: string\n          type: array\n      - description: MSISDN to search\n        explode: true\n        in: query\n        name: msisdn\n        required: false\n        schema:\n          items:\n            type: string\n          type: array\n      - description: ICCID to search\n        explode: true\n        in: query\n        name: iccid\n        required: false\n        schema:\n          items:\n            type: string\n          type: array\n      - description: Serial number to search\n        explode: true\n        in: query\n        name: serial_number\n        required: false\n        schema:\n          items:\n            type: string\n          type: array\n      - description: String of tag values to search\n        explode: true\n        in: query\n        name: tag\n        required: false\n        schema:\n          items:\n            type: string\n          type: array\n      - description: Bundles type to search\n        explode: true\n        in: query\n        name: bundles\n        required: false\n        schema:\n          items:\n            type: string\n          type: array\n      - description: Status of the session to search (ONLINE or OFFLINE)\n        in: query\n        name: session_status\n        required: false\n        schema:\n          default: NA\n          enum:\n          - NA\n          - ONLINE\n          - OFFLINE\n          format: string\n          type: string\n      - description: The maximum number of item to retrieve\n        in: query\n        name: limit\n        required: false\n        schema:\n          default: 10\n          format: int32\n          maximum: 100\n          type: integer\n      - description: The SIM ID of the last SIM retrieved on the current page. By\n          specifying this parameter, you can continue to retrieve the list from the\n          next SIM onward.\n        in: query\n        name: last_evaluated_key\n        required: false\n        schema:\n          type: string\n      - description: Type of the search ('AND searching' or 'OR searching')\n        in: query\n        name: search_type\n        required: false\n        schema:\n          default: and\n          enum:\n          - and\n          - or\n          type: string\n      responses:\n        \"200\":\n          content:\n            application/json;charset=UTF-8:\n              schema:\n                items:\n                  $ref: '#/components/schemas/Sim'\n                type: array\n          description: Returns result of searching\n        \"400\":\n          description: Invalid search queries\n      security:\n      - api_key: []\n        api_token: []\n      summary: Search SIMs by query terms\n      tags:\n      - Query\n      x-soracom-cli:\n      - query sims\n      x-soracom-cli-pagination:\n        request:\n          param: last_evaluated_key\n        response:\n          header: x-soracom-next-key\n  /query/subscribers:\n    get:\n      deprecated: true\n      description: '(DEPRECATED: please consider to use `/query/sims` API instead)\n        Search subscribers by query terms. It returns partial match results. When\n        this API permission is allowed, it grants the authority to search and retrieve\n        all SIMs that includes their group information.'\n      operationId: searchSubscribers\n      parameters:\n      - description: Name to search\n        explode: true\n        in: query\n        name: name\n        required: false\n        schema:\n          items:\n            type: string\n          type: array\n      - description: Group name to search\n        explode: true\n        in: query\n        name: group\n        required: false\n        schema:\n          items:\n            type: string\n          type: array\n      - description: IMSI to search\n        explode: true\n        in: query\n        name: imsi\n        required: false\n        schema:\n          items:\n            type: string\n          type: array\n      - description: MSISDN to search\n        explode: true\n        in: query\n        name: msisdn\n        required: false\n        schema:\n          items:\n            type: string\n          type: array\n      - description: ICCID to search\n        explode: true\n        in: query\n        name: iccid\n        required: false\n        schema:\n          items:\n            type: string\n          type: array\n      - description: Serial number to search\n        explode: true\n        in: query\n        name: serial_number\n        required: false\n        schema:\n          items:\n            type: string\n          type: array\n      - description: String of tag values to search\n        explode: true\n        in: query\n        name: tag\n        required: false\n        schema:\n          items:\n            type: string\n          type: array\n      - description: Subscription (e.g. `plan01s`) to search\n        explode: true\n        in: query\n        name: subscription\n        required: false\n        schema:\n          items:\n            type: string\n          type: array\n      - description: Module type (e.g. `mini`, `virtual`) to search\n        explode: true\n        in: query\n        name: module_type\n        required: false\n        schema:\n          items:\n            type: string\n          type: array\n      - description: The maximum number of item to retrieve\n        in: query\n        name: limit\n        required: false\n        schema:\n          default: 10\n          format: int32\n          maximum: 100\n          type: integer\n      - description: The IMSI of the last subscriber retrieved on the current page.\n          By specifying this parameter, you can continue to retrieve the list from\n          the next subscriber onward.\n        in: query\n        name: last_evaluated_key\n        required: false\n        schema:\n          type: string\n      - description: Type of the search ('AND searching' or 'OR searching')\n        in: query\n        name: search_type\n        required: false\n        schema:\n          default: and\n          enum:\n          - and\n          - or\n          type: string\n      responses:\n        \"200\":\n          content:\n            application/json;charset=UTF-8:\n              schema:\n                items:\n                  $ref: '#/components/schemas/Subscriber'\n                type: array\n          description: Returns result of searching\n        \"400\":\n          description: Invalid search queries\n      security:\n      - api_key: []\n        api_token: []\n      summary: (DEPRECATED) Search subscribers by query terms\n      tags:\n      - Query\n      x-soracom-alternative-cli: query sims\n      x-soracom-cli:\n      - query subscribers\n      x-soracom-cli-pagination:\n        request:\n          param: last_evaluated_key\n        response:\n          header: x-soracom-next-key\n  /query/subscribers/traffic_volume/ranking:\n    get:\n      description: Search traffic volume ranking of subscribers\n      operationId: searchSubscriberTrafficVolumeRanking\n      parameters:\n      - description: 'The beginning point of searching range (unixtime: in milliseconds)'\n        in: query\n        name: from\n        required: true\n        schema:\n          format: int64\n          type: integer\n      - description: 'The end point of searching range (unixtime: in milliseconds)'\n        in: query\n        name: to\n        required: true\n        schema:\n          format: int64\n          type: integer\n      - description: The maximum number of item to retrieve\n        in: query\n        name: limit\n        required: false\n        schema:\n          default: 10\n          format: int32\n          maximum: 500\n          type: integer\n      - description: The order of ranking\n        in: query\n        name: order\n        required: false\n        schema:\n          default: desc\n          enum:\n          - asc\n          - desc\n          type: string\n      responses:\n        \"200\":\n          content:\n            application/json;charset=UTF-8:\n              schema:\n                items:\n                  $ref: '#/components/schemas/TrafficVolumeRanking'\n                type: array\n          description: OK\n      security:\n      - api_key: []\n        api_token: []\n      summary: Search traffic volume ranking of subscribers\n      tags:\n      - Query\n      x-soracom-cli:\n      - query subscribers traffic-volume-ranking\n      - query traffic-ranking\n  /sigfox_devices:\n    get:\n      description: Returns a list of Sigfox devices that match certain criteria. If\n        the total number of Sigfox devices does not fit in one page, a URL for accessing\n        the next page is returned in the 'Link' header of the response.\n      operationId: listSigfoxDevices\n      parameters:\n      - description: Tag name for filtering the search (exact match).\n        in: query\n        name: tag_name\n        required: false\n        schema:\n          type: string\n      - description: Tag search string for filtering the search. Required when `tag_name`\n          has been specified.\n        in: query\n        name: tag_value\n        required: false\n        schema:\n          type: string\n      - description: Tag match mode.\n        in: query\n        name: tag_value_match_mode\n        required: false\n        schema:\n          default: exact\n          enum:\n          - exact\n          - prefix\n          type: string\n      - description: Maximum number of Sigfox devices to retrieve.\n        in: query\n        name: limit\n        required: false\n        schema:\n          type: integer\n      - description: The device ID of the last device retrieved on the current page.\n          By specifying this parameter, you can continue to retrieve the list from\n          the next device onward.\n        in: query\n        name: last_evaluated_key\n        required: false\n        schema:\n          type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: '#/components/schemas/SigfoxDevice'\n                type: array\n          description: A list of Sigfox devices.\n      security:\n      - api_key: []\n        api_token: []\n      summary: List Sigfox devices.\n      tags:\n      - SigfoxDevice\n      x-soracom-cli:\n      - sigfox-devices list\n      x-soracom-cli-pagination:\n        request:\n          param: last_evaluated_key\n        response:\n          header: x-soracom-next-key\n  /sigfox_devices/{device_id}:\n    get:\n      description: Returns information about the specified Sigfox device.\n      operationId: getSigfoxDevice\n      parameters:\n      - description: Device ID of the target Sigfox device.\n        in: path\n        name: device_id\n        required: true\n        schema:\n          type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/SigfoxDevice'\n          description: The Sigfox device's detailed information.\n        \"404\":\n          description: The specified Sigfox device does not exist.\n      security:\n      - api_key: []\n        api_token: []\n      summary: Get Sigfox device.\n      tags:\n      - SigfoxDevice\n      x-soracom-cli:\n      - sigfox-devices get\n  /sigfox_devices/{device_id}/data:\n    get:\n      description: Returns a list of data entries sent from a Sigfox device that match\n        certain criteria. If the total number of entries does not fit in one page,\n        a URL for accessing the next page is returned in the 'Link' header of the\n        response.\n      operationId: getDataFromSigfoxDevice\n      parameters:\n      - description: Device ID of the target subscriber that generated data entries.\n        in: path\n        name: device_id\n        required: true\n        schema:\n          type: string\n      - description: Start time for the data entries search range (unixtime in milliseconds).\n        in: query\n        name: from\n        required: false\n        schema:\n          type: integer\n      - description: End time for the data entries search range (unixtime in milliseconds).\n        in: query\n        name: to\n        required: false\n        schema:\n          type: integer\n      - description: Sort order of the data entries. Either descending (latest data\n          entry first) or ascending (oldest data entry first).\n        in: query\n        name: sort\n        required: false\n        schema:\n          default: desc\n          enum:\n          - desc\n          - asc\n          type: string\n      - description: Maximum number of data entries to retrieve.\n        in: query\n        name: limit\n        required: false\n        schema:\n          type: integer\n      - description: The value of `time` in the last log entry retrieved in the previous\n          page. By specifying this parameter, you can continue to retrieve the list\n          from the next page onward.\n        in: query\n        name: last_evaluated_key\n        required: false\n        schema:\n          type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: '#/components/schemas/DataEntry'\n                type: array\n          description: A list of data entries.\n      security:\n      - api_key: []\n        api_token: []\n      summary: Get data sent from a Sigfox device.\n      tags:\n      - SigfoxDevice\n      x-soracom-cli:\n      - sigfox-devices get-data\n      x-soracom-cli-pagination:\n        request:\n          param: last_evaluated_key\n        response:\n          header: x-soracom-next-key\n    post:\n      description: Sends data to the specified Sigfox device. The data will be stored\n        until the device sends a next uplink message. If another message destined\n        for the same Sigfox device ID is already waiting to be sent, the existing\n        message will be discarded, and the new message will be sent instead.\n      operationId: sendDataToSigfoxDevice\n      parameters:\n      - description: ID of the recipient device.\n        in: path\n        name: device_id\n        required: true\n        schema:\n          type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/SigfoxData'\n        description: Binary data encoded as a hexadecimal string. Length of original\n          binary data must be 8 octets (16 characters when encoded as a hexadecimal\n          string).\n        required: true\n      responses:\n        \"204\":\n          description: Data has been received by server and waiting for the recipient\n            device to retrieve.\n        \"404\":\n          description: No such device found.\n      security:\n      - api_key: []\n        api_token: []\n      summary: Send data to a Sigfox device.\n      tags:\n      - SigfoxDevice\n      x-soracom-cli:\n      - sigfox-devices send-data\n  /sigfox_devices/{device_id}/disable_termination:\n    post:\n      description: Disables termination of specified Sigfox device.\n      operationId: disableTerminationOnSigfoxDevice\n      parameters:\n      - description: Device ID of the target Sigfox device.\n        in: path\n        name: device_id\n        required: true\n        schema:\n          type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/SigfoxDevice'\n          description: The Sigfox device's detailed information after the update.\n        \"404\":\n          description: The specified Sigfox device does not exist.\n      security:\n      - api_key: []\n        api_token: []\n      summary: Disable Termination of Sigfox device.\n      tags:\n      - SigfoxDevice\n      x-soracom-cli:\n      - sigfox-devices disable-termination\n  /sigfox_devices/{device_id}/enable_termination:\n    post:\n      description: Enables termination of specified Sigfox device.\n      operationId: enableTerminationOnSigfoxDevice\n      parameters:\n      - description: Device ID of the target Sigfox device.\n        in: path\n        name: device_id\n        required: true\n        schema:\n          type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/SigfoxDevice'\n          description: The Sigfox device's detailed information after the update.\n        \"404\":\n          description: The specified Sigfox device does not exist.\n      security:\n      - api_key: []\n        api_token: []\n      summary: Enable Termination of Sigfox device.\n      tags:\n      - SigfoxDevice\n      x-soracom-cli:\n      - sigfox-devices enable-termination\n  /sigfox_devices/{device_id}/register:\n    post:\n      description: Registers a Sigfox device\n      operationId: registerSigfoxDevice\n      parameters:\n      - description: Device ID of the target sigfox device to register\n        in: path\n        name: device_id\n        required: true\n        schema:\n          type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/SigfoxRegistrationRequest'\n        description: Sigfox device registration request\n        required: true\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/SigfoxDevice'\n          description: Sigfox device successfully registered\n        \"400\":\n          description: PAC code is missing\n      security:\n      - api_key: []\n        api_token: []\n      summary: Register a Sigfox device.\n      tags:\n      - SigfoxDevice\n      x-soracom-cli:\n      - sigfox-devices register\n  /sigfox_devices/{device_id}/set_group:\n    post:\n      description: Sets or overwrites a group for the specified Sigfox device.\n      operationId: setSigfoxDeviceGroup\n      parameters:\n      - description: Device ID of the target Sigfox device.\n        in: path\n        name: device_id\n        required: true\n        schema:\n          type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Group'\n        description: Group (may include ID only).\n        required: true\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/SigfoxDevice'\n          description: The Sigfox device's detailed information after the update.\n        \"404\":\n          description: The specified Sigfox device does not exist.\n      security:\n      - api_key: []\n        api_token: []\n      summary: Set Group of Sigfox device.\n      tags:\n      - SigfoxDevice\n      x-soracom-cli:\n      - sigfox-devices set-group\n  /sigfox_devices/{device_id}/tags:\n    put:\n      description: Inserts/updates tags for the specified Sigfox device.\n      operationId: putSigfoxDeviceTags\n      parameters:\n      - description: Device ID of the target Sigfox device.\n        in: path\n        name: device_id\n        required: true\n        schema:\n          type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              items:\n                $ref: '#/components/schemas/TagUpdateRequest'\n              type: array\n        description: Array of tags to be inserted/updated.\n        required: true\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/SigfoxDevice'\n          description: The Sigfox device's detailed information after the update.\n        \"404\":\n          description: The specified Sigfox device does not exist.\n      security:\n      - api_key: []\n        api_token: []\n      summary: Bulk Insert or Update Sigfox device Tags.\n      tags:\n      - SigfoxDevice\n      x-soracom-cli:\n      - sigfox-devices put-tags\n  /sigfox_devices/{device_id}/tags/{tag_name}:\n    delete:\n      description: Deletes a tag from the specified Sigfox device.\n      operationId: deleteSigfoxDeviceTag\n      parameters:\n      - description: device ID of the target Sigfox device.\n        in: path\n        name: device_id\n        required: true\n        schema:\n          type: string\n      - description: Tag name to be deleted. (This will be part of a URL path, so\n          it needs to be percent-encoded. In JavaScript, specify the name after it\n          has been encoded using encodeURIComponent().)\n        in: path\n        name: tag_name\n        required: true\n        schema:\n          type: string\n      responses:\n        \"204\":\n          description: Deletion of specified tag complete.\n        \"404\":\n          description: The specified Sigfox device or the tag does not exist.\n      security:\n      - api_key: []\n        api_token: []\n      summary: Delete Sigfox device Tag.\n      tags:\n      - SigfoxDevice\n      x-sam-operationId: deleteTag\n      x-soracom-cli:\n      - sigfox-devices delete-tag\n  /sigfox_devices/{device_id}/terminate:\n    post:\n      description: Terminates the specified Sigfox device\n      operationId: terminateSigfoxDevice\n      parameters:\n      - description: Device ID of the target Sigfox device.\n        in: path\n        name: device_id\n        required: true\n        schema:\n          type: string\n      - description: If the Sigfox device is deleted immediately\n        in: query\n        name: delete_immediately\n        required: false\n        schema:\n          default: false\n          type: boolean\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/SigfoxDevice'\n          description: The Sigfox device's detailed information after the update.\n        \"404\":\n          description: The specified Sigfox device does not exist.\n      security:\n      - api_key: []\n        api_token: []\n      summary: Terminate Sigfox device.\n      tags:\n      - SigfoxDevice\n      x-soracom-cli:\n      - sigfox-devices terminate\n  /sigfox_devices/{device_id}/unset_group:\n    post:\n      description: Removes the group configuration from the specified Sigfox device.\n      operationId: unsetSigfoxDeviceGroup\n      parameters:\n      - description: Device ID of the target Sigfox device.\n        in: path\n        name: device_id\n        required: true\n        schema:\n          type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/SigfoxDevice'\n          description: The Sigfox device's detailed information after the update.\n        \"404\":\n          description: The specified Sigfox device does not exist or the Sigfox device\n            does not belong to a group.\n      security:\n      - api_key: []\n        api_token: []\n      summary: Unset Group of Sigfox device.\n      tags:\n      - SigfoxDevice\n      x-soracom-cli:\n      - sigfox-devices unset-group\n  /sims:\n    get:\n      description: Returns a list of SIMs that match certain criteria. If the total\n        number of SIMs does not fit in one page, a URL for accessing the next page\n        is returned in the 'Link' header of the response.\n      operationId: listSims\n      parameters:\n      - description: Maximum number of SIMs to retrieve. Setting a limit does not\n          guarantee the number of sims returned in the response (i.e. the response\n          may contain fewer sims than the specified limit).\n        in: query\n        name: limit\n        required: false\n        schema:\n          type: integer\n      - description: The ID of the last SIM retrieved on the current page. By specifying\n          this parameter, you can continue to retrieve the list from the next SIM\n          onward.\n        in: query\n        name: last_evaluated_key\n        required: false\n        schema:\n          type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: '#/components/schemas/Sim'\n                type: array\n          description: A list of SIMs.\n        \"404\":\n          description: No such SIM found\n      security:\n      - api_key: []\n        api_token: []\n      summary: List SIMs.\n      tags:\n      - Sim\n      x-soracom-cli:\n      - sims list\n      x-soracom-cli-pagination:\n        request:\n          param: last_evaluated_key\n        response:\n          header: x-soracom-next-key\n    post:\n      description: Creates a SIM for example for use with Arc service.\n      operationId: createSim\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/CreateSimRequest'\n        description: A SIM creation request\n        required: true\n      responses:\n        \"201\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Sim'\n          description: SIM created.\n      security:\n      - api_key: []\n        api_token: []\n      summary: Create a SIM.\n      tags:\n      - Sim\n      x-soracom-cli:\n      - sims create\n  /sims/{sim_id}:\n    get:\n      description: Obtain a SIM record identified by the sim_id\n      operationId: getSim\n      parameters:\n      - description: Id of the target SIM\n        in: path\n        name: sim_id\n        required: true\n        schema:\n          type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Sim'\n          description: A SIM identified by sim_id\n        \"404\":\n          description: No such SIM found\n      security:\n      - api_key: []\n        api_token: []\n      summary: Get a SIM identified by sim_id\n      tags:\n      - Sim\n      x-soracom-cli:\n      - sims get\n  /sims/{sim_id}/activate:\n    post:\n      description: Change status of specified SIM to active.\n      operationId: activateSim\n      parameters:\n      - description: SIM ID of the target SIM.\n        in: path\n        name: sim_id\n        required: true\n        schema:\n          format: SimId\n          type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Sim'\n          description: The SIM's detailed information after the update.\n        \"404\":\n          description: The specified SIM does not exist.\n      security:\n      - api_key: []\n        api_token: []\n      summary: Activate SIM.\n      tags:\n      - Sim\n      x-soracom-cli:\n      - sims activate\n  /sims/{sim_id}/credentials/arc:\n    delete:\n      deprecated: true\n      description: (DEPRECATED) Use this API to remove the set of credentials for\n        Arc from the specified SIM. Please do not use this API.\n      operationId: removeArcSimCredentials\n      parameters:\n      - description: SIM ID of the target SIM.\n        in: path\n        name: sim_id\n        required: true\n        schema:\n          type: string\n      responses:\n        \"204\":\n          description: The credentials for Arc have been removed.\n      security:\n      - api_key: []\n        api_token: []\n      summary: (DEPRECATED) Remove the credentials for Arc from a SIM.\n      tags:\n      - Sim\n      x-soracom-cli:\n      - sims remove-arc-credentials\n    post:\n      deprecated: true\n      description: (DEPRECATED) Use this API to attach a set of credentials to a SIM.\n        Please use `renewArcSimCredentials` API instead.\n      operationId: attachArcSimCredentials\n      parameters:\n      - description: SIM ID of the target SIM.\n        in: path\n        name: sim_id\n        required: true\n        schema:\n          format: SimId\n          type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/ArcCredentialAttachRequest'\n        description: Arc credential attach request\n        required: true\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ArcCredentialAttachResponse'\n          description: Arc credential attach response\n      security:\n      - api_key: []\n        api_token: []\n      summary: (DEPRECATED) Attach the credentials for Arc to a SIM.\n      tags:\n      - Sim\n      x-soracom-cli:\n      - sims attach-arc-credentials\n    put:\n      description: Use this API to attach a set of credentials to a SIM and re-initialize\n        a session at once.\n      operationId: renewArcSimCredentials\n      parameters:\n      - description: SIM ID of the target SIM.\n        in: path\n        name: sim_id\n        required: true\n        schema:\n          format: SimId\n          type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/ArcCredentialRenewRequest'\n        description: Arc credential attach request\n        required: true\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ArcCredentialRenewResponse'\n          description: Arc credential attach response\n      security:\n      - api_key: []\n        api_token: []\n      summary: Renew the credentials for Arc to a SIM.\n      tags:\n      - Sim\n      x-soracom-cli:\n      - sims renew-arc-credentials\n  /sims/{sim_id}/data:\n    get:\n      description: Returns a list of data entries sent from a SIM that match certain\n        criteria. If the total number of entries does not fit in one page, a URL for\n        accessing the next page is returned in the 'Link' header of the response.\n      operationId: getDataFromSim\n      parameters:\n      - description: Sim Id of the target SIM.\n        in: path\n        name: sim_id\n        required: true\n        schema:\n          type: string\n      - description: Start time for the data entries search range (unixtime in milliseconds).\n        in: query\n        name: from\n        required: false\n        schema:\n          type: integer\n      - description: End time for the data entries search range (unixtime in milliseconds).\n        in: query\n        name: to\n        required: false\n        schema:\n          type: integer\n      - description: Sort order of the data entries. Either descending (latest data\n          entry first) or ascending (oldest data entry first).\n        in: query\n        name: sort\n        required: false\n        schema:\n          default: desc\n          enum:\n          - desc\n          - asc\n          type: string\n      - description: Maximum number of data entries to retrieve.\n        in: query\n        name: limit\n        required: false\n        schema:\n          type: integer\n      - description: The value of `time` in the last log entry retrieved in the previous\n          page. By specifying this parameter, you can continue to retrieve the list\n          from the next page onward.\n        in: query\n        name: last_evaluated_key\n        required: false\n        schema:\n          type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: '#/components/schemas/DataEntry'\n                type: array\n          description: A list of data entries.\n      security:\n      - api_key: []\n        api_token: []\n      summary: Get data sent from a SIM.\n      tags:\n      - Sim\n      x-soracom-cli:\n      - sims get-data\n      x-soracom-cli-pagination:\n        request:\n          param: last_evaluated_key\n        response:\n          header: x-soracom-next-key\n  /sims/{sim_id}/deactivate:\n    post:\n      description: Change status of specified SIM to inactive.\n      operationId: deactivateSim\n      parameters:\n      - description: SIM ID of the target SIM.\n        in: path\n        name: sim_id\n        required: true\n        schema:\n          format: SimId\n          type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Sim'\n          description: The SIM's detailed information after the update.\n        \"404\":\n          description: The specified SIM does not exist.\n      security:\n      - api_key: []\n        api_token: []\n      summary: Deactivate SIM.\n      tags:\n      - Sim\n      x-soracom-cli:\n      - sims deactivate\n  /sims/{sim_id}/delete_session:\n    post:\n      description: Deletes session for the specified SIM.\n      operationId: deleteSimSession\n      parameters:\n      - description: SIM ID of the target SIM.\n        in: path\n        name: sim_id\n        required: true\n        schema:\n          type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Sim'\n          description: The SIM's detailed information after the update.\n        \"404\":\n          description: The specified SIM does not exist.\n      security:\n      - api_key: []\n        api_token: []\n      summary: Delete Session\n      tags:\n      - Sim\n      x-soracom-cli:\n      - sims delete-session\n  /sims/{sim_id}/disable_termination:\n    post:\n      description: Disables termination of the specified SIM.\n      operationId: disableSimTermination\n      parameters:\n      - description: SIM ID of the target SIM.\n        in: path\n        name: sim_id\n        required: true\n        schema:\n          format: SimId\n          type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Sim'\n          description: The SIM's detailed information after the update.\n        \"404\":\n          description: The specified SIM does not exist.\n      security:\n      - api_key: []\n        api_token: []\n      summary: Disable termination of the SIM.\n      tags:\n      - Sim\n      x-soracom-cli:\n      - sims disable-termination\n  /sims/{sim_id}/downlink/ping:\n    post:\n      description: Send ICMP ping requests to a SIM.\n      operationId: simDownlinkPingToUserEquipment\n      parameters:\n      - description: SIM ID of the target SIM.\n        in: path\n        name: sim_id\n        required: true\n        schema:\n          format: SimId\n          type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/DownlinkPingRequest'\n        description: ping options\n        required: true\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DownlinkPingResponse'\n          description: Result of the ping\n      security:\n      - api_key: []\n        api_token: []\n      summary: Send ping requests to a SIM.\n      tags:\n      - Sim\n      x-soracom-cli:\n      - sims downlink-ping\n  /sims/{sim_id}/enable_termination:\n    post:\n      description: Enables termination of specified SIM.\n      operationId: enableSimTermination\n      parameters:\n      - description: SIM ID of the target SIM.\n        in: path\n        name: sim_id\n        required: true\n        schema:\n          format: SimId\n          type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Sim'\n          description: The SIM's detailed information after the update.\n        \"404\":\n          description: The specified SIM does not exist.\n      security:\n      - api_key: []\n        api_token: []\n      summary: Enable termination of the SIM.\n      tags:\n      - Sim\n      x-soracom-cli:\n      - sims enable-termination\n  /sims/{sim_id}/events/sessions:\n    get:\n      description: Returns the history of session creation, change, and deletion events\n        occurred on the target SIM in the last 32 days. If the total number of events\n        does not fit in one page, a URL for accessing the next page is returned in\n        the `Link` header of the response.\n      operationId: listSimSessionEvents\n      parameters:\n      - description: SIM ID of the target SIM.\n        in: path\n        name: sim_id\n        required: true\n        schema:\n          type: string\n      - description: Start time for the events search range (unixtime).\n        in: query\n        name: from\n        required: false\n        schema:\n          type: integer\n      - description: End time for the events search range (unixtime).\n        in: query\n        name: to\n        required: false\n        schema:\n          type: integer\n      - description: Maximum number of events to retrieve.\n        in: query\n        name: limit\n        required: false\n        schema:\n          type: integer\n      - description: The time stamp of the last event retrieved on the current page.\n          By specifying this parameter, you can continue to retrieve the list from\n          the next event onward.\n        in: query\n        name: last_evaluated_key\n        required: false\n        schema:\n          type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: '#/components/schemas/SessionEvent'\n                type: array\n          description: A list of session events\n      security:\n      - api_key: []\n        api_token: []\n      summary: List Session Events.\n      tags:\n      - Sim\n      x-soracom-cli:\n      - sims session-events\n      x-soracom-cli-pagination:\n        request:\n          param: last_evaluated_key\n        response:\n          header: x-soracom-next-key\n  /sims/{sim_id}/packet_capture_sessions:\n    get:\n      description: List packet capture sessions associated with the SIM\n      operationId: listSimPacketCaptureSessions\n      parameters:\n      - description: SIM ID\n        in: path\n        name: sim_id\n        required: true\n        schema:\n          type: string\n      - description: ID of the last packet capture session in the previous page\n        in: query\n        name: last_evaluated_key\n        required: false\n        schema:\n          type: string\n      - description: Max number of results in a response\n        in: query\n        name: limit\n        required: false\n        schema:\n          default: 10\n          format: int32\n          type: integer\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: '#/components/schemas/PacketCaptureSession'\n                type: array\n          description: List of packet capture sessions associated with the SIM\n        \"404\":\n          description: No such sim found\n      security:\n      - api_key: []\n        api_token: []\n      summary: List Packet Capture Sessions\n      tags:\n      - Sim\n      x-soracom-cli:\n      - sims list-packet-capture-sessions\n      x-soracom-cli-pagination:\n        request:\n          param: last_evaluated_key\n        response:\n          header: x-soracom-next-key\n    post:\n      description: Create a packet capture session associated with the SIM\n      operationId: createSimPacketCaptureSession\n      parameters:\n      - description: The SIM ID for which a packet capture session is created\n        in: path\n        name: sim_id\n        required: true\n        schema:\n          type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/PacketCaptureSessionRequest'\n        description: A packet capture session request\n        required: true\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PacketCaptureSession'\n          description: Created a new packet capture sessions associated with the SIM\n        \"404\":\n          description: No such sim found\n      security:\n      - api_key: []\n        api_token: []\n      summary: Create Packet Capture Session\n      tags:\n      - Sim\n      x-soracom-cli:\n      - sims create-packet-capture-session\n  /sims/{sim_id}/packet_capture_sessions/{session_id}:\n    delete:\n      description: Delete a packet capture session associated with the SIM\n      operationId: deleteSimPacketCaptureSession\n      parameters:\n      - description: SIM ID\n        in: path\n        name: sim_id\n        required: true\n        schema:\n          type: string\n      - description: Packet capture session ID\n        in: path\n        name: session_id\n        required: true\n        schema:\n          type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PacketCaptureSession'\n          description: Deleted the packet capture session associated with the SIM\n        \"400\":\n          description: Failed to delete the packet capture session associated with\n            the SIM\n        \"404\":\n          description: The packet capture session associated with the SIM was not\n            found\n      security:\n      - api_key: []\n        api_token: []\n      summary: Delete Packet Capture Session\n      tags:\n      - Sim\n      x-soracom-cli:\n      - sims delete-packet-capture-session\n    get:\n      description: Get a packet capture sessions associated the SIM\n      operationId: getSimPacketCaptureSession\n      parameters:\n      - description: SIM ID\n        in: path\n        name: sim_id\n        required: true\n        schema:\n          type: string\n      - description: Packet capture session ID\n        in: path\n        name: session_id\n        required: true\n        schema:\n          type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PacketCaptureSession'\n          description: The packet capture session associated with the SIM\n        \"404\":\n          description: The packet capture session associated with the SIM was not\n            found\n      security:\n      - api_key: []\n        api_token: []\n      summary: Get Packet Capture Session\n      tags:\n      - Sim\n      x-soracom-cli:\n      - sims get-packet-capture-session\n  /sims/{sim_id}/packet_capture_sessions/{session_id}/stop:\n    post:\n      description: Stop a packet capture session associated with the SIM\n      operationId: stopSimPacketCaptureSession\n      parameters:\n      - description: SIM ID\n        in: path\n        name: sim_id\n        required: true\n        schema:\n          type: string\n      - description: Packet capture session ID\n        in: path\n        name: session_id\n        required: true\n        schema:\n          type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PacketCaptureSession'\n          description: The stopped packet capture session associated with the SIM\n        \"400\":\n          description: The packet capture session can be stopped only when its status\n            is CAPTURING\n        \"404\":\n          description: The packet capture session associated with the SIM was not\n            found\n        \"500\":\n          description: The packet capture session could not be stopped\n      security:\n      - api_key: []\n        api_token: []\n      summary: Stop SIM Packet Capture Session\n      tags:\n      - Sim\n      x-soracom-cli:\n      - sims stop-packet-capture-session\n  /sims/{sim_id}/profiles/{iccid}/add_subscription:\n    post:\n      description: This API is used to trigger the OTA update of a new subscription\n        container to a SIM profile.\n      operationId: addSubscription\n      parameters:\n      - description: Id of the target SIM\n        in: path\n        name: sim_id\n        required: true\n        schema:\n          type: string\n      - description: Iccid of the target profile\n        in: path\n        name: iccid\n        required: true\n        schema:\n          type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              properties:\n                enable:\n                  description: A flag to indicate if it should cause a switch to the\n                    subscription after the download has finished. If it is set to\n                    true, the downloaded subscriber will be enabled immediately.\n                  type: boolean\n                subscription:\n                  description: Name of the subscription plan\n                  type: string\n                type:\n                  enum:\n                  - virtual\n                  - cellular\n                  type: string\n              required:\n              - subscription\n              type: object\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/SimProfile'\n          description: The updated SIM profile\n        \"404\":\n          description: No such profile or sim found\n      security:\n      - api_key: []\n        api_token: []\n      summary: Adds a new subscription container to a SIM profile\n      tags:\n      - Sim\n      x-soracom-cli:\n      - sims add-subscription\n  /sims/{sim_id}/profiles/{iccid}/subscribers/{imsi}/cancel_download:\n    post:\n      description: Cancel the download of subscription before it gets downloaded to\n        the SIM. The condition is that the status of the subscription is still `shipped`\n      operationId: cancelSubscriptionContainerDownload\n      parameters:\n      - description: SIM ID of the target subscription container.\n        in: path\n        name: sim_id\n        required: true\n        schema:\n          format: SimId\n          type: string\n      - description: ICCID of the target subscription container.\n        in: path\n        name: iccid\n        required: true\n        schema:\n          type: string\n      - description: IMSI of the target subscription container.\n        in: path\n        name: imsi\n        required: true\n        schema:\n          format: IMSI\n          type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/SubscriptionContainerStatus'\n          description: A schema listing subscription containers and containing a map\n            of PLMN codes to subscription containers.\n        \"404\":\n          description: No such SIM found\n      security:\n      - api_key: []\n        api_token: []\n      summary: Cancel subscription download to subscription container\n      tags:\n      - Sim\n      x-soracom-cli:\n      - sims cancel-subscription-container-download\n  /sims/{sim_id}/profiles/{iccid}/subscribers/{imsi}/terminate:\n    post:\n      description: Terminate subscription container. Currently this API supports only\n        for virtual subscribers for SORACOM Arc service.\n      operationId: terminateSubscriptionContainer\n      parameters:\n      - description: SIM ID of the target subscription container.\n        in: path\n        name: sim_id\n        required: true\n        schema:\n          format: SimId\n          type: string\n      - description: ICCID of the target subscription container.\n        in: path\n        name: iccid\n        required: true\n        schema:\n          type: string\n      - description: IMSI of the target subscription container.\n        in: path\n        name: imsi\n        required: true\n        schema:\n          format: IMSI\n          type: string\n      responses:\n        \"204\":\n          description: The subscription container has been terminated.\n      security:\n      - api_key: []\n        api_token: []\n      summary: Terminate subscription container\n      tags:\n      - Sim\n      x-soracom-cli:\n      - sims terminate-subscription-container\n  /sims/{sim_id}/profiles/{iccid}/subscription_containers:\n    get:\n      description: Returns a schema listing subscription containers and containing\n        a map of PLMN codes to subscription containers\n      operationId: listSubscriptionContainers\n      parameters:\n      - description: Sim Id of the target SIM.\n        in: path\n        name: sim_id\n        required: true\n        schema:\n          type: string\n      - description: Iccid of the target profile\n        in: path\n        name: iccid\n        required: true\n        schema:\n          type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/SubscriptionContainerStatus'\n          description: A schema listing subscription containers and containing a map\n            of PLMN codes to subscription containers.\n        \"400\":\n          description: Missing parameter\n        \"404\":\n          description: No such profile or sim found\n      security:\n      - api_key: []\n        api_token: []\n      summary: Get subscription container status.\n      tags:\n      - Sim\n      x-soracom-cli:\n      - sims list-subscription-containers\n  /sims/{sim_id}/profiles/{iccid}/subscription_containers/{container_id}/enable:\n    post:\n      description: Causes the identified container to become the active one on the\n        Sim.\n      operationId: enableSubscriptionContainer\n      parameters:\n      - description: SIM ID of the target SIM.\n        in: path\n        name: sim_id\n        required: true\n        schema:\n          type: string\n      - description: Iccid of the target profile\n        in: path\n        name: iccid\n        required: true\n        schema:\n          type: string\n      - description: Identifier of the target container\n        in: path\n        name: container_id\n        required: true\n        schema:\n          type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/SubscriptionContainerStatus'\n          description: A schema listing subscription containers and containing a map\n            of PLMN codes to subscription containers.\n        \"404\":\n          description: No such profile or sim found\n      security:\n      - api_key: []\n        api_token: []\n      summary: Enables a subscription container.\n      tags:\n      - Sim\n      x-soracom-cli:\n      - sims enable-subscription-container\n  /sims/{sim_id}/profiles/{iccid}/subscription_containers/country_mapping:\n    put:\n      description: Inserts/updates Country (and optionally network) to subscription\n        container mapping entries in the mapping table.\n      operationId: putSubscriptionContainerCountryMappingEntries\n      parameters:\n      - description: SIM ID of the target SIM.\n        in: path\n        name: sim_id\n        required: true\n        schema:\n          type: string\n      - description: Iccid of the target profile\n        in: path\n        name: iccid\n        required: true\n        schema:\n          type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/MappingEntries'\n        description: collection of country (and optionally network) to subscription\n          container mapping entries\n        required: true\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/SubscriptionContainerStatus'\n          description: A schema listing subscription containers and containing a map\n            of PLMN codes to subscription containers.\n        \"400\":\n          description: Missing parameter\n        \"404\":\n          description: No such profile or sim found\n      security:\n      - api_key: []\n        api_token: []\n      summary: Updates subscription container country mapping entries.\n      tags:\n      - Sim\n      x-soracom-cli:\n      - sims put-country-mapping-entries\n  /sims/{sim_id}/profiles/{iccid}/subscription_containers/country_mapping/{mcc}:\n    delete:\n      description: Delete subscription container country mapping entries\n      operationId: deleteSubscriptionContainerCountryMappingEntry\n      parameters:\n      - description: SIM ID of the target SIM.\n        in: path\n        name: sim_id\n        required: true\n        schema:\n          type: string\n      - description: Iccid of the target profile\n        in: path\n        name: iccid\n        required: true\n        schema:\n          type: string\n      - description: mobile country code\n        in: path\n        name: mcc\n        required: true\n        schema:\n          type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/SubscriptionContainerStatus'\n          description: A schema listing subscription containers and containing a map\n            of PLMN codes to subscription containers.\n        \"400\":\n          description: Missing parameter\n        \"404\":\n          description: No such profile or sim found\n      security:\n      - api_key: []\n        api_token: []\n      summary: Delete subscription container mapping entries\n      tags:\n      - Sim\n      x-soracom-cli:\n      - sims delete-country-mapping-entry\n  /sims/{sim_id}/register:\n    post:\n      description: Registers a SIM to an operator.\n      operationId: registerSim\n      parameters:\n      - description: SIM ID of the target SIM.\n        in: path\n        name: sim_id\n        required: true\n        schema:\n          type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/RegisterSimRequest'\n        description: A SIM registration request\n        required: true\n      responses:\n        \"201\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Sim'\n          description: Sim registration complete.\n      security:\n      - api_key: []\n        api_token: []\n      summary: Register SIM.\n      tags:\n      - Sim\n      x-soracom-cli:\n      - sims register\n  /sims/{sim_id}/report_local_info:\n    post:\n      description: Triggers SIM to report SIM local info.\n      operationId: reportSimLocalInfo\n      parameters:\n      - description: SIM ID of the target SIM.\n        in: path\n        name: sim_id\n        required: true\n        schema:\n          format: SimId\n          type: string\n      responses:\n        \"202\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Subscriber'\n          description: The local info reporting has successfully been triggered. The\n            subscriber information is asynchronously updated when the SIM reports\n            the information back.\n        \"400\":\n          description: The specified SIM active subscriber does not support local\n            info reporting feature.\n        \"404\":\n          description: The specified SIM does not exist.\n      security:\n      - api_key: []\n        api_token: []\n      summary: Triggers SIM to report SIM local info.\n      tags:\n      - Sim\n      x-soracom-cli:\n      - sims report-local-info\n  /sims/{sim_id}/send_sms:\n    post:\n      description: Send SMS to the specified SIM.\n      operationId: sendSmsToSim\n      parameters:\n      - description: SIM ID of the target SIM.\n        in: path\n        name: sim_id\n        required: true\n        schema:\n          format: SimId\n          type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/SmsForwardingRequest'\n        description: SMS forwarding request that contains message body and its encoding\n          type.\n        required: true\n      responses:\n        \"202\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/SmsForwardingReport'\n          description: SMS forwarding report containing message ID.\n        \"400\":\n          description: The specified SIM does not support SMS API.\n        \"404\":\n          description: The specified SIM does not exist.\n      security:\n      - api_key: []\n        api_token: []\n      summary: Send SMS to SIM\n      tags:\n      - Sim\n      x-soracom-cli:\n      - sims send-sms\n  /sims/{sim_id}/sessions/arc:\n    post:\n      description: Use this API to re-activate a session for a virtual SIM.\n      operationId: createArcSession\n      parameters:\n      - description: SIM ID of the target SIM.\n        in: path\n        name: sim_id\n        required: true\n        schema:\n          format: SimId\n          type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ArcSessionCreateResponse'\n          description: Arc session created\n        \"400\":\n          description: Arc credentials missing\n      security:\n      - api_key: []\n        api_token: []\n      summary: Re-create an Arc session.\n      tags:\n      - Sim\n      x-soracom-cli:\n      - sims create-arc-session\n  /sims/{sim_id}/set_expiry_time:\n    post:\n      description: Updates expiry time of the specified SIM.\n      operationId: setSimExpiryTime\n      parameters:\n      - description: SIM ID of the target SIM.\n        in: path\n        name: sim_id\n        required: true\n        schema:\n          format: SimId\n          type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/ExpiryTime'\n        description: 'Expiry time after the update (unixtime: in milliseconds).'\n        required: true\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Sim'\n          description: The SIM's detailed information after the update.\n        \"404\":\n          description: The specified SIM does not exist.\n      security:\n      - api_key: []\n        api_token: []\n      summary: Update expiry time of SIM.\n      tags:\n      - Sim\n      x-soracom-cli:\n      - sims set-expiry-time\n  /sims/{sim_id}/set_group:\n    post:\n      description: Sets or overwrites a group for the specified SIM.\n      operationId: setSimGroup\n      parameters:\n      - description: SIM ID of the target SIM.\n        in: path\n        name: sim_id\n        required: true\n        schema:\n          type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/SetGroupRequest'\n        description: Group (may include ID only).\n        required: true\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Sim'\n          description: The SIM's detailed information after the update.\n        \"404\":\n          description: The specified SIM does not exist.\n      security:\n      - api_key: []\n        api_token: []\n      summary: Set Group id of a SIM.\n      tags:\n      - Sim\n      x-soracom-cli:\n      - sims set-group\n  /sims/{sim_id}/set_imei_lock:\n    post:\n      description: Set IMEI that the SIM should be locked to.\n      operationId: setSimImeiLock\n      parameters:\n      - description: SIM ID of the target SIM.\n        in: path\n        name: sim_id\n        required: true\n        schema:\n          type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/SetImeiLockRequest'\n        description: IMEI lock configuration for the SIM. (IMEI can be left blank\n          for locking to the current IMEI of an online SIM.)\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Sim'\n          description: The SIM's detailed information after the update.\n        \"400\":\n          description: Invalid IMEI string or SIM is offline and IMEI not specified.\n        \"404\":\n          description: The specified SIM does not exist.\n      security:\n      - api_key: []\n        api_token: []\n      summary: Set IMEI lock configuration for the SIM.\n      tags:\n      - Sim\n      x-soracom-cli:\n      - sims set-imei-lock\n  /sims/{sim_id}/set_to_standby:\n    post:\n      description: Set the specified SIM to standby mode.\n      operationId: setSimToStandby\n      parameters:\n      - description: SIM ID of the target SIM.\n        in: path\n        name: sim_id\n        required: true\n        schema:\n          format: SimId\n          type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Sim'\n          description: The SIM's detailed information after the update.\n        \"400\":\n          description: The specified SIM does not support standby mode.\n        \"404\":\n          description: The specified SIM does not exist.\n      security:\n      - api_key: []\n        api_token: []\n      summary: Set SIM to standby mode.\n      tags:\n      - Sim\n      x-soracom-cli:\n      - sims set-to-standby\n  /sims/{sim_id}/suspend:\n    post:\n      description: Suspends the specified SIM\n      operationId: suspendSim\n      parameters:\n      - description: SIM ID of the target SIM.\n        in: path\n        name: sim_id\n        required: true\n        schema:\n          format: SimId\n          type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Sim'\n          description: The SIM's detailed information after the update.\n        \"404\":\n          description: The specified SIM does not exist.\n      security:\n      - api_key: []\n        api_token: []\n      summary: Suspend SIM.\n      tags:\n      - Sim\n      x-soracom-cli:\n      - sims suspend\n  /sims/{sim_id}/tags:\n    put:\n      description: Inserts/updates tags for the specified SIM.\n      operationId: putSimTags\n      parameters:\n      - description: SIM ID of the target SIM.\n        in: path\n        name: sim_id\n        required: true\n        schema:\n          type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              items:\n                $ref: '#/components/schemas/TagUpdateRequest'\n              type: array\n        description: Array of tags to be inserted/updated.\n        required: true\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Sim'\n          description: The SIM's detailed information after the update.\n        \"404\":\n          description: The specified SIM does not exist.\n      security:\n      - api_key: []\n        api_token: []\n      summary: Bulk insert or update SIM tags.\n      tags:\n      - Sim\n      x-sam-operationId: putTags\n      x-soracom-cli:\n      - sims put-tags\n  /sims/{sim_id}/tags/{tag_name}:\n    delete:\n      description: Deletes a tag from the specified SIM.\n      operationId: deleteSimTag\n      parameters:\n      - description: Sim Id of the target SIM.\n        in: path\n        name: sim_id\n        required: true\n        schema:\n          type: string\n      - description: Tag name to be deleted. (This will be part of a URL path, so\n          it needs to be percent-encoded. In JavaScript, specify the name after it\n          has been encoded using encodeURIComponent().)\n        in: path\n        name: tag_name\n        required: true\n        schema:\n          type: string\n      responses:\n        \"204\":\n          description: Deletion of specified tag complete.\n        \"404\":\n          description: The specified subscriber or the tag does not exist.\n      security:\n      - api_key: []\n        api_token: []\n      summary: Delete SIM tag.\n      tags:\n      - Sim\n      x-sam-operationId: deleteTag\n      x-soracom-cli:\n      - sims delete-tag\n  /sims/{sim_id}/terminate:\n    post:\n      description: Terminates the specified SIM.\n      operationId: terminateSim\n      parameters:\n      - description: SIM ID of the target SIM.\n        in: path\n        name: sim_id\n        required: true\n        schema:\n          format: SimId\n          type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Sim'\n          description: The SIM's detailed information after the update.\n        \"404\":\n          description: The specified SIM does not exist.\n      security:\n      - api_key: []\n        api_token: []\n      summary: Terminate SIM.\n      tags:\n      - Sim\n      x-soracom-cli:\n      - sims terminate\n  /sims/{sim_id}/unset_expiry_time:\n    post:\n      description: Deletes expiry time of specified SIM and changes it to indefinite.\n      operationId: unsetSimExpiryTime\n      parameters:\n      - description: SIM ID of the target SIM.\n        in: path\n        name: sim_id\n        required: true\n        schema:\n          type: string\n      responses:\n        \"204\":\n          description: Change of specified SIM's expiry time to indefinite complete.\n        \"404\":\n          description: The specified SIM does not exist or the SIM does not have an\n            expiry time.\n      security:\n      - api_key: []\n        api_token: []\n      summary: Delete expiry time of the SIM.\n      tags:\n      - Sim\n      x-soracom-cli:\n      - sims unset-expiry-time\n  /sims/{sim_id}/unset_group:\n    post:\n      description: Removes the group configuration from the specified SIM.\n      operationId: unsetSimGroup\n      parameters:\n      - description: SIM ID of the target SIM.\n        in: path\n        name: sim_id\n        required: true\n        schema:\n          type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Sim'\n          description: The SIM's detailed information after the update.\n        \"404\":\n          description: The specified SIM does not exist or the SIM does not belong\n            to a group.\n      security:\n      - api_key: []\n        api_token: []\n      summary: Unset Group to SIM.\n      tags:\n      - Sim\n      x-soracom-cli:\n      - sims unset-group\n  /sims/{sim_id}/unset_imei_lock:\n    post:\n      description: Remove any existing IMEI lock configuration for the SIM.\n      operationId: unsetSimImeiLock\n      parameters:\n      - description: Sim Id of the target SIM.\n        in: path\n        name: sim_id\n        required: true\n        schema:\n          type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Sim'\n          description: The SIM's detailed information after the update.\n        \"404\":\n          description: The specified SIM does not exist.\n      security:\n      - api_key: []\n        api_token: []\n      summary: Unset IMEI lock configuration for SIM.\n      tags:\n      - Sim\n      x-soracom-cli:\n      - sims unset-imei-lock\n  /sims/{sim_id}/update_speed_class:\n    post:\n      description: Changes the speed class of the specified SIM.\n      operationId: updateSimSpeedClass\n      parameters:\n      - description: SIM ID of the target SIM.\n        in: path\n        name: sim_id\n        required: true\n        schema:\n          type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/UpdateSpeedClassRequest'\n        description: speed_class\n        required: true\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Sim'\n          description: The SIM's detailed information after the update.\n        \"400\":\n          description: The specified speed class does not exist to the subscription.\n            For example, arc.standard cannot be specified for plan01s.\n        \"404\":\n          description: The specified SIM does not exist.\n      security:\n      - api_key: []\n        api_token: []\n      summary: Update SIM speed class.\n      tags:\n      - Sim\n      x-soracom-cli:\n      - sims update-speed-class\n  /soralets:\n    get:\n      description: Returns a list of Soralets.\n      operationId: listSoralets\n      parameters:\n      - description: Sort order\n        in: query\n        name: sort\n        required: false\n        schema:\n          default: asc\n          enum:\n          - asc\n          - desc\n          type: string\n      - description: The maximum number of items in a response\n        in: query\n        name: limit\n        required: false\n        schema:\n          type: integer\n      - description: The identifier of the last Soralet retrieved on the current page.\n          By specifying this parameter, you can continue to retrieve the list from\n          the next Soralet onward.\n        in: query\n        name: last_evaluated_key\n        required: false\n        schema:\n          type: string\n      responses:\n        \"200\":\n          content:\n            application/json;charset=UTF-8:\n              schema:\n                items:\n                  $ref: '#/components/schemas/Soralet'\n                type: array\n          description: OK.\n      security:\n      - api_key: []\n        api_token: []\n      summary: List Soralets.\n      tags:\n      - Soralet\n      x-soracom-cli:\n      - soralets list\n      x-soracom-cli-pagination:\n        request:\n          param: last_evaluated_key\n        response:\n          header: x-soracom-next-key\n    post:\n      description: Create a Soralet.\n      operationId: createSoralet\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/CreateSoraletRequest'\n        description: request\n        required: true\n      responses:\n        \"201\":\n          description: Successfully created a new Soralet.\n        \"400\":\n          description: The specified Soralet already exists or the specified soralet_id\n            was invalid.\n      security:\n      - api_key: []\n        api_token: []\n      summary: Create a Soralet.\n      tags:\n      - Soralet\n      x-soracom-cli:\n      - soralets create\n  /soralets/{soralet_id}:\n    delete:\n      description: Delete the specified Soralet.\n      operationId: deleteSoralet\n      parameters:\n      - description: The identifier of Soralet.\n        in: path\n        name: soralet_id\n        required: true\n        schema:\n          type: string\n      responses:\n        \"204\":\n          description: Successfully deleted the specified Soralet.\n        \"404\":\n          description: The specified Soralet is not found.\n      security:\n      - api_key: []\n        api_token: []\n      summary: Delete Soralet.\n      tags:\n      - Soralet\n      x-soracom-cli:\n      - soralets delete\n    get:\n      description: Returns a Soralet.\n      operationId: getSoralet\n      parameters:\n      - description: The identifier of Soralet.\n        in: path\n        name: soralet_id\n        required: true\n        schema:\n          type: string\n      responses:\n        \"200\":\n          content:\n            application/json;charset=UTF-8:\n              schema:\n                $ref: '#/components/schemas/Soralet'\n          description: OK.\n        \"404\":\n          description: The specified Soralet is not found.\n      security:\n      - api_key: []\n        api_token: []\n      summary: Get a Soralet.\n      tags:\n      - Soralet\n      x-soracom-cli:\n      - soralets get\n  /soralets/{soralet_id}/logs:\n    get:\n      description: Returns a list of log messages from the specified Soralet.\n      operationId: getSoraletLogs\n      parameters:\n      - description: The identifier of Soralet.\n        in: path\n        name: soralet_id\n        required: true\n        schema:\n          type: string\n      - description: Sort order\n        in: query\n        name: sort\n        required: false\n        schema:\n          default: desc\n          enum:\n          - asc\n          - desc\n          type: string\n      - description: The maximum number of items in a response.\n        in: query\n        name: limit\n        required: false\n        schema:\n          type: integer\n      - description: The identifier of the last log message retrieved on the current\n          page. By specifying this parameter, you can continue to retrieve the list\n          from the next log message onward.\n        in: query\n        name: last_evaluated_key\n        required: false\n        schema:\n          type: string\n      responses:\n        \"200\":\n          content:\n            application/json;charset=UTF-8:\n              schema:\n                items:\n                  $ref: '#/components/schemas/SoraletLog'\n                type: array\n          description: OK.\n      security:\n      - api_key: []\n        api_token: []\n      summary: Get log messages from Soralet.\n      tags:\n      - Soralet\n      x-soracom-cli:\n      - soralets get-logs\n      x-soracom-cli-pagination:\n        request:\n          param: last_evaluated_key\n        response:\n          header: x-soracom-next-key\n  /soralets/{soralet_id}/test:\n    post:\n      description: Execute the specified Soralet with the specified arguments.\n      operationId: testSoralet\n      parameters:\n      - description: The identifier of Soralet.\n        in: path\n        name: soralet_id\n        required: true\n        schema:\n          type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/ExecuteSoraletRequest'\n        description: request\n        required: true\n      responses:\n        \"200\":\n          content:\n            application/json;charset=UTF-8:\n              schema:\n                $ref: '#/components/schemas/ExecuteSoraletResponse'\n          description: OK.\n      security:\n      - api_key: []\n        api_token: []\n      summary: Execute Soralet with arguments.\n      tags:\n      - Soralet\n      x-soracom-cli:\n      - soralets test\n      - soralets exec\n  /soralets/{soralet_id}/versions:\n    get:\n      description: Returns a list of Soralet versions.\n      operationId: listSoraletVersions\n      parameters:\n      - description: The identifier of Soralet.\n        in: path\n        name: soralet_id\n        required: true\n        schema:\n          type: string\n      - description: Sort order\n        in: query\n        name: sort\n        required: false\n        schema:\n          default: desc\n          enum:\n          - asc\n          - desc\n          type: string\n      - description: The maximum number of items in a response.\n        in: query\n        name: limit\n        required: false\n        schema:\n          type: integer\n      - description: The identifier of the last version retrieved on the current page.\n          By specifying this parameter, you can continue to retrieve the list from\n          the next version onward.\n        in: query\n        name: last_evaluated_key\n        required: false\n        schema:\n          type: string\n      responses:\n        \"200\":\n          content:\n            application/json;charset=UTF-8:\n              schema:\n                items:\n                  $ref: '#/components/schemas/SoraletVersion'\n                type: array\n          description: OK.\n      security:\n      - api_key: []\n        api_token: []\n      summary: List versions of Soralet.\n      tags:\n      - Soralet\n      x-soracom-cli:\n      - soralets list-versions\n      x-soracom-cli-pagination:\n        request:\n          param: last_evaluated_key\n        response:\n          header: x-soracom-next-key\n    post:\n      description: Upload code and create a new version.\n      operationId: uploadSoraletCode\n      parameters:\n      - description: The identifier of Soralet.\n        in: path\n        name: soralet_id\n        required: true\n        schema:\n          type: string\n      - description: Content type of the file to upload\n        in: header\n        name: content-type\n        schema:\n          type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              format: binary\n              type: string\n        required: true\n      responses:\n        \"201\":\n          content:\n            application/json;charset=UTF-8:\n              schema:\n                $ref: '#/components/schemas/SoraletVersion'\n          description: Successfully created a new version.\n      security:\n      - api_key: []\n        api_token: []\n      summary: Upload code and create a new version.\n      tags:\n      - Soralet\n      x-soracom-cli:\n      - soralets upload\n  /soralets/{soralet_id}/versions/{version}:\n    delete:\n      description: Delete the specified Soralet version.\n      operationId: deleteSoraletVersion\n      parameters:\n      - description: The identifier of Soralet.\n        in: path\n        name: soralet_id\n        required: true\n        schema:\n          type: string\n      - description: Soralet version.\n        in: path\n        name: version\n        required: true\n        schema:\n          type: integer\n      responses:\n        \"204\":\n          description: Successfully deleted the specified Soralet version.\n        \"404\":\n          description: The specified Soralet version is not found.\n      security:\n      - api_key: []\n        api_token: []\n      summary: Delete a Soralet version.\n      tags:\n      - Soralet\n      x-soracom-cli:\n      - soralets delete-version\n  /stats/air/operators/{operator_id}/export:\n    post:\n      description: Retrieves a file containing the usage report of all subscribers\n        for the specified operator. The report data range is specified with from,\n        to in unixtime. The report contains monthly data. The file output destination\n        is AWS S3. The file output format is CSV.\n      operationId: exportAirStats\n      parameters:\n      - description: operator_id\n        in: path\n        name: operator_id\n        required: true\n        schema:\n          type: string\n      - description: export_mode (async, sync)\n        in: query\n        name: export_mode\n        required: false\n        schema:\n          enum:\n          - async\n          - sync\n          type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/ExportRequest'\n        description: export time period\n        required: true\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/FileExportResponse'\n          description: OK.\n      security:\n      - api_key: []\n        api_token: []\n      summary: Export Air Usage Report of All Subscribers.\n      tags:\n      - Stats\n      x-soracom-cli:\n      - stats air export\n  /stats/air/sims/{sim_id}:\n    get:\n      description: Retrieves the usage report for the SIM specified by the simId.\n      operationId: getAirStatsOfSim\n      parameters:\n      - description: SIM ID\n        in: path\n        name: sim_id\n        required: true\n        schema:\n          type: string\n      - description: Start time in unixtime for the aggregate data.\n        in: query\n        name: from\n        required: true\n        schema:\n          type: integer\n      - description: End time in unixtime for the aggregate data.\n        in: query\n        name: to\n        required: true\n        schema:\n          type: integer\n      - description: Units of aggregate data. For minutes, the interval is around\n          5 minutes.\n        in: query\n        name: period\n        required: true\n        schema:\n          enum:\n          - month\n          - day\n          - minutes\n          type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: '#/components/schemas/AirStatsResponse'\n                type: array\n          description: OK.\n      security:\n      - api_key: []\n        api_token: []\n      summary: Get Air Usage Report of SIM.\n      tags:\n      - Stats\n      x-soracom-cli:\n      - stats air sims get\n  /stats/air/subscribers/{imsi}:\n    get:\n      description: Retrieves the usage report for the subscriber specified by the\n        IMSI.\n      operationId: getAirStats\n      parameters:\n      - description: imsi\n        in: path\n        name: imsi\n        required: true\n        schema:\n          type: string\n      - description: Start time in unixtime for the aggregate data.\n        in: query\n        name: from\n        required: true\n        schema:\n          type: integer\n      - description: End time in unixtime for the aggregate data.\n        in: query\n        name: to\n        required: true\n        schema:\n          type: integer\n      - description: Units of aggregate data. For minutes, the interval is around\n          5 minutes.\n        in: query\n        name: period\n        required: true\n        schema:\n          enum:\n          - month\n          - day\n          - minutes\n          type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: '#/components/schemas/AirStatsResponse'\n                type: array\n          description: OK.\n      security:\n      - api_key: []\n        api_token: []\n      summary: Get Air Usage Report of Subscriber.\n      tags:\n      - Stats\n      x-soracom-cli:\n      - stats air get\n  /stats/beam/operators/{operator_id}/export:\n    post:\n      description: Retrieves a file containing the SORACOM Beam usage report of all\n        subscribers for the specified operator. The report data range is specified\n        with from, to in unixtime. The report contains monthly data. The file output\n        destination is AWS S3. The file output format is CSV.\n      operationId: exportBeamStats\n      parameters:\n      - description: operator ID\n        in: path\n        name: operator_id\n        required: true\n        schema:\n          type: string\n      - description: export_mode (async, sync)\n        in: query\n        name: export_mode\n        required: false\n        schema:\n          enum:\n          - async\n          - sync\n          type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/ExportRequest'\n        description: export time period\n        required: true\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/FileExportResponse'\n          description: OK.\n      security:\n      - api_key: []\n        api_token: []\n      summary: Export Beam Usage Report of All Subscribers.\n      tags:\n      - Stats\n      x-soracom-cli:\n      - stats beam export\n  /stats/beam/subscribers/{imsi}:\n    get:\n      description: Retrieves the Soracom Beam usage report for the subscriber specified\n        by the IMSI.\n      operationId: getBeamStats\n      parameters:\n      - description: imsi\n        in: path\n        name: imsi\n        required: true\n        schema:\n          type: string\n      - description: Start time in unixtime for the aggregate data.\n        in: query\n        name: from\n        required: true\n        schema:\n          type: integer\n      - description: End time in unixtime for the aggregate data.\n        in: query\n        name: to\n        required: true\n        schema:\n          type: integer\n      - description: Units of aggregate data. For minutes, the interval is around\n          5 minutes.\n        in: query\n        name: period\n        required: true\n        schema:\n          enum:\n          - month\n          - day\n          - minutes\n          type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: '#/components/schemas/BeamStatsResponse'\n                type: array\n          description: OK.\n      security:\n      - api_key: []\n        api_token: []\n      summary: Get Beam Usage Report of Subscriber.\n      tags:\n      - Stats\n      x-soracom-cli:\n      - stats beam get\n  /stats/funk/operators/{operator_id}/export:\n    post:\n      description: Retrieves a file containing the SORACOM Funk usage report of all\n        subscribers for the specified operator. The report data range is specified\n        with from, to in unixtime. The report contains monthly data. The file output\n        destination is AWS S3. The file output format is CSV.\n      operationId: exportFunkStats\n      parameters:\n      - description: operator ID\n        in: path\n        name: operator_id\n        required: true\n        schema:\n          type: string\n      - description: export_mode (async, sync)\n        in: query\n        name: export_mode\n        required: false\n        schema:\n          enum:\n          - async\n          - sync\n          type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/ExportRequest'\n        description: export time period\n        required: true\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/FileExportResponse'\n          description: OK.\n      security:\n      - api_key: []\n        api_token: []\n      summary: Export Funk Usage Report of All Subscribers.\n      tags:\n      - Stats\n      x-soracom-cli:\n      - stats funk export\n  /stats/funk/subscribers/{imsi}:\n    get:\n      description: Retrieves the Soracom Funk usage report for the subscriber specified\n        by the IMSI.\n      operationId: getFunkStats\n      parameters:\n      - description: imsi\n        in: path\n        name: imsi\n        required: true\n        schema:\n          type: string\n      - description: Start time in unixtime for the aggregate data.\n        in: query\n        name: from\n        required: true\n        schema:\n          type: integer\n      - description: End time in unixtime for the aggregate data.\n        in: query\n        name: to\n        required: true\n        schema:\n          type: integer\n      - description: Units of aggregate data. For minutes, the interval is around\n          5 minutes.\n        in: query\n        name: period\n        required: true\n        schema:\n          enum:\n          - month\n          - day\n          - minutes\n          type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: '#/components/schemas/FunkStatsResponse'\n                type: array\n          description: OK.\n      security:\n      - api_key: []\n        api_token: []\n      summary: Get Funk Usage Report of Subscriber.\n      tags:\n      - Stats\n      x-soracom-cli:\n      - stats funk get\n  /stats/funnel/operators/{operator_id}/export:\n    post:\n      description: Retrieves a file containing the SORACOM Funnel usage report of\n        all subscribers for the specified operator. The report data range is specified\n        with from, to in unixtime. The report contains monthly data. The file output\n        destination is AWS S3. The file output format is CSV.\n      operationId: exportFunnelStats\n      parameters:\n      - description: operator ID\n        in: path\n        name: operator_id\n        required: true\n        schema:\n          type: string\n      - description: export_mode (async, sync)\n        in: query\n        name: export_mode\n        required: false\n        schema:\n          enum:\n          - async\n          - sync\n          type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/ExportRequest'\n        description: export time period\n        required: true\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/FileExportResponse'\n          description: OK.\n      security:\n      - api_key: []\n        api_token: []\n      summary: Export Funnel Usage Report of All Subscribers.\n      tags:\n      - Stats\n      x-soracom-cli:\n      - stats funnel export\n  /stats/funnel/subscribers/{imsi}:\n    get:\n      description: Retrieves the Soracom Funnel usage report for the subscriber specified\n        by the IMSI.\n      operationId: getFunnelStats\n      parameters:\n      - description: imsi\n        in: path\n        name: imsi\n        required: true\n        schema:\n          type: string\n      - description: Start time in unixtime for the aggregate data.\n        in: query\n        name: from\n        required: true\n        schema:\n          type: integer\n      - description: End time in unixtime for the aggregate data.\n        in: query\n        name: to\n        required: true\n        schema:\n          type: integer\n      - description: Units of aggregate data. For minutes, the interval is around\n          5 minutes.\n        in: query\n        name: period\n        required: true\n        schema:\n          enum:\n          - month\n          - day\n          - minutes\n          type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: '#/components/schemas/FunnelStatsResponse'\n                type: array\n          description: OK.\n      security:\n      - api_key: []\n        api_token: []\n      summary: Get Funnel Usage Report of Subscriber.\n      tags:\n      - Stats\n      x-soracom-cli:\n      - stats funnel get\n  /stats/harvest/operators/{operator_id}:\n    get:\n      description: Retrieves the SORACOM Harvest usage report for the operator.\n      operationId: getHarvestExportedDataStats\n      parameters:\n      - description: operator_id\n        in: path\n        name: operator_id\n        required: true\n        schema:\n          type: string\n      - description: Year/Month in 'YYYYMM' format.\n        in: query\n        name: year_month\n        required: false\n        schema:\n          type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/HarvestExportedDataStatsResponse'\n          description: OK.\n      security:\n      - api_key: []\n        api_token: []\n      summary: Get 'Harvest usage report' for the specified operator.\n      tags:\n      - Stats\n      x-soracom-cli:\n      - stats harvest get\n  /stats/harvest/subscribers/{imsi}:\n    get:\n      description: Retrieves the Soracom Harvest usage report for the subscriber specified\n        by the IMSI.\n      operationId: getHarvestStats\n      parameters:\n      - description: imsi\n        in: path\n        name: imsi\n        required: true\n        schema:\n          type: string\n      - description: Start time in unixtime for the aggregate data.\n        in: query\n        name: from\n        required: true\n        schema:\n          type: integer\n      - description: End time in unixtime for the aggregate data.\n        in: query\n        name: to\n        required: true\n        schema:\n          type: integer\n      - description: Units of aggregate data. For minutes, the interval is around\n          5 minutes.\n        in: query\n        name: period\n        required: true\n        schema:\n          enum:\n          - month\n          - day\n          - minutes\n          type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: '#/components/schemas/HarvestStatsResponse'\n                type: array\n          description: OK.\n      security:\n      - api_key: []\n        api_token: []\n      summary: Get Harvest Usage Report of Subscriber.\n      tags:\n      - Stats\n      x-soracom-cli:\n      - stats harvest get\n  /stats/napter/audit_logs:\n    get:\n      description: Get Napter audit logs' monthly exported data stats\n      operationId: getNapterAuditLogsExportedDataStats\n      parameters:\n      - description: Year/Month in 'YYYYMM' format.\n        in: query\n        name: year_month\n        required: false\n        schema:\n          type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/NapterAuditLogsExportedDataStatsResponse'\n          description: OK.\n      security:\n      - api_key: []\n        api_token: []\n      summary: Get Napter audit logs' monthly exported data stats\n      tags:\n      - Stats\n      x-soracom-cli:\n      - stats napter audit-logs get\n  /subscribers:\n    get:\n      description: Returns a list of subscribers that match certain criteria. If the\n        total number of subscribers does not fit in one page, a URL for accessing\n        the next page is returned in the 'Link' header of the response.\n      operationId: listSubscribers\n      parameters:\n      - description: Tag name for filtering the search (exact match).\n        in: query\n        name: tag_name\n        required: false\n        schema:\n          type: string\n      - description: Tag search string for filtering the search. Required when `tag_name`\n          has been specified.\n        in: query\n        name: tag_value\n        required: false\n        schema:\n          type: string\n      - description: Tag match mode.\n        in: query\n        name: tag_value_match_mode\n        required: false\n        schema:\n          default: exact\n          enum:\n          - exact\n          - prefix\n          type: string\n      - description: 'Status for filtering the search. Can specify multiple values\n          delimited by `|`. Valid values include: `active`, `inactive`, `ready`, `instock`,\n          `shipped`, `suspended`, and `terminated`.'\n        in: query\n        name: status_filter\n        required: false\n        schema:\n          type: string\n      - description: 'Speed class for filtering the search. Can specify multiple values\n          delimited by `|`. Valid values include: `s1.minimum`, `s1.slow`, `s1.standard`,\n          `s1.fast`'\n        in: query\n        name: speed_class_filter\n        required: false\n        schema:\n          type: string\n      - description: Serial number for filtering the search. Can specify multiple\n          values delimited by `|`. Returns subscribers with serial number starting\n          with the specified value(s).\n        in: query\n        name: serial_number_filter\n        required: false\n        schema:\n          type: string\n      - description: Maximum number of subscribers to retrieve. Setting a limit does\n          not guarantee the number of subscribers returned in the response (i.e. the\n          response may contain fewer subscribers than the specified limit).\n        in: query\n        name: limit\n        required: false\n        schema:\n          type: integer\n      - description: The IMSI of the last subscriber retrieved on the current page.\n          By specifying this parameter, you can continue to retrieve the list from\n          the next subscriber onward.\n        in: query\n        name: last_evaluated_key\n        required: false\n        schema:\n          type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: '#/components/schemas/Subscriber'\n                type: array\n          description: A list of subscribers.\n      security:\n      - api_key: []\n        api_token: []\n      summary: List Subscribers.\n      tags:\n      - Subscriber\n      x-soracom-cli:\n      - subscribers list\n      x-soracom-cli-pagination:\n        request:\n          param: last_evaluated_key\n        response:\n          header: x-soracom-next-key\n  /subscribers/{imsi}:\n    get:\n      description: Returns information about the specified subscriber.\n      operationId: getSubscriber\n      parameters:\n      - description: IMSI of the target subscriber.\n        in: path\n        name: imsi\n        required: true\n        schema:\n          type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Subscriber'\n          description: The subscriber's detailed information.\n        \"404\":\n          description: The specified subscriber does not exist.\n      security:\n      - api_key: []\n        api_token: []\n      summary: Get Subscriber.\n      tags:\n      - Subscriber\n      x-soracom-cli:\n      - subscribers get\n  /subscribers/{imsi}/activate:\n    post:\n      description: Activates status of specified subscriber.\n      operationId: activateSubscriber\n      parameters:\n      - description: IMSI of the target subscriber.\n        in: path\n        name: imsi\n        required: true\n        schema:\n          format: IMSI\n          type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Subscriber'\n          description: The subscriber's detailed information after the update.\n        \"404\":\n          description: The specified subscriber does not exist.\n      security:\n      - api_key: []\n        api_token: []\n      summary: Activate Subscriber.\n      tags:\n      - Subscriber\n      x-soracom-cli:\n      - subscribers activate\n  /subscribers/{imsi}/bundles:\n    put:\n      description: Sets bundles to the specified subscriber.\n      operationId: putBundles\n      parameters:\n      - description: IMSI of the target subscriber.\n        in: path\n        name: imsi\n        required: true\n        schema:\n          type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              items:\n                description: Specify a bundle to be set.\n                enum:\n                - D-300MB\n                - DU-10GB\n                - DU-50GB\n                type: string\n              type: array\n        description: Array of bundles to be set.\n        required: true\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Subscriber'\n          description: The subscriber's detailed information after the update.\n        \"404\":\n          description: The specified subscriber does not exist.\n      security:\n      - api_key: []\n        api_token: []\n      summary: Set Bundles to Subscriber.\n      tags:\n      - Subscriber\n      x-sam-operationId: putBundles\n      x-soracom-cli:\n      - subscribers put-bundles\n  /subscribers/{imsi}/data:\n    get:\n      description: Returns a list of data entries sent from a subscriber that match\n        certain criteria. If the total number of entries does not fit in one page,\n        a URL for accessing the next page is returned in the 'Link' header of the\n        response.\n      operationId: getDataFromSubscriber\n      parameters:\n      - description: IMSI of the target subscriber that generated data entries.\n        in: path\n        name: imsi\n        required: true\n        schema:\n          type: string\n      - description: Start time for the data entries search range (unixtime in milliseconds).\n        in: query\n        name: from\n        required: false\n        schema:\n          type: integer\n      - description: End time for the data entries search range (unixtime in milliseconds).\n        in: query\n        name: to\n        required: false\n        schema:\n          type: integer\n      - description: Sort order of the data entries. Either descending (latest data\n          entry first) or ascending (oldest data entry first).\n        in: query\n        name: sort\n        required: false\n        schema:\n          default: desc\n          enum:\n          - desc\n          - asc\n          type: string\n      - description: Maximum number of data entries to retrieve.\n        in: query\n        name: limit\n        required: false\n        schema:\n          type: integer\n      - description: The value of `time` in the last log entry retrieved in the previous\n          page. By specifying this parameter, you can continue to retrieve the list\n          from the next page onward.\n        in: query\n        name: last_evaluated_key\n        required: false\n        schema:\n          type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: '#/components/schemas/DataEntry'\n                type: array\n          description: A list of data entries.\n      security:\n      - api_key: []\n        api_token: []\n      summary: Get data sent from a subscriber.\n      tags:\n      - Subscriber\n      x-soracom-cli:\n      - data get\n      - subscribers get-data\n      x-soracom-cli-pagination:\n        request:\n          param: last_evaluated_key\n        response:\n          header: x-soracom-next-key\n  /subscribers/{imsi}/deactivate:\n    post:\n      description: Deactivates specified subscriber.\n      operationId: deactivateSubscriber\n      parameters:\n      - description: IMSI of the target subscriber.\n        in: path\n        name: imsi\n        required: true\n        schema:\n          format: IMSI\n          type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Subscriber'\n          description: The subscriber's detailed information after the update.\n        \"404\":\n          description: The specified subscriber does not exist.\n      security:\n      - api_key: []\n        api_token: []\n      summary: Deactivate Subscriber.\n      tags:\n      - Subscriber\n      x-soracom-cli:\n      - subscribers deactivate\n  /subscribers/{imsi}/delete_session:\n    post:\n      description: Deletes session for the specified subscriber.\n      operationId: deleteSubscriberSession\n      parameters:\n      - description: IMSI of the target subscriber.\n        in: path\n        name: imsi\n        required: true\n        schema:\n          type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Subscriber'\n          description: The subscriber's detailed information after the update.\n        \"404\":\n          description: The specified subscriber does not exist.\n      security:\n      - api_key: []\n        api_token: []\n      summary: Delete Session\n      tags:\n      - Subscriber\n      x-soracom-cli:\n      - subscribers delete-session\n  /subscribers/{imsi}/disable_termination:\n    post:\n      description: Disables termination of specified subscriber.\n      operationId: disableTermination\n      parameters:\n      - description: IMSI of the target subscriber.\n        in: path\n        name: imsi\n        required: true\n        schema:\n          format: IMSI\n          type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Subscriber'\n          description: The subscriber's detailed information after the update.\n        \"404\":\n          description: The specified subscriber does not exist.\n      security:\n      - api_key: []\n        api_token: []\n      summary: Disable Termination of Subscriber.\n      tags:\n      - Subscriber\n      x-soracom-cli:\n      - subscribers disable-termination\n  /subscribers/{imsi}/downlink/ping:\n    post:\n      description: Send ICMP ping requests to a subscriber.\n      operationId: subscriberDownlinkPingToUserEquipment\n      parameters:\n      - description: IMSI of the target subscriber.\n        in: path\n        name: imsi\n        required: true\n        schema:\n          format: IMSI\n          type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/DownlinkPingRequest'\n        description: ping options\n        required: true\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DownlinkPingResponse'\n          description: Result of the ping\n      security:\n      - api_key: []\n        api_token: []\n      summary: Send ping requests to a subscriber.\n      tags:\n      - Subscriber\n      x-soracom-cli:\n      - subscribers downlink-ping\n  /subscribers/{imsi}/enable_termination:\n    post:\n      description: Enables termination of specified subscriber.\n      operationId: enableTermination\n      parameters:\n      - description: IMSI of the target subscriber.\n        in: path\n        name: imsi\n        required: true\n        schema:\n          format: IMSI\n          type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Subscriber'\n          description: The subscriber's detailed information after the update.\n        \"404\":\n          description: The specified subscriber does not exist.\n      security:\n      - api_key: []\n        api_token: []\n      summary: Enable Termination of Subscriber.\n      tags:\n      - Subscriber\n      x-soracom-cli:\n      - subscribers enable-termination\n  /subscribers/{imsi}/events/sessions:\n    get:\n      description: Returns the history of session creation, change, and deletion events\n        occurred on the target SIM in the last 32 days. If the total number of events\n        does not fit in one page, a URL for accessing the next page is returned in\n        the `Link` header of the response.\n      operationId: listSessionEvents\n      parameters:\n      - description: IMSI of the target subscriber.\n        in: path\n        name: imsi\n        required: true\n        schema:\n          type: string\n      - description: Start time for the events search range (unixtime).\n        in: query\n        name: from\n        required: false\n        schema:\n          type: integer\n      - description: End time for the events search range (unixtime).\n        in: query\n        name: to\n        required: false\n        schema:\n          type: integer\n      - description: Maximum number of events to retrieve.\n        in: query\n        name: limit\n        required: false\n        schema:\n          type: integer\n      - description: The time stamp of the last event retrieved on the current page.\n          By specifying this parameter, you can continue to retrieve the list from\n          the next event onward.\n        in: query\n        name: last_evaluated_key\n        required: false\n        schema:\n          type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: '#/components/schemas/SessionEvent'\n                type: array\n          description: A list of session events\n      security:\n      - api_key: []\n        api_token: []\n      summary: List Session Events.\n      tags:\n      - Subscriber\n      x-soracom-cli:\n      - subscribers session-events\n      x-soracom-cli-pagination:\n        request:\n          param: last_evaluated_key\n        response:\n          header: x-soracom-next-key\n  /subscribers/{imsi}/register:\n    post:\n      description: Registers a subscriber.\n      operationId: registerSubscriber\n      parameters:\n      - description: IMSI of the target subscriber.\n        in: path\n        name: imsi\n        required: true\n        schema:\n          type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/RegisterSubscribersRequest'\n        description: subscriber\n        required: true\n      responses:\n        \"201\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Subscriber'\n          description: Subscriber registration complete.\n      security:\n      - api_key: []\n        api_token: []\n      summary: Register Subscriber.\n      tags:\n      - Subscriber\n      x-soracom-cli:\n      - subscribers register\n  /subscribers/{imsi}/report_local_info:\n    post:\n      description: Triggers Subscriber to report SIM local info.\n      operationId: reportLocalInfo\n      parameters:\n      - description: IMSI of the target subscriber.\n        in: path\n        name: imsi\n        required: true\n        schema:\n          format: IMSI\n          type: string\n      responses:\n        \"202\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Subscriber'\n          description: The local info reporting has successfully been triggered. The\n            subscriber information is asynchronously updated when the SIM reports\n            the information back.\n        \"400\":\n          description: The specified subscriber does not support local info reporting\n            feature.\n        \"404\":\n          description: The specified subscriber does not exist.\n      security:\n      - api_key: []\n        api_token: []\n      summary: Triggers Subscriber to report SIM local info.\n      tags:\n      - Subscriber\n      x-soracom-cli:\n      - subscribers report-local-info\n  /subscribers/{imsi}/send_sms:\n    post:\n      description: Send SMS to the specified subscriber.\n      operationId: sendSms\n      parameters:\n      - description: IMSI of the target subscriber.\n        in: path\n        name: imsi\n        required: true\n        schema:\n          format: IMSI\n          type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/SmsForwardingRequest'\n        description: SMS forwarding request that contains message body and its encoding\n          type.\n        required: true\n      responses:\n        \"202\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/SmsForwardingReport'\n          description: SMS forwarding report containing message ID.\n        \"400\":\n          description: The specified subscriber does not support SMS API.\n        \"404\":\n          description: The specified subscriber does not exist.\n      security:\n      - api_key: []\n        api_token: []\n      summary: Send SMS to Subscriber\n      tags:\n      - Subscriber\n      x-soracom-cli:\n      - subscribers send-sms\n  /subscribers/{imsi}/set_expiry_time:\n    post:\n      description: Updates expiry time of specified subscriber.\n      operationId: setExpiryTime\n      parameters:\n      - description: IMSI of the target subscriber.\n        in: path\n        name: imsi\n        required: true\n        schema:\n          format: IMSI\n          type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/ExpiryTime'\n        description: 'Expiry time after the update (unixtime: in milliseconds).'\n        required: true\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Subscriber'\n          description: The subscriber's detailed information after the update.\n        \"404\":\n          description: The specified subscriber does not exist.\n      security:\n      - api_key: []\n        api_token: []\n      summary: Update Expiry Time of Subscriber.\n      tags:\n      - Subscriber\n      x-soracom-cli:\n      - subscribers set-expiry-time\n  /subscribers/{imsi}/set_group:\n    post:\n      description: Sets or overwrites a group for the specified subscriber.\n      operationId: setGroup\n      parameters:\n      - description: IMSI of the target subscriber.\n        in: path\n        name: imsi\n        required: true\n        schema:\n          type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/SetGroupRequest'\n        description: Group (may include ID only).\n        required: true\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Subscriber'\n          description: The subscriber's detailed information after the update.\n        \"404\":\n          description: The specified subscriber does not exist.\n      security:\n      - api_key: []\n        api_token: []\n      summary: Set Group to Subscriber.\n      tags:\n      - Subscriber\n      x-soracom-cli:\n      - subscribers set-group\n  /subscribers/{imsi}/set_imei_lock:\n    post:\n      description: Set IMEI that the subscriber should be locked to.\n      operationId: setImeiLock\n      parameters:\n      - description: IMSI of the target subscriber.\n        in: path\n        name: imsi\n        required: true\n        schema:\n          type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/SetImeiLockRequest'\n        description: IMEI lock configuration for the subscriber. (IMEI can be left\n          blank for locking to the current IMEI of an online subscriber.)\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Subscriber'\n          description: The subscriber's detailed information after the update.\n        \"400\":\n          description: Invalid IMEI string or subscriber is offline and IMEI not specified.\n        \"404\":\n          description: The specified subscriber does not exist.\n      security:\n      - api_key: []\n        api_token: []\n      summary: Set IMEI lock configuration for Subscriber.\n      tags:\n      - Subscriber\n      x-soracom-cli:\n      - subscribers set-imei-lock\n  /subscribers/{imsi}/set_to_standby:\n    post:\n      description: Set the specified subscriber to standby mode.\n      operationId: setSubscriberToStandby\n      parameters:\n      - description: IMSI of the target subscriber.\n        in: path\n        name: imsi\n        required: true\n        schema:\n          format: IMSI\n          type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Subscriber'\n          description: The subscriber's detailed information after the update.\n        \"400\":\n          description: The specified subscriber does not support standby mode.\n        \"404\":\n          description: The specified subscriber does not exist.\n      security:\n      - api_key: []\n        api_token: []\n      summary: Set Subscriber to standby mode.\n      tags:\n      - Subscriber\n      x-soracom-cli:\n      - subscribers set-to-standby\n  /subscribers/{imsi}/suspend:\n    post:\n      description: Suspends the specified subscriber\n      operationId: suspendSubscriber\n      parameters:\n      - description: IMSI of the target subscriber.\n        in: path\n        name: imsi\n        required: true\n        schema:\n          format: IMSI\n          type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Subscriber'\n          description: The subscriber's detailed information after the update.\n        \"404\":\n          description: The specified subscriber does not exist.\n      security:\n      - api_key: []\n        api_token: []\n      summary: Suspend Subscriber.\n      tags:\n      - Subscriber\n      x-soracom-cli:\n      - subscribers suspend\n  /subscribers/{imsi}/tags:\n    put:\n      description: Inserts/updates tags for the specified subscriber.\n      operationId: putSubscriberTags\n      parameters:\n      - description: IMSI of the target subscriber.\n        in: path\n        name: imsi\n        required: true\n        schema:\n          type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              items:\n                $ref: '#/components/schemas/TagUpdateRequest'\n              type: array\n        description: Array of tags to be inserted/updated.\n        required: true\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Subscriber'\n          description: The subscriber's detailed information after the update.\n        \"404\":\n          description: The specified subscriber does not exist.\n      security:\n      - api_key: []\n        api_token: []\n      summary: Bulk Insert or Update Subscriber Tags.\n      tags:\n      - Subscriber\n      x-sam-operationId: putTags\n      x-soracom-cli:\n      - subscribers put-tags\n  /subscribers/{imsi}/tags/{tag_name}:\n    delete:\n      description: Deletes a tag from the specified subscriber.\n      operationId: deleteSubscriberTag\n      parameters:\n      - description: IMSI of the target subscriber.\n        in: path\n        name: imsi\n        required: true\n        schema:\n          type: string\n      - description: Tag name to be deleted. (This will be part of a URL path, so\n          it needs to be percent-encoded. In JavaScript, specify the name after it\n          has been encoded using encodeURIComponent().)\n        in: path\n        name: tag_name\n        required: true\n        schema:\n          type: string\n      responses:\n        \"204\":\n          description: Deletion of specified tag complete.\n        \"404\":\n          description: The specified subscriber or the tag does not exist.\n      security:\n      - api_key: []\n        api_token: []\n      summary: Delete Subscriber Tag.\n      tags:\n      - Subscriber\n      x-sam-operationId: deleteTag\n      x-soracom-cli:\n      - subscribers delete-tag\n  /subscribers/{imsi}/terminate:\n    post:\n      description: Terminates the specified subscriber\n      operationId: terminateSubscriber\n      parameters:\n      - description: IMSI of the target subscriber.\n        in: path\n        name: imsi\n        required: true\n        schema:\n          format: IMSI\n          type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Subscriber'\n          description: The subscriber's detailed information after the update.\n        \"404\":\n          description: The specified subscriber does not exist.\n      security:\n      - api_key: []\n        api_token: []\n      summary: Terminate Subscriber.\n      tags:\n      - Subscriber\n      x-soracom-cli:\n      - subscribers terminate\n  /subscribers/{imsi}/unset_expiry_time:\n    post:\n      description: Deletes expiry time of specified subscriber and changes it to indefinite.\n      operationId: unsetExpiryTime\n      parameters:\n      - description: IMSI of the target subscriber.\n        in: path\n        name: imsi\n        required: true\n        schema:\n          type: string\n      responses:\n        \"204\":\n          description: Change of specified subscriber's expiry time to indefinite\n            complete.\n        \"404\":\n          description: The specified subscriber does not exist or the subscriber does\n            not have an expiry time.\n      security:\n      - api_key: []\n        api_token: []\n      summary: Delete Expiry Time of Subscriber.\n      tags:\n      - Subscriber\n      x-soracom-cli:\n      - subscribers unset-expiry-time\n  /subscribers/{imsi}/unset_group:\n    post:\n      description: Removes the group configuration from the specified subscriber.\n      operationId: unsetGroup\n      parameters:\n      - description: IMSI of the target subscriber.\n        in: path\n        name: imsi\n        required: true\n        schema:\n          type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Subscriber'\n          description: The subscriber's detailed information after the update.\n        \"404\":\n          description: The specified subscriber does not exist or the subscriber does\n            not belong to a group.\n      security:\n      - api_key: []\n        api_token: []\n      summary: Unset Group to Subscriber.\n      tags:\n      - Subscriber\n      x-soracom-cli:\n      - subscribers unset-group\n  /subscribers/{imsi}/unset_imei_lock:\n    post:\n      description: Remove any existing IMEI lock configuration for the subscriber.\n      operationId: unsetImeiLock\n      parameters:\n      - description: IMSI of the target subscriber.\n        in: path\n        name: imsi\n        required: true\n        schema:\n          type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Subscriber'\n          description: The subscriber's detailed information after the update.\n        \"404\":\n          description: The specified subscriber does not exist.\n      security:\n      - api_key: []\n        api_token: []\n      summary: Unset IMEI lock configuration for Subscriber.\n      tags:\n      - Subscriber\n      x-soracom-cli:\n      - subscribers unset-imei-lock\n  /subscribers/{imsi}/update_speed_class:\n    post:\n      description: Changes the speed class of the specified subscriber.\n      operationId: updateSpeedClass\n      parameters:\n      - description: IMSI of the target subscriber.\n        in: path\n        name: imsi\n        required: true\n        schema:\n          type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/UpdateSpeedClassRequest'\n        description: speed_class\n        required: true\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Subscriber'\n          description: The subscriber's detailed information after the update.\n        \"404\":\n          description: The specified subscriber does not exist.\n      security:\n      - api_key: []\n        api_token: []\n      summary: Update Subscriber speed class.\n      tags:\n      - Subscriber\n      x-soracom-cli:\n      - subscribers update-speed-class\n  /subscribers/export:\n    post:\n      description: Export all subscribers as a CSV file.\n      operationId: exportSubscribers\n      parameters:\n      - description: export mode (async, sync)\n        in: query\n        name: export_mode\n        required: false\n        schema:\n          default: sync\n          enum:\n          - async\n          - sync\n          type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/FileExportResponse'\n          description: Where to export subscribers.\n      security:\n      - api_key: []\n        api_token: []\n      summary: Export all subscribers.\n      tags:\n      - Subscriber\n      x-soracom-cli:\n      - subscribers export\n  /subscribers/msisdn/{msisdn}/send_sms:\n    post:\n      description: Send SMS to a subscriber specified with MSISDN.\n      operationId: sendSmsByMsisdn\n      parameters:\n      - description: MSISDN of the target subscriber.\n        in: path\n        name: msisdn\n        required: true\n        schema:\n          type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/SmsForwardingRequest'\n        description: SMS forwarding request that contains message body and its encoding\n          type.\n        required: true\n      responses:\n        \"202\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/SmsForwardingReport'\n          description: SMS forwarding report containing message ID.\n        \"400\":\n          description: The specified subscriber does not support SMS API.\n        \"404\":\n          description: The specified subscriber does not exist.\n      security:\n      - api_key: []\n        api_token: []\n      summary: Send SMS to Subscriber by MSISDN\n      tags:\n      - Subscriber\n      x-soracom-cli:\n      - subscribers send-sms-by-msisdn\n  /subscribers/transfer_token/{token}:\n    delete:\n      description: Deletes the subscriber's inter-operator control transfer token,\n        and cancels the control transfer.\n      operationId: deleteSubscriberTransferToken\n      parameters:\n      - description: token\n        in: path\n        name: token\n        required: true\n        schema:\n          type: string\n      responses:\n        \"204\":\n          description: Deletion implemented.\n        \"404\":\n          description: The token does not exist.\n      security:\n      - api_key: []\n        api_token: []\n      summary: Delete Subscribers Transfer Token.\n      tags:\n      - Subscriber\n      x-soracom-cli:\n      - subscribers delete-transfer-token\n  /subscribers/transfer_token/issue:\n    post:\n      description: Sends the subscriber's inter-operator control transfer token to\n        the control destination operator.\n      operationId: issueSubscriberTransferToken\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/IssueSubscriberTransferTokenRequest'\n        description: Destination operator's email address, Operator ID, transferring\n          IMSI\n        required: true\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/IssueSubscriberTransferTokenResponse'\n          description: OK\n      security:\n      - api_key: []\n        api_token: []\n      summary: Issue Subscribers Transfer Token.\n      tags:\n      - Subscriber\n      x-soracom-cli:\n      - subscribers issue-transfer-token\n  /subscribers/transfer_token/verify:\n    post:\n      description: Verifies the subscriber's control transfer token, and executes\n        the transfer. This API is called from the operator of the control destination.\n      operationId: verifySubscriberTransferToken\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/VerifySubscriberTransferTokenRequest'\n        description: Subscriber transfer token that noticed via email.\n        required: true\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/VerifySubscriberTransferTokenResponse'\n          description: OK.\n      security:\n      - api_key: []\n        api_token: []\n      summary: Verify Subscriber Transfer Token.\n      tags:\n      - Subscriber\n      x-soracom-cli:\n      - subscribers verify-transfer-token\n  /virtual_private_gateways:\n    get:\n      description: Returns a list of VPGs.\n      operationId: listVirtualPrivateGateways\n      parameters:\n      - description: Tag name of the VPG. Filters through all VPGs that exactly match\n          the tag name. When tag_name is specified, tag_value is required.\n        in: query\n        name: tag_name\n        required: false\n        schema:\n          type: string\n      - description: Tag value of the VPGs.\n        in: query\n        name: tag_value\n        required: false\n        schema:\n          type: string\n      - description: Tag match mode.\n        in: query\n        name: tag_value_match_mode\n        required: false\n        schema:\n          default: exact\n          enum:\n          - exact\n          - prefix\n          type: string\n      - description: Maximum number of results per response page.\n        in: query\n        name: limit\n        required: false\n        schema:\n          type: integer\n      - description: The last group ID retrieved on the current page. By specifying\n          this parameter, you can continue to retrieve the list from the next VPG\n          onward.\n        in: query\n        name: last_evaluated_key\n        required: false\n        schema:\n          type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: '#/components/schemas/VirtualPrivateGateway'\n                type: array\n          description: List of VPGs.\n      security:\n      - api_key: []\n        api_token: []\n      summary: List Virtual Private Gateways.\n      tags:\n      - VirtualPrivateGateway\n      x-soracom-cli:\n      - vpg list\n      x-soracom-cli-pagination:\n        request:\n          param: last_evaluated_key\n        response:\n          header: x-soracom-next-key\n    post:\n      description: Create new VPG.\n      operationId: createVirtualPrivateGateway\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/CreateVirtualPrivateGatewayRequest'\n        description: Request containing information for the new VPG to be created.\n        required: true\n      responses:\n        \"201\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/VirtualPrivateGateway'\n          description: Created\n      security:\n      - api_key: []\n        api_token: []\n      summary: Create Virtual Private Gateway.\n      tags:\n      - VirtualPrivateGateway\n      x-soracom-cli:\n      - vpg create\n  /virtual_private_gateways/{vpg_id}:\n    get:\n      description: Retrieves information about the specified VPG.\n      operationId: getVirtualPrivateGateway\n      parameters:\n      - description: Target VPG ID.\n        in: path\n        name: vpg_id\n        required: true\n        schema:\n          type: string\n      responses:\n        \"200\":\n          description: The specified VPG.\n        \"404\":\n          description: The specified VPG does not exist.\n      security:\n      - api_key: []\n        api_token: []\n      summary: Get Virtual Private Gateway.\n      tags:\n      - VirtualPrivateGateway\n      x-soracom-cli:\n      - vpg get\n  /virtual_private_gateways/{vpg_id}/gate/close:\n    post:\n      description: Close SORACOM Gate on the specified VPG.\n      operationId: closeGate\n      parameters:\n      - description: Target VPG ID.\n        in: path\n        name: vpg_id\n        required: true\n        schema:\n          type: string\n      responses:\n        \"200\":\n          description: SORACOM Gate is successfully closed on the VPG.\n        \"400\":\n          description: Client side error.\n        \"404\":\n          description: The specified VPG does not exist.\n      security:\n      - api_key: []\n        api_token: []\n      summary: Close SORACOM Gate.\n      tags:\n      - VirtualPrivateGateway\n      x-soracom-cli:\n      - vpg close-gate\n  /virtual_private_gateways/{vpg_id}/gate/disable_privacy_separator:\n    post:\n      description: Disable SORACOM Gate privacy separator feature on the VPG to allow\n        the Gate D2D function.\n      operationId: disableGatePrivacySeparator\n      parameters:\n      - description: VPG ID\n        in: path\n        name: vpg_id\n        required: true\n        schema:\n          format: VpgId\n          type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/VirtualPrivateGateway'\n          description: Disabled the privacy separator successfully\n        \"404\":\n          description: No such VPG found\n      security:\n      - api_key: []\n        api_token: []\n      summary: Disable SORACOM Gate privacy separator feature on the VPG\n      tags:\n      - VirtualPrivateGateway\n      x-soracom-cli:\n      - vpg disable-gate-privacy-separator\n  /virtual_private_gateways/{vpg_id}/gate/enable_privacy_separator:\n    post:\n      description: Enable SORACOM Gate privacy separator feature on the VPG to prohibit\n        the Gate D2D function.\n      operationId: enableGatePrivacySeparator\n      parameters:\n      - description: VPG ID\n        in: path\n        name: vpg_id\n        required: true\n        schema:\n          format: VpgId\n          type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/VirtualPrivateGateway'\n          description: Enabled the privacy separator successfully\n        \"404\":\n          description: No such VPG found\n      security:\n      - api_key: []\n        api_token: []\n      summary: Enable SORACOM Gate privacy separator feature on the VPG\n      tags:\n      - VirtualPrivateGateway\n      x-soracom-cli:\n      - vpg enable-gate-privacy-separator\n  /virtual_private_gateways/{vpg_id}/gate/open:\n    post:\n      description: Open SORACOM Gate on the specified VPG.\n      operationId: openGate\n      parameters:\n      - description: Target VPG ID.\n        in: path\n        name: vpg_id\n        required: true\n        schema:\n          type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/OpenGateRequest'\n        description: Optional configuration parameters for Gate.\n      responses:\n        \"200\":\n          description: SORACOM Gate is successfully opened on the VPG.\n        \"400\":\n          description: Client side error.\n        \"404\":\n          description: The specified VPG does not exist.\n      security:\n      - api_key: []\n        api_token: []\n      summary: Open SORACOM Gate.\n      tags:\n      - VirtualPrivateGateway\n      x-soracom-cli:\n      - vpg open-gate\n  /virtual_private_gateways/{vpg_id}/gate/peers:\n    get:\n      description: List Gate peers registered in the Virtual Private Gateway\n      operationId: listGatePeers\n      parameters:\n      - description: Target VPG ID.\n        in: path\n        name: vpg_id\n        required: true\n        schema:\n          type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: '#/components/schemas/GatePeer'\n                type: array\n          description: List of peers registered in the VPG.\n        \"400\":\n          description: Client side error in the request.\n        \"404\":\n          description: The specified VPG does not exist.\n      security:\n      - api_key: []\n        api_token: []\n      summary: List VPG Gate peers\n      tags:\n      - VirtualPrivateGateway\n      x-soracom-cli:\n      - vpg list-gate-peers\n    post:\n      description: Register a host as a gate peer in the Virtual Private Gateway\n      operationId: registerGatePeer\n      parameters:\n      - description: Target VPG ID.\n        in: path\n        name: vpg_id\n        required: true\n        schema:\n          type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/RegisterGatePeerRequest'\n        required: true\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GatePeer'\n          description: Gate peer is successfully registered.\n        \"400\":\n          description: Client side error in the request.\n        \"404\":\n          description: The specified VPG does not exist.\n      security:\n      - api_key: []\n        api_token: []\n      summary: Register VPG Gate peer\n      tags:\n      - VirtualPrivateGateway\n      x-soracom-cli:\n      - vpg register-gate-peer\n  /virtual_private_gateways/{vpg_id}/gate/peers/{outer_ip_address}:\n    delete:\n      description: Unregister a gate peer from the Virtual Private Gateway\n      operationId: unregisterGatePeer\n      parameters:\n      - description: Target VPG ID.\n        in: path\n        name: vpg_id\n        required: true\n        schema:\n          type: string\n      - description: ID of the target node.\n        in: path\n        name: outer_ip_address\n        required: true\n        schema:\n          type: string\n      responses:\n        \"204\":\n          description: Successfully deregistered the Gate peer.\n        \"400\":\n          description: Error in the request.\n        \"404\":\n          description: The specified VPG or node does not exist.\n      security:\n      - api_key: []\n        api_token: []\n      summary: Unregister VPG gate peer\n      tags:\n      - VirtualPrivateGateway\n      x-soracom-cli:\n      - vpg unregister-gate-peer\n  /virtual_private_gateways/{vpg_id}/ip_address_map:\n    get:\n      description: Describes the list of IP address map entries in the Virtual Private\n        Gateway\n      operationId: listVirtualPrivateGatewayIpAddressMapEntries\n      parameters:\n      - description: Target VPG ID.\n        in: path\n        name: vpg_id\n        required: true\n        schema:\n          type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: '#/components/schemas/IpAddressMapEntry'\n                type: array\n          description: Successfully fetched the list of IP address map entries.\n        \"400\":\n          description: Error in the request.\n        \"404\":\n          description: The specified VPG or node does not exist.\n      security:\n      - api_key: []\n        api_token: []\n      summary: List VPG IP address map entries\n      tags:\n      - VirtualPrivateGateway\n      x-soracom-cli:\n      - vpg list-ip-address-map-entries\n    post:\n      description: Puts an entry in VPG IP address map.\n      operationId: putVirtualPrivateGatewayIpAddressMapEntry\n      parameters:\n      - description: Target VPG ID.\n        in: path\n        name: vpg_id\n        required: true\n        schema:\n          type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/PutIpAddressMapEntryRequest'\n        required: true\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/IpAddressMapEntry'\n          description: Successfully put an entry for the specified key and IP address.\n        \"400\":\n          description: Error in the request.\n        \"404\":\n          description: The specified VPG or node does not exist.\n      security:\n      - api_key: []\n        api_token: []\n      summary: Put an entry in VPG IP address map\n      tags:\n      - VirtualPrivateGateway\n      x-soracom-cli:\n      - vpg put-ip-address-map-entry\n  /virtual_private_gateways/{vpg_id}/ip_address_map/{key}:\n    delete:\n      description: Deletes an entry in VPG IP address map.\n      operationId: deleteVirtualPrivateGatewayIpAddressMapEntry\n      parameters:\n      - description: Target VPG ID.\n        in: path\n        name: vpg_id\n        required: true\n        schema:\n          type: string\n      - description: Target key to remove.\n        in: path\n        name: key\n        required: true\n        schema:\n          type: string\n      responses:\n        \"204\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/IpAddressMapEntry'\n          description: Successfully deleted the entry from the VPG IP address map.\n        \"400\":\n          description: Error in the request.\n        \"404\":\n          description: The specified VPG or node does not exist.\n      security:\n      - api_key: []\n        api_token: []\n      summary: Delete VPG IP address map entry\n      tags:\n      - VirtualPrivateGateway\n      x-soracom-cli:\n      - vpg delete-ip-address-map-entry\n  /virtual_private_gateways/{vpg_id}/junction/mirroring/peers:\n    post:\n      description: Add node in the list of Junction mirroring peers\n      operationId: createMirroringPeer\n      parameters:\n      - description: VPG ID\n        in: path\n        name: vpg_id\n        required: true\n        schema:\n          type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/JunctionMirroringPeer'\n        description: Mirroring peer\n        required: true\n      responses:\n        \"201\":\n          description: Mirroring peer added/updated\n        \"404\":\n          description: No such VPG found\n      security:\n      - api_key: []\n        api_token: []\n      summary: Add node in the list of Junction mirroring peers\n      tags:\n      - VirtualPrivateGateway\n      x-soracom-cli:\n      - vpg create-mirroring-peer\n  /virtual_private_gateways/{vpg_id}/junction/mirroring/peers/{ipaddr}:\n    delete:\n      description: Remove peer from the list of Junction mirroring peers\n      operationId: deleteMirroringPeer\n      parameters:\n      - description: VPG ID\n        in: path\n        name: vpg_id\n        required: true\n        schema:\n          type: string\n      - description: IP address of mirroring peer\n        in: path\n        name: ipaddr\n        required: true\n        schema:\n          type: string\n      responses:\n        \"204\":\n          description: Mirroring peer removed\n        \"404\":\n          description: No such VPG found\n      security:\n      - api_key: []\n        api_token: []\n      summary: Remove peer from the list of Junction mirroring peers\n      tags:\n      - VirtualPrivateGateway\n      x-soracom-cli:\n      - vpg delete-mirroring-peer\n    put:\n      description: Update a Junction mirroring peer\n      operationId: updateMirroringPeer\n      parameters:\n      - description: VPG ID\n        in: path\n        name: vpg_id\n        required: true\n        schema:\n          type: string\n      - description: Mirroring peer IP address\n        in: path\n        name: ipaddr\n        required: true\n        schema:\n          type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              items:\n                $ref: '#/components/schemas/AttributeUpdate'\n              type: array\n        description: List of attributes to update\n        required: true\n      responses:\n        \"200\":\n          description: Mirroring peer updated\n        \"404\":\n          description: No such VPG found\n      security:\n      - api_key: []\n        api_token: []\n      summary: Update a Junction mirroring peer\n      tags:\n      - VirtualPrivateGateway\n      x-soracom-cli:\n      - vpg update-mirroring-peer\n  /virtual_private_gateways/{vpg_id}/junction/set_inspection:\n    post:\n      description: Set configuration for Junction inspection feature\n      operationId: setInspectionConfiguration\n      parameters:\n      - description: VPG ID\n        in: path\n        name: vpg_id\n        required: true\n        schema:\n          type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/JunctionInspectionConfiguration'\n        description: Inspection configuration\n        required: true\n      responses:\n        \"200\":\n          description: Configuration added/updated\n        \"404\":\n          description: No such VPG found\n      security:\n      - api_key: []\n        api_token: []\n      summary: Set configuration for Junction inspection feature\n      tags:\n      - VirtualPrivateGateway\n      x-soracom-cli:\n      - vpg set-inspection\n  /virtual_private_gateways/{vpg_id}/junction/set_redirection:\n    post:\n      description: Set configuration for Junction redirection feature\n      operationId: setRedirectionConfiguration\n      parameters:\n      - description: VPG ID\n        in: path\n        name: vpg_id\n        required: true\n        schema:\n          type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/JunctionRedirectionConfiguration'\n        description: Redirection configuration\n        required: true\n      responses:\n        \"200\":\n          description: Configuration added/updated\n        \"404\":\n          description: No such VPG found\n      security:\n      - api_key: []\n        api_token: []\n      summary: Set configuration for Junction redirection feature\n      tags:\n      - VirtualPrivateGateway\n      x-soracom-cli:\n      - vpg set-redirection\n  /virtual_private_gateways/{vpg_id}/junction/unset_inspection:\n    post:\n      description: Unset configuration for Junction inspection feature\n      operationId: unsetInspectionConfiguration\n      parameters:\n      - description: VPG ID\n        in: path\n        name: vpg_id\n        required: true\n        schema:\n          type: string\n      responses:\n        \"200\":\n          description: Configuration unset\n        \"404\":\n          description: No such VPG found\n      security:\n      - api_key: []\n        api_token: []\n      summary: Unset configuration for Junction inspection feature\n      tags:\n      - VirtualPrivateGateway\n      x-soracom-cli:\n      - vpg unset-inspection\n  /virtual_private_gateways/{vpg_id}/junction/unset_redirection:\n    post:\n      description: Unset configuration for Junction redirection feature\n      operationId: unsetRedirectionConfiguration\n      parameters:\n      - description: VPG ID\n        in: path\n        name: vpg_id\n        required: true\n        schema:\n          type: string\n      responses:\n        \"200\":\n          description: Configuration unset\n        \"404\":\n          description: No such VPG found\n      security:\n      - api_key: []\n        api_token: []\n      summary: Unset configuration for Junction redirection feature\n      tags:\n      - VirtualPrivateGateway\n      x-soracom-cli:\n      - vpg unset-redirection\n  /virtual_private_gateways/{vpg_id}/packet_capture_sessions:\n    get:\n      description: List packet capture sessions associated with the VPG\n      operationId: listPacketCaptureSessions\n      parameters:\n      - description: VPG ID\n        in: path\n        name: vpg_id\n        required: true\n        schema:\n          type: string\n      - description: ID of the last group in the previous page\n        in: query\n        name: last_evaluated_key\n        required: false\n        schema:\n          default: \"null\"\n          type: string\n      - description: Max number of results in a response\n        in: query\n        name: limit\n        required: false\n        schema:\n          default: 10\n          format: int32\n          type: integer\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: '#/components/schemas/PacketCaptureSession'\n                type: array\n          description: List of packet capture sessions associated with the VPG\n        \"400\":\n          description: Failed to list packet capture sessions associated with the\n            VPG\n      security:\n      - api_key: []\n        api_token: []\n      summary: List Packet Capture Sessions\n      tags:\n      - VirtualPrivateGateway\n      x-soracom-cli:\n      - vpg list-packet-capture-sessions\n      x-soracom-cli-pagination:\n        request:\n          param: last_evaluated_key\n        response:\n          header: x-soracom-next-key\n    post:\n      description: Create a packet capture sessions associated the VPG\n      operationId: createPacketCaptureSession\n      parameters:\n      - description: VPG ID\n        in: path\n        name: vpg_id\n        required: true\n        schema:\n          type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/PacketCaptureSessionRequest'\n        description: A packet capture session request\n        required: true\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PacketCaptureSession'\n          description: Created a new packet capture sessions associated with the VPG\n        \"400\":\n          description: Failed to create a packet capture sessions associated with\n            the VPG\n      security:\n      - api_key: []\n        api_token: []\n      summary: Create Packet Capture Session\n      tags:\n      - VirtualPrivateGateway\n      x-soracom-cli:\n      - vpg create-packet-capture-session\n  /virtual_private_gateways/{vpg_id}/packet_capture_sessions/{session_id}:\n    delete:\n      description: Delete a packet capture sessions associated the VPG\n      operationId: deletePacketCaptureSession\n      parameters:\n      - description: VPG ID\n        in: path\n        name: vpg_id\n        required: true\n        schema:\n          type: string\n      - description: Packet capture session ID\n        in: path\n        name: session_id\n        required: true\n        schema:\n          type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PacketCaptureSession'\n          description: Deleted the packet capture sessions associated with the VPG\n        \"400\":\n          description: Failed to delete the packet capture sessions associated with\n            the VPG was not found\n        \"404\":\n          description: The packet capture sessions associated with the VPG was not\n            found\n      security:\n      - api_key: []\n        api_token: []\n      summary: Delete Packet Capture Session\n      tags:\n      - VirtualPrivateGateway\n      x-soracom-cli:\n      - vpg delete-packet-capture-session\n    get:\n      description: Get a packet capture sessions associated the VPG\n      operationId: getPacketCaptureSession\n      parameters:\n      - description: VPG ID\n        in: path\n        name: vpg_id\n        required: true\n        schema:\n          type: string\n      - description: Packet capture session ID\n        in: path\n        name: session_id\n        required: true\n        schema:\n          type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PacketCaptureSession'\n          description: The packet capture sessions associated with the VPG\n        \"404\":\n          description: The packet capture sessions associated with the VPG was not\n            found\n      security:\n      - api_key: []\n        api_token: []\n      summary: Get Packet Capture Session\n      tags:\n      - VirtualPrivateGateway\n      x-soracom-cli:\n      - vpg get-packet-capture-session\n  /virtual_private_gateways/{vpg_id}/packet_capture_sessions/{session_id}/stop:\n    post:\n      description: Stop a packet capture session associated with the VPG\n      operationId: stopPacketCaptureSession\n      parameters:\n      - description: VPG ID\n        in: path\n        name: vpg_id\n        required: true\n        schema:\n          type: string\n      - description: Packet capture session ID\n        in: path\n        name: session_id\n        required: true\n        schema:\n          type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PacketCaptureSession'\n          description: The stopped packet capture session associated with the VPG\n        \"400\":\n          description: The packet capture session can be stopped only when its status\n            is CAPTURING\n        \"404\":\n          description: The packet capture session associated with the VPG was not\n            found\n        \"500\":\n          description: The packet capture session could not be stopped\n      security:\n      - api_key: []\n        api_token: []\n      summary: Stop Packet Capture Session\n      tags:\n      - VirtualPrivateGateway\n      x-soracom-cli:\n      - vpg stop-packet-capture-session\n  /virtual_private_gateways/{vpg_id}/set_routing_filter:\n    post:\n      description: Sets Virtual Private Gateway outbound routing filter.\n      operationId: setRoutingFilter\n      parameters:\n      - description: Target VPG ID.\n        in: path\n        name: vpg_id\n        required: true\n        schema:\n          type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              items:\n                $ref: '#/components/schemas/RoutingFilterEntry'\n              type: array\n        description: List of routing filter entries\n        required: true\n      responses:\n        \"200\":\n          description: The routing filter is successfully configured.\n        \"400\":\n          description: Invalid argument is given\n        \"404\":\n          description: The specified VPG does not exist.\n      security:\n      - api_key: []\n        api_token: []\n      summary: Sets Virtual Private Gateway outbound routing filter.\n      tags:\n      - VirtualPrivateGateway\n      x-soracom-cli:\n      - vpg set-routing-filter\n  /virtual_private_gateways/{vpg_id}/terminate:\n    post:\n      description: Terminates the specified VPG.\n      operationId: terminateVirtualPrivateGateway\n      parameters:\n      - description: Target VPG ID.\n        in: path\n        name: vpg_id\n        required: true\n        schema:\n          type: string\n      responses:\n        \"200\":\n          description: Termination of specified VPG started.\n        \"400\":\n          description: There is a reason why the specified VPG cannot be terminated.\n        \"404\":\n          description: The specified VPG does not exist.\n      security:\n      - api_key: []\n        api_token: []\n      summary: Terminate Virtual Private Gateway.\n      tags:\n      - VirtualPrivateGateway\n      x-soracom-cli:\n      - vpg terminate\n  /virtual_private_gateways/{vpg_id}/vpc_peering_connections:\n    post:\n      description: Creates a VPC peering connection for the specified VPG.\n      operationId: createVpcPeeringConnection\n      parameters:\n      - description: Target VPG ID.\n        in: path\n        name: vpg_id\n        required: true\n        schema:\n          type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/CreateVpcPeeringConnectionRequest'\n        description: VPC peering connection to be created.\n        required: true\n      responses:\n        \"201\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CreateVpcPeeringConnectionRequest'\n          description: The created VPC peering connection.\n        \"404\":\n          description: The specified VPC peering connection does not exist.\n      security:\n      - api_key: []\n        api_token: []\n      summary: Create VPC Peering Connection\n      tags:\n      - VirtualPrivateGateway\n      x-soracom-cli:\n      - vpg create-vpc-peering-connection\n  /virtual_private_gateways/{vpg_id}/vpc_peering_connections/{pcx_id}:\n    delete:\n      description: Deletes the specified VPC peering connection.\n      operationId: deleteVpcPeeringConnection\n      parameters:\n      - description: Target VPG ID.\n        in: path\n        name: vpg_id\n        required: true\n        schema:\n          type: string\n      - description: VPC peering connection ID to be deleted.\n        in: path\n        name: pcx_id\n        required: true\n        schema:\n          type: string\n      responses:\n        \"204\":\n          description: Deletion of specified VPC peering connection complete.\n        \"404\":\n          description: The specified VPC peering connection does not exist.\n      security:\n      - api_key: []\n        api_token: []\n      summary: Delete VPC Peering Connection.\n      tags:\n      - VirtualPrivateGateway\n      x-soracom-cli:\n      - vpg delete-vpc-peering-connection\n  /volume_discounts:\n    get:\n      description: Returns a list of contracted long term discounts.\n      operationId: listVolumeDiscounts\n      responses:\n        \"200\":\n          content:\n            application/json;charset=UTF-8:\n              schema:\n                $ref: '#/components/schemas/ListVolumeDiscountResponse'\n          description: OK.\n      security:\n      - api_key: []\n        api_token: []\n      summary: List long term discounts.\n      tags:\n      - Payment\n      x-soracom-cli:\n      - volume-discounts list\n    post:\n      description: Creates a new long term discount quotation. If the orderId is put\n        in /confirm, the order is complete. (Currently, long term discount is only\n        applied to plan-D, plan-K)\n      operationId: createVolumeDiscountQuotation\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/CreateEstimatedVolumeDiscountRequest'\n        description: Long term discount contract details\n        required: true\n      responses:\n        \"201\":\n          content:\n            application/json;charset=UTF-8:\n              schema:\n                $ref: '#/components/schemas/EstimatedVolumeDiscountModel'\n          description: Created\n      security:\n      - api_key: []\n        api_token: []\n      summary: Create long term discount quotation.\n      tags:\n      - Order\n      x-soracom-cli:\n      - volume-discounts create\n  /volume_discounts/{contract_id}:\n    get:\n      description: Returns contracted long term discount.\n      operationId: getVolumeDiscount\n      parameters:\n      - description: contract_id\n        in: path\n        name: contract_id\n        required: true\n        schema:\n          type: string\n      responses:\n        \"200\":\n          content:\n            application/json;charset=UTF-8:\n              schema:\n                $ref: '#/components/schemas/GetVolumeDiscountResponse'\n          description: OK.\n        \"400\":\n          description: Long term discount not found.\n      security:\n      - api_key: []\n        api_token: []\n      summary: Get long term discount.\n      tags:\n      - Payment\n      x-soracom-cli:\n      - volume-discounts get\n  /volume_discounts/{order_id}/confirm:\n    put:\n      description: Performs a credit limit and confirms the order if no problems are\n        encountered.\n      operationId: confirmVolumeDiscountOrder\n      parameters:\n      - description: order_id\n        in: path\n        name: order_id\n        required: true\n        schema:\n          type: string\n      responses:\n        \"200\":\n          content:\n            application/json;charset=UTF-8:\n              schema:\n                $ref: '#/components/schemas/GetVolumeDiscountResponse'\n          description: OK.\n      security:\n      - api_key: []\n        api_token: []\n      summary: Confirm long term discount order.\n      tags:\n      - Order\n      x-soracom-cli:\n      - volume-discounts confirm\n  /volume_discounts/available_discounts:\n    get:\n      description: Returns a list of available long term discounts.\n      operationId: listAvailableDiscounts\n      responses:\n        \"200\":\n          content:\n            application/json;charset=UTF-8:\n              schema:\n                $ref: '#/components/schemas/AvailableLongTermDiscountResponse'\n          description: OK.\n      security:\n      - api_key: []\n        api_token: []\n      summary: List available long term discounts.\n      tags:\n      - Order\n      x-soracom-cli:\n      - volume-discounts available-discounts\ncomponents:\n  examples:\n    APITokenCredentials:\n      value:\n        credentials:\n          token: sample_token\n        type: api-token-credentials\n    AWSCredentials:\n      value:\n        credentials:\n          accessKeyId: sampleAccessKeyId\n          secretAccessKey: sampleSecret\n        type: aws-credentials\n    AzureCredentials:\n      value:\n        credentials:\n          key: your_key\n          policyName: your_policy_name\n        type: azure-credentials\n    AzureIoTCredentials:\n      value:\n        credentials:\n          sharedAccessKey: sample_access_key\n          sharedAccessKeyName: sample\n        type: azureIoT-credentials\n    EsrijCredentials:\n      value:\n        credentials:\n          refererUrl: https://example.com\n        type: esrij-credentials\n    GoogleIoTCredentials:\n      value:\n        credentials:\n          algorithm: RS256\n          deviceId: sample_device\n          privateKey: your_private_key\n          projectId: sample_projectID\n          region: asia-east1\n          registryId: sample\n        type: googleIoT-credentials\n    GoogleServiceAccountJson:\n      value:\n        credentials:\n          credentials: '{\"sample\": \"value\"}'\n        type: google-service-account-json\n    IAMRoleCredentials:\n      value:\n        credentials:\n          externalId: your_external_id\n          roleArn: sample_role\n        type: aws-iam-role-credentials\n    InfoteriaPlatioCredentials:\n      value:\n        credentials:\n          secretToken: sample_secret\n          tokenId: sample_token\n        type: infoteria-platio-credentials\n    KiiThingifCredentials:\n      value:\n        credentials:\n          app_id: sample_app\n          app_key: sample_key\n          client_id: sample_id\n          client_secret: sample_secret\n        type: kii-thingif-credentials\n    LandlogCredentials:\n      value:\n        credentials:\n          client_id: sample_id\n          client_secret: sample_secret\n        type: landlog-credentials\n    MmcloudCredentials:\n      value:\n        credentials:\n          commandcode: sample_code\n          customerid: sample_customer\n          machineid: sample_id\n          machineidtype: sample_type\n        type: mmcloud-credentials\n    MockmockDatarecorderCredentials:\n      value:\n        credentials:\n          ca: sample_ca\n          cert: sample_cert\n          key: sample_key\n        type: mockmock-datarecorder-credentials\n    MotionboardCredentials:\n      value:\n        credentials:\n          authkey: sample_auth\n          template: temple_temp\n          tenant: sample_tenant\n        type: motionboard-credentials\n    OptimCloudCredentials:\n      value:\n        credentials:\n          client_id: sample_client\n          client_secret: sample_secret\n        type: optim-cloud-IoT-OS-credentials\n    PreSharedKey:\n      value:\n        credentials:\n          key: sample_key\n        type: psk\n    PubnubCredentials:\n      value:\n        credentials:\n          pubKey: sample\n          subKey: sample_sub\n        type: pubnub-credentials\n    SensorcorpusCredentials:\n      value:\n        credentials:\n          session_code: sample_code\n        type: sensorcorpus-credentials\n    UsernamePasswordCredentials:\n      value:\n        credentials:\n          password: sample_pass\n          username: sample_user\n        type: username-password-credentials\n    WatsonIoTCredentials:\n      value:\n        credentials:\n          authToken: sample_token\n          deviceId: sample_id\n          deviceType: sample_type\n        type: watsonIoT-credentials\n    X509Certificate:\n      value:\n        credentials:\n          ca: sample_ca\n          cert: sample_cert\n          key: sample_key\n        type: x509\n  requestBodies:\n    CreateAndUpdateCredentialsModel:\n      content:\n        application/json;charset=UTF-8:\n          schema:\n            $ref: '#/components/schemas/CreateAndUpdateCredentialsModel'\n      description: credentials\n      required: true\n    DeviceObjectModel:\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/DeviceObjectModel'\n        application/xml:\n          schema:\n            $ref: '#/components/schemas/DeviceObjectModel'\n      description: Device object model definition in either XML or JSON format.\n      required: true\n    ExpiryTime:\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/ExpiryTime'\n      description: 'Expiry time after the update (unixtime: in milliseconds).'\n      required: true\n    Group:\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/Group'\n      description: Group (may include ID only).\n      required: true\n    LagoonPlanChangingRequest:\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/LagoonPlanChangingRequest'\n      description: req\n      required: true\n    MFAAuthenticationRequest:\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/MFAAuthenticationRequest'\n      description: request\n      required: true\n  schemas:\n    APIAuditLogEntry:\n      properties:\n        apiKind:\n          description: The kind of the API (e.g. `/v1/auth`).\n          type: string\n        operatorId:\n          description: The operator ID that called the API.\n          type: string\n        remoteIpAddress:\n          description: The IP address of the caller.\n          type: string\n        requestPath:\n          description: The request path that has been called.\n          type: string\n        requestedTimeEpochMs:\n          description: The timestamp of the API call. This can be used as the `last_evaluated_key`\n            request parameter, for pagination.\n          format: int64\n          type: integer\n        userName:\n          description: The SAM username that called the API, if this parameter is\n            empty, it means the caller user is the root user.\n          type: string\n      type: object\n    APICallError:\n      properties:\n        errorMessage:\n          $ref: '#/components/schemas/APICallErrorMessage'\n        httpStatus:\n          format: int32\n          type: integer\n      type: object\n    APICallErrorMessage:\n      properties:\n        code:\n          description: Error code.\n          type: string\n        message:\n          description: Error message. You can choose language by setting X-Soracom-Lang\n            (en or ja) header when issuing a request.\n          type: string\n      required:\n      - code\n      - message\n      type: object\n    ActionConfig:\n      properties:\n        properties:\n          $ref: '#/components/schemas/ActionConfigProperty'\n        type:\n          enum:\n          - ChangeSpeedClassAction\n          - InvokeAWSLambdaAction\n          - ExecuteWebRequestAction\n          - SendMailAction\n          - SendMailToOperatorAction\n          - ActivationAction\n          - DeactivationAction\n          - StandbyAction\n          - SuspendAction\n          type: string\n      required:\n      - properties\n      - type\n      type: object\n    ActionConfigProperty:\n      properties:\n        accessKey:\n          description: Only for InvokeAWSLambdaAction\n          type: string\n        body:\n          description: Only for ExecuteWebRequestAction (Optional)\n          type: string\n        contentType:\n          description: Only for ExecuteWebRequestAction\n          type: string\n        endpoint:\n          description: Only for InvokeAWSLambdaAction\n          type: string\n        executionDateTimeConst:\n          enum:\n          - IMMEDIATELY\n          - BEGINNING_OF_NEXT_MONTH\n          - BEGINNING_OF_NEXT_DAY\n          - AFTER_ONE_DAY\n          - NEVER\n          type: string\n        executionOffsetMinutes:\n          description: Run in the minutes after the timing of executionDateTimeConst\n          type: string\n        functionName:\n          description: Only for InvokeAWSLambdaAction\n          type: string\n        headers:\n          description: Only for ExecuteWebRequestAction (Optional)\n          type: object\n        httpMethod:\n          description: Only for ExecuteWebRequestAction\n          enum:\n          - GET\n          - POST\n          - PUT\n          - DELETE\n          type: string\n        message:\n          description: Only for SendMailAction, SendMailToOperatorAction\n          type: string\n        parameter1:\n          description: Only for InvokeAWSLambdaAction\n          type: string\n        parameter2:\n          description: Only for InvokeAWSLambdaAction\n          type: string\n        parameter3:\n          description: Only for InvokeAWSLambdaAction\n          type: string\n        parameter4:\n          description: Only for InvokeAWSLambdaAction\n          type: string\n        parameter5:\n          description: Only for InvokeAWSLambdaAction\n          type: string\n        secretAccessKey:\n          description: Only for InvokeAWSLambdaAction\n          type: string\n        speedClass:\n          description: Only for ChangeSpeedClassAction\n          enum:\n          - s1.minimum\n          - s1.slow\n          - s1.standard\n          - s1.fast\n          - s1.4xfast\n          type: string\n        title:\n          description: Only for SendMailAction, SendMailToOperatorAction\n          type: string\n        to:\n          description: Only for SendMailAction\n          type: string\n        url:\n          description: Access URL and parameters. Only for ExecuteWebRequestAction\n          type: string\n      required:\n      - executionDateTimeConst\n      type: object\n    AirStatsResponse:\n      properties:\n        dataTrafficStatsMap:\n          additionalProperties:\n            $ref: '#/components/schemas/DataTrafficStats'\n          type: object\n        date:\n          type: string\n        unixtime:\n          format: int64\n          type: integer\n      type: object\n    ArcCredentialAttachRequest:\n      properties:\n        arcClientPeerPublicKey:\n          description: if this parameter is missing, the sever generates keypair\n          type: string\n      type: object\n    ArcCredentialAttachResponse:\n      properties:\n        arcClientPeerPrivateKey:\n          type: string\n        arcClientPeerPublicKey:\n          type: string\n      type: object\n    ArcCredentialRenewRequest:\n      properties:\n        arcClientPeerPublicKey:\n          description: if this parameter is missing, the sever generates keypair\n          type: string\n      type: object\n    ArcCredentialRenewResponse:\n      properties:\n        arcClientPeerPrivateKey:\n          type: string\n        arcClientPeerPublicKey:\n          type: string\n      type: object\n    ArcSessionCreateResponse:\n      properties:\n        arcAllowedIPs:\n          items:\n            type: string\n          type: array\n        arcClientPeerIpAddress:\n          type: string\n        arcClientPeerPublicKey:\n          type: string\n        arcServerEndpoint:\n          type: string\n        arcServerPeerPublicKey:\n          type: string\n      type: object\n    ArcSessionStatus:\n      properties:\n        arcAllowedIPs:\n          items:\n            type: string\n          type: array\n        arcClientPeerIpAddress:\n          type: string\n        arcClientPeerPublicKey:\n          type: string\n        arcServerEndpoint:\n          type: string\n        arcServerPeerPublicKey:\n          type: string\n        gatewayPrivateIpAddress:\n          type: string\n        gatewayPublicIpAddress:\n          type: string\n        lastUpdatedAt:\n          format: int64\n          type: integer\n        vpgId:\n          type: string\n      type: object\n    AttachRoleRequest:\n      properties:\n        roleId:\n          type: string\n      type: object\n    AttributeUpdate:\n      properties:\n        key:\n          type: string\n        value:\n          type: string\n      type: object\n    AuthKeyResponse:\n      properties:\n        authKeyId:\n          type: string\n        createDateTime:\n          format: int64\n          type: integer\n        lastUsedDateTime:\n          format: int64\n          type: integer\n      type: object\n    AuthRequest:\n      properties:\n        authKey:\n          type: string\n        authKeyId:\n          type: string\n        email:\n          type: string\n        mfaOTPCode:\n          type: string\n        operatorId:\n          type: string\n        password:\n          type: string\n        tokenTimeoutSeconds:\n          default: 86400\n          format: int64\n          maximum: 172800\n          type: integer\n        userName:\n          type: string\n      type: object\n    AuthResponse:\n      properties:\n        apiKey:\n          example: api-abcde123-45fg-hij6-7890-klmno12345pq\n          type: string\n        operatorId:\n          example: OPXXXXXXXXXX\n          type: string\n        token:\n          example: abcde12345fghij67890klmno12345pqrst67890uvwxy12345abcde67890fghi...\n          type: string\n        userName:\n          example: SORACOMAPI\n          type: string\n      type: object\n    AvailableLongTermDiscountModel:\n      properties:\n        contractTermMonth:\n          default: 12\n          description: Contract months\n          format: int32\n          type: integer\n        unitPrice:\n          description: Unit price\n          format: double\n          type: number\n        volumeDiscountPaymentType:\n          description: Payment type\n          enum:\n          - MONTHLY\n          - PREPAYMENT\n          type: string\n        volumeDiscountType:\n          description: Long term discount type\n          enum:\n          - SORACOM_AIR_BASIC_CHARGE_V2\n          - SORACOM_AIR_BASIC_CHARGE\n          - SORACOM_AIR_MONTHLY_FIXED_BASIC_CHARGE\n          type: string\n      type: object\n    AvailableLongTermDiscountResponse:\n      properties:\n        availableLongTermDiscounts:\n          description: List of available long term discounts\n          items:\n            $ref: '#/components/schemas/AvailableLongTermDiscountModel'\n          type: array\n      type: object\n    BeamStatsResponse:\n      properties:\n        beamStatsMap:\n          additionalProperties:\n            $ref: '#/components/schemas/SoracomBeamStats'\n          type: object\n        date:\n          type: string\n        unixtime:\n          format: int64\n          type: integer\n      type: object\n    Capabilities:\n      properties:\n        data:\n          description: |\n            - `true`: with data\n            - `false`: without data\n          type: boolean\n        sms:\n          description: |\n            - `true`: with SMS\n            - `false`: without SMS\n          type: boolean\n      type: object\n    Cell:\n      properties:\n        ci:\n          description: The Cell Identity (for 2G and 3G networks), a 16 bit value\n            represented in decimal form as an integer. (See 3GPP TS 23.003 4.3)\n          type: integer\n        eci:\n          description: The E-UTRAN Cell Identifier (for LTE networks), a 28 bit value\n            represented in decimal form as a long. (See 3GPP TS 23.003 19.6)\n          type: integer\n        lac:\n          description: The Location Area Code (for 2G and 3G networks), a 16 bit value\n            represented in decimal form as an integer. (See 3GPP TS 23.003 4.1)\n          type: integer\n        mcc:\n          description: The Mobile Country Code, a 3 digit number.\n          type: integer\n        mnc:\n          description: The Mobile Network Code, a 2 or 3 digit number. If the value\n            returned is only 1 digit in length, then you should prepend the value\n            with a leading zero.\n          type: integer\n        rac:\n          description: The Routing Area Code (for 2G and 3G networks), an 8 bit value\n            represented in decimal form as an integer. (See 3GPP TS 23.003 4.2)\n          type: integer\n        radioType:\n          description: The Radio Access Technology or type of network that the device\n            is connected to. Possible values are \"gsm\" for 2G or 3G networks, or \"lte\"\n            for LTE networks. Unfortunately, it is not possible to differentiate 2G\n            from 3G, or LTE from LTE Cat-M1.\n          type: string\n        sac:\n          description: The Service Area Code (for 2G and 3G networks), a 16 bit value\n            represented in decimal form as an integer. (See 3GPP TS 23.003 12.5)\n          type: integer\n        tac:\n          description: The Tracking Area Code (for LTE networks), a 16 bit value represented\n            in decimal form as an integer. (See 3GPP TS 23.003 19.4.2.3)\n          type: integer\n      type: object\n    CellIdentifier:\n      properties:\n        cid:\n          type: string\n        eci:\n          type: string\n        ecid:\n          type: string\n        identifier:\n          description: optionally link the result to the request\n          type: string\n        lac:\n          type: string\n        mcc:\n          type: string\n        mnc:\n          type: string\n        tac:\n          type: string\n      type: object\n    CellLocation:\n      properties:\n        avg_strength:\n          description: Average signal strength from all observations for the cell\n            network. This is an integer value, in dBm.\n          format: int32\n          type: integer\n        created:\n          description: Timestamp of the time when this record was first created.\n          format: date-time\n          type: string\n        exact:\n          description: Whether or not this cell is a position estimate based on observations\n            subject to change in the future (`0`) or an exact location entered from\n            a knowledgeable source (`1`).\n          format: int32\n          type: integer\n        lat:\n          description: Latitude\n          format: double\n          type: number\n        lon:\n          description: Longitude\n          format: double\n          type: number\n        range:\n          description: Estimate of radio range, in meters. This is an estimate on\n            how large each cell area is, as a radius around the estimated position\n            and is based on the observations or a knowledgeable source.\n          format: int32\n          type: integer\n        samples:\n          description: Total number of observations used to calculate the estimated\n            position, range and avg_strength.\n          format: int32\n          type: integer\n        updated:\n          description: Timestamp of the time when this record was most recently modified.\n          format: date-time\n          type: string\n      type: object\n    CompanyInformationModel:\n      properties:\n        addressLine1:\n          type: string\n        addressLine2:\n          type: string\n        building:\n          type: string\n        city:\n          type: string\n        companyName:\n          type: string\n        contactPersonName:\n          type: string\n        countryCode:\n          type: string\n        department:\n          type: string\n        phoneNumber:\n          type: string\n        state:\n          type: string\n        vatIdentificationNumber:\n          type: string\n        zipCode:\n          type: string\n      required:\n      - companyName\n      - countryCode\n      - zipCode\n      - department\n      - contactPersonName\n      - phoneNumber\n      type: object\n    ContractUpdatedResponse:\n      properties:\n        contractDetail:\n          type: object\n        contractName:\n          type: string\n      type: object\n    ContractUpdatingRequest:\n      properties:\n        contractDetail:\n          type: object\n        contractName:\n          type: string\n      type: object\n    CouponResponse:\n      properties:\n        amount:\n          description: Amount\n          format: double\n          type: number\n        balance:\n          description: Balance\n          format: double\n          type: number\n        billItemName:\n          description: Item\n          type: string\n        couponCode:\n          description: Coupon code\n          type: string\n        expiryYearMonth:\n          description: Expiry month\n          example: yyyyMM\n          type: string\n        orderId:\n          description: Order ID\n          type: string\n      type: object\n    CreateAndUpdateCredentialsModel:\n      properties:\n        credentials:\n          type: object\n        description:\n          type: string\n        type:\n          enum:\n          - aws-credentials\n          - azure-credentials\n          - psk\n          - x509\n          type: string\n      type: object\n    CreateEstimatedCouponRequest:\n      properties:\n        amount:\n          description: Amount\n          format: double\n          type: number\n      required:\n      - amount\n      type: object\n    CreateEstimatedOrderRequest:\n      properties:\n        orderItemList:\n          description: Order item list\n          items:\n            $ref: '#/components/schemas/OrderItemModel'\n          type: array\n        shippingAddressId:\n          description: Shipping address ID\n          type: string\n      type: object\n    CreateEstimatedVolumeDiscountRequest:\n      properties:\n        contractTermMonth:\n          default: 12\n          description: Contract months\n          format: int32\n          type: integer\n        quantity:\n          description: Quantity\n          format: int32\n          type: integer\n        startDate:\n          description: Start date\n          example: yyyyMMdd\n          type: string\n        volumeDiscountPaymentType:\n          description: Payment type\n          enum:\n          - MONTHLY\n          - PREPAYMENT\n          type: string\n        volumeDiscountType:\n          description: Long term discount type\n          enum:\n          - SORACOM_AIR_BASIC_CHARGE_V2\n          - SORACOM_AIR_BASIC_CHARGE\n          - SORACOM_AIR_MONTHLY_FIXED_BASIC_CHARGE\n          type: string\n      required:\n      - volumeDiscountType\n      - volumeDiscountPaymentType\n      - contractTermMonth\n      - quantity\n      type: object\n    CreateEventHandlerRequest:\n      properties:\n        actionConfigList:\n          items:\n            $ref: '#/components/schemas/ActionConfig'\n          type: array\n        description:\n          type: string\n        name:\n          type: string\n        ruleConfig:\n          $ref: '#/components/schemas/RuleConfig'\n        status:\n          enum:\n          - inactive\n          - active\n          type: string\n        targetGroupId:\n          type: string\n        targetImsi:\n          type: string\n        targetOperatorId:\n          type: string\n        targetSimId:\n          type: string\n      required:\n      - actionConfigList\n      - ruleConfig\n      - status\n      type: object\n    CreateGroupRequest:\n      properties:\n        tags:\n          $ref: '#/components/schemas/TagSet'\n      type: object\n    CreateOrUpdateRoleRequest:\n      properties:\n        description:\n          type: string\n        permission:\n          description: Permission as JSON\n          type: string\n      required:\n      - permission\n      type: object\n    CreatePortMappingRequest:\n      properties:\n        destination:\n          $ref: '#/components/schemas/PortMappingDestination'\n        duration:\n          description: Specify the duration, in seconds, that remote access should\n            be enabled.\n          type: number\n        source:\n          $ref: '#/components/schemas/PortMappingSource'\n        tlsRequired:\n          description: Specify whether access uses TLS.\n          type: boolean\n      required:\n      - destination\n      type: object\n    CreateRoleResponse:\n      properties:\n        roleId:\n          type: string\n      type: object\n    CreateSimRequest:\n      properties:\n        subscription:\n          type: string\n        type:\n          enum:\n          - virtual\n          type: string\n      required:\n      - type\n      - subscription\n      type: object\n    CreateSoraletRequest:\n      properties:\n        description:\n          type: string\n        soraletId:\n          type: string\n      required:\n      - soraletId\n      type: object\n    CreateUserPasswordRequest:\n      properties:\n        password:\n          type: string\n      type: object\n    CreateUserRequest:\n      properties:\n        description:\n          type: string\n      type: object\n    CreateVirtualPrivateGatewayRequest:\n      properties:\n        deviceSubnetCidrRange:\n          default: 10.128.0.0/9\n          type: string\n        type:\n          description: |-\n            VPG Type.\n             - `14` : Type-E\n             - `15` : Type-F\n          enum:\n          - 14\n          - 15\n          type: integer\n        useInternetGateway:\n          default: true\n          type: boolean\n      required:\n      - type\n      type: object\n    CreateVpcPeeringConnectionRequest:\n      properties:\n        destinationCidrBlock:\n          type: string\n        peerOwnerId:\n          type: string\n        peerRegion:\n          type: string\n        peerVpcId:\n          type: string\n      type: object\n    CredentialsModel:\n      properties:\n        createDateTime:\n          format: int64\n          type: integer\n        credentials:\n          type: object\n        credentialsId:\n          type: string\n        description:\n          type: string\n        lastUsedDateTime:\n          format: int64\n          type: integer\n        type:\n          enum:\n          - aws-credentials\n          - azure-credentials\n          - psk\n          - x509\n          type: string\n        updateDateTime:\n          format: int64\n          type: integer\n      type: object\n    CreditCard:\n      properties:\n        cvc:\n          type: string\n        expireMonth:\n          format: int32\n          type: integer\n        expireYear:\n          format: int32\n          type: integer\n        name:\n          type: string\n        number:\n          type: string\n      type: object\n    DailyBill:\n      properties:\n        amount:\n          description: Amount of bills.\n          format: int64\n          type: integer\n        date:\n          description: yyyyMMdd\n          example: yyyyMMdd\n          type: string\n      type: object\n    DailyBillResponse:\n      properties:\n        billList:\n          description: List of daily bills.\n          items:\n            $ref: '#/components/schemas/DailyBill'\n          type: array\n      type: object\n    DataEntry:\n      properties:\n        content:\n          type: string\n        contentType:\n          type: string\n        time:\n          format: int64\n          type: integer\n      type: object\n    DataSourceResourceMetadata:\n      properties:\n        attributeNames:\n          items:\n            type: string\n          type: array\n        lastModifiedTime:\n          format: int64\n          type: integer\n        resourceId:\n          type: string\n        resourceType:\n          type: string\n      type: object\n    DataTrafficStats:\n      properties:\n        downloadByteSizeTotal:\n          format: int64\n          type: integer\n        downloadPacketSizeTotal:\n          format: int64\n          type: integer\n        uploadByteSizeTotal:\n          format: int64\n          type: integer\n        uploadPacketSizeTotal:\n          format: int64\n          type: integer\n      type: object\n    Device:\n      properties:\n        device_id:\n          type: string\n        endpoint:\n          type: string\n        firmwareVersion:\n          type: string\n        groupId:\n          type: string\n        ipAddress:\n          type: string\n        lastModifiedTime:\n          format: date-time\n          type: string\n        lastRegistrationUpdate:\n          format: date-time\n          type: string\n        manufacturer:\n          type: string\n        modelNumber:\n          type: string\n        objects:\n          type: object\n        online:\n          default: false\n          type: boolean\n        operatorId:\n          type: string\n        registrationId:\n          type: string\n        registrationLifeTime:\n          format: int64\n          type: integer\n        serialNumber:\n          type: string\n        tags:\n          additionalProperties:\n            type: string\n          type: object\n      type: object\n    DeviceObjectModel:\n      properties:\n        createdTime:\n          format: date-time\n          type: string\n        format:\n          enum:\n          - xml\n          - json\n          type: string\n        lastModifiedTime:\n          format: date-time\n          type: string\n        objectId:\n          type: string\n        objectName:\n          type: string\n        operatorId:\n          type: string\n        scope:\n          type: string\n      type: object\n    DiagnosticRequest:\n      properties:\n        from:\n          description: Start time for diagnostic (unixtime milliseconds)\n          format: int64\n          type: integer\n        resourceId:\n          description: resourceId according to resourceType\n          type: string\n        resourceType:\n          enum:\n          - sim\n          type: string\n        service:\n          enum:\n          - Air\n          type: string\n        to:\n          description: End time for diagnostic (unixtime milliseconds)\n          format: int64\n          type: integer\n      required:\n      - service\n      - resourceType\n      - resourceId\n      type: object\n    DiagnosticResponse:\n      properties:\n        diagnosticId:\n          type: string\n        from:\n          description: Start time for diagnostic (unixtime milliseconds)\n          format: int64\n          type: integer\n        insights:\n          items:\n            additionalProperties:\n              $ref: '#/components/schemas/Insight'\n            type: object\n          type: array\n        resourceId:\n          description: resourceId according to resourceType\n          type: string\n        resourceType:\n          enum:\n          - sim\n          type: string\n        service:\n          enum:\n          - Air\n          type: string\n        status:\n          enum:\n          - diagnosing\n          - done\n          - failed\n          type: string\n        to:\n          description: End time for diagnostic (unixtime milliseconds)\n          format: int64\n          type: integer\n      type: object\n    DownlinkPingRequest:\n      properties:\n        numberOfPingRequests:\n          default: 1\n          description: the number of attempt ping\n          maximum: 5\n          type: integer\n        timeoutSeconds:\n          default: 1\n          description: the timeout duration of each ping\n          maximum: 3\n          type: integer\n      type: object\n    DownlinkPingResponse:\n      properties:\n        rtt:\n          description: the RTT of the ping result\n          type: string\n        stat:\n          description: the stats information of the ping result\n          type: string\n        success:\n          description: whether the ping was succeeded or not\n          type: boolean\n      type: object\n    EmailsModel:\n      properties:\n        createDateTime:\n          format: int64\n          type: integer\n        email:\n          type: string\n        emailId:\n          type: string\n        updateDateTime:\n          format: int64\n          type: integer\n        verified:\n          description: Whether the email address was verified by token.\n          type: boolean\n      type: object\n    EnableMFAOTPResponse:\n      properties:\n        totpUri:\n          type: string\n      type: object\n    Error:\n      properties:\n        code:\n          format: int32\n          type: integer\n        fields:\n          type: string\n        message:\n          type: string\n      type: object\n    EstimatedCouponModel:\n      properties:\n        amount:\n          description: Amount\n          format: double\n          type: number\n        currency:\n          description: Currency\n          enum:\n          - JPY\n          - USD\n          type: string\n        expiryYearMonth:\n          description: Expiry month\n          example: yyyyMM\n          type: string\n        orderId:\n          description: Order ID\n          type: string\n        taxAmount:\n          description: Tax amount\n          format: double\n          type: number\n        totalAmount:\n          description: Total amount\n          format: double\n          type: number\n      type: object\n    EstimatedOrderItemModel:\n      properties:\n        product:\n          $ref: '#/components/schemas/ProductModel'\n        productAmount:\n          description: Product amount\n          format: double\n          type: number\n        quantity:\n          description: Quantity\n          format: int32\n          type: integer\n      type: object\n    EstimatedOrderModel:\n      properties:\n        email:\n          description: Email address\n          type: string\n        orderId:\n          description: Order ID\n          type: string\n        orderItemList:\n          description: Order item list\n          items:\n            $ref: '#/components/schemas/EstimatedOrderItemModel'\n          type: array\n        shippingAddress:\n          $ref: '#/components/schemas/ShippingAddressModel'\n        shippingAddressId:\n          description: Shipping address ID\n          type: string\n        shippingCost:\n          description: Shipping cost\n          format: double\n          type: number\n        taxAmount:\n          description: Tax amount\n          format: double\n          type: number\n        totalAmount:\n          description: Total amount\n          format: double\n          type: number\n      type: object\n    EstimatedVolumeDiscountModel:\n      properties:\n        currency:\n          description: Currency\n          enum:\n          - JPY\n          - USD\n          type: string\n        orderId:\n          description: Order ID\n          type: string\n        taxAmount:\n          description: Tax amount\n          format: double\n          type: number\n        totalAmount:\n          description: Total amount\n          format: double\n          type: number\n        volumeDiscount:\n          $ref: '#/components/schemas/VolumeDiscountModel'\n      type: object\n    EventHandlerModel:\n      properties:\n        actionConfigList:\n          items:\n            $ref: '#/components/schemas/ActionConfig'\n          type: array\n        description:\n          type: string\n        handlerId:\n          type: string\n        name:\n          type: string\n        ruleConfig:\n          $ref: '#/components/schemas/RuleConfig'\n        status:\n          enum:\n          - inactive\n          - active\n          type: string\n        targetGroupId:\n          type: string\n        targetImsi:\n          type: string\n        targetOperatorId:\n          type: string\n        targetSimId:\n          type: string\n      required:\n      - actionConfigList\n      - handlerId\n      - ruleConfig\n      - status\n      - name\n      type: object\n    ExecuteSoraletRequest:\n      properties:\n        contentType:\n          type: string\n        direction:\n          enum:\n          - uplink\n          - downlink\n          type: string\n        encodingType:\n          enum:\n          - text\n          - binary\n          type: string\n        payload:\n          type: string\n        source:\n          additionalProperties:\n            $ref: '#/components/schemas/SoraletDataSource'\n          type: object\n        userdata:\n          type: string\n        version:\n          type: string\n      required:\n      - version\n      - direction\n      - contentType\n      - payload\n      - source\n      type: object\n    ExecuteSoraletResponse:\n      properties:\n        body:\n          type: string\n        contentType:\n          type: string\n        encodingType:\n          type: string\n        resultCode:\n          format: int32\n          type: integer\n      type: object\n    ExpiryTime:\n      properties:\n        expiryAction:\n          description: |\n            Specify expiry action. Please refer to [Soracom Air Expiration Function](https://developers.soracom.io/en/docs/air/expiration/) for more detail. You have to disable termination protection if you want to specify terminate as an action.\n\n            When omitted, it is set to null value.\n            - `doNothing` : do nothing\n            - `deleteSession` : delete session of the SIM if any\n            - `deactivate` : change the SIM status to Inactive\n            - `suspend` : change the SIM status to Suspended\n            - `terminate` : forcibly end any existing connections, and terminate the SIM\n            - null value : not set (It works the same as `doNothing`)\n          enum:\n          - doNothing\n          - deleteSession\n          - deactivate\n          - suspend\n          - terminate\n          - (null value)\n          nullable: true\n          type: string\n        expiryTime:\n          description: The timestamp (in Unix milliseconds) of a date and time set\n            using the Expiration function.\n          format: int64\n          type: integer\n      required:\n      - expiryTime\n      type: object\n    ExportRequest:\n      properties:\n        from:\n          format: int64\n          type: integer\n        period:\n          enum:\n          - month\n          - day\n          - minutes\n          type: string\n        to:\n          format: int64\n          type: integer\n      type: object\n    FileEntry:\n      properties:\n        contentLength:\n          description: Content length of the file\n          format: int64\n          type: integer\n        contentType:\n          description: Content type of the file\n          type: string\n        createdTime:\n          description: Created time of the file\n          format: int64\n          type: integer\n        directory:\n          description: Parent directory name\n          type: string\n        etag:\n          description: Etag of the file\n          type: string\n        filePath:\n          description: Absolute path of the file\n          type: string\n        filename:\n          description: File name\n          type: string\n        isDirectory:\n          description: Whether the entry is directory or not\n          type: boolean\n        lastModifiedTime:\n          description: Last modified time of the file\n          format: int64\n          type: integer\n      type: object\n    FileExportResponse:\n      properties:\n        exportedFileId:\n          description: Exported file ID (in the case that export mode is async).\n          type: string\n        exportedFilePath:\n          description: Path to the exported file (in the case that export mode is\n            async).\n          type: string\n        url:\n          description: URL of the exported file (in the case that export mode is not\n            specified or sync).\n          type: string\n      type: object\n    FunkStatsResponse:\n      properties:\n        funkStatsMap:\n          additionalProperties:\n            $ref: '#/components/schemas/SoracomFunkStats'\n          type: object\n        unixtime:\n          format: int64\n          type: integer\n      type: object\n    FunnelAWSFirehoseDestination:\n      properties:\n        provider:\n          enum:\n          - aws\n          type: string\n        resourceUrl:\n          example: https://firehose.\u003cregion\u003e.amazonaws.com/\u003cdelivery stream name\u003e\n          type: string\n        service:\n          enum:\n          - firehose\n          type: string\n      type: object\n    FunnelAWSIoTDestination:\n      properties:\n        provider:\n          enum:\n          - aws\n          type: string\n        resourceUrl:\n          example: https://\u003cid\u003e.iot.\u003cregion\u003e.amazonaws.com/\u003ctopic\u003e\n          type: string\n        service:\n          enum:\n          - aws-iot\n          type: string\n      type: object\n    FunnelAWSKinesisDestination:\n      properties:\n        provider:\n          enum:\n          - aws\n          type: string\n        randomizePartitionKey:\n          type: boolean\n        resourceUrl:\n          example: https://kinesis.\u003cregion\u003e.amazonaws.com/\u003cdelivery stream name\u003e\n          type: string\n        service:\n          enum:\n          - kinesis\n          type: string\n      type: object\n    FunnelAcroquestTorrentioDestination:\n      properties:\n        endpointId:\n          type: string\n        provider:\n          enum:\n          - acroquest\n          type: string\n        resourceUrl:\n          type: string\n        service:\n          enum:\n          - torrentio\n          type: string\n        tenantId:\n          type: string\n      type: object\n    FunnelAppressoDataSpiderDestination:\n      properties:\n        provider:\n          enum:\n          - appresso\n          type: string\n        resourceUrl:\n          example: https://ss.dataspidercloud.com/ws/trigger/funnel?cid=\u003ccid\u003e\u0026sid=\u003csid\u003e\n          type: string\n        service:\n          enum:\n          - dataspider\n          type: string\n      type: object\n    FunnelAzureEventHubDestination:\n      properties:\n        provider:\n          enum:\n          - azure\n          type: string\n        resourceUrl:\n          example: https://\u003cnamespace\u003e.servicebus.windows.net/\u003cevent hubs name\u003e/messages\n          type: string\n        service:\n          enum:\n          - eventhubs\n          type: string\n      type: object\n    FunnelBrainsTechImpulseDestination:\n      properties:\n        provider:\n          enum:\n          - brains-tech\n          type: string\n        resourceUrl:\n          type: string\n        service:\n          enum:\n          - impulse\n          type: string\n      type: object\n    FunnelConfiguration:\n      properties:\n        addSimId:\n          default: false\n          type: boolean\n        contentType:\n          $ref: '#/components/schemas/FunnelContentType'\n        credentialsId:\n          type: string\n        destination:\n          oneOf:\n          - $ref: '#/components/schemas/FunnelDestination'\n          - $ref: '#/components/schemas/FunnelAWSFirehoseDestination'\n          - $ref: '#/components/schemas/FunnelAWSIoTDestination'\n          - $ref: '#/components/schemas/FunnelAWSKinesisDestination'\n          - $ref: '#/components/schemas/FunnelAzureEventHubDestination'\n          - $ref: '#/components/schemas/FunnelGooglePubSubDestination'\n          - $ref: '#/components/schemas/FunnelAcroquestTorrentioDestination'\n          - $ref: '#/components/schemas/FunnelAppressoDataSpiderDestination'\n          - $ref: '#/components/schemas/FunnelBrainsTechImpulseDestination'\n          - $ref: '#/components/schemas/FunnelEsrijArcgisOnlineDestination'\n          - $ref: '#/components/schemas/FunnelFusicMockmockDatarecorderDestination'\n          - $ref: '#/components/schemas/FunnelInfoteriaPlatioDestination'\n          - $ref: '#/components/schemas/FunnelKiiThingifDestination'\n          - $ref: '#/components/schemas/FunnelLandlogDestination'\n          - $ref: '#/components/schemas/FunnelOptimCloudiotosDestination'\n          - $ref: '#/components/schemas/FunnelTeradataIntellicloudDestination'\n          - $ref: '#/components/schemas/FunnelWingarcMotionboardDestination'\n          - $ref: '#/components/schemas/FunnelYaskawaMmcloudDestination'\n          - $ref: '#/components/schemas/FunnelSensorCorpusDestination'\n        enabled:\n          default: false\n          type: boolean\n      type: object\n    FunnelContentType:\n      enum:\n      - json\n      - text\n      - unspecified\n      - binary\n      - application/x-soracom-bf-v1\n      type: string\n    FunnelDestination:\n      properties:\n        provider:\n          type: string\n        resourceUrl:\n          type: string\n        service:\n          type: string\n      type: object\n    FunnelEsrijArcgisOnlineDestination:\n      properties:\n        config:\n          type: string\n        provider:\n          enum:\n          - esrij\n          type: string\n        resourceUrl:\n          type: string\n        service:\n          enum:\n          - arcgis-online\n          type: string\n      type: object\n    FunnelFusicMockmockDatarecorderDestination:\n      properties:\n        provider:\n          enum:\n          - fusic\n          type: string\n        resourceUrl:\n          type: string\n        service:\n          enum:\n          - mockmock-datarecorder\n          type: string\n      type: object\n    FunnelGooglePubSubDestination:\n      properties:\n        provider:\n          enum:\n          - google\n          type: string\n        resourceUrl:\n          example: your_topic_name\n          type: string\n        service:\n          enum:\n          - pubsub\n          type: string\n      type: object\n    FunnelInfoteriaPlatioDestination:\n      properties:\n        applicationId:\n          type: string\n        collectionId:\n          type: string\n        passAll:\n          type: boolean\n        provider:\n          enum:\n          - infoteria\n          type: string\n        resourceUrl:\n          type: string\n        service:\n          enum:\n          - platio\n          type: string\n        values:\n          type: string\n      type: object\n    FunnelKiiThingifDestination:\n      properties:\n        provider:\n          enum:\n          - kii\n          type: string\n        resourceUrl:\n          type: string\n        service:\n          enum:\n          - thingif\n          type: string\n      type: object\n    FunnelLandlogDestination:\n      properties:\n        channel_id:\n          type: string\n        data_format:\n          enum:\n          - json\n          - text\n          - xml\n          type: string\n        provider:\n          enum:\n          - landlog\n          type: string\n        resourceUrl:\n          example: https://api.landlog.info\n          type: string\n        service:\n          enum:\n          - landlog\n          type: string\n      type: object\n    FunnelOptimCloudiotosDestination:\n      properties:\n        channel_id:\n          type: string\n        data_format:\n          type: string\n        provider:\n          enum:\n          - optim\n          type: string\n        resourceUrl:\n          example: https://messaging.optimcloudapis.com\n          type: string\n        service:\n          enum:\n          - cloudiotos\n          type: string\n      type: object\n    FunnelSensorCorpusDestination:\n      properties:\n        additionalData:\n          type: string\n        provider:\n          enum:\n          - infocorpus\n          type: string\n        resourceUrl:\n          example: https://www.sensorcorpus.net/\n          type: string\n        service:\n          enum:\n          - sensorcorpus\n          type: string\n      type: object\n    FunnelStatsResponse:\n      properties:\n        funnelStatsMap:\n          additionalProperties:\n            $ref: '#/components/schemas/SoracomFunnelStats'\n          type: object\n        unixtime:\n          format: int64\n          type: integer\n      type: object\n    FunnelTeradataIntellicloudDestination:\n      properties:\n        provider:\n          enum:\n          - teradata\n          type: string\n        resourceUrl:\n          type: string\n        service:\n          enum:\n          - intellicloud\n          type: string\n      type: object\n    FunnelWingarcMotionboardDestination:\n      properties:\n        provider:\n          enum:\n          - wingarc\n          type: string\n        resourceUrl:\n          example: https://iot-cloud.motionboard.jp/motionboard/\n          type: string\n        service:\n          enum:\n          - motionboard\n          type: string\n      type: object\n    FunnelYaskawaMmcloudDestination:\n      properties:\n        desthost:\n          type: string\n        destport:\n          maximum: 0\n          minimum: 65535\n          type: integer\n        provider:\n          enum:\n          - yaskawa\n          type: string\n        resourceUrl:\n          type: string\n        service:\n          enum:\n          - mmcloud\n          type: string\n      type: object\n    Gadget:\n      properties:\n        attributes:\n          type: object\n        groupId:\n          type: string\n        id:\n          type: string\n        lastModifiedTime:\n          format: date-time\n          type: string\n        lastSeen:\n          type: object\n        operatorId:\n          type: string\n        product_id:\n          type: string\n        serial_number:\n          type: string\n        status:\n          enum:\n          - active\n          - terminated\n          type: string\n        tags:\n          additionalProperties:\n            type: string\n          type: object\n        terminationEnabled:\n          default: false\n          type: boolean\n      type: object\n    GadgetRegistrationRequest:\n      properties:\n        tags:\n          additionalProperties:\n            type: string\n          type: object\n      type: object\n    GatePeer:\n      properties:\n        innerIpAddress:\n          type: string\n        netmask:\n          type: string\n        outerIpAddress:\n          type: string\n        ownedByCustomer:\n          type: boolean\n      type: object\n    GenerateOperatorsAuthKeyResponse:\n      properties:\n        authKey:\n          type: string\n        authKeyId:\n          type: string\n      type: object\n    GenerateTokenRequest:\n      properties:\n        tokenTimeoutSeconds:\n          default: 86400\n          description: |\n            New API token expiry duration in seconds.\n            Default: 86400 [seconds] (24 hours)\n            Maximum: 172800 [seconds] (48 hours)\n          maximum: 172800\n          type: integer\n      type: object\n    GenerateTokenResponse:\n      properties:\n        token:\n          type: string\n      required:\n      - token\n      type: object\n    GenerateUserAuthKeyResponse:\n      properties:\n        authKey:\n          type: string\n        authKeyId:\n          type: string\n      type: object\n    GetBillingHistoryResponse:\n      properties:\n        billList:\n          description: List of monthly bills.\n          items:\n            $ref: '#/components/schemas/MonthlyBill'\n          type: array\n      type: object\n    GetDefaultPermissionsResponse:\n      properties:\n        defaultPermissions:\n          type: string\n      type: object\n    GetExportedFileResponse:\n      properties:\n        status:\n          description: Status of the export operation\n          enum:\n          - processing\n          - exported\n          - failed\n          type: string\n        url:\n          description: Download URL of the exported file\n          type: string\n      type: object\n    GetLatestBill:\n      properties:\n        amount:\n          description: Amount of bills.\n          format: int64\n          type: integer\n        lastEvaluatedTime:\n          description: Date andtime when calculated.\n          example: yyyyMMddHHmmss\n          type: string\n      type: object\n    GetOperatorResponse:\n      properties:\n        createDate:\n          type: string\n        description:\n          type: string\n        email:\n          type: string\n        operatorId:\n          type: string\n        rootOperatorId:\n          type: string\n        updateDate:\n          type: string\n      required:\n      - createDate\n      - description\n      - email\n      - operatorId\n      - rootOperatorId\n      - updateDate\n      type: object\n    GetOrderResponse:\n      properties:\n        email:\n          description: Email address\n          type: string\n        orderDateTime:\n          description: Order date and time\n          example: yyyyMMddHHmmss\n          type: string\n        orderId:\n          description: Order ID\n          type: string\n        orderItemList:\n          description: Order item list\n          items:\n            $ref: '#/components/schemas/EstimatedOrderItemModel'\n          type: array\n        orderStatus:\n          description: Order status\n          enum:\n          - ordering\n          - ordered\n          - kitting\n          - shipped\n          - received\n          - cancelling\n          - cancelled\n          - failed\n          type: string\n        shippingAddress:\n          $ref: '#/components/schemas/ShippingAddressModel'\n        shippingAddressId:\n          description: Shipping address ID\n          type: string\n        shippingCost:\n          description: Shipping cost\n          format: double\n          type: number\n        shippingLabelNumber:\n          description: Shipping label number\n          type: string\n        taxAmount:\n          description: Tax amount\n          format: double\n          type: number\n        totalAmount:\n          description: Total amount\n          format: double\n          type: number\n      type: object\n    GetPaymentMethodResult:\n      properties:\n        errorCode:\n          description: Error code (only if payment information is invalid)\n          enum:\n          - success\n          - processing\n          - invalid_request\n          - invalid_number\n          - incorrect_number\n          - invalid_name\n          - invalid_expiry_month\n          - invalid_expiry_year\n          - invalid_expiry\n          - incorrect_expiry\n          - invalid_cvc\n          - incorrect_cvc\n          - card_declined\n          - missing\n          - processing_error\n          type: string\n        errorMessage:\n          description: Error message (only if payment information is invalid)\n          type: string\n        properties:\n          description: Payment information\n          type: string\n        providerType:\n          description: Provider type\n          enum:\n          - WebPay\n          type: string\n        updateDate:\n          description: Update date\n          example: yyyyMMddHHmmss\n          type: string\n      type: object\n    GetPaymentTransactionResult:\n      properties:\n        amount:\n          $ref: '#/components/schemas/PaymentAmount'\n        description:\n          $ref: '#/components/schemas/PaymentDescription'\n        message:\n          description: Message\n          type: string\n        messageCode:\n          description: Message code\n          enum:\n          - success\n          - processing\n          - invalid_request\n          - invalid_number\n          - incorrect_number\n          - invalid_name\n          - invalid_expiry_month\n          - invalid_expiry_year\n          - invalid_expiry\n          - incorrect_expiry\n          - invalid_cvc\n          - incorrect_cvc\n          - card_declined\n          - missing\n          - processing_error\n          type: string\n        status:\n          description: Status\n          enum:\n          - success\n          - error\n          type: string\n      type: object\n    GetShippingAddressResponse:\n      properties:\n        addressLine1:\n          type: string\n        addressLine2:\n          type: string\n        building:\n          type: string\n        city:\n          type: string\n        companyName:\n          type: string\n        department:\n          type: string\n        fullName:\n          type: string\n        phoneNumber:\n          type: string\n        shippingAddressId:\n          description: ID of shipping address\n          type: string\n        shippingArea:\n          description: shipping area\n          type: string\n        state:\n          type: string\n        zipCode:\n          type: string\n      required:\n      - addressLine1\n      - city\n      - phoneNumber\n      - shippingAddressId\n      - shippingArea\n      - state\n      - zipCode\n      type: object\n    GetUserPasswordResponse:\n      properties:\n        hasPassword:\n          type: boolean\n      type: object\n    GetUserPermissionResponse:\n      properties:\n        permission:\n          description: JSON string of permissions\n          type: string\n      required:\n      - permission\n      type: object\n    GetVolumeDiscountResponse:\n      properties:\n        contractDateTime:\n          description: Contract date time\n          example: yyyyMMddHHmmss\n          type: string\n        contractId:\n          description: Contract ID\n          type: string\n        contractTermMonth:\n          default: 12\n          description: Contract months\n          format: int32\n          type: integer\n        endDate:\n          description: End date\n          example: yyyyMMdd\n          type: string\n        initialCost:\n          description: Initial cost\n          format: double\n          type: number\n        quantity:\n          description: Quantity\n          format: int32\n          type: integer\n        startDate:\n          description: Start date\n          example: yyyyMMdd\n          type: string\n        status:\n          description: Status\n          enum:\n          - active\n          - expired\n          type: string\n        unitPrice:\n          description: Unit price\n          format: double\n          type: number\n        volumeDiscountPaymentType:\n          description: Payment type\n          enum:\n          - MONTHLY\n          - PREPAYMENT\n          type: string\n        volumeDiscountType:\n          description: Long term discount type\n          enum:\n          - SORACOM_AIR_BASIC_CHARGE_V2\n          - SORACOM_AIR_BASIC_CHARGE\n          - SORACOM_AIR_MONTHLY_FIXED_BASIC_CHARGE\n          type: string\n      type: object\n    GlobalSimAppletPLMNRecord:\n      properties:\n        containerId:\n          format: int64\n          type: integer\n        mcc:\n          type: string\n        mnc:\n          type: string\n      required:\n      - mcc\n      - containerId\n      type: object\n    Group:\n      properties:\n        configuration:\n          $ref: '#/components/schemas/Map'\n        createdTime:\n          format: int64\n          type: integer\n        groupId:\n          type: string\n        lastModifiedTime:\n          format: int64\n          type: integer\n        operatorId:\n          type: string\n        tags:\n          $ref: '#/components/schemas/TagSet'\n      type: object\n    GroupConfigurationUpdateRequest:\n      properties:\n        key:\n          type: string\n        value:\n          type: string\n      required:\n      - key\n      - value\n      type: object\n    HarvestExportedDataStatsResponse:\n      properties:\n        exportedBytes:\n          description: exportedBytes\n          type: integer\n        yearMonth:\n          description: yearMonth\n          type: string\n      type: object\n    HarvestStatsResponse:\n      properties:\n        harvestStatsMap:\n          additionalProperties:\n            $ref: '#/components/schemas/SoracomHarvestStats'\n          type: object\n        unixtime:\n          format: int64\n          type: integer\n      type: object\n    ImeiLock:\n      properties:\n        imei:\n          type: string\n      type: object\n    IndividualInformationModel:\n      properties:\n        addressLine1:\n          type: string\n        addressLine2:\n          type: string\n        building:\n          type: string\n        city:\n          type: string\n        countryCode:\n          type: string\n        fullName:\n          type: string\n        phoneNumber:\n          type: string\n        state:\n          type: string\n        zipCode:\n          type: string\n      required:\n      - fullName\n      - countryCode\n      - zipCode\n      - phoneNumber\n      type: object\n    Insight:\n      properties:\n        anomalyDetectedTimes:\n          description: Times that possible anomaly behaviors were detected. The format\n            depends on the timestamp of events relating to the category. (e.g. unixtime\n            milliseconds for session category)\n          items:\n            type: string\n          type: array\n        category:\n          enum:\n          - data\n          - session\n          - sim\n          - others\n          - unknown\n          type: string\n        insightId:\n          type: string\n        message:\n          type: string\n        referenceUrls:\n          description: Reference URLs that is related to the insight\n          items:\n            additionalProperties:\n              $ref: '#/components/schemas/ReferenceUrl'\n            type: object\n          type: array\n        severity:\n          enum:\n          - error\n          - warning\n          - info\n          - none\n          - unknown\n          type: string\n      type: object\n    IpAddressMapEntry:\n      properties:\n        ipAddress:\n          type: string\n        key:\n          type: string\n        type:\n          enum:\n          - static\n          - dynamic\n          - customerGatePeer\n          - gatePeer\n          type: string\n      type: object\n    IssueAddEmailTokenRequest:\n      properties:\n        email:\n          description: Email address to be added\n          type: string\n        password:\n          description: Password of the operator\n          type: string\n      required:\n      - email\n      - password\n      type: object\n    IssuePasswordResetTokenRequest:\n      properties:\n        email:\n          type: string\n      required:\n      - email\n      type: object\n    IssueSubscriberTransferTokenRequest:\n      properties:\n        transferDestinationOperatorEmail:\n          description: Email address of the destination operator.\n          type: string\n        transferDestinationOperatorId:\n          description: Operator ID of the destination operator.\n          type: string\n        transferImsi:\n          description: List of IMSIs to be transferred.\n          items:\n            type: string\n          type: array\n      required:\n      - transferDestinationOperatorEmail\n      - transferDestinationOperatorId\n      - transferImsi\n      type: object\n    IssueSubscriberTransferTokenResponse:\n      properties:\n        token:\n          description: Transfer token.\n          type: string\n      required:\n      - token\n      type: object\n    JunctionInspectionConfiguration:\n      properties:\n        enabled:\n          default: false\n          type: boolean\n        report:\n          $ref: '#/components/schemas/FunnelConfiguration'\n      type: object\n    JunctionMirroringConfiguration:\n      properties:\n        peers:\n          additionalProperties:\n            $ref: '#/components/schemas/JunctionMirroringPeer'\n          type: object\n      type: object\n    JunctionMirroringPeer:\n      properties:\n        description:\n          type: string\n        enabled:\n          default: false\n          type: boolean\n        ipAddress:\n          type: string\n        protocol:\n          enum:\n          - gre\n          type: string\n      type: object\n    JunctionRedirectionConfiguration:\n      properties:\n        description:\n          type: string\n        enabled:\n          default: false\n          type: boolean\n        gateway:\n          type: string\n      type: object\n    LagoonDashboardPermissionsResponse:\n      properties:\n        dashboardId:\n          format: int64\n          type: number\n        dashboardTitle:\n          type: string\n        permissions:\n          items:\n            properties:\n              dashboardId:\n                format: int64\n                type: number\n              dashboardTitle:\n                type: string\n              permissionName:\n                enum:\n                - View\n                - Edit\n                - Admin\n                type: string\n              userEmail:\n                type: string\n              userId:\n                format: int64\n                type: number\n            type: object\n          type: array\n      type: object\n    LagoonDashboardPermissionsUpdatingRequest:\n      properties:\n        permissions:\n          items:\n            properties:\n              permission:\n                type: string\n              userId:\n                format: int64\n                type: integer\n            type: object\n          type: array\n      type: object\n    LagoonLicensePackStatusResponse:\n      properties:\n        licensePackName:\n          type: string\n        quantity:\n          format: int32\n          type: integer\n      type: object\n    LagoonLicensePacksUpdatingRequest:\n      properties:\n        licensePackQuantities:\n          items:\n            properties:\n              desiredQuantity:\n                format: int32\n                type: integer\n              licensePackName:\n                description: |\n                  Specify the license packs for which you want to update the number.\n                  - `basicUser`: User License Pack\n                  - `basicDashboard`: Dashboard License Pack\n                enum:\n                - basicUser\n                - basicDashboard\n                type: string\n            type: object\n          type: array\n      type: object\n    LagoonMigrationFromClassicRequest:\n      properties:\n        dashboardIds:\n          description: A list of dashboard IDs to migrate\n          items:\n            type: string\n          type: array\n      type: object\n    LagoonPlanChangingRequest:\n      properties:\n        plan:\n          enum:\n          - maker\n          - pro\n          - free\n          type: string\n      type: object\n    LagoonRegistrationRequest:\n      properties:\n        plan:\n          enum:\n          - free\n          - maker\n          - pro\n          type: string\n        userPassword:\n          description: This password is used by the initial user's login.\n          type: string\n      type: object\n    LagoonRegistrationResponse:\n      properties:\n        lagoonUserEmail:\n          description: This email address is used on login with the initial user.\n          type: string\n      type: object\n    LagoonUser:\n      properties:\n        email:\n          description: This value used on login.\n          type: string\n        id:\n          type: number\n        lastSeenAt:\n          description: The last login datetime.\n          type: string\n        lastSeenAtAge:\n          description: The last login datetime as age.\n          type: string\n        role:\n          description: A role that represents the permission.\n          enum:\n          - Viewer\n          - Editor\n          type: string\n      type: object\n    LagoonUserCreationRequest:\n      properties:\n        role:\n          description: A role that represents the permission.\n          enum:\n          - Viewer\n          - Editor\n          type: string\n        userEmail:\n          type: string\n        userPassword:\n          type: string\n      type: object\n    LagoonUserCreationResponse:\n      properties:\n        id:\n          description: Lagoon user ID assigned to the created user.\n          type: integer\n      type: object\n    LagoonUserEmailUpdatingRequest:\n      properties:\n        userEmail:\n          type: string\n      type: object\n    LagoonUserPasswordUpdatingRequest:\n      properties:\n        newPassword:\n          type: string\n        oldPassword:\n          type: string\n      type: object\n    LagoonUserPermissionUpdatingRequest:\n      properties:\n        role:\n          description: A role that represents the permission.\n          enum:\n          - Viewer\n          - Editor\n          type: string\n      type: object\n    LastSeen:\n      properties:\n        rssi:\n          format: int32\n          type: integer\n        snr:\n          format: int32\n          type: integer\n        time:\n          format: date-time\n          type: string\n      type: object\n    ListCouponResponse:\n      properties:\n        couponList:\n          description: Coupons\n          items:\n            $ref: '#/components/schemas/CouponResponse'\n          type: array\n      type: object\n    ListOrderResponse:\n      properties:\n        orderList:\n          description: List of confirmed orders\n          items:\n            $ref: '#/components/schemas/GetOrderResponse'\n          type: array\n      type: object\n    ListOrderedSubscriberResponse:\n      properties:\n        orderedSubscriberList:\n          description: List of ordered SIMs\n          items:\n            $ref: '#/components/schemas/OrderedSubscriber'\n          type: array\n      type: object\n    ListPaymentStatementResponse:\n      properties:\n        paymentStatementsList:\n          description: Payment statements\n          items:\n            $ref: '#/components/schemas/PaymentStatementResponse'\n          type: array\n      type: object\n    ListProductResponse:\n      properties:\n        productList:\n          items:\n            $ref: '#/components/schemas/ProductModel'\n          type: array\n        shippingCostList:\n          items:\n            $ref: '#/components/schemas/ShippingCostModel'\n          type: array\n      type: object\n    ListRolesResponse:\n      properties:\n        createDateTime:\n          format: int64\n          type: integer\n        description:\n          type: string\n        roleId:\n          type: string\n        updateDateTime:\n          format: int64\n          type: integer\n      type: object\n    ListShippingAddressResponse:\n      properties:\n        shippingAddresses:\n          items:\n            $ref: '#/components/schemas/GetShippingAddressResponse'\n          type: array\n      type: object\n    ListVolumeDiscountResponse:\n      properties:\n        volumeDiscountList:\n          description: Contracted long term discounts\n          items:\n            $ref: '#/components/schemas/GetVolumeDiscountResponse'\n          type: array\n      type: object\n    LocationRegistrationStatus:\n      properties:\n        cs:\n          $ref: '#/components/schemas/LocationRegistrationStatusForNetwork'\n          description: Information on location registration to the CS network\n        eps:\n          $ref: '#/components/schemas/LocationRegistrationStatusForNetwork'\n          description: Information on location registration to the EPS network\n        ps:\n          $ref: '#/components/schemas/LocationRegistrationStatusForNetwork'\n          description: Information on location registration to the PS network\n      type: object\n    LocationRegistrationStatusForNetwork:\n      properties:\n        lastModifiedTime:\n          description: Timestamp of the last successful location registration (Unix\n            time, in milliseconds)\n          format: int64\n          type: integer\n        vplmn:\n          description: PLMN ID of the visited network.\n          type: string\n      type: object\n    LogEntry:\n      properties:\n        body:\n          type: object\n        resourceId:\n          type: string\n        resourceType:\n          enum:\n          - Subscriber\n          - EventHandler\n          - VirtualPrivateGateway\n          type: string\n        service:\n          enum:\n          - Air\n          - Beam\n          - Canal\n          - Direct\n          - Door\n          - Endorse\n          - Funnel\n          - Gate\n          type: string\n        time:\n          format: int64\n          type: integer\n      type: object\n    LoraData:\n      properties:\n        data:\n          type: string\n        fPort:\n          default: 2\n          type: integer\n      type: object\n    LoraDevice:\n      properties:\n        device_id:\n          type: string\n        groupId:\n          type: string\n        lastModifiedTime:\n          format: date-time\n          type: string\n        lastSeen:\n          $ref: '#/components/schemas/LastSeen'\n        operatorId:\n          type: string\n        status:\n          enum:\n          - active\n          - ready\n          - terminated\n          - instock\n          type: string\n        tags:\n          additionalProperties:\n            type: string\n          type: object\n        terminationEnabled:\n          default: false\n          type: boolean\n      type: object\n    LoraGateway:\n      properties:\n        address:\n          type: string\n        createdTime:\n          format: date-time\n          type: string\n        gatewayId:\n          type: string\n        lastModifiedTime:\n          format: date-time\n          type: string\n        networkSetId:\n          type: string\n        online:\n          default: false\n          type: boolean\n        operatorId:\n          type: string\n        owned:\n          default: false\n          type: boolean\n        status:\n          enum:\n          - active\n          - terminated\n          - ready\n          - instock\n          type: string\n        tags:\n          additionalProperties:\n            type: string\n          type: object\n        terminationEnabled:\n          default: false\n          type: boolean\n      type: object\n    LoraNetworkSet:\n      properties:\n        allowedOperators:\n          items:\n            type: string\n          type: array\n          uniqueItems: true\n        createdTime:\n          format: date-time\n          type: string\n        lastModifiedTime:\n          format: date-time\n          type: string\n        networkSetId:\n          type: string\n        operatorId:\n          type: string\n        tags:\n          additionalProperties:\n            type: string\n          type: object\n      type: object\n    MFAAuthenticationRequest:\n      properties:\n        mfaOTPCode:\n          type: string\n      type: object\n    MFAIssueRevokingTokenRequest:\n      properties:\n        email:\n          type: string\n        password:\n          type: string\n      type: object\n    MFARevokingTokenVerifyRequest:\n      properties:\n        backupCode:\n          type: string\n        email:\n          type: string\n        password:\n          type: string\n        token:\n          type: string\n      type: object\n    MFAStatusOfUseResponse:\n      properties:\n        status:\n          type: string\n      type: object\n    Map:\n      additionalProperties:\n        type: string\n      type: object\n    MappingEntries:\n      properties:\n        mappingEntries:\n          items:\n            $ref: '#/components/schemas/GlobalSimAppletPLMNRecord'\n          type: array\n      type: object\n    MonthlyBill:\n      properties:\n        amount:\n          description: Amount of monthly bills.\n          format: int64\n          type: integer\n        paymentStatus:\n          description: Latest payment status.\n          enum:\n          - lessThanMinimumCharge\n          - paying\n          - paid\n          - refunding\n          - refunded\n          - fail\n          type: string\n        paymentTransactionId:\n          description: Transaction ID to get detail of payment.\n          type: string\n        yearMonth:\n          description: yyyyMM\n          example: yyyyMM\n          type: string\n      type: object\n    NapterAuditLogDirection:\n      properties:\n        destinationIPAddress:\n          type: string\n        destinationPort:\n          format: int64\n          type: integer\n        sourceIPAddress:\n          type: string\n        sourcePort:\n          format: int64\n          type: integer\n      type: object\n    NapterAuditLogEntry:\n      properties:\n        connectionId:\n          type: string\n        createdAt:\n          format: int64\n          type: integer\n        direction:\n          $ref: '#/components/schemas/NapterAuditLogDirection'\n        imsi:\n          type: string\n        isTLS:\n          type: boolean\n        operatorId:\n          type: string\n        type:\n          enum:\n          - ACCESS\n          - DENIED\n          - CONNECTED\n          - CLOSED\n          - REFUSED\n          - CREATED\n          - DELETED\n          - EXPIRED\n          type: string\n      type: object\n    NapterAuditLogsExportedDataStatsResponse:\n      properties:\n        exportedBytes:\n          description: exportedBytes\n          type: integer\n        yearMonth:\n          description: yearMonth\n          type: string\n      type: object\n    ObjectInstance:\n      properties:\n        id:\n          format: int32\n          type: integer\n        observed:\n          default: false\n          type: boolean\n        resources:\n          additionalProperties:\n            $ref: '#/components/schemas/ResourceInstance'\n          type: object\n      type: object\n    OpenGateRequest:\n      properties:\n        privacySeparatorEnabled:\n          default: false\n          type: boolean\n        vxlanId:\n          default: 10\n          format: int32\n          type: integer\n      type: object\n    OperatorMFAVerifyingResponse:\n      properties:\n        backupCodes:\n          items:\n            type: string\n          type: array\n      type: object\n    OrderItemModel:\n      properties:\n        productCode:\n          description: Product code\n          type: string\n        quantity:\n          description: Quantity\n          format: int32\n          type: integer\n      type: object\n    OrderedSubscriber:\n      properties:\n        imsi:\n          description: IMSI\n          type: string\n        msisdn:\n          description: MSISDN\n          type: string\n        serialNumber:\n          description: serialNumber\n          type: string\n      type: object\n    PacketCaptureSession:\n      properties:\n        createdTime:\n          format: date-time\n          type: string\n        duration:\n          format: int32\n          type: integer\n        endedTime:\n          format: date-time\n          type: string\n        failedReason:\n          type: string\n        prefix:\n          type: string\n        startedTime:\n          format: date-time\n          type: string\n        status:\n          enum:\n          - REQUESTED\n          - ACCEPTED\n          - CAPTURING\n          - POST_PROCESSING\n          - DONE\n          - FAILED\n          type: string\n        url:\n          format: uri\n          type: string\n      type: object\n    PacketCaptureSessionRequest:\n      properties:\n        duration:\n          format: int32\n          maximum: 86400\n          minimum: 30\n          type: integer\n        prefix:\n          pattern: ^[0-9A-Za-z_\\-]{0,100}$\n          type: string\n      required:\n      - duration\n      type: object\n    PaymentAmount:\n      description: Payment amount\n      properties:\n        taxAmount:\n          format: double\n          type: number\n        totalAmount:\n          format: double\n          type: number\n      type: object\n    PaymentDescription:\n      description: Payment description\n      properties:\n        description:\n          type: string\n        itemList:\n          items:\n            type: string\n          type: array\n      type: object\n    PaymentStatementResponse:\n      properties:\n        amount:\n          description: Amount\n          format: double\n          type: number\n        paymentDateTime:\n          description: Payment date time\n          format: int64\n          type: integer\n        paymentInstrument:\n          description: Payment instrument\n          type: string\n        paymentMethod:\n          description: Payment method\n          type: string\n        paymentStatementId:\n          description: Payment statement ID\n          type: string\n        paymentStatementInfo:\n          description: Payment statement information\n          type: string\n      type: object\n    Placement:\n      properties:\n        region:\n          default: eu-central-1\n          type: string\n      type: object\n    PortMapping:\n      properties:\n        destination:\n          $ref: '#/components/schemas/PortMappingDestination'\n        duration:\n          description: The duration that remote access is enabled, in seconds.\n          type: number\n        endpoint:\n          description: SORACOM Napter endpoint (IP address and port number) for remote\n            access.\n          type: string\n        hostname:\n          description: SORACOM Napter hostname for remote access.\n          type: string\n        ipAddress:\n          description: SORACOM Napter IP Address for remote access.\n          type: string\n        port:\n          description: SORACOM Napter port number for remote access.\n          type: number\n        source:\n          $ref: '#/components/schemas/PortMappingSource'\n        tlsRequired:\n          description: Indicates TLS is required.\n          type: boolean\n      type: object\n    PortMappingDestination:\n      properties:\n        imsi:\n          description: The target IMSI of the subscriber.\n          type: string\n        port:\n          description: The port on your device used for access.\n          type: number\n      required:\n      - imsi\n      - port\n      type: object\n    PortMappingSource:\n      properties:\n        ipRanges:\n          description: The range of IP addresses in CIDR notation which will be allowed\n            to access the port mapping.\n          items:\n            type: string\n          type: array\n      type: object\n    PreviousSessionStatus:\n      properties:\n        cell:\n          $ref: '#/components/schemas/Cell'\n        createdTime:\n          description: The time when the previous session was created.\n          format: int64\n          type: integer\n        deletedTime:\n          description: The time when the previous session was deleted.\n          format: int64\n          type: integer\n        dnsServers:\n          description: Array of IP address of the DNS servers.\n          items:\n            type: string\n          type: array\n        gatewayPrivateIpAddress:\n          type: string\n        gatewayPublicIpAddress:\n          type: string\n        imei:\n          description: The IMEI of the device using the SIM.\n          type: string\n        ueIpAddress:\n          description: The IP address of the device.\n          type: string\n        vpgId:\n          description: The Virtual Private Gateway IP address configured.\n          type: string\n      type: object\n    PriceByQuantity:\n      properties:\n        minQuantity:\n          description: Min quantity\n          format: int32\n          type: integer\n        price:\n          description: Price\n          format: double\n          type: number\n        taxIncludedPrice:\n          description: TaxIncluded price\n          format: double\n          type: number\n      type: object\n    ProductModel:\n      description: Product\n      properties:\n        campaignCode:\n          description: Campaign code\n          type: string\n        consignorId:\n          description: Consignor ID\n          type: string\n        consignorName:\n          description: Consignor name\n          type: string\n        count:\n          description: Count\n          format: double\n          type: number\n        currency:\n          description: Currency\n          enum:\n          - JPY\n          - USD\n          type: string\n        description:\n          description: Product Description\n          type: string\n        maxQuantity:\n          description: Max quantity\n          format: int32\n          type: integer\n        price:\n          description: Price\n          format: double\n          type: number\n        priceByQuantityList:\n          items:\n            $ref: '#/components/schemas/PriceByQuantity'\n          type: array\n        productCode:\n          description: Product code\n          type: string\n        productInfoURL:\n          description: URL of product page\n          type: string\n        productName:\n          description: Product name\n          type: string\n        productType:\n          description: Product type\n          enum:\n          - sim\n          - lora\n          - sigfox\n          - network_module\n          - misc\n          type: string\n        properties:\n          additionalProperties:\n            type: string\n          description: Properties\n          type: object\n        regularPrice:\n          description: Regular price\n          format: double\n          type: number\n        taxIncludedPrice:\n          description: Price\n          format: double\n          type: number\n        taxIncludedRegularPrice:\n          description: TaxIncluded regular price\n          format: double\n          type: number\n      type: object\n    PutIpAddressMapEntryRequest:\n      properties:\n        ipAddress:\n          type: string\n        key:\n          type: string\n      required:\n      - key\n      - ipAddress\n      type: object\n    ReferenceUrl:\n      properties:\n        title:\n          type: string\n        url:\n          type: string\n      type: object\n    RegisterGatePeerRequest:\n      properties:\n        innerIpAddress:\n          type: string\n        outerIpAddress:\n          type: string\n      required:\n      - outerIpAddress\n      type: object\n    RegisterLoraDeviceRequest:\n      properties:\n        groupId:\n          type: string\n        registrationSecret:\n          type: string\n        tags:\n          additionalProperties:\n            type: string\n          type: object\n      type: object\n    RegisterOperatorsRequest:\n      properties:\n        email:\n          type: string\n        password:\n          description: 'Requirements for password: At least 8 characters (max 100),\n            a mixture of lowercase (a-z), uppercase (A-Z), number (0-9) letters. You\n            can use symbols.'\n          type: string\n      required:\n      - email\n      - password\n      type: object\n    RegisterPayerInformationModel:\n      properties:\n        companyName:\n          description: Company name\n          type: string\n        department:\n          description: Department\n          type: string\n        fullName:\n          description: Full name\n          type: string\n      type: object\n    RegisterSimRequest:\n      properties:\n        groupId:\n          type: string\n        registrationSecret:\n          description: PUK or PASSCODE on SIM card\n          type: string\n        tags:\n          items:\n            $ref: '#/components/schemas/TagUpdateRequest'\n          type: array\n      required:\n      - registrationSecret\n      type: object\n    RegisterSubscribersRequest:\n      properties:\n        groupId:\n          type: string\n        registrationSecret:\n          description: PUK or PASSCODE on SIM card\n          type: string\n        tags:\n          items:\n            $ref: '#/components/schemas/TagUpdateRequest'\n          type: array\n      required:\n      - registrationSecret\n      type: object\n    ResourceInstance:\n      properties:\n        description:\n          type: string\n        id:\n          format: int32\n          type: integer\n        mandatory:\n          default: false\n          type: boolean\n        multiple:\n          default: false\n          type: boolean\n        name:\n          type: string\n        observed:\n          default: false\n          type: boolean\n        operations:\n          enum:\n          - NONE\n          - R\n          - W\n          - RW\n          - E\n          - RE\n          - WE\n          - RWE\n          type: string\n        rangeEnumeration:\n          type: string\n        type:\n          enum:\n          - STRING\n          - INTEGER\n          - FLOAT\n          - BOOLEAN\n          - OPAQUE\n          - TIME\n          - OBJLNK\n          type: string\n        units:\n          type: string\n        value:\n          type: object\n        values:\n          type: object\n      type: object\n    RoleResponse:\n      properties:\n        createDateTime:\n          format: int64\n          type: integer\n        description:\n          type: string\n        permission:\n          description: Permission as JSON\n          type: string\n        roleId:\n          type: string\n        updateDateTime:\n          format: int64\n          type: integer\n      type: object\n    RoutingFilterEntry:\n      properties:\n        action:\n          description: Whether to allow or deny the outbound packets with a destination\n            in the specified range\n          enum:\n          - allow\n          - deny\n          type: string\n        ipRange:\n          description: IPv4 address range in CIDR format, e.g. a.b.c.d/x\n          type: string\n      required:\n      - action\n      - ipRange\n      type: object\n    RuleConfig:\n      properties:\n        properties:\n          $ref: '#/components/schemas/RuleConfigProperty'\n        type:\n          enum:\n          - SubscriberDailyTrafficRule\n          - SubscriberMonthlyTrafficRule\n          - SubscriberCumulativeTrafficRule\n          - SubscriberFirstTrafficRule\n          - SubscriberStatusAttributeRule\n          - SubscriberSpeedClassAttributeRule\n          - SubscriberExpiredRule\n          - SubscriberImeiMismatchedRule\n          - SimDailyTotalTrafficRule\n          - SimMonthlyTotalTrafficRule\n          - SimCumulativeTotalTrafficRule\n          - SimStatusAttributeRule\n          - SimSpeedClassAttributeRule\n          - SimExpiredRule\n          - SimImeiMismatchedRule\n          - SimSubscriptionStatusRule\n          - DailyTotalTrafficRule\n          - MonthlyTotalTrafficRule\n          - MonthlyChargeRule\n          type: string\n      required:\n      - properties\n      - type\n      type: object\n    RuleConfigProperty:\n      properties:\n        inactiveTimeoutDateConst:\n          enum:\n          - IMMEDIATELY\n          - BEGINNING_OF_NEXT_MONTH\n          - BEGINNING_OF_NEXT_DAY\n          - AFTER_ONE_DAY\n          - NEVER\n          type: string\n        inactiveTimeoutOffsetMinutes:\n          type: string\n        limitTotalAmount:\n          type: string\n        limitTotalTrafficMegaByte:\n          type: string\n        runOnceAmongTarget:\n          enum:\n          - true\n          - false\n          type: string\n        targetOtaStatus:\n          description: Only for SimSubscriptionStatusRule\n          enum:\n          - started\n          - finished\n          - failed\n          type: string\n        targetSpeedClass:\n          description: Only for SubscriberSpeedClassAttributeRule, SimSpeedClassAttributeRule\n          enum:\n          - s1.minimum\n          - s1.slow\n          - s1.standard\n          - s1.fast\n          - s1.4xfast\n          type: string\n        targetStatus:\n          description: Only for SubscriberStatusAttributeRule, SimStatusAttributeRule\n          enum:\n          - ready\n          - active\n          - inactive\n          - standby\n          - suspended\n          - terminated\n          type: string\n      required:\n      - inactiveTimeoutDateConst\n      type: object\n    SessionEvent:\n      properties:\n        apn:\n          description: The Access Point Name configured.\n          type: string\n        dns0:\n          description: First IP address of DNS servers.\n          type: string\n        dns1:\n          description: Second IP address of DNS servers.\n          type: string\n        event:\n          description: The type of behavior for the event. Possible values are \"Created\"\n            indicates the device created a new session, \"Modified\" indicates that\n            an existing connection was modified, \"Deleted\" indicates a network connection\n            was closed.\n          type: string\n        gatewayPrivateIpAddress:\n          type: string\n        gatewayPublicIpAddress:\n          type: string\n        imei:\n          description: The IMEI of the device using the SIM.\n          type: string\n        imsi:\n          description: The IMSI of the SIM.\n          type: string\n        operatorId:\n          description: The operator ID of the session event.\n          type: string\n        time:\n          description: The timestamp of the session event.\n          format: int64\n          type: integer\n        ueIpAddress:\n          description: The IP address of the device.\n          type: string\n        vpgId:\n          description: The Virtual Private Gateway IP address configured.\n          type: string\n      type: object\n    SessionStatus:\n      properties:\n        cell:\n          $ref: '#/components/schemas/Cell'\n        dnsServers:\n          description: Array of IP address of the DNS servers.\n          items:\n            type: string\n          type: array\n        gatewayPrivateIpAddress:\n          type: string\n        gatewayPublicIpAddress:\n          type: string\n        imei:\n          description: The IMEI of the device using the SIM.\n          type: string\n        lastUpdatedAt:\n          format: int64\n          type: integer\n        online:\n          description: |\n            Session status.\n            - `true`: online\n            - `false`: offline\n          type: boolean\n        ueIpAddress:\n          description: The IP address of the device.\n          type: string\n        vpgId:\n          description: The Virtual Private Gateway IP address configured.\n          type: string\n      type: object\n    SetDeviceObjectModelScopeRequest:\n      properties:\n        scope:\n          type: string\n      type: object\n    SetGroupRequest:\n      properties:\n        groupId:\n          type: string\n        tags:\n          $ref: '#/components/schemas/TagSet'\n      type: object\n    SetImeiLockRequest:\n      properties:\n        imei:\n          type: string\n      type: object\n    SetNetworkSetRequest:\n      properties:\n        networkSetId:\n          type: string\n      type: object\n    SetSystemNotificationsRequest:\n      properties:\n        emailIdList:\n          items:\n            type: string\n          type: array\n        password:\n          description: Password of the operator. This is necessary when type is primary.\n          type: string\n      required:\n      - emailIdList\n      type: object\n    SetUserPermissionRequest:\n      properties:\n        description:\n          type: string\n        permission:\n          description: JSON string of permissions\n          type: string\n      required:\n      - permission\n      type: object\n    ShippingAddressModel:\n      description: Shipping address\n      properties:\n        addressLine1:\n          type: string\n        addressLine2:\n          type: string\n        building:\n          type: string\n        city:\n          type: string\n        companyName:\n          type: string\n        countryCode:\n          type: string\n        department:\n          type: string\n        email:\n          type: string\n        fullName:\n          type: string\n        phoneNumber:\n          type: string\n        state:\n          type: string\n        zipCode:\n          type: string\n      required:\n      - addressLine1\n      - city\n      - state\n      - zipCode\n      type: object\n    ShippingCostModel:\n      description: Shipping cost\n      properties:\n        shippingArea:\n          description: (Japan coverage only) Shipping area\n          enum:\n          - hokkaido\n          - kita_tohoku\n          - minami_tohoku\n          - kanto\n          - shinetsu\n          - chubu\n          - hokuriku\n          - kansai\n          - chugoku\n          - shikoku\n          - kyushu\n          - okinawa\n          type: string\n        shippingAreaName:\n          description: Shipping Area name\n          type: string\n        shippingCost:\n          description: Shipping Cost\n          format: double\n          type: number\n        size:\n          description: Size\n          format: int32\n          type: integer\n      type: object\n    SigfoxData:\n      properties:\n        data:\n          type: string\n      type: object\n    SigfoxDevice:\n      properties:\n        device_id:\n          type: string\n        groupId:\n          type: string\n        lastModifiedTime:\n          format: date-time\n          type: string\n        lastSeen:\n          $ref: '#/components/schemas/LastSeen'\n        operatorId:\n          type: string\n        status:\n          enum:\n          - active\n          - ready\n          - terminated\n          - instock\n          type: string\n        tags:\n          additionalProperties:\n            type: string\n          type: object\n        terminationEnabled:\n          default: false\n          type: boolean\n      type: object\n    SigfoxRegistrationRequest:\n      properties:\n        registrationSecret:\n          type: string\n        tags:\n          additionalProperties:\n            type: string\n          type: object\n      type: object\n    Sim:\n      properties:\n        activeProfileId:\n          type: string\n        arcSessionStatus:\n          $ref: '#/components/schemas/ArcSessionStatus'\n        capabilities:\n          $ref: '#/components/schemas/Capabilities'\n        createdTime:\n          format: int64\n          type: integer\n        expiryAction:\n          enum:\n          - doNothing\n          - deleteSession\n          - deactivate\n          - suspend\n          - terminate\n          - (null value)\n          type: string\n        expiryTime:\n          format: int64\n          type: integer\n        groupId:\n          type: string\n        imeiLock:\n          $ref: '#/components/schemas/ImeiLock'\n        lastModifiedTime:\n          format: int64\n          type: integer\n        lastPortMappingCreatedTime:\n          format: int64\n          type: integer\n        localInfo:\n          $ref: '#/components/schemas/Map'\n        moduleType:\n          type: string\n        operatorId:\n          type: string\n        otaSerialNumber:\n          type: string\n        pcapEndTime:\n          format: int64\n          type: integer\n        pcapStartTime:\n          format: int64\n          type: integer\n        previousSession:\n          $ref: '#/components/schemas/PreviousSessionStatus'\n        profiles:\n          additionalProperties:\n            $ref: '#/components/schemas/SimProfile'\n          type: object\n        serialNumber:\n          type: string\n        sessionStatus:\n          $ref: '#/components/schemas/SessionStatus'\n        simId:\n          type: string\n        speedClass:\n          type: string\n        status:\n          description: |\n            Status of this IoT SIM\n            - `ready`\n            - `active`\n            - `inactive`\n            - `standby`\n            - `suspended`\n            - `terminated`\n          enum:\n          - ready\n          - active\n          - inactive\n          - standby\n          - suspended\n          - terminated\n        tags:\n          $ref: '#/components/schemas/TagSet'\n        terminationEnabled:\n          type: boolean\n        type:\n          enum:\n          - euicc\n          - uicc\n          - virtual\n          type: string\n      type: object\n    SimProfile:\n      properties:\n        arcClientPeerPrivateKey:\n          type: string\n        arcClientPeerPublicKey:\n          type: string\n        iccid:\n          type: string\n        otaSupported:\n          type: boolean\n        primaryImsi:\n          type: string\n        subscribers:\n          additionalProperties:\n            $ref: '#/components/schemas/SimplifiedSubscriber'\n          type: object\n      type: object\n    SimplifiedSubscriber:\n      properties:\n        bundles:\n          items:\n            type: string\n          type: array\n        capabilities:\n          $ref: '#/components/schemas/Capabilities'\n        imsi:\n          type: string\n        msisdn:\n          type: string\n        status:\n          type: string\n        subscription:\n          type: string\n      type: object\n    SmsForwardingReport:\n      properties:\n        messageId:\n          type: string\n      type: object\n    SmsForwardingRequest:\n      properties:\n        encodingType:\n          default: 2\n          description: Encoding type of the message body. `1` indicates the body is\n            `DCS_7BIT` that only supports single byte characters. `2` is `DCS_UCS2`\n            that supports multi-byte text. When omitted, it is treated as `2` (`DCS_UCS2`).\n          type: integer\n        payload:\n          type: string\n      type: object\n    SoracomBeamStats:\n      properties:\n        count:\n          format: int64\n          type: integer\n      type: object\n    SoracomFunkStats:\n      properties:\n        count:\n          format: int64\n          type: integer\n      type: object\n    SoracomFunnelStats:\n      properties:\n        count:\n          format: int64\n          type: integer\n      type: object\n    SoracomHarvestStats:\n      properties:\n        count:\n          format: int64\n          type: integer\n      type: object\n    Soralet:\n      properties:\n        createdTime:\n          format: int64\n          type: integer\n        description:\n          type: string\n        operatorId:\n          type: string\n        soraletId:\n          type: string\n        updatedTime:\n          format: int64\n          type: integer\n      type: object\n    SoraletDataSource:\n      properties:\n        resourceId:\n          type: string\n        resourceType:\n          type: string\n      required:\n      - resourceType\n      - resourceId\n      type: object\n    SoraletLog:\n      properties:\n        createdTime:\n          format: int64\n          type: integer\n        message:\n          type: string\n        operatorId:\n          type: string\n        soraletId:\n          type: string\n        version:\n          format: int64\n          type: integer\n      type: object\n    SoraletVersion:\n      properties:\n        createdTime:\n          format: int64\n          type: integer\n        hash:\n          type: string\n        operatorId:\n          type: string\n        size:\n          format: int64\n          type: integer\n        soraletId:\n          type: string\n        srn:\n          type: string\n        version:\n          format: int64\n          type: integer\n      type: object\n    Subscriber:\n      properties:\n        apn:\n          description: The Access Point Name configured.\n          type: string\n        bundles:\n          items:\n            type: string\n          type: array\n        createdAt:\n          description: The timestamp that the SIM was created.\n          format: int64\n          type: integer\n        expiredAt:\n          description: The timestamp of a date and time where the SIM was expired.\n          format: int64\n          type: integer\n        expiredTime:\n          description: The timestamp of a date and time where the SIM was expired.\n          format: int64\n          type: integer\n        expiryAction:\n          enum:\n          - doNothing\n          - deleteSession\n          - deactivate\n          - suspend\n          - terminate\n          - (null value)\n          type: string\n        groupId:\n          description: The SIM group ID where the SIM belongs to.\n          type: string\n        iccid:\n          description: The ICCID of the SIM.\n          type: string\n        imeiLock:\n          $ref: '#/components/schemas/ImeiLock'\n        imsi:\n          description: The IMSI of the SIM.\n          type: string\n        ipAddress:\n          type: string\n        lastModifiedAt:\n          description: The timestamp when the SIM information was modified.\n          format: int64\n          type: integer\n        lastPortMappingCreatedTime:\n          description: The timestamp (in Unix milliseconds) of the last instance where\n            the Napter On-Demand Remote Access service was used with the subscriber.\n            If Napter has never been used with the subscriber, null is returned.\n          format: int64\n          type: integer\n        locationRegistrationStatus:\n          $ref: '#/components/schemas/LocationRegistrationStatus'\n          description: Location registration status for each network.\n        moduleType:\n          description: The form factor of the physical SIM. Possible values are \"mini\"\n            for 2FF SIM card, \"micro\" for 3FF SIM card, \"nano\" for 4FF SIM card, \"trio\"\n            for a Universal 3-in-1 (2FF/3FF/4FF) SIM card, or \"embedded\" for MFF2\n            or Embedded SIM (eSIM).\n          type: string\n        msisdn:\n          description: The MSISDN of the SIM.\n          type: string\n        operatorId:\n          description: The Operator ID of the SIM.\n          type: string\n        plan:\n          description: Whether or not the subscription supports SMS functionality.\n            0 = SMS not supported; 1 = SMS supported.\n          type: integer\n        previousSession:\n          $ref: '#/components/schemas/PreviousSessionStatus'\n        registeredTime:\n          description: The timestamp (in Unix milliseconds) that the subscriber was\n            manually registered to your account. When purchasing SIMs directly through\n            the User Console, SIMs will automatically be registered to your account,\n            and null is returned.\n          format: int64\n          type: integer\n        serialNumber:\n          description: The serial number of the SIM.\n          type: string\n        sessionStatus:\n          $ref: '#/components/schemas/SessionStatus'\n        simId:\n          description: The SIM ID of the SIM.\n          type: string\n        speedClass:\n          description: The speed class of the SIM.\n          type: string\n        status:\n          description: The subscription status of the subscriber. Possible values\n            are \"ready\", \"active\", \"inactive\", \"standby\", \"suspended\", or \"terminated\".\n          type: string\n        subscription:\n          description: The name of the subscription for the SIM.\n          type: string\n        tags:\n          $ref: '#/components/schemas/TagSet'\n        terminationEnabled:\n          type: boolean\n        type:\n          description: The speed class of the SIM.\n          type: string\n      type: object\n    SubscriptionContainer:\n      properties:\n        containerId:\n          format: int64\n          type: integer\n        downloaded:\n          type: boolean\n        subscriber:\n          additionalProperties:\n            $ref: '#/components/schemas/Subscriber'\n          type: object\n      type: object\n    SubscriptionContainerStatus:\n      properties:\n        containers:\n          items:\n            $ref: '#/components/schemas/SubscriptionContainer'\n          type: array\n        countryMapping:\n          additionalProperties:\n            properties:\n              mappingRecord:\n                properties:\n                  containerId:\n                    format: int64\n                    type: integer\n                  subscription:\n                    type: string\n                type: object\n              plmnCode:\n                type: string\n            type: object\n          type: object\n      type: object\n    SupportTokenResponse:\n      properties:\n        token:\n          type: string\n      required:\n      - token\n      type: object\n    SystemNotificationsModel:\n      properties:\n        emailIdList:\n          items:\n            type: string\n          type: array\n        type:\n          description: Notification type\n          enum:\n          - primary\n          - recovery\n          - billing\n          - support\n          type: string\n        updateDateTime:\n          format: int64\n          type: integer\n      type: object\n    TagSet:\n      additionalProperties:\n        type: string\n      description: An object which always contains at least one property \"name\" with\n        a string value. If you give a subscriber/SIM a name, the name will be returned\n        as the value of the \"name\" property. If the subscriber/SIM does not have a\n        name, an empty string \"\" is returned. In addition, if you create any custom\n        tags for the subscriber/SIM, each custom tag will appear as additional properties\n        in the object.\n      example:\n        tagName1: tagValue1\n        tagName2: tagValue2...\n      type: object\n    TagUpdateRequest:\n      properties:\n        tagName:\n          type: string\n        tagValue:\n          type: string\n      required:\n      - tagName\n      - tagValue\n      type: object\n    TrafficVolumeRanking:\n      properties:\n        imsi:\n          type: string\n        trafficVolume:\n          format: int64\n          type: integer\n      type: object\n    UpdateDefaultPermissionsRequest:\n      properties:\n        permissions:\n          description: JSON string of permissions\n          type: string\n      required:\n      - permissions\n      type: object\n    UpdateEventHandlerRequest:\n      $ref: '#/components/schemas/CreateEventHandlerRequest'\n    UpdatePasswordRequest:\n      properties:\n        currentPassword:\n          type: string\n        newPassword:\n          type: string\n      required:\n      - currentPassword\n      - newPassword\n      type: object\n    UpdatePermissionRequest:\n      properties:\n        operatorId:\n          type: string\n      type: object\n    UpdateSpeedClassRequest:\n      properties:\n        speedClass:\n          description: |\n            Speed class. You can specify one of followings based on this IoT SIM's subscription.\n            - plan01s、plan01s - Low Data Volume、planX3、plan-D:\n                - `s1.minimum`\n                - `s1.slow`\n                - `s1.standard`\n                - `s1.fast`\n                - `s1.4xfast`\n            - plan-KM1:\n                - `t1.standard`\n            - plan-DU:\n                - `u1.standard`\n                - `u1.slow`\n            - Virtual SIM/Subscriber:\n                - `arc.standard`\n          enum:\n          - s1.minimum\n          - s1.slow\n          - s1.standard\n          - s1.fast\n          - s1.4xfast\n          - t1.standard\n          - u1.standard\n          - u1.slow\n          - arc.standard\n          type: string\n      required:\n      - speedClass\n      type: object\n    UpdateUserRequest:\n      properties:\n        description:\n          type: string\n      type: object\n    UserDetailResponse:\n      properties:\n        authKeyList:\n          items:\n            $ref: '#/components/schemas/AuthKeyResponse'\n          type: array\n        createDateTime:\n          format: int64\n          type: integer\n        description:\n          type: string\n        hasPassword:\n          type: boolean\n        permission:\n          type: string\n        roleList:\n          items:\n            $ref: '#/components/schemas/ListRolesResponse'\n          type: array\n        updateDateTime:\n          format: int64\n          type: integer\n        userName:\n          type: string\n      type: object\n    VerifyAddEmailTokenRequest:\n      properties:\n        token:\n          description: Token sent by email\n          type: string\n      required:\n      - token\n      type: object\n    VerifyOperatorsRequest:\n      properties:\n        token:\n          type: string\n      required:\n      - token\n      type: object\n    VerifyPasswordResetTokenRequest:\n      properties:\n        password:\n          type: string\n        token:\n          type: string\n      required:\n      - password\n      - token\n      type: object\n    VerifySubscriberTransferTokenRequest:\n      properties:\n        token:\n          description: Transfer token.\n          type: string\n      required:\n      - token\n      type: object\n    VerifySubscriberTransferTokenResponse:\n      properties:\n        transferredImsi:\n          description: List of IMSIs which were transferred.\n          items:\n            type: string\n          type: array\n      required:\n      - transferredImsi\n      type: object\n    VirtualPrivateGateway:\n      properties:\n        createdTime:\n          format: int64\n          type: integer\n        id:\n          type: string\n        lastModifiedTime:\n          format: int64\n          type: integer\n        operatorId:\n          type: string\n        placement:\n          $ref: '#/components/schemas/Placement'\n        status:\n          type: string\n        tags:\n          $ref: '#/components/schemas/TagSet'\n        type:\n          enum:\n          - 12\n          - 13\n          - 14\n          - 15\n          type: integer\n        useInternetGateway:\n          type: boolean\n        virtualInterfaces:\n          $ref: '#/components/schemas/Map'\n        vpcPeeringConnections:\n          $ref: '#/components/schemas/Map'\n      type: object\n    VolumeDiscountModel:\n      description: Long term discount\n      properties:\n        contractTermMonth:\n          default: 12\n          description: Contract months\n          format: int32\n          type: integer\n        endDate:\n          description: End date\n          example: yyyyMMdd\n          type: string\n        initialCost:\n          description: Initial cost\n          format: double\n          type: number\n        quantity:\n          description: Quantity\n          format: int32\n          type: integer\n        startDate:\n          description: Start date\n          example: yyyyMMdd\n          type: string\n        unitPrice:\n          description: Unit price\n          format: double\n          type: number\n        volumeDiscountPaymentType:\n          description: Payment type\n          enum:\n          - MONTHLY\n          - PREPAYMENT\n          type: string\n        volumeDiscountType:\n          description: Long term discount type\n          enum:\n          - SORACOM_AIR_BASIC_CHARGE_V2\n          - SORACOM_AIR_BASIC_CHARGE\n          - SORACOM_AIR_MONTHLY_FIXED_BASIC_CHARGE\n          type: string\n      type: object\n    VpcPeeringConnection:\n      properties:\n        destinationCidrBlock:\n          type: string\n        id:\n          type: string\n        peerOwnerId:\n          type: string\n        peerVpcId:\n          type: string\n      type: object\n  securitySchemes:\n    api_key:\n      in: header\n      name: X-Soracom-API-Key\n      type: apiKey\n    api_token:\n      in: header\n      name: X-Soracom-Token\n      type: apiKey\ntags:\n- name: AuditLog\n",
			"canonicalURL": "/github.com/soracom/soracom-cli@720838616fd3cb1291bb904a8be566a7ce16611b/-/blob/soracom/generated/cmd/assets/soracom-api.en.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/soracom/soracom-cli/blob/720838616fd3cb1291bb904a8be566a7ce16611b/soracom/generated/cmd/assets/soracom-api.en.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "parse: parse spec: parse components: schemas: \"RuleConfigProperty\": parse schema: property \"runOnceAmongTarget\": at 1:67429: parse enum values: parse value \"true\": expected type \"string\", got \"bool\""
}