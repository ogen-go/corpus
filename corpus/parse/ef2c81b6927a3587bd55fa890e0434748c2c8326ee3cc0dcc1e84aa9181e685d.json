{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/stackql/stackql-provider-registry"
		},
		"file": {
			"name": "mybusinessplaceactions-v1.yaml",
			"size": 0,
			"path": "providers/src/googleapis.com/v0.1.2/services/mybusinessplaceactions-v1.yaml",
			"byteSize": 24240,
			"content": "components:\n  parameters:\n    _.xgafv:\n      description: V1 error format.\n      in: query\n      name: $.xgafv\n      schema:\n        enum:\n        - '1'\n        - '2'\n        type: string\n    access_token:\n      description: OAuth access token.\n      in: query\n      name: access_token\n      schema:\n        type: string\n    alt:\n      description: Data format for response.\n      in: query\n      name: alt\n      schema:\n        enum:\n        - json\n        - media\n        - proto\n        type: string\n    callback:\n      description: JSONP\n      in: query\n      name: callback\n      schema:\n        type: string\n    fields:\n      description: Selector specifying which fields to include in a partial response.\n      in: query\n      name: fields\n      schema:\n        type: string\n    key:\n      description: API key. Your API key identifies your project and provides you\n        with API access, quota, and reports. Required unless you provide an OAuth\n        2.0 token.\n      in: query\n      name: key\n      schema:\n        type: string\n    oauth_token:\n      description: OAuth 2.0 token for the current user.\n      in: query\n      name: oauth_token\n      schema:\n        type: string\n    prettyPrint:\n      description: Returns response with indentations and line breaks.\n      in: query\n      name: prettyPrint\n      schema:\n        type: boolean\n    quotaUser:\n      description: Available to use for quota purposes for server-side applications.\n        Can be any arbitrary string assigned to a user, but should not exceed 40 characters.\n      in: query\n      name: quotaUser\n      schema:\n        type: string\n    uploadType:\n      description: Legacy upload protocol for media (e.g. \"media\", \"multipart\").\n      in: query\n      name: uploadType\n      schema:\n        type: string\n    upload_protocol:\n      description: Upload protocol for media (e.g. \"raw\", \"multipart\").\n      in: query\n      name: upload_protocol\n      schema:\n        type: string\n  schemas:\n    Empty:\n      description: 'A generic empty message that you can re-use to avoid defining\n        duplicated empty messages in your APIs. A typical example is to use it as\n        the request or the response type of an API method. For instance: service Foo\n        { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); } The JSON\n        representation for `Empty` is empty JSON object `{}`.'\n      properties: {}\n      type: object\n    ListPlaceActionLinksResponse:\n      description: Response message for PlaceActions.ListPlaceActionLinks.\n      properties:\n        nextPageToken:\n          description: If there are more place action links than the requested page\n            size, then this field is populated with a token to fetch the next page\n            of results.\n          type: string\n        placeActionLinks:\n          description: The returned list of place action links.\n          items:\n            $ref: '#/components/schemas/PlaceActionLink'\n          type: array\n      type: object\n    ListPlaceActionTypeMetadataResponse:\n      description: Response message for PlaceActions.ListPlaceActionTypeMetadata.\n      properties:\n        nextPageToken:\n          description: If the number of action types exceeded the requested page size,\n            this field will be populated with a token to fetch the next page on a\n            subsequent call to `placeActionTypeMetadata.list`. If there are no more\n            results, this field will not be present in the response.\n          type: string\n        placeActionTypeMetadata:\n          description: A collection of metadata for the available place action types.\n          items:\n            $ref: '#/components/schemas/PlaceActionTypeMetadata'\n          type: array\n      type: object\n    PlaceActionLink:\n      description: Represents a place action link and its attributes.\n      properties:\n        createTime:\n          description: Output only. The time when the place action link was created.\n          format: google-datetime\n          readOnly: true\n          type: string\n        isEditable:\n          description: Output only. Indicates whether this link can be edited by the\n            client.\n          readOnly: true\n          type: boolean\n        isPreferred:\n          description: Optional. Whether this link is preferred by the merchant. Only\n            one link can be marked as preferred per place action type at a location.\n            If a future request marks a different link as preferred for the same place\n            action type, then the current preferred link (if any exists) will lose\n            its preference.\n          type: boolean\n        name:\n          description: Optional. The resource name, in the format `locations/{location_id}/placeActionLinks/{place_action_link_id}`.\n            The name field will only be considered in UpdatePlaceActionLink and DeletePlaceActionLink\n            requests for updating and deleting links respectively. However, it will\n            be ignored in CreatePlaceActionLink request, where `place_action_link_id`\n            will be assigned by the server on successful creation of a new link and\n            returned as part of the response.\n          type: string\n        placeActionType:\n          description: Required. The type of place action that can be performed using\n            this link.\n          enum:\n          - PLACE_ACTION_TYPE_UNSPECIFIED\n          - APPOINTMENT\n          - ONLINE_APPOINTMENT\n          - DINING_RESERVATION\n          - FOOD_ORDERING\n          - FOOD_DELIVERY\n          - FOOD_TAKEOUT\n          type: string\n        providerType:\n          description: Output only. Specifies the provider type.\n          enum:\n          - PROVIDER_TYPE_UNSPECIFIED\n          - MERCHANT\n          - AGGREGATOR_3P\n          readOnly: true\n          type: string\n        updateTime:\n          description: Output only. The time when the place action link was last modified.\n          format: google-datetime\n          readOnly: true\n          type: string\n        uri:\n          description: Required. The link uri. The same uri can be reused for different\n            action types across different locations. However, only one place action\n            link is allowed for each unique combination of (uri, place action type,\n            location).\n          type: string\n      type: object\n    PlaceActionTypeMetadata:\n      description: Metadata for supported place action types.\n      properties:\n        displayName:\n          description: The localized display name for the attribute, if available;\n            otherwise, the English display name.\n          type: string\n        placeActionType:\n          description: The place action type.\n          enum:\n          - PLACE_ACTION_TYPE_UNSPECIFIED\n          - APPOINTMENT\n          - ONLINE_APPOINTMENT\n          - DINING_RESERVATION\n          - FOOD_ORDERING\n          - FOOD_DELIVERY\n          - FOOD_TAKEOUT\n          type: string\n      type: object\n  x-stackQL-resources:\n    locations.placeActionLinks:\n      id: google.mybusinessplaceactions.locations.placeActionLinks\n      methods:\n        create:\n          operation:\n            $ref: '#/paths/~1v1~1locations~1{locationsId}~1placeActionLinks/post'\n          request:\n            mediaType: application/json\n          response:\n            mediaType: application/json\n            openAPIDocKey: '200'\n        delete:\n          operation:\n            $ref: '#/paths/~1v1~1locations~1{locationsId}~1placeActionLinks~1{placeActionLinksId}/delete'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '200'\n        get:\n          operation:\n            $ref: '#/paths/~1v1~1locations~1{locationsId}~1placeActionLinks~1{placeActionLinksId}/get'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '200'\n        list:\n          operation:\n            $ref: '#/paths/~1v1~1locations~1{locationsId}~1placeActionLinks/get'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '200'\n        patch:\n          operation:\n            $ref: '#/paths/~1v1~1locations~1{locationsId}~1placeActionLinks~1{placeActionLinksId}/patch'\n          request:\n            mediaType: application/json\n          response:\n            mediaType: application/json\n            openAPIDocKey: '200'\n      name: locations.placeActionLinks\n      title: locations.placeActionLinks\n    placeActionTypeMetadata:\n      id: google.mybusinessplaceactions.placeActionTypeMetadata\n      methods:\n        list:\n          operation:\n            $ref: '#/paths/~1v1~1placeActionTypeMetadata/get'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '200'\n      name: placeActionTypeMetadata\n      title: placeActionTypeMetadata\nexternalDocs:\n  url: https://developers.google.com/my-business/\ninfo:\n  contact:\n    name: Google\n    url: https://google.com\n    x-twitter: youtube\n  description: The My Business Place Actions API provides an interface for managing\n    place action links of a location on Google.\n  license:\n    name: Creative Commons Attribution 3.0\n    url: http://creativecommons.org/licenses/by/3.0/\n  termsOfService: https://developers.google.com/terms/\n  title: My Business Place Actions API\n  version: v1\n  x-apisguru-categories:\n  - analytics\n  - media\n  x-logo:\n    url: https://api.apis.guru/v2/cache/logo/https_upload.wikimedia.org_wikipedia_commons_e_e1_YouTube_play_buttom_icon_%282013-2017%29.svg\n  x-origin:\n  - format: google\n    url: https://mybusinessplaceactions.googleapis.com/$discovery/rest?version=v1\n    version: v1\n  x-providerName: googleapis.com\n  x-serviceName: mybusinessplaceactions\nopenapi: 3.0.0\npaths:\n  /v1/locations/{locationsId}/placeActionLinks:\n    get:\n      description: Lists the place action links for the specified location.\n      operationId: mybusinessplaceactions.locations.placeActionLinks.list\n      parameters:\n      - description: 'Optional. A filter constraining the place action links to return.\n          The response includes entries that match the filter. We support only the\n          following filter: 1. place_action_type=XYZ where XYZ is a valid PlaceActionType.'\n        in: query\n        name: filter\n        schema:\n          type: string\n      - description: Optional. How many place action links to return per page. Default\n          of 10. The minimum is 1.\n        in: query\n        name: pageSize\n        schema:\n          type: integer\n      - description: Optional. If specified, returns the next page of place action\n          links.\n        in: query\n        name: pageToken\n        schema:\n          type: string\n      - in: path\n        name: locationsId\n        required: true\n        schema:\n          type: string\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ListPlaceActionLinksResponse'\n          description: Successful response\n      tags:\n      - locations\n    parameters:\n    - $ref: '#/components/parameters/_.xgafv'\n    - $ref: '#/components/parameters/access_token'\n    - $ref: '#/components/parameters/alt'\n    - $ref: '#/components/parameters/callback'\n    - $ref: '#/components/parameters/fields'\n    - $ref: '#/components/parameters/key'\n    - $ref: '#/components/parameters/oauth_token'\n    - $ref: '#/components/parameters/prettyPrint'\n    - $ref: '#/components/parameters/quotaUser'\n    - $ref: '#/components/parameters/upload_protocol'\n    - $ref: '#/components/parameters/uploadType'\n    post:\n      description: Creates a place action link associated with the specified location,\n        and returns it. The request is considered duplicate if the `parent`, `place_action_link.uri`\n        and `place_action_link.place_action_type` are the same as a previous request.\n      operationId: mybusinessplaceactions.locations.placeActionLinks.create\n      parameters:\n      - in: path\n        name: locationsId\n        required: true\n        schema:\n          type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/PlaceActionLink'\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PlaceActionLink'\n          description: Successful response\n      tags:\n      - locations\n  /v1/locations/{locationsId}/placeActionLinks/{placeActionLinksId}:\n    delete:\n      description: Deletes a place action link from the specified location.\n      operationId: mybusinessplaceactions.locations.placeActionLinks.delete\n      parameters:\n      - in: path\n        name: locationsId\n        required: true\n        schema:\n          type: string\n      - in: path\n        name: placeActionLinksId\n        required: true\n        schema:\n          type: string\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Empty'\n          description: Successful response\n      tags:\n      - locations\n    get:\n      description: Gets the specified place action link.\n      operationId: mybusinessplaceactions.locations.placeActionLinks.get\n      parameters:\n      - in: path\n        name: locationsId\n        required: true\n        schema:\n          type: string\n      - in: path\n        name: placeActionLinksId\n        required: true\n        schema:\n          type: string\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PlaceActionLink'\n          description: Successful response\n      tags:\n      - locations\n    parameters:\n    - $ref: '#/components/parameters/_.xgafv'\n    - $ref: '#/components/parameters/access_token'\n    - $ref: '#/components/parameters/alt'\n    - $ref: '#/components/parameters/callback'\n    - $ref: '#/components/parameters/fields'\n    - $ref: '#/components/parameters/key'\n    - $ref: '#/components/parameters/oauth_token'\n    - $ref: '#/components/parameters/prettyPrint'\n    - $ref: '#/components/parameters/quotaUser'\n    - $ref: '#/components/parameters/upload_protocol'\n    - $ref: '#/components/parameters/uploadType'\n    patch:\n      description: Updates the specified place action link and returns it.\n      operationId: mybusinessplaceactions.locations.placeActionLinks.patch\n      parameters:\n      - description: Required. The specific fields to update. The only editable fields\n          are `uri`, `place_action_type` and `is_preferred`. If the updated link already\n          exists at the same location with the same `place_action_type` and `uri`,\n          fails with an `ALREADY_EXISTS` error.\n        in: query\n        name: updateMask\n        schema:\n          type: string\n      - in: path\n        name: locationsId\n        required: true\n        schema:\n          type: string\n      - in: path\n        name: placeActionLinksId\n        required: true\n        schema:\n          type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/PlaceActionLink'\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PlaceActionLink'\n          description: Successful response\n      tags:\n      - locations\n  /v1/placeActionTypeMetadata:\n    get:\n      description: Returns the list of available place action types for a location\n        or country.\n      operationId: mybusinessplaceactions.placeActionTypeMetadata.list\n      parameters:\n      - description: 'Optional. A filter constraining the place action types to return\n          metadata for. The response includes entries that match the filter. We support\n          only the following filters: 1. location=XYZ where XYZ is a string indicating\n          the resource name of a location, in the format `locations/{location_id}`.\n          2. region_code=XYZ where XYZ is a Unicode CLDR region code to find available\n          action types. If no filter is provided, all place action types are returned.'\n        in: query\n        name: filter\n        schema:\n          type: string\n      - description: Optional. The IETF BCP-47 code of language to get display names\n          in. If this language is not available, they will be provided in English.\n        in: query\n        name: languageCode\n        schema:\n          type: string\n      - description: Optional. How many action types to include per page. Default\n          is 10, minimum is 1.\n        in: query\n        name: pageSize\n        schema:\n          type: integer\n      - description: Optional. If specified, the next page of place action type metadata\n          is retrieved. The `pageToken` is returned when a call to `placeActionTypeMetadata.list`\n          returns more results than can fit into the requested page size.\n        in: query\n        name: pageToken\n        schema:\n          type: string\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ListPlaceActionTypeMetadataResponse'\n          description: Successful response\n      tags:\n      - placeActionTypeMetadata\n    parameters:\n    - $ref: '#/components/parameters/_.xgafv'\n    - $ref: '#/components/parameters/access_token'\n    - $ref: '#/components/parameters/alt'\n    - $ref: '#/components/parameters/callback'\n    - $ref: '#/components/parameters/fields'\n    - $ref: '#/components/parameters/key'\n    - $ref: '#/components/parameters/oauth_token'\n    - $ref: '#/components/parameters/prettyPrint'\n    - $ref: '#/components/parameters/quotaUser'\n    - $ref: '#/components/parameters/upload_protocol'\n    - $ref: '#/components/parameters/uploadType'\n  /v1/{name}:\n    delete:\n      description: Deletes a place action link from the specified location.\n      operationId: mybusinessplaceactions.locations.placeActionLinks.delete\n      parameters:\n      - description: Required. The resource name of the place action link to remove\n          from the location.\n        in: path\n        name: name\n        required: true\n        schema:\n          type: string\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Empty'\n          description: Successful response\n      tags:\n      - locations\n    get:\n      description: Gets the specified place action link.\n      operationId: mybusinessplaceactions.locations.placeActionLinks.get\n      parameters:\n      - description: Required. The name of the place action link to fetch.\n        in: path\n        name: name\n        required: true\n        schema:\n          type: string\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PlaceActionLink'\n          description: Successful response\n      tags:\n      - locations\n    parameters:\n    - $ref: '#/components/parameters/_.xgafv'\n    - $ref: '#/components/parameters/access_token'\n    - $ref: '#/components/parameters/alt'\n    - $ref: '#/components/parameters/callback'\n    - $ref: '#/components/parameters/fields'\n    - $ref: '#/components/parameters/key'\n    - $ref: '#/components/parameters/oauth_token'\n    - $ref: '#/components/parameters/prettyPrint'\n    - $ref: '#/components/parameters/quotaUser'\n    - $ref: '#/components/parameters/upload_protocol'\n    - $ref: '#/components/parameters/uploadType'\n    patch:\n      description: Updates the specified place action link and returns it.\n      operationId: mybusinessplaceactions.locations.placeActionLinks.patch\n      parameters:\n      - description: Optional. The resource name, in the format `locations/{location_id}/placeActionLinks/{place_action_link_id}`.\n          The name field will only be considered in UpdatePlaceActionLink and DeletePlaceActionLink\n          requests for updating and deleting links respectively. However, it will\n          be ignored in CreatePlaceActionLink request, where `place_action_link_id`\n          will be assigned by the server on successful creation of a new link and\n          returned as part of the response.\n        in: path\n        name: name\n        required: true\n        schema:\n          type: string\n      - description: Required. The specific fields to update. The only editable fields\n          are `uri`, `place_action_type` and `is_preferred`. If the updated link already\n          exists at the same location with the same `place_action_type` and `uri`,\n          fails with an `ALREADY_EXISTS` error.\n        in: query\n        name: updateMask\n        schema:\n          type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/PlaceActionLink'\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PlaceActionLink'\n          description: Successful response\n      tags:\n      - locations\n  /v1/{parent}/placeActionLinks:\n    get:\n      description: Lists the place action links for the specified location.\n      operationId: mybusinessplaceactions.locations.placeActionLinks.list\n      parameters:\n      - description: Required. The name of the location whose place action links will\n          be listed. `locations/{location_id}`.\n        in: path\n        name: parent\n        required: true\n        schema:\n          type: string\n      - description: 'Optional. A filter constraining the place action links to return.\n          The response includes entries that match the filter. We support only the\n          following filter: 1. place_action_type=XYZ where XYZ is a valid PlaceActionType.'\n        in: query\n        name: filter\n        schema:\n          type: string\n      - description: Optional. How many place action links to return per page. Default\n          of 10. The minimum is 1.\n        in: query\n        name: pageSize\n        schema:\n          type: integer\n      - description: Optional. If specified, returns the next page of place action\n          links.\n        in: query\n        name: pageToken\n        schema:\n          type: string\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ListPlaceActionLinksResponse'\n          description: Successful response\n      tags:\n      - locations\n    parameters:\n    - $ref: '#/components/parameters/_.xgafv'\n    - $ref: '#/components/parameters/access_token'\n    - $ref: '#/components/parameters/alt'\n    - $ref: '#/components/parameters/callback'\n    - $ref: '#/components/parameters/fields'\n    - $ref: '#/components/parameters/key'\n    - $ref: '#/components/parameters/oauth_token'\n    - $ref: '#/components/parameters/prettyPrint'\n    - $ref: '#/components/parameters/quotaUser'\n    - $ref: '#/components/parameters/upload_protocol'\n    - $ref: '#/components/parameters/uploadType'\n    post:\n      description: Creates a place action link associated with the specified location,\n        and returns it. The request is considered duplicate if the `parent`, `place_action_link.uri`\n        and `place_action_link.place_action_type` are the same as a previous request.\n      operationId: mybusinessplaceactions.locations.placeActionLinks.create\n      parameters:\n      - description: Required. The resource name of the location where to create this\n          place action link. `locations/{location_id}`.\n        in: path\n        name: parent\n        required: true\n        schema:\n          type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/PlaceActionLink'\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PlaceActionLink'\n          description: Successful response\n      tags:\n      - locations\nservers:\n- url: https://mybusinessplaceactions.googleapis.com/\ntags:\n- name: locations\n- name: placeActionTypeMetadata\n"
		}
	},
	"Error": "parse: parse spec: parse operations: paths: /v1/{name}: get: duplicate operationId: \"mybusinessplaceactions.locations.placeActionLinks.get\""
}