{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/ground-x/caver-js-ext-kas"
		},
		"file": {
			"name": "2022-04-28-openapi-versioned.yaml",
			"size": 0,
			"path": "yamls/kip17/2022-04-28-openapi-versioned.yaml",
			"byteSize": 58541,
			"content": "openapi: 3.0.0\ninfo:\n  title: KIP-17 API\n  description: |-\n    ### [DEPRECATED]\n    \n    It is recommended to use KIP-17 API v2, a compatible verion with newly added features. Click the drop-down menu on the upper right and select v2 or latest. Read [New features and compatibility with v1](./v2#section/Introduction/v2-v1) for more details.\n    \n    Read [KIP-17 v2](./latest) to use KIP-17.\n\n    # Introduction\n\n    The KIP-17 API helps BApp (Blockchain Application) developers to manage contracts and tokens created in accordance with the [KIP-17](https://docs.klaytnapi.com/v/en/api#kip-17-api) standard, which is Klaytn's technical speficication for Non-Fungible Tokens. \n    The functionality of the multiple endpoints enables you to do the following actions:\n    - deploy smart contracts\n    - manage the entire life cycle of an NFT from minting, to sending and burning\n    - get contract or token data\n    - authorize a third party to execute token transfers\n    - view token ownership history\n\n    When you have created a contract on the Klaytn Network using SDKs like caver, you can use the contract address and your [Wallet API](https://refs.klaytnapi.com/en/wallet/latest) account to manage contracts and tokens.\n\n    For more details on KAS, please refer to [KAS Docs](https://docs.klaytnapi.com/). If you have any questions or comments, please leave them in the [KAS Developers Forum](https://support.klaytnapi.com/hc/en/community/topics).  \n\n    **alias**\n\n    When a method of the KIP-17 API requires a contract address, you can use the contract **alias**. You can give the contract an alias when deploying, and use it in place of the complicated address.\n\n    # Fee Payer Options\n    KAS KIP-17 supports four ways to pay the transaction fees.\u003cbr /\u003e\n\n    **1. Only using KAS Global FeePayer Account** \u003cbr /\u003e\n    Sends all transactions using KAS Global FeePayer Account.\n    ```\n    {\n        \"options\": {\n          \"enableGlobalFeePayer\": true\n        }\n    }\n    ```\n    \u003cbr /\u003e\n\n    **2. Using User FeePayer Account** \u003cbr /\u003e\n    Sends all transactions using User FeePayer Account.\n    ```\n    {\n      \"options\": {\n        \"enableGlobalFeePayer\": false,\n        \"userFeePayer\": {\n          \"krn\": \"krn:1001:wallet:20bab367-141b-439a-8b4c-ae8788b86316:feepayer-pool:default\",\n          \"address\": \"0xd6905b98E4Ba43a24E842d2b66c1410173791cab\"\n        }\n      }\n    }\n    ```\n    \u003cbr /\u003e\n\n    **3. Using both KAS Global FeePayer Account + User FeePayer Account** \u003cbr /\u003e\n    Sends transactions using User FeePayer Account by default, and switches to the KAS Global FeePayer Account when balances are insufficient.\n    ```\n    {\n      \"options\": {\n        \"enableGlobalFeePayer\": true,\n        \"userFeePayer\": {\n          \"krn\": \"krn:1001:wallet:20bab367-141b-439a-8b4c-ae8788b86316:feepayer-pool:default\",\n          \"address\": \"0xd6905b98E4Ba43a24E842d2b66c1410173791cab\"\n        }\n      }\n    }\n    ```\n    \u003cbr /\u003e\n\n    **4. Not using FeePayer Account** \u003cbr /\u003e\n    Sends transactions the default way, paying the transaction fee from the user's account.\n    ```\n    {\n      \"options\": {\n        \"enableGlobalFeePayer\": false\n      }\n    }\n    ```\n    \u003cbr /\u003e\n\n    # Error Code\n    This section contains the errors that might occur when using the KIP-17 API. KAS uses [HTTP status codes](https://developer.mozilla.org/en/docs/Web/HTTP/Status). Error code tables can be found [here](#tag/err-400).\ntags:\n  - name: err-400\n    x-displayName: \"400: Bad Request\"\n    description: |\n      The request is not valid.\n\n      | Code | Message | Description |\n      | --- | --- | --- |\n      | 1100050 | invalid request | The data format is wrong. \n      | 1100101 | data not found | Data doesn't exist. \n      | 1100251 | value out of range | Value is out of range.\n      | 1104401 | Invalid krn; options.userFeePayer.krn | The KRN or the `sender` address you entered is wrong. Please check your sender Account Pool.\n      | 1100251 | contract not ready | Checking contract deployment status.\n      | 1104401 | invalid alias | The alias is invalid. Please check the requirements.\n      | 1010007 | invalid path or method | The path or method you entered is wrong. \n  - name: err-401\n    x-displayName: \"401: Unauthorized\"\n    description: |\n      The credential you entered is invalid.\n\n      | Code | Message | Description |\n      |  --- | --- | --- |\n      | 1010009 | invalid credential | The credential you entered is invalid. \n  - name: err-404\n    x-displayName: \"404: Not Found\"\n    description: |\n      The resource you requested doesn't exist.\n\n      | Code | Messages | Description |\n      | --- | --- | --- |\n      | 1104404 | token not found | The token doesn't exist. \n  - name: err-409\n    x-displayName: \"409: Conflict\"\n    description: |\n      There was a conflict with the current state of the server.\n        \n      | Code | Messages | Description |\n      | --- | --- | --- |\n      | 1104400 | duplicate alias- {alias} | This alias is already taken.\n  - name: kip17-contract\n    x-displayName: \"Contract\"\n  - name: kip17-token\n    x-displayName: \"Token\"\nx-tagGroups:\n  - name: API\n    tags:\n      - kip17-contract    \n      - kip17-token\n  - name: Error Codes\n    tags:\n      - err-400\n      - err-401\n      - err-404\n      - err-409\npaths:\n  /v1/contract:\n    post:\n      description: |-\n        Deploys a new KIP-17 contract with the given parameters. You can find the tutorial for KIP-17 contract deployment [here](https://docs.klaytnapi.com/tutorial/kip17-api#kip-17).  \n\n\n        Even if you see `Submitted` in the response, it doesn't mean that the transaction is `Committed`. To confirm transaction status, use [Get Contract List](#operation/ListContractsInDeployerPool) or [Get Transaction Receipt](https://refs.klaytnapi.com/en/wallet/latest#operation/TransactionReceipt) from the Wallet API.\n      parameters:\n        - description: Klaytn Network Chain ID (1001 or 8217)\n          in: header\n          name: x-chain-id\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: Your request was successful.\n          content:\n            application/json:\n              examples:\n                Success:\n                  summary: Success\n                  description: 'Your request was successful.'\n                  value:\n                    status: Submitted\n                    transactionHash: '0x0a4f4f97d8a5904721514d60abd3f9ad7938862e415a6c043553a94ab68a5edb'\n                    options:\n                      enableGlobalFeePayer: true\n                      userFeePayer:\n                        krn: 'krn:1001:wallet:88c1223c-66af-4122-9818-069b2e3c6b30:feepayer-pool:default'\n                        address: '0xE8964cA0C83cBbF520df5597dc1f5EFc27E5E729'\n              schema:\n                $ref: ../../models/Kip17DeployResponse.yaml\n        '400':\n          description: Your request is not valid.\n          content:\n            application/json:\n              examples:\n                Invalid alias:\n                  summary: Invalid alias\n                  description: Invalid alias.\n                  value:\n                    code: 1104400\n                    message: duplicate alias- test\n                    requestId: 1b370cb5-590d-90c2-bf4f-afb89c0b6a5a\n                Invalid path or method:\n                  summary: Invalid path or method\n                  description: The path or method you entered is wrong.\n                  value:\n                    code: 1010007\n                    message: invalid path or method\n              schema:\n                $ref: ../../models/ErrorResponse.yaml\n        '401':\n          description: The credential you entered is invalid.\n          content:\n            application/json:\n              examples:\n                Invalid alias:\n                  summary: Invalid alias\n                  description: The credential you entered is invalid.\n                  value:\n                    code: 1010009\n                    message: The credential you provided is not valid.\n                    requestId: 1b370cb5-590d-90c2-bf4f-afb89c0b6a5a\n              schema:\n                $ref: ../../models/ErrorResponse.yaml\n        '409':\n          description: There was a conflict with the current state of the server.\n          content:\n            application/json:\n              examples:\n                Duplicate alias:\n                  summary: Duplicate alias\n                  description: This alias is already taken.\n                  value:\n                    code: 1104401\n                    message: duplicate alias- test\n                    requestId: 1b370cb5-590d-90c2-bf4f-afb89c0b6a5a\n              schema:\n                $ref: ../../models/ErrorResponse.yaml\n      summary: Deploy Contract\n      operationId: DeployContract\n      tags:\n        - kip17-contract\n      requestBody:\n        $ref: '#/components/requestBodies/DeployKip17ContractRequest'\n        content:\n          application/json:\n            schema:\n              $ref: ../../models/DeployKip17ContractRequest.yaml\n    get:\n      description: Returns a list of KIP-17 contracts created from a KAS account.\u003cp\u003e\u003c/p\u003e\n      parameters:\n        - description: Klaytn Network Chain ID (1001 or 8217)\n          in: header\n          name: x-chain-id\n          required: true\n          schema:\n            type: string\n        - description: 'The number of items to return (min=1, max=1000, default=100).'\n          in: query\n          name: size\n          required: false\n          schema:\n            type: string\n          example: ''\n        - description: 'The pointer for the next request, after which the result will be returned.'\n          in: query\n          name: cursor\n          required: false\n          schema:\n            type: string\n          example: eyJjm...ZSJ9\n      responses:\n        '200':\n          description: Your request was successful.\n          content:\n            application/json:\n              examples:\n                Success:\n                  summary: Success\n                  description: 'Your request was successful.'\n                  value:\n                    cursor: eyJjm...ZSJ9\n                    items:\n                      - address: '0x34132f491fea7aa622cca594e4bd2ccd6fc02bf7'\n                        alias: test\n                        name: TEST NFT\n                        symbol: TEST\n                        options:\n                          enableGlobalFeePayer: true\n                          userFeePayer:\n                            krn: 'krn:1001:wallet:88c1223c-66af-4122-9818-069b2e3c6b30:feepayer-pool:default'\n                            address: '0xE8964cA0C83cBbF520df5597dc1f5EFc27E5E729'\n              schema:\n                $ref: ../../models/Kip17ContractListResponse.yaml\n        '400':\n          description: Your request is not valid.\n          content:\n            application/json:\n              examples:\n                Invalid request:\n                  summary: Invalid request\n                  description: The format of the data you entered is wrong.\n                  value:\n                    code: 1100050\n                    message: Invalid request\n                Invalid path or method:\n                  summary: Invalid path or method\n                  description: The path or method you entered is wrong.\n                  value:\n                    code: 1010007\n                    message: invalid path or method\n              schema:\n                $ref: ../../models/ErrorResponse.yaml\n        '401':\n          description: The credential you entered is invalid.\n          content:\n            application/json:\n              examples:\n                Invalid alias:\n                  summary: Invalid alias\n                  description: The credential you entered is invalid.\n                  value:\n                    code: 1010009\n                    message: The credential you provided is not valid.\n                    requestId: 1b370cb5-590d-90c2-bf4f-afb89c0b6a5a\n              schema:\n                $ref: ../../models/ErrorResponse.yaml\n      summary: Get Contract List\n      operationId: ListContractsInDeployerPool\n      tags:\n        - kip17-contract\n  '/v1/contract/{contract-address-or-alias}':\n    get:\n      description: Returns the data for a specified KIP-17 contract. You can use either the contract alias or contract address.\u003cp\u003e\u003c/p\u003e\n      parameters:\n        - description: Klaytn Network Chain ID (1001 or 8217)\n          in: header\n          name: x-chain-id\n          required: true\n          schema:\n            type: string\n        - description: Contract address (in hex.) or alias.\n          in: path\n          name: contract-address-or-alias\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: Your request was successful.\n          content:\n            application/json:\n              examples:\n                Success:\n                  summary: Success\n                  description: 'Your request was successful.'\n                  value:\n                    address: '0x7766a3af39e4fffbaccf6efa6a37ed195f9179b4'\n                    alias: test\n                    name: Test NFT\n                    symbol: TEST\n                    options:\n                      enableGlobalFeePayer: true\n                      userFeePayer:\n                        krn: 'krn:1001:wallet:88c1223c-66af-4122-9818-069b2e3c6b30:feepayer-pool:default'\n                        address: '0xE8964cA0C83cBbF520df5597dc1f5EFc27E5E729'\n              schema:\n                $ref: ../../models/Kip17ContractInfoResponse.yaml\n        '400':\n          description: Your request is not valid.\n          content:\n            application/json:\n              examples:\n                Invalid request:\n                  summary: Invalid request\n                  description: The format of the data you entered is wrong.\n                  value:\n                    code: 1100050\n                    message: Invalid request\n                Nonexistent contract:\n                  summary: Nonexistent contract\n                  description: This contract does not exist.\n                  value:\n                    code: 1100101\n                    message: Data not found\n                    requestId: 564d53ce-0e45-9db6-9e8f-ac15a1c9b140\n                Invalid path or method:\n                  summary: Invalid path or method\n                  description: The path or method you entered is wrong.\n                  value:\n                    code: 1010007\n                    message: invalid path or method\n              schema:\n                $ref: ../../models/ErrorResponse.yaml\n        '401':\n          description: The credential you entered is invalid.\n          content:\n            application/json:\n              examples:\n                Invalid alias:\n                  summary: Invalid alias\n                  description: The credential you entered is invalid.\n                  value:\n                    code: 1010009\n                    message: The credential you provided is not valid.\n                    requestId: 1b370cb5-590d-90c2-bf4f-afb89c0b6a5a\n              schema:\n                $ref: ../../models/ErrorResponse.yaml\n      summary: Get Contract\n      operationId: GetContract\n      tags:\n        - kip17-contract\n    put:\n      description: |-\n        Updates the fee payment method for a contract.\n\n        ##### Options\n        With `options` you can set the transaction fee payment method. You can find more details in [Fee Payer Options](#section/Fee-Payer-Options).\n      parameters:\n        - description: Klaytn Network Chain ID (1001 or 8217)\n          in: header\n          name: x-chain-id\n          required: true\n          schema:\n            type: string\n        - description: Contract address (in hex.) or alias.\n          in: path\n          name: contract-address-or-alias\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: Your request was successful.\n          content:\n            application/json:\n              examples:\n                Success:\n                  summary: Success\n                  description: 'Your request was successful.'\n                  value:\n                    address: '0x7766a3af39e4fffbaccf6efa6a37ed195f9179b4'\n                    alias: test\n                    name: TestNFT\n                    symbol: TEST\n                    options:\n                      enableGlobalFeePayer: false\n                      userFeePayer:\n                        krn: 'krn:1001:wallet:88c1223c-66af-4122-9818-069b2e3c6b30:feepayer-pool:default'\n                        address: '0xd6905b98E4Ba43a24E842d2b66c1410173791cab'\n              schema:\n                $ref: ../../models/Kip17ContractInfoResponse.yaml\n        '400':\n          description: Your request is not valid.\n          content:\n            application/json:\n              schema:\n                $ref: ../../models/ErrorResponse.yaml\n              examples:\n                Invalid FeePayer KRN:\n                  description: The KRN you entered is wrong. Please check your sender Account Pool.\n                  value:\n                    code: 1104401\n                    message: invalid krn;options.userFeePayer.krn\n                    requestId: 3c59fd06-c838-4d47-b9cf-59b2e25311e7\n        '401':\n          description: The credential you entered is invalid.\n          content:\n            application/json:\n              schema:\n                $ref: ../../models/ErrorResponse.yaml\n              examples:\n                Invalid alias:\n                  summary: Invalid alias\n                  description: The credential you entered is invalid.\n                  value:\n                    code: 1010009\n                    message: The credential you provided is not valid.\n                    requestId: 1b370cb5-590d-90c2-bf4f-afb89c0b6a5a\n        '404':\n          description: The resource you requested does not exist.\n          content:\n            application/json:\n              examples:\n                Not Found - alias:\n                  summary: Not found\n                  description: Contract doesn't exist.\n                  value:\n                    code: 1104504\n                    message: Contract not found\n              schema:\n                $ref: ../../models/ErrorResponse.yaml\n      summary: Update Contract\n      operationId: UpdateContract\n      tags:\n        - kip17-contract\n      requestBody:\n        $ref: '#/components/requestBodies/UpdateKip17ContractRequest'\n        content:\n          application/json:\n            schema:\n              $ref: ../../models/UpdateKip17ContractRequest.yaml\n  '/v1/contract/{contract-address-or-alias}/token':\n    post:\n      description: |-\n        Mints a new token from a specified KIP-17 contract. You can use the contract alias in place of the address.\n\n        \u003e **NOTE** \n        \u003e\n        \u003e Minting a token to an address outside the KAS Account Pool hinders you from sending or burning the token using KAS..\n      \n      parameters:\n        - description: Klaytn Network Chain ID (1001 or 8217)\n          in: header\n          name: x-chain-id\n          required: true\n          schema:\n            type: string\n        - description: KRN (KAS Resource Name) unique to an Account Pool\n          in: header\n          name: x-krn\n          required: false\n          schema:\n            type: string\n        - description: Contract address (in hex.) or alias.\n          in: path\n          name: contract-address-or-alias\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: Your request was successful.\n          content:\n            application/json:\n              examples:\n                Success:\n                  summary: Success\n                  description: 'Your request was successful.'\n                  value:\n                    status: Submitted\n                    transactionHash: '0x57d94989611cf0351fdea04dd5193398980642aaed82c8c34bdef12f4ecf356e'\n              schema:\n                $ref: ../../models/Kip17TransactionStatusResponse.yaml\n        '400':\n          description: Your request is not valid.\n          content:\n            application/json:\n              examples:\n                Missing field or wrong value:\n                  summary: Missing field or wrong value\n                  description: A field is either missing or has a wrong value.\n                  value:\n                    code: 1100050\n                    message: invalid request\n                    requestId: 0fbb2970-41ae-978c-9edb-d759ed6e7c87\n                Invalid path or method:\n                  summary: Invalid path or method\n                  description: The path or method you entered is wrong.\n                  value:\n                    code: 1010007\n                    message: invalid path or method\n              schema:\n                $ref: ../../models/ErrorResponse.yaml\n        '401':\n          description: The credential you entered is invalid.\n          content:\n            application/json:\n              examples:\n                Invalid alias:\n                  summary: Invalid alias\n                  description: The credential you entered is invalid.\n                  value:\n                    code: 1010009\n                    message: The credential you provided is not valid.\n                    requestId: 1b370cb5-590d-90c2-bf4f-afb89c0b6a5a\n              schema:\n                $ref: ../../models/ErrorResponse.yaml\n      summary: Mint Token\n      operationId: MintToken\n      tags:\n        - kip17-token\n      requestBody:\n        $ref: '#/components/requestBodies/MintKip17TokenRequest'\n        content:\n          application/json:\n            schema:\n              $ref: ../../models/MintKip17TokenRequest.yaml\n    get:\n      description: Returns a list of all tokens minted from a specified KIP-17 contract. You can use the contract alias in place of the address.\n      parameters:\n        - description: Klaytn Network Chain ID (1001 or 8217)\n          in: header\n          name: x-chain-id\n          required: true\n          schema:\n            type: string\n        - description: 'The number of items to return (min=1, max=1000, default=100).'\n          in: query\n          name: size\n          required: false\n          schema:\n            type: integer\n            format: int64\n          example: null\n        - description: 'The pointer for the next request, after which the result will be returned.'\n          in: query\n          name: cursor\n          required: false\n          schema:\n            type: string\n          example: eyJjm...ZSJ9\n        - description: Contract address (in hex.) or alias.\n          in: path\n          name: contract-address-or-alias\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: Your request was successful.\n          content:\n            application/json:\n              examples:\n                Success:\n                  summary: Success\n                  description: 'Your request was successful.'\n                  value:\n                    cursor: eyJjm...ZSJ9\n                    items:\n                      - createdAt: 1608640582\n                        updatedAt: 1608640582\n                        owner: '0xdc277e2d89b92336a4ee80be3c7142443fdade47'\n                        previousOwner: '0x0000000000000000000000000000000000000000'\n                        tokenId: '0x9'\n                        tokenUri: 'https://metastore.kip17.com/0xbe02aba/0x1'\n                        transactionHash: '0xb5fcf5f9bb28e6584104b743630371cef234c176a5c42b65e5a01299c0c2e6ff'\n                      - createdAt: 1607396973\n                        updatedAt: 1607396973\n                        owner: '0xdc277e2d89b92336a4ee80be3c7142443fdade47'\n                        previousOwner: '0x0000000000000000000000000000000000000000'\n                        tokenId: '0x8'\n                        tokenUri: 'https://metastore.kip17.com/0xbe02aba/0x1'\n                        transactionHash: '0xd2b5d09aa13e6306ef65507c324c92d3f91aa03003ed480fe8a11e4adca713d4'\n              schema:\n                $ref: ../../models/Kip17TokenListResponse.yaml\n        '400':\n          description: Your request is not valid.\n          content:\n            application/json:\n              examples:\n                Invalid request:\n                  summary: Invalid request\n                  description: The format of the data you entered is wrong.\n                  value:\n                    code: 1100050\n                    message: Invalid request\n                Nonexistent contract:\n                  summary: Nonexistent contract\n                  description: This contract does not exist.\n                  value:\n                    code: 1100101\n                    message: Data not found\n                    requestId: bb3b9e86-6a6f-9f1a-96bd-c9664df2dcbc\n                Invalid path or method:\n                  summary: Invalid path or method\n                  description: The path or method you entered is wrong.\n                  value:\n                    code: 1010007\n                    message: invalid path or method\n              schema:\n                $ref: ../../models/ErrorResponse.yaml\n        '401':\n          description: The credential you entered is invalid.\n          content:\n            application/json:\n              examples:\n                Invalid alias:\n                  summary: Invalid alias\n                  description: The credential you entered is invalid.\n                  value:\n                    code: 1010009\n                    message: The credential you provided is not valid.\n                    requestId: 1b370cb5-590d-90c2-bf4f-afb89c0b6a5a\n              schema:\n                $ref: ../../models/ErrorResponse.yaml\n      summary: Get Token List\n      operationId: ListTokens\n      tags:\n        - kip17-token\n  '/v1/contract/{contract-address-or-alias}/token/{token-id}':\n    get:\n      description: Returns the data of a specified token. You can use the contract alias in place of the address.\u003cp\u003e\u003c/p\u003e\n      parameters:\n        - description: Klaytn Network Chain ID (1001 or 8217)\n          in: header\n          name: x-chain-id\n          required: true\n          schema:\n            type: string\n        - description: Contract address (in hex.) or alias.\n          in: path\n          name: contract-address-or-alias\n          required: true\n          schema:\n            type: string\n        - description: The ID of the desired token.\n          in: path\n          name: token-id\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: Your request was successful.\n          content:\n            application/json:\n              examples:\n                Success:\n                  summary: Success\n                  description: 'Your request was successful.'\n                  value:\n                    createdAt: 1607330287\n                    updatedAt: 1607391306\n                    owner: '0xae7bb7efff289c163a95303795c4d59293f6ba92'\n                    previousOwner: '0xbafa182d3fccebcb1701b66a69f0e7b40f3a52c4'\n                    tokenId: '0x1'\n                    tokenUri: 'https://metastore.kip17.com/0xbe02aba/0x1'\n                    transactionHash: '0xf5f5d97ce5e6339fc767bd2f4df57d9ab39ca71e423d9f3b36a5f58ac894f578'\n              schema:\n                $ref: ../../models/GetKip17TokenResponse.yaml\n        '400':\n          description: Your request is not valid.\n          content:\n            application/json:\n              examples:\n                Invalid request:\n                  summary: Invalid request\n                  description: The format of the data you entered is wrong.\n                  value:\n                    code: 1100050\n                    message: Invalid request\n                Nonexistent contract:\n                  summary: Nonexistent contract\n                  description: This contract does not exist.\n                  value:\n                    code: 1100101\n                    message: data not found\n                    requestId: ef8177de-7b42-9c2a-ab3f-46ffd45b8767\n                Invalid path or method:\n                  summary: Invalid path or method\n                  description: The path or method you entered is wrong.\n                  value:\n                    code: 1010007\n                    message: invalid path or method\n              schema:\n                $ref: ../../models/ErrorResponse.yaml\n        '401':\n          description: The credential you entered is invalid.\n          content:\n            application/json:\n              examples:\n                Invalid alias:\n                  summary: Invalid alias\n                  description: The credential you entered is invalid.\n                  value:\n                    code: 1010009\n                    message: The credential you provided is not valid.\n                    requestId: 1b370cb5-590d-90c2-bf4f-afb89c0b6a5a\n              schema:\n                $ref: ../../models/ErrorResponse.yaml\n        '404':\n          description: The resource you requested does not exist.\n          content:\n            application/json:\n              examples:\n                Nonexistent token:\n                  summary: Nonexistent token\n                  description: The token you entered does not exist.\n                  value:\n                    code: 1104404\n                    message: token not found\n                    requestId: 1b99498f-4f37-98cc-a1d4-6246a7a5be79\n              schema:\n                $ref: ../../models/ErrorResponse.yaml\n      summary: Get Token Data\n      operationId: GetToken\n      tags:\n        - kip17-token\n    post:\n      description: |-\n        Sends a token to a specified address. If the token has a different `sender` and `owner`, the `sender` must be authorized to send the token. You can authorize an account to send tokens via [v1/contract/{contract-address-or-alias}/approve/{token-id}](#operation/ApproveToken).\u003cp\u003e\u003c/p\u003e\n\n        You will see `Submitted` in the response even when you enter a wrong token ID. But that does not mean that it is successfully `Committed`. To confirm transaction status, use [Get Transaction Receipt](https://refs.klaytnapi.com/en/wallet/latest#operation/TransactionReceipt) from the Wallet API.\n\n        ##### Sender \n        `sender` is the address that sends the transaction. If it is an account in the default `account-pool` of KIP-17 or Wallet Service, you can omit the KRN header. \u003cbr /\u003e Otherwise you need to include the KRN header (`x-krn: krn:{chain-id}:wallet:{account-id}:account-pool:{pool name}`).\n      parameters:\n        - description: Klaytn Network Chain ID (1001 or 8217)\n          in: header\n          name: x-chain-id\n          required: true\n          schema:\n            type: string\n        - description: KRN (KAS Resource Name) unique to an Account Pool\n          in: header\n          name: x-krn\n          required: false\n          schema:\n            type: string\n        - description: Contract address (in hex.) or alias.\n          in: path\n          name: contract-address-or-alias\n          required: true\n          schema:\n            type: string\n        - description: Token ID\n          in: path\n          name: token-id\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: Your request was successful.\n          content:\n            application/json:\n              examples:\n                Success:\n                  summary: Success\n                  description: 'Your request was successful.'\n                  value:\n                    status: Submitted\n                    transactionHash: '0x72b05d3b27e17a132e60681f4a2ad487868181b0623fbaa841875ecb36f62b8f'\n              schema:\n                $ref: ../../models/Kip17TransactionStatusResponse.yaml\n        '400':\n          description: Your request is not valid.\n          content:\n            application/json:\n              examples:\n                Invalid request:\n                  summary: Invalid request\n                  description: The format of the data you entered is wrong.\n                  value:\n                    code: 1100050\n                    message: Invalid request\n                Failed to get account:\n                  summary: Failed to get account\n                  description: The KRN you entered is wrong. Please check the sender Account Pool.\n                  value:\n                    code: 1104401\n                    message: failed to get account\n                    requestId: 10cfc941-22e3-919a-bc61-ff949bd79442\n                Invalid path or method:\n                  summary: Invalid path or method\n                  description: The path or method you entered is wrong.\n                  value:\n                    code: 1010007\n                    message: invalid path or method\n              schema:\n                $ref: ../../models/ErrorResponse.yaml\n        '401':\n          description: The credential you entered is invalid.\n          content:\n            application/json:\n              examples:\n                Invalid alias:\n                  summary: Invalid alias\n                  description: The credential you entered is invalid.\n                  value:\n                    code: 1010009\n                    message: The credential you provided is not valid.\n                    requestId: 1b370cb5-590d-90c2-bf4f-afb89c0b6a5a\n              schema:\n                $ref: ../../models/ErrorResponse.yaml\n      summary: Transfer Token\n      operationId: TransferToken\n      tags:\n        - kip17-token\n      requestBody:\n        $ref: '#/components/requestBodies/TransferKip17TokenRequest'\n        content:\n          application/json:\n            schema:\n              $ref: ../../models/TransferKip17TokenRequest.yaml\n    delete:\n      description: |-\n        Burns a token.\n\n        You will see `Submitted` in the response even when you enter the wrong token ID, the `from` and `owner` are different, or when `from` is not authorized to burn the token. But that does not mean that it is successfully `Committed`. To confirm transaction status, use [Get Transaction Receipt](https://refs.klaytnapi.com/en/wallet/latest#operation/TransactionReceipt) from the Wallet API.\u003cp\u003e\u003c/p\u003e \n\n        ##### From\n        `from` is the address that sends the transaction. If `from` is an account in the default `account-pool` of KIP-17 or Wallet Service, you can omit the KRN header. \u003cbr /\u003e Otherwise you need to include the KRN header (`x-krn: krn:{chain-id}:wallet:{account-id}:account-pool:{pool name}`). \n      parameters:\n        - description: Klaytn Network Chain ID (1001 or 8217)\n          in: header\n          name: x-chain-id\n          required: true\n          schema:\n            type: string\n        - description: KRN (KAS Resource Name) unique to an Account Pool\n          in: header\n          name: x-krn\n          required: false\n          schema:\n            type: string\n        - description: Contract address (in hex.) or alias.\n          in: path\n          name: contract-address-or-alias\n          required: true\n          schema:\n            type: string\n        - description: The ID of the token to burn.\n          in: path\n          name: token-id\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: Your request was successful.\n          content:\n            application/json:\n              examples:\n                Success:\n                  summary: Success\n                  description: 'Your request was successful.'\n                  value:\n                    status: Submitted\n                    transactionHash: '0xbf6de339cf435447e58da05384bbf83a16fea40044bb49b84e11d3b00ea0325f'\n              schema:\n                $ref: ../../models/Kip17TransactionStatusResponse.yaml\n        '400':\n          description: Your request is not valid.\n          content:\n            application/json:\n              examples:\n                Invalid request:\n                  summary: Invalid request\n                  description: The format of the data you entered is wrong.\n                  value:\n                    code: 1100050\n                    message: Invalid request\n                Failed to get account:\n                  summary: Failed to get account\n                  description: The KRN or the from address you entered is wrong. Please check the sender Account Pool.\n                  value:\n                    code: 1104401\n                    message: failed to get account\n                    requestId: 10cfc941-22e3-919a-bc61-ff949bd79442\n                Invalid path or method:\n                  summary: Invalid path or method\n                  description: The path or method you entered is wrong.\n                  value:\n                    code: 1010007\n                    message: invalid path or method\n              schema:\n                $ref: ../../models/ErrorResponse.yaml\n        '401':\n          description: The credential you entered is invalid.\n          content:\n            application/json:\n              examples:\n                Invalid alias:\n                  summary: Invalid alias\n                  description: The credential you entered is invalid.\n                  value:\n                    code: 1010009\n                    message: The credential you provided is not valid.\n                    requestId: 1b370cb5-590d-90c2-bf4f-afb89c0b6a5a\n              schema:\n                $ref: ../../models/ErrorResponse.yaml\n      summary: Burn Token\n      operationId: BurnToken\n      tags:\n        - kip17-token\n      requestBody:\n        $ref: '#/components/requestBodies/BurnKip17TokenRequest'\n        content:\n          application/json:\n            schema:\n              $ref: ../../models/BurnKip17TokenRequest.yaml\n  '/v1/contract/{contract-address-or-alias}/approve/{token-id}':\n    post:\n      description: |-\n        Grant or deny authorization to `to` to send a specified token. To deny authorization, enter `0x0000000000000000000000000000000000000000` for `to`.\n\n        You will see in `Submitted` in the response even when you enter the wrong token ID, the `from` and `owner` are differet. But that does not mean that it is successfully `Committed`. To confirm transaction status, use [Get Transaction Receipt](https://refs.klaytnapi.com/en/wallet/latest#operation/TransactionReceipt) from the Wallet API.\u003cp\u003e\u003c/p\u003e\n\n        ##### From \n        `from` is the address that sends the transaction. If `from` is an account in the default `account-pool` of KIP-17 or Wallet Service, you can omit the KRN header. \u003cbr /\u003e Otherwise you need to include the KRN header (`x-krn: krn:{chain-id}:wallet:{account-id}:account-pool:{pool name}`).\n      parameters:\n        - description: Klaytn Network Chain ID (1001 or 8217)\n          in: header\n          name: x-chain-id\n          required: true\n          schema:\n            type: string\n        - description: KRN (KAS Resource Name) unique to an Account Pool\n          in: header\n          name: x-krn\n          required: false\n          schema:\n            type: string\n        - description: Contract address (in hex.) or alias.\n          in: path\n          name: contract-address-or-alias\n          required: true\n          schema:\n            type: string\n        - description: The ID of the token that the `to` will be authorized to send.\n          in: path\n          name: token-id\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: Your request was successful.\n          content:\n            application/json:\n              examples:\n                Success:\n                  summary: Success\n                  description: 'Your request was successful.'\n                  value:\n                    status: Submitted\n                    transactionHash: '0x0a56e8dba1afc0cc1b96c1dec0eccc611863c5c3a181101b73f7471f2a4e550b'\n              schema:\n                $ref: ../../models/Kip17TransactionStatusResponse.yaml\n        '400':\n          description: Your request is not valid.\n          content:\n            application/json:\n              examples:\n                Invalid request:\n                  summary: Invalid request\n                  description: The format of the data you entered is wrong.\n                  value:\n                    code: 1100050\n                    message: Invalid request\n              schema:\n                $ref: ../../models/ErrorResponse.yaml\n                Invalid path or method:\n                  summary: Invalid path or method\n                  description: The path or method you entered is wrong.\n                  value:\n                    code: 1010007\n                    message: invalid path or method\n        '401':\n          description: The credential you entered is invalid.\n          content:\n            application/json:\n              examples:\n                Invalid alias:\n                  summary: Invalid alias\n                  description: The credential you entered is invalid.\n                  value:\n                    code: 1010009\n                    message: The credential you provided is not valid.\n                    requestId: 1b370cb5-590d-90c2-bf4f-afb89c0b6a5a\n              schema:\n                $ref: ../../models/ErrorResponse.yaml\n      summary: Approve/Deny Authorization for Token Transfers\n      operationId: ApproveToken\n      tags:\n        - kip17-token\n      requestBody:\n        $ref: '#/components/requestBodies/ApproveKip17TokenRequest'\n        content:\n          application/json:\n            schema:\n              $ref: ../../models/ApproveKip17TokenRequest.yaml\n  '/v1/contract/{contract-address-or-alias}/approveall':\n    post:\n      description: |-\n        Grant or deny authorization to `to` to send all tokens owned by `from` in a specified contract.\u003cp\u003e\u003c/p\u003e\n\n\n        You will see in `Submitted` in the response even when you enter the wrong address or token ID, or when the `from` and `owner` are different. But that does not mean that it is successfully `Committed`). To confirm transaction status, use [Get Transaction Receipt](https://refs.klaytnapi.com/en/wallet/latest#operation/TransactionReceipt) from the Wallet API.\u003cp\u003e\u003c/p\u003e\n      parameters:\n        - description: Klaytn Network Chain ID (1001 or 8217)\n          in: header\n          name: x-chain-id\n          required: true\n          schema:\n            type: string\n        - description: KRN (KAS Resource Name) unique to an Account Pool\n          in: header\n          name: x-krn\n          required: false\n          schema:\n            type: string\n        - description: Contract address (in hex.) or alias.\n          in: path\n          name: contract-address-or-alias\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: Your request was successful.\n          content:\n            application/json:\n              examples:\n                Success:\n                  summary: Success\n                  description: 'Your request was successful.'\n                  value:\n                    status: Submitted\n                    transactionHash: '0xb5a0618be3508b3fe22e35aa96063005dd4c557cf040348cc542b0726cc30f7b'\n              schema:\n                $ref: ../../models/Kip17TransactionStatusResponse.yaml\n        '400':\n          description: Your request is not valid.\n          content:\n            application/json:\n              examples:\n                Invalid request:\n                  summary: Invalid request\n                  description: The format of the data you entered is wrong.\n                  value:\n                    code: 1100050\n                    message: Invalid request\n                    requestId: d2529337-b6e4-90c0-bb73-d50c74d207d1\n              schema:\n                $ref: ../../models/ErrorResponse.yaml\n        '401':\n          description: The credential you entered is invalid.\n          content:\n            application/json:\n              examples:\n                Invalid alias:\n                  summary: Invalid alias\n                  description: The credential you entered is invalid.\n                  value:\n                    code: 1010009\n                    message: The credential you provided is not valid.\n                    requestId: 1b370cb5-590d-90c2-bf4f-afb89c0b6a5a\n                Invalid path or method:\n                  summary: Invalid path or method\n                  description: The path or method you entered is wrong.\n                  value:\n                    code: 1010007\n                    message: invalid path or method\n              schema:\n                $ref: ../../models/ErrorResponse.yaml\n      summary: Approve/Deny Transfers of All Token\n      operationId: ApproveAll\n      tags:\n        - kip17-token\n      requestBody:\n        $ref: '#/components/requestBodies/ApproveAllKip17Request'\n        content:\n          application/json:\n            schema:\n              $ref: ../../models/ApproveAllKip17Request.yaml\n  '/v1/contract/{contract-address-or-alias}/owner/{owner-address}':\n    get:\n      description: Returns a list of all tokens existent for a contract.\n      parameters:\n        - description: Klaytn Network Chain ID (1001 or 8217)\n          in: header\n          name: x-chain-id\n          required: true\n          schema:\n            type: string\n        - description: 'The number of items to return (min=1, max=1000, default=100).'\n          in: query\n          name: size\n          required: false\n          schema:\n            type: integer\n            format: int64\n          example: null\n        - description: 'The pointer for the next request, after which the result will be returned.'\n          in: query\n          name: cursor\n          required: false\n          schema:\n            type: string\n          example: eyJjm...ZSJ9\n        - description: Contract address (in hex.) or alias.\n          in: path\n          name: contract-address-or-alias\n          required: true\n          schema:\n            type: string\n        - description: Address of the token owner\n          in: path\n          name: owner-address\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: Your request was successful.\n          content:\n            application/json:\n              examples:\n                Success:\n                  summary: Success\n                  description: 'Your request was successful.'\n                  value:\n                    cursor: eyJjm...ZSJ9\n                    items:\n                      - createdAt: 1608691873\n                        updatedAt: 1608691873\n                        owner: '0x9eaf20b40e0f1ced5dbba6f5cfb0d3e12b0534f4'\n                        previousOwner: '0x0000000000000000000000000000000000000000'\n                        tokenId: '0x13'\n                        tokenUri: 'https://metastore.kip17.com/0xbe02aba/0x1'\n                        transactionHash: '0x3bf8107f39158abf0f2b0dc1ee8ccce9320fbce14899f0021dc4d6ad970c9150'\n                      - createdAt: 1608690798\n                        updatedAt: 1608690798\n                        owner: '0x9eaf20b40e0f1ced5dbba6f5cfb0d3e12b0534f4'\n                        previousOwner: '0x0000000000000000000000000000000000000000'\n                        tokenId: '0x12'\n                        tokenUri: 'https://metastore.kip17.com/0xbe02aba/0x1'\n                        transactionHash: '0x3857bd481b4a993b4346e1b6c18862bb39ee19401fd3b04101993ce8eed05743'\n              schema:\n                $ref: ../../models/GetOwnerKip17TokensResponse.yaml\n        '400':\n          description: Your request is not valid.\n          content:\n            application/json:\n              examples:\n                Invalid request:\n                  summary: Invalid request\n                  description: The format of the data you entered is wrong.\n                  value:\n                    code: 1100050\n                    message: Invalid request\n                Invalid query parameter (size):\n                  summary: Invalid query parameter (size)\n                  description: The value is out of scope.\n                  value:\n                    code: 1100251\n                    message: value out of range; size\n                Nonexistent data:\n                  summary: Nonexistent data\n                  description: Data doesn't exist.\n                  value:\n                    code: 1100101\n                    message: Data not found\n                Invalid path or method:\n                  summary: Invalid path or method\n                  description: The path or method you entered is wrong.\n                  value:\n                    code: 1010007\n                    message: invalid path or method\n              schema:\n                $ref: ../../models/ErrorResponse.yaml\n        '401':\n          description: The credential you entered is invalid.\n          content:\n            application/json:\n              examples:\n                Invalid alias:\n                  summary: Invalid alias\n                  description: The credential you entered is invalid.\n                  value:\n                    code: 1010009\n                    message: The credential you provided is not valid.\n                    requestId: 1b370cb5-590d-90c2-bf4f-afb89c0b6a5a\n              schema:\n                $ref: ../../models/ErrorResponse.yaml\n      summary: List Tokens by Address\n      operationId: GetOwnerTokens\n      tags:\n        - kip17-token\n  '/v1/contract/{contract-address-or-alias}/token/{token-id}/history':\n    get:\n      description: Returns the transaction history of a specified token from the time it was minted. Each item in the response represents a transfer.\n      parameters:\n        - description: Klaytn Network Chain ID (1001 or 8217)\n          in: header\n          name: x-chain-id\n          required: true\n          schema:\n            type: string\n        - description: 'The number of items to return (min=1, max=1000, default=100).'\n          in: query\n          name: size\n          required: false\n          schema:\n            type: integer\n            format: int64\n          example: null\n        - description: 'The pointer for the next request, after which the result will be returned.'\n          in: query\n          name: cursor\n          required: false\n          schema:\n            type: string\n          example: eyJjm...ZSJ9\n        - description: Contract address (in hex.) or alias.\n          in: path\n          name: contract-address-or-alias\n          required: true\n          schema:\n            type: string\n        - description: Token ID\n          in: path\n          name: token-id\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: Your request was successful.\n          content:\n            application/json:\n              examples:\n                Success:\n                  summary: Success\n                  description: 'Your request was successful.'\n                  value:\n                    cursor: eyJjm...ZSJ9\n                    items:\n                      - from: '0xbafa182d3fccebcb1701b66a69f0e7b40f3a52c4'\n                        timestamp: 1607391306\n                        to: '0xae7bb7efff289c163a95303795c4d59293f6ba92'\n                      - from: '0x0000000000000000000000000000000000000000'\n                        timestamp: 1607330287\n                        to: '0xbafa182d3fccebcb1701b66a69f0e7b40f3a52c4'\n              schema:\n                $ref: ../../models/GetKip17TokenHistoryResponse.yaml\n        '400':\n          description: Your request is not valid.\n          content:\n            application/json:\n              examples:\n                Invalid request:\n                  summary: Invalid request\n                  description: The format of the data you entered is wrong.\n                  value:\n                    code: 1100050\n                    message: Invalid request\n                Invalid path or method:\n                  summary: Invalid path or method\n                  description: The path or method you entered is wrong.\n                  value:\n                    code: 1010007\n                    message: invalid path or method\n              schema:\n                $ref: ../../models/ErrorResponse.yaml\n        '401':\n          description: The credential you entered is invalid.\n          content:\n            application/json:\n              examples:\n                Invalid alias:\n                  summary: Invalid alias\n                  description: The credential you entered is invalid.\n                  value:\n                    code: 1010009\n                    message: The credential you provided is not valid.\n                    requestId: 1b370cb5-590d-90c2-bf4f-afb89c0b6a5a\n              schema:\n                $ref: ../../models/ErrorResponse.yaml\n        '404':\n          description: The resource you requested does not exist.\n          content:\n            application/json:\n              examples:\n                Nonexistent token:\n                  summary: Nonexistent token\n                  description: The token doesn't exist.\n                  value:\n                    code: 1104404\n                    message: Token not found\n                    requestId: 1b99498f-4f37-98cc-a1d4-6246a7a5be79\n              schema:\n                $ref: ../../models/ErrorResponse.yaml\n      summary: Get Token Ownership History\n      operationId: GetTokenHistory\n      tags:\n        - kip17-token\nservers:\n  - url: 'https://kip17-api.klaytnapi.com'\ncomponents:\n  securitySchemes:\n    basic:\n      description: |-\n        KAS uses Basic HTTP Auth. All requests must have a correct Authorization header and a KAS user can create the credentials to be used for Basic Auth by using `username` as access key ID and `password` as secret access key.\n\n        \u003e**NOTE**\n        \u003e\n        \u003e All credentials on KAS enable full access to KAS and to the Klaytn account created with the Wallet API. It authorizes asset transfers of Klaytn account's assets (like KLAY) as well as [Transaction Execution](https://docs.klaytnapi.com/v/en/tutorial/wallet-transaction-api). To keep your KAS/Klaytn accounts secure, do not share your KAS API Secret Access Key with others.\n        \n        **cURL**\n        ```\n          curl --location --request GET 'https://kip17-api.klaytnapi.com/v1/contract' \\\n          -u ${your_accessKeyId}:${your_secretAccessKey} \\\n          --header 'x-chain-id: 1001' \\\n          --header 'Content-Type: application/json'\n        ```      \n      type: http\n      scheme: basic\n  requestBodies:\n    DeployKip17ContractRequest:\n      content:\n        application/json:\n          examples:\n            Success:\n              value:\n                alias: test\n                symbol: TEST\n                name: TEST NFT\n                options:\n                  enableGlobalFeePayer: true\n                  userFeePayer:\n                    krn: 'krn:1001:wallet:88c1223c-66af-4122-9818-069b2e3c6b30:feepayer-pool:default'\n                    address: '0xE8964cA0C83cBbF520df5597dc1f5EFc27E5E729'\n          schema:\n            $ref: ../../models/DeployKip17ContractRequest.yaml\n    UpdateKip17ContractRequest:\n      content:\n        application/json:\n          examples:\n            Success:\n              value:\n                options:\n                  enableGlobalFeePayer: false\n                  userFeePayer:\n                    krn: 'krn:1001:wallet:88c1223c-66af-4122-9818-069b2e3c6b30:feepayer-pool:default'\n                    address: '0xd6905b98E4Ba43a24E842d2b66c1410173791cab'\n          schema:\n            $ref: ../../models/UpdateKip17ContractRequest.yaml\n    MintKip17TokenRequest:\n      content:\n        application/json:\n          examples:\n            Success:\n              value:\n                to: '0x9EaF20b40E0f1ced5dbba6f5Cfb0D3E12B0534f4'\n                id: '0x13'\n                uri: 'https://metastore.kip17.com/0xbe02aba/0x1'\n            Bad request - missing field:\n              value:\n                to: '0xDc277E2D89b92336A4ee80be3c7142443FDaDE47'\n                uri: 'https://metastore.kip17.com/0xbe02aba/0x1'\n          schema:\n            $ref: ../../models/MintKip17TokenRequest.yaml\n    TransferKip17TokenRequest:\n      content:\n        application/json:\n          examples:\n            Success:\n              value:\n                sender: '0x9eaf20b40e0f1ced5dbba6f5cfb0d3e12b0534f4'\n                owner: '0x9eaf20b40e0f1ced5dbba6f5cfb0d3e12b0534f4'\n                to: '0xDc277E2D89b92336A4ee80be3c7142443FDaDE47'\n          schema:\n            $ref: ../../models/TransferKip17TokenRequest.yaml\n    BurnKip17TokenRequest:\n      content:\n        application/json:\n          examples:\n            Bad request - failed to get an account:\n              value:\n                from: '0xDc277E2D89b92336A4ee80be3c7142443FDaDE47'\n            Success:\n              value:\n                from: '0xDc277E2D89b92336A4ee80be3c7142443FDaDE47'\n          schema:\n            $ref: ../../models/BurnKip17TokenRequest.yaml\n    ApproveKip17TokenRequest:\n      content:\n        application/json:\n          examples:\n            Success:\n              value:\n                from: '0x9EaF20b40E0f1ced5dbba6f5Cfb0D3E12B0534f4'\n                to: '0xDc277E2D89b92336A4ee80be3c7142443FDaDE47'\n            Incorrect address:\n              value:\n                from: '0x9EaF20b40E0f1ced5dbba6f5Cfb0D3E12B0534f4'\n                to: 0xINCORRECT\n          schema:\n            $ref: ../../models/ApproveKip17TokenRequest.yaml\n    ApproveAllKip17Request:\n      content:\n        application/json:\n          examples:\n            Success:\n              value:\n                from: '0x9eaf20b40e0f1ced5dbba6f5cfb0d3e12b0534f4'\n                to: '0xDc277E2D89b92336A4ee80be3c7142443FDaDE47'\n                approved: true\n          schema:\n            $ref: ../../models/ApproveAllKip17Request.yaml\nsecurity:\n  - basic: []\n"
		}
	},
	"Error": "parse: parse spec: parse components: requestBodies: \"ApproveKip17TokenRequest\": content: application/json: schema: parse schema: resolve \"../../models/ApproveKip17TokenRequest.yaml\": find schema: external base \"../../models/ApproveKip17TokenRequest.yaml\" is not supported"
}