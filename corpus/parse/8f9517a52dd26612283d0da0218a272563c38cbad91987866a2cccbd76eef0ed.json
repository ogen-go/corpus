{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/wikimedia/service-template-node"
		},
		"file": {
			"name": "spec.template.yaml",
			"size": 0,
			"path": "spec.template.yaml",
			"byteSize": 12448,
			"content": "openapi: 3.0.0\ninfo:\n  version: 0.7.0\n  title: WMF Node.JS Service Template\n  description: A template for creating Node.JS services\n  termsOfService: https://wikimediafoundation.org/wiki/Terms_of_Use\n  contact:\n    name: the Wikimedia Services team\n    url: http://mediawiki.org/wiki/Services\n  license:\n    name: Apache2\n    url: http://www.apache.org/licenses/LICENSE-2.0\nx-default-params:\n  domain: en.wikipedia.org\n\npaths:\n  # from routes/root.js\n  /robots.txt:\n    get:\n      tags:\n        - Root\n        - Robots\n      description: Gets robots.txt\n      responses:\n        200:\n          description: Success\n        default:\n          description: Error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/problem\"\n      x-amples:\n        - title: robots.txt check\n          request: {}\n          response:\n            status: 200\n  /:\n    get:\n      tags:\n        - Root\n      description: The root service end-point\n      responses:\n        200:\n          description: Success\n        default:\n          description: Error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/problem\"\n      x-amples:\n        - title: root with no query params\n          request: {}\n          response:\n            status: 404\n        - title: spec from root\n          request:\n            query:\n              spec: true\n          response:\n            status: 200\n        - title: doc from root\n          request:\n            query:\n              doc: true\n          response:\n            status: 200\n        - title: root with wrong query param\n          request:\n            query:\n              fooo: true\n          response:\n            status: 404\n  # from routes/v1.js\n  /{domain}/v1/siteinfo:\n    get:\n      tags:\n        - Site info\n        - MW API call\n        - Example\n      description: Calls the MW API siteinfo action and returns the response\n      parameters:\n        - $ref: \"#/components/parameters/domain\"\n      responses:\n        200:\n          description: Success\n        404:\n          description: Not Found\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/problem\"\n        504:\n          description: Server Error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/problem\"\n        default:\n          description: Error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/problem\"\n      x-amples:\n        - title: site info for default domain\n          request: {}\n          response:\n            status: 200\n            headers:\n              content-type: application/json\n        - title: site info for a non-existent domain\n          request:\n            params:\n              domain: my.fake.domain\n          response:\n            status: 504\n            headers:\n              content-type: application/json\n  /{domain}/v1/siteinfo/{prop}:\n    get:\n      tags:\n        - Site info\n        - MW API call\n        - Example\n      description: Calls the MW API siteinfo action and returns the response\n      parameters:\n        - $ref: \"#/components/parameters/domain\"\n        - $ref: \"#/components/parameters/prop\"\n      responses:\n        200:\n          description: Success\n        404:\n          description: Not Found\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/problem\"\n        504:\n          description: Server Error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/problem\"\n        default:\n          description: Error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/problem\"\n      x-amples:\n        - title: site info for default domain\n          request: {}\n          response:\n            status: 200\n            headers:\n              content-type: application/json\n        - title: site info for a non-existent domain\n          request:\n            params:\n              domain: my.fake.domain\n          response:\n            status: 504\n            headers:\n              content-type: application/json\n        - title: site info check for valid prop\n          request:\n            params:\n              prop: sitename\n          response:\n            status: 200\n            headers:\n              content-type: application/json\n            body:\n              sitename: Wikipedia\n        - title: site info check for invalid prop\n          request:\n            params:\n              prop: blaprop\n          response:\n            status: 404\n            headers:\n              content-type: application/json\n  /{domain}/v1/page/{title}:\n    get:\n      tags:\n        - Page content\n        - Example\n      description: Gets the HTML for the page with the given title\n      parameters:\n        - $ref: \"#/components/parameters/domain\"\n        - $ref: \"#/components/parameters/title\"\n      responses:\n        200:\n          description: OK\n        404:\n          description: Not Found\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/problem\"\n        default:\n          description: Error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/problem\"\n      x-amples:\n        - title: get the Foobar page from en.wp.org\n          request:\n            params:\n              title: Foobar\n          response:\n            status: 200\n            headers:\n              content-type: text/html\n  /{domain}/v1/page/{title}/lead:\n    get:\n      tags:\n        - Page content\n        - Lead section\n        - Example\n      description: Gets the lead-section HTML for the page with the given title\n      parameters:\n        - $ref: \"#/components/parameters/domain\"\n        - $ref: \"#/components/parameters/title\"\n      responses:\n        200:\n          description: OK\n        404:\n          description: Not Found\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/problem\"\n        default:\n          description: Error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/problem\"\n      x-amples:\n        - title: get the lead section for Barack Obama\n          request:\n            params:\n              title: Barack Obama\n          response:\n            status: 200\n            headers:\n              content-type: text/html\n  # from routes/info.js\n  /_info:\n    get:\n      tags:\n        - Service information\n      description: Gets information about the service\n      responses:\n        200:\n          description: OK\n      x-amples:\n        - title: retrieve service info\n          request: {}\n          response:\n            status: 200\n            headers:\n              content-type: application/json\n            body:\n              name: /.+/\n              description: /.+/\n              version: /.+/\n              home: /.+/\n  /_info/name:\n    get:\n      tags:\n        - Service information\n        - Service name\n      description: Gets the name of the service\n      responses:\n        200:\n          description: OK\n      x-amples:\n        - title: retrieve service name\n          request: {}\n          response:\n            status: 200\n            headers:\n              content-type: application/json\n            body:\n              name: /.+/\n  /_info/version:\n    get:\n      tags:\n        - Service information\n        - Service version\n      description: Gets the running version of the service\n      responses:\n        200:\n          description: OK\n      x-amples:\n        - title: retrieve service version\n          request: {}\n          response:\n            status: 200\n            headers:\n              content-type: application/json\n            body:\n              version: /.+/\n  /_info/home:\n    get:\n      tags:\n        - Service information\n        - Service homepage\n      description: Redirects to the home page\n      responses:\n        301:\n          description: Redirect\n      x-amples:\n        - title: redirect to the home page\n          request: {}\n          response:\n            status: 301\n  # from routes/ex.js\n  /ex/err/array:\n    get:\n      tags:\n        - Example\n        - Error\n        - Internal error\n      description: Generates an internal error due to a wrong array declaration\n      responses:\n        500:\n          description: Internal Error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/problem\"\n      x-amples:\n        - title: wrong array declaration example\n          request: {}\n          response:\n            status: 500\n            headers:\n              content-type: application/json\n  /ex/err/file:\n    get:\n      tags:\n        - Example\n        - Error\n        - Internal error\n      description: Generates an internal error due to a non-existing file\n      responses:\n        500:\n          description: Internal Error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/problem\"\n      x-amples:\n        - title: non-existing file example\n          request: {}\n          response:\n            status: 500\n            headers:\n              content-type: application/json\n  /ex/err/manual/error:\n    get:\n      tags:\n        - Example\n        - Error\n        - Internal error\n      description: Generates an internal error due to a user-thrown error\n      responses:\n        500:\n          description: Internal Error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/problem\"\n      x-amples:\n        - title: user error example\n          request: {}\n          response:\n            status: 500\n            headers:\n              content-type: application/json\n  /ex/err/manual/deny:\n    get:\n      tags:\n        - Example\n        - Error\n        - Access denied\n      description: Generates an access-denied error\n      responses:\n        403:\n          description: Access Denied\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/problem\"\n      x-amples:\n        - title: access denied error example\n          request: {}\n          response:\n            status: 403\n            headers:\n              content-type: application/json\n  /ex/err/manual/auth:\n    get:\n      tags:\n        - Example\n        - Error\n        - Unauthorised access\n      description: Generates an unauthorised error\n      responses:\n        401:\n          description: Unauthorized\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/problem\"\n      x-amples:\n        - title: unauthorised error example\n          request: {}\n          response:\n            status: 401\n            headers:\n              content-type: application/json\n  /ex/req/uri/{uri}:\n    get:\n      tags:\n        - Example\n        - Request issuing\n      description: Issues a request to the given URI\n      responses:\n        200:\n          description: OK\n      x-amples:\n        - title: Get example home page\n          request:\n            params:\n              uri: \"http://www.example.com\"\n\ncomponents:\n  schemas:\n    # A https://tools.ietf.org/html/draft-nottingham-http-problem\n    problem:\n      required:\n        - type\n      properties:\n        status:\n          type: integer\n        type:\n          type: string\n        title:\n          type: string\n        detail:\n          type: string\n        method:\n          type: string\n        uri:\n          type: string\n  parameters:\n    domain:\n      in: path\n      name: domain\n      required: true\n      schema:\n        type: string\n      description: |\n        Project domain for the requested data.\n    title:\n      in: path\n      name: title\n      required: true\n      schema:\n        type: string\n      description: |\n        Page title. Use underscores instead of spaces. Example: `Main_Page`\n    prop:\n      in: path\n      name: prop\n      required: true\n      schema:\n        type: string\n      description: |\n        Site info prop.\n",
			"canonicalURL": "/github.com/wikimedia/service-template-node@6431a9964bf05579d4419af36266a305be3014e5/-/blob/spec.template.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/wikimedia/service-template-node/blob/6431a9964bf05579d4419af36266a305be3014e5/spec.template.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "parse: parse spec: parse path items: path \"/ex/req/uri/{uri}\": get: at 1:4970: parse path \"/ex/req/uri/{uri}\": path parameter not specified: \"uri\""
}