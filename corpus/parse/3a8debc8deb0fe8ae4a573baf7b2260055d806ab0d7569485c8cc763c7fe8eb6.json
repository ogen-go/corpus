{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/plantbreeding/BrAPI"
		},
		"file": {
			"name": "Plates_GET_POST_PUT.yaml",
			"size": 0,
			"path": "Specification/BrAPI-Genotyping/Plates/Plates_GET_POST_PUT.yaml",
			"byteSize": 5336,
			"content": "info:\n  title: BrAPI\n  version: ''\nopenapi: 3.0.0\npaths:\n  /plates:\n    get:\n      summary: Get a filtered list of Plates.\n      description: Get a filtered list of `Plates`. Each `Plate` is a collection of `Samples` that are physically grouped together.\n      parameters:\n      - name: sampleDbId\n        description: The unique identifier for a `Sample`\n        in: query\n        required: false\n        schema:\n          type: string\n      - name: sampleName\n        description: The human readable name of the `Sample`\n        in: query\n        required: false\n        schema:\n          type: string\n      - name: sampleGroupDbId\n        description: The unique identifier for a group of related `Samples`\n        in: query\n        required: false\n        schema:\n          type: string\n      - name: observationUnitDbId\n        description: The ID which uniquely identifies an `ObservationUnit`\n        in: query\n        required: false\n        schema:\n          type: string\n      - name: plateDbId\n        description: The ID which uniquely identifies a `Plate` of `Samples`\n        in: query\n        required: false\n        schema:\n          type: string\n      - name: plateName\n        description: The human readable name of a `Plate` of `Samples`\n        in: query\n        required: false\n        schema:\n          type: string\n      - $ref: '#/components/parameters/commonCropName'\n      - $ref: '#/components/parameters/programDbId'\n      - $ref: '#/components/parameters/trialDbId'\n      - $ref: '#/components/parameters/studyDbId'\n      - $ref: '#/components/parameters/germplasmDbId'\n      - $ref: '#/components/parameters/externalReferenceID'\n      - $ref: '#/components/parameters/externalReferenceId'\n      - $ref: '#/components/parameters/externalReferenceSource'\n      - $ref: '#/components/parameters/page'\n      - $ref: '#/components/parameters/pageSize'\n      - $ref: '#/components/parameters/authorizationHeader'\n      responses:\n        '200':\n          $ref: '#/components/responses/PlateListResponse'\n        '400':\n          $ref: '#/components/responses/400BadRequest'\n        '401':\n          $ref: '#/components/responses/401Unauthorized'\n        '403':\n          $ref: '#/components/responses/403Forbidden'\n      tags:\n      - Plates\n    post:\n      summary: Submit new Plate entities to the server\n      description: Submit new Plate entities to the server\n      parameters:\n      - $ref: '#/components/parameters/authorizationHeader'\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: array\n              items:\n                $ref: '#/components/schemas/PlateNewRequest'\n      responses:\n        '200':\n          $ref: '#/components/responses/PlateListResponse'\n        '400':\n          $ref: '#/components/responses/400BadRequest'\n        '401':\n          $ref: '#/components/responses/401Unauthorized'\n        '403':\n          $ref: '#/components/responses/403Forbidden'\n      tags:\n      - Plates\n    put:\n      summary: Update the details of existing Plates\n      description: Update the details of existing Plates\n      parameters:\n      - $ref: '#/components/parameters/authorizationHeader'\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              additionalProperties:\n                $ref: '#/components/schemas/PlateNewRequest'\n              example:\n                '<plateDbId_1>':\n                  additionalInfo: {}\n                  externalReferences: []\n                  plateName: Plate_alpha_20191022\n                  plateBarcode: 3a027b59\n                  plateFormat: PLATE_96\n                  sampleType: Tissue\n                  studyDbId: 64bd6bf9\n                  trialDbId: d34c5349\n                  programDbId: bd748e00\n                '<plateDbId_2>':\n                  additionalInfo: {}\n                  externalReferences: []\n                  plateName: Plate_alpha_20191022\n                  plateBarcode: 27b593a0\n                  plateFormat: PLATE_96\n                  sampleType: Tissue\n                  studyDbId: 64bd6bf9\n                  trialDbId: d34c5349\n                  programDbId: bd748e00\n      responses:\n        '200':\n          $ref: '#/components/responses/PlateListResponse'\n        '400':\n          $ref: '#/components/responses/400BadRequest'\n        '401':\n          $ref: '#/components/responses/401Unauthorized'\n        '403':\n          $ref: '#/components/responses/403Forbidden'\n        '404':\n          $ref: '#/components/responses/404NotFound'\n      tags:\n      - Plates\ncomponents:\n  responses:\n    PlateListResponse:\n      content:\n        application/json:\n          schema:\n            title: PlateListResponse\n            type: object\n            properties:\n              '@context':\n                $ref: '#/components/schemas/Context'\n              metadata:\n                $ref: '#/components/schemas/metadata'\n              result:\n                properties:\n                  data:\n                    items:\n                      $ref: '#/components/schemas/Plate'\n                    type: array\n                required:\n                - data\n                type: object\n            required:\n            - metadata\n            - result\n      description: OK\n      headers: {}\n      \n",
			"canonicalURL": "/github.com/plantbreeding/BrAPI@a45723dba8753a1c1177ec8f7759d57ebcf5f5b1/-/blob/Specification/BrAPI-Genotyping/Plates/Plates_GET_POST_PUT.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/plantbreeding/BrAPI/blob/a45723dba8753a1c1177ec8f7759d57ebcf5f5b1/Specification/BrAPI-Genotyping/Plates/Plates_GET_POST_PUT.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "parse: parse spec: parse components: at 1:15: responses: \"PlateListResponse\": at 1:49: content: application/json: at 1:80: schema: at 1:90: parse schema: property \"@context\": at 1:116: parse schema: resolve \"#/components/schemas/Context\": find schema: resolve \"#/components/schemas/Context\": can't find value for \"components/schemas/Context\""
}