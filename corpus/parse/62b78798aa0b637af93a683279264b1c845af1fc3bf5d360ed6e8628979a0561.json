{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/restful-ma/thresholds"
		},
		"file": {
			"name": "rottentomatoes.com-1.0-swagger.yaml",
			"size": 0,
			"path": "benchmark-repository/openapi/rottentomatoes.com-1.0-swagger.yaml",
			"byteSize": 15444,
			"content": "openapi: 3.0.0\ninfo:\n  contact:\n    email: mike.ralphson@gmail.com\n    name: Mike Ralphson\n    url: https://github.com/mermade/mashery2openapi\n  description: Test our API services using I/O Docs.\n  license:\n    name: MIT\n    url: https://opensource.org/licenses/MIT\n  title: Rotten Tomatoes\n  version: \"1.0\"\n  x-apisguru-categories:\n    - media\n  x-logo:\n    url: https://twitter.com/RottenTomatoes/profile_image?size=original\n  x-mashery-id: \"1217\"\n  x-origin:\n    - format: swagger\n      url: https://raw.githubusercontent.com/Mermade/openapi_specifications/master/mashery/api.rottentomatoes.com/Rotten-Tomatoes/1.0/swagger.json\n      version: \"2.0\"\n  x-providerName: rottentomatoes.com\n  x-unofficialSpec: true\nexternalDocs:\n  description: You can also view our written documentation.\n  url: http://developer.rottentomatoes.com/io-docs/docs\nsecurity:\n  - key: []\ntags:\n  - name: Movie Lists\n  - name: DVD Lists\n  - name: Detailed Info\n  - name: Search\n  - name: Top Level Lists\npaths:\n  /lists.json:\n    get:\n      operationId: ListsDirectoryTopLevelLists\n      responses:\n        \"200\":\n          description: Success\n        \"400\":\n          description: Bad Request\n        \"403\":\n          description: Forbidden\n      summary: \"\"\n      tags:\n        - Top Level Lists\n  /lists/dvds.json:\n    get:\n      operationId: DVDListsDirectoryTopLevelLists\n      responses:\n        \"200\":\n          description: Success\n        \"400\":\n          description: Bad Request\n        \"403\":\n          description: Forbidden\n      summary: \"\"\n      tags:\n        - Top Level Lists\n  /lists/dvds/current_releases.json:\n    get:\n      operationId: CurrentReleaseDVDsDVDLists\n      parameters:\n        - description: The amount of new release dvds to show per page\n          in: query\n          name: page_limit\n          required: false\n          schema:\n            type: string\n            default: \"16\"\n        - description: The selected page of current DVD releases\n          in: query\n          name: page\n          required: false\n          schema:\n            type: string\n            default: \"1\"\n        - description: Provides localized data for the selected country (ISO 3166-1\n            alpha-2) if available. Otherwise, returns US data.\n          in: query\n          name: country\n          required: false\n          schema:\n            type: string\n            default: us\n      responses:\n        \"200\":\n          description: Success\n        \"400\":\n          description: Bad Request\n        \"403\":\n          description: Forbidden\n      summary: \"\"\n      tags:\n        - DVD Lists\n  /lists/dvds/new_releases.json:\n    get:\n      operationId: NewReleaseDVDsDVDLists\n      parameters:\n        - description: The amount of new release dvds to show per page\n          in: query\n          name: page_limit\n          required: false\n          schema:\n            type: string\n            default: \"16\"\n        - description: The selected page of new release DVDs\n          in: query\n          name: page\n          required: false\n          schema:\n            type: string\n            default: \"1\"\n        - description: Provides localized data for the selected country (ISO 3166-1\n            alpha-2) if available. Otherwise, returns US data.\n          in: query\n          name: country\n          required: false\n          schema:\n            type: string\n            default: us\n      responses:\n        \"200\":\n          description: Success\n        \"400\":\n          description: Bad Request\n        \"403\":\n          description: Forbidden\n      summary: \"\"\n      tags:\n        - DVD Lists\n  /lists/dvds/top_rentals.json:\n    get:\n      operationId: TopRentalsDVDLists\n      parameters:\n        - description: Limits the number of top rentals returned\n          in: query\n          name: limit\n          required: false\n          schema:\n            type: string\n            default: \"10\"\n        - description: Provides localized data for the selected country (ISO 3166-1\n            alpha-2) if available. Otherwise, returns US data.\n          in: query\n          name: country\n          required: false\n          schema:\n            type: string\n            default: us\n      responses:\n        \"200\":\n          description: Success\n        \"400\":\n          description: Bad Request\n        \"403\":\n          description: Forbidden\n      summary: \"\"\n      tags:\n        - DVD Lists\n  /lists/dvds/upcoming.json:\n    get:\n      operationId: UpcomingDVDsDVDLists\n      parameters:\n        - description: The amount of upcoming dvds to show per page\n          in: query\n          name: page_limit\n          required: false\n          schema:\n            type: string\n            default: \"16\"\n        - description: The selected page of upcoming DVDs\n          in: query\n          name: page\n          required: false\n          schema:\n            type: string\n            default: \"1\"\n        - description: Provides localized data for the selected country (ISO 3166-1\n            alpha-2) if available. Otherwise, returns US data.\n          in: query\n          name: country\n          required: false\n          schema:\n            type: string\n            default: us\n      responses:\n        \"200\":\n          description: Success\n        \"400\":\n          description: Bad Request\n        \"403\":\n          description: Forbidden\n      summary: \"\"\n      tags:\n        - DVD Lists\n  /lists/movies.json:\n    get:\n      operationId: MovieListsDirectoryTopLevelLists\n      responses:\n        \"200\":\n          description: Success\n        \"400\":\n          description: Bad Request\n        \"403\":\n          description: Forbidden\n      summary: \"\"\n      tags:\n        - Top Level Lists\n  /lists/movies/box_office.json:\n    get:\n      operationId: BoxOfficeMovieLists\n      parameters:\n        - description: Limits the number of movies returned\n          in: query\n          name: limit\n          required: false\n          schema:\n            type: string\n            default: \"16\"\n        - description: Provides localized data for the selected country (ISO 3166-1\n            alpha-2) if available. Otherwise, returns US data.\n          in: query\n          name: country\n          required: false\n          schema:\n            type: string\n            default: us\n      responses:\n        \"200\":\n          description: Success\n        \"400\":\n          description: Bad Request\n        \"403\":\n          description: Forbidden\n      summary: \"\"\n      tags:\n        - Movie Lists\n  /lists/movies/in_theaters.json:\n    get:\n      operationId: InTheatersMovieLists\n      parameters:\n        - description: The amount of movies in theaters to show per page\n          in: query\n          name: page_limit\n          required: false\n          schema:\n            type: string\n            default: \"16\"\n        - description: The selected page of in theaters movies\n          in: query\n          name: page\n          required: false\n          schema:\n            type: string\n            default: \"1\"\n        - description: Provides localized data for the selected country (ISO 3166-1\n            alpha-2) if available. Otherwise, returns US data.\n          in: query\n          name: country\n          required: false\n          schema:\n            type: string\n            default: us\n      responses:\n        \"200\":\n          description: Success\n        \"400\":\n          description: Bad Request\n        \"403\":\n          description: Forbidden\n      summary: \"\"\n      tags:\n        - Movie Lists\n  /lists/movies/opening.json:\n    get:\n      operationId: OpeningMoviesMovieLists\n      parameters:\n        - description: Limits the number of opening movies returned\n          in: query\n          name: limit\n          required: false\n          schema:\n            type: string\n            default: \"16\"\n        - description: Provides localized data for the selected country (ISO 3166-1\n            alpha-2) if available. Otherwise, returns US data.\n          in: query\n          name: country\n          required: false\n          schema:\n            type: string\n            default: us\n      responses:\n        \"200\":\n          description: Success\n        \"400\":\n          description: Bad Request\n        \"403\":\n          description: Forbidden\n      summary: \"\"\n      tags:\n        - Movie Lists\n  /lists/movies/upcoming.json:\n    get:\n      operationId: UpcomingMoviesMovieLists\n      parameters:\n        - description: The amount of upcoming movies to show per page\n          in: query\n          name: page_limit\n          required: false\n          schema:\n            type: string\n            default: \"16\"\n        - description: The selected page of upcoming movies\n          in: query\n          name: page\n          required: false\n          schema:\n            type: string\n            default: \"1\"\n        - description: Provides localized data for the selected country (ISO 3166-1\n            alpha-2) if available. Otherwise, returns US data.\n          in: query\n          name: country\n          required: false\n          schema:\n            type: string\n            default: us\n      responses:\n        \"200\":\n          description: Success\n        \"400\":\n          description: Bad Request\n        \"403\":\n          description: Forbidden\n      summary: \"\"\n      tags:\n        - Movie Lists\n  /movie_alias.json:\n    get:\n      operationId: MoviesAliasDetailedInfo\n      parameters:\n        - description: Movie ID. You can use the movies search endpoint or peruse the lists\n            of movies/dvds to get the Movie ID\n          in: query\n          name: id\n          required: false\n          schema:\n            type: string\n            default: 31381\n        - description: Only supports imdb lookup at this time\n          in: query\n          name: type\n          required: false\n          schema:\n            type: string\n            default: imdb\n      responses:\n        \"200\":\n          description: Success\n        \"400\":\n          description: Bad Request\n        \"403\":\n          description: Forbidden\n      summary: \"\"\n      tags:\n        - Detailed Info\n  /movies.json:\n    get:\n      operationId: MoviesSearchSearch\n      parameters:\n        - description: The plain text search query to search for a movie. Remember to URI\n            encode this!\n          in: query\n          name: q\n          required: false\n          schema:\n            type: string\n        - description: The amount of movie search results to show per page\n          in: query\n          name: page_limit\n          required: false\n          schema:\n            type: string\n            default: \"10\"\n        - description: The selected page of movie search results\n          in: query\n          name: page\n          required: false\n          schema:\n            type: string\n            default: \"1\"\n      responses:\n        \"200\":\n          description: Success\n        \"400\":\n          description: Bad Request\n        \"403\":\n          description: Forbidden\n      summary: \"\"\n      tags:\n        - Search\n  \"/movies/{id}.json\":\n    get:\n      operationId: MoviesInfoDetailedInfo\n      parameters:\n        - description: Movie ID. You can use the movies search endpoint or peruse the lists\n            of movies/dvds to get the Movie ID\n          in: path\n          name: id\n          required: true\n          schema:\n            type: string\n            default: \"770672122\"\n      responses:\n        \"200\":\n          description: Success\n        \"400\":\n          description: Bad Request\n        \"403\":\n          description: Forbidden\n      summary: \"\"\n      tags:\n        - Detailed Info\n  \"/movies/{id}/cast.json\":\n    get:\n      operationId: CastInfoDetailedInfo\n      parameters:\n        - description: Movie ID. You can use the movies search endpoint or peruse the lists\n            of movies/dvds to get the Movie ID\n          in: path\n          name: id\n          required: true\n          schema:\n            type: string\n            default: \"770672122\"\n      responses:\n        \"200\":\n          description: Success\n        \"400\":\n          description: Bad Request\n        \"403\":\n          description: Forbidden\n      summary: \"\"\n      tags:\n        - Detailed Info\n  \"/movies/{id}/clips.json\":\n    get:\n      operationId: MovieClipsDetailedInfo\n      parameters:\n        - description: Movie ID. You can use the movies search endpoint or peruse the lists\n            of movies/dvds to get the Movie ID\n          in: path\n          name: id\n          required: true\n          schema:\n            type: string\n            default: \"770672122\"\n      responses:\n        \"200\":\n          description: Success\n        \"400\":\n          description: Bad Request\n        \"403\":\n          description: Forbidden\n      summary: \"\"\n      tags:\n        - Detailed Info\n  \"/movies/{id}/reviews.json\":\n    get:\n      operationId: MoviesReviewsDetailedInfo\n      parameters:\n        - description: Movie ID. You can use the movies search endpoint or peruse the lists\n            of movies/dvds to get the Movie ID\n          in: path\n          name: id\n          required: true\n          schema:\n            type: string\n            default: \"770672122\"\n        - description: \"3 different review types are possible: 'all', 'top_critic' and\n            'dvd'. 'top_critic' shows all the Rotten Tomatoes designated top\n            critics. 'dvd' pulls the reviews given on the DVD of the movie.\n            'all' as the name implies retrieves all reviews.\"\n          in: query\n          name: review_type\n          required: false\n          schema:\n            type: string\n            default: top_critic\n        - description: The number of reviews to show per page\n          in: query\n          name: page_limit\n          required: false\n          schema:\n            type: string\n            default: \"20\"\n        - description: The selected page of reviews\n          in: query\n          name: page\n          required: false\n          schema:\n            type: string\n            default: \"1\"\n        - description: Provides localized data for the selected country (ISO 3166-1\n            alpha-2) if available. Otherwise, returns US data.\n          in: query\n          name: country\n          required: false\n          schema:\n            type: string\n            default: us\n      responses:\n        \"200\":\n          description: Success\n        \"400\":\n          description: Bad Request\n        \"403\":\n          description: Forbidden\n      summary: \"\"\n      tags:\n        - Detailed Info\n  \"/movies/{id}/similar.json\":\n    get:\n      operationId: MoviesSimilarDetailedInfo\n      parameters:\n        - description: Movie ID. You can use the movies search endpoint or peruse the lists\n            of movies/dvds to get the Movie ID\n          in: path\n          name: id\n          required: true\n          schema:\n            type: string\n            default: \"770672122\"\n        - description: Limit the number of similar movies to show\n          in: query\n          name: limit\n          required: false\n          schema:\n            type: string\n            default: \"5\"\n      responses:\n        \"200\":\n          description: Success\n        \"400\":\n          description: Bad Request\n        \"403\":\n          description: Forbidden\n      summary: \"\"\n      tags:\n        - Detailed Info\nservers:\n  - url: http://api.rottentomatoes.com/api/public/v1.0\ncomponents:\n  securitySchemes:\n    key:\n      in: query\n      name: apikey\n      type: apiKey\n",
			"canonicalURL": "/github.com/restful-ma/thresholds@5b0b2a3322d3b2b7c0e0f2c0c0ad0e524e67bf82/-/blob/benchmark-repository/openapi/rottentomatoes.com-1.0-swagger.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/restful-ma/thresholds/blob/5b0b2a3322d3b2b7c0e0f2c0c0ad0e524e67bf82/benchmark-repository/openapi/rottentomatoes.com-1.0-swagger.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "parse: parse spec: parse operations: path \"/movie_alias.json\": get: operation \"MoviesAliasDetailedInfo\": parameters: parse parameter \"id\": schema: at 1:7550: parse default: expected type \"string\", got \"number\""
}