{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/cockroachdb/cockroach-cloud-sdk-go"
		},
		"file": {
			"name": "openapi.json",
			"size": 0,
			"path": "internal/spec/openapi.json",
			"byteSize": 196059,
			"content": "{\n  \"openapi\": \"3.0.0\",\n  \"info\": {\n    \"contact\": {\n      \"email\": \"support@cockroachlabs.com\",\n      \"name\": \"Cockroach Labs Support\",\n      \"url\": \"https://support.cockroachlabs.com\"\n    },\n    \"description\": \"This is a preview version of the Cloud API. The interface and output is subject to change, and there may be bugs.\",\n    \"title\": \"CockroachDB Cloud API\",\n    \"version\": \"2022-09-20\"\n  },\n  \"servers\": [\n    {\n      \"url\": \"https://cockroachlabs.cloud\"\n    }\n  ],\n  \"paths\": {\n    \"/api/v1/clusters\": {\n      \"get\": {\n        \"operationId\": \"CockroachCloud_ListClusters\",\n        \"summary\": \"List clusters owned by an organization\",\n        \"description\": \"Sort order: Cluster name\",\n        \"parameters\": [\n          {\n            \"name\": \"show_inactive\",\n            \"in\": \"query\",\n            \"description\": \"If `true`, show clusters that have been deleted or failed to initialize.\",\n            \"schema\": {\n              \"type\": \"boolean\",\n              \"default\": \"false\"\n            }\n          },\n          {\n            \"name\": \"pagination.page\",\n            \"in\": \"query\",\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"pagination.limit\",\n            \"in\": \"query\",\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\"\n            }\n          },\n          {\n            \"name\": \"pagination.as_of_time\",\n            \"in\": \"query\",\n            \"schema\": {\n              \"type\": \"string\",\n              \"format\": \"date-time\"\n            }\n          },\n          {\n            \"name\": \"pagination.sort_order\",\n            \"in\": \"query\",\n            \"description\": \" - DESC: Sort in descending order. The default order is ascending.\",\n            \"schema\": {\n              \"type\": \"string\",\n              \"enum\": [\n                \"ASC\",\n                \"DESC\"\n              ]\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"A successful response.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ListClustersResponse\"\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"description\": \"Returned when a request field is invalid.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {}\n              }\n            }\n          },\n          \"401\": {\n            \"description\": \"Returned when the token bearer cannot be authenticated.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {}\n              }\n            }\n          },\n          \"403\": {\n            \"description\": \"Returned when the user does not have permission to access the resource.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {}\n              }\n            }\n          },\n          \"404\": {\n            \"description\": \"Returned when the resource does not exist.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {}\n              }\n            }\n          },\n          \"500\": {\n            \"description\": \"Server error\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {}\n              }\n            }\n          },\n          \"default\": {\n            \"description\": \"An unexpected error response.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Status\"\n                }\n              }\n            }\n          }\n        },\n        \"tags\": [\n          \"CockroachCloud\"\n        ],\n        \"x-codeSamples\": [\n          {\n            \"lang\": \"Shell + Curl\",\n            \"source\": \"curl --request GET \\\\\\n  --url 'https://cockroachlabs.cloud/api/v1/clusters?show_inactive=SOME_BOOLEAN_VALUE\u0026pagination.page=SOME_STRING_VALUE\u0026pagination.limit=SOME_INTEGER_VALUE\u0026pagination.as_of_time=SOME_STRING_VALUE\u0026pagination.sort_order=SOME_STRING_VALUE' \\\\\\n  --header 'Authorization: Bearer REPLACE_BEARER_TOKEN'\"\n          }\n        ]\n      },\n      \"post\": {\n        \"operationId\": \"CockroachCloud_CreateCluster\",\n        \"summary\": \"Create and initialize a new cluster\",\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/CreateClusterRequest\"\n              }\n            }\n          },\n          \"required\": true\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"A successful response.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Cluster\"\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"description\": \"Returned when a request field is invalid.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {}\n              }\n            }\n          },\n          \"401\": {\n            \"description\": \"Returned when the token bearer cannot be authenticated.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {}\n              }\n            }\n          },\n          \"403\": {\n            \"description\": \"Returned when the user does not have permission to access the resource.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {}\n              }\n            }\n          },\n          \"404\": {\n            \"description\": \"Returned when the resource does not exist.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {}\n              }\n            }\n          },\n          \"500\": {\n            \"description\": \"Server error\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {}\n              }\n            }\n          },\n          \"default\": {\n            \"description\": \"An unexpected error response.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Status\"\n                }\n              }\n            }\n          }\n        },\n        \"tags\": [\n          \"CockroachCloud\"\n        ],\n        \"x-codeSamples\": [\n          {\n            \"lang\": \"Shell + Curl\",\n            \"source\": \"curl --request POST \\\\\\n  --url https://cockroachlabs.cloud/api/v1/clusters \\\\\\n  --header 'Authorization: Bearer REPLACE_BEARER_TOKEN' \\\\\\n  --header 'content-type: application/json' \\\\\\n  --data '{\\\"name\\\":\\\"test-cluster\\\",\\\"provider\\\":\\\"GCP\\\",\\\"spec\\\":{\\\"serverless\\\":{\\\"regions\\\":[\\\"us-central1\\\"],\\\"spend_limit\\\":0}}}'\"\n          }\n        ]\n      }\n    },\n    \"/api/v1/clusters/available-regions\": {\n      \"get\": {\n        \"operationId\": \"CockroachCloud_ListAvailableRegions\",\n        \"summary\": \"List the regions available for new clusters and nodes\",\n        \"description\": \"Sort order: Distance (based on client IP address)\",\n        \"parameters\": [\n          {\n            \"name\": \"provider\",\n            \"in\": \"query\",\n            \"description\": \"Optional CloudProvider for filtering.\\n\\n - GCP: The Google Cloud Platform cloud provider.\\n - AWS: The Amazon Web Services cloud provider.\",\n            \"schema\": {\n              \"type\": \"string\",\n              \"enum\": [\n                \"GCP\",\n                \"AWS\"\n              ]\n            }\n          },\n          {\n            \"name\": \"serverless\",\n            \"in\": \"query\",\n            \"description\": \"Optional filter to only show regions available for serverless clusters.\",\n            \"schema\": {\n              \"type\": \"boolean\",\n              \"default\": \"false\"\n            }\n          },\n          {\n            \"name\": \"pagination.page\",\n            \"in\": \"query\",\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"pagination.limit\",\n            \"in\": \"query\",\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\"\n            }\n          },\n          {\n            \"name\": \"pagination.as_of_time\",\n            \"in\": \"query\",\n            \"schema\": {\n              \"type\": \"string\",\n              \"format\": \"date-time\"\n            }\n          },\n          {\n            \"name\": \"pagination.sort_order\",\n            \"in\": \"query\",\n            \"description\": \" - DESC: Sort in descending order. The default order is ascending.\",\n            \"schema\": {\n              \"type\": \"string\",\n              \"enum\": [\n                \"ASC\",\n                \"DESC\"\n              ]\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"A successful response.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ListAvailableRegionsResponse\"\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"description\": \"Returned when a request field is invalid.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {}\n              }\n            }\n          },\n          \"401\": {\n            \"description\": \"Returned when the token bearer cannot be authenticated.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {}\n              }\n            }\n          },\n          \"403\": {\n            \"description\": \"Returned when the user does not have permission to access the resource.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {}\n              }\n            }\n          },\n          \"404\": {\n            \"description\": \"Returned when the resource does not exist.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {}\n              }\n            }\n          },\n          \"500\": {\n            \"description\": \"Server error\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {}\n              }\n            }\n          },\n          \"default\": {\n            \"description\": \"An unexpected error response.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Status\"\n                }\n              }\n            }\n          }\n        },\n        \"tags\": [\n          \"CockroachCloud\"\n        ],\n        \"x-codeSamples\": [\n          {\n            \"lang\": \"Shell + Curl\",\n            \"source\": \"curl --request GET \\\\\\n  --url 'https://cockroachlabs.cloud/api/v1/clusters/available-regions?provider=SOME_STRING_VALUE\u0026serverless=SOME_BOOLEAN_VALUE\u0026pagination.page=SOME_STRING_VALUE\u0026pagination.limit=SOME_INTEGER_VALUE\u0026pagination.as_of_time=SOME_STRING_VALUE\u0026pagination.sort_order=SOME_STRING_VALUE' \\\\\\n  --header 'Authorization: Bearer REPLACE_BEARER_TOKEN'\"\n          }\n        ]\n      }\n    },\n    \"/api/v1/clusters/{cluster_id}\": {\n      \"delete\": {\n        \"operationId\": \"CockroachCloud_DeleteCluster\",\n        \"summary\": \"Delete a cluster and all of its data\",\n        \"parameters\": [\n          {\n            \"name\": \"cluster_id\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"A successful response.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Cluster\"\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"description\": \"Returned when a request field is invalid.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {}\n              }\n            }\n          },\n          \"401\": {\n            \"description\": \"Returned when the token bearer cannot be authenticated.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {}\n              }\n            }\n          },\n          \"403\": {\n            \"description\": \"Returned when the user does not have permission to access the resource.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {}\n              }\n            }\n          },\n          \"404\": {\n            \"description\": \"Returned when the resource does not exist.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {}\n              }\n            }\n          },\n          \"500\": {\n            \"description\": \"Server error\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {}\n              }\n            }\n          },\n          \"default\": {\n            \"description\": \"An unexpected error response.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Status\"\n                }\n              }\n            }\n          }\n        },\n        \"tags\": [\n          \"CockroachCloud\"\n        ],\n        \"x-codeSamples\": [\n          {\n            \"lang\": \"Shell + Curl\",\n            \"source\": \"curl --request DELETE \\\\\\n  --url https://cockroachlabs.cloud/api/v1/clusters/{cluster_id} \\\\\\n  --header 'Authorization: Bearer REPLACE_BEARER_TOKEN'\"\n          }\n        ]\n      },\n      \"get\": {\n        \"operationId\": \"CockroachCloud_GetCluster\",\n        \"summary\": \"Get extended information about a cluster\",\n        \"parameters\": [\n          {\n            \"name\": \"cluster_id\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"A successful response.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Cluster\"\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"description\": \"Returned when a request field is invalid.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {}\n              }\n            }\n          },\n          \"401\": {\n            \"description\": \"Returned when the token bearer cannot be authenticated.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {}\n              }\n            }\n          },\n          \"403\": {\n            \"description\": \"Returned when the user does not have permission to access the resource.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {}\n              }\n            }\n          },\n          \"404\": {\n            \"description\": \"Returned when the resource does not exist.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {}\n              }\n            }\n          },\n          \"500\": {\n            \"description\": \"Server error\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {}\n              }\n            }\n          },\n          \"default\": {\n            \"description\": \"An unexpected error response.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Status\"\n                }\n              }\n            }\n          }\n        },\n        \"tags\": [\n          \"CockroachCloud\"\n        ],\n        \"x-codeSamples\": [\n          {\n            \"lang\": \"Shell + Curl\",\n            \"source\": \"curl --request GET \\\\\\n  --url https://cockroachlabs.cloud/api/v1/clusters/{cluster_id} \\\\\\n  --header 'Authorization: Bearer REPLACE_BEARER_TOKEN'\"\n          }\n        ]\n      },\n      \"patch\": {\n        \"operationId\": \"CockroachCloud_UpdateCluster\",\n        \"summary\": \"Scale or edit a cluster\",\n        \"parameters\": [\n          {\n            \"name\": \"cluster_id\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"field_mask\",\n            \"in\": \"query\",\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/UpdateClusterSpecification\"\n              }\n            }\n          },\n          \"required\": true\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"A successful response.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Cluster\"\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"description\": \"Returned when a request field is invalid.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {}\n              }\n            }\n          },\n          \"401\": {\n            \"description\": \"Returned when the token bearer cannot be authenticated.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {}\n              }\n            }\n          },\n          \"403\": {\n            \"description\": \"Returned when the user does not have permission to access the resource.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {}\n              }\n            }\n          },\n          \"404\": {\n            \"description\": \"Returned when the resource does not exist.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {}\n              }\n            }\n          },\n          \"500\": {\n            \"description\": \"Server error\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {}\n              }\n            }\n          },\n          \"default\": {\n            \"description\": \"An unexpected error response.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Status\"\n                }\n              }\n            }\n          }\n        },\n        \"tags\": [\n          \"CockroachCloud\"\n        ],\n        \"x-codeSamples\": [\n          {\n            \"lang\": \"Shell + Curl\",\n            \"source\": \"curl --request PATCH \\\\\\n  --url 'https://cockroachlabs.cloud/api/v1/clusters/{cluster_id}?field_mask=SOME_STRING_VALUE' \\\\\\n  --header 'Authorization: Bearer REPLACE_BEARER_TOKEN' \\\\\\n  --header 'content-type: application/json' \\\\\\n  --data '{\\\"dedicated\\\":{\\\"hardware\\\":{\\\"machine_type\\\":\\\"n2-standard-8\\\"},\\\"region_nodes\\\":{\\\"us-central1\\\":5,\\\"us-west1\\\":3}}}'\"\n          }\n        ]\n      }\n    },\n    \"/api/v1/clusters/{cluster_id}/cmek\": {\n      \"get\": {\n        \"operationId\": \"CockroachCloud_GetCMEKClusterInfo\",\n        \"summary\": \"Get CMEK-related information for a cluster\",\n        \"parameters\": [\n          {\n            \"name\": \"cluster_id\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"A successful response.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/CMEKClusterInfo\"\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"description\": \"Returned when a request field is invalid.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {}\n              }\n            }\n          },\n          \"401\": {\n            \"description\": \"Returned when the token bearer cannot be authenticated.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {}\n              }\n            }\n          },\n          \"403\": {\n            \"description\": \"Returned when the user does not have permission to access the resource.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {}\n              }\n            }\n          },\n          \"404\": {\n            \"description\": \"Returned when the resource does not exist.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {}\n              }\n            }\n          },\n          \"500\": {\n            \"description\": \"Server error\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {}\n              }\n            }\n          },\n          \"default\": {\n            \"description\": \"An unexpected error response.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Status\"\n                }\n              }\n            }\n          }\n        },\n        \"tags\": [\n          \"CockroachCloud\"\n        ],\n        \"x-codeSamples\": [\n          {\n            \"lang\": \"Shell + Curl\",\n            \"source\": \"curl --request GET \\\\\\n  --url https://cockroachlabs.cloud/api/v1/clusters/{cluster_id}/cmek \\\\\\n  --header 'Authorization: Bearer REPLACE_BEARER_TOKEN'\"\n          }\n        ]\n      },\n      \"patch\": {\n        \"operationId\": \"CockroachCloud_UpdateCMEKStatus\",\n        \"summary\": \"Update the CMEK-related status for a cluster\",\n        \"parameters\": [\n          {\n            \"name\": \"cluster_id\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"type\": \"object\",\n                \"properties\": {\n                  \"action\": {\n                    \"$ref\": \"#/components/schemas/CMEKCustomerAction\"\n                  }\n                },\n                \"example\": {\n                  \"action\": \"REVOKE\"\n                },\n                \"required\": [\n                  \"action\"\n                ],\n                \"title\": \"UpdateCMEKStatusRequest\"\n              }\n            }\n          },\n          \"required\": true\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"A successful response.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/CMEKClusterInfo\"\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"description\": \"Returned when a request field is invalid.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {}\n              }\n            }\n          },\n          \"401\": {\n            \"description\": \"Returned when the token bearer cannot be authenticated.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {}\n              }\n            }\n          },\n          \"403\": {\n            \"description\": \"Returned when the user does not have permission to access the resource.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {}\n              }\n            }\n          },\n          \"404\": {\n            \"description\": \"Returned when the resource does not exist.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {}\n              }\n            }\n          },\n          \"500\": {\n            \"description\": \"Server error\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {}\n              }\n            }\n          },\n          \"default\": {\n            \"description\": \"An unexpected error response.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Status\"\n                }\n              }\n            }\n          }\n        },\n        \"tags\": [\n          \"CockroachCloud\"\n        ],\n        \"x-codeSamples\": [\n          {\n            \"lang\": \"Shell + Curl\",\n            \"source\": \"curl --request PATCH \\\\\\n  --url https://cockroachlabs.cloud/api/v1/clusters/{cluster_id}/cmek \\\\\\n  --header 'Authorization: Bearer REPLACE_BEARER_TOKEN' \\\\\\n  --header 'content-type: application/json' \\\\\\n  --data '{\\\"action\\\":\\\"REVOKE\\\"}'\"\n          }\n        ]\n      },\n      \"post\": {\n        \"operationId\": \"CockroachCloud_EnableCMEKSpec\",\n        \"summary\": \"Enable CMEK for a cluster\",\n        \"parameters\": [\n          {\n            \"name\": \"cluster_id\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"type\": \"object\",\n                \"properties\": {\n                  \"region_specs\": {\n                    \"type\": \"array\",\n                    \"items\": {\n                      \"$ref\": \"#/components/schemas/CMEKRegionSpecification\"\n                    }\n                  }\n                },\n                \"example\": {\n                  \"region_specs\": [\n                    {\n                      \"key_spec\": {\n                        \"auth_principal\": \"arn:aws:iam::account:role/role-name-with-path\",\n                        \"type\": \"AWS_KMS\",\n                        \"uri\": \"arn:aws:kms:us-west-2:111122223333:key/id-of-kms-key\"\n                      },\n                      \"region\": \"us-central1\"\n                    }\n                  ]\n                },\n                \"required\": [\n                  \"region_specs\"\n                ],\n                \"title\": \"CMEKClusterSpecification\"\n              }\n            }\n          },\n          \"required\": true\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"A successful response.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/CMEKClusterInfo\"\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"description\": \"Returned when a request field is invalid.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {}\n              }\n            }\n          },\n          \"401\": {\n            \"description\": \"Returned when the token bearer cannot be authenticated.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {}\n              }\n            }\n          },\n          \"403\": {\n            \"description\": \"Returned when the user does not have permission to access the resource.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {}\n              }\n            }\n          },\n          \"404\": {\n            \"description\": \"Returned when the resource does not exist.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {}\n              }\n            }\n          },\n          \"500\": {\n            \"description\": \"Server error\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {}\n              }\n            }\n          },\n          \"default\": {\n            \"description\": \"An unexpected error response.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Status\"\n                }\n              }\n            }\n          }\n        },\n        \"tags\": [\n          \"CockroachCloud\"\n        ],\n        \"x-codeSamples\": [\n          {\n            \"lang\": \"Shell + Curl\",\n            \"source\": \"curl --request POST \\\\\\n  --url https://cockroachlabs.cloud/api/v1/clusters/{cluster_id}/cmek \\\\\\n  --header 'Authorization: Bearer REPLACE_BEARER_TOKEN' \\\\\\n  --data '{\\\"region_specs\\\":[{\\\"key_spec\\\":{\\\"auth_principal\\\":\\\"arn:aws:iam::account:role/role-name-with-path\\\",\\\"type\\\":\\\"AWS_KMS\\\",\\\"uri\\\":\\\"arn:aws:kms:us-west-2:111122223333:key/id-of-kms-key\\\"},\\\"region\\\":\\\"us-central1\\\"}]}'\"\n          }\n        ]\n      },\n      \"put\": {\n        \"operationId\": \"CockroachCloud_UpdateCMEKSpec\",\n        \"summary\": \"Enable or update the CMEK spec for a cluster\",\n        \"parameters\": [\n          {\n            \"name\": \"cluster_id\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"type\": \"object\",\n                \"properties\": {\n                  \"region_specs\": {\n                    \"type\": \"array\",\n                    \"items\": {\n                      \"$ref\": \"#/components/schemas/CMEKRegionSpecification\"\n                    }\n                  }\n                },\n                \"example\": {\n                  \"region_specs\": [\n                    {\n                      \"key_spec\": {\n                        \"auth_principal\": \"arn:aws:iam::account:role/role-name-with-path\",\n                        \"type\": \"AWS_KMS\",\n                        \"uri\": \"arn:aws:kms:us-west-2:111122223333:key/id-of-kms-key\"\n                      },\n                      \"region\": \"us-central1\"\n                    }\n                  ]\n                },\n                \"required\": [\n                  \"region_specs\"\n                ],\n                \"title\": \"CMEKClusterSpecification\"\n              }\n            }\n          },\n          \"required\": true\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"A successful response.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/CMEKClusterInfo\"\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"description\": \"Returned when a request field is invalid.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {}\n              }\n            }\n          },\n          \"401\": {\n            \"description\": \"Returned when the token bearer cannot be authenticated.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {}\n              }\n            }\n          },\n          \"403\": {\n            \"description\": \"Returned when the user does not have permission to access the resource.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {}\n              }\n            }\n          },\n          \"404\": {\n            \"description\": \"Returned when the resource does not exist.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {}\n              }\n            }\n          },\n          \"500\": {\n            \"description\": \"Server error\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {}\n              }\n            }\n          },\n          \"default\": {\n            \"description\": \"An unexpected error response.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Status\"\n                }\n              }\n            }\n          }\n        },\n        \"tags\": [\n          \"CockroachCloud\"\n        ],\n        \"x-codeSamples\": [\n          {\n            \"lang\": \"Shell + Curl\",\n            \"source\": \"curl --request PUT \\\\\\n  --url https://cockroachlabs.cloud/api/v1/clusters/{cluster_id}/cmek \\\\\\n  --header 'Authorization: Bearer REPLACE_BEARER_TOKEN' \\\\\\n  --data '{\\\"region_specs\\\":[{\\\"key_spec\\\":{\\\"auth_principal\\\":\\\"arn:aws:iam::account:role/role-name-with-path\\\",\\\"type\\\":\\\"AWS_KMS\\\",\\\"uri\\\":\\\"arn:aws:kms:us-west-2:111122223333:key/id-of-kms-key\\\"},\\\"region\\\":\\\"us-central1\\\"}]}'\"\n          }\n        ]\n      }\n    },\n    \"/api/v1/clusters/{cluster_id}/databases\": {\n      \"get\": {\n        \"operationId\": \"CockroachCloud_ListDatabases\",\n        \"summary\": \"List databases for a cluster\",\n        \"description\": \"Sort order: Database name ascending\",\n        \"parameters\": [\n          {\n            \"name\": \"cluster_id\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"pagination.page\",\n            \"in\": \"query\",\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"pagination.limit\",\n            \"in\": \"query\",\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\"\n            }\n          },\n          {\n            \"name\": \"pagination.as_of_time\",\n            \"in\": \"query\",\n            \"schema\": {\n              \"type\": \"string\",\n              \"format\": \"date-time\"\n            }\n          },\n          {\n            \"name\": \"pagination.sort_order\",\n            \"in\": \"query\",\n            \"description\": \" - DESC: Sort in descending order. The default order is ascending.\",\n            \"schema\": {\n              \"type\": \"string\",\n              \"enum\": [\n                \"ASC\",\n                \"DESC\"\n              ]\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"A successful response.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/api.ListDatabasesResponse\"\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"description\": \"Returned when a request field is invalid.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {}\n              }\n            }\n          },\n          \"401\": {\n            \"description\": \"Returned when the token bearer cannot be authenticated.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {}\n              }\n            }\n          },\n          \"403\": {\n            \"description\": \"Returned when the user does not have permission to access the resource.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {}\n              }\n            }\n          },\n          \"404\": {\n            \"description\": \"Returned when the resource does not exist.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {}\n              }\n            }\n          },\n          \"500\": {\n            \"description\": \"Server error\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {}\n              }\n            }\n          },\n          \"default\": {\n            \"description\": \"An unexpected error response.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Status\"\n                }\n              }\n            }\n          }\n        },\n        \"tags\": [\n          \"CockroachCloud\"\n        ],\n        \"x-badges\": [\n          {\n            \"color\": \"blue\",\n            \"label\": \"PREVIEW\"\n          }\n        ],\n        \"x-codeSamples\": [\n          {\n            \"lang\": \"Shell + Curl\",\n            \"source\": \"curl --request GET \\\\\\n  --url 'https://cockroachlabs.cloud/api/v1/clusters/{cluster_id}/databases?pagination.page=SOME_STRING_VALUE\u0026pagination.limit=SOME_INTEGER_VALUE\u0026pagination.as_of_time=SOME_STRING_VALUE\u0026pagination.sort_order=SOME_STRING_VALUE' \\\\\\n  --header 'Authorization: Bearer REPLACE_BEARER_TOKEN'\"\n          }\n        ]\n      },\n      \"patch\": {\n        \"operationId\": \"CockroachCloud_EditDatabase\",\n        \"summary\": \"Update a database\",\n        \"parameters\": [\n          {\n            \"name\": \"cluster_id\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"type\": \"object\",\n                \"properties\": {\n                  \"name\": {\n                    \"type\": \"string\"\n                  },\n                  \"new_name\": {\n                    \"type\": \"string\"\n                  }\n                },\n                \"example\": {\n                  \"new_name\": \"example_new_database_name\"\n                },\n                \"required\": [\n                  \"new_name\",\n                  \"name\"\n                ],\n                \"title\": \"UpdateDatabaseRequest\"\n              }\n            }\n          },\n          \"required\": true\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"A successful response.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/api.Database\"\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"description\": \"Returned when a request field is invalid.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {}\n              }\n            }\n          },\n          \"401\": {\n            \"description\": \"Returned when the token bearer cannot be authenticated.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {}\n              }\n            }\n          },\n          \"403\": {\n            \"description\": \"Returned when the user does not have permission to access the resource.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {}\n              }\n            }\n          },\n          \"404\": {\n            \"description\": \"Returned when the resource does not exist.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {}\n              }\n            }\n          },\n          \"500\": {\n            \"description\": \"Server error\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {}\n              }\n            }\n          },\n          \"default\": {\n            \"description\": \"An unexpected error response.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Status\"\n                }\n              }\n            }\n          }\n        },\n        \"tags\": [\n          \"CockroachCloud\"\n        ],\n        \"x-badges\": [\n          {\n            \"color\": \"blue\",\n            \"label\": \"PREVIEW\"\n          }\n        ],\n        \"x-codeSamples\": [\n          {\n            \"lang\": \"Shell + Curl\",\n            \"source\": \"curl --request PATCH \\\\\\n  --url https://cockroachlabs.cloud/api/v1/clusters/{cluster_id}/databases \\\\\\n  --header 'Authorization: Bearer REPLACE_BEARER_TOKEN' \\\\\\n  --header 'content-type: application/json' \\\\\\n  --data '{\\\"new_name\\\":\\\"example_new_database_name\\\"}'\"\n          }\n        ]\n      },\n      \"post\": {\n        \"operationId\": \"CockroachCloud_CreateDatabase\",\n        \"summary\": \"Create a new database\",\n        \"parameters\": [\n          {\n            \"name\": \"cluster_id\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"type\": \"object\",\n                \"properties\": {\n                  \"name\": {\n                    \"type\": \"string\"\n                  }\n                },\n                \"example\": {\n                  \"name\": \"example_database_name\"\n                },\n                \"required\": [\n                  \"name\"\n                ],\n                \"title\": \"CreateDatabaseRequest\"\n              }\n            }\n          },\n          \"required\": true\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"A successful response.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/api.Database\"\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"description\": \"Returned when a request field is invalid.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {}\n              }\n            }\n          },\n          \"401\": {\n            \"description\": \"Returned when the token bearer cannot be authenticated.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {}\n              }\n            }\n          },\n          \"403\": {\n            \"description\": \"Returned when the user does not have permission to access the resource.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {}\n              }\n            }\n          },\n          \"404\": {\n            \"description\": \"Returned when the resource does not exist.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {}\n              }\n            }\n          },\n          \"500\": {\n            \"description\": \"Server error\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {}\n              }\n            }\n          },\n          \"default\": {\n            \"description\": \"An unexpected error response.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Status\"\n                }\n              }\n            }\n          }\n        },\n        \"tags\": [\n          \"CockroachCloud\"\n        ],\n        \"x-badges\": [\n          {\n            \"color\": \"blue\",\n            \"label\": \"PREVIEW\"\n          }\n        ],\n        \"x-codeSamples\": [\n          {\n            \"lang\": \"Shell + Curl\",\n            \"source\": \"curl --request POST \\\\\\n  --url https://cockroachlabs.cloud/api/v1/clusters/{cluster_id}/databases \\\\\\n  --header 'Authorization: Bearer REPLACE_BEARER_TOKEN' \\\\\\n  --header 'content-type: application/json' \\\\\\n  --data '{\\\"name\\\":\\\"example_database_name\\\"}'\"\n          }\n        ]\n      }\n    },\n    \"/api/v1/clusters/{cluster_id}/databases/{name}\": {\n      \"delete\": {\n        \"operationId\": \"CockroachCloud_DeleteDatabase\",\n        \"summary\": \"Delete a database\",\n        \"parameters\": [\n          {\n            \"name\": \"cluster_id\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"name\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"A successful response.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/api.Database\"\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"description\": \"Returned when a request field is invalid.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {}\n              }\n            }\n          },\n          \"401\": {\n            \"description\": \"Returned when the token bearer cannot be authenticated.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {}\n              }\n            }\n          },\n          \"403\": {\n            \"description\": \"Returned when the user does not have permission to access the resource.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {}\n              }\n            }\n          },\n          \"404\": {\n            \"description\": \"Returned when the resource does not exist.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {}\n              }\n            }\n          },\n          \"500\": {\n            \"description\": \"Server error\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {}\n              }\n            }\n          },\n          \"default\": {\n            \"description\": \"An unexpected error response.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Status\"\n                }\n              }\n            }\n          }\n        },\n        \"tags\": [\n          \"CockroachCloud\"\n        ],\n        \"x-badges\": [\n          {\n            \"color\": \"blue\",\n            \"label\": \"PREVIEW\"\n          }\n        ],\n        \"x-codeSamples\": [\n          {\n            \"lang\": \"Shell + Curl\",\n            \"source\": \"curl --request DELETE \\\\\\n  --url https://cockroachlabs.cloud/api/v1/clusters/{cluster_id}/databases/{name} \\\\\\n  --header 'Authorization: Bearer REPLACE_BEARER_TOKEN'\"\n          }\n        ]\n      }\n    },\n    \"/api/v1/clusters/{cluster_id}/logexport\": {\n      \"delete\": {\n        \"operationId\": \"CockroachCloud_DeleteLogExport\",\n        \"summary\": \"Delete the Log Export configuration for a cluster\",\n        \"parameters\": [\n          {\n            \"name\": \"cluster_id\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"A successful response.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/LogExportClusterInfo\"\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"description\": \"Returned when a request field is invalid.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {}\n              }\n            }\n          },\n          \"401\": {\n            \"description\": \"Returned when the token bearer cannot be authenticated.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {}\n              }\n            }\n          },\n          \"403\": {\n            \"description\": \"Returned when the user does not have permission to access the resource.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {}\n              }\n            }\n          },\n          \"404\": {\n            \"description\": \"Returned when the resource does not exist.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {}\n              }\n            }\n          },\n          \"500\": {\n            \"description\": \"Server error\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {}\n              }\n            }\n          },\n          \"default\": {\n            \"description\": \"An unexpected error response.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Status\"\n                }\n              }\n            }\n          }\n        },\n        \"tags\": [\n          \"CockroachCloud\"\n        ],\n        \"x-badges\": [\n          {\n            \"color\": \"blue\",\n            \"label\": \"PREVIEW\"\n          }\n        ],\n        \"x-codeSamples\": [\n          {\n            \"lang\": \"Shell + Curl\",\n            \"source\": \"curl --request DELETE \\\\\\n  --url https://cockroachlabs.cloud/api/v1/clusters/{cluster_id}/logexport \\\\\\n  --header 'Authorization: Bearer REPLACE_BEARER_TOKEN'\"\n          }\n        ]\n      },\n      \"get\": {\n        \"operationId\": \"CockroachCloud_GetLogExportInfo\",\n        \"summary\": \"Get the Log Export configuration for a cluster\",\n        \"parameters\": [\n          {\n            \"name\": \"cluster_id\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"A successful response.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/LogExportClusterInfo\"\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"description\": \"Returned when a request field is invalid.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {}\n              }\n            }\n          },\n          \"401\": {\n            \"description\": \"Returned when the token bearer cannot be authenticated.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {}\n              }\n            }\n          },\n          \"403\": {\n            \"description\": \"Returned when the user does not have permission to access the resource.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {}\n              }\n            }\n          },\n          \"404\": {\n            \"description\": \"Returned when the resource does not exist.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {}\n              }\n            }\n          },\n          \"500\": {\n            \"description\": \"Server error\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {}\n              }\n            }\n          },\n          \"default\": {\n            \"description\": \"An unexpected error response.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Status\"\n                }\n              }\n            }\n          }\n        },\n        \"tags\": [\n          \"CockroachCloud\"\n        ],\n        \"x-badges\": [\n          {\n            \"color\": \"blue\",\n            \"label\": \"PREVIEW\"\n          }\n        ],\n        \"x-codeSamples\": [\n          {\n            \"lang\": \"Shell + Curl\",\n            \"source\": \"curl --request GET \\\\\\n  --url https://cockroachlabs.cloud/api/v1/clusters/{cluster_id}/logexport \\\\\\n  --header 'Authorization: Bearer REPLACE_BEARER_TOKEN'\"\n          }\n        ]\n      },\n      \"post\": {\n        \"operationId\": \"CockroachCloud_EnableLogExport\",\n        \"summary\": \"Create a Log Export configuration for a cluster\",\n        \"parameters\": [\n          {\n            \"name\": \"cluster_id\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"type\": \"object\",\n                \"properties\": {\n                  \"auth_principal\": {\n                    \"description\": \"auth_principal is either the AWS Role ARN that identifies a role\\nthat the cluster account can assume to write to CloudWatch or the\\nGCP Project ID that the cluster service account has permissions to\\nwrite to for cloud logging.\",\n                    \"type\": \"string\"\n                  },\n                  \"groups\": {\n                    \"description\": \"groups is a collection of log group configurations that allows the\\ncustomer to define collections of CRDB log channels that are aggregated\\nseparately at the target sink.\",\n                    \"type\": \"array\",\n                    \"items\": {\n                      \"$ref\": \"#/components/schemas/LogExportGroup\"\n                    }\n                  },\n                  \"log_name\": {\n                    \"description\": \"log_name is an identifier for the logs in the customer's log sink.\",\n                    \"type\": \"string\"\n                  },\n                  \"redact\": {\n                    \"description\": \"redact allows the customer to set a default redaction policy for\\nlogs before they are exported to the target sink. If a group config\\nomits a redact flag and this one is set to `true`, then that group\\nwill receive redacted logs.\",\n                    \"type\": \"boolean\"\n                  },\n                  \"region\": {\n                    \"description\": \"region allows the customer to override the destination region for\\nall logs for a cluster.\",\n                    \"type\": \"string\"\n                  },\n                  \"type\": {\n                    \"$ref\": \"#/components/schemas/LogExportType\"\n                  }\n                },\n                \"title\": \"EnableLogExportRequest\"\n              }\n            }\n          },\n          \"required\": true\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"A successful response.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/LogExportClusterInfo\"\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"description\": \"Returned when a request field is invalid.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {}\n              }\n            }\n          },\n          \"401\": {\n            \"description\": \"Returned when the token bearer cannot be authenticated.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {}\n              }\n            }\n          },\n          \"403\": {\n            \"description\": \"Returned when the user does not have permission to access the resource.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {}\n              }\n            }\n          },\n          \"404\": {\n            \"description\": \"Returned when the resource does not exist.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {}\n              }\n            }\n          },\n          \"500\": {\n            \"description\": \"Server error\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {}\n              }\n            }\n          },\n          \"default\": {\n            \"description\": \"An unexpected error response.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Status\"\n                }\n              }\n            }\n          }\n        },\n        \"tags\": [\n          \"CockroachCloud\"\n        ],\n        \"x-badges\": [\n          {\n            \"color\": \"blue\",\n            \"label\": \"PREVIEW\"\n          }\n        ],\n        \"x-codeSamples\": [\n          {\n            \"lang\": \"Shell + Curl\",\n            \"source\": \"curl --request POST \\\\\\n  --url https://cockroachlabs.cloud/api/v1/clusters/{cluster_id}/logexport \\\\\\n  --header 'Authorization: Bearer REPLACE_BEARER_TOKEN' \\\\\\n  --header 'content-type: application/json' \\\\\\n  --data '{\\\"auth_principal\\\":\\\"string\\\",\\\"groups\\\":[{\\\"channels\\\":[\\\"string\\\"],\\\"log_name\\\":\\\"string\\\",\\\"min_level\\\":\\\"string\\\",\\\"redact\\\":true}],\\\"log_name\\\":\\\"string\\\",\\\"redact\\\":true,\\\"region\\\":\\\"string\\\",\\\"type\\\":\\\"AWS_CLOUDWATCH\\\"}'\"\n          }\n        ]\n      }\n    },\n    \"/api/v1/clusters/{cluster_id}/metricexport\": {\n      \"delete\": {\n        \"operationId\": \"CockroachCloud_DeleteMetricExport\",\n        \"summary\": \"Delete the Metric Export configuration for a cluster\",\n        \"parameters\": [\n          {\n            \"name\": \"cluster_id\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"type\",\n            \"in\": \"query\",\n            \"schema\": {\n              \"type\": \"string\",\n              \"enum\": [\n                \"DATADOG\",\n                \"CLOUDWATCH\"\n              ]\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"A successful response.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/DeleteMetricExportResponse\"\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"description\": \"Returned when a request field is invalid.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {}\n              }\n            }\n          },\n          \"401\": {\n            \"description\": \"Returned when the token bearer cannot be authenticated.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {}\n              }\n            }\n          },\n          \"403\": {\n            \"description\": \"Returned when the user does not have permission to access the resource.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {}\n              }\n            }\n          },\n          \"404\": {\n            \"description\": \"Returned when the resource does not exist.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {}\n              }\n            }\n          },\n          \"500\": {\n            \"description\": \"Server error\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {}\n              }\n            }\n          },\n          \"default\": {\n            \"description\": \"An unexpected error response.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Status\"\n                }\n              }\n            }\n          }\n        },\n        \"tags\": [\n          \"CockroachCloud\"\n        ],\n        \"x-badges\": [\n          {\n            \"color\": \"blue\",\n            \"label\": \"PREVIEW\"\n          }\n        ],\n        \"x-codeSamples\": [\n          {\n            \"lang\": \"Shell + Curl\",\n            \"source\": \"curl --request DELETE \\\\\\n  --url 'https://cockroachlabs.cloud/api/v1/clusters/{cluster_id}/metricexport?type=SOME_STRING_VALUE' \\\\\\n  --header 'Authorization: Bearer REPLACE_BEARER_TOKEN'\"\n          }\n        ]\n      },\n      \"get\": {\n        \"operationId\": \"CockroachCloud_GetMetricExportInfo\",\n        \"summary\": \"Metric export\\nGet the Metric Export configuration for a cluster\",\n        \"parameters\": [\n          {\n            \"name\": \"cluster_id\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"A successful response.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/MetricExportInfo\"\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"description\": \"Returned when a request field is invalid.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {}\n              }\n            }\n          },\n          \"401\": {\n            \"description\": \"Returned when the token bearer cannot be authenticated.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {}\n              }\n            }\n          },\n          \"403\": {\n            \"description\": \"Returned when the user does not have permission to access the resource.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {}\n              }\n            }\n          },\n          \"404\": {\n            \"description\": \"Returned when the resource does not exist.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {}\n              }\n            }\n          },\n          \"500\": {\n            \"description\": \"Server error\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {}\n              }\n            }\n          },\n          \"default\": {\n            \"description\": \"An unexpected error response.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Status\"\n                }\n              }\n            }\n          }\n        },\n        \"tags\": [\n          \"CockroachCloud\"\n        ],\n        \"x-badges\": [\n          {\n            \"color\": \"blue\",\n            \"label\": \"PREVIEW\"\n          }\n        ],\n        \"x-codeSamples\": [\n          {\n            \"lang\": \"Shell + Curl\",\n            \"source\": \"curl --request GET \\\\\\n  --url https://cockroachlabs.cloud/api/v1/clusters/{cluster_id}/metricexport \\\\\\n  --header 'Authorization: Bearer REPLACE_BEARER_TOKEN'\"\n          }\n        ]\n      },\n      \"post\": {\n        \"operationId\": \"CockroachCloud_EnableMetricExport\",\n        \"summary\": \"Create a Metric Export configuration for a cluster\",\n        \"parameters\": [\n          {\n            \"name\": \"cluster_id\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"type\": \"object\",\n                \"properties\": {\n                  \"cloudwatch\": {\n                    \"$ref\": \"#/components/schemas/CloudWatchConfig\"\n                  },\n                  \"datadog\": {\n                    \"$ref\": \"#/components/schemas/DatadogConfig\"\n                  }\n                },\n                \"title\": \"EnableMetricExportRequest\"\n              }\n            }\n          },\n          \"required\": true\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"A successful response.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/MetricExportInfo\"\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"description\": \"Returned when a request field is invalid.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {}\n              }\n            }\n          },\n          \"401\": {\n            \"description\": \"Returned when the token bearer cannot be authenticated.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {}\n              }\n            }\n          },\n          \"403\": {\n            \"description\": \"Returned when the user does not have permission to access the resource.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {}\n              }\n            }\n          },\n          \"404\": {\n            \"description\": \"Returned when the resource does not exist.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {}\n              }\n            }\n          },\n          \"500\": {\n            \"description\": \"Server error\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {}\n              }\n            }\n          },\n          \"default\": {\n            \"description\": \"An unexpected error response.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Status\"\n                }\n              }\n            }\n          }\n        },\n        \"tags\": [\n          \"CockroachCloud\"\n        ],\n        \"x-badges\": [\n          {\n            \"color\": \"blue\",\n            \"label\": \"PREVIEW\"\n          }\n        ],\n        \"x-codeSamples\": [\n          {\n            \"lang\": \"Shell + Curl\",\n            \"source\": \"curl --request POST \\\\\\n  --url https://cockroachlabs.cloud/api/v1/clusters/{cluster_id}/metricexport \\\\\\n  --header 'Authorization: Bearer REPLACE_BEARER_TOKEN' \\\\\\n  --header 'content-type: application/json' \\\\\\n  --data '{\\\"cloudwatch\\\":{\\\"log_group_name\\\":\\\"string\\\",\\\"role_arn\\\":\\\"string\\\",\\\"target_region\\\":\\\"string\\\"},\\\"datadog\\\":{\\\"api_key\\\":\\\"string\\\",\\\"site\\\":\\\"US1\\\"}}'\"\n          }\n        ]\n      }\n    },\n    \"/api/v1/clusters/{cluster_id}/networking/allowlist\": {\n      \"get\": {\n        \"operationId\": \"CockroachCloud_ListAllowlistEntries\",\n        \"summary\": \"Get the IP allowlist and propagation status for a cluster\",\n        \"description\": \"Sort order: CIDR address\",\n        \"parameters\": [\n          {\n            \"name\": \"cluster_id\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"pagination.page\",\n            \"in\": \"query\",\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"pagination.limit\",\n            \"in\": \"query\",\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\"\n            }\n          },\n          {\n            \"name\": \"pagination.as_of_time\",\n            \"in\": \"query\",\n            \"schema\": {\n              \"type\": \"string\",\n              \"format\": \"date-time\"\n            }\n          },\n          {\n            \"name\": \"pagination.sort_order\",\n            \"in\": \"query\",\n            \"description\": \" - DESC: Sort in descending order. The default order is ascending.\",\n            \"schema\": {\n              \"type\": \"string\",\n              \"enum\": [\n                \"ASC\",\n                \"DESC\"\n              ]\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"A successful response.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ListAllowlistEntriesResponse\"\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"description\": \"Returned when a request field is invalid.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {}\n              }\n            }\n          },\n          \"401\": {\n            \"description\": \"Returned when the token bearer cannot be authenticated.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {}\n              }\n            }\n          },\n          \"403\": {\n            \"description\": \"Returned when the user does not have permission to access the resource.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {}\n              }\n            }\n          },\n          \"404\": {\n            \"description\": \"Returned when the resource does not exist.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {}\n              }\n            }\n          },\n          \"500\": {\n            \"description\": \"Server error\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {}\n              }\n            }\n          },\n          \"default\": {\n            \"description\": \"An unexpected error response.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Status\"\n                }\n              }\n            }\n          }\n        },\n        \"tags\": [\n          \"CockroachCloud\"\n        ],\n        \"x-codeSamples\": [\n          {\n            \"lang\": \"Shell + Curl\",\n            \"source\": \"curl --request GET \\\\\\n  --url 'https://cockroachlabs.cloud/api/v1/clusters/{cluster_id}/networking/allowlist?pagination.page=SOME_STRING_VALUE\u0026pagination.limit=SOME_INTEGER_VALUE\u0026pagination.as_of_time=SOME_STRING_VALUE\u0026pagination.sort_order=SOME_STRING_VALUE' \\\\\\n  --header 'Authorization: Bearer REPLACE_BEARER_TOKEN'\"\n          }\n        ]\n      },\n      \"post\": {\n        \"operationId\": \"CockroachCloud_AddAllowlistEntry\",\n        \"summary\": \"Add a new CIDR address to the IP allowlist\",\n        \"parameters\": [\n          {\n            \"name\": \"cluster_id\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/AllowlistEntry\"\n              }\n            }\n          },\n          \"required\": true\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"A successful response.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/AllowlistEntry\"\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"description\": \"Returned when a request field is invalid.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {}\n              }\n            }\n          },\n          \"401\": {\n            \"description\": \"Returned when the token bearer cannot be authenticated.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {}\n              }\n            }\n          },\n          \"403\": {\n            \"description\": \"Returned when the user does not have permission to access the resource.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {}\n              }\n            }\n          },\n          \"404\": {\n            \"description\": \"Returned when the resource does not exist.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {}\n              }\n            }\n          },\n          \"500\": {\n            \"description\": \"Server error\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {}\n              }\n            }\n          },\n          \"default\": {\n            \"description\": \"An unexpected error response.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Status\"\n                }\n              }\n            }\n          }\n        },\n        \"tags\": [\n          \"CockroachCloud\"\n        ],\n        \"x-codeSamples\": [\n          {\n            \"lang\": \"Shell + Curl\",\n            \"source\": \"curl --request POST \\\\\\n  --url https://cockroachlabs.cloud/api/v1/clusters/{cluster_id}/networking/allowlist \\\\\\n  --header 'Authorization: Bearer REPLACE_BEARER_TOKEN' \\\\\\n  --header 'content-type: application/json' \\\\\\n  --data '{\\\"cidr_ip\\\":\\\"192.168.1.1\\\",\\\"cidr_mask\\\":32,\\\"name\\\":\\\"Example\\\",\\\"sql\\\":true,\\\"ui\\\":true}'\"\n          }\n        ]\n      }\n    },\n    \"/api/v1/clusters/{cluster_id}/networking/allowlist/{cidr_ip}/{cidr_mask}\": {\n      \"delete\": {\n        \"operationId\": \"CockroachCloud_DeleteAllowlistEntry\",\n        \"summary\": \"Delete an IP allowlist entry\",\n        \"parameters\": [\n          {\n            \"name\": \"cluster_id\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"cidr_ip\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"cidr_mask\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"A successful response.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/AllowlistEntry\"\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"description\": \"Returned when a request field is invalid.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {}\n              }\n            }\n          },\n          \"401\": {\n            \"description\": \"Returned when the token bearer cannot be authenticated.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {}\n              }\n            }\n          },\n          \"403\": {\n            \"description\": \"Returned when the user does not have permission to access the resource.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {}\n              }\n            }\n          },\n          \"404\": {\n            \"description\": \"Returned when the resource does not exist.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {}\n              }\n            }\n          },\n          \"500\": {\n            \"description\": \"Server error\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {}\n              }\n            }\n          },\n          \"default\": {\n            \"description\": \"An unexpected error response.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Status\"\n                }\n              }\n            }\n          }\n        },\n        \"tags\": [\n          \"CockroachCloud\"\n        ],\n        \"x-codeSamples\": [\n          {\n            \"lang\": \"Shell + Curl\",\n            \"source\": \"curl --request DELETE \\\\\\n  --url https://cockroachlabs.cloud/api/v1/clusters/{cluster_id}/networking/allowlist/{cidr_ip}/{cidr_mask} \\\\\\n  --header 'Authorization: Bearer REPLACE_BEARER_TOKEN'\"\n          }\n        ]\n      }\n    },\n    \"/api/v1/clusters/{cluster_id}/networking/allowlist/{entry.cidr_ip}/{entry.cidr_mask}\": {\n      \"patch\": {\n        \"operationId\": \"CockroachCloud_UpdateAllowlistEntry\",\n        \"summary\": \"Update an IP allowlist entry\",\n        \"parameters\": [\n          {\n            \"name\": \"cluster_id\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"entry.cidr_ip\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"entry.cidr_mask\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\"\n            }\n          },\n          {\n            \"name\": \"field_mask\",\n            \"in\": \"query\",\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"requestBody\": {\n          \"description\": \"AllowlistEntry\",\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"type\": \"object\",\n                \"properties\": {\n                  \"name\": {\n                    \"type\": \"string\"\n                  },\n                  \"sql\": {\n                    \"type\": \"boolean\"\n                  },\n                  \"ui\": {\n                    \"type\": \"boolean\"\n                  }\n                },\n                \"example\": {\n                  \"cidr_ip\": \"192.168.1.1\",\n                  \"cidr_mask\": 32,\n                  \"name\": \"Example\",\n                  \"sql\": true,\n                  \"ui\": true\n                },\n                \"required\": [\n                  \"ui\",\n                  \"sql\"\n                ],\n                \"title\": \"AllowlistEntry\"\n              }\n            }\n          },\n          \"required\": true\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"A successful response.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/AllowlistEntry\"\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"description\": \"Returned when a request field is invalid.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {}\n              }\n            }\n          },\n          \"401\": {\n            \"description\": \"Returned when the token bearer cannot be authenticated.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {}\n              }\n            }\n          },\n          \"403\": {\n            \"description\": \"Returned when the user does not have permission to access the resource.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {}\n              }\n            }\n          },\n          \"404\": {\n            \"description\": \"Returned when the resource does not exist.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {}\n              }\n            }\n          },\n          \"500\": {\n            \"description\": \"Server error\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {}\n              }\n            }\n          },\n          \"default\": {\n            \"description\": \"An unexpected error response.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Status\"\n                }\n              }\n            }\n          }\n        },\n        \"tags\": [\n          \"CockroachCloud\"\n        ],\n        \"x-codeSamples\": [\n          {\n            \"lang\": \"Shell + Curl\",\n            \"source\": \"curl --request PATCH \\\\\\n  --url 'https://cockroachlabs.cloud/api/v1/clusters/{cluster_id}/networking/allowlist/{entry.cidr_ip}/{entry.cidr_mask}?field_mask=SOME_STRING_VALUE' \\\\\\n  --header 'Authorization: Bearer REPLACE_BEARER_TOKEN' \\\\\\n  --data '{\\\"cidr_ip\\\":\\\"192.168.1.1\\\",\\\"cidr_mask\\\":32,\\\"name\\\":\\\"Example\\\",\\\"sql\\\":true,\\\"ui\\\":true}'\"\n          }\n        ]\n      },\n      \"put\": {\n        \"operationId\": \"CockroachCloud_AddAllowlistEntry2\",\n        \"summary\": \"Add a new CIDR address to the IP allowlist\",\n        \"parameters\": [\n          {\n            \"name\": \"cluster_id\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"entry.cidr_ip\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"entry.cidr_mask\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\"\n            }\n          }\n        ],\n        \"requestBody\": {\n          \"description\": \"AllowlistEntry\",\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"type\": \"object\",\n                \"properties\": {\n                  \"name\": {\n                    \"type\": \"string\"\n                  },\n                  \"sql\": {\n                    \"type\": \"boolean\"\n                  },\n                  \"ui\": {\n                    \"type\": \"boolean\"\n                  }\n                },\n                \"example\": {\n                  \"cidr_ip\": \"192.168.1.1\",\n                  \"cidr_mask\": 32,\n                  \"name\": \"Example\",\n                  \"sql\": true,\n                  \"ui\": true\n                },\n                \"required\": [\n                  \"ui\",\n                  \"sql\"\n                ],\n                \"title\": \"AllowlistEntry\"\n              }\n            }\n          },\n          \"required\": true\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"A successful response.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/AllowlistEntry\"\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"description\": \"Returned when a request field is invalid.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {}\n              }\n            }\n          },\n          \"401\": {\n            \"description\": \"Returned when the token bearer cannot be authenticated.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {}\n              }\n            }\n          },\n          \"403\": {\n            \"description\": \"Returned when the user does not have permission to access the resource.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {}\n              }\n            }\n          },\n          \"404\": {\n            \"description\": \"Returned when the resource does not exist.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {}\n              }\n            }\n          },\n          \"500\": {\n            \"description\": \"Server error\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {}\n              }\n            }\n          },\n          \"default\": {\n            \"description\": \"An unexpected error response.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Status\"\n                }\n              }\n            }\n          }\n        },\n        \"tags\": [\n          \"CockroachCloud\"\n        ],\n        \"x-codeSamples\": [\n          {\n            \"lang\": \"Shell + Curl\",\n            \"source\": \"curl --request PUT \\\\\\n  --url https://cockroachlabs.cloud/api/v1/clusters/{cluster_id}/networking/allowlist/{entry.cidr_ip}/{entry.cidr_mask} \\\\\\n  --header 'Authorization: Bearer REPLACE_BEARER_TOKEN' \\\\\\n  --data '{\\\"cidr_ip\\\":\\\"192.168.1.1\\\",\\\"cidr_mask\\\":32,\\\"name\\\":\\\"Example\\\",\\\"sql\\\":true,\\\"ui\\\":true}'\"\n          }\n        ]\n      }\n    },\n    \"/api/v1/clusters/{cluster_id}/networking/aws-endpoint-connections\": {\n      \"get\": {\n        \"operationId\": \"CockroachCloud_ListAwsEndpointConnections\",\n        \"summary\": \"Lists all AwsEndpointConnections for a given cluster\",\n        \"parameters\": [\n          {\n            \"name\": \"cluster_id\",\n            \"in\": \"path\",\n            \"description\": \"cluster_id is the ID for the cluster.\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"A successful response.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/AwsEndpointConnections\"\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"description\": \"Returned when a request field is invalid.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {}\n              }\n            }\n          },\n          \"401\": {\n            \"description\": \"Returned when the token bearer cannot be authenticated.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {}\n              }\n            }\n          },\n          \"403\": {\n            \"description\": \"Returned when the user does not have permission to access the resource.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {}\n              }\n            }\n          },\n          \"404\": {\n            \"description\": \"Returned when the resource does not exist.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {}\n              }\n            }\n          },\n          \"500\": {\n            \"description\": \"Server error\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {}\n              }\n            }\n          },\n          \"default\": {\n            \"description\": \"An unexpected error response.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Status\"\n                }\n              }\n            }\n          }\n        },\n        \"tags\": [\n          \"CockroachCloud\"\n        ],\n        \"x-badges\": [\n          {\n            \"color\": \"blue\",\n            \"label\": \"PREVIEW\"\n          }\n        ],\n        \"x-codeSamples\": [\n          {\n            \"lang\": \"Shell + Curl\",\n            \"source\": \"curl --request GET \\\\\\n  --url https://cockroachlabs.cloud/api/v1/clusters/{cluster_id}/networking/aws-endpoint-connections \\\\\\n  --header 'Authorization: Bearer REPLACE_BEARER_TOKEN'\"\n          }\n        ]\n      }\n    },\n    \"/api/v1/clusters/{cluster_id}/networking/aws-endpoint-connections/{endpoint_id}\": {\n      \"patch\": {\n        \"operationId\": \"CockroachCloud_SetAwsEndpointConnectionState\",\n        \"summary\": \"Sets the AWS Endpoint Connection state based on what is passed in the body\",\n        \"description\": \"The \\\"status\\\" in the returned proto does not reflect the latest post-update\\nstatus, but rather the status before the state is transitioned.\",\n        \"parameters\": [\n          {\n            \"name\": \"cluster_id\",\n            \"in\": \"path\",\n            \"description\": \"cluster_id is the ID for the cluster.\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"endpoint_id\",\n            \"in\": \"path\",\n            \"description\": \"endpoint_id is the ID for the VPC endpoint on the customer's side.\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"type\": \"object\",\n                \"properties\": {\n                  \"status\": {\n                    \"$ref\": \"#/components/schemas/AWSEndpointConnectionStatus\"\n                  }\n                },\n                \"example\": {\n                  \"status\": \"ENDPOINT_AVAILABLE\"\n                }\n              }\n            }\n          },\n          \"required\": true\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"A successful response.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/AwsEndpointConnection\"\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"description\": \"Returned when a request field is invalid.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {}\n              }\n            }\n          },\n          \"401\": {\n            \"description\": \"Returned when the token bearer cannot be authenticated.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {}\n              }\n            }\n          },\n          \"403\": {\n            \"description\": \"Returned when the user does not have permission to access the resource.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {}\n              }\n            }\n          },\n          \"404\": {\n            \"description\": \"Returned when the resource does not exist.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {}\n              }\n            }\n          },\n          \"500\": {\n            \"description\": \"Server error\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {}\n              }\n            }\n          },\n          \"default\": {\n            \"description\": \"An unexpected error response.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Status\"\n                }\n              }\n            }\n          }\n        },\n        \"tags\": [\n          \"CockroachCloud\"\n        ],\n        \"x-badges\": [\n          {\n            \"color\": \"blue\",\n            \"label\": \"PREVIEW\"\n          }\n        ],\n        \"x-codeSamples\": [\n          {\n            \"lang\": \"Shell + Curl\",\n            \"source\": \"curl --request PATCH \\\\\\n  --url https://cockroachlabs.cloud/api/v1/clusters/{cluster_id}/networking/aws-endpoint-connections/{endpoint_id} \\\\\\n  --header 'Authorization: Bearer REPLACE_BEARER_TOKEN' \\\\\\n  --header 'content-type: application/json' \\\\\\n  --data '{\\\"status\\\":\\\"ENDPOINT_AVAILABLE\\\"}'\"\n          }\n        ]\n      }\n    },\n    \"/api/v1/clusters/{cluster_id}/networking/egress-rules\": {\n      \"get\": {\n        \"operationId\": \"CockroachCloud_ListEgressRules\",\n        \"summary\": \"List all egress rules associates with a cluster\",\n        \"description\": \"Sort order: Name\",\n        \"parameters\": [\n          {\n            \"name\": \"cluster_id\",\n            \"in\": \"path\",\n            \"description\": \"cluster_id identifies the CockroachDB cluster owning the set of returned\\negress rules.\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"pagination.page\",\n            \"in\": \"query\",\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"pagination.limit\",\n            \"in\": \"query\",\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\"\n            }\n          },\n          {\n            \"name\": \"pagination.as_of_time\",\n            \"in\": \"query\",\n            \"schema\": {\n              \"type\": \"string\",\n              \"format\": \"date-time\"\n            }\n          },\n          {\n            \"name\": \"pagination.sort_order\",\n            \"in\": \"query\",\n            \"description\": \" - DESC: Sort in descending order. The default order is ascending.\",\n            \"schema\": {\n              \"type\": \"string\",\n              \"enum\": [\n                \"ASC\",\n                \"DESC\"\n              ]\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"A successful response.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ListEgressRulesResponse\"\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"description\": \"Returned when a request field is invalid.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {}\n              }\n            }\n          },\n          \"401\": {\n            \"description\": \"Returned when the token bearer cannot be authenticated.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {}\n              }\n            }\n          },\n          \"403\": {\n            \"description\": \"Returned when the user does not have permission to access the resource.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {}\n              }\n            }\n          },\n          \"404\": {\n            \"description\": \"Returned when the resource does not exist.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {}\n              }\n            }\n          },\n          \"500\": {\n            \"description\": \"Server error\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {}\n              }\n            }\n          },\n          \"default\": {\n            \"description\": \"An unexpected error response.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Status\"\n                }\n              }\n            }\n          }\n        },\n        \"tags\": [\n          \"CockroachCloud\"\n        ],\n        \"x-badges\": [\n          {\n            \"color\": \"blue\",\n            \"label\": \"PREVIEW\"\n          }\n        ],\n        \"x-codeSamples\": [\n          {\n            \"lang\": \"Shell + Curl\",\n            \"source\": \"curl --request GET \\\\\\n  --url 'https://cockroachlabs.cloud/api/v1/clusters/{cluster_id}/networking/egress-rules?pagination.page=SOME_STRING_VALUE\u0026pagination.limit=SOME_INTEGER_VALUE\u0026pagination.as_of_time=SOME_STRING_VALUE\u0026pagination.sort_order=SOME_STRING_VALUE' \\\\\\n  --header 'Authorization: Bearer REPLACE_BEARER_TOKEN'\"\n          }\n        ]\n      },\n      \"post\": {\n        \"operationId\": \"CockroachCloud_AddEgressRule\",\n        \"summary\": \"Add an egress rule\",\n        \"parameters\": [\n          {\n            \"name\": \"cluster_id\",\n            \"in\": \"path\",\n            \"description\": \"cluster_id identifies the cluster to which this egress rule applies.\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"description\": \"AddEgressRuleRequest is the input for the rpc AddEgressRule().\",\n                \"type\": \"object\",\n                \"properties\": {\n                  \"description\": {\n                    \"description\": \"description is text that serves to document the rules purpose.\",\n                    \"type\": \"string\"\n                  },\n                  \"destination\": {\n                    \"description\": \"destination is the endpoint (or subnetwork if CIDR) to which traffic is\\nallowed.\",\n                    \"type\": \"string\"\n                  },\n                  \"idempotency_key\": {\n                    \"description\": \"idempotency_key uniquely identifies this request. If not set, it will be\\nset by the server.\",\n                    \"type\": \"string\"\n                  },\n                  \"name\": {\n                    \"description\": \"name is the name of the egress rule.\",\n                    \"type\": \"string\"\n                  },\n                  \"paths\": {\n                    \"description\": \"paths are the allowed URL paths. If empty, all paths are allowed. Only\\nvalid if Type=\\\"FQDN\\\".\",\n                    \"type\": \"array\",\n                    \"items\": {\n                      \"type\": \"string\"\n                    }\n                  },\n                  \"ports\": {\n                    \"description\": \"ports are the allowed ports for TCP protocol. If Empty, all ports are\\nallowed.\",\n                    \"type\": \"array\",\n                    \"items\": {\n                      \"format\": \"int32\",\n                      \"type\": \"integer\"\n                    }\n                  },\n                  \"type\": {\n                    \"description\": \"type classifies the Destination field. Valid types include: \\\"FQDN\\\",\\n\\\"CIDR\\\".\",\n                    \"type\": \"string\"\n                  }\n                },\n                \"example\": {\n                  \"cluster_id\": \"35c4abb2-bb66-46d7-afed-25ebef5ed100\",\n                  \"description\": \"some very descriptive stuff\",\n                  \"destination\": \"www.google.com\",\n                  \"name\": \"example-1\",\n                  \"paths\": [\n                    \"/hello\"\n                  ],\n                  \"ports\": [\n                    443,\n                    80\n                  ],\n                  \"type\": \"FQDN\"\n                },\n                \"required\": [\n                  \"name\",\n                  \"type\",\n                  \"destination\",\n                  \"description\"\n                ],\n                \"title\": \"AddEgressRuleRequest\"\n              }\n            }\n          },\n          \"required\": true\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"A successful response.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/AddEgressRuleResponse\"\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"description\": \"Returned when a request field is invalid.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {}\n              }\n            }\n          },\n          \"401\": {\n            \"description\": \"Returned when the token bearer cannot be authenticated.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {}\n              }\n            }\n          },\n          \"403\": {\n            \"description\": \"Returned when the user does not have permission to access the resource.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {}\n              }\n            }\n          },\n          \"404\": {\n            \"description\": \"Returned when the resource does not exist.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {}\n              }\n            }\n          },\n          \"500\": {\n            \"description\": \"Server error\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {}\n              }\n            }\n          },\n          \"default\": {\n            \"description\": \"An unexpected error response.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Status\"\n                }\n              }\n            }\n          }\n        },\n        \"tags\": [\n          \"CockroachCloud\"\n        ],\n        \"x-badges\": [\n          {\n            \"color\": \"blue\",\n            \"label\": \"PREVIEW\"\n          }\n        ],\n        \"x-codeSamples\": [\n          {\n            \"lang\": \"Shell + Curl\",\n            \"source\": \"curl --request POST \\\\\\n  --url https://cockroachlabs.cloud/api/v1/clusters/{cluster_id}/networking/egress-rules \\\\\\n  --header 'Authorization: Bearer REPLACE_BEARER_TOKEN' \\\\\\n  --header 'content-type: application/json' \\\\\\n  --data '{\\\"cluster_id\\\":\\\"35c4abb2-bb66-46d7-afed-25ebef5ed100\\\",\\\"description\\\":\\\"some very descriptive stuff\\\",\\\"destination\\\":\\\"www.google.com\\\",\\\"name\\\":\\\"example-1\\\",\\\"paths\\\":[\\\"/hello\\\"],\\\"ports\\\":[443,80],\\\"type\\\":\\\"FQDN\\\"}'\"\n          }\n        ]\n      }\n    },\n    \"/api/v1/clusters/{cluster_id}/networking/egress-rules/egress-traffic-policy\": {\n      \"post\": {\n        \"operationId\": \"CockroachCloud_SetEgressTrafficPolicy\",\n        \"summary\": \"Outbound traffic management\",\n        \"parameters\": [\n          {\n            \"name\": \"cluster_id\",\n            \"in\": \"path\",\n            \"description\": \"cluster_id identifies the cluster whose egress policy will be updated.\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"description\": \"SetEgressTrafficPolicyRequest is the input for the SetEgressTrafficPolicy RPC.\",\n                \"type\": \"object\",\n                \"properties\": {\n                  \"allow_all\": {\n                    \"description\": \"allow_all, if true results in unrestricted egress traffic. If false, egress\\ntraffic is set to default-deny and is managed via the Egress Rule\\nManagement API.\",\n                    \"type\": \"boolean\"\n                  },\n                  \"idempotency_key\": {\n                    \"description\": \"idempotency_key uniquely identifies this request. If not set, it will be\\nset by the server.\",\n                    \"type\": \"string\"\n                  }\n                },\n                \"required\": [\n                  \"allow_all\"\n                ],\n                \"title\": \"SetEgressTrafficPolicyRequest\"\n              }\n            }\n          },\n          \"required\": true\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"A successful response.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\"\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"description\": \"Returned when a request field is invalid.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {}\n              }\n            }\n          },\n          \"401\": {\n            \"description\": \"Returned when the token bearer cannot be authenticated.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {}\n              }\n            }\n          },\n          \"403\": {\n            \"description\": \"Returned when the user does not have permission to access the resource.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {}\n              }\n            }\n          },\n          \"404\": {\n            \"description\": \"Returned when the resource does not exist.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {}\n              }\n            }\n          },\n          \"500\": {\n            \"description\": \"Server error\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {}\n              }\n            }\n          },\n          \"default\": {\n            \"description\": \"An unexpected error response.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Status\"\n                }\n              }\n            }\n          }\n        },\n        \"tags\": [\n          \"CockroachCloud\"\n        ],\n        \"x-badges\": [\n          {\n            \"color\": \"blue\",\n            \"label\": \"PREVIEW\"\n          }\n        ],\n        \"x-codeSamples\": [\n          {\n            \"lang\": \"Shell + Curl\",\n            \"source\": \"curl --request POST \\\\\\n  --url https://cockroachlabs.cloud/api/v1/clusters/{cluster_id}/networking/egress-rules/egress-traffic-policy \\\\\\n  --header 'Authorization: Bearer REPLACE_BEARER_TOKEN' \\\\\\n  --header 'content-type: application/json' \\\\\\n  --data '{\\\"allow_all\\\":true,\\\"idempotency_key\\\":\\\"string\\\"}'\"\n          }\n        ]\n      }\n    },\n    \"/api/v1/clusters/{cluster_id}/networking/egress-rules/{rule_id}\": {\n      \"delete\": {\n        \"operationId\": \"CockroachCloud_DeleteEgressRule\",\n        \"summary\": \"Delete an existing egress rule\",\n        \"parameters\": [\n          {\n            \"name\": \"cluster_id\",\n            \"in\": \"path\",\n            \"description\": \"cluster_id uniquely identifies the cluster owning the egress rule.\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"rule_id\",\n            \"in\": \"path\",\n            \"description\": \"rule_id is the UUID of an existing egress rule. This field is required.\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"idempotency_key\",\n            \"in\": \"query\",\n            \"description\": \"idempotency_key uniquely identifies this request. If not set, it will be\\nset by the server.\",\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"A successful response.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/DeleteEgressRuleResponse\"\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"description\": \"Returned when a request field is invalid.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {}\n              }\n            }\n          },\n          \"401\": {\n            \"description\": \"Returned when the token bearer cannot be authenticated.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {}\n              }\n            }\n          },\n          \"403\": {\n            \"description\": \"Returned when the user does not have permission to access the resource.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {}\n              }\n            }\n          },\n          \"404\": {\n            \"description\": \"Returned when the resource does not exist.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {}\n              }\n            }\n          },\n          \"500\": {\n            \"description\": \"Server error\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {}\n              }\n            }\n          },\n          \"default\": {\n            \"description\": \"An unexpected error response.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Status\"\n                }\n              }\n            }\n          }\n        },\n        \"tags\": [\n          \"CockroachCloud\"\n        ],\n        \"x-badges\": [\n          {\n            \"color\": \"blue\",\n            \"label\": \"PREVIEW\"\n          }\n        ],\n        \"x-codeSamples\": [\n          {\n            \"lang\": \"Shell + Curl\",\n            \"source\": \"curl --request DELETE \\\\\\n  --url 'https://cockroachlabs.cloud/api/v1/clusters/{cluster_id}/networking/egress-rules/{rule_id}?idempotency_key=SOME_STRING_VALUE' \\\\\\n  --header 'Authorization: Bearer REPLACE_BEARER_TOKEN'\"\n          }\n        ]\n      },\n      \"get\": {\n        \"operationId\": \"CockroachCloud_GetEgressRule\",\n        \"summary\": \"Get an existing egress rule\",\n        \"parameters\": [\n          {\n            \"name\": \"cluster_id\",\n            \"in\": \"path\",\n            \"description\": \"cluster_id uniquely identifies the cluster owning the egress rule.\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"rule_id\",\n            \"in\": \"path\",\n            \"description\": \"rule_id is the UUID of an existing egress rule.\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"A successful response.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/GetEgressRuleResponse\"\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"description\": \"Returned when a request field is invalid.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {}\n              }\n            }\n          },\n          \"401\": {\n            \"description\": \"Returned when the token bearer cannot be authenticated.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {}\n              }\n            }\n          },\n          \"403\": {\n            \"description\": \"Returned when the user does not have permission to access the resource.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {}\n              }\n            }\n          },\n          \"404\": {\n            \"description\": \"Returned when the resource does not exist.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {}\n              }\n            }\n          },\n          \"500\": {\n            \"description\": \"Server error\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {}\n              }\n            }\n          },\n          \"default\": {\n            \"description\": \"An unexpected error response.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Status\"\n                }\n              }\n            }\n          }\n        },\n        \"tags\": [\n          \"CockroachCloud\"\n        ],\n        \"x-badges\": [\n          {\n            \"color\": \"blue\",\n            \"label\": \"PREVIEW\"\n          }\n        ],\n        \"x-codeSamples\": [\n          {\n            \"lang\": \"Shell + Curl\",\n            \"source\": \"curl --request GET \\\\\\n  --url https://cockroachlabs.cloud/api/v1/clusters/{cluster_id}/networking/egress-rules/{rule_id} \\\\\\n  --header 'Authorization: Bearer REPLACE_BEARER_TOKEN'\"\n          }\n        ]\n      },\n      \"patch\": {\n        \"operationId\": \"CockroachCloud_EditEgressRule\",\n        \"summary\": \"Edit an existing egress rule\",\n        \"parameters\": [\n          {\n            \"name\": \"cluster_id\",\n            \"in\": \"path\",\n            \"description\": \"cluster_id uniquely identifies the cluster owning the egress rule.\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"rule_id\",\n            \"in\": \"path\",\n            \"description\": \"rule_id is the UUID of an existing egress rule. This field is required.\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"description\": \"EditEgressRuleRequest is the input message to the EditEgressRule RPC.\",\n                \"type\": \"object\",\n                \"properties\": {\n                  \"description\": {\n                    \"description\": \"description is text that serves to document the rules purpose.\",\n                    \"type\": \"string\"\n                  },\n                  \"destination\": {\n                    \"description\": \"destination is a CIDR range or fully-qualified domain name to which\\noutgoing traffic should be allowed. This field is required.\",\n                    \"type\": \"string\"\n                  },\n                  \"idempotency_key\": {\n                    \"description\": \"idempotency_key uniquely identifies this request. If not set, it will be\\nset by the server.\",\n                    \"type\": \"string\"\n                  },\n                  \"paths\": {\n                    \"description\": \"paths are the allowed URL paths. If empty, all paths are allowed. Only\\nvalid if Type=\\\"FQDN\\\".\",\n                    \"type\": \"array\",\n                    \"items\": {\n                      \"type\": \"string\"\n                    }\n                  },\n                  \"ports\": {\n                    \"description\": \"ports are the allowed ports for TCP protocol. If empty, all ports are\\nallowed.\",\n                    \"type\": \"array\",\n                    \"items\": {\n                      \"format\": \"int32\",\n                      \"type\": \"integer\"\n                    }\n                  },\n                  \"type\": {\n                    \"description\": \"type is the destination type of this rule. Example values are\\nFQDN or CIDR. This field is required.\",\n                    \"type\": \"string\"\n                  }\n                },\n                \"example\": {\n                  \"cluster_id\": \"35c4abb2-bb66-46d7-afed-25ebef5ed100\",\n                  \"ports\": [\n                    443,\n                    80\n                  ],\n                  \"rule_id\": \"35c4abb2-bb66-46d7-afed-25ebef5ed2aa\"\n                },\n                \"title\": \"EditEgressRuleRequest\"\n              }\n            }\n          },\n          \"required\": true\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"A successful response.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/EditEgressRuleResponse\"\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"description\": \"Returned when a request field is invalid.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {}\n              }\n            }\n          },\n          \"401\": {\n            \"description\": \"Returned when the token bearer cannot be authenticated.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {}\n              }\n            }\n          },\n          \"403\": {\n            \"description\": \"Returned when the user does not have permission to access the resource.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {}\n              }\n            }\n          },\n          \"404\": {\n            \"description\": \"Returned when the resource does not exist.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {}\n              }\n            }\n          },\n          \"500\": {\n            \"description\": \"Server error\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {}\n              }\n            }\n          },\n          \"default\": {\n            \"description\": \"An unexpected error response.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Status\"\n                }\n              }\n            }\n          }\n        },\n        \"tags\": [\n          \"CockroachCloud\"\n        ],\n        \"x-badges\": [\n          {\n            \"color\": \"blue\",\n            \"label\": \"PREVIEW\"\n          }\n        ],\n        \"x-codeSamples\": [\n          {\n            \"lang\": \"Shell + Curl\",\n            \"source\": \"curl --request PATCH \\\\\\n  --url https://cockroachlabs.cloud/api/v1/clusters/{cluster_id}/networking/egress-rules/{rule_id} \\\\\\n  --header 'Authorization: Bearer REPLACE_BEARER_TOKEN' \\\\\\n  --header 'content-type: application/json' \\\\\\n  --data '{\\\"cluster_id\\\":\\\"35c4abb2-bb66-46d7-afed-25ebef5ed100\\\",\\\"ports\\\":[443,80],\\\"rule_id\\\":\\\"35c4abb2-bb66-46d7-afed-25ebef5ed2aa\\\"}'\"\n          }\n        ]\n      }\n    },\n    \"/api/v1/clusters/{cluster_id}/networking/private-endpoint-services\": {\n      \"get\": {\n        \"operationId\": \"CockroachCloud_ListPrivateEndpointServices\",\n        \"summary\": \"Lists all PrivateEndpointServices for a given cluster\",\n        \"description\": \"The internal_dns property from the regions field in the ListClusters response can be used to connect to PrivateEndpointServices.\",\n        \"parameters\": [\n          {\n            \"name\": \"cluster_id\",\n            \"in\": \"path\",\n            \"description\": \"cluster_id is the ID for the cluster.\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"A successful response.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/PrivateEndpointServices\"\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"description\": \"Returned when a request field is invalid.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {}\n              }\n            }\n          },\n          \"401\": {\n            \"description\": \"Returned when the token bearer cannot be authenticated.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {}\n              }\n            }\n          },\n          \"403\": {\n            \"description\": \"Returned when the user does not have permission to access the resource.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {}\n              }\n            }\n          },\n          \"404\": {\n            \"description\": \"Returned when the resource does not exist.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {}\n              }\n            }\n          },\n          \"500\": {\n            \"description\": \"Server error\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {}\n              }\n            }\n          },\n          \"default\": {\n            \"description\": \"An unexpected error response.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Status\"\n                }\n              }\n            }\n          }\n        },\n        \"tags\": [\n          \"CockroachCloud\"\n        ],\n        \"x-badges\": [\n          {\n            \"color\": \"blue\",\n            \"label\": \"PREVIEW\"\n          }\n        ],\n        \"x-codeSamples\": [\n          {\n            \"lang\": \"Shell + Curl\",\n            \"source\": \"curl --request GET \\\\\\n  --url https://cockroachlabs.cloud/api/v1/clusters/{cluster_id}/networking/private-endpoint-services \\\\\\n  --header 'Authorization: Bearer REPLACE_BEARER_TOKEN'\"\n          }\n        ]\n      },\n      \"post\": {\n        \"operationId\": \"CockroachCloud_CreatePrivateEndpointServices\",\n        \"summary\": \"Creates all PrivateEndpointServices for a given cluster\",\n        \"parameters\": [\n          {\n            \"name\": \"cluster_id\",\n            \"in\": \"path\",\n            \"description\": \"cluster_id is the ID for the cluster.\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"type\": \"object\"\n              }\n            }\n          },\n          \"required\": true\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"A successful response.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/PrivateEndpointServices\"\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"description\": \"Returned when a request field is invalid.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {}\n              }\n            }\n          },\n          \"401\": {\n            \"description\": \"Returned when the token bearer cannot be authenticated.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {}\n              }\n            }\n          },\n          \"403\": {\n            \"description\": \"Returned when the user does not have permission to access the resource.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {}\n              }\n            }\n          },\n          \"404\": {\n            \"description\": \"Returned when the resource does not exist.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {}\n              }\n            }\n          },\n          \"500\": {\n            \"description\": \"Server error\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {}\n              }\n            }\n          },\n          \"default\": {\n            \"description\": \"An unexpected error response.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Status\"\n                }\n              }\n            }\n          }\n        },\n        \"tags\": [\n          \"CockroachCloud\"\n        ],\n        \"x-badges\": [\n          {\n            \"color\": \"blue\",\n            \"label\": \"PREVIEW\"\n          }\n        ],\n        \"x-codeSamples\": [\n          {\n            \"lang\": \"Shell + Curl\",\n            \"source\": \"curl --request POST \\\\\\n  --url https://cockroachlabs.cloud/api/v1/clusters/{cluster_id}/networking/private-endpoint-services \\\\\\n  --header 'Authorization: Bearer REPLACE_BEARER_TOKEN' \\\\\\n  --header 'content-type: application/json' \\\\\\n  --data '{}'\"\n          }\n        ]\n      }\n    },\n    \"/api/v1/clusters/{cluster_id}/nodes\": {\n      \"get\": {\n        \"operationId\": \"CockroachCloud_ListClusterNodes\",\n        \"summary\": \"List nodes for a cluster\",\n        \"description\": \"Sort order: Region name, node name\",\n        \"parameters\": [\n          {\n            \"name\": \"cluster_id\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"region_name\",\n            \"in\": \"query\",\n            \"description\": \"Optional filter to limit response to a single region.\",\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"pagination.page\",\n            \"in\": \"query\",\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"pagination.limit\",\n            \"in\": \"query\",\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\"\n            }\n          },\n          {\n            \"name\": \"pagination.as_of_time\",\n            \"in\": \"query\",\n            \"schema\": {\n              \"type\": \"string\",\n              \"format\": \"date-time\"\n            }\n          },\n          {\n            \"name\": \"pagination.sort_order\",\n            \"in\": \"query\",\n            \"description\": \" - DESC: Sort in descending order. The default order is ascending.\",\n            \"schema\": {\n              \"type\": \"string\",\n              \"enum\": [\n                \"ASC\",\n                \"DESC\"\n              ]\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"A successful response.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ListClusterNodesResponse\"\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"description\": \"Returned when a request field is invalid.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {}\n              }\n            }\n          },\n          \"401\": {\n            \"description\": \"Returned when the token bearer cannot be authenticated.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {}\n              }\n            }\n          },\n          \"403\": {\n            \"description\": \"Returned when the user does not have permission to access the resource.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {}\n              }\n            }\n          },\n          \"404\": {\n            \"description\": \"Returned when the resource does not exist.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {}\n              }\n            }\n          },\n          \"500\": {\n            \"description\": \"Server error\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {}\n              }\n            }\n          },\n          \"default\": {\n            \"description\": \"An unexpected error response.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Status\"\n                }\n              }\n            }\n          }\n        },\n        \"tags\": [\n          \"CockroachCloud\"\n        ],\n        \"x-codeSamples\": [\n          {\n            \"lang\": \"Shell + Curl\",\n            \"source\": \"curl --request GET \\\\\\n  --url 'https://cockroachlabs.cloud/api/v1/clusters/{cluster_id}/nodes?region_name=SOME_STRING_VALUE\u0026pagination.page=SOME_STRING_VALUE\u0026pagination.limit=SOME_INTEGER_VALUE\u0026pagination.as_of_time=SOME_STRING_VALUE\u0026pagination.sort_order=SOME_STRING_VALUE' \\\\\\n  --header 'Authorization: Bearer REPLACE_BEARER_TOKEN'\"\n          }\n        ]\n      }\n    },\n    \"/api/v1/clusters/{cluster_id}/sql-users\": {\n      \"get\": {\n        \"operationId\": \"CockroachCloud_ListSQLUsers\",\n        \"summary\": \"List SQL users for a cluster\",\n        \"description\": \"Sort order: Username\",\n        \"parameters\": [\n          {\n            \"name\": \"cluster_id\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"pagination.page\",\n            \"in\": \"query\",\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"pagination.limit\",\n            \"in\": \"query\",\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\"\n            }\n          },\n          {\n            \"name\": \"pagination.as_of_time\",\n            \"in\": \"query\",\n            \"schema\": {\n              \"type\": \"string\",\n              \"format\": \"date-time\"\n            }\n          },\n          {\n            \"name\": \"pagination.sort_order\",\n            \"in\": \"query\",\n            \"description\": \" - DESC: Sort in descending order. The default order is ascending.\",\n            \"schema\": {\n              \"type\": \"string\",\n              \"enum\": [\n                \"ASC\",\n                \"DESC\"\n              ]\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"A successful response.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ListSQLUsersResponse\"\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"description\": \"Returned when a request field is invalid.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {}\n              }\n            }\n          },\n          \"401\": {\n            \"description\": \"Returned when the token bearer cannot be authenticated.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {}\n              }\n            }\n          },\n          \"403\": {\n            \"description\": \"Returned when the user does not have permission to access the resource.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {}\n              }\n            }\n          },\n          \"404\": {\n            \"description\": \"Returned when the resource does not exist.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {}\n              }\n            }\n          },\n          \"500\": {\n            \"description\": \"Server error\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {}\n              }\n            }\n          },\n          \"default\": {\n            \"description\": \"An unexpected error response.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Status\"\n                }\n              }\n            }\n          }\n        },\n        \"tags\": [\n          \"CockroachCloud\"\n        ],\n        \"x-codeSamples\": [\n          {\n            \"lang\": \"Shell + Curl\",\n            \"source\": \"curl --request GET \\\\\\n  --url 'https://cockroachlabs.cloud/api/v1/clusters/{cluster_id}/sql-users?pagination.page=SOME_STRING_VALUE\u0026pagination.limit=SOME_INTEGER_VALUE\u0026pagination.as_of_time=SOME_STRING_VALUE\u0026pagination.sort_order=SOME_STRING_VALUE' \\\\\\n  --header 'Authorization: Bearer REPLACE_BEARER_TOKEN'\"\n          }\n        ]\n      },\n      \"post\": {\n        \"operationId\": \"CockroachCloud_CreateSQLUser\",\n        \"summary\": \"Create a new SQL user\",\n        \"parameters\": [\n          {\n            \"name\": \"cluster_id\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"type\": \"object\",\n                \"properties\": {\n                  \"name\": {\n                    \"type\": \"string\"\n                  },\n                  \"password\": {\n                    \"type\": \"string\"\n                  }\n                },\n                \"example\": {\n                  \"name\": \"example_username\",\n                  \"password\": \"example_password\"\n                },\n                \"required\": [\n                  \"name\",\n                  \"password\"\n                ],\n                \"title\": \"CreateSQLUserRequest\"\n              }\n            }\n          },\n          \"required\": true\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"A successful response.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/SQLUser\"\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"description\": \"Returned when a request field is invalid.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {}\n              }\n            }\n          },\n          \"401\": {\n            \"description\": \"Returned when the token bearer cannot be authenticated.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {}\n              }\n            }\n          },\n          \"403\": {\n            \"description\": \"Returned when the user does not have permission to access the resource.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {}\n              }\n            }\n          },\n          \"404\": {\n            \"description\": \"Returned when the resource does not exist.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {}\n              }\n            }\n          },\n          \"500\": {\n            \"description\": \"Server error\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {}\n              }\n            }\n          },\n          \"default\": {\n            \"description\": \"An unexpected error response.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Status\"\n                }\n              }\n            }\n          }\n        },\n        \"tags\": [\n          \"CockroachCloud\"\n        ],\n        \"x-codeSamples\": [\n          {\n            \"lang\": \"Shell + Curl\",\n            \"source\": \"curl --request POST \\\\\\n  --url https://cockroachlabs.cloud/api/v1/clusters/{cluster_id}/sql-users \\\\\\n  --header 'Authorization: Bearer REPLACE_BEARER_TOKEN' \\\\\\n  --header 'content-type: application/json' \\\\\\n  --data '{\\\"name\\\":\\\"example_username\\\",\\\"password\\\":\\\"example_password\\\"}'\"\n          }\n        ]\n      }\n    },\n    \"/api/v1/clusters/{cluster_id}/sql-users/{name}\": {\n      \"delete\": {\n        \"operationId\": \"CockroachCloud_DeleteSQLUser\",\n        \"summary\": \"Delete a SQL user\",\n        \"parameters\": [\n          {\n            \"name\": \"cluster_id\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"name\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"A successful response.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/SQLUser\"\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"description\": \"Returned when a request field is invalid.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {}\n              }\n            }\n          },\n          \"401\": {\n            \"description\": \"Returned when the token bearer cannot be authenticated.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {}\n              }\n            }\n          },\n          \"403\": {\n            \"description\": \"Returned when the user does not have permission to access the resource.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {}\n              }\n            }\n          },\n          \"404\": {\n            \"description\": \"Returned when the resource does not exist.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {}\n              }\n            }\n          },\n          \"500\": {\n            \"description\": \"Server error\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {}\n              }\n            }\n          },\n          \"default\": {\n            \"description\": \"An unexpected error response.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Status\"\n                }\n              }\n            }\n          }\n        },\n        \"tags\": [\n          \"CockroachCloud\"\n        ],\n        \"x-codeSamples\": [\n          {\n            \"lang\": \"Shell + Curl\",\n            \"source\": \"curl --request DELETE \\\\\\n  --url https://cockroachlabs.cloud/api/v1/clusters/{cluster_id}/sql-users/{name} \\\\\\n  --header 'Authorization: Bearer REPLACE_BEARER_TOKEN'\"\n          }\n        ]\n      }\n    },\n    \"/api/v1/clusters/{cluster_id}/sql-users/{name}/password\": {\n      \"put\": {\n        \"operationId\": \"CockroachCloud_UpdateSQLUserPassword\",\n        \"summary\": \"Update a SQL user's password\",\n        \"parameters\": [\n          {\n            \"name\": \"cluster_id\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"name\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"type\": \"object\",\n                \"properties\": {\n                  \"password\": {\n                    \"type\": \"string\"\n                  }\n                },\n                \"example\": {\n                  \"password\": \"example_new_password\"\n                },\n                \"required\": [\n                  \"password\"\n                ],\n                \"title\": \"UpdateSQLUserPasswordRequest\"\n              }\n            }\n          },\n          \"required\": true\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"A successful response.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/SQLUser\"\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"description\": \"Returned when a request field is invalid.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {}\n              }\n            }\n          },\n          \"401\": {\n            \"description\": \"Returned when the token bearer cannot be authenticated.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {}\n              }\n            }\n          },\n          \"403\": {\n            \"description\": \"Returned when the user does not have permission to access the resource.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {}\n              }\n            }\n          },\n          \"404\": {\n            \"description\": \"Returned when the resource does not exist.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {}\n              }\n            }\n          },\n          \"500\": {\n            \"description\": \"Server error\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {}\n              }\n            }\n          },\n          \"default\": {\n            \"description\": \"An unexpected error response.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Status\"\n                }\n              }\n            }\n          }\n        },\n        \"tags\": [\n          \"CockroachCloud\"\n        ],\n        \"x-codeSamples\": [\n          {\n            \"lang\": \"Shell + Curl\",\n            \"source\": \"curl --request PUT \\\\\\n  --url https://cockroachlabs.cloud/api/v1/clusters/{cluster_id}/sql-users/{name}/password \\\\\\n  --header 'Authorization: Bearer REPLACE_BEARER_TOKEN' \\\\\\n  --header 'content-type: application/json' \\\\\\n  --data '{\\\"password\\\":\\\"example_new_password\\\"}'\"\n          }\n        ]\n      }\n    },\n    \"/api/v1/invoices\": {\n      \"get\": {\n        \"operationId\": \"CockroachCloud_ListInvoices\",\n        \"summary\": \"List invoices for a given organization\",\n        \"description\": \"Sort order: invoice start date ascending\",\n        \"responses\": {\n          \"200\": {\n            \"description\": \"A successful response.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ListInvoicesResponse\"\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"description\": \"Returned when a request field is invalid.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {}\n              }\n            }\n          },\n          \"401\": {\n            \"description\": \"Returned when the token bearer cannot be authenticated.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {}\n              }\n            }\n          },\n          \"403\": {\n            \"description\": \"Returned when the user does not have permission to access the resource.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {}\n              }\n            }\n          },\n          \"404\": {\n            \"description\": \"Returned when the resource does not exist.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {}\n              }\n            }\n          },\n          \"500\": {\n            \"description\": \"Server error\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {}\n              }\n            }\n          },\n          \"default\": {\n            \"description\": \"An unexpected error response.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Status\"\n                }\n              }\n            }\n          }\n        },\n        \"tags\": [\n          \"CockroachCloud\"\n        ],\n        \"x-badges\": [\n          {\n            \"color\": \"blue\",\n            \"label\": \"PREVIEW\"\n          }\n        ],\n        \"x-codeSamples\": [\n          {\n            \"lang\": \"Shell + Curl\",\n            \"source\": \"curl --request GET \\\\\\n  --url https://cockroachlabs.cloud/api/v1/invoices \\\\\\n  --header 'Authorization: Bearer REPLACE_BEARER_TOKEN'\"\n          }\n        ]\n      }\n    },\n    \"/api/v1/invoices/{invoice_id}\": {\n      \"get\": {\n        \"operationId\": \"CockroachCloud_GetInvoice\",\n        \"summary\": \"Gets a specific invoice for an organization\",\n        \"parameters\": [\n          {\n            \"name\": \"invoice_id\",\n            \"in\": \"path\",\n            \"description\": \"invoice_id is the unique ID representing the invoice.\\ninvoice_id is used to retrieve a specific\\nbilling period's invoice.\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"A successful response.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Invoice\"\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"description\": \"Returned when a request field is invalid.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {}\n              }\n            }\n          },\n          \"401\": {\n            \"description\": \"Returned when the token bearer cannot be authenticated.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {}\n              }\n            }\n          },\n          \"403\": {\n            \"description\": \"Returned when the user does not have permission to access the resource.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {}\n              }\n            }\n          },\n          \"404\": {\n            \"description\": \"Returned when the resource does not exist.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {}\n              }\n            }\n          },\n          \"500\": {\n            \"description\": \"Server error\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {}\n              }\n            }\n          },\n          \"default\": {\n            \"description\": \"An unexpected error response.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Status\"\n                }\n              }\n            }\n          }\n        },\n        \"tags\": [\n          \"CockroachCloud\"\n        ],\n        \"x-badges\": [\n          {\n            \"color\": \"blue\",\n            \"label\": \"PREVIEW\"\n          }\n        ],\n        \"x-codeSamples\": [\n          {\n            \"lang\": \"Shell + Curl\",\n            \"source\": \"curl --request GET \\\\\\n  --url https://cockroachlabs.cloud/api/v1/invoices/{invoice_id} \\\\\\n  --header 'Authorization: Bearer REPLACE_BEARER_TOKEN'\"\n          }\n        ]\n      }\n    }\n  },\n  \"components\": {\n    \"schemas\": {\n      \"AWSEndpointConnectionStatus\": {\n        \"description\": \"The statuses map to the statuses returned by the AWS API.\",\n        \"type\": \"string\",\n        \"enum\": [\n          \"ENDPOINT_PENDING\",\n          \"ENDPOINT_PENDING_ACCEPTANCE\",\n          \"ENDPOINT_AVAILABLE\",\n          \"ENDPOINT_DELETING\",\n          \"ENDPOINT_DELETED\",\n          \"ENDPOINT_REJECTED\",\n          \"ENDPOINT_FAILED\",\n          \"ENDPOINT_EXPIRED\"\n        ]\n      },\n      \"AWSPrivateLinkServiceDetail\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"availability_zone_ids\": {\n            \"description\": \"availability_zone_ids are the identifiers for the availability zones\\nthat the service is available in.\",\n            \"type\": \"array\",\n            \"items\": {\n              \"type\": \"string\"\n            }\n          },\n          \"service_id\": {\n            \"description\": \"service_id is the server side of the PrivateLink\\nconnection. This is the same as AWSPrivateLinkEndpoint.service_id.\",\n            \"type\": \"string\"\n          },\n          \"service_name\": {\n            \"description\": \"service_name is the AWS service name customers use to create endpoints\\non their end.\",\n            \"type\": \"string\"\n          }\n        },\n        \"required\": [\n          \"service_name\",\n          \"service_id\",\n          \"availability_zone_ids\"\n        ]\n      },\n      \"AddEgressRuleResponse\": {\n        \"description\": \"AddEgressRuleResponse is the response message of the AddEgressRule RPC.\",\n        \"type\": \"object\",\n        \"properties\": {\n          \"Rule\": {\n            \"$ref\": \"#/components/schemas/EgressRule\"\n          }\n        },\n        \"required\": [\n          \"rule\"\n        ],\n        \"title\": \"AddEgressRuleResponse\"\n      },\n      \"AllowlistEntry\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"cidr_ip\": {\n            \"type\": \"string\"\n          },\n          \"cidr_mask\": {\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n          },\n          \"name\": {\n            \"type\": \"string\"\n          },\n          \"sql\": {\n            \"type\": \"boolean\"\n          },\n          \"ui\": {\n            \"type\": \"boolean\"\n          }\n        },\n        \"example\": {\n          \"cidr_ip\": \"192.168.1.1\",\n          \"cidr_mask\": 32,\n          \"name\": \"Example\",\n          \"sql\": true,\n          \"ui\": true\n        },\n        \"required\": [\n          \"cidr_ip\",\n          \"cidr_mask\",\n          \"ui\",\n          \"sql\"\n        ],\n        \"title\": \"AllowlistEntry\"\n      },\n      \"Any\": {\n        \"description\": \"`Any` contains an arbitrary serialized protocol buffer message along with a\\nURL that describes the type of the serialized message.\\n\\nProtobuf library provides support to pack/unpack Any values in the form\\nof utility functions or additional generated methods of the Any type.\\n\\nExample 1: Pack and unpack a message in C++.\\n\\n    Foo foo = ...;\\n    Any any;\\n    any.PackFrom(foo);\\n    ...\\n    if (any.UnpackTo(\u0026foo)) {\\n      ...\\n    }\\n\\nExample 2: Pack and unpack a message in Java.\\n\\n    Foo foo = ...;\\n    Any any = Any.pack(foo);\\n    ...\\n    if (any.is(Foo.class)) {\\n      foo = any.unpack(Foo.class);\\n    }\\n\\n Example 3: Pack and unpack a message in Python.\\n\\n    foo = Foo(...)\\n    any = Any()\\n    any.Pack(foo)\\n    ...\\n    if any.Is(Foo.DESCRIPTOR):\\n      any.Unpack(foo)\\n      ...\\n\\n Example 4: Pack and unpack a message in Go\\n\\n     foo := \u0026pb.Foo{...}\\n     any, err := ptypes.MarshalAny(foo)\\n     ...\\n     foo := \u0026pb.Foo{}\\n     if err := ptypes.UnmarshalAny(any, foo); err != nil {\\n       ...\\n     }\\n\\nThe pack methods provided by protobuf library will by default use\\n'type.googleapis.com/full.type.name' as the type URL and the unpack\\nmethods only use the fully qualified type name after the last '/'\\nin the type URL, for example \\\"foo.bar.com/x/y.z\\\" will yield type\\nname \\\"y.z\\\".\\n\\n\\nJSON\\n====\\nThe JSON representation of an `Any` value uses the regular\\nrepresentation of the deserialized, embedded message, with an\\nadditional field `@type` which contains the type URL. Example:\\n\\n    package google.profile;\\n    message Person {\\n      string first_name = 1;\\n      string last_name = 2;\\n    }\\n\\n    {\\n      \\\"@type\\\": \\\"type.googleapis.com/google.profile.Person\\\",\\n      \\\"firstName\\\": \u003cstring\u003e,\\n      \\\"lastName\\\": \u003cstring\u003e\\n    }\\n\\nIf the embedded message type is well-known and has a custom JSON\\nrepresentation, that representation will be embedded adding a field\\n`value` which holds the custom JSON in addition to the `@type`\\nfield. Example (for message [google.protobuf.Duration][]):\\n\\n    {\\n      \\\"@type\\\": \\\"type.googleapis.com/google.protobuf.Duration\\\",\\n      \\\"value\\\": \\\"1.212s\\\"\\n    }\",\n        \"type\": \"object\",\n        \"properties\": {\n          \"@type\": {\n            \"description\": \"A URL/resource name that uniquely identifies the type of the serialized\\nprotocol buffer message. This string must contain at least\\none \\\"/\\\" character. The last segment of the URL's path must represent\\nthe fully qualified name of the type (as in\\n`path/google.protobuf.Duration`). The name should be in a canonical form\\n(e.g., leading \\\".\\\" is not accepted).\\n\\nIn practice, teams usually precompile into the binary all types that they\\nexpect it to use in the context of Any. However, for URLs which use the\\nscheme `http`, `https`, or no scheme, one can optionally set up a type\\nserver that maps type URLs to message definitions as follows:\\n\\n* If no scheme is provided, `https` is assumed.\\n* An HTTP GET on the URL must yield a [google.protobuf.Type][]\\n  value in binary format, or produce an error.\\n* Applications are allowed to cache lookup results based on the\\n  URL, or have them precompiled into a binary to avoid any\\n  lookup. Therefore, binary compatibility needs to be preserved\\n  on changes to types. (Use versioned type names to manage\\n  breaking changes.)\\n\\nNote: this functionality is not currently available in the official\\nprotobuf release, and it is not used for type URLs beginning with\\ntype.googleapis.com.\\n\\nSchemes other than `http`, `https` (or the empty scheme) might be\\nused with implementation specific semantics.\",\n            \"type\": \"string\"\n          }\n        },\n        \"additionalProperties\": {}\n      },\n      \"AwsEndpointConnection\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"cloud_provider\": {\n            \"$ref\": \"#/components/schemas/api.CloudProvider\"\n          },\n          \"endpoint_id\": {\n            \"description\": \"endpoint_id is the client side of the PrivateLink connection.\",\n            \"type\": \"string\"\n          },\n          \"region_name\": {\n            \"description\": \"region_name is the cloud provider region name (i.e. us-east-1).\",\n            \"type\": \"string\"\n          },\n          \"service_id\": {\n            \"description\": \"service_id is the server side of the PrivateLink\\nconnection. This is the same as AWSPrivateLinkEndpoint.service_id.\",\n            \"type\": \"string\"\n          },\n          \"status\": {\n            \"$ref\": \"#/components/schemas/AWSEndpointConnectionStatus\"\n          }\n        },\n        \"required\": [\n          \"region_name\",\n          \"cloud_provider\",\n          \"status\",\n          \"endpoint_id\",\n          \"service_id\"\n        ]\n      },\n      \"AwsEndpointConnections\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"connections\": {\n            \"description\": \"Connections is a list of private endpoints.\",\n            \"type\": \"array\",\n            \"items\": {\n              \"$ref\": \"#/components/schemas/AwsEndpointConnection\"\n            }\n          }\n        },\n        \"required\": [\n          \"connections\"\n        ]\n      },\n      \"CMEKClusterInfo\": {\n        \"description\": \"CMEKClusterInfo contains the status of CMEK across an entire cluster,\\nincluding within each one its regions.\",\n        \"type\": \"object\",\n        \"properties\": {\n          \"region_infos\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"$ref\": \"#/components/schemas/CMEKRegionInfo\"\n            }\n          },\n          \"status\": {\n            \"$ref\": \"#/components/schemas/CMEKStatus\"\n          }\n        }\n      },\n      \"CMEKCustomerAction\": {\n        \"description\": \"CMEKCustomerAction enumerates the actions a customer can take on a cluster\\nthat has been enabled for CMEK.\",\n        \"type\": \"string\",\n        \"enum\": [\n          \"REVOKE\"\n        ]\n      },\n      \"CMEKKeyInfo\": {\n        \"description\": \"CMEKKeyInfo contains the status of a customer-provided key alongside the\\nspecification.\",\n        \"type\": \"object\",\n        \"properties\": {\n          \"created_at\": {\n            \"type\": \"string\",\n            \"format\": \"date-time\"\n          },\n          \"spec\": {\n            \"$ref\": \"#/components/schemas/CMEKKeySpecification\"\n          },\n          \"status\": {\n            \"$ref\": \"#/components/schemas/CMEKStatus\"\n          },\n          \"updated_at\": {\n            \"type\": \"string\",\n            \"format\": \"date-time\"\n          },\n          \"user_message\": {\n            \"type\": \"string\"\n          }\n        }\n      },\n      \"CMEKKeySpecification\": {\n        \"description\": \"CMEKKeySpecification contains all the details necessary to use a customer-provided\\nencryption key.\\n\\nThis involves the type/location of the key and the principal to authenticate as \\nwhen accessing it.\",\n        \"type\": \"object\",\n        \"properties\": {\n          \"auth_principal\": {\n            \"type\": \"string\"\n          },\n          \"type\": {\n            \"$ref\": \"#/components/schemas/CMEKKeyType\"\n          },\n          \"uri\": {\n            \"type\": \"string\"\n          }\n        }\n      },\n      \"CMEKKeyType\": {\n        \"description\": \"- UNKNOWN_KEY_TYPE: UNKNOWN should never be used; if it is used, it indicates a bug.\",\n        \"type\": \"string\",\n        \"enum\": [\n          \"AWS_KMS\",\n          \"GCP_CLOUD_KMS\",\n          \"NULL_KMS\"\n        ],\n        \"title\": \"CMEKKeyType enumerates types of customer-managed keys\"\n      },\n      \"CMEKRegionInfo\": {\n        \"description\": \"CMEKRegionInfo contains the status of CMEK within a region.\\n\\nThis includes current and past key specifications used within the region, \\nas well as the status of those specifications\",\n        \"type\": \"object\",\n        \"properties\": {\n          \"key_infos\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"$ref\": \"#/components/schemas/CMEKKeyInfo\"\n            }\n          },\n          \"region\": {\n            \"type\": \"string\"\n          },\n          \"status\": {\n            \"$ref\": \"#/components/schemas/CMEKStatus\"\n          }\n        }\n      },\n      \"CMEKRegionSpecification\": {\n        \"description\": \"CMEKRegionSpecification declares the customer-provided key specification that\\nshould be used in a given region.\",\n        \"type\": \"object\",\n        \"properties\": {\n          \"key_spec\": {\n            \"$ref\": \"#/components/schemas/CMEKKeySpecification\"\n          },\n          \"region\": {\n            \"type\": \"string\"\n          }\n        }\n      },\n      \"CMEKStatus\": {\n        \"description\": \"CMEKStatus describes the current status of CMEK for an entire CRDB cluster\\nor a CMEK key within a region.\\n\\n - UNKNOWN_STATUS: UNKNOWN should never be used; if it is used, it indicates a bug.\\n - DISABLED: DISABLED corresponds to the state of a cluster or region-level key when\\nCMEK has finished being disabled. By default, CMEK will be disabled for\\nnew clusters.\\n - DISABLING: DISABLING corresponds to the state of a cluster or region-level key when\\nCMEK is in the process of being disabled.\\n - DISABLE_FAILED: DISABLE_FAILED corresponds to the state of a cluster or region-level key\\nwhen CMEK has failed to be disabled.\\n - ENABLED: ENABLED corresponds to the state of a cluster or region-level key when\\nCMEK is enabled.\\n - ENABLING: ENABLING corresponds to the state of a cluster or region-level key when\\nCMEK is in the process of being enabled.\\n - ENABLE_FAILED: ENABLE_FAILED corresponds to the state of a cluster or region-level key\\nwhen CMEK has failed to be enabled.\\n - ROTATING: ROTATING corresponds to the state of a cluster or region when the a new\\nspec is in the process of being enabled while an existing spec is being\\ndisabled.\\n - ROTATE_FAILED: ROTATE_FAILED corresponds to the state of a cluster or region if there was\\na failure to update from one CMEK spec to another.\\n - REVOKED: REVOKED corresponds to the state of a cluster or region-level key when the\\ncustomer has revoked CockroachLab's permissions for their key.\\n - REVOKING: REVOKING corresponds to the state of a cluster or region-level key when\\nCMEK is in the process of being revoked.\\n - REVOKE_FAILED: REVOKE_FAILED corresponds to the state of a cluster or region-level key\\nwhen CMEK has failed to be revoked.\",\n        \"type\": \"string\",\n        \"enum\": [\n          \"DISABLED\",\n          \"DISABLING\",\n          \"DISABLE_FAILED\",\n          \"ENABLED\",\n          \"ENABLING\",\n          \"ENABLE_FAILED\",\n          \"ROTATING\",\n          \"ROTATE_FAILED\",\n          \"REVOKED\",\n          \"REVOKING\",\n          \"REVOKE_FAILED\"\n        ]\n      },\n      \"CloudProviderRegion\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"distance\": {\n            \"type\": \"number\",\n            \"format\": \"float\",\n            \"title\": \"Distance in miles, based on client IP address\"\n          },\n          \"location\": {\n            \"type\": \"string\"\n          },\n          \"name\": {\n            \"type\": \"string\"\n          },\n          \"provider\": {\n            \"$ref\": \"#/components/schemas/api.CloudProvider\"\n          },\n          \"serverless\": {\n            \"type\": \"boolean\"\n          }\n        },\n        \"required\": [\n          \"name\",\n          \"location\",\n          \"provider\",\n          \"serverless\",\n          \"distance\"\n        ]\n      },\n      \"CloudWatchConfig\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"log_group_name\": {\n            \"description\": \"log_group_name is the customized log group name.\",\n            \"type\": \"string\"\n          },\n          \"role_arn\": {\n            \"description\": \"role_arn is the IAM role used to upload metric segments to the\\ntarget AWS account.\",\n            \"type\": \"string\"\n          },\n          \"target_region\": {\n            \"description\": \"target_region specifies the specific AWS region that the metrics will\\nbe exported to.\",\n            \"type\": \"string\"\n          }\n        }\n      },\n      \"Cluster\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"account_id\": {\n            \"type\": \"string\"\n          },\n          \"cloud_provider\": {\n            \"$ref\": \"#/components/schemas/api.CloudProvider\"\n          },\n          \"cockroach_version\": {\n            \"type\": \"string\"\n          },\n          \"config\": {\n            \"$ref\": \"#/components/schemas/ClusterConfig\"\n          },\n          \"created_at\": {\n            \"type\": \"string\",\n            \"format\": \"date-time\"\n          },\n          \"creator_id\": {\n            \"type\": \"string\"\n          },\n          \"deleted_at\": {\n            \"type\": \"string\",\n            \"format\": \"date-time\"\n          },\n          \"id\": {\n            \"type\": \"string\"\n          },\n          \"name\": {\n            \"type\": \"string\"\n          },\n          \"network_visibility\": {\n            \"$ref\": \"#/components/schemas/NetworkVisiblity\"\n          },\n          \"operation_status\": {\n            \"$ref\": \"#/components/schemas/ClusterStatusType\"\n          },\n          \"plan\": {\n            \"$ref\": \"#/components/schemas/Plan\"\n          },\n          \"regions\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"$ref\": \"#/components/schemas/Region\"\n            }\n          },\n          \"sql_dns\": {\n            \"description\": \"sql_dns is the DNS name of SQL interface of the cluster.\",\n            \"type\": \"string\"\n          },\n          \"state\": {\n            \"$ref\": \"#/components/schemas/ClusterStateType\"\n          },\n          \"updated_at\": {\n            \"type\": \"string\",\n            \"format\": \"date-time\"\n          }\n        },\n        \"example\": {\n          \"account_id\": \"\",\n          \"cloud_provider\": \"GCP\",\n          \"cockroach_version\": \"v21.2.4\",\n          \"config\": {\n            \"serverless\": {\n              \"routing_id\": \"example-cluster-1533\",\n              \"spend_limit\": 0\n            }\n          },\n          \"created_at\": \"2022-03-22T20:23:11.285067Z\",\n          \"creator_id\": \"7cde0cd9-0d8a-4008-8f90-45092ce8afc1\",\n          \"deleted_at\": null,\n          \"id\": \"35c4abb2-bb66-46d7-afed-25ebef5ed2aa\",\n          \"name\": \"example-cluster\",\n          \"operation_status\": \"CLUSTER_STATUS_UNSPECIFIED\",\n          \"plan\": \"SERVERLESS\",\n          \"regions\": [\n            {\n              \"name\": \"us-central1\",\n              \"node_count\": 0,\n              \"sql_dns\": \"free-tier7.gcp-us-central1.crdb.io\",\n              \"ui_dns\": \"\"\n            }\n          ],\n          \"state\": \"CREATED\",\n          \"updated_at\": \"2022-03-22T20:23:11.879593Z\"\n        },\n        \"required\": [\n          \"id\",\n          \"name\",\n          \"cockroach_version\",\n          \"plan\",\n          \"cloud_provider\",\n          \"state\",\n          \"creator_id\",\n          \"operation_status\",\n          \"config\",\n          \"regions\"\n        ]\n      },\n      \"ClusterConfig\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"dedicated\": {\n            \"$ref\": \"#/components/schemas/DedicatedHardwareConfig\"\n          },\n          \"serverless\": {\n            \"$ref\": \"#/components/schemas/ServerlessClusterConfig\"\n          }\n        }\n      },\n      \"ClusterStateType\": {\n        \"description\": \" - LOCKED: An exclusive operation is being performed on this cluster.\\nOther operations should not proceed if they did not set a cluster into the LOCKED state.\",\n        \"type\": \"string\",\n        \"enum\": [\n          \"CREATING\",\n          \"CREATED\",\n          \"CREATION_FAILED\",\n          \"DELETED\",\n          \"LOCKED\"\n        ]\n      },\n      \"ClusterStatusType\": {\n        \"type\": \"string\",\n        \"enum\": [\n          \"CLUSTER_STATUS_UNSPECIFIED\",\n          \"CRDB_MAJOR_UPGRADE_RUNNING\",\n          \"CRDB_MAJOR_UPGRADE_FAILED\",\n          \"CRDB_MAJOR_ROLLBACK_RUNNING\",\n          \"CRDB_MAJOR_ROLLBACK_FAILED\",\n          \"CRDB_PATCH_RUNNING\",\n          \"CRDB_PATCH_FAILED\",\n          \"CRDB_SCALE_RUNNING\",\n          \"CRDB_SCALE_FAILED\",\n          \"MAINTENANCE_RUNNING\",\n          \"CRDB_INSTANCE_UPDATE_RUNNING\",\n          \"CRDB_INSTANCE_UPDATE_FAILED\",\n          \"CRDB_EDIT_CLUSTER_RUNNING\",\n          \"CRDB_EDIT_CLUSTER_FAILED\",\n          \"CRDB_CMEK_OPERATION_RUNNING\",\n          \"CRDB_CMEK_OPERATION_FAILED\",\n          \"TENANT_RESTORE_RUNNING\",\n          \"TENANT_RESTORE_FAILED\",\n          \"CRDB_LOG_EXPORT_OPERATION_RUNNING\",\n          \"CRDB_LOG_EXPORT_OPERATION_FAILED\",\n          \"CRDB_CLUSTER_DISRUPTION_RUNNING\",\n          \"CRDB_CLUSTER_DISRUPTION_FAILED\",\n          \"CRDB_REPAVE_RUNNING\",\n          \"CRDB_REPAVE_FAILED\"\n        ]\n      },\n      \"CreateClusterRequest\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"name\": {\n            \"description\": \"Name must be 6-20 characters in length and can include numbers,\\nlowercase letters, and dashes (but no leading or trailing dashes).\",\n            \"type\": \"string\"\n          },\n          \"provider\": {\n            \"$ref\": \"#/components/schemas/api.CloudProvider\"\n          },\n          \"spec\": {\n            \"$ref\": \"#/components/schemas/CreateClusterSpecification\"\n          }\n        },\n        \"example\": {\n          \"name\": \"test-cluster\",\n          \"provider\": \"GCP\",\n          \"spec\": {\n            \"serverless\": {\n              \"regions\": [\n                \"us-central1\"\n              ],\n              \"spend_limit\": 0\n            }\n          }\n        },\n        \"required\": [\n          \"name\",\n          \"provider\",\n          \"spec\"\n        ],\n        \"title\": \"CreateClusterRequest\"\n      },\n      \"CreateClusterSpecification\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"dedicated\": {\n            \"$ref\": \"#/components/schemas/DedicatedClusterCreateSpecification\"\n          },\n          \"serverless\": {\n            \"$ref\": \"#/components/schemas/ServerlessClusterCreateSpecification\"\n          }\n        }\n      },\n      \"Currency\": {\n        \"description\": \"Currency is the set of currencies supported in CockroachDB Cloud.\",\n        \"type\": \"string\",\n        \"enum\": [\n          \"USD\",\n          \"CRDB_CLOUD_CREDITS\"\n        ]\n      },\n      \"CurrencyAmount\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"amount\": {\n            \"description\": \"amount is the quantity of currency.\",\n            \"type\": \"number\",\n            \"format\": \"double\"\n          },\n          \"currency\": {\n            \"$ref\": \"#/components/schemas/Currency\"\n          }\n        }\n      },\n      \"DatadogConfig\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"api_key\": {\n            \"type\": \"string\"\n          },\n          \"site\": {\n            \"$ref\": \"#/components/schemas/DatadogConfig.DatadogSite\"\n          }\n        }\n      },\n      \"DatadogConfig.DatadogSite\": {\n        \"type\": \"string\",\n        \"enum\": [\n          \"US1\",\n          \"US3\",\n          \"US5\",\n          \"US1_GOV\",\n          \"EU1\"\n        ]\n      },\n      \"DedicatedClusterCreateSpecification\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"cockroach_version\": {\n            \"description\": \"The CockroachDB version for the cluster. The current version\\nis used if omitted.\",\n            \"type\": \"string\"\n          },\n          \"hardware\": {\n            \"$ref\": \"#/components/schemas/DedicatedHardwareCreateSpecification\"\n          },\n          \"network_visibility\": {\n            \"$ref\": \"#/components/schemas/NetworkVisiblity\"\n          },\n          \"region_nodes\": {\n            \"description\": \"Region keys should match the cloud provider's zone code.\\nFor example, for Oregon, set region_name to \\\"us-west2\\\" for\\nGCP and \\\"us-west-2\\\" for AWS. Values represent the node count.\",\n            \"type\": \"object\",\n            \"additionalProperties\": {\n              \"format\": \"int32\",\n              \"type\": \"integer\"\n            }\n          }\n        },\n        \"required\": [\n          \"region_nodes\",\n          \"hardware\"\n        ]\n      },\n      \"DedicatedClusterUpdateSpecification\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"cmek_region_specs\": {\n            \"description\": \"This field should contain the CMEK specs for newly added regions. If a\\nCMEK spec is provided for an existing region, the request is invalid and\\nwill fail.\",\n            \"type\": \"array\",\n            \"items\": {\n              \"$ref\": \"#/components/schemas/CMEKRegionSpecification\"\n            }\n          },\n          \"hardware\": {\n            \"$ref\": \"#/components/schemas/DedicatedHardwareUpdateSpecification\"\n          },\n          \"region_nodes\": {\n            \"description\": \"Region keys should match the cloud provider's zone code.\\nFor example, for Oregon, set region_name to \\\"us-west2\\\" for\\nGCP and \\\"us-west-2\\\" for AWS. Values represent the node count.\",\n            \"type\": \"object\",\n            \"additionalProperties\": {\n              \"format\": \"int32\",\n              \"type\": \"integer\"\n            }\n          }\n        }\n      },\n      \"DedicatedHardwareConfig\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"disk_iops\": {\n            \"description\": \"disk_iops is the number of disk I/O operations per second that are\\npermitted on each node in the cluster. Zero indicates the cloud\\nprovider-specific default.\",\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n          },\n          \"machine_type\": {\n            \"description\": \"machine_type is the machine type identifier within the given cloud\\nprovider, ex. m5.xlarge, n2-standard-4.\",\n            \"type\": \"string\"\n          },\n          \"memory_gib\": {\n            \"description\": \"memory_gib is the memory GiB per node in the cluster.\",\n            \"type\": \"number\",\n            \"format\": \"float\"\n          },\n          \"num_virtual_cpus\": {\n            \"description\": \"num_virtual_cpus is the number of virtual CPUs per node in the cluster.\",\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n          },\n          \"storage_gib\": {\n            \"description\": \"storage_gib is the number of storage GiB per node in the cluster.\",\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n          }\n        },\n        \"required\": [\n          \"machine_type\",\n          \"num_virtual_cpus\",\n          \"storage_gib\",\n          \"memory_gib\",\n          \"disk_iops\"\n        ]\n      },\n      \"DedicatedHardwareCreateSpecification\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"disk_iops\": {\n            \"description\": \"disk_iops is the number of disk I/O operations per second that are\\npermitted on each node in the cluster. Zero indicates the cloud\\nprovider-specific default. Only available for AWS clusters.\",\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n          },\n          \"machine_spec\": {\n            \"$ref\": \"#/components/schemas/DedicatedMachineTypeSpecification\"\n          },\n          \"storage_gib\": {\n            \"description\": \"storage_gib is the number of storage GiB per node in the cluster.\\nZero indicates default to the lowest storage GiB available given machine specs.\",\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n          }\n        },\n        \"required\": [\n          \"machine_spec\",\n          \"storage_gib\"\n        ]\n      },\n      \"DedicatedHardwareUpdateSpecification\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"disk_iops\": {\n            \"description\": \"disk_iops is the number of disk I/O operations per second that are\\npermitted on each node in the cluster. Zero indicates the cloud\\nprovider-specific default. Only available for AWS clusters.\",\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n          },\n          \"machine_spec\": {\n            \"$ref\": \"#/components/schemas/DedicatedMachineTypeSpecification\"\n          },\n          \"storage_gib\": {\n            \"description\": \"storage_gib is the number of storage GiB per node in the cluster.\",\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n          }\n        }\n      },\n      \"DedicatedMachineTypeSpecification\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"machine_type\": {\n            \"description\": \"machine_type is the machine type identifier within the given cloud\\nprovider, ex. m5.xlarge, n2-standard-4.\",\n            \"type\": \"string\"\n          },\n          \"num_virtual_cpus\": {\n            \"description\": \"num_virtual_cpus may be used to automatically select a machine type\\naccording to the desired number of vCPUs.\",\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n          }\n        }\n      },\n      \"DeleteEgressRuleResponse\": {\n        \"description\": \"DeleteEgressRuleResponse is the output for the DeleteEgressRule RPC.\",\n        \"type\": \"object\",\n        \"properties\": {\n          \"Rule\": {\n            \"$ref\": \"#/components/schemas/EgressRule\"\n          }\n        },\n        \"required\": [\n          \"rule\"\n        ],\n        \"title\": \"DeleteEgressRuleResponse\"\n      },\n      \"DeleteMetricExportResponse\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"cluster_id\": {\n            \"type\": \"string\"\n          },\n          \"status\": {\n            \"$ref\": \"#/components/schemas/MetricExportStatus\"\n          },\n          \"type\": {\n            \"$ref\": \"#/components/schemas/MetricExportIntegrationType\"\n          }\n        }\n      },\n      \"EditEgressRuleResponse\": {\n        \"description\": \"EditEgressRuleResponse is the output message to the EditEgressRule RPC.\",\n        \"type\": \"object\",\n        \"properties\": {\n          \"Rule\": {\n            \"$ref\": \"#/components/schemas/EgressRule\"\n          }\n        },\n        \"required\": [\n          \"rule\"\n        ],\n        \"title\": \"EditEgressRuleResponse\"\n      },\n      \"EgressRule\": {\n        \"description\": \"EgressRule represents a network egress rule.\",\n        \"type\": \"object\",\n        \"properties\": {\n          \"cluster_id\": {\n            \"description\": \"cluster_id identifies the cluster to which this egress rule applies.\",\n            \"type\": \"string\"\n          },\n          \"created_at\": {\n            \"description\": \"created_at is the time at which the time at which the egress rule was\\ncreated.\",\n            \"type\": \"string\",\n            \"format\": \"date-time\"\n          },\n          \"crl_managed\": {\n            \"description\": \"crl_managed indicates this egress rule is managed by CockroachDB Cloud\\nservices. This field is set by the server.\",\n            \"type\": \"boolean\"\n          },\n          \"description\": {\n            \"description\": \"description is a longer that serves to document the rules purpose.\",\n            \"type\": \"string\"\n          },\n          \"destination\": {\n            \"description\": \"destination is the endpoint (or subnetwork if CIDR) to which traffic is\\nallowed.\",\n            \"type\": \"string\"\n          },\n          \"id\": {\n            \"description\": \"id uniquely identifies this egress rule.\",\n            \"type\": \"string\"\n          },\n          \"name\": {\n            \"description\": \"name is the name of the egress rule.\",\n            \"type\": \"string\"\n          },\n          \"paths\": {\n            \"description\": \"paths are the allowed URL paths. Only valid if Type=\\\"FQDN\\\".\",\n            \"type\": \"array\",\n            \"items\": {\n              \"type\": \"string\"\n            }\n          },\n          \"ports\": {\n            \"description\": \"ports are the allowed ports for TCP protocol. If Empty, all ports are\\nallowed.\",\n            \"type\": \"array\",\n            \"items\": {\n              \"format\": \"int32\",\n              \"type\": \"integer\"\n            }\n          },\n          \"state\": {\n            \"description\": \"state indicates the state of the egress rule.\",\n            \"type\": \"string\"\n          },\n          \"type\": {\n            \"description\": \"type classifies the destination field. Valid types include: \\\"FQDN\\\",\\n\\\"CIDR\\\".\",\n            \"type\": \"string\"\n          }\n        },\n        \"required\": [\n          \"name\",\n          \"id\",\n          \"cluster_id\",\n          \"type\",\n          \"state\",\n          \"crl_managed\",\n          \"destination\",\n          \"description\"\n        ],\n        \"title\": \"EgressRule\"\n      },\n      \"GetEgressRuleResponse\": {\n        \"description\": \"GetEgressRuleResponse is the response message to the GetEgressRule RPC.\",\n        \"type\": \"object\",\n        \"properties\": {\n          \"rule\": {\n            \"$ref\": \"#/components/schemas/EgressRule\"\n          }\n        },\n        \"required\": [\n          \"rule\"\n        ],\n        \"title\": \"GetEgressRuleResponse\"\n      },\n      \"Invoice\": {\n        \"description\": \"Invoice message represents the details and the total charges associated with\\none billing period, which starts at the beginning of the month and ends at\\nthe beginning of the next month.\\n\\nThe message also includes details about each invoice item.\",\n        \"type\": \"object\",\n        \"properties\": {\n          \"balances\": {\n            \"description\": \"balances are the amounts of currency left at the time of the invoice.\",\n            \"type\": \"array\",\n            \"items\": {\n              \"$ref\": \"#/components/schemas/CurrencyAmount\"\n            }\n          },\n          \"invoice_id\": {\n            \"description\": \"invoice_id is the unique ID representing the invoice.\",\n            \"type\": \"string\"\n          },\n          \"invoice_items\": {\n            \"description\": \"invoice_items are sorted by the cluster name.\",\n            \"type\": \"array\",\n            \"items\": {\n              \"$ref\": \"#/components/schemas/InvoiceItem\"\n            }\n          },\n          \"period_end\": {\n            \"description\": \"period_end is the end of the billing period (exclusive).\",\n            \"type\": \"string\",\n            \"format\": \"date-time\"\n          },\n          \"period_start\": {\n            \"description\": \"period_start is the start of the billing period (inclusive).\",\n            \"type\": \"string\",\n            \"format\": \"date-time\"\n          },\n          \"totals\": {\n            \"description\": \"totals is a list of the total amounts per currency.\",\n            \"type\": \"array\",\n            \"items\": {\n              \"$ref\": \"#/components/schemas/CurrencyAmount\"\n            }\n          }\n        },\n        \"required\": [\n          \"invoice_id\",\n          \"totals\",\n          \"period_start\",\n          \"period_end\",\n          \"invoice_items\",\n          \"balances\"\n        ]\n      },\n      \"InvoiceItem\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"cluster\": {\n            \"$ref\": \"#/components/schemas/Cluster\"\n          },\n          \"line_items\": {\n            \"description\": \"line_items contain all the relevant line items from the Metronome invoice.\",\n            \"type\": \"array\",\n            \"items\": {\n              \"$ref\": \"#/components/schemas/LineItem\"\n            }\n          },\n          \"totals\": {\n            \"description\": \"totals is a list of the total amounts of line items per currency.\",\n            \"type\": \"array\",\n            \"items\": {\n              \"$ref\": \"#/components/schemas/CurrencyAmount\"\n            }\n          }\n        },\n        \"required\": [\n          \"cluster\",\n          \"totals\",\n          \"line_items\"\n        ]\n      },\n      \"KeysetPaginationRequest\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"as_of_time\": {\n            \"type\": \"string\",\n            \"format\": \"date-time\"\n          },\n          \"limit\": {\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n          },\n          \"page\": {\n            \"type\": \"string\"\n          },\n          \"sort_order\": {\n            \"$ref\": \"#/components/schemas/SortOrder\"\n          }\n        }\n      },\n      \"KeysetPaginationResponse\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"next_page\": {\n            \"type\": \"string\"\n          },\n          \"previous_page\": {\n            \"type\": \"string\"\n          }\n        }\n      },\n      \"LineItem\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"description\": {\n            \"description\": \"description contains the details of the line item (i.e t3 micro).\",\n            \"type\": \"string\"\n          },\n          \"quantity\": {\n            \"description\": \"quantity is the number of the specific line items used.\",\n            \"type\": \"number\",\n            \"format\": \"double\"\n          },\n          \"quantity_unit\": {\n            \"$ref\": \"#/components/schemas/QuantityUnitType\"\n          },\n          \"total\": {\n            \"$ref\": \"#/components/schemas/CurrencyAmount\"\n          },\n          \"unit_cost\": {\n            \"description\": \"unit_cost is the cost per unit of line item.\",\n            \"type\": \"number\",\n            \"format\": \"double\"\n          }\n        },\n        \"required\": [\n          \"description\",\n          \"quantity\",\n          \"unit_cost\",\n          \"total\",\n          \"quantity_unit\"\n        ]\n      },\n      \"ListAllowlistEntriesResponse\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"allowlist\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"$ref\": \"#/components/schemas/AllowlistEntry\"\n            }\n          },\n          \"pagination\": {\n            \"$ref\": \"#/components/schemas/KeysetPaginationResponse\"\n          },\n          \"propagating\": {\n            \"type\": \"boolean\"\n          }\n        },\n        \"required\": [\n          \"allowlist\",\n          \"propagating\"\n        ],\n        \"title\": \"ListAllowlistEntriesResponse\"\n      },\n      \"ListAvailableRegionsResponse\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"pagination\": {\n            \"$ref\": \"#/components/schemas/KeysetPaginationResponse\"\n          },\n          \"regions\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"$ref\": \"#/components/schemas/CloudProviderRegion\"\n            }\n          }\n        },\n        \"required\": [\n          \"regions\"\n        ]\n      },\n      \"ListClusterNodesResponse\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"nodes\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"$ref\": \"#/components/schemas/Node\"\n            }\n          },\n          \"pagination\": {\n            \"$ref\": \"#/components/schemas/KeysetPaginationResponse\"\n          }\n        },\n        \"required\": [\n          \"nodes\"\n        ]\n      },\n      \"ListClustersResponse\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"clusters\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"$ref\": \"#/components/schemas/Cluster\"\n            }\n          },\n          \"pagination\": {\n            \"$ref\": \"#/components/schemas/KeysetPaginationResponse\"\n          }\n        },\n        \"required\": [\n          \"clusters\"\n        ]\n      },\n      \"ListEgressRulesResponse\": {\n        \"description\": \"ListEgressRulesResponse is the output for the ListEgressRules RPC.\",\n        \"type\": \"object\",\n        \"properties\": {\n          \"pagination\": {\n            \"$ref\": \"#/components/schemas/KeysetPaginationResponse\"\n          },\n          \"rules\": {\n            \"description\": \"rules are the egress rules associated with the given CockroachDB cluster.\",\n            \"type\": \"array\",\n            \"items\": {\n              \"$ref\": \"#/components/schemas/EgressRule\"\n            }\n          }\n        },\n        \"title\": \"ListEgressRulesResponse\"\n      },\n      \"ListInvoicesResponse\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"invoices\": {\n            \"description\": \"invoices are sorted by period_start time.\",\n            \"type\": \"array\",\n            \"items\": {\n              \"$ref\": \"#/components/schemas/Invoice\"\n            }\n          }\n        },\n        \"required\": [\n          \"invoices\"\n        ]\n      },\n      \"ListSQLUsersResponse\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"pagination\": {\n            \"$ref\": \"#/components/schemas/KeysetPaginationResponse\"\n          },\n          \"users\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"$ref\": \"#/components/schemas/SQLUser\"\n            }\n          }\n        },\n        \"required\": [\n          \"users\"\n        ]\n      },\n      \"LogExportClusterInfo\": {\n        \"description\": \"LogExportClusterInfo contains a package of information that fully\\ndescribes both the intended state of the log export configuration for\\na specific cluster but also some metadata around its deployment\\nstatus, any error messages, and some timestamps.\",\n        \"type\": \"object\",\n        \"properties\": {\n          \"cluster_id\": {\n            \"type\": \"string\"\n          },\n          \"created_at\": {\n            \"type\": \"string\",\n            \"format\": \"date-time\"\n          },\n          \"spec\": {\n            \"$ref\": \"#/components/schemas/LogExportClusterSpecification\"\n          },\n          \"status\": {\n            \"$ref\": \"#/components/schemas/LogExportStatus\"\n          },\n          \"updated_at\": {\n            \"type\": \"string\",\n            \"format\": \"date-time\"\n          },\n          \"user_message\": {\n            \"type\": \"string\"\n          }\n        }\n      },\n      \"LogExportClusterSpecification\": {\n        \"description\": \"LogExportClusterSpecification contains all the data necessary to\\nconfigure log export for an individual cluster. Users would supply\\nthis data via the API and also receive it back when inspecting the\\nstate of their log export configuration.\",\n        \"type\": \"object\",\n        \"properties\": {\n          \"auth_principal\": {\n            \"description\": \"auth_principal is either the AWS Role ARN that identifies a role\\nthat the cluster account can assume to write to CloudWatch or the\\nGCP Project ID that the cluster service account has permissions to\\nwrite to for cloud logging.\",\n            \"type\": \"string\"\n          },\n          \"groups\": {\n            \"description\": \"groups is a collection of log group configurations to customize\\nwhich CRDB channels get aggregated into different groups at the\\ntarget sink. Unconfigured channels will be sent to the default\\nlocations via the settings above.\",\n            \"type\": \"array\",\n            \"items\": {\n              \"$ref\": \"#/components/schemas/LogExportGroup\"\n            }\n          },\n          \"log_name\": {\n            \"description\": \"log_name is an identifier for the logs in the customer's log sink.\",\n            \"type\": \"string\"\n          },\n          \"redact\": {\n            \"description\": \"redact controls whether logs are redacted before forwarding to\\ncustomer sinks. By default they are not redacted.\",\n            \"type\": \"boolean\"\n          },\n          \"region\": {\n            \"description\": \"region controls whether all logs are sent to a specific region in\\nthe customer sink. By default, logs will remain their region of\\norigin depending on the cluster node's region.\",\n            \"type\": \"string\"\n          },\n          \"type\": {\n            \"$ref\": \"#/components/schemas/LogExportType\"\n          }\n        }\n      },\n      \"LogExportGroup\": {\n        \"description\": \"LogExportGroup contains an export configuration for a single\\nlog group which can route logs for a subset of CRDB channels.\",\n        \"type\": \"object\",\n        \"properties\": {\n          \"channels\": {\n            \"description\": \"channels is a list of CRDB log channels to include in this\\ngroup.\",\n            \"type\": \"array\",\n            \"items\": {\n              \"type\": \"string\"\n            }\n          },\n          \"log_name\": {\n            \"type\": \"string\",\n            \"title\": \"log_name is the name of the group, reflected in the log sink\"\n          },\n          \"min_level\": {\n            \"description\": \"min_level is the minimum log level to filter to this log\\ngroup. Should be one of INFO, WARNING, ERROR, FATAL.\",\n            \"type\": \"string\"\n          },\n          \"redact\": {\n            \"description\": \"redact is a boolean that governs whether this log group\\nshould aggregate redacted logs. Redaction settings will\\ninherit from the cluster log export defaults if unset.\",\n            \"type\": \"boolean\"\n          }\n        }\n      },\n      \"LogExportStatus\": {\n        \"description\": \"LogExportStatus encodes the possible states that a configuration can\\nbe in as it is created, deployed, and disabled.\",\n        \"type\": \"string\",\n        \"enum\": [\n          \"DISABLED\",\n          \"DISABLING\",\n          \"DISABLE_FAILED\",\n          \"ENABLED\",\n          \"ENABLING\",\n          \"ENABLE_FAILED\"\n        ]\n      },\n      \"LogExportType\": {\n        \"description\": \"LogExportType encodes the cloud selection that we're exporting to\\nalong with the cloud logging platform.\\n\\nCurrently, each cloud has a single logging platform.\",\n        \"type\": \"string\",\n        \"enum\": [\n          \"AWS_CLOUDWATCH\",\n          \"GCP_CLOUD_LOGGING\"\n        ]\n      },\n      \"MetricExportInfo\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"cluster_id\": {\n            \"type\": \"string\"\n          },\n          \"integration\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"$ref\": \"#/components/schemas/MetricExportIntegrationInfo\"\n            }\n          }\n        }\n      },\n      \"MetricExportIntegrationInfo\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"cloudwatch\": {\n            \"$ref\": \"#/components/schemas/CloudWatchConfig\"\n          },\n          \"datadog\": {\n            \"$ref\": \"#/components/schemas/DatadogConfig\"\n          },\n          \"status\": {\n            \"$ref\": \"#/components/schemas/MetricExportStatus\"\n          },\n          \"user_message\": {\n            \"type\": \"string\"\n          }\n        }\n      },\n      \"MetricExportIntegrationType\": {\n        \"type\": \"string\",\n        \"enum\": [\n          \"DATADOG\",\n          \"CLOUDWATCH\"\n        ]\n      },\n      \"MetricExportStatus\": {\n        \"type\": \"string\",\n        \"enum\": [\n          \"NOT_DEPLOYED\",\n          \"DISABLING\",\n          \"ENABLING\",\n          \"ENABLED\",\n          \"ERROR\"\n        ]\n      },\n      \"NetworkVisiblity\": {\n        \"type\": \"string\",\n        \"enum\": [\n          \"NETWORK_VISIBILITY_PUBLIC\",\n          \"NETWORK_VISIBILITY_PRIVATE\"\n        ]\n      },\n      \"Node\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"name\": {\n            \"type\": \"string\"\n          },\n          \"region_name\": {\n            \"type\": \"string\"\n          },\n          \"status\": {\n            \"$ref\": \"#/components/schemas/NodeStatus\"\n          }\n        },\n        \"required\": [\n          \"name\",\n          \"region_name\",\n          \"status\"\n        ]\n      },\n      \"NodeStatus\": {\n        \"type\": \"string\",\n        \"enum\": [\n          \"LIVE\",\n          \"NOT_READY\"\n        ]\n      },\n      \"Plan\": {\n        \"description\": \" - DEDICATED: A paid plan that offers dedicated hardware in any location.\\n - CUSTOM: A plan option that is used for clusters whose machine configs are not \\nsupported in self-service. All INVOICE clusters are under this plan option.\\n - SERVERLESS: A paid plan that runs on shared hardware and caps the users'\\nmaximum monthly spending to a user-specified (possibly 0) amount.\",\n        \"type\": \"string\",\n        \"enum\": [\n          \"DEDICATED\",\n          \"CUSTOM\",\n          \"SERVERLESS\"\n        ]\n      },\n      \"PrivateEndpointService\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"aws\": {\n            \"$ref\": \"#/components/schemas/AWSPrivateLinkServiceDetail\"\n          },\n          \"cloud_provider\": {\n            \"$ref\": \"#/components/schemas/api.CloudProvider\"\n          },\n          \"region_name\": {\n            \"description\": \"region_name is the cloud provider region name (i.e. us-east-1).\",\n            \"type\": \"string\"\n          },\n          \"status\": {\n            \"$ref\": \"#/components/schemas/PrivateEndpointServiceStatus\"\n          }\n        },\n        \"required\": [\n          \"region_name\",\n          \"cloud_provider\",\n          \"status\",\n          \"aws\"\n        ]\n      },\n      \"PrivateEndpointServiceStatus\": {\n        \"description\": \"- ENDPOINT_SERVICE_STATUS_DELETE_FAILED: One note is that if the service is deleted, there is no longer\\na record, hence there is no \\\"DELETED\\\" status.\",\n        \"type\": \"string\",\n        \"enum\": [\n          \"ENDPOINT_SERVICE_STATUS_CREATING\",\n          \"ENDPOINT_SERVICE_STATUS_AVAILABLE\",\n          \"ENDPOINT_SERVICE_STATUS_CREATE_FAILED\",\n          \"ENDPOINT_SERVICE_STATUS_DELETING\",\n          \"ENDPOINT_SERVICE_STATUS_DELETE_FAILED\"\n        ],\n        \"title\": \"Private Endpoints\"\n      },\n      \"PrivateEndpointServices\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"services\": {\n            \"description\": \"services contains a list of all cluster related services.\",\n            \"type\": \"array\",\n            \"items\": {\n              \"$ref\": \"#/components/schemas/PrivateEndpointService\"\n            }\n          }\n        },\n        \"required\": [\n          \"services\"\n        ]\n      },\n      \"QuantityUnitType\": {\n        \"description\": \"Billing\\nQuantityUnitType is the unit type for a quantity of billing line item.\",\n        \"type\": \"string\",\n        \"enum\": [\n          \"HOURS\",\n          \"REQUEST_UNITS\"\n        ]\n      },\n      \"Region\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"internal_dns\": {\n            \"description\": \"internal_dns is the internal DNS name of the cluster within the cloud provider's network. It is used to connect to the cluster with PrivateLink or VPC peering.\",\n            \"type\": \"string\"\n          },\n          \"name\": {\n            \"type\": \"string\"\n          },\n          \"node_count\": {\n            \"description\": \"node_count will be 0 for serverless clusters.\",\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n          },\n          \"sql_dns\": {\n            \"description\": \"sql_dns is the DNS name of SQL interface of the cluster. It is used to connect to the cluster with IP allowlisting.\",\n            \"type\": \"string\"\n          },\n          \"ui_dns\": {\n            \"description\": \"ui_dns is the DNS name used when connecting to the DB Console for the cluster.\",\n            \"type\": \"string\"\n          }\n        },\n        \"required\": [\n          \"name\",\n          \"sql_dns\",\n          \"ui_dns\",\n          \"node_count\",\n          \"internal_dns\"\n        ]\n      },\n      \"SQLUser\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"name\": {\n            \"type\": \"string\"\n          }\n        },\n        \"required\": [\n          \"name\"\n        ]\n      },\n      \"ServerlessClusterConfig\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"routing_id\": {\n            \"description\": \"Used to build a connection string.\",\n            \"type\": \"string\"\n          },\n          \"spend_limit\": {\n            \"description\": \"Spend limit in US cents.\",\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n          }\n        },\n        \"required\": [\n          \"spend_limit\",\n          \"routing_id\"\n        ]\n      },\n      \"ServerlessClusterCreateSpecification\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"regions\": {\n            \"description\": \"Region values should match the cloud provider's zone code.\\nFor example, for Oregon, set region_name to \\\"us-west2\\\" for\\nGCP and \\\"us-west-2\\\" for AWS.\",\n            \"type\": \"array\",\n            \"items\": {\n              \"type\": \"string\"\n            }\n          },\n          \"spend_limit\": {\n            \"type\": \"integer\",\n            \"format\": \"int32\",\n            \"title\": \"Spend limit in US cents\"\n          }\n        },\n        \"required\": [\n          \"regions\",\n          \"spend_limit\"\n        ]\n      },\n      \"ServerlessClusterUpdateSpecification\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"spend_limit\": {\n            \"type\": \"integer\",\n            \"format\": \"int32\",\n            \"title\": \"Spend limit in US cents\"\n          }\n        },\n        \"required\": [\n          \"spend_limit\"\n        ]\n      },\n      \"SortOrder\": {\n        \"description\": \" - DESC: Sort in descending order. The default order is ascending.\",\n        \"type\": \"string\",\n        \"enum\": [\n          \"ASC\",\n          \"DESC\"\n        ]\n      },\n      \"Status\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"code\": {\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n          },\n          \"details\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"$ref\": \"#/components/schemas/Any\"\n            }\n          },\n          \"message\": {\n            \"type\": \"string\"\n          }\n        }\n      },\n      \"UpdateClusterSpecification\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"dedicated\": {\n            \"$ref\": \"#/components/schemas/DedicatedClusterUpdateSpecification\"\n          },\n          \"serverless\": {\n            \"$ref\": \"#/components/schemas/ServerlessClusterUpdateSpecification\"\n          }\n        },\n        \"example\": {\n          \"dedicated\": {\n            \"hardware\": {\n              \"machine_type\": \"n2-standard-8\"\n            },\n            \"region_nodes\": {\n              \"us-central1\": 5,\n              \"us-west1\": 3\n            }\n          }\n        }\n      },\n      \"api.CloudProvider\": {\n        \"description\": \" - GCP: The Google Cloud Platform cloud provider.\\n - AWS: The Amazon Web Services cloud provider.\",\n        \"type\": \"string\",\n        \"enum\": [\n          \"GCP\",\n          \"AWS\"\n        ]\n      },\n      \"api.Database\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"name\": {\n            \"type\": \"string\"\n          },\n          \"table_count\": {\n            \"type\": \"string\",\n            \"format\": \"int64\"\n          }\n        },\n        \"required\": [\n          \"name\"\n        ],\n        \"title\": \"Database\"\n      },\n      \"api.ListDatabasesResponse\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"databases\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"$ref\": \"#/components/schemas/api.Database\"\n            }\n          },\n          \"pagination\": {\n            \"$ref\": \"#/components/schemas/KeysetPaginationResponse\"\n          }\n        },\n        \"required\": [\n          \"databases\"\n        ],\n        \"title\": \"ListDatabasesResponse\"\n      }\n    },\n    \"requestBodies\": {\n      \"CockroachCloud_AddAllowlistEntry2Entry\": {\n        \"content\": {\n          \"application/json\": {\n            \"schema\": {\n              \"type\": \"object\",\n              \"properties\": {\n                \"name\": {\n                  \"type\": \"string\"\n                },\n                \"sql\": {\n                  \"type\": \"boolean\"\n                },\n                \"ui\": {\n                  \"type\": \"boolean\"\n                }\n              },\n              \"example\": {\n                \"cidr_ip\": \"192.168.1.1\",\n                \"cidr_mask\": 32,\n                \"name\": \"Example\",\n                \"sql\": true,\n                \"ui\": true\n              },\n              \"required\": [\n                \"ui\",\n                \"sql\"\n              ],\n              \"title\": \"AllowlistEntry\"\n            }\n          }\n        },\n        \"description\": \"AllowlistEntry\",\n        \"required\": true\n      },\n      \"CockroachCloud_EnableCMEKSpecBody\": {\n        \"content\": {\n          \"application/json\": {\n            \"schema\": {\n              \"type\": \"object\",\n              \"properties\": {\n                \"region_specs\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/CMEKRegionSpecification\"\n                  }\n                }\n              },\n              \"example\": {\n                \"region_specs\": [\n                  {\n                    \"key_spec\": {\n                      \"auth_principal\": \"arn:aws:iam::account:role/role-name-with-path\",\n                      \"type\": \"AWS_KMS\",\n                      \"uri\": \"arn:aws:kms:us-west-2:111122223333:key/id-of-kms-key\"\n                    },\n                    \"region\": \"us-central1\"\n                  }\n                ]\n              },\n              \"required\": [\n                \"region_specs\"\n              ],\n              \"title\": \"CMEKClusterSpecification\"\n            }\n          }\n        },\n        \"required\": true\n      }\n    },\n    \"securitySchemes\": {\n      \"Bearer\": {\n        \"type\": \"http\",\n        \"scheme\": \"bearer\"\n      }\n    }\n  },\n  \"tags\": [\n    {\n      \"name\": \"CockroachCloud\"\n    }\n  ],\n  \"externalDocs\": {\n    \"description\": \"Use the CockroachDB Cloud API\",\n    \"url\": \"https://www.cockroachlabs.com/docs/cockroachcloud/cloud-api.html\"\n  },\n  \"security\": [\n    {\n      \"Bearer\": []\n    }\n  ]\n}",
			"canonicalURL": "/github.com/cockroachdb/cockroach-cloud-sdk-go@7cb6015e45db9fb6d3ccb249a90cae6794625d03/-/blob/internal/spec/openapi.json",
			"externalURLs": [
				{
					"url": "https://github.com/cockroachdb/cockroach-cloud-sdk-go/blob/7cb6015e45db9fb6d3ccb249a90cae6794625d03/internal/spec/openapi.json",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "parse: parse spec: parse path items: path \"/api/v1/clusters\": get: operation \"CockroachCloud_ListClusters\": parameters: parse parameter \"show_inactive\": parse schema: at internal/spec/openapi.json:31:26: parse default: expected type \"boolean\", got \"string\""
}