{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/common-fate/granted-approvals"
		},
		"file": {
			"name": "openapi.yml",
			"size": 0,
			"path": "openapi.yml",
			"byteSize": 61236,
			"content": "openapi: 3.0.0\ninfo:\n  title: Approvals\n  version: \"1.0\"\n  contact:\n    name: Common Fate\n    url: \"https://commonfate.io\"\n  description: Granted Approvals API\nservers:\n  - url: \"http://localhost:8080\"\npaths:\n  /api/v1/access-rules:\n    get:\n      summary: List Access Rules\n      tags:\n        - End User\n      responses:\n        \"200\":\n          $ref: \"#/components/responses/ListAccessRulesResponse\"\n      operationId: list-user-access-rules\n      description: Get all access rules as an end user.\n  \"/api/v1/access-rules/{ruleId}\":\n    get:\n      summary: Get Access Rule\n      tags:\n        - End User\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/AccessRuleWithSelectables\"\n        \"401\":\n          $ref: \"#/components/responses/ErrorResponse\"\n        \"404\":\n          $ref: \"#/components/responses/ErrorResponse\"\n      operationId: user-get-access-rule\n      description: |-\n        Get details for an Access Rule.\n\n        End users are only able to view Access Rules if they are a member of the group the rule relates to, or if they are designated as an approver for the Access Rule. If a user doesn't meet these conditions, a HTTP401 unauthorized error is returned.\n    parameters:\n      - schema:\n          type: string\n        name: ruleId\n        in: path\n        required: true\n  \"/api/v1/access-rules/{ruleId}/approvers\":\n    get:\n      summary: List Access Rule approvers\n      tags:\n        - End User\n      responses:\n        \"200\":\n          $ref: \"#/components/responses/ListAccessRuleApproversResponse\"\n        \"401\":\n          $ref: \"#/components/responses/ErrorResponse\"\n        \"404\":\n          $ref: \"#/components/responses/ErrorResponse\"\n      operationId: user-get-access-rule-approvers\n      description: |-\n        Get the approvers for an access rule. \n        This returns a list of user IDs.\n\n        End users are only able to view Access Rules if they are a member of the group the rule relates to, or if they are designated as an approver for the Access Rule. If a user doesn't meet these conditions, a HTTP401 unauthorized error is returned.\n    parameters:\n      - schema:\n          type: string\n        name: ruleId\n        in: path\n        required: true\n  /api/v1/requests:\n    get:\n      summary: List my requests\n      tags:\n        - End User\n      responses:\n        \"200\":\n          $ref: \"#/components/responses/ListRequestsResponse\"\n      operationId: user-list-requests\n      description: |-\n        List requests.\n        The reviewer query param allows you to fetch requests which you can review.\n      parameters:\n        - schema:\n            type: string\n            enum:\n              - APPROVED\n              - DECLINED\n              - CANCELLED\n              - PENDING\n          in: query\n          name: status\n          description: omit this param to view all results\n        - schema:\n            type: boolean\n          in: query\n          name: reviewer\n          description: \"show requests that the user is a reviewer for, rather than requests that the user has made themselves\"\n        - schema:\n            type: string\n          in: query\n          name: nextToken\n          description: encrypted token containing pagination info\n    parameters: []\n    post:\n      summary: Create a request\n      operationId: user-create-request\n      responses:\n        \"201\":\n          description: Created\n      description: |-\n        Make a request to access something.\n\n        Users must specify an Access Rule when making a request. Users are authorized to make a request if they are in a group that the Access Rule references. Otherwise, a HTTP 404 response will be returned.\n      requestBody:\n        $ref: \"#/components/requestBodies/CreateRequestRequest\"\n      tags:\n        - End User\n  /api/v1/requests/upcoming:\n    get:\n      summary: Your GET endpoint\n      tags: []\n      responses:\n        \"200\":\n          $ref: \"#/components/responses/ListRequestsResponse\"\n      operationId: user-list-requests-upcoming\n      description: display pending requests and approved requests that are currently active or scheduled to begin some time in future.\n      parameters:\n        - schema:\n            type: string\n          in: query\n          description: encrypted token containing pagination info\n          name: nextToken\n  /api/v1/requests/past:\n    get:\n      summary: Your GET endpoint\n      tags: []\n      responses:\n        \"200\":\n          $ref: \"#/components/responses/ListRequestsResponse\"\n      operationId: user-list-requests-past\n      description: |\n        display show cancelled, expired, and revoked requests.\n      parameters:\n        - schema:\n            type: string\n          in: query\n          name: nextToken\n          description: encrypted token containing pagination info\n  \"/api/v1/requests/{requestId}\":\n    parameters:\n      - schema:\n          type: string\n        name: requestId\n        in: path\n        required: true\n    get:\n      summary: Get a request\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/RequestDetail\"\n        \"404\":\n          $ref: \"#/components/responses/ErrorResponse\"\n        \"500\":\n          $ref: \"#/components/responses/ErrorResponse\"\n      operationId: user-get-request\n      description: |-\n        Returns a HTTP401 response if the user is not the requestor or a reviewer.\n\n\n        Use /api/v1/admin/requests/{requestId} as an administrator to view information for requests not made by the current user (note: requires that the user is a Granted administrator).\n      tags:\n        - End User\n      parameters: []\n  \"/api/v1/requests/{requestId}/events\":\n    parameters:\n      - schema:\n          type: string\n        name: requestId\n        in: path\n        required: true\n    get:\n      summary: List request events\n      responses:\n        \"200\":\n          $ref: \"#/components/responses/ListRequestEventsResponse\"\n        \"401\":\n          $ref: \"#/components/responses/ErrorResponse\"\n        \"500\":\n          $ref: \"#/components/responses/ErrorResponse\"\n      operationId: list-request-events\n      description: |\n        Returns a HTTP401 response if the user is not the requestor or a reviewer.\n      tags:\n        - End User\n      parameters: []\n  \"/api/v1/requests/{requestId}/review\":\n    parameters:\n      - schema:\n          type: string\n        name: requestId\n        in: path\n        required: true\n    post:\n      summary: Review a request\n      operationId: review-request\n      responses:\n        \"200\":\n          $ref: \"#/components/responses/ReviewResponse\"\n      tags:\n        - End User\n      description: \"Review an access request made by a user. The reviewing user must be an approver for a request. Users cannot review their own requests, even if they are an approver for the Access Rule.\"\n      requestBody:\n        $ref: \"#/components/requestBodies/ReviewRequest\"\n  \"/api/v1/requests/{requestId}/cancel\":\n    parameters:\n      - schema:\n          type: string\n        name: requestId\n        in: path\n        required: true\n    post:\n      summary: Cancel a request\n      operationId: cancel-request\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                type: object\n                properties: {}\n        \"400\":\n          $ref: \"#/components/responses/ErrorResponse\"\n        \"404\":\n          $ref: \"#/components/responses/ErrorResponse\"\n        \"500\":\n          $ref: \"#/components/responses/ErrorResponse\"\n      tags:\n        - End User\n      description: Users can cancel an access request that they have created while it is in the PENDING state.\n  \"/api/v1/requests/{requestid}/revoke\":\n    parameters:\n      - schema:\n          type: string\n        name: requestid\n        in: path\n        required: true\n    post:\n      summary: Revoke an active request\n      operationId: revoke-request\n      responses:\n        \"200\":\n          description: OK\n        \"400\":\n          $ref: \"#/components/responses/ErrorResponse\"\n        \"404\":\n          $ref: \"#/components/responses/ErrorResponse\"\n        \"500\":\n          $ref: \"#/components/responses/ErrorResponse\"\n      tags:\n        - End User\n      description: \"Admins and approvers can revoke access previously approved. Effective immediately \"\n  \"/api/v1/requests/{requestId}/access-instructions\":\n    parameters:\n      - schema:\n          type: string\n        name: requestId\n        in: path\n        required: true\n    get:\n      summary: Get Access Instructions\n      tags:\n        - End User\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: ./accesshandler/openapi.yml#/components/schemas/AccessInstructions\n      operationId: get-access-instructions\n      description: |-\n        Get access instructions for a request.\n\n        Returns information on how to access the role or resource.\n  \"/api/v1/requests/{requestId}/access-token\":\n    parameters:\n      - schema:\n          type: string\n        name: requestId\n        in: path\n        required: true\n    get:\n      summary: Get Access Token\n      tags:\n        - End User\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/AccessToken\"\n        \"404\":\n          $ref: \"#/components/responses/ErrorResponse\"\n        \"500\":\n          $ref: \"#/components/responses/ErrorResponse\"\n      operationId: get-access-token\n      description: |-\n        Get access token for a request.\n\n        Returns information on how to access the role or resource.\n  \"/api/v1/users/{userId}\":\n    parameters:\n      - schema:\n          type: string\n        name: userId\n        in: path\n        required: true\n    get:\n      summary: Get a user\n      tags:\n        - End User\n      operationId: get-user\n      description: Returns a Granted user.\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/User\"\n        \"401\":\n          description: Unauthorized\n        \"404\":\n          description: Not Found\n  /api/v1/users/me:\n    get:\n      summary: Get details for the current user\n      tags:\n        - End User\n      operationId: get-me\n      description: Returns information about the currently logged in user.\n      responses:\n        \"200\":\n          $ref: \"#/components/responses/AuthUserResponse\"\n        \"401\":\n          description: Unauthorized\n  /api/v1/admin/access-rules:\n    get:\n      summary: List Access Rules\n      tags:\n        - Admin\n      responses:\n        \"200\":\n          $ref: \"#/components/responses/ListAccessRulesDetailResponse\"\n      operationId: admin-list-access-rules\n      description: List all access rules\n      parameters:\n        - schema:\n            type: string\n            enum:\n              - ACTIVE\n              - ARCHIVED\n          in: query\n          name: status\n          description: Filter Access Rules by a particular status.\n        - schema:\n            type: string\n          in: query\n          name: nextToken\n          description: encrypted token containing pagination info\n    post:\n      summary: Create Access Rule\n      operationId: admin-create-access-rule\n      responses:\n        \"201\":\n          description: Created\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/AccessRuleDetail\"\n        \"400\":\n          $ref: \"#/components/responses/ErrorResponse\"\n        \"401\":\n          $ref: \"#/components/responses/ErrorResponse\"\n      description: Create an access rule\n      requestBody:\n        $ref: \"#/components/requestBodies/CreateAccessRuleRequest\"\n      tags:\n        - Admin\n    parameters: []\n  \"/api/v1/admin/access-rules/{ruleId}\":\n    get:\n      summary: Get Access Rule\n      tags:\n        - Admin\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/AccessRuleDetail\"\n        \"401\":\n          $ref: \"#/components/responses/ErrorResponse\"\n        \"404\":\n          $ref: \"#/components/responses/ErrorResponse\"\n      operationId: admin-get-access-rule\n      description: Get an Access Rule.\n    parameters:\n      - schema:\n          type: string\n        name: ruleId\n        in: path\n        required: true\n    put:\n      summary: Update Access Rule\n      operationId: admin-update-access-rule\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/AccessRuleDetail\"\n        \"400\":\n          description: Bad Request\n        \"401\":\n          description: Unauthorized\n        \"404\":\n          description: Not Found\n        \"500\":\n          description: Internal Server Error\n      requestBody:\n        $ref: \"#/components/requestBodies/UpdateAccessRuleRequest\"\n      description: Updates an Access Rule. Updating a rule creates a new version.\n      tags:\n        - Admin\n  \"/api/v1/admin/access-rules/{ruleId}/archive\":\n    parameters:\n      - schema:\n          type: string\n        name: ruleId\n        in: path\n        required: true\n    post:\n      summary: Archive Access Rule\n      operationId: admin-archive-access-rule\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/AccessRuleDetail\"\n        \"401\":\n          $ref: \"#/components/responses/ErrorResponse\"\n        \"404\":\n          $ref: \"#/components/responses/ErrorResponse\"\n        \"500\":\n          $ref: \"#/components/responses/ErrorResponse\"\n      description: |-\n        Marks an access rule as archived.\n        Any pending requests for this access rule will be cancelled.\n  \"/api/v1/admin/access-rules/{ruleId}/versions\":\n    get:\n      summary: Get Access Rule version history\n      tags:\n        - Admin\n      responses:\n        \"200\":\n          $ref: \"#/components/responses/ListAccessRulesDetailResponse\"\n        \"401\":\n          description: Unauthorized\n        \"404\":\n          description: Not Found\n      operationId: admin-get-access-rule-versions\n      description: Returns a version history for a particular Access Rule.\n    parameters:\n      - schema:\n          type: string\n        name: ruleId\n        in: path\n        required: true\n  \"/api/v1/admin/access-rules/{ruleId}/versions/{version}\":\n    get:\n      summary: Get Access Rule Version\n      tags:\n        - Admin\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/AccessRuleDetail\"\n        \"401\":\n          $ref: \"#/components/responses/ErrorResponse\"\n        \"404\":\n          $ref: \"#/components/responses/ErrorResponse\"\n      operationId: admin-get-access-rule-version\n      description: Returns a specific version for an Access Rule.\n    parameters:\n      - schema:\n          type: string\n        name: ruleId\n        in: path\n        required: true\n      - schema:\n          type: string\n        name: version\n        in: path\n        required: true\n  /api/v1/admin/requests:\n    get:\n      summary: Your GET endpoint\n      tags:\n        - Admin\n      responses:\n        \"200\":\n          $ref: \"#/components/responses/ListRequestsResponse\"\n      operationId: admin-list-requests\n      description: Return a list of all requests\n      parameters:\n        - schema:\n            type: string\n            enum:\n              - APPROVED\n              - DECLINED\n              - CANCELLED\n              - PENDING\n          in: query\n          description: omit this param to view all results\n          name: status\n        - schema:\n            type: string\n          in: query\n          name: nextToken\n          description: encrypted token containing pagination info\n  \"/api/v1/admin/requests/{requestId}\":\n    parameters:\n      - schema:\n          type: string\n        name: requestId\n        in: path\n        required: true\n    get:\n      summary: Get a request\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/RequestDetail\"\n        \"404\":\n          $ref: \"#/components/responses/ErrorResponse\"\n        \"500\":\n          $ref: \"#/components/responses/ErrorResponse\"\n      operationId: admin-get-request\n      description: Returns an access request.\n      tags:\n        - End User\n      parameters: []\n  \"/api/v1/admin/users/{userId}\":\n    parameters:\n      - schema:\n          type: string\n        name: userId\n        in: path\n        required: true\n    post:\n      summary: Update User\n      operationId: update-user\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/User\"\n        \"400\":\n          $ref: \"#/components/responses/ErrorResponse\"\n        \"401\":\n          $ref: \"#/components/responses/ErrorResponse\"\n        \"500\":\n          $ref: \"#/components/responses/ErrorResponse\"\n      description: Update a user including group membership\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                groups:\n                  type: array\n                  items:\n                    type: string\n              required:\n                - groups\n      tags:\n        - Admin\n  /api/v1/admin/users:\n    get:\n      summary: Returns a list of users\n      tags:\n        - Admin\n      responses:\n        \"200\":\n          $ref: \"#/components/responses/ListUserResponse\"\n      operationId: get-users\n      description: Fetch a list of users\n      parameters:\n        - schema:\n            type: string\n          in: query\n          name: nextToken\n          description: encrypted token containing pagination info\n    post:\n      summary: Create User\n      operationId: create-user\n      responses:\n        \"201\":\n          description: Created\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/User\"\n        \"400\":\n          $ref: \"#/components/responses/ErrorResponse\"\n        \"401\":\n          $ref: \"#/components/responses/ErrorResponse\"\n        \"500\":\n          $ref: \"#/components/responses/ErrorResponse\"\n      description: Create new user in the Cognito user pool if it is enabled.\n      requestBody:\n        $ref: \"#/components/requestBodies/CreateUserRequest\"\n      tags:\n        - Admin\n  /api/v1/admin/groups:\n    get:\n      summary: List groups\n      tags:\n        - Admin\n      operationId: get-groups\n      description: Gets all groups\n      responses:\n        \"200\":\n          $ref: \"#/components/responses/ListGroupsResponse\"\n      parameters:\n        - schema:\n            type: string\n          in: query\n          name: nextToken\n          description: encrypted token containing pagination info\n    parameters: []\n    post:\n      summary: Create Group\n      operationId: create-group\n      responses:\n        \"201\":\n          description: Created\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Group\"\n        \"400\":\n          $ref: \"#/components/responses/ErrorResponse\"\n        \"401\":\n          $ref: \"#/components/responses/ErrorResponse\"\n        \"500\":\n          $ref: \"#/components/responses/ErrorResponse\"\n      description: Create new group in the Cognito user pool if it is enabled.\n      requestBody:\n        $ref: \"#/components/requestBodies/CreateGroupRequest\"\n      tags:\n        - Admin\n  \"/api/v1/admin/groups/{groupId}\":\n    parameters:\n      - schema:\n          type: string\n        name: groupId\n        in: path\n        required: true\n    get:\n      summary: Get Group Details\n      tags:\n        - Admin\n      operationId: get-group\n      description: Returns information for a group.\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Group\"\n  /api/v1/admin/providers:\n    get:\n      summary: List providers\n      tags:\n        - Admin\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: \"#/components/schemas/Provider\"\n        \"401\":\n          $ref: \"#/components/responses/ErrorResponse\"\n        \"500\":\n          $ref: \"#/components/responses/ErrorResponse\"\n      operationId: list-providers\n      description: List providers\n    parameters: []\n  \"/api/v1/admin/providers/{providerId}\":\n    get:\n      summary: List providers\n      tags:\n        - Admin\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Provider\"\n        \"401\":\n          $ref: \"#/components/responses/ErrorResponse\"\n        \"500\":\n          $ref: \"#/components/responses/ErrorResponse\"\n      operationId: get-provider\n      description: Get provider by id\n    parameters:\n      - schema:\n          type: string\n        name: providerId\n        in: path\n        required: true\n  \"/api/v1/admin/providers/{providerId}/args\":\n    parameters:\n      - schema:\n          type: string\n        name: providerId\n        in: path\n        required: true\n    get:\n      summary: Get provider arg schema\n      tags:\n        - Admin\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                type: object\n                properties: {}\n        \"401\":\n          $ref: \"#/components/responses/ErrorResponse\"\n        \"500\":\n          $ref: \"#/components/responses/ErrorResponse\"\n      operationId: get-provider-args\n      description: gets the jsonschema describing the args for this provider\n  \"/api/v1/admin/providers/{providerId}/args/{argId}/options\":\n    parameters:\n      - schema:\n          type: string\n        name: providerId\n        in: path\n        required: true\n      - schema:\n          type: string\n        name: argId\n        in: path\n        required: true\n    get:\n      summary: List provider arg options\n      tags:\n        - Admin\n      responses:\n        \"200\":\n          $ref: \"#/components/responses/ArgOptionsResponse\"\n        \"401\":\n          $ref: \"#/components/responses/ErrorResponse\"\n        \"500\":\n          $ref: \"#/components/responses/ErrorResponse\"\n      operationId: list-provider-arg-options\n      description: \"Returns the options for a particular Access Provider argument. The options may be cached. To refresh the cache, pass the `refresh` query parameter.\"\n      parameters:\n        - schema:\n            type: boolean\n          in: query\n          name: refresh\n          description: invalidate the cache and refresh the provider's options.\n  /api/v1/admin/providersetups:\n    get:\n      summary: List the provider setups in progress\n      tags:\n        - Admin\n      responses:\n        \"200\":\n          $ref: \"#/components/responses/ListProviderSetupsResponse\"\n      operationId: list-providersetups\n      description: List providers which are still in the process of being set up.\n    parameters: []\n    post:\n      summary: Begin the setup process for a new Access Provider\n      operationId: create-providersetup\n      responses:\n        \"201\":\n          $ref: \"#/components/responses/ProviderSetupResponse\"\n        \"400\":\n          $ref: \"#/components/responses/ErrorResponse\"\n      description: Begins the guided setup process for a new Access Provider.\n      requestBody:\n        $ref: \"#/components/requestBodies/CreateProviderSetupRequest\"\n  \"/api/v1/admin/providersetups/{providersetupId}\":\n    get:\n      summary: Get an in-progress provider setup\n      tags:\n        - Admin\n      responses:\n        \"200\":\n          $ref: \"#/components/responses/ProviderSetupResponse\"\n      operationId: get-providersetup\n      description: Get the setup instructions for an Access Provider.\n    parameters:\n      - schema:\n          type: string\n        name: providersetupId\n        in: path\n        required: true\n    delete:\n      summary: Delete an in-progress provider setup\n      operationId: delete-providersetup\n      responses:\n        \"200\":\n          $ref: \"#/components/responses/ProviderSetupResponse\"\n      description: |-\n        Removes an in-progress provider setup and deletes all data relating to it.\n\n        Returns the deleted provider.\n  \"/api/v1/admin/providersetups/{providersetupId}/instructions\":\n    get:\n      summary: Get the setup instructions for an Access Provider\n      tags:\n        - Admin\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ProviderSetupInstructions\"\n      operationId: get-providersetup-instructions\n      description: Get the setup instructions for an Access Provider.\n    parameters:\n      - schema:\n          type: string\n        name: providersetupId\n        in: path\n        required: true\n  \"/api/v1/admin/providersetups/{providersetupId}/validate\":\n    parameters:\n      - schema:\n          type: string\n        name: providersetupId\n        in: path\n        required: true\n    post:\n      summary: Validate the configuration for a Provider Setup\n      operationId: validate-providersetup\n      responses:\n        \"200\":\n          $ref: \"#/components/responses/ProviderSetupResponse\"\n      tags:\n        - Admin\n      description: |-\n        Validates the configuration values for an access provider being setup.\n\n        Will return a HTTP200 OK response even if there are validation errors. The errors can be found by inspecting the validation diagnostics in the `configValidation` field.\n\n        Will return a HTTP400 response if the provider cannot be validated (for example, the config values for the provider are incomplete).\n  \"/api/v1/admin/providersetups/{providersetupId}/complete\":\n    parameters:\n      - schema:\n          type: string\n        name: providersetupId\n        in: path\n        required: true\n    post:\n      summary: Complete a ProviderSetup\n      operationId: complete-providersetup\n      tags:\n        - Admin\n      description: \"If Runtime Configuration is enabled, this will write the Access Provider to the configuration storage and activate it. If Runtime Configuration is disabled, this endpoint does nothing.\"\n      responses:\n        \"200\":\n          $ref: \"#/components/responses/CompleteProviderSetupResponse\"\n  \"/api/v1/admin/providersetups/{providersetupId}/steps/{stepIndex}/complete\":\n    parameters:\n      - schema:\n          type: integer\n        name: stepIndex\n        in: path\n        required: true\n        description: The step index to update the completion status for.\n      - schema:\n          type: string\n        name: providersetupId\n        in: path\n        required: true\n    put:\n      summary: Update the completion status for a Provider setup step\n      operationId: submit-providersetup-step\n      responses:\n        \"200\":\n          $ref: \"#/components/responses/ProviderSetupResponse\"\n      description: The updated provider setup.\n      requestBody:\n        $ref: \"#/components/requestBodies/ProviderSetupStepCompleteRequest\"\n      tags:\n        - Admin\n  /api/v1/admin/identity/sync:\n    parameters: []\n    post:\n      summary: Sync Identity\n      operationId: identity-sync\n      responses:\n        \"200\":\n          description: OK\n        \"401\":\n          $ref: \"#/components/responses/ErrorResponse\"\n        \"500\":\n          $ref: \"#/components/responses/ErrorResponse\"\n      description: Run the identity sync operation on demand\n      tags:\n        - Admin\n  /api/v1/admin/identity:\n    get:\n      summary: Get identity configuration\n      tags:\n        - Admin\n      responses:\n        \"200\":\n          $ref: \"#/components/responses/IdentityConfigurationResponse\"\n        \"401\":\n          $ref: \"#/components/responses/ErrorResponse\"\n        \"500\":\n          $ref: \"#/components/responses/ErrorResponse\"\n      operationId: identity-configuration\n      description: Get information about the identity configuration\ncomponents:\n  schemas:\n    User:\n      title: User\n      type: object\n      x-examples:\n        Josh:\n          id: string\n          email: string\n          name: string\n          picture: \"https://avatars.githubusercontent.com/u/17420369?v=4\"\n        Chris:\n          id: string\n          email: chris@exponentlabs.io\n          name: Chris Norman\n          picture: \"https://avatars.githubusercontent.com/u/14214200?v=4\"\n      properties:\n        id:\n          type: string\n        email:\n          type: string\n        firstName:\n          type: string\n        picture:\n          type: string\n        status:\n          $ref: \"#/components/schemas/IdpStatus\"\n        lastName:\n          type: string\n        updatedAt:\n          type: string\n          x-go-type: time.Time\n          format: time\n        groups:\n          type: array\n          items:\n            type: string\n      required:\n        - id\n        - email\n        - firstName\n        - picture\n        - status\n        - lastName\n        - updatedAt\n        - groups\n    Request:\n      title: Request\n      type: object\n      description: A request to access something made by an end user in Granted.\n      properties:\n        id:\n          type: string\n          x-go-name: ID\n        requestor:\n          type: string\n        status:\n          $ref: \"#/components/schemas/RequestStatus\"\n        reason:\n          type: string\n        timing:\n          $ref: \"#/components/schemas/RequestTiming\"\n        requestedAt:\n          type: string\n          x-go-type: time.Time\n          format: time\n        accessRule:\n          $ref: \"#/components/schemas/RequestAccessRule\"\n        updatedAt:\n          type: string\n          x-go-type: time.Time\n          format: time\n        grant:\n          $ref: \"#/components/schemas/Grant\"\n        approvalMethod:\n          $ref: \"#/components/schemas/ApprovalMethod\"\n        selectedWith:\n          type: object\n          additionalProperties:\n            $ref: \"#/components/schemas/WithOption\"\n      required:\n        - id\n        - requestor\n        - status\n        - timing\n        - requestedAt\n        - accessRule\n        - updatedAt\n        - selectedWith\n    RequestDetail:\n      title: Request\n      type: object\n      description: A request to access something made by an end user in Granted.\n      properties:\n        id:\n          type: string\n          x-go-name: ID\n        requestor:\n          type: string\n        status:\n          $ref: \"#/components/schemas/RequestStatus\"\n        reason:\n          type: string\n        timing:\n          $ref: \"#/components/schemas/RequestTiming\"\n        requestedAt:\n          type: string\n          x-go-type: time.Time\n          format: time\n        accessRule:\n          $ref: \"#/components/schemas/AccessRule\"\n        updatedAt:\n          type: string\n          x-go-type: time.Time\n          format: time\n        grant:\n          $ref: \"#/components/schemas/Grant\"\n        canReview:\n          type: boolean\n          description: true if the requesting user is a reviewer of this request.\n        approvalMethod:\n          $ref: \"#/components/schemas/ApprovalMethod\"\n        selectedWith:\n          type: object\n          additionalProperties:\n            $ref: \"#/components/schemas/WithOption\"\n      required:\n        - id\n        - requestor\n        - status\n        - timing\n        - requestedAt\n        - accessRule\n        - updatedAt\n        - canReview\n    RequestStatus:\n      type: string\n      description: |\n        The status of an Access Request.\n      enum:\n        - APPROVED\n        - PENDING\n        - CANCELLED\n        - DECLINED\n      title: RequestStatus\n    RequestAccessRule:\n      title: RequestAccessRule\n      type: object\n      properties:\n        id:\n          type: string\n        version:\n          type: string\n      required:\n        - id\n        - version\n    AccessRule:\n      title: AccessRule\n      type: object\n      description: Access Rule contains information for an end user to make a request for access.\n      properties:\n        id:\n          type: string\n          x-go-name: ID\n          example: rul_28w2Eebt2Q8nFQJ2dKa1FTE9X0J\n        version:\n          type: string\n          description: |\n            A unique version identifier for the Access Rule. Updating a rule creates a new version. \n            When a rule is updated, it's ID remains consistent.\n        name:\n          type: string\n          example: Okta admin\n        description:\n          type: string\n          example: Admin access to Okta\n        target:\n          $ref: \"#/components/schemas/AccessRuleTarget\"\n        timeConstraints:\n          $ref: \"#/components/schemas/TimeConstraints\"\n        isCurrent:\n          type: boolean\n      required:\n        - id\n        - version\n        - name\n        - description\n        - target\n        - timeConstraints\n        - isCurrent\n    AccessRuleWithSelectables:\n      title: AccessRuleWithSelectables\n      type: object\n      description: Access Rule contains information for an end user to make a request for access. `AccessRuleWithSelectables` contains a more detailed `target` field with the specific options that can be selected.\n      properties:\n        id:\n          type: string\n          x-go-name: ID\n          example: rul_28w2Eebt2Q8nFQJ2dKa1FTE9X0J\n        version:\n          type: string\n          description: |\n            A unique version identifier for the Access Rule. Updating a rule creates a new version. \n            When a rule is updated, it's ID remains consistent.\n        name:\n          type: string\n          example: Okta admin\n        description:\n          type: string\n          example: Admin access to Okta\n        target:\n          $ref: \"#/components/schemas/AccessRuleTargetDetail\"\n        timeConstraints:\n          $ref: \"#/components/schemas/TimeConstraints\"\n        isCurrent:\n          type: boolean\n      required:\n        - id\n        - version\n        - name\n        - description\n        - target\n        - timeConstraints\n        - isCurrent\n    AccessRuleDetail:\n      title: AccessRuleDetail\n      type: object\n      description: AccessRuleDetail contains detailed information about a rule and is used in administrative apis.\n      properties:\n        id:\n          type: string\n          x-go-name: ID\n          example: rul_28w2Eebt2Q8nFQJ2dKa1FTE9X0J\n        version:\n          type: string\n          description: |\n            A unique version identifier for the Access Rule. Updating a rule creates a new version. \n            When a rule is updated, it's ID remains consistent.\n        status:\n          $ref: \"#/components/schemas/AccessRuleStatus\"\n        groups:\n          description: The group IDs that the access rule applies to.\n          type: array\n          items:\n            type: string\n        approval:\n          $ref: \"#/components/schemas/ApproverConfig\"\n        name:\n          type: string\n          example: Okta admin\n        description:\n          type: string\n          example: Admin access to Okta\n        metadata:\n          $ref: \"#/components/schemas/AccessRuleMetadata\"\n        target:\n          $ref: \"#/components/schemas/AccessRuleTarget\"\n        timeConstraints:\n          $ref: \"#/components/schemas/TimeConstraints\"\n        isCurrent:\n          type: boolean\n      required:\n        - id\n        - version\n        - status\n        - groups\n        - approval\n        - name\n        - description\n        - metadata\n        - target\n        - timeConstraints\n        - isCurrent\n    AccessRuleStatus:\n      type: string\n      description: The status of an Access Rule.\n      enum:\n        - ACTIVE\n        - ARCHIVED\n      title: AccessRuleStatus\n    AccessRuleMetadata:\n      title: AccessRuleMetadata\n      type: object\n      properties:\n        createdAt:\n          type: string\n          x-go-type: time.Time\n        createdBy:\n          type: string\n        updatedAt:\n          type: string\n          x-go-type: time.Time\n          format: time\n        updatedBy:\n          type: string\n        updateMessage:\n          type: string\n      required:\n        - createdAt\n        - createdBy\n        - updatedAt\n        - updatedBy\n    CreateAccessRuleTarget:\n      title: AccessRuleTarget\n      type: object\n      description: A target for an access rule\n      properties:\n        providerId:\n          type: string\n        with:\n          type: object\n          additionalProperties:\n            type: array\n            items:\n              type: string\n          description: \"The with field is a map of options for the field, if more than one option is specified, the requesting user will be able to select one of the options when requesting this rule.\"\n      required:\n        - providerId\n        - with\n    AccessRuleTarget:\n      title: AccessRuleTarget\n      type: object\n      description: A target for an access rule\n      properties:\n        provider:\n          $ref: \"#/components/schemas/Provider\"\n        with:\n          type: object\n          additionalProperties:\n            type: string\n        withSelectable:\n          type: object\n          additionalProperties:\n            type: array\n            items:\n              type: string\n      required:\n        - provider\n        - with\n        - withSelectable\n    AccessRuleTargetDetail:\n      title: AccessRuleTargetDetail\n      type: object\n      description: A target for an access rule\n      properties:\n        provider:\n          $ref: \"#/components/schemas/Provider\"\n        with:\n          type: object\n          additionalProperties:\n            type: string\n        withSelectable:\n          type: object\n          additionalProperties:\n            type: array\n            items:\n              $ref: \"#/components/schemas/Selectable\"\n      required:\n        - provider\n        - with\n        - withSelectable\n    ApproverConfig:\n      title: ApproverConfig\n      type: object\n      description: Approver config for access rules\n      properties:\n        users:\n          type: array\n          description: The user IDs of the approvers for the request.\n          items:\n            type: string\n        groups:\n          type: array\n          items:\n            type: string\n      required:\n        - users\n        - groups\n    TimeConstraints:\n      title: TimeConstraints\n      type: object\n      description: Time configuration for an Access Rule.\n      properties:\n        maxDurationSeconds:\n          type: integer\n          description: The maximum duration in seconds the access is allowed for.\n          minimum: 60\n          exclusiveMinimum: false\n      required:\n        - maxDurationSeconds\n    Provider:\n      title: Provider\n      type: object\n      x-examples:\n        AWS:\n          id: string\n          name: string\n          type: aws\n        Okta:\n          id: string\n          name: string\n          type: okta\n      properties:\n        id:\n          type: string\n        type:\n          type: string\n      required:\n        - id\n        - type\n      description: \"Provider \"\n    Group:\n      title: Group\n      type: object\n      description: \"\"\n      properties:\n        name:\n          type: string\n        description:\n          type: string\n        id:\n          type: string\n        memberCount:\n          type: integer\n      required:\n        - name\n        - description\n        - id\n        - memberCount\n    IdpStatus:\n      title: IdpStatus\n      x-stoplight:\n        id: a3fdr17gch04a\n      type: string\n      enum:\n        - ARCHIVED\n        - ACTIVE\n    ReviewDecision:\n      type: string\n      title: ReviewDecision\n      enum:\n        - APPROVED\n        - DECLINED\n      description: A decision made on an Access Request.\n    Grant:\n      description: A temporary assignment of a user to a principal.\n      type: object\n      title: Grant\n      properties:\n        status:\n          type: string\n          description: The current state of the grant.\n          enum:\n            - PENDING\n            - ACTIVE\n            - ERROR\n            - REVOKED\n            - EXPIRED\n        subject:\n          type: string\n          minLength: 1\n          description: The email address of the user to grant access to.\n          format: email\n        provider:\n          type: string\n          minLength: 1\n          description: The ID of the provider to grant access to.\n          example: okta\n        start:\n          type: string\n          format: date-time\n          description: The start time of the grant.\n          example: \"2022-06-13T03:39:30.921Z\"\n          x-go-type: time.Time\n        end:\n          type: string\n          format: date-time\n          description: The end time of the grant.\n          example: \"2022-06-13T03:39:30.921Z\"\n          x-go-type: time.Time\n      required:\n        - status\n        - subject\n        - provider\n        - start\n        - end\n    RequestTiming:\n      title: RequestTiming\n      x-stoplight:\n        id: 4ooyqlf8xba5b\n      type: object\n      properties:\n        durationSeconds:\n          type: integer\n        startTime:\n          type: string\n          description: iso8601 timestamp in UTC timezone\n          x-go-type: time.Time\n          format: time\n      required:\n        - durationSeconds\n    ApprovalMethod:\n      type: string\n      description: \"Describes whether a request has been approved automatically or from a review \"\n      title: ApprovalMethod\n      x-stoplight:\n        id: 689mlt8aqxnx4\n      enum:\n        - AUTOMATIC\n        - REVIEWED\n    RequestEvent:\n      title: RequestEvent\n      x-stoplight:\n        id: x15z5qclesdq9\n      type: object\n      properties:\n        id:\n          type: string\n        requestId:\n          type: string\n        createdAt:\n          type: string\n          x-go-type: time.Time\n          format: time\n        actor:\n          type: string\n        fromStatus:\n          $ref: \"#/components/schemas/RequestStatus\"\n        toStatus:\n          $ref: \"#/components/schemas/RequestStatus\"\n        fromTiming:\n          $ref: \"#/components/schemas/RequestTiming\"\n        toTiming:\n          $ref: \"#/components/schemas/RequestTiming\"\n        fromGrantStatus:\n          type: string\n          description: The current state of the grant.\n          enum:\n            - PENDING\n            - ACTIVE\n            - ERROR\n            - REVOKED\n            - EXPIRED\n        toGrantStatus:\n          type: string\n          description: The current state of the grant.\n          enum:\n            - PENDING\n            - ACTIVE\n            - ERROR\n            - REVOKED\n            - EXPIRED\n        grantCreated:\n          type: boolean\n        requestCreated:\n          type: boolean\n        grantFailureReason:\n          type: string\n        recordedEvent:\n          type: object\n          x-go-type: \"map[string]string\"\n          description: An event which was recorded relating to the grant.\n      required:\n        - id\n        - requestId\n        - createdAt\n    AccessToken:\n      title: AccessToken\n      x-stoplight:\n        id: yxma8dkhj406q\n      type: string\n    WithOption:\n      title: WithOption\n      x-stoplight:\n        id: xoejiu5ci05du\n      type: object\n      properties:\n        value:\n          type: string\n        label:\n          type: string\n      required:\n        - value\n        - label\n    Selectable:\n      title: Selectable\n      x-stoplight:\n        id: ab18xdxwinqhb\n      type: object\n      properties:\n        option:\n          $ref: \"#/components/schemas/WithOption\"\n        valid:\n          type: boolean\n      required:\n        - option\n        - valid\n    CreateRequestWith:\n      title: CreateRequestWith\n      x-stoplight:\n        id: 8oa3c4w7ml7tx\n      type: object\n      additionalProperties:\n        type: string\n    ProviderSetup:\n      title: ProviderSetup\n      x-stoplight:\n        id: 1nm3rev9qez9b\n      type: object\n      description: A provider in the process of being set up through the guided setup workflow in Granted. These providers are **not** yet active.\n      properties:\n        id:\n          type: string\n          description: A unique ID for the provider setup. This is a random KSUID to avoid potential conflicts with user-specified provider IDs in the `granted-deployment.yml` file.\n        type:\n          type: string\n          description: The type of the Access Provider being set up.\n        version:\n          type: string\n          description: The version of the provider.\n        status:\n          type: string\n          enum:\n            - COMPLETE\n            - VALIDATION_FAILED\n            - VALIDATING\n            - INITIAL_CONFIGURATION_IN_PROGRESS\n            - VALIDATION_SUCEEDED\n          description: The status of the setup process.\n        steps:\n          type: array\n          description: An overview of the steps indicating whether they are complete.\n          items:\n            $ref: \"#/components/schemas/ProviderSetupStepOverview\"\n        configValues:\n          type: object\n          description: The current configuration values.\n          additionalProperties: false\n          x-go-type: \"map[string]string\"\n        configValidation:\n          type: array\n          items:\n            $ref: ./accesshandler/openapi.yml#/components/schemas/ProviderConfigValidation\n      required:\n        - id\n        - type\n        - version\n        - status\n        - steps\n        - configValues\n        - configValidation\n    ProviderSetupInstructions:\n      title: ProviderSetupInstructions\n      x-stoplight:\n        id: w5avwzeow2bj9\n      type: object\n      properties:\n        stepDetails:\n          type: array\n          items:\n            $ref: \"#/components/schemas/ProviderSetupStepDetails\"\n      required:\n        - stepDetails\n    ProviderSetupStepOverview:\n      title: ProviderSetupStepOverview\n      x-stoplight:\n        id: 1nm3rev9qez9b\n      type: object\n      description: Indicates whether a setup step is complete or not.\n      properties:\n        complete:\n          type: boolean\n          description: Whether the step has been completed.\n      required:\n        - complete\n    ProviderSetupStepDetails:\n      title: ProviderSetupStepDetails\n      x-stoplight:\n        id: w5avwzeow2bj9\n      type: object\n      properties:\n        title:\n          type: string\n        instructions:\n          type: string\n        configFields:\n          type: array\n          items:\n            $ref: \"#/components/schemas/ProviderConfigField\"\n      required:\n        - title\n        - instructions\n        - configFields\n    ProviderConfigField:\n      title: ProviderConfigField\n      x-stoplight:\n        id: w5avwzeow2bj9\n      type: object\n      properties:\n        id:\n          type: string\n        name:\n          type: string\n        description:\n          type: string\n        isOptional:\n          type: boolean\n          description: Whether the config value is optional.\n        isSecret:\n          type: boolean\n          description: Whether or not the config field is a secret (like an API key or a password)\n        secretPath:\n          type: string\n          description: \"the path to where the secret will be stored, in a secrets manager like AWS SSM Parameter Store.\"\n      required:\n        - id\n        - name\n        - description\n        - isOptional\n        - isSecret\n    ProviderConfigValue:\n      title: ProviderConfigValue\n      x-stoplight:\n        id: fv4rhbdwpfki9\n      type: object\n      properties:\n        id:\n          type: string\n          description: The ID of the config field.\n        value:\n          type: string\n          description: The value entered by the user.\n      required:\n        - id\n        - value\n    ProviderSetupValidation:\n      title: ProviderSetupValidation\n      x-stoplight:\n        id: 1nm3rev9qez9b\n      type: object\n      description: A validation against the configuration values of the Access Provider.\n      properties:\n        id:\n          type: string\n          description: \"The ID of the validation, such as `list-sso-users`.\"\n        status:\n          type: string\n          enum:\n            - IN_PROGRESS\n            - SUCCESS\n            - PENDING\n            - ERROR\n          description: The status of the validation.\n        fieldsValidated:\n          type: array\n          description: \"The particular config fields validated, if any.\"\n          items: {}\n        logs:\n          type: array\n          items:\n            $ref: \"#/components/schemas/ProviderSetupDiagnosticLog\"\n      required:\n        - id\n        - status\n        - fieldsValidated\n    ProviderSetupDiagnosticLog:\n      title: ProviderSetupDiagnosticLog\n      x-stoplight:\n        id: 1nm3rev9qez9b\n      type: object\n      description: A log entry related to a provider setup validation.\n      properties:\n        level:\n          type: string\n          description: The log level.\n          enum:\n            - INFO\n            - WARNING\n            - ERROR\n        msg:\n          type: string\n          description: The log message.\n      required:\n        - level\n        - msg\n  responses:\n    ErrorResponse:\n      description: An error returned from the service.\n      content:\n        application/json:\n          schema:\n            type: object\n            properties:\n              error:\n                type: string\n            required:\n              - error\n          examples: {}\n    ListUserResponse:\n      description: Paginated list of users\n      content:\n        application/json:\n          schema:\n            type: object\n            properties:\n              users:\n                type: array\n                items:\n                  $ref: \"#/components/schemas/User\"\n              next:\n                type: string\n                nullable: true\n            required:\n              - users\n              - next\n          examples: {}\n    ListAccessRulesResponse:\n      description: A list of Access Rules.\n      content:\n        application/json:\n          schema:\n            type: object\n            properties:\n              accessRules:\n                type: array\n                items:\n                  $ref: \"#/components/schemas/AccessRule\"\n              next:\n                type: string\n                nullable: true\n            required:\n              - accessRules\n              - next\n    ListRequestsResponse:\n      description: Example response\n      content:\n        application/json:\n          schema:\n            type: object\n            properties:\n              requests:\n                type: array\n                items:\n                  $ref: \"#/components/schemas/Request\"\n              next:\n                type: string\n                nullable: true\n            required:\n              - requests\n              - next\n    ListGroupsResponse:\n      description: Example response\n      content:\n        application/json:\n          schema:\n            type: object\n            properties:\n              groups:\n                type: array\n                items:\n                  $ref: \"#/components/schemas/Group\"\n              next:\n                type: string\n                nullable: true\n            required:\n              - groups\n              - next\n    ReviewResponse:\n      description: Response for reviewing a request.\n      content:\n        application/json:\n          schema:\n            type: object\n            properties:\n              request:\n                $ref: \"#/components/schemas/Request\"\n    ListAccessRuleApproversResponse:\n      description: A list of user ids who can approver an access rule request\n      content:\n        application/json:\n          schema:\n            type: object\n            properties:\n              users:\n                type: array\n                items:\n                  type: string\n              next:\n                type: string\n                nullable: true\n            required:\n              - users\n              - next\n    ListAccessRulesDetailResponse:\n      description: Example response\n      content:\n        application/json:\n          schema:\n            type: object\n            properties:\n              accessRules:\n                type: array\n                items:\n                  $ref: \"#/components/schemas/AccessRuleDetail\"\n              next:\n                type: string\n                nullable: true\n            required:\n              - accessRules\n              - next\n    AuthUserResponse:\n      description: Details about the authenticated user\n      content:\n        application/json:\n          schema:\n            type: object\n            properties:\n              user:\n                $ref: \"#/components/schemas/User\"\n              isAdmin:\n                description: Whether the user is an administrator of Granted.\n                type: boolean\n            required:\n              - user\n              - isAdmin\n    ArgOptionsResponse:\n      description: Options for an Grant argument.\n      content:\n        application/json:\n          schema:\n            type: object\n            properties:\n              hasOptions:\n                type: boolean\n                description: Whether any options have been suggested for the argument.\n              options:\n                type: array\n                description: The suggested options.\n                items:\n                  $ref: ./accesshandler/openapi.yml#/components/schemas/Option\n            required:\n              - hasOptions\n              - options\n    ListRequestEventsResponse:\n      description: Example response\n      content:\n        application/json:\n          schema:\n            type: object\n            properties:\n              events:\n                type: array\n                items:\n                  $ref: \"#/components/schemas/RequestEvent\"\n              next:\n                type: string\n                nullable: true\n            required:\n              - events\n              - next\n    ProviderSetupResponse:\n      description: Returns a ProviderSetup object.\n      content:\n        application/json:\n          schema:\n            $ref: \"#/components/schemas/ProviderSetup\"\n    ListProviderSetupsResponse:\n      description: A list of in-progress Access Providers being set up by the Granted administrators.\n      content:\n        application/json:\n          schema:\n            type: object\n            properties:\n              providerSetups:\n                type: array\n                items:\n                  $ref: \"#/components/schemas/ProviderSetup\"\n            required:\n              - providerSetups\n    CompleteProviderSetupResponse:\n      description: The response when completing an Access Provider guided setup.\n      content:\n        application/json:\n          schema:\n            type: object\n            properties:\n              deploymentConfigUpdateRequired:\n                type: boolean\n                description: Whether a manual update is required to the Granted Approvals deployment configuration (`granted-deployment.yml`) to activate the provider.\n            required:\n              - deploymentConfigUpdateRequired\n    IdentityConfigurationResponse:\n      description: Returns information about the identity configuration of this deployment.\n      content:\n        application/json:\n          schema:\n            type: object\n            properties:\n              identityProvider:\n                type: string\n              administratorGroupId:\n                type: string\n            required:\n              - identityProvider\n              - administratorGroupId\n  examples: {}\n  securitySchemes: {}\n  requestBodies:\n    UpdateAccessRuleRequest:\n      content:\n        application/json:\n          schema:\n            description: \"\"\n            type: object\n            properties:\n              timeConstraints:\n                $ref: \"#/components/schemas/TimeConstraints\"\n              groups:\n                type: array\n                items:\n                  type: string\n              approval:\n                $ref: \"#/components/schemas/ApproverConfig\"\n              name:\n                type: string\n              description:\n                type: string\n              updateMessage:\n                type: string\n            required:\n              - timeConstraints\n              - groups\n              - approval\n              - name\n              - description\n          examples: {}\n    CreateAccessRuleRequest:\n      content:\n        application/json:\n          schema:\n            description: \"\"\n            type: object\n            properties:\n              groups:\n                description: The group IDs that the access rule applies to.\n                type: array\n                items:\n                  type: string\n              approval:\n                $ref: \"#/components/schemas/ApproverConfig\"\n              name:\n                type: string\n                example: Okta admin\n              description:\n                type: string\n                example: Admin access to Okta\n              target:\n                $ref: \"#/components/schemas/CreateAccessRuleTarget\"\n              timeConstraints:\n                $ref: \"#/components/schemas/TimeConstraints\"\n            required:\n              - groups\n              - approval\n              - name\n              - description\n              - target\n              - timeConstraints\n    CreateUserRequest:\n      content:\n        application/json:\n          schema:\n            type: object\n            properties:\n              email:\n                type: string\n                format: email\n                minLength: 1\n                maxLength: 2048\n              firstName:\n                type: string\n                minLength: 1\n                maxLength: 2048\n              lastName:\n                type: string\n                minLength: 1\n                maxLength: 2048\n              isAdmin:\n                type: boolean\n            required:\n              - email\n              - firstName\n              - lastName\n              - isAdmin\n      description: \"\"\n    CreateRequestRequest:\n      content:\n        application/json:\n          schema:\n            type: object\n            properties:\n              accessRuleId:\n                type: string\n              reason:\n                type: string\n              timing:\n                $ref: \"#/components/schemas/RequestTiming\"\n              with:\n                $ref: \"#/components/schemas/CreateRequestWith\"\n            required:\n              - accessRuleId\n              - timing\n    ReviewRequest:\n      content:\n        application/json:\n          schema:\n            type: object\n            properties:\n              decision:\n                $ref: \"#/components/schemas/ReviewDecision\"\n              comment:\n                type: string\n              overrideTiming:\n                $ref: \"#/components/schemas/RequestTiming\"\n            required:\n              - decision\n      description: |-\n        An approver's review of an Access Request.\n        The access request timing can be overriden by including override timing in the request body.\n        If it is omitted, the original request timing will be used.\n    ProviderSetupStepCompleteRequest:\n      content:\n        application/json:\n          schema:\n            type: object\n            properties:\n              complete:\n                type: boolean\n                description: Whether the step is complete or not.\n              configValues:\n                type: object\n                additionalProperties:\n                  type: string\n                description: The config values entered by the user which correspond to the setup step.\n                x-go-type: \"map[string]string\"\n            required:\n              - complete\n              - configValues\n    CreateProviderSetupRequest:\n      content:\n        application/json:\n          schema:\n            type: object\n            properties:\n              providerType:\n                type: string\n                description: The type of the provider to set up.\n            required:\n              - providerType\n      description: Begin the guided setup process for a new Access Provider.\n    CreateGroupRequest:\n      content:\n        application/json:\n          schema:\n            type: object\n            properties:\n              name:\n                type: string\n                minLength: 1\n                pattern: \"^[a-zA-Z0-9_.-]\"\n                maxLength: 2048\n              description:\n                type: string\n            required:\n              - name\ntags:\n  - name: End User\n  - name: Admin\n",
			"canonicalURL": "/github.com/common-fate/granted-approvals@b772fe03f56395a589c6187caf1ba225f84dd15c/-/blob/openapi.yml",
			"externalURLs": [
				{
					"url": "https://github.com/common-fate/granted-approvals/blob/b772fe03f56395a589c6187caf1ba225f84dd15c/openapi.yml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "parse: parse spec: parse components: schemas: \"ProviderSetup\": parse schema: property \"configValidation\": parse schema: parse schema: at 1:15807: external \"./accesshandler/openapi.yml\": get: file: local file reference is not allowed"
}