{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/techmatters/hrm"
		},
		"file": {
			"name": "swagger.yaml",
			"size": 0,
			"path": "hrm-service/swagger.yaml",
			"byteSize": 15892,
			"content": "openapi: 3.0.0\nservers:\n  - description: localhost\n    url: http://localhost:8080\n  - description: staging\n    url: https://hrm-staging.tl.techmatters.org\ninfo:\n  version: 0.3.6\n  title: HRM\ntags:\n  - name: cases\n  - name: contacts\npaths:\n  /cases:\n    get:\n      tags:\n        - cases\n      summary: list cases for a helpline\n      operationId: getCases\n      parameters:\n        - in: query\n          name: helpline\n          required: false\n          schema:\n            type: string\n      responses:\n        '200':\n          description: Fetched cases\n          content:\n              application/json:\n                schema:\n                  type: array\n                  items:\n                    allOf:\n                      - $ref: '#/components/schemas/SequelizeRecord'\n                      - $ref: '#/components/schemas/Case'\n        '401':\n          $ref: '#/components/responses/UnauthorizedError'\n    post:\n      tags:\n        - cases\n      summary: create case\n      operationId: createCase\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Case'\n        description: Case to create\n      responses:\n        '200':\n          description: Created case\n          content:\n              application/json:\n                schema:\n                  allOf:\n                    - $ref: '#/components/schemas/SequelizeRecord'\n                    - $ref: '#/components/schemas/Case'\n        '401':\n          $ref: '#/components/responses/UnauthorizedError'\n  /cases/{caseId}:\n    put:\n      tags:\n        - cases\n      summary: update case\n      operationId: updateCase\n      parameters:\n        - name: caseId\n          in: path\n          description: ID of case to update\n          required: true\n          schema:\n            type: integer\n            format: int32\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Case'\n        description: Case to create\n      responses:\n        '200':\n          description: Created case\n          content:\n              application/json:\n                schema:\n                  allOf:\n                    - $ref: '#/components/schemas/SequelizeRecord'\n                    - $ref: '#/components/schemas/Case'\n        '401':\n          $ref: '#/components/responses/UnauthorizedError'\n        '404':\n          description: Case not found\n  /cases/{caseId}/activities:\n    get:\n      tags:\n        - cases\n      summary: fetch case activities\n      operationId: getCaseActivities\n      parameters:\n        - name: caseId\n          in: path\n          description: ID of case\n          required: true\n          schema:\n            type: integer\n            format: int32\n      responses:\n        '200':\n          description: Activities of the case\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  allOf:\n                    - $ref: '#/components/schemas/Activity'\n        '401':\n          $ref: '#/components/responses/UnauthorizedError'\n        '404':\n          description: Case not found        \n  /contacts:\n    post:\n      tags:\n        - contacts\n      summary: create a new contact\n      operationId: createContact\n      parameters:\n        - name: rawJson\n          in: body\n          description: Raw contact form object\n          required: true\n          schema:\n            type: object\n            example: { \"callType\": {}, \"callerInformation\": {}, \"childInformation\": {}, \"caseInformation\": {} }\n        - name: queueName\n          in: body\n          description: Name of the queue where this contact was taken\n          schema:\n            type: string\n            example: Admin\n        - name: twilioWorkerId\n          in: body\n          description: Id of the Twilio worker that took the contact\n          schema:\n            type: string\n            example: WZd3d289370720216aab7e3dc023e80f5f\n        - name: helpline\n          in: body\n          description: Helpline where the contact took place\n          schema:\n            type: string\n            example: Toronto Line\n        - name: number\n          in: body\n          description: Number of the caller for this contact\n          schema:\n            type: string\n            example: '+12025550163'\n        - name: channel\n          in: body\n          description: Channel where this contact took place\n          schema:\n            type: string\n            example: 'web'\n        - name: conversationDuration\n          in: body\n          description: Duration in seconds of this contact\n          schema:\n            type: integer\n            format: int32\n            example: 42\n        - name: accountSid\n          in: body\n          description: Id of the Twilio account that took the contact\n          schema:\n            type: string\n            example: ACXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\n        - name: timeOfContact\n          in: body\n          description: Date-time of the contact (EPOCH timestamp)\n          schema:\n            type: integer\n            format: int32\n            example: 1565827981000\n      responses:\n        '200':\n          description: Created contact\n          content:\n              application/json:\n                schema:\n                  allOf:\n                    - $ref: '#/components/schemas/SequelizeRecord'\n                    - $ref: '#/components/schemas/Contact'\n        '401':\n          $ref: '#/components/responses/UnauthorizedError'\n  /contacts/{contactId}/connectToCase:\n    put:\n      tags:\n        - contacts\n      summary: connect contact to a given case\n      operationId: connectToCase\n      parameters:\n        - name: contactId\n          in: path\n          description: ID of contact to connect\n          required: true\n          schema:\n            type: integer\n            format: int32\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              required:\n                - caseId\n              properties:\n                caseId:\n                  type: integer\n                  format: int32\n                example: { \"caseId\": 1 }\n        description: caseId to connect to\n      responses:\n        '200':\n          description: Connected contact to case\n          content:\n              application/json:\n                schema:\n                  allOf:\n                    - $ref: '#/components/schemas/SequelizeRecord'\n                    - $ref: '#/components/schemas/Contact'\n        '401':\n          $ref: '#/components/responses/UnauthorizedError'\n        '404':\n          description: Case or contact not found\n  /contacts/search:\n    post:\n      tags:\n        - contacts\n      summary: search contacts\n      operationId: searchContacts\n      parameters:\n        - in: query\n          name: limit\n          required: false\n          schema:\n            type: integer\n            format: int32\n        - in: query\n          name: offset\n          required: false\n          schema:\n            type: integer\n            format: int32\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/SearchContact'\n        description: Case to create\n      responses:\n        '200':\n          description: Search contacts result\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/SearchContactsResult'\n        '401':\n          $ref: '#/components/responses/UnauthorizedError'\n  /cases/search:\n    post:\n      tags:\n        - cases\n      summary: search cases\n      operationId: searchCases\n      parameters:\n        - in: query\n          name: limit\n          required: false\n          schema:\n            type: integer\n            format: int32\n        - in: query\n          name: offset\n          required: false\n          schema:\n            type: integer\n            format: int32\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/SearchContact'\n        description: Case to search\n      responses:\n        '200':\n          description: Search cases result\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/SearchCasesResult'\n        '401':\n          $ref: '#/components/responses/UnauthorizedError'\ncomponents:\n  schemas:\n    SequelizeRecord:\n      type: object\n      required:\n        - id\n        - createdAt\n        - updatedAt\n      properties:\n        id:\n          type: integer\n          format: int32\n          example: 27\n        createdAt:\n          type: string\n          format: date-time\n          example: '2020-03-19T15:03:03.042Z'\n        updatedAt:\n          type: string\n          format: date-time\n          example: '2020-04-29T22:18:19.663Z'\n    Case:\n      type: object\n      required:\n        - status\n        - helpline\n        - info\n        - twilioWorkerId\n      properties:\n        status:\n          type: string\n          example: open\n        helpline:\n          type: string\n          example: helpline-1\n        info:\n          type: object\n          example: { \"notes\": \"Child with covid-19\" }\n        twilioWorkerId:\n          type: string\n          example: WZd3d289370720216aab7e3dc023e80f5f\n        accountSid:\n          type: string\n          example: ACXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\n        connectedContacts:\n          type: array\n          items:\n            allOf:\n              - $ref: '#/components/schemas/SequelizeRecord'\n              - $ref: '#/components/schemas/Contact'\n    Contact:\n      type: object\n      required:\n        - reservationId\n        - rawJson\n        - queueName\n        - twilioWorkerId\n        - helpline\n        - number\n        - channel\n        - conversationDuration\n        - caseId\n        - timeOfContact\n      properties:\n        timestamp:\n          type: integer\n          format: int64\n          example: 1565827981000\n        reservationId:\n          type: string\n          example: WS17ce7c9cf654a4b240031ff7b17e7d93\n        rawJson:\n          type: object\n          example: { \"callType\": {}, \"callerInformation\": {}, \"childInformation\": {}, \"caseInformation\": {} }\n        queueName:\n          type: string\n          example: Admin\n        twilioWorkerId:\n          type: string\n          example: WZd3d289370720216aab7e3dc023e80f5f\n        helpline:\n          type: string\n          example:\n        number:\n          type: string\n          example: '+12025550163'\n        channel:\n          type: string\n          example: web\n        conversationDuration:\n          type: integer\n          format: int32\n          example: 42\n        caseId:\n          type: integer\n          format: int32\n          example: 1\n        accountSid:\n          type: string\n          example: ACXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\n        timeOfContact:\n          type: integer\n          format: int64\n          example: 1565827981000\n    Activity:\n      type: object\n      required:\n        - date\n        - type\n        - text\n        - twilioWorkerId\n      properties:\n        date:\n          type: string\n          format: date-time\n          example: '2020-30-07 18:55:20'\n        type:\n          type: string\n          example: note\n        text:\n          type: string\n          example: Child needs help\n        twilioWorkerId:\n          type: string\n          example: WZd3d289370720216aab7e3dc023e80f5f\n    SearchContact:\n      type: object\n      required:\n        - helpline\n        - firstName\n        - lastName\n        - counselor\n        - phoneNumber\n        - dateFrom\n        - dateTo\n        - onlyDataContacts\n      properties:\n        helpline:\n          type: string\n          example: helpline-1\n        firstName:\n          type: string\n          example: John\n        lastName:\n          type: string\n          example: Doe\n        counselor:\n          type: string\n          example: WZd3d289370720216aab7e3dc023e80f5f\n        phoneNumber:\n          type: string\n          example: '+12025550163'\n        dateFrom:\n          type: string\n          format: date-time\n          example: '2020-03-19T15:03:03.042Z'\n        dateTo:\n          type: string\n          format: date-time\n          example: '2020-03-19T15:03:03.042Z'\n        onlyDataContacts:\n          type: boolean\n          example: true\n    SearchContactsResult:\n      type: object\n      required:\n        - count\n        - contacts\n      properties:\n        count:\n          type: integer\n          format: int32\n          example: 1\n        contacts:\n          type: array\n          items:\n            type: object\n            properties:\n              contactId:\n                type: string\n                example: WS17ce7c9cf654a4b240031ff7b17e7d93\n              overview:\n                type: object\n                properties:\n                  dateTime:\n                    type: string\n                    format: date-time\n                    example: '2020-03-19T15:03:03.042Z'\n                  name:\n                    type: string\n                    example: Jhon\n                  customerNumber:\n                    type: string\n                    example: '+12025550163'\n                  callType:\n                    type: string\n                    example: Child calling about self\n                  categories:\n                    type: object\n                    example: {}\n                  counselor:\n                    type: string\n                    example: WZd3d289370720216aab7e3dc023e80f5f\n                  notes:\n                    type: string\n                    example: Child needs help\n                  channel:\n                    type: string\n                    example: web\n                  conversationDuration:\n                    type: integer\n                    format: int32\n                    example: 42\n              details:\n                type: object\n                properties:\n                  timestamp:\n                    type: integer\n                    format: int64\n                    example: 1565827981000\n                  reservationId:\n                    type: string\n                    example: WS17ce7c9cf654a4b240031ff7b17e7d93\n                  rawJson:\n                    type: object\n                    example: { \"callType\": {}, \"callerInformation\": {}, \"childInformation\": {}, \"caseInformation\": {} }\n                  queueName:\n                    type: string\n                    example: Admin\n                  twilioWorkerId:\n                    type: string\n                    example: WZd3d289370720216aab7e3dc023e80f5f\n                  helpline:\n                    type: string\n                    example:\n                  number:\n                    type: string\n                    example: '+12025550163'\n                  channel:\n                    type: string\n                    example: web\n                  conversationDuration:\n                    type: integer\n                    format: int32\n                    example: 42\n                  caseId:\n                    type: integer\n                    format: int32\n                    example: 1\n    SearchCasesResult:\n      type: object\n      required:\n        - count\n        - cases\n      properties:  \n        count:\n          type: integer\n          format: int32\n          example: 1\n        cases:\n          type: array\n          items:\n            allOf:\n              - $ref: '#/components/schemas/SequelizeRecord'\n              - $ref: '#/components/schemas/Case'\n  responses:\n    UnauthorizedError:\n      description: API Key is missing or invalid\n  securitySchemes:\n    apiKey:\n      type: apiKey\n      in: header\n      name: Authorization\nsecurity:\n  - apiKey: []",
			"canonicalURL": "/github.com/techmatters/hrm@6615a0ecf887cf7f0588dec8c7b4deb0b6f92721/-/blob/hrm-service/swagger.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/techmatters/hrm/blob/6615a0ecf887cf7f0588dec8c7b4deb0b6f92721/hrm-service/swagger.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "parse: parse spec: parse path items: path \"/contacts\": post: operation \"createContact\": parameters: parse parameter \"rawJson\": at 1:7899: unknown parameter location \"body\""
}