{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/robertmassaioli/openapi-merge"
		},
		"file": {
			"name": "confluence.swagger.yaml",
			"size": 0,
			"path": "packages/openapi-merge-cli/confluence.swagger.yaml",
			"byteSize": 411185,
			"content": "---\nopenapi: 3.0.0\ninfo:\n  version: 1.0.0\n  title: The Confluence Cloud REST API\n  termsOfService: http://atlassian.com/terms/\n  description: This document describes the REST API and resources provided by Confluence.\n    The REST APIs are for developers who want to integrate Confluence into their application\n    and for administrators who want to script interactions with the Confluence server.Confluence's\n    REST APIs provide access to resources (data entities) via URI paths. To use a\n    REST API, your application will make an HTTP request and parse the response. The\n    response format is JSON. Your methods will be the standard HTTP methods like GET,\n    PUT, POST and DELETE. Because the REST API is based on open standards, you can\n    use any web development language to access the API.\ntags:\n- name: Audit\n  description: ''\n- name: Content\n  description: ''\n- description: ''\n  name: Contentbody\n- name: Experimental\n  description: ''\n- description: ''\n  name: Group\n- name: InlineTasks\n  description: ''\n- description: ''\n  name: Longtask\n- name: Relation\n  description: ''\n- description: ''\n  name: Search\n- description: ''\n  name: Settings\n- description: ''\n  name: Space\n- name: Template\n  description: ''\n- description: ''\n  name: User\n- description: ''\n  name: Dynamic modules\nexternalDocs:\n  description: The online and complete version of the Confluence Cloud REST API docs.\n  url: https://developer.atlassian.com/cloud/confluence/rest/\npaths:\n  \"/api/longtask\":\n    get:\n      summary: Get long-running tasks\n      tags:\n      - Longtask\n      operationId: com.atlassian.confluence.plugins.restapi.resources.LongTaskResource.getTasks_get\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                \"$ref\": \"#/components/schemas/LongTaskStatusArray\"\n          description: Returned if the requested tasks are returned.\n        '401':\n          description: Returned if the calling user is not logged in to Confluence.\n      x-atlassian-connect-scope: READ\n      description: |-\n        Returns information about all active long-running tasks (e.g. space export),\n        such as how long each task has been running and the percentage of each task\n        that has completed.\n\n        **[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\n        Permission to access the Confluence site ('Can use' global permission).\n      parameters:\n      - description: The starting index of the returned tasks.\n        schema:\n          default: 0\n          type: integer\n          minimum: 0\n          format: int32\n        required: false\n        name: start\n        in: query\n      - in: query\n        required: false\n        name: limit\n        description: |-\n          The maximum number of tasks to return per page. Note, this may be\n          restricted by fixed system limits.\n        schema:\n          type: integer\n          default: 100\n          minimum: 0\n          format: int32\n  \"/api/user/anonymous\":\n    get:\n      description: |-\n        Returns information about how anonymous users are represented, like the\n        profile picture and display name.\n\n        **[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\n        Permission to access the Confluence site ('Can use' global permission).\n      x-atlassian-connect-scope: READ\n      parameters:\n      - schema:\n          type: array\n          items:\n            type: string\n            enum:\n            - operations\n        description: |-\n          A multi-value parameter indicating which properties of the user to\n          expand.\n\n            - `operations` returns the operations that the user is allowed to do.\n        in: query\n        required: false\n        name: expand\n        style: form\n      summary: Get anonymous user\n      tags:\n      - User\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                \"$ref\": \"#/components/schemas/UserAnonymous\"\n          description: Returned if the anonymous user representation is returned.\n        '403':\n          description: |-\n            Returned if the calling user does not have permission to use\n            Confluence.\n      operationId: com.atlassian.confluence.plugins.restapi.resources.UserResource.getAnonymousUser_get\n  \"/api/relation/{relationName}/to/{targetType}/{targetKey}/from/{sourceType}\":\n    get:\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                \"$ref\": \"#/components/schemas/RelationArray\"\n          description: Returned if the requested relationships are returned.\n        '403':\n          description: |-\n            Returned if the user does not have permission to view the\n            relationship\n        '404':\n          description: Returned if the target entity does not exist.\n      security:\n      - oAuthDefinitions:\n        - read:confluence-content.summary\n      x-atlassian-connect-scope: READ\n      operationId: com.atlassian.confluence.plugins.restapi.resources.RelationResource.findSourcesForTarget_get\n      tags:\n      - Relation\n      summary: Find target entities related to a source entity\n      parameters:\n      - description: |-\n          The name of the relationship. This method supports relationships created via\n          [Create relationship](#api-relation-relationName-from-sourceType-sourceKey-to-targetType-targetKey-put).\n          Note, this method does not support 'favourite' relationships.\n        schema:\n          type: string\n        required: true\n        in: path\n        name: relationName\n      - description: The source entity type of the relationship.\n        schema:\n          type: string\n          enum:\n          - user\n          - content\n          - space\n        in: path\n        required: true\n        name: sourceType\n      - description: The target entity type of the relationship.\n        schema:\n          type: string\n          enum:\n          - user\n          - content\n          - space\n        required: true\n        in: path\n        name: targetType\n      - required: true\n        in: path\n        name: targetKey\n        schema:\n          type: string\n        description: |-\n          The identifier for the target entity:\n\n          - If `targetType` is `user`, then specify either `current` (logged-in user), the user key of the user, or\n          the account ID of the user. Note that the user key has been deprecated in favor of the account ID for this parameter. See the\n          [migration guide](https://developer.atlassian.com/cloud/confluence/deprecation-notice-user-privacy-api-migration-guide/)\n          for details.\n          - If `targetType` is 'content', then specify the content ID.\n          - If `targetType` is 'space', then specify the space key.\n      - in: query\n        required: false\n        name: sourceStatus\n        schema:\n          type: string\n        description: |-\n          The status of the source. This parameter is only used when the\n          `sourceType` is 'content'.\n      - schema:\n          type: string\n        description: |-\n          The status of the target. This parameter is only used when the\n          `targetType` is 'content'.\n        in: query\n        required: false\n        name: targetStatus\n      - description: |-\n          The version of the source. This parameter is only used when the\n          `sourceType` is 'content' and the `sourceStatus` is 'historical'.\n        schema:\n          format: int32\n          type: integer\n        required: false\n        name: sourceVersion\n        in: query\n      - schema:\n          type: integer\n          format: int32\n        description: |-\n          The version of the target. This parameter is only used when the\n          `targetType` is 'content' and the `targetStatus` is 'historical'.\n        name: targetVersion\n        required: false\n        in: query\n      - description: |-\n          A multi-value parameter indicating which properties of the response\n          object to expand.\n\n          - `relationData` returns information about the relationship, such as\n          who created it and when it was created.\n          - `source` returns the source entity.\n          - `target` returns the target entity.\n        schema:\n          items:\n            enum:\n            - relationData\n            - source\n            - target\n            type: string\n          type: array\n        style: form\n        in: query\n        required: false\n        name: expand\n      - description: The starting index of the returned relationships.\n        schema:\n          minimum: 0\n          format: int32\n          default: 0\n          type: integer\n        required: false\n        in: query\n        name: start\n      - in: query\n        required: false\n        name: limit\n        schema:\n          default: 25\n          type: integer\n          format: int32\n          minimum: 0\n        description: |-\n          The maximum number of relationships to return per page.\n          Note, this may be restricted by fixed system limits.\n      description: |-\n        Returns all target entities that have a particular relationship to the\n        source entity. Note, relationships are one way.\n\n        For example, the following method finds all users that have a 'collaborator'\n        relationship to a piece of content with an ID of '1234':\n        `GET https://your-domain.atlassian.net/wiki/rest/api/relation/collaborator/to/content/1234/from/user`\n        Note, 'collaborator' is an example custom relationship type.\n\n        **[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\n        Permission to view both the target entity and source entity.\n  \"/api/settings/lookandfeel\":\n    get:\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                \"$ref\": \"#/components/schemas/LookAndFeelSettings\"\n          description: Returned if the requested look and feel settings are returned.\n        '400':\n          description: Returned if `spaceKey` is invalid.\n        '404':\n          description: Returned if there is no space with the given `spaceKey`.\n      security:\n      - oAuthDefinitions:\n        - manage:confluence-configuration\n      x-atlassian-connect-scope: READ\n      operationId: com.atlassian.confluence.plugins.restapi.resources.LookAndFeelResource.getLookAndFeelSettings_get\n      tags:\n      - Settings\n      summary: Get look and feel settings\n      parameters:\n      - description: |-\n          The key of the space for which the look and feel settings will be\n          returned. If this is not set, only the global look and feel settings\n          are returned.\n        schema:\n          type: string\n        in: query\n        required: false\n        name: spaceKey\n      description: |-\n        Returns the look and feel settings for the site or a single space. This\n        includes attributes such as the color scheme, padding, and border radius.\n\n        The look and feel settings for a space can be inherited from the global\n        look and feel settings or provided by a theme.\n\n        **[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\n        None\n  \"/api/content/{id}/label\":\n    get:\n      x-atlassian-connect-scope: READ\n      security:\n      - oAuthDefinitions:\n        - read:confluence-content.summary\n      responses:\n        '200':\n          description: Returned if the requested labels are returned.\n          content:\n            application/json:\n              schema:\n                \"$ref\": \"#/components/schemas/LabelArray\"\n        '404':\n          description: |-\n            Returned if;\n\n            - There is no content with the given ID.\n            - The calling user does not have permission to view the content.\n      description: |-\n        Returns the labels on a piece of content.\n\n        **[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\n        'View' permission for the space and permission to view the content if it is a page.\n      parameters:\n      - schema:\n          type: string\n        description: The ID of the content to be queried for its labels.\n        name: id\n        required: true\n        in: path\n      - schema:\n          enum:\n          - global\n          - my\n          - team\n          type: string\n        description: |-\n          Filters the results to labels with the specified prefix. If this parameter\n          is not specified, then labels with any prefix will be returned.\n\n          - `global` prefix is used by default when a user adds a label\n          via the UI.\n          - `my` prefix can be explicitly added by a user when adding a label\n          via the UI, e.g. 'my:example-label'. Also, when a page is selected as\n          a favourite, the 'my:favourite' label is automatically added.\n          - `team` can used when adding labels via [Add labels to content](#api-content-id-label-post)\n          but is not used in the UI.\n        in: query\n        required: false\n        name: prefix\n      - description: The starting index of the returned labels.\n        schema:\n          default: 0\n          type: integer\n          format: int32\n          minimum: 0\n        in: query\n        name: start\n      - schema:\n          format: int32\n          minimum: 0\n          type: integer\n          default: 200\n        description: |-\n          The maximum number of labels to return per page. Note,\n          this may be restricted by fixed system limits.\n        in: query\n        name: limit\n      tags:\n      - Content\n      summary: Get labels for content\n      operationId: com.atlassian.confluence.plugins.restapi.resources.ContentLabelsResource.getLabelsForContent_get\n    delete:\n      responses:\n        '204':\n          description: Returned if the label is removed. The response body will be\n            empty.\n        '403':\n          description: Returned if the calling user can view but not edit the content.\n        '404':\n          description: |-\n            Returned if;\n\n            - There is no content with the given ID.\n            - The calling user does not have permission to view the content.\n      security:\n      - oAuthDefinitions:\n        - write:confluence-content\n      x-atlassian-connect-scope: DELETE\n      operationId: com.atlassian.confluence.plugins.restapi.resources.ContentLabelsResource.removeLabelFromContentUsingQueryParameter_delete\n      tags:\n      - Content\n      summary: Remove label from content using query parameter\n      parameters:\n      - schema:\n          type: string\n        description: The ID of the content that the label will be removed from.\n        required: true\n        name: id\n        in: path\n      - name: name\n        required: false\n        in: query\n        description: The name of the label to be removed.\n        schema:\n          type: string\n      description: |-\n        Removes a label from a piece of content. This is similar to\n        [Remove label from content](#api-content-id-label-label-delete)\n        except that the label name is specified via a query parameter.\n\n        Use this method if the label name has \"/\" characters, as\n        [Remove label from content using query parameter](#api-content-id-label-delete)\n        does not accept \"/\" characters for the label name.\n\n        **[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\n        Permission to update the content.\n    post:\n      tags:\n      - Content\n      summary: Add labels to content\n      operationId: com.atlassian.confluence.plugins.restapi.resources.ContentLabelsResource.addLabelsToContent_post\n      requestBody:\n        description: The labels to add to the content.\n        content:\n          application/json:\n            schema:\n              \"$ref\": \"#/components/schemas/LabelCreateArray\"\n        required: true\n      description: |-\n        Adds labels to a piece of content. Does not modify the existing labels.\n\n        Notes:\n\n        - Labels can also be added when creating content ([Create content](#api-content-post)).\n        - Labels can be updated when updating content ([Update content](#api-content-id-put)).\n        This will delete the existing labels and replace them with the labels in\n        the request.\n\n        **[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\n        Permission to update the content.\n      parameters:\n      - description: The ID of the content that will have labels added to it.\n        schema:\n          type: string\n        required: true\n        in: path\n        name: id\n      responses:\n        '200':\n          description: Returned if the labels are added to the content.\n          content:\n            application/json:\n              schema:\n                \"$ref\": \"#/components/schemas/LabelArray\"\n        '404':\n          description: |-\n            Returned if;\n\n            - There is no content with the given ID.\n            - The calling user does not have permission to view the content.\n      x-atlassian-connect-scope: WRITE\n      security:\n      - oAuthDefinitions:\n        - write:confluence-content\n  \"/api/content/{id}/move/{position}/{targetId}\":\n    put:\n      description: |-\n        Move a page to a new location relative to a target page:\n\n        * `before` - move the page under the same parent as the target, before the target in the list of children\n        * `after` - move the page under the same parent as the target, after the target in the list of children\n        * `append` - move the page to be a child of the target\n\n        Caution: This API can move pages to the top level of a space. Top-level pages are difficult to find in the UI\n        because they do not show up in the page tree display. To avoid this, never use `before` or `after` positions\n        when the `targetId` is a top-level page.\n      parameters:\n      - in: path\n        required: true\n        name: id\n        description: The ID of the page to be moved\n        schema:\n          type: string\n      - schema:\n          type: string\n          enum:\n          - before\n          - after\n          - append\n        description: |-\n          The position to move the page to relative to the target page:\n          * `before` - move the page under the same parent as the target, before the target in the list of children\n          * `after` - move the page under the same parent as the target, after the target in the list of children\n          * `append` - move the page to be a child of the target\n        required: true\n        name: position\n        in: path\n      - required: true\n        name: targetId\n        in: path\n        schema:\n          type: string\n        description: The ID of the target page for this operation\n      tags:\n      - Content\n      summary: Move a page to a new location relative to a target page\n      operationId: com.atlassian.confluence.plugins.restapi.resources.movePage_put\n      x-atlassian-connect-scope: WRITE\n      security:\n      - oAuthDefinitions:\n        - write:confluence-content\n      responses:\n        '200':\n          description: Page was successfully moved\n          content:\n            application/json:\n              schema:\n                properties:\n                  pageId:\n                    description: The content id of the page that was moved.\n                    \"$ref\": \"#/components/schemas/ContentId\"\n                type: object\n        '400':\n          description: |-\n            Returned if;\n\n            - A page already exists in the target space with the same name.\n              User is advised to rename page before moving.\n            - The move would create a parent-child loop (page becomes a descendant and ancestor of itself)\n            - The page has permission restrictions that the user does not have permission to create in the target space.\n              User is advised to remove restrictions before moving.\n        '403':\n          description: |-\n            Returned if;\n\n            - User does not have permission to remove page from current space\n            - User does not have permission to create a page in target space\n        '404':\n          description: |-\n            Returned if;\n\n            - The id or targetId refer to non-existent pages\n  \"/api/settings/lookandfeel/selected\":\n    put:\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                \"$ref\": \"#/components/schemas/LookAndFeelSettings\"\n          description: Returned if the look and feel settings were set.\n        '400':\n          description: |-\n            Returned if;\n\n            - The `spaceKey` is invalid.\n            - The look and feel type is invalid.\n        '403':\n          description: |-\n            Returned if the look and feel type is set to 'theme' but the\n            space/site doesn't have a theme assigned.\n        '404':\n          description: Returned if there is no space with the given `spaceKey`.\n      x-atlassian-connect-scope: WRITE\n      security:\n      - oAuthDefinitions:\n        - manage:confluence-configuration\n      summary: Set look and feel settings\n      tags:\n      - Settings\n      operationId: com.atlassian.confluence.plugins.restapi.resources.LookAndFeelResource.setLookAndFeelSettings_put\n      requestBody:\n        description: The look and feel settings to be set.\n        content:\n          application/json:\n            schema:\n              \"$ref\": \"#/components/schemas/LookAndFeelType\"\n        required: true\n      description: |-\n        Sets the look and feel settings to either the default settings or the\n        custom settings, for the site or a single space. Note, the default\n        space settings are inherited from the current global settings.\n\n        **[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\n        'Admin' permission for the space.\n      parameters:\n      - schema:\n          type: string\n        description: |-\n          The key of the space for which the look and feel settings will be\n          set. If this is not set, the global look and feel settings will be\n          set.\n        name: spaceKey\n        required: false\n        in: query\n  \"/api/audit\":\n    get:\n      tags:\n      - Audit\n      summary: Get audit records\n      operationId: com.atlassian.confluence.plugins.restapi.resources.AuditResource.getAuditRecords_get\n      responses:\n        '200':\n          description: Returned if the requested records are returned.\n          content:\n            application/json:\n              schema:\n                \"$ref\": \"#/components/schemas/AuditRecordArray\"\n        '403':\n          description: |-\n            Returned if the calling user does not have permission to view the audit\n            log.\n      x-atlassian-connect-scope: INACCESSIBLE\n      description: |-\n        Returns all records in the audit log, optionally for a certain date range.\n        This contains information about events like space exports, group membership\n        changes, app installations, etc. For more information, see\n        [Audit log](https://confluence.atlassian.com/confcloud/audit-log-802164269.html)\n        in the Confluence administrator's guide.\n\n        **[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\n        'Confluence Administrator' global permission.\n      parameters:\n      - required: false\n        in: query\n        name: startDate\n        schema:\n          type: string\n        description: |-\n          Filters the results to the records on or after the `startDate`.\n          The `startDate` must be specified as a [timestamp](https://www.unixtimestamp.com/).\n      - schema:\n          type: string\n        description: |-\n          Filters the results to the records on or before the `endDate`.\n          The `endDate` must be specified as a [timestamp](https://www.unixtimestamp.com/).\n        required: false\n        in: query\n        name: endDate\n      - description: |-\n          Filters the results to records that have string property values\n          matching the `searchString`.\n        schema:\n          type: string\n        required: false\n        name: searchString\n        in: query\n      - required: false\n        in: query\n        name: start\n        description: The starting index of the returned records.\n        schema:\n          format: int32\n          minimum: 0\n          default: 0\n          type: integer\n      - description: |-\n          The maximum number of records to return per page.\n          Note, this may be restricted by fixed system limits.\n        schema:\n          type: integer\n          default: 1000\n          minimum: 0\n          format: int32\n        required: false\n        name: limit\n        in: query\n    post:\n      x-atlassian-connect-scope: INACCESSIBLE\n      description: |-\n        Creates a record in the audit log.\n\n        **[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\n        'Confluence Administrator' global permission.\n      requestBody:\n        required: true\n        description: The record to be created in the audit log.\n        content:\n          application/json:\n            schema:\n              \"$ref\": \"#/components/schemas/AuditRecordCreate\"\n      operationId: com.atlassian.confluence.plugins.restapi.resources.AuditResource.createAuditRecord_post\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                \"$ref\": \"#/components/schemas/AuditRecord\"\n          description: Returned if the record is created in the audit log.\n        '400':\n          description: Returned if the `remoteAddress` property is not specified.\n      summary: Create audit record\n      tags:\n      - Audit\n  \"/api/search\":\n    get:\n      tags:\n      - Search\n      summary: Search content\n      operationId: com.atlassian.confluence.plugins.restapi.resources.SearchResource.search_get\n      description: |-\n        Searches for content using the\n        [Confluence Query Language (CQL)](https://developer.atlassian.com/cloud/confluence/advanced-searching-using-cql/)\n\n        **[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\n        Permission to view the entities. Note, only entities that the user has\n        permission to view will be returned.\n      parameters:\n      - required: true\n        name: cql\n        in: query\n        schema:\n          type: string\n        description: |-\n          The CQL query to be used for the search. See\n          [Advanced Searching using CQL](https://developer.atlassian.com/cloud/confluence/advanced-searching-using-cql/)\n          for instructions on how to build a CQL query.\n      - description: |-\n          The space, content, and content status to execute the search\n          against.\n\n          - `spaceKey` Key of the space to search against. Optional.\n          - `contentId` ID of the content to search against. Optional. Must be\n          in the space specified by `spaceKey`.\n          - `contentStatuses` Content statuses to search against. Optional.\n\n          Specify these values in an object. For example,\n          `cqlcontext={%22spaceKey%22:%22TEST%22, %22contentId%22:%22123%22}`\n        schema:\n          type: string\n        required: false\n        name: cqlcontext\n        in: query\n      - schema:\n          format: int32\n          minimum: 0\n          type: integer\n          default: 0\n        description: The starting index of the returned content.\n        in: query\n        required: false\n        name: start\n      - name: limit\n        required: false\n        in: query\n        description: |-\n          The maximum number of content objects to return per page.\n          Note, this may be restricted by fixed system limits.\n        schema:\n          minimum: 0\n          format: int32\n          type: integer\n          default: 25\n      - name: includeArchivedSpaces\n        required: false\n        in: query\n        description: Include content from archived spaces in the results.\n        schema:\n          default: false\n          type: boolean\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                \"$ref\": \"#/components/schemas/SearchPageResponseSearchResult\"\n          description: Returned if the requested results are returned.\n        '400':\n          description: Returned if the CQL query cannot be parsed.\n        '403':\n          description: |-\n            Returned if the calling user does not have permission to access\n            Confluence.\n      x-atlassian-connect-scope: READ\n      security:\n      - oAuthDefinitions:\n        - search:confluence\n  \"/api/content/{id}\":\n    get:\n      parameters:\n      - name: id\n        required: true\n        in: path\n        description: |-\n          The ID of the content to be returned. If you don't know the content ID,\n          use [Get content](#api-content-get) and filter the results.\n        schema:\n          type: string\n      - schema:\n          items:\n            type: string\n          enum:\n          - current\n          - trashed\n          - draft\n          - any\n          default: current\n          type: array\n        explode: true\n        description: |-\n          Filter the results to a set of content based on their status.\n          If set to `any`, content with any status is returned. Note, the\n          `historical` status is currently not supported.\n        in: query\n        required: false\n        name: status\n      - required: false\n        in: query\n        name: version\n        schema:\n          type: integer\n          format: int32\n        description: The version number of the content to be returned.\n      - required: false\n        name: embeddedContentRender\n        in: query\n        schema:\n          default: current\n          type: string\n          enum:\n          - current\n          - version-at-save\n        description: |-\n          The version of embedded content (e.g. attachments) to render.\n\n          - \u003ccode\u003ecurrent\u003c/code\u003e renders the latest version of the embedded content.\n          - \u003ccode\u003eversion-at-save\u003c/code\u003e renders the version of the embedded content\n          at the time of save.\n      - \"$ref\": \"#/components/parameters/contentExpand\"\n      - name: trigger\n        required: false\n        in: query\n        schema:\n          enum:\n          - viewed\n          type: string\n        description: |-\n          If set to `viewed`, the request will trigger a 'viewed' event for the content.\n          When this event is triggered, the page/blogpost will appear on the 'Recently visited'\n          tab of the user's Confluence dashboard.\n      description: |-\n        Returns a single piece of content, like a page or a blog post.\n\n        By default, the following objects are expanded: `space`, `history`, `version`.\n\n        **[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\n        Permission to view the content. If the content is a blog post, 'View' permission\n        for the space is required.\n      operationId: com.atlassian.confluence.plugins.restapi.resources.ContentResource.getContentById_get\n      tags:\n      - Content\n      summary: Get content by ID\n      security:\n      - oAuthDefinitions:\n        - read:confluence-content.summary\n      x-atlassian-connect-scope: READ\n      responses:\n        '200':\n          description: Returned if the requested content is returned.\n          content:\n            application/json:\n              schema:\n                \"$ref\": \"#/components/schemas/Content\"\n        '401':\n          description: |-\n            Returned if the authentication credentials are incorrect or missing\n            from the request.\n        '404':\n          description: |-\n            Returned if;\n\n            - There is no content with the given ID.\n            - The requesting user does not have permission to view the content.\n    delete:\n      description: |-\n        Moves a piece of content to the space's trash or purges it from the trash,\n        depending on the content's type and status:\n\n        - If the content's type is `page` or `blogpost` and its status is `current`,\n        it will be trashed.\n        - If the content's type is `page` or `blogpost` and its status is `trashed`,\n        the content will be purged from the trash and deleted permanently. Note,\n        you must also set the `status` query parameter to `trashed` in your request.\n        - If the content's type is `comment` or `attachment`, it will be deleted\n        permanently without being trashed.\n\n        **[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\n        'Delete' permission for the space that the content is in, and permission to edit the content.\n      parameters:\n      - required: true\n        name: id\n        in: path\n        schema:\n          type: string\n        description: The ID of the content to be deleted.\n      - required: false\n        in: query\n        name: status\n        schema:\n          type: string\n        description: Set this to `trashed`, if the content's status is `trashed` and\n          you want to purge it.\n      summary: Delete content\n      tags:\n      - Content\n      operationId: com.atlassian.confluence.plugins.restapi.resources.ContentResource.deleteContent_delete\n      x-atlassian-connect-scope: DELETE\n      security:\n      - oAuthDefinitions:\n        - write:confluence-content\n      responses:\n        '200':\n          description: Returned if the content is successfully trashed.\n        '204':\n          description: Returned if the content is successfully purged.\n        '404':\n          description: |-\n            Returned if;\n\n            - There is no content with the given ID.\n            - The requesting user does not have permission to trash or purge the\n            content.\n    put:\n      parameters:\n      - name: id\n        required: true\n        in: path\n        description: The ID of the content to be updated.\n        schema:\n          type: string\n      - required: false\n        name: status\n        in: query\n        description: |-\n          The updated status of the content. Use this parameter to change the\n          status of a piece of content without passing the entire request body.\n        schema:\n          default: current\n          type: string\n          enum:\n          - current\n          - trashed\n          - historical\n          - draft\n      - name: conflictPolicy\n        required: false\n        in: query\n        schema:\n          enum:\n          - abort\n          default: abort\n          type: string\n        description: |-\n          The action that should be taken when conflicts are discovered.\n          Only used when publishing a draft page.\n      description: |-\n        Updates a piece of content. Use this method to update the title or body\n        of a piece of content, change the status, change the parent page, and more.\n\n        Note, updating draft content is currently not supported.\n\n        **[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\n        Permission to update the content.\n      requestBody:\n        required: true\n        description: The updated content.\n        content:\n          application/json:\n            schema:\n              \"$ref\": \"#/components/schemas/ContentUpdate\"\n      operationId: com.atlassian.confluence.plugins.restapi.resources.ContentResource.updateContent_put\n      summary: Update content\n      tags:\n      - Content\n      security:\n      - oAuthDefinitions:\n        - write:confluence-content\n      x-atlassian-connect-scope: WRITE\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                \"$ref\": \"#/components/schemas/Content\"\n          description: Returned if the content is updated.\n        '400':\n          description: |-\n            Returned if;\n\n            - The request body is missing required parameters (version, type, title).\n            - The type property has been set incorrectly.\n        '401':\n          description: |-\n            Returned if the authentication credentials are incorrect or missing\n            from the request.\n        '404':\n          description: |-\n            Returned if a draft with current content cannot be found when setting the status\n            parameter to draft and the content status is current.\n        '409':\n          description: |-\n            Returned if;\n\n            - The page is a draft (draft pages cannot be updated).\n            - The version property has not been set correctly for the content\n            type.\n  \"/api/content/{id}/version/{versionNumber}\":\n    get:\n      parameters:\n      - description: The ID of the content to be queried for its version.\n        schema:\n          type: string\n        in: path\n        required: true\n        name: id\n      - schema:\n          type: integer\n          format: int32\n        description: The number of the version to be retrieved.\n        required: true\n        name: versionNumber\n        in: path\n      - schema:\n          type: array\n          items:\n            type: string\n            enum:\n            - collaborators\n            - content\n        description: |-\n          A multi-value parameter indicating which properties of the content to\n          expand. By default, the `content` object is expanded.\n\n          - `collaborators` returns the users that collaborated on the version.\n          - `content` returns the content for the version.\n        in: query\n        required: false\n        name: expand\n        style: form\n      description: |-\n        Returns a version for a piece of content.\n\n        **[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\n        Permission to view the content. If the content is a blog post, 'View' permission\n        for the space is required.\n      operationId: com.atlassian.confluence.plugins.restapi.resources.ContentVersionResource.getContentVersion_get\n      summary: Get content version\n      tags:\n      - Content\n      security:\n      - oAuthDefinitions:\n        - read:confluence-content.summary\n      x-atlassian-connect-scope: READ\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                \"$ref\": \"#/components/schemas/Version\"\n          description: Returned if the version is returned.\n        '403':\n          description: |-\n            Returned if the calling user does not have permission to view the\n            content.\n        '404':\n          description: Returned if the content or version cannot be found.\n    delete:\n      security:\n      - oAuthDefinitions:\n        - write:confluence-content\n      x-atlassian-connect-scope: DELETE\n      responses:\n        '204':\n          description: Returned if the version is deleted.\n        '400':\n          description: |-\n            Returned if;\n\n            - The content or version cannot be found.\n            - The current version is specified.\n        '403':\n          description: |-\n            Returned if the calling user doesn't have permission to edit the\n            content.\n      parameters:\n      - required: true\n        in: path\n        name: id\n        schema:\n          type: string\n        description: The ID of the content that the version will be deleted from.\n      - schema:\n          type: integer\n          format: int32\n        description: |-\n          The number of the version to be deleted. The version number starts\n          from 1 up to current version.\n        required: true\n        name: versionNumber\n        in: path\n      description: |-\n        Delete a historical version. This does not delete the changes made to the\n        content in that version, rather the changes for the deleted version are\n        rolled up into the next version. Note, you cannot delete the current version.\n\n        **[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\n        Permission to update the content.\n      operationId: com.atlassian.confluence.plugins.restapi.resources.ContentVersionResource.deleteContentVersion_delete\n      summary: Delete content version\n      tags:\n      - Content\n  \"/api/content/{id}/property\":\n    post:\n      x-atlassian-connect-scope: WRITE\n      security:\n      - oAuthDefinitions:\n        - write:confluence-props\n      responses:\n        '200':\n          description: Returned if the content property is created.\n          content:\n            application/json:\n              schema:\n                \"$ref\": \"#/components/schemas/ContentProperty\"\n        '400':\n          description: |-\n            Returned if;\n\n            - The content already has a property with the given key.\n            - The key is too long.\n            - The key is empty.\n        '403':\n          description: |-\n            Returned if the user does not have permission to edit the content\n            with the given ID.\n        '413':\n          description: Returned if the value is too long.\n      requestBody:\n        content:\n          application/json:\n            schema:\n              \"$ref\": \"#/components/schemas/ContentPropertyCreate\"\n        description: The content property to be created.\n        required: true\n      description: |-\n        Creates a property for an existing piece of content. For more information\n        about content properties, see [Confluence entity properties](https://developer.atlassian.com/cloud/confluence/confluence-entity-properties/).\n\n        This is the same as [Create content property for key](#api-content-id-property-key-post)\n        except that the key is specified in the request body instead of as a\n        path parameter.\n\n        Content properties can also be added when creating a new piece of content\n        by including them in the `metadata.properties` of the request.\n\n        **[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\n        Permission to update the content.\n      parameters:\n      - schema:\n          type: string\n        description: The ID of the content to add the property to.\n        in: path\n        required: true\n        name: id\n      summary: Create content property\n      tags:\n      - Content\n      operationId: com.atlassian.confluence.plugins.restapi.resources.ContentPropertyResource.createContentProperty_post\n    get:\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                \"$ref\": \"#/components/schemas/ContentPropertyArray\"\n          description: Returned if the requested properties are returned.\n        '404':\n          description: |-\n            Returned if;\n\n            - There is no content with the given ID\n            - The calling user does not have permission to view the content.\n      security:\n      - oAuthDefinitions:\n        - read:confluence-props\n      x-atlassian-connect-scope: READ\n      operationId: com.atlassian.confluence.plugins.restapi.resources.ContentPropertyResource.getContentProperties_get\n      tags:\n      - Content\n      summary: Get content properties\n      parameters:\n      - in: path\n        required: true\n        name: id\n        schema:\n          type: string\n        description: The ID of the content to be queried for its properties.\n      - schema:\n          type: array\n          items:\n            type: string\n            enum:\n            - content\n            - version\n        description: |-\n          A multi-value parameter indicating which properties of the content to\n          expand. By default, the `version` object is expanded.\n\n          - `content` returns the content that the property is stored against.\n          - `version` returns information about the version of the property, such\n          as the version number, when it was created, etc.\n        required: false\n        name: expand\n        in: query\n        style: form\n      - description: The starting index of the returned properties.\n        schema:\n          format: int32\n          minimum: 0\n          type: integer\n          default: 0\n        in: query\n        required: false\n        name: start\n      - schema:\n          minimum: 0\n          format: int32\n          default: 10\n          type: integer\n        description: |-\n          The maximum number of properties to return per page.\n          Note, this may be restricted by fixed system limits.\n        required: false\n        in: query\n        name: limit\n      description: |-\n        Returns the properties for a piece of content. For more information\n        about content properties, see [Confluence entity properties](https://developer.atlassian.com/cloud/confluence/confluence-entity-properties/).\n\n        **[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\n        'View' permission for the space, and permission to view the content if it is a page.\n  \"/api/group/{groupName}\":\n    get:\n      x-atlassian-connect-scope: READ\n      description: |-\n        Returns a user group for a given group name.\n\n        **[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\n        Permission to access the Confluence site ('Can use' global permission).\n      parameters:\n      - schema:\n          type: string\n        description: |-\n          The name of the group. This is the same as the group name shown in\n          the Confluence administration console.\n        required: true\n        name: groupName\n        in: path\n      tags:\n      - Group\n      summary: Get group\n      operationId: com.atlassian.confluence.plugins.restapi.resources.GroupResource.getGroup_get\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                \"$ref\": \"#/components/schemas/Group\"\n          description: Returned if the requested group is returned.\n        '403':\n          description: |-\n            Returned if the calling user does not have permission to view\n            groups.\n  \"/api/content/{id}/descendant/{type}\":\n    get:\n      security:\n      - oAuthDefinitions:\n        - read:confluence-content.summary\n      x-atlassian-connect-scope: READ\n      responses:\n        '200':\n          description: Returned if the requested content is returned.\n          content:\n            application/json:\n              schema:\n                \"$ref\": \"#/components/schemas/ContentArray\"\n        '404':\n          description: |-\n            Returned if;\n\n            - There is no content with the given ID.\n            - The calling user does not have permission to view the content.\n      parameters:\n      - required: true\n        name: id\n        in: path\n        schema:\n          type: string\n        description: The ID of the content to be queried for its descendants.\n      - description: The type of descendants to return.\n        schema:\n          type: string\n          enum:\n          - page\n          - comment\n          - attachment\n        required: true\n        name: type\n        in: path\n      - \"$ref\": \"#/components/parameters/contentExpand\"\n      - schema:\n          minimum: 0\n          format: int32\n          default: 0\n          type: integer\n        description: The starting index of the returned content.\n        name: start\n        in: query\n      - description: |-\n          The maximum number of content to return per page. Note,\n          this may be restricted by fixed system limits.\n        schema:\n          default: 25\n          type: integer\n          format: int32\n          minimum: 0\n        name: limit\n        in: query\n      description: |-\n        Returns all descendants of a given type, for a piece of content. This is\n        similar to [Get content children by type](#api-content-id-child-type-get),\n        except that this method returns child pages at all levels, rather than just\n        the direct child pages.\n\n        A piece of content has different types of descendants, depending on its type:\n\n        - `page`: descendant is `page`, `comment`, `attachment`\n        - `blogpost`: descendant is `comment`, `attachment`\n        - `attachment`: descendant is `comment`\n        - `comment`: descendant is `attachment`\n\n        Custom content types that are provided by apps can also be returned.\n\n        **[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\n        'View' permission for the space, and permission to view the content if it\n        is a page.\n      operationId: com.atlassian.confluence.plugins.restapi.resources.DescendantContentResource.descendantsOfType_get\n      summary: Get content descendants by type\n      tags:\n      - Content\n  \"/atlassian-connect/1/app/module/dynamic\":\n    delete:\n      description: |-\n        Remove all or a list of modules registered by the calling app.\n\n        **[Permissions](#permissions) required:** Only Connect apps can make this request.\n      parameters:\n      - schema:\n          items:\n            type: string\n          type: array\n        description: |-\n          The key of the module to remove. To include multiple module keys, provide multiple copies of this parameter.\n          For example, `moduleKey=dynamic-attachment-entity-property\u0026moduleKey=dynamic-select-field`.\n          Nonexistent keys are ignored.\n        in: query\n        required: false\n        name: moduleKey\n      tags:\n      - Dynamic modules\n      summary: Remove modules\n      operationId: DynamicModulesResource.removeModules_delete\n      x-experimental: true\n      x-atlassian-connect-scope: NONE\n      deprecated: false\n      responses:\n        '204':\n          description: Returned if the request is successful.\n        '401':\n          description: Returned if the call is not from a Connect app.\n          content:\n            \"*/*\":\n              schema:\n                \"$ref\": \"#/components/schemas/DynamicModulesErrorMessage\"\n            message:\n              examples:\n                response:\n                  value: The request is not from a Connect app.\n    get:\n      deprecated: false\n      x-atlassian-connect-scope: NONE\n      responses:\n        '200':\n          description: Returned if the request is successful.\n          content:\n            \"*/*\":\n              schema:\n                \"$ref\": \"#/components/schemas/ConnectModules\"\n        '401':\n          content:\n            message:\n              examples:\n                response:\n                  value: The request is not from a Connect app.\n            \"*/*\":\n              schema:\n                \"$ref\": \"#/components/schemas/DynamicModulesErrorMessage\"\n          description: Returned if the call is not from a Connect app.\n      description: |-\n        Returns all modules registered dynamically by the calling app.\n\n        **[Permissions](#permissions) required:** Only Connect apps can make this request.\n      x-experimental: true\n      operationId: DynamicModulesResource.getModules_get\n      summary: Get modules\n      tags:\n      - Dynamic modules\n    post:\n      operationId: DynamicModulesResource.registerModules_post\n      x-experimental: true\n      summary: Register modules\n      tags:\n      - Dynamic modules\n      requestBody:\n        content:\n          application/json:\n            schema:\n              \"$ref\": \"#/components/schemas/ConnectModules\"\n        required: true\n      description: |-\n        Registers a list of modules. For the list of modules that support dynamic registration, see [Dynamic modules](https://developer.atlassian.com/cloud/confluence/dynamic-modules/).\n\n        **[Permissions](#permissions) required:** Only Connect apps can make this request.\n      responses:\n        '200':\n          description: Returned if the request is successful.\n        '400':\n          description: |-\n            Returned if:\n            * any of the provided modules is invalid. For example, required properties are missing.\n            * any of the modules conflict with registered dynamic modules or modules defined in the app descriptor. For example, there are duplicate keys.\n\n            Details of the issues encountered are included in the error message.\n          content:\n            \"*/*\":\n              schema:\n                \"$ref\": \"#/components/schemas/DynamicModulesErrorMessage\"\n            message:\n              examples:\n                response:\n                  value: 'Installation failed. The app com.example.app.key has duplicate\n                    module keys: [module-key]. Please contact the app vendor.'\n        '401':\n          content:\n            message:\n              examples:\n                response:\n                  value: The request is not from a Connect app.\n            \"*/*\":\n              schema:\n                \"$ref\": \"#/components/schemas/DynamicModulesErrorMessage\"\n          description: Returned if the call is not from a Connect app.\n      deprecated: false\n      x-atlassian-connect-scope: NONE\n  \"/api/audit/since\":\n    get:\n      parameters:\n      - required: false\n        name: number\n        in: query\n        description: The number of units for the time period.\n        schema:\n          format: int64\n          default: 3\n          type: integer\n      - name: units\n        required: false\n        in: query\n        schema:\n          default: MONTHS\n          type: string\n          enum:\n          - NANOS\n          - MICROS\n          - MILLIS\n          - SECONDS\n          - MINUTES\n          - HOURS\n          - HALF_DAYS\n          - DAYS\n          - WEEKS\n          - MONTHS\n          - YEARS\n          - DECADES\n          - CENTURIES\n        description: The unit of time that the time period is measured in.\n      - description: |-\n          Filters the results to records that have string property values\n          matching the `searchString`.\n        schema:\n          type: string\n        required: false\n        name: searchString\n        in: query\n      - schema:\n          minimum: 0\n          format: int32\n          type: integer\n          default: 0\n        description: The starting index of the returned records.\n        required: false\n        name: start\n        in: query\n      - description: |-\n          The maximum number of records to return per page.\n          Note, this may be restricted by fixed system limits.\n        schema:\n          minimum: 0\n          format: int32\n          default: 1000\n          type: integer\n        required: false\n        in: query\n        name: limit\n      description: |-\n        Returns records from the audit log, for a time period back from the current\n        date. For example, you can use this method to get the last 3 months of records.\n\n        This contains information about events like space exports, group membership\n        changes, app installations, etc. For more information, see\n        [Audit log](https://confluence.atlassian.com/confcloud/audit-log-802164269.html)\n        in the Confluence administrator's guide.\n\n        **[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\n        'Confluence Administrator' global permission.\n      x-atlassian-connect-scope: INACCESSIBLE\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                \"$ref\": \"#/components/schemas/AuditRecordArray\"\n          description: Returned if the requested records are returned.\n        '403':\n          description: |-\n            Returned if the calling user does not have permission to view the audit\n            log.\n      operationId: com.atlassian.confluence.plugins.restapi.resources.AuditResource.getAuditRecordsForTimePeriod_get\n      tags:\n      - Audit\n      summary: Get audit records for time period\n  \"/api/content/{id}/notification/child-created\":\n    get:\n      security:\n      - oAuthDefinitions:\n        - read:confluence-content.summary\n      x-atlassian-connect-scope: READ\n      responses:\n        '200':\n          description: Returned if the requested watches are returned.\n          content:\n            application/json:\n              schema:\n                \"$ref\": \"#/components/schemas/WatchArray\"\n        '401':\n          description: |-\n            Returned if the authentication credentials are incorrect or missing\n            from the request.\n      parameters:\n      - required: true\n        name: id\n        in: path\n        schema:\n          type: string\n        description: The ID of the content to be queried for its watches.\n      - required: false\n        name: start\n        in: query\n        schema:\n          default: 0\n          type: integer\n          format: int32\n          minimum: 0\n        description: The starting index of the returned watches.\n      - in: query\n        required: false\n        name: limit\n        description: |-\n          The maximum number of watches to return per page.\n          Note, this may be restricted by fixed system limits.\n        schema:\n          default: 200\n          type: integer\n          format: int32\n          minimum: 0\n      description: |-\n        Returns the watches for a page. A user that watches a page will receive\n        receive notifications when the page is updated.\n\n        If you want to manage watches for a page, use the following `user` methods:\n\n        - [Get content watch status for user](#api-user-watch-content-contentId-get)\n        - [Add content watch](#api-user-watch-content-contentId-post)\n        - [Remove content watch](#api-user-watch-content-contentId-delete)\n\n        **[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\n        Permission to access the Confluence site ('Can use' global permission).\n      operationId: com.atlassian.confluence.plugins.restapi.resources.ContentNotificationsResource.getWatchesForPage_get\n      summary: Get watches for page\n      tags:\n      - Content\n  \"/api/content/blueprint/instance/{draftId}\":\n    post:\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                \"$ref\": \"#/components/schemas/Content\"\n          description: Returned if the draft was successfully published.\n        '400':\n          description: |-\n            Returned if a title is not specified or a page with the\n            title already exists.\n        '409':\n          description: Returned if the version is not set to 1.\n      security:\n      - oAuthDefinitions:\n        - write:confluence-content\n      x-atlassian-connect-scope: WRITE\n      operationId: com.atlassian.confluence.plugins.restapi.resources.ContentBlueprintResource.publishLegacyDraft_post\n      summary: Publish legacy draft\n      tags:\n      - Content\n      parameters:\n      - required: true\n        name: draftId\n        in: path\n        description: |-\n          The ID of the draft page that was created from a blueprint.\n          You can find the `draftId` in the Confluence application by\n          opening the draft page and checking the page URL.\n        schema:\n          type: string\n      - in: query\n        required: false\n        name: status\n        description: |-\n          The status of the content to be updated, i.e. the draft. This is set\n          to 'draft' by default, so you shouldn't need to specify it.\n        schema:\n          default: draft\n          type: string\n      - \"$ref\": \"#/components/parameters/contentExpand\"\n      description: |-\n        Publishes a legacy draft of a page created from a blueprint. Legacy drafts\n        will eventually be removed in favor of shared drafts. For now, this method\n        works the same as [Publish shared draft](#api-content-blueprint-instance-draftId-put).\n\n        By default, the following objects are expanded: `body.storage`, `history`, `space`, `version`, `ancestors`.\n\n        **[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\n        Permission to view the draft and 'Add' permission for the space that\n        the content will be created in.\n      requestBody:\n        \"$ref\": \"#/components/requestBodies/ContentBlueprintDraft\"\n    put:\n      x-atlassian-connect-scope: WRITE\n      security:\n      - oAuthDefinitions:\n        - write:confluence-content\n      responses:\n        '200':\n          description: Returned if the draft was successfully published.\n          content:\n            application/json:\n              schema:\n                \"$ref\": \"#/components/schemas/Content\"\n        '400':\n          description: |-\n            Returned if a title is not specified or a page with the\n            title already exists.\n        '409':\n          description: Returned if the version is not set to 1.\n      description: |-\n        Publishes a shared draft of a page created from a blueprint.\n\n        By default, the following objects are expanded: `body.storage`, `history`, `space`, `version`, `ancestors`.\n\n        **[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\n        Permission to view the draft and 'Add' permission for the space that\n        the content will be created in.\n      requestBody:\n        \"$ref\": \"#/components/requestBodies/ContentBlueprintDraft\"\n      parameters:\n      - description: |-\n          The ID of the draft page that was created from a blueprint.\n          You can find the `draftId` in the Confluence application by\n          opening the draft page and checking the page URL.\n        schema:\n          type: string\n        required: true\n        in: path\n        name: draftId\n      - description: |-\n          The status of the content to be updated, i.e. the draft. This is set\n          to 'draft' by default, so you shouldn't need to specify it.\n        schema:\n          type: string\n          default: draft\n        name: status\n        required: false\n        in: query\n      - \"$ref\": \"#/components/parameters/contentExpand\"\n      tags:\n      - Content\n      summary: Publish shared draft\n      operationId: com.atlassian.confluence.plugins.restapi.resources.ContentBlueprintResource.publishSharedDraft_put\n  \"/api/space/{spaceKey}/theme\":\n    delete:\n      responses:\n        '204':\n          description: Returned if the theme was reset for the space.\n        '404':\n          description: Returned if there is no space with the given key.\n      security:\n      - oAuthDefinitions:\n        - write:confluence-space\n      x-atlassian-connect-scope: DELETE\n      operationId: com.atlassian.confluence.plugins.restapi.resources.SpaceThemeResource.resetSpaceTheme_delete\n      summary: Reset space theme\n      tags:\n      - Space\n      parameters:\n      - description: The key of the space to reset the theme for.\n        schema:\n          type: string\n        required: true\n        in: path\n        name: spaceKey\n      description: |-\n        Resets the space theme. This means that the space will inherit the\n        global look and feel settings\n\n        **[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\n        'Admin' permission for the space.\n    put:\n      parameters:\n      - required: true\n        in: path\n        name: spaceKey\n        schema:\n          type: string\n        description: The key of the space to set the theme for.\n      description: |-\n        Sets the theme for a space. Note, if you want to reset the space theme to\n        the default Confluence theme, use the 'Reset space theme' method instead\n        of this method.\n\n        **[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\n        'Admin' permission for the space.\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              \"$ref\": \"#/components/schemas/ThemeUpdate\"\n      operationId: com.atlassian.confluence.plugins.restapi.resources.SpaceThemeResource.setSpaceTheme_put\n      tags:\n      - Space\n      summary: Set space theme\n      security:\n      - oAuthDefinitions:\n        - write:confluence-space\n      x-atlassian-connect-scope: WRITE\n      responses:\n        '200':\n          description: Returned if the theme was set for the space.\n          content:\n            application/json:\n              schema:\n                \"$ref\": \"#/components/schemas/Theme\"\n        '403':\n          description: Returned if the theme key is invalid.\n        '404':\n          description: Returned if there is no space with the given key.\n    get:\n      summary: Get space theme\n      tags:\n      - Space\n      operationId: com.atlassian.confluence.plugins.restapi.resources.SpaceThemeResource.getSpaceTheme_get\n      description: |-\n        Returns the theme selected for a space, if one is set. If no space\n        theme is set, this means that the space is inheriting the global look\n        and feel settings.\n\n        **[Permissions required](https://confluence.atlassian.com/x/_AozKw)**: ‘View’ permission for the space.\n      parameters:\n      - required: true\n        name: spaceKey\n        in: path\n        description: The key of the space to be queried for its theme.\n        schema:\n          type: string\n      responses:\n        '200':\n          description: Returned if the requested theme is returned.\n          content:\n            application/json:\n              schema:\n                \"$ref\": \"#/components/schemas/Theme\"\n        '404':\n          description: |-\n            Returned if any of the following is true:\n\n            - There is no space with the given key.\n            - The space does not have a theme assigned to it.\n      x-atlassian-connect-scope: READ\n      security:\n      - oAuthDefinitions:\n        - read:confluence-space.summary\n  \"/api/group\":\n    get:\n      parameters:\n      - name: start\n        required: false\n        in: query\n        schema:\n          default: 0\n          type: integer\n          minimum: 0\n          format: int32\n        description: The starting index of the returned groups.\n      - schema:\n          format: int32\n          minimum: 0\n          default: 200\n          type: integer\n        description: |-\n          The maximum number of groups to return per page.\n          Note, this may be restricted by fixed system limits.\n        required: false\n        name: limit\n        in: query\n      description: |-\n        Returns all user groups. The returned groups are ordered alphabetically in\n        ascending order by group name.\n\n        **[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\n        Permission to access the Confluence site ('Can use' global permission).\n      x-atlassian-connect-scope: READ\n      responses:\n        '200':\n          description: Returned if the requested groups are returned.\n          content:\n            application/json:\n              schema:\n                \"$ref\": \"#/components/schemas/GroupArrayWithLinks\"\n        '403':\n          description: |-\n            Returned if the calling user does not have permission to view\n            groups.\n      operationId: com.atlassian.confluence.plugins.restapi.resources.GroupResource.getGroups_get\n      tags:\n      - Group\n      summary: Get groups\n  \"/api/content/{id}/child/attachment/{attachmentId}\":\n    put:\n      operationId: com.atlassian.confluence.plugins.restapi.resources.AttachmentResource.updateAttachmentProperties_put\n      tags:\n      - Content\n      summary: Update attachment properties\n      parameters:\n      - schema:\n          type: string\n        description: The ID of the content that the attachment is attached to.\n        name: id\n        required: true\n        in: path\n      - description: The ID of the attachment to update.\n        schema:\n          type: string\n        name: attachmentId\n        required: true\n        in: path\n      description: |-\n        Updates the attachment properties, i.e. the non-binary data of an attachment\n        like the filename, media-type, comment, and parent container.\n\n        **[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\n        Permission to update the content.\n      requestBody:\n        description: The details of the attachment to be updated.\n        content:\n          application/json:\n            schema:\n              \"$ref\": \"#/components/schemas/AttachmentUpdate\"\n        required: true\n      responses:\n        '200':\n          description: Returned if the attachment is updated.\n          content:\n            application/json:\n              schema:\n                \"$ref\": \"#/components/schemas/Content\"\n        '400':\n          description: |-\n            Returned if;\n\n            - The attachment id is invalid.\n            - The attachment version number is invalid.\n        '403':\n          description: |-\n            Returned if;\n\n            - The calling user is not permitted to update or move the attachment.\n            - The attachment is being moved to an invalid content type.\n        '404':\n          description: Returned if no attachment is found for the attachment ID.\n        '409':\n          description: |-\n            Returned if the version of the supplied attachment does not match\n            the version of the attachment stored in the database.\n      security:\n      - oAuthDefinitions:\n        - write:confluence-file\n        - write:confluence-props\n      x-atlassian-connect-scope: WRITE\n  \"/api/settings/lookandfeel/custom\":\n    post:\n      responses:\n        '200':\n          description: Returned if the look and feel settings are updated.\n          content:\n            application/json:\n              schema:\n                \"$ref\": \"#/components/schemas/LookAndFeelUpdated\"\n        '400':\n          description: |-\n            Returned if;\n\n            - The `spaceKey` is invalid\n            - The request body contains invalid data.\n        '403':\n          description: |-\n            Returned if the calling user doesn't have permission to edit the\n            look and feel settings.\n        '404':\n          description: Returned if there is no space with the given `spaceKey`.\n      x-atlassian-connect-scope: WRITE\n      security:\n      - oAuthDefinitions:\n        - manage:confluence-configuration\n      tags:\n      - Settings\n      summary: Update look and feel settings\n      operationId: com.atlassian.confluence.plugins.restapi.resources.LookAndFeelResource.updateLookAndFeelSettings_post\n      requestBody:\n        required: true\n        description: |-\n          The updated settings. All values for the settings must be included,\n          regardless of whether they are being changed.\n\n          One way to create the request body is to copy the settings from the\n          response body of [Get look and feel settings](#api-settings-lookandfeel-get)\n          and modify it as needed.\n        content:\n          application/json:\n            schema:\n              \"$ref\": \"#/components/schemas/LookAndFeel\"\n      description: |-\n        Updates the look and feel settings for the site or for a single space.\n        If custom settings exist, they are updated. If no custom settings exist,\n        then a set of custom settings is created.\n\n        Note, if a theme is selected for a space, the space look and feel settings\n        are provided by the theme and cannot be overridden.\n\n        **[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\n        'Admin' permission for the space.\n      parameters:\n      - schema:\n          type: string\n        description: |-\n          The key of the space for which the look and feel settings will be\n          updated. If this is not set, the global look and feel settings will\n          be updated.\n        name: spaceKey\n        required: false\n        in: query\n    delete:\n      responses:\n        '204':\n          description: Returned if the look and feel settings have been reset.\n        '400':\n          description: Returned if `spaceKey` is invalid.\n        '403':\n          description: |-\n            Returned if the calling user doesn't have permission to reset the\n            look and feel.\n        '404':\n          description: Returned if there is no space with the given `spaceKey`.\n      x-atlassian-connect-scope: DELETE\n      security:\n      - oAuthDefinitions:\n        - manage:confluence-configuration\n      summary: Reset look and feel settings\n      tags:\n      - Settings\n      operationId: com.atlassian.confluence.plugins.restapi.resources.LookAndFeelResource.resetLookAndFeelSettings_delete\n      description: |-\n        Resets the custom look and feel settings for the site or a single space.\n        This changes the values of the custom settings to be the same as the\n        default settings. It does not change which settings (default or custom)\n        are selected. Note, the default space settings are inherited from the\n        current global settings.\n\n        **[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\n        'Admin' permission for the space.\n      parameters:\n      - required: false\n        in: query\n        name: spaceKey\n        schema:\n          type: string\n        description: |-\n          The key of the space for which the look and feel settings will be\n          reset. If this is not set, the global look and feel settings will\n          be reset.\n  \"/api/contentbody/convert/{to}\":\n    post:\n      summary: Convert content body\n      tags:\n      - Contentbody\n      operationId: com.atlassian.confluence.plugins.restapi.resources.ContentBodyResource.convertContentBody_post\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              \"$ref\": \"#/components/schemas/ContentBodyCreate\"\n        description: The content body to convert.\n      description: |-\n        Converts a content body from one format to another format.\n\n        Supported conversions:\n\n        - storage: view, export_view, styled_view, editor\n        - editor: storage\n        - view: none\n        - export_view: none\n        - styled_view: none\n\n        **[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\n        If request specifies 'contentIdContext', 'View' permission for the space, and permission to view the content.\n      parameters:\n      - required: true\n        in: path\n        name: to\n        description: The name of the target format for the content body.\n        schema:\n          type: string\n      - \"$ref\": \"#/components/parameters/contentExpand\"\n      - name: spaceKeyContext\n        required: false\n        in: query\n        description: |-\n          The space key used for resolving embedded content (page includes,\n          files, and links) in the content body. For example, if the source content\n          contains the link `\u003cac:link\u003e\u003cri:page ri:content-title=\"Example page\" /\u003e\u003cac:link\u003e`\n          and the `spaceKeyContext=TEST` parameter is provided, then the link\n          will be converted to a link to the \"Example page\" page in the \"TEST\" space.\n        schema:\n          type: string\n      - name: contentIdContext\n        required: false\n        in: query\n        description: |-\n          The content ID used to find the space for resolving embedded content\n          (page includes, files, and links) in the content body. For example,\n          if the source content contains the link `\u003cac:link\u003e\u003cri:page ri:content-title=\"Example page\" /\u003e\u003cac:link\u003e`\n          and the `contentIdContext=123` parameter is provided, then the link\n          will be converted to a link to the \"Example page\" page in the same space\n          that has the content with ID=123. Note, `spaceKeyContext` will be ignored\n          if this parameter is provided.\n        schema:\n          type: string\n      - description: |-\n          Mode used for rendering embedded content, like attachments.\n\n          - `current` renders the embedded content using the latest version.\n          - `version-at-save` renders the embedded content using the version at\n          the time of save.\n        schema:\n          enum:\n          - current\n          - version-at-save\n          type: string\n          default: current\n        name: embeddedContentRender\n        required: false\n        in: query\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                \"$ref\": \"#/components/schemas/ContentBody\"\n          description: Returned if the content is converted.\n      x-atlassian-connect-scope: READ\n  \"/api/space/{spaceKey}\":\n    get:\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                \"$ref\": \"#/components/schemas/Space\"\n          description: Returned if the requested space is returned.\n        '401':\n          description: |-\n            Returned if the authentication credentials are incorrect or missing\n            from the request.\n        '404':\n          description: |-\n            Returned if any of the following is true:\n\n            - There is no space with the given key.\n            - The calling user does not have permission to view the space.\n      security:\n      - oAuthDefinitions:\n        - read:confluence-space.summary\n      x-atlassian-connect-scope: READ\n      operationId: com.atlassian.confluence.plugins.restapi.resources.SpaceResource.getSpace_get\n      summary: Get space\n      tags:\n      - Space\n      parameters:\n      - in: path\n        required: true\n        name: spaceKey\n        description: The key of the space to be returned.\n        schema:\n          type: string\n      - \"$ref\": \"#/components/parameters/spaceExpand\"\n      description: |-\n        Returns a space. This includes information like the name, description,\n        and permissions, but not the content in the space.\n\n        **[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\n        'View' permission for the space.\n    put:\n      description: |-\n        Updates the name, description, or homepage of a space.\n\n        -   For security reasons, permissions cannot be updated via the API and\n        must be changed via the user interface instead.\n        -   Currently you cannot set space labels when updating a space.\n\n        **[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\n        'Admin' permission for the space.\n      requestBody:\n        required: true\n        description: The updated space.\n        content:\n          application/json:\n            schema:\n              \"$ref\": \"#/components/schemas/SpaceUpdate\"\n      parameters:\n      - required: true\n        name: spaceKey\n        in: path\n        description: The key of the space to update.\n        schema:\n          type: string\n      tags:\n      - Space\n      summary: Update space\n      operationId: com.atlassian.confluence.plugins.restapi.resources.SpaceResource.updateSpace_put\n      x-atlassian-connect-scope: WRITE\n      security:\n      - oAuthDefinitions:\n        - write:confluence-space\n      responses:\n        '200':\n          description: Returned if the space is updated.\n          content:\n            application/json:\n              schema:\n                \"$ref\": \"#/components/schemas/Space\"\n        '401':\n          description: |-\n            Returned if the authentication credentials are incorrect or missing\n            from the request.\n        '404':\n          description: |-\n            Returned if any of the following is true:\n\n            - There is no space with the given key\n            - The calling user does not have permission to update the space.\n    delete:\n      operationId: com.atlassian.confluence.plugins.restapi.resources.SpaceResource.deleteSpace_delete\n      summary: Delete space\n      tags:\n      - Space\n      parameters:\n      - description: The key of the space to delete.\n        schema:\n          type: string\n        required: true\n        name: spaceKey\n        in: path\n      description: |-\n        Deletes a space. Note, the space will be deleted in a long running task.\n        Therefore, the space may not be deleted yet when this method has\n        returned. Clients should poll the status link that is returned in the\n        response until the task completes.\n\n        **[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\n        'Admin' permission for the space.\n      responses:\n        '202':\n          description: Returns a pointer to the status of the space deletion task.\n        '401':\n          description: |-\n            Returned if the authentication credentials are incorrect or missing\n            from the request.\n        '404':\n          description: |-\n            Returned if any of the following is true:\n\n            - There is no space with the given key.\n            - The calling user does not have permission to delete the space.\n      security:\n      - oAuthDefinitions:\n        - write:confluence-space\n      x-atlassian-connect-scope: DELETE\n  \"/api/content/{id}/notification/created\":\n    get:\n      security:\n      - oAuthDefinitions:\n        - read:confluence-content.summary\n      x-atlassian-connect-scope: READ\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                \"$ref\": \"#/components/schemas/WatchArray\"\n          description: Returned if the requested watches are returned.\n        '401':\n          description: |-\n            Returned if the authentication credentials are incorrect or missing\n            from the request.\n      parameters:\n      - required: true\n        name: id\n        in: path\n        schema:\n          type: string\n        description: The ID of the content to be queried for its watches.\n      - in: query\n        required: false\n        name: start\n        schema:\n          format: int32\n          minimum: 0\n          type: integer\n          default: 0\n        description: The starting index of the returned watches.\n      - required: false\n        in: query\n        name: limit\n        schema:\n          format: int32\n          minimum: 0\n          default: 200\n          type: integer\n        description: |-\n          The maximum number of watches to return per page.\n          Note, this may be restricted by fixed system limits.\n      description: |-\n        Returns all space watches for the space that the content is in. A user that\n        watches a space will receive receive notifications when any content in the\n        space is updated.\n\n        If you want to manage watches for a space, use the following `user` methods:\n\n        - [Get space watch status for user](#api-user-watch-space-spaceKey-get)\n        - [Add space watch](#api-user-watch-space-spaceKey-post)\n        - [Remove space watch](#api-user-watch-space-spaceKey-delete)\n\n        **[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\n        Permission to access the Confluence site ('Can use' global permission).\n      operationId: com.atlassian.confluence.plugins.restapi.resources.ContentNotificationsResource.getWatchesForSpace_get\n      tags:\n      - Content\n      summary: Get watches for space\n  \"/api/content/{id}/restriction\":\n    post:\n      security:\n      - oAuthDefinitions:\n        - write:confluence-content\n      x-atlassian-connect-scope: WRITE\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                \"$ref\": \"#/components/schemas/ContentRestrictionArray\"\n          description: Returned if the requested restrictions are added.\n        '404':\n          description: |-\n            Returned if;\n\n            - There is no content with the given ID.\n            - The calling user does not have permission to add restrictions to\n            the content.\n      parameters:\n      - required: true\n        name: id\n        in: path\n        description: The ID of the content to add restrictions to.\n        schema:\n          type: string\n      - description: |-\n          A multi-value parameter indicating which properties of the content\n          restrictions (returned in response) to expand.\n\n          - `restrictions.user` returns the piece of content that the restrictions are\n          applied to. Expanded by default.\n          - `restrictions.group` returns the piece of content that the restrictions are\n          applied to. Expanded by default.\n          - `content` returns the piece of content that the restrictions are\n          applied to.\n        schema:\n          items:\n            type: string\n            enum:\n            - restrictions.user\n            - restrictions.group\n            - content\n          type: array\n        style: form\n        required: false\n        in: query\n        name: expand\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              \"$ref\": \"#/components/schemas/ContentRestrictionUpdateArray\"\n        description: The restrictions to be added to the content.\n      description: |-\n        Adds restrictions to a piece of content. Note, this does not change any\n        existing restrictions on the content.\n\n        **[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\n        Permission to edit the content.\n      operationId: com.atlassian.confluence.plugins.restapi.resources.ContentRestrictionResource.addRestrictions_post\n      summary: Add restrictions\n      tags:\n      - Content\n    put:\n      operationId: com.atlassian.confluence.plugins.restapi.resources.ContentRestrictionResource.updateRestrictions_put\n      summary: Update restrictions\n      tags:\n      - Content\n      parameters:\n      - name: id\n        required: true\n        in: path\n        schema:\n          type: string\n        description: The ID of the content to update restrictions for.\n      - style: form\n        name: expand\n        required: false\n        in: query\n        schema:\n          type: array\n          items:\n            type: string\n            enum:\n            - restrictions.user\n            - restrictions.group\n            - content\n        description: |-\n          A multi-value parameter indicating which properties of the content\n          restrictions (returned in response) to expand.\n\n          - `restrictions.user` returns the piece of content that the restrictions are\n          applied to. Expanded by default.\n          - `restrictions.group` returns the piece of content that the restrictions are\n          applied to. Expanded by default.\n          - `content` returns the piece of content that the restrictions are\n          applied to.\n      requestBody:\n        required: true\n        description: The updated restrictions for the content.\n        content:\n          application/json:\n            schema:\n              \"$ref\": \"#/components/schemas/ContentRestrictionUpdateArray\"\n      description: |-\n        Updates restrictions for a piece of content. This removes the existing\n        restrictions and replaces them with the restrictions in the request.\n\n        **[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\n        Permission to edit the content.\n      responses:\n        '200':\n          description: Returned if the requested restrictions are updated.\n          content:\n            application/json:\n              schema:\n                \"$ref\": \"#/components/schemas/ContentRestrictionArray\"\n        '404':\n          description: |-\n            Returned if;\n\n            - There is no content with the given ID.\n            - The calling user does not have permission to update restrictions\n            for the content.\n      security:\n      - oAuthDefinitions:\n        - write:confluence-content\n      x-atlassian-connect-scope: WRITE\n    delete:\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                \"$ref\": \"#/components/schemas/ContentRestrictionArray\"\n          description: Returned if the restrictions are removed.\n        '400':\n          description: Returned if any of the above validation rules are violated\n        '403':\n          description: |-\n            Returned if the calling user does not have permission to alter the\n            restrictions on the content.\n        '404':\n          description: |-\n            Returned if;\n\n            - There is no content with the given ID.\n            - The calling user does not have permission to view the content.\n      x-atlassian-connect-scope: DELETE\n      security:\n      - oAuthDefinitions:\n        - write:confluence-content\n      summary: Delete restrictions\n      tags:\n      - Content\n      operationId: com.atlassian.confluence.plugins.restapi.resources.ContentRestrictionResource.deleteRestrictions_delete\n      description: |-\n        Removes all restrictions (read and update) on a piece of content.\n\n        **[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\n        Permission to edit the content.\n      parameters:\n      - schema:\n          type: string\n        description: The ID of the content to remove restrictions from.\n        required: true\n        in: path\n        name: id\n      - style: form\n        in: query\n        required: false\n        name: expand\n        description: |-\n          A multi-value parameter indicating which properties of the content\n          restrictions (returned in response) to expand.\n\n          - `restrictions.user` returns the piece of content that the restrictions are\n          applied to. Expanded by default.\n          - `restrictions.group` returns the piece of content that the restrictions are\n          applied to. Expanded by default.\n          - `content` returns the piece of content that the restrictions are\n          applied to.\n        schema:\n          items:\n            enum:\n            - restrictions.user\n            - restrictions.group\n            - content\n            type: string\n          type: array\n    get:\n      x-atlassian-connect-scope: READ\n      security:\n      - oAuthDefinitions:\n        - read:confluence-content.all\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                \"$ref\": \"#/components/schemas/ContentRestrictionArray\"\n          description: Returned if the requested restrictions are returned.\n        '404':\n          description: |-\n            Returned if;\n\n            - There is no content with the given ID.\n            - The calling user does not have permission to view the content.\n      description: |-\n        Returns the restrictions on a piece of content.\n\n        **[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\n        Permission to view the content.\n      parameters:\n      - schema:\n          type: string\n        description: The ID of the content to be queried for its restrictions.\n        required: true\n        name: id\n        in: path\n      - schema:\n          type: array\n          items:\n            type: string\n            enum:\n            - restrictions.user\n            - restrictions.group\n            - content\n        description: |-\n          A multi-value parameter indicating which properties of the content\n          restrictions to expand. By default, the following objects are expanded:\n          `restrictions.user`, `restrictions.group`.\n\n          - `restrictions.user` returns the piece of content that the restrictions are\n          applied to.\n          - `restrictions.group` returns the piece of content that the restrictions are\n          applied to.\n          - `content` returns the piece of content that the restrictions are\n          applied to.\n        in: query\n        required: false\n        name: expand\n        style: form\n      - description: The starting index of the users and groups in the returned restrictions.\n        schema:\n          type: integer\n          default: 0\n          format: int32\n          minimum: 0\n        required: false\n        in: query\n        name: start\n      - required: false\n        name: limit\n        in: query\n        description: |-\n          The maximum number of users and the maximum number of groups, in the\n          returned restrictions, to return per page. Note, this may be restricted\n          by fixed system limits.\n        schema:\n          minimum: 0\n          format: int32\n          type: integer\n          default: 100\n      summary: Get restrictions\n      tags:\n      - Content\n      operationId: com.atlassian.confluence.plugins.restapi.resources.ContentRestrictionResource.getRestrictions_get\n  \"/api/content/{id}/child\":\n    get:\n      x-atlassian-connect-scope: READ\n      security:\n      - oAuthDefinitions:\n        - read:confluence-content.summary\n      responses:\n        '200':\n          description: Returned if the requested content children are returned.\n          content:\n            application/json:\n              schema:\n                \"$ref\": \"#/components/schemas/ContentChildren\"\n        '404':\n          description: |-\n            Returned if;\n\n            - There is no content with the given ID.\n            - The calling user does not have permission to view the content.\n      description: |-\n        Returns a map of the direct children of a piece of content. A piece of content\n        has different types of child content, depending on its type. These are\n        the default parent-child content type relationships:\n\n        - `page`: child content is `page`, `comment`, `attachment`\n        - `blogpost`: child content is `comment`, `attachment`\n        - `attachment`: child content is `comment`\n        - `comment`: child content is `attachment`\n\n        Apps can override these default relationships. Apps can also introduce\n        new content types that create new parent-child content relationships.\n\n        Note, the map will always include all child content types that are valid\n        for the content. However, if the content has no instances of a child content\n        type, the map will contain an empty array for that child content type.\n\n        **[Permissions](https://confluence.atlassian.com/x/_AozKw) required**: 'View' permission for the space,\n        and permission to view the content if it is a page.\n      parameters:\n      - required: true\n        in: path\n        name: id\n        description: The ID of the content to be queried for its children.\n        schema:\n          type: string\n      - schema:\n          items:\n            type: string\n            enum:\n            - attachment\n            - comment\n            - page\n          type: array\n        description: |-\n          A multi-value parameter indicating which properties of the children to expand, where:\n\n          - `attachment` returns all attachments for the content.\n          - `comments` returns all comments for the content.\n          - `page` returns all child pages of the content.\n        in: query\n        required: false\n        name: expand\n        style: form\n      - required: false\n        in: query\n        name: parentVersion\n        schema:\n          type: integer\n          default: 0\n          format: int32\n        description: |-\n          The version of the parent content to retrieve children for.\n          Currently, this only works for the latest version.\n      tags:\n      - Content\n      summary: Get content children\n      operationId: com.atlassian.confluence.plugins.restapi.resources.ChildContentResource.getContentChildren_get\n  \"/api/longtask/{id}\":\n    get:\n      x-atlassian-connect-scope: READ\n      security:\n      - oAuthDefinitions:\n        - read:confluence-space.summary\n      responses:\n        '200':\n          description: Returned if the requested task is returned.\n          content:\n            application/json:\n              schema:\n                \"$ref\": \"#/components/schemas/LongTaskStatusWithLinks\"\n        '401':\n          description: Returned if the calling user is not logged in to Confluence.\n        '404':\n          description: |-\n            Returned if;\n\n            - There is no task with the given ID.\n            - The calling user does not have permission to view the task.\n      description: |-\n        Returns information about an active long-running task (e.g. space export),\n        such as how long it has been running and the percentage of the task that\n        has completed.\n\n        **[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\n        Permission to access the Confluence site ('Can use' global permission).\n      parameters:\n      - required: true\n        in: path\n        name: id\n        schema:\n          type: string\n        description: The ID of the task.\n      summary: Get long-running task\n      tags:\n      - Longtask\n      operationId: com.atlassian.confluence.plugins.restapi.resources.LongTaskResource.getTask_get\n  \"/api/search/user\":\n    get:\n      parameters:\n      - description: |-\n          The CQL query to be used for the search. See\n          [Advanced Searching using CQL](https://developer.atlassian.com/cloud/confluence/advanced-searching-using-cql/)\n          for instructions on how to build a CQL query.\n\n          Example queries:\n                    cql=type=user will return all users\n                    cql=user=“1234” will return user with accountId “1234”\n                    You can also use IN, NOT IN, != operators\n                    cql=user IN (“12”, “34\") will return users with accountids “12” and “34”\n                    cql=user.fullname~jo will return users with nickname/full name starting with “jo”\n                    cql=user.accountid=“123” will return user with accountId “123”\n        schema:\n          type: string\n        required: true\n        in: query\n        name: cql\n      - in: query\n        required: false\n        name: start\n        schema:\n          type: integer\n          default: 0\n          format: int32\n          minimum: 0\n        description: The starting index of the returned users.\n      - schema:\n          default: 25\n          type: integer\n          minimum: 0\n          format: int32\n        description: |-\n          The maximum number of user objects to return per page.\n          Note, this may be restricted by fixed system limits.\n        required: false\n        name: limit\n        in: query\n      description: |-\n        Searches for users using user-specific queries from the\n        [Confluence Query Language (CQL)](https://developer.atlassian.com/cloud/confluence/advanced-searching-using-cql/).\n\n        Note that some user fields may be set to null depending on the user's privacy settings.\n        These are: email, profilePicture, and displayName.\n      x-atlassian-connect-scope: READ\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                \"$ref\": \"#/components/schemas/SearchPageResponseSearchResult\"\n          description: Returned if the requested results are returned.\n        '400':\n          description: Returned if the CQL query cannot be parsed.\n        '403':\n          description: |-\n            Returned if the calling user does not have permission to access\n            Confluence.\n      operationId: com.atlassian.confluence.plugins.restapi.resources.SearchResource.search_user_get\n      tags:\n      - Search\n      summary: Search users\n  \"/api/content/{id}/child/{type}\":\n    get:\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                \"$ref\": \"#/components/schemas/ContentArray\"\n          description: Returned if the requested content is returned.\n        '404':\n          description: |-\n            Returned if;\n\n            - There is no content with the given ID.\n            - The calling user does not have permission to view the content.\n      x-atlassian-connect-scope: READ\n      security:\n      - oAuthDefinitions:\n        - read:confluence-content.summary\n      summary: Get content children by type\n      tags:\n      - Content\n      operationId: com.atlassian.confluence.plugins.restapi.resources.ChildContentResource.getContentChildrenByType_get\n      description: |-\n        Returns all children of a given type, for a piece of content.\n        A piece of content has different types of child content, depending on its type:\n\n        - `page`: child content is `page`, `comment`, `attachment`\n        - `blogpost`: child content is `comment`, `attachment`\n        - `attachment`: child content is `comment`\n        - `comment`: child content is `attachment`\n\n        Custom content types that are provided by apps can also be returned.\n\n        Note, this method only returns direct children. To return children at all\n        levels, use [Get descendants by type](#api-content-id-descendant-type-get).\n\n        **[Permissions](https://confluence.atlassian.com/x/_AozKw) required**: 'View' permission for the space,\n        and permission to view the content if it is a page.\n      parameters:\n      - required: true\n        name: id\n        in: path\n        description: The ID of the content to be queried for its children.\n        schema:\n          type: string\n      - required: true\n        in: path\n        name: type\n        schema:\n          type: string\n          enum:\n          - page\n          - comment\n          - attachment\n        description: The type of children to return.\n      - \"$ref\": \"#/components/parameters/contentExpand\"\n      - description: |-\n          The version of the parent content to retrieve children for.\n          Currently, this only works for the latest version.\n        schema:\n          format: int32\n          minimum: 0\n          default: 0\n          type: integer\n        in: query\n        required: false\n        name: parentVersion\n      - name: start\n        in: query\n        description: The starting index of the returned content.\n        schema:\n          format: int32\n          type: integer\n      - name: limit\n        in: query\n        description: |-\n          The maximum number of content to return per page. Note,\n          this may be restricted by fixed system limits.\n        schema:\n          default: 25\n          type: integer\n          minimum: 0\n          format: int32\n  \"/api/user/current\":\n    get:\n      responses:\n        '200':\n          description: Returned if the current user is returned.\n          content:\n            application/json:\n              schema:\n                \"$ref\": \"#/components/schemas/User\"\n        '403':\n          description: |-\n            Returned if the calling user does not have permission to use\n            Confluence.\n      operationId: com.atlassian.confluence.plugins.restapi.resources.UserResource.getCurrentUser_get\n      summary: Get current user\n      tags:\n      - User\n      parameters:\n      - name: expand\n        required: false\n        in: query\n        style: form\n        schema:\n          type: array\n          items:\n            enum:\n            - operations\n            - details.personal\n            - details.business\n            - personalSpace\n            type: string\n        description: |-\n          A multi-value parameter indicating which properties of the user to\n          expand.\n\n            - `operations` returns the operations that the user is allowed to do.\n            - `details.personal` returns the 'Personal' details in the user's profile, like the 'Email' and 'Phone'.\n            Note that these fields have been deprecated due to privacy changes. See the\n            [migration guide](https://developer.atlassian.com/cloud/confluence/deprecation-notice-user-privacy-api-migration-guide/)\n            for details.\n            - `details.business` returns the 'Company' details in the user's profile, like the 'Position' and 'Department'.\n            Note that these fields have been deprecated due to privacy changes. See the\n            [migration guide](https://developer.atlassian.com/cloud/confluence/deprecation-notice-user-privacy-api-migration-guide/)\n            for details.\n            - personalSpace returns the user's personal space, if it exists.\n      description: |-\n        Returns the currently logged-in user. This includes information about\n        the user, like the display name, userKey, account ID, profile picture,\n        and more.\n\n        **[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\n        Permission to access the Confluence site ('Can use' global permission).\n      x-atlassian-connect-scope: READ\n  \"/api/content/{id}/child/attachment\":\n    post:\n      operationId: com.atlassian.confluence.plugins.restapi.resources.AttachmentResource.createAttachments_post\n      summary: Create attachment\n      tags:\n      - Content\n      parameters:\n      - description: The ID of the content to add the attachment to.\n        schema:\n          type: string\n        required: true\n        in: path\n        name: id\n      - required: false\n        in: query\n        name: status\n        schema:\n          enum:\n          - current\n          - draft\n          type: string\n          default: current\n        description: The status of the content that the attachment is being added\n          to.\n      description: |-\n        Adds an attachment to a piece of content. This method only adds a new\n        attachment. If you want to update an existing attachment, use\n        [Create or update attachments](#api-content-id-child-attachment-put).\n\n        Note, you must set a `X-Atlassian-Token: nocheck` header on the request\n        for this method, otherwise it will be blocked. This protects against XSRF\n        attacks, which is necessary as this method accepts multipart/form-data.\n\n        The media type 'multipart/form-data' is defined in [RFC 1867](https://www.ietf.org/rfc/rfc1867.txt).\n        Most client libraries have classes that make it easier to implement\n        multipart posts, like the [MultiPartEntity](http://hc.apache.org/httpcomponents-client-ga/httpmime/apidocs/org/apache/http/entity/mime/MultipartEntity.html)\n        Java class provided by Apache HTTP Components.\n\n        Example: This curl command attaches a file ('example.txt') to a container\n        (id='123') with a comment and `minorEdits`=true.\n\n        ``` bash\n        curl -D- \\\n          -u admin:admin \\\n          -X POST \\\n          -H \"X-Atlassian-Token: nocheck\" \\\n          -F \"file=@example.txt\" \\\n          -F \"minorEdit=true\" \\\n          -F \"comment=Example attachment comment\" \\\n          http://myhost/rest/api/content/123/child/attachment\n        ```\n        **[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\n        Permission to update the content.\n      requestBody:\n        \"$ref\": \"#/components/requestBodies/com.atlassian.confluence.plugins.restapi.resources.AttachmentResource.createAttachments_post\"\n      responses:\n        '200':\n          description: Returned if the attachments were added to the content.\n          content:\n            application/json:\n              schema:\n                \"$ref\": \"#/components/schemas/ContentArray\"\n        '400':\n          description: Returned if the content already has an attachment with the\n            same filename.\n        '403':\n          description: |-\n            Returned if;\n\n            - Attachments are disabled in Confluence.\n            - The calling user does not have permission to add attachments to the\n            content.\n        '404':\n          description: |-\n            Returned if;\n\n            - The requested content is not found.\n            - The user does not have permission to view it\n            - The attachment exceeds the maximum configured attachment size.\n      security:\n      - oAuthDefinitions:\n        - write:confluence-file\n      x-atlassian-connect-scope: WRITE\n    get:\n      parameters:\n      - schema:\n          type: string\n        description: The ID of the content to be queried for its attachments.\n        required: true\n        in: path\n        name: id\n      - \"$ref\": \"#/components/parameters/contentExpand\"\n      - required: false\n        in: query\n        name: start\n        schema:\n          minimum: 0\n          format: int32\n          default: 0\n          type: integer\n        description: The starting index of the returned attachments.\n      - in: query\n        required: false\n        name: limit\n        schema:\n          default: 25\n          type: integer\n          minimum: 0\n          format: int32\n        description: |-\n          The maximum number of attachments to return per page.\n          Note, this may be restricted by fixed system limits.\n      - schema:\n          type: string\n        description: Filter the results to attachments that match the filename.\n        name: filename\n        in: query\n      - name: mediaType\n        in: query\n        schema:\n          type: string\n        description: Filter the results to attachments that match the media type.\n      description: |-\n        Returns the attachments for a piece of content.\n\n        By default, the following objects are expanded: `metadata`.\n\n        **[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\n        Permission to view the content. If the content is a blog post, 'View' permission\n        for the space is required.\n      operationId: com.atlassian.confluence.plugins.restapi.resources.AttachmentResource.getAttachments_get\n      summary: Get attachments\n      tags:\n      - Content\n      security:\n      - oAuthDefinitions:\n        - read:confluence-content.summary\n      x-atlassian-connect-scope: READ\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                \"$ref\": \"#/components/schemas/ContentArray\"\n          description: Returned if the requested attachments are returned.\n        '404':\n          description: |-\n            Returned if;\n\n            - There is no parent content with the given ID.\n            - The calling user does not have permission to view the parent content.\n    put:\n      parameters:\n      - description: The ID of the content to add the attachment to.\n        schema:\n          type: string\n        required: true\n        name: id\n        in: path\n      - required: false\n        in: query\n        name: status\n        schema:\n          type: string\n          default: current\n          enum:\n          - current\n          - draft\n        description: |-\n          The status of the content that the attachment is being added to.\n          This should always be set to 'current'.\n      requestBody:\n        \"$ref\": \"#/components/requestBodies/com.atlassian.confluence.plugins.restapi.resources.AttachmentResource.createAttachments_post\"\n      description: |-\n        Adds an attachment to a piece of content. If the attachment already exists\n        for the content, then the attachment is updated (i.e. a new version of the\n        attachment is created).\n\n        Note, you must set a `X-Atlassian-Token: nocheck` header on the request\n        for this method, otherwise it will be blocked. This protects against XSRF\n        attacks, which is necessary as this method accepts multipart/form-data.\n\n        The media type 'multipart/form-data' is defined in [RFC 1867](https://www.ietf.org/rfc/rfc1867.txt).\n        Most client libraries have classes that make it easier to implement\n        multipart posts, like the [MultiPartEntity](http://hc.apache.org/httpcomponents-client-ga/httpmime/apidocs/org/apache/http/entity/mime/MultipartEntity.html)\n        Java class provided by Apache HTTP Components.\n\n        Example: This curl command attaches a file ('example.txt') to a piece of\n        content (id='123') with a comment and `minorEdits`=true. If the 'example.txt'\n        file already exists, it will update it with a new version of the attachment.\n\n        ``` bash\n        curl -D- \\\n          -u admin:admin \\\n          -X PUT \\\n          -H \"X-Atlassian-Token: nocheck\" \\\n          -F \"file=@example.txt\" \\\n          -F \"minorEdit=true\" \\\n          -F \"comment=Example attachment comment\" \\\n          http://myhost/rest/api/content/123/child/attachment\n        ```\n        **[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\n        Permission to update the content.\n      operationId: com.atlassian.confluence.plugins.restapi.resources.AttachmentResource.createOrUpdateAttachments_put\n      tags:\n      - Content\n      summary: Create or update attachment\n      security:\n      - oAuthDefinitions:\n        - write:confluence-file\n      x-atlassian-connect-scope: WRITE\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                \"$ref\": \"#/components/schemas/ContentArray\"\n          description: Returned if the attachments were added to the content.\n        '403':\n          description: |-\n            Returned if;\n\n            - Attachments are disabled.\n            - The calling user does not have permission to add attachments to the\n            content.\n        '404':\n          description: |-\n            Returned if;\n\n            - The requested content is not found.\n            - The user does not have permission to view it.\n            - The attachment exceeds the maximum configured attachment size.\n  \"/api/user/email/bulk\":\n    get:\n      x-atlassian-connect-scope: ACCESS_EMAIL_ADDRESSES\n      description: |-\n        Returns user email addresses for a set of accountIds. This API is only available to apps approved by\n        Atlassian, according to these [guidelines](https://community.developer.atlassian.com/t/guidelines-for-requesting-access-to-email-address/27603).\n\n        Any accounts which are not available will not be included in the result.\n\n        **[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\n        Permission to access the Confluence site ('Can use' global permission).\n      parameters:\n      - required: true\n        name: accountId\n        in: query\n        description: The account IDs of the users.\n        schema:\n          type: array\n          items:\n            type: string\n      tags:\n      - User\n      summary: Bulk fetch of users' email addresses\n      operationId: com.atlassian.confluence.plugins.restapi.resources.UserEmailResource.getPrivacyUnsafeUserEmailBulk_get\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                \"$ref\": \"#/components/schemas/AccountIdEmailRecordArray\"\n          description: Returned if the request is successful.\n        '400':\n          description: Returned if the calling app is not approved to use this API.\n        '401':\n          description: |-\n            Returned if the authentication credentials are incorrect or missing\n            from the request.\n        '501':\n          description: Indicates that the API is not currently enabled.\n  \"/api/template\":\n    put:\n      requestBody:\n        description: The updated content template.\n        content:\n          application/json:\n            schema:\n              \"$ref\": \"#/components/schemas/ContentTemplateUpdate\"\n        required: true\n      description: |-\n        Updates a content template. Note, blueprint templates cannot be updated\n        via the REST API.\n\n        **[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\n        'Admin' permission for the space to create a space template or 'Confluence Administrator'\n        global permission to create a global template.\n      tags:\n      - Template\n      summary: Update content template\n      operationId: com.atlassian.confluence.plugins.restapi.resources.TemplateResource.updateContentTemplate_put\n      x-atlassian-connect-scope: WRITE\n      security:\n      - oAuthDefinitions:\n        - write:confluence-content\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                \"$ref\": \"#/components/schemas/ContentTemplate\"\n          description: Returned if the template is updated.\n        '403':\n          description: |-\n            Returned if the calling user does not have permission to update the\n            template.\n    post:\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                \"$ref\": \"#/components/schemas/ContentTemplate\"\n          description: Returned if the template is created.\n        '403':\n          description: |-\n            Returned if the calling user does not have permission to create the\n            template.\n      x-atlassian-connect-scope: WRITE\n      security:\n      - oAuthDefinitions:\n        - write:confluence-content\n      summary: Create content template\n      tags:\n      - Template\n      operationId: com.atlassian.confluence.plugins.restapi.resources.TemplateResource.createContentTemplate_post\n      description: |-\n        Creates a new content template. Note, blueprint templates cannot be created via the REST API.\n\n        **[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\n        'Admin' permission for the space to create a space template or 'Confluence Administrator'\n        global permission to create a global template.\n      requestBody:\n        content:\n          application/json:\n            schema:\n              \"$ref\": \"#/components/schemas/ContentTemplateCreate\"\n        description: |-\n          The content template to be created.\n          The content body must be in 'storage' format.\n        required: true\n  \"/api/space/{spaceKey}/settings\":\n    put:\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                \"$ref\": \"#/components/schemas/SpaceSettings\"\n          description: Returned if space settings are updated.\n        '401':\n          description: |-\n            Returned if the authentication credentials are incorrect or missing\n            from the request.\n        '404':\n          description: |-\n            Returned if;\n\n            - There is no space with the given key.\n            - The calling user does not have permission to update the space.\n      security:\n      - oAuthDefinitions:\n        - write:confluence-space\n      x-atlassian-connect-scope: WRITE\n      operationId: com.atlassian.confluence.plugins.restapi.resources.SpaceResource.updateSpaceSettings_put\n      summary: Update space settings\n      tags:\n      - Space\n      parameters:\n      - schema:\n          type: string\n        description: The key of the space whose settings will be updated.\n        required: true\n        in: path\n        name: spaceKey\n      description: |-\n        Updates the settings for a space. Currently only the\n        `routeOverrideEnabled` setting can be updated.\n\n        **[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\n        'Admin' permission for the space.\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              \"$ref\": \"#/components/schemas/SpaceSettingsUpdate\"\n        description: The space settings to update.\n    get:\n      parameters:\n      - required: true\n        name: spaceKey\n        in: path\n        schema:\n          type: string\n        description: The key of the space to be queried for its settings.\n      description: |-\n        Returns the settings of a space. Currently only the\n        `routeOverrideEnabled` setting can be returned.\n\n        **[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\n        'View' permission for the space.\n      operationId: com.atlassian.confluence.plugins.restapi.resources.SpaceResource.getSpaceSettings_get\n      tags:\n      - Space\n      summary: Get space settings\n      security:\n      - oAuthDefinitions:\n        - read:confluence-space.summary\n      x-atlassian-connect-scope: READ\n      responses:\n        '200':\n          description: Returned if the space settings are returned.\n          content:\n            application/json:\n              schema:\n                \"$ref\": \"#/components/schemas/SpaceSettings\"\n        '401':\n          description: |-\n            Returned if the authentication credentials are incorrect or missing\n            from the request.\n        '404':\n          description: |-\n            Returned if;\n\n            - There is no space with the given key.\n            - The calling user does not have permission to view the space.\n  \"/api/user/bulk/migration\":\n    get:\n      parameters:\n      - required: false\n        name: key\n        in: query\n        description: |-\n          The key of a user. To specify multiple users, pass multiple key parameters separated by ampersands.\n          For example, key=mia\u0026key=alana. Required if username isn't provided. Cannot be provided if username is present.\n        schema:\n          type: array\n          items:\n            type: string\n      - description: |-\n          The username of a user. To specify multiple users, pass multiple username parameters separated by ampersands.\n          For example, username=mia\u0026username=alana. Required if key isn't provided. Cannot be provided if key is present.\n        schema:\n          items:\n            type: string\n          type: array\n        required: false\n        in: query\n        name: username\n      - name: start\n        required: false\n        in: query\n        schema:\n          format: int32\n          minimum: 0\n          type: integer\n          default: 0\n        description: The index of the first item to return in a page of results (page\n          offset).\n      - in: query\n        required: false\n        name: limit\n        schema:\n          minimum: 0\n          format: int32\n          default: 200\n          type: integer\n        description: |-\n          The maximum number of results to return per page.\n          Note, this may be restricted by fixed system limits.\n      x-atlassian-connect-scope: READ\n      description: |-\n        Returns the accountIds for the users specified in the key or username parameters. Note that multiple key and username parameters can be specified.\n\n        **[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\n        'Confluence Administrator' global permission if specifying a user, otherwise\n        permission to access the Confluence site ('Can use' global permission).\n      operationId: com.atlassian.confluence.plugins.restapi.resources.UserResource.getBulkUserMigration\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                \"$ref\": \"#/components/schemas/MigratedUserArray\"\n          description: Returned if the request is successful.\n        '400':\n          description: Returned if no `username` or 'key' is specified.\n        '403':\n          description: |-\n            Returned if;\n\n            - The calling user does not have permission to view users.\n            - A schema has not been defined for this response code.\n      summary: Get accountIds for users\n      tags:\n      - User\n  \"/api/audit/export\":\n    get:\n      x-atlassian-connect-scope: INACCESSIBLE\n      description: |-\n        Exports audit records as a CSV file or ZIP file.\n\n        **[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\n        'Confluence Administrator' global permission.\n      parameters:\n      - description: |-\n          Filters the exported results to the records on or after the `startDate`.\n          The `startDate` must be specified as a [timestamp](https://www.unixtimestamp.com/).\n        schema:\n          type: string\n        in: query\n        required: false\n        name: startDate\n      - name: endDate\n        required: false\n        in: query\n        schema:\n          type: string\n        description: |-\n          Filters the exported results to the records on or before the `endDate`.\n          The `endDate` must be specified as a [timestamp](https://www.unixtimestamp.com/).\n      - name: searchString\n        required: false\n        in: query\n        schema:\n          type: string\n        description: |-\n          Filters the exported results to records that have string property values\n          matching the `searchString`.\n      - required: false\n        name: format\n        in: query\n        description: The format of the export file for the audit records.\n        schema:\n          default: csv\n          type: string\n          enum:\n          - csv\n          - zip\n      summary: Export audit records\n      tags:\n      - Audit\n      operationId: com.atlassian.confluence.plugins.restapi.resources.AuditResource.exportAuditRecords_get\n      responses:\n        '200':\n          description: Returned if the requested export of the audit records is returned.\n          content:\n            application/zip:\n              schema:\n                format: binary\n                type: string\n            text/csv:\n              schema:\n                format: binary\n                type: string\n        '403':\n          description: |-\n            Returned if the calling user does not have permission to view the audit\n            log.\n  \"/api/content/{id}/copy\":\n    post:\n      tags:\n      - Content\n      summary: Copy single page\n      operationId: com.atlassian.confluence.plugins.restapi.resources.ContentResource.copyPage_post\n      requestBody:\n        required: true\n        description: Request object from json post body\n        content:\n          application/json:\n            schema:\n              \"$ref\": \"#/components/schemas/CopyPageRequest\"\n      description: |-\n        Copies a single page and its associated properties, permissions, attachments, and custom contents.\n         The `id` path parameter refers to the content ID of the page to copy. The target of the page to be copied\n         is defined using the `destination` in the request body and can be one of the following types.\n\n          - `space`: page will be copied to the specified space as a root page on the space\n          - `parent_page`: page will be copied as a child of the specified parent page\n          - `existing_page`: page will be copied and replace the specified page\n\n        By default, the following objects are expanded: `space`, `history`, `version`.\n\n        **[Permissions](https://confluence.atlassian.com/x/_AozKw) required**: 'Add' permission for the space that the content will be copied in and permission to update the content if copying to an `existing_page`.\n      parameters:\n      - required: true\n        name: id\n        in: path\n        schema:\n          type: string\n      - \"$ref\": \"#/components/parameters/contentExpand\"\n      responses:\n        '200':\n          content:\n            application/json;charset=UTF-8:\n              schema:\n                \"$ref\": \"#/components/schemas/Content\"\n          description: Returned if the content is copied.\n        '400':\n          description: |-\n            Returned if;\n\n            - destination or any of its fields are not specified.\n            - destination.type is invalid.\n        '401':\n          description: |-\n            Returned if the authentication credentials are incorrect or missing\n            from the request.\n        '403':\n          description: Returned if the user does not have permission to create content\n            at destination.\n        '404':\n          description: |-\n            Returned if;\n\n            - the original page doesn't exist.\n            - the destination page doesn’t exist.\n            - the destination space doesn’t exist.\n      x-atlassian-connect-scope: WRITE\n      security:\n      - oAuthDefinitions:\n        - write:confluence-content\n  \"/api/space/_private\":\n    post:\n      requestBody:\n        required: true\n        description: The space to be created.\n        content:\n          application/json:\n            schema:\n              \"$ref\": \"#/components/schemas/SpacePrivateCreate\"\n      description: |-\n        Creates a new space that is only visible to the creator. This method is\n        the same as the [Create space](#api-space-post) method with permissions\n        set to the current user only. Note, currently you cannot set space\n        labels when creating a space.\n\n        **[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\n        'Create Space(s)' global permission.\n      operationId: com.atlassian.confluence.plugins.restapi.resources.SpaceResource.createPrivateSpace_post\n      summary: Create private space\n      tags:\n      - Space\n      security:\n      - oAuthDefinitions:\n        - write:confluence-space\n      x-atlassian-connect-scope: WRITE\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                \"$ref\": \"#/components/schemas/Space\"\n          description: Returned if the space is created.\n        '400':\n          description: |-\n            Returned if any of the following is true:\n\n            - The request is invalid.\n            - The space already exists.\n        '401':\n          description: |-\n            Returned if the authentication credentials are incorrect or missing\n            from the request.\n        '403':\n          description: Returned if the user does not have permission to create a space.\n  \"/api/content/{id}/history/{version}/macro/id/{macroId}\":\n    get:\n      operationId: com.atlassian.confluence.plugins.restapi.resources.ContentResource.getMacroBodyByMacroId_get\n      summary: Get macro body by macro ID\n      tags:\n      - Content\n      parameters:\n      - required: true\n        in: path\n        name: id\n        schema:\n          type: string\n        description: The ID for the content that contains the macro.\n      - required: true\n        name: version\n        in: path\n        schema:\n          type: integer\n          format: int32\n        description: The version of the content that contains the macro.\n      - description: |-\n          The ID of the macro. This is usually passed by the app that the\n          macro is in. Otherwise, find the macro ID by querying the desired\n          content and version, then expanding the body in storage format.\n          For example, '/content/196611/version/7?expand=content.body.storage'.\n        schema:\n          type: string\n        name: macroId\n        required: true\n        in: path\n      description: |-\n        Returns the body of a macro in storage format, for the given macro ID.\n        This includes information like the name of the macro, the body of the macro,\n        and any macro parameters. This method is mainly used by Cloud apps.\n\n        About the macro ID: When a macro is created in a new version of content,\n        Confluence will generate a random ID for it, unless an ID is specified\n        (by an app). The macro ID will look similar to this: '50884bd9-0cb8-41d5-98be-f80943c14f96'.\n        The ID is then persisted as new versions of content are created, and is\n        only modified by Confluence if there are conflicting IDs.\n\n        Note, to preserve backwards compatibility this resource will also match on\n        the hash of the macro body, even if a macro ID is found. This check will\n        eventually become redundant, as macro IDs are generated for pages and\n        transparently propagate out to all instances.\n\n        **[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\n        Permission to view the content that the macro is in.\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                \"$ref\": \"#/components/schemas/MacroInstance\"\n          description: Returned if the requested macro body is returned.\n        '401':\n          description: |-\n            Returned if the authentication credentials are incorrect or missing\n            from the request.\n        '404':\n          description: |-\n            Returned if;\n\n            - There is no content with the given ID.\n            - The calling user does not have permission to view the content.\n            - The macro does not exist in the specified version.\n            - There is no macro matching the given macro ID or hash.\n      security:\n      - oAuthDefinitions:\n        - read:confluence-content.all\n      x-atlassian-connect-scope: READ\n  \"/api/content/{id}/child/attachment/{attachmentId}/data\":\n    post:\n      operationId: com.atlassian.confluence.plugins.restapi.resources.AttachmentResource.updateAttachmentData_post\n      tags:\n      - Content\n      summary: Update attachment data\n      parameters:\n      - schema:\n          type: string\n        description: The ID of the content that the attachment is attached to.\n        in: path\n        required: true\n        name: id\n      - schema:\n          type: string\n        description: The ID of the attachment to update.\n        name: attachmentId\n        required: true\n        in: path\n      description: |-\n        Updates the binary data of an attachment, given the attachment ID, and\n        optionally the comment and the minor edit field.\n\n        This method is essentially the same as [Create or update attachments](#api-content-id-child-attachment-put),\n        except that it matches the attachment ID rather than the name.\n\n        Note, you must set a `X-Atlassian-Token: nocheck` header on the request\n        for this method, otherwise it will be blocked. This protects against XSRF\n        attacks, which is necessary as this method accepts multipart/form-data.\n\n        The media type 'multipart/form-data' is defined in [RFC 1867](https://www.ietf.org/rfc/rfc1867.txt).\n        Most client libraries have classes that make it easier to implement\n        multipart posts, like the [MultiPartEntity](http://hc.apache.org/httpcomponents-client-ga/httpmime/apidocs/org/apache/http/entity/mime/MultipartEntity.html)\n        Java class provided by Apache HTTP Components.\n\n        Example: This curl command updates an attachment (id='att456') that is attached\n        to a piece of content (id='123') with a comment and `minorEdits`=true.\n\n        ``` bash\n        curl -D- \\\n          -u admin:admin \\\n          -X POST \\\n          -H \"X-Atlassian-Token: nocheck\" \\\n          -F \"file=@example.txt\" \\\n          -F \"minorEdit=true\" \\\n          -F \"comment=Example attachment comment\" \\\n          http://myhost/rest/api/content/123/child/attachment/att456/data\n        ```\n        **[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\n        Permission to update the content.\n      requestBody:\n        \"$ref\": \"#/components/requestBodies/com.atlassian.confluence.plugins.restapi.resources.AttachmentResource.createAttachments_post\"\n      responses:\n        '200':\n          description: Returned if the attachment is updated.\n          content:\n            application/json:\n              schema:\n                \"$ref\": \"#/components/schemas/Content\"\n        '400':\n          description: Returned if the attachment id is invalid.\n        '404':\n          description: Returned if no attachment is found for the attachment ID.\n      security:\n      - oAuthDefinitions:\n        - write:confluence-file\n      x-atlassian-connect-scope: WRITE\n  \"/api/space\":\n    get:\n      operationId: com.atlassian.confluence.plugins.restapi.resources.SpaceResource.getSpaces_get\n      summary: Get spaces\n      tags:\n      - Space\n      parameters:\n      - explode: true\n        schema:\n          type: array\n          items:\n            type: string\n        description: |-\n          The key of the space to be returned. To return multiple spaces,\n          specify this parameter multiple times with different values.\n        name: spaceKey\n        required: false\n        in: query\n      - description: |-\n          The id of the space to be returned. To return multiple spaces,\n          specify this parameter multiple times with different values.\n        schema:\n          type: array\n          items:\n            format: int64\n            type: integer\n        explode: true\n        required: false\n        name: spaceId\n        in: query\n      - required: false\n        in: query\n        name: type\n        schema:\n          type: string\n          enum:\n          - global\n          - personal\n        description: Filter the results to spaces based on their type.\n      - name: status\n        required: false\n        in: query\n        description: Filter the results to spaces based on their status.\n        schema:\n          enum:\n          - current\n          - archived\n          type: string\n      - name: label\n        required: false\n        in: query\n        schema:\n          items:\n            type: string\n          type: array\n        description: Filter the results to spaces based on their label.\n        explode: true\n      - required: false\n        in: query\n        name: favourite\n        description: |-\n          Filter the results to the favourite spaces of the user specified by\n          `favouriteUserKey`. Note, 'favourite' spaces are also\n          known as 'saved for later' spaces.\n        schema:\n          type: boolean\n      - description: |-\n          The userKey of the user, whose favourite spaces are used to filter\n          the results when using the `favourite` parameter.\n\n          Leave blank for the current user. Use [Get user](#api-user-get) to\n          get the userKey for a user.\n        schema:\n          type: string\n        required: false\n        name: favouriteUserKey\n        in: query\n      - \"$ref\": \"#/components/parameters/spaceExpand\"\n      - name: start\n        required: false\n        in: query\n        schema:\n          format: int32\n          minimum: 0\n          type: integer\n          default: 0\n        description: The starting index of the returned spaces.\n      - description: |-\n          The maximum number of spaces to return per page. Note, this may be\n          restricted by fixed system limits.\n        schema:\n          type: integer\n          default: 25\n          format: int32\n          minimum: 0\n        required: false\n        name: limit\n        in: query\n      description: |-\n        Returns all spaces. The returned spaces are ordered alphabetically in\n        ascending order by space key.\n\n        **[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\n        Permission to access the Confluence site ('Can use' global permission).\n        Note, the returned list will only contain spaces that the current user\n        has permission to view.\n      responses:\n        '200':\n          description: Returned if the requested spaces are returned.\n          content:\n            application/json:\n              schema:\n                \"$ref\": \"#/components/schemas/SpaceArray\"\n        '401':\n          description: |-\n            Returned if the authentication credentials are incorrect or missing\n            from the request.\n      security:\n      - oAuthDefinitions:\n        - read:confluence-space.summary\n      x-atlassian-connect-scope: READ\n    post:\n      x-atlassian-connect-scope: WRITE\n      security:\n      - oAuthDefinitions:\n        - write:confluence-space\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                \"$ref\": \"#/components/schemas/Space\"\n          description: Returned if the space is created.\n        '400':\n          description: |-\n            Returned if any of the following is true:\n\n            - The request is invalid.\n            - The space already exists.\n        '401':\n          description: |-\n            Returned if the authentication credentials are incorrect or missing\n            from the request.\n        '403':\n          description: Returned if the callig user does not have permission to create\n            a space.\n      requestBody:\n        content:\n          application/json:\n            schema:\n              \"$ref\": \"#/components/schemas/SpaceCreate\"\n        description: The space to be created.\n        required: true\n      description: |-\n        Creates a new space. Note, currently you cannot set space labels when\n        creating a space.\n\n        **[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\n        'Create Space(s)' global permission.\n      tags:\n      - Space\n      summary: Create space\n      operationId: com.atlassian.confluence.plugins.restapi.resources.SpaceResource.createSpace_post\n  \"/api/user/memberof\":\n    get:\n      description: |-\n        Returns the groups that a user is a member of.\n\n        **[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\n        Permission to access the Confluence site ('Can use' global permission).\n      x-atlassian-connect-scope: READ\n      parameters:\n      - schema:\n          type: string\n        description: |-\n          This parameter is no longer available and will be removed from the documentation soon.\n          Use `accountId` instead.\n          See the [deprecation notice](/cloud/confluence/deprecation-notice-user-privacy-api-migration-guide/) for details.\n        required: false\n        name: key\n        in: query\n      - schema:\n          type: string\n        description: |-\n          This parameter is no longer available and will be removed from the documentation soon.\n          Use `accountId` instead.\n          See the [deprecation notice](/cloud/confluence/deprecation-notice-user-privacy-api-migration-guide/) for details.\n        required: false\n        in: query\n        name: username\n      - description: |-\n          The account ID of the user, which uniquely identifies the user across all Atlassian products.\n          For example, `384093:32b4d9w0-f6a5-3535-11a3-9c8c88d10192`.\n        schema:\n          type: string\n        in: query\n        required: true\n        name: accountId\n      - required: false\n        name: start\n        in: query\n        schema:\n          type: integer\n          default: 0\n          minimum: 0\n          format: int32\n        description: The starting index of the returned groups.\n      - schema:\n          format: int32\n          minimum: 0\n          default: 200\n          type: integer\n        description: |-\n          The maximum number of groups to return per page.\n          Note, this may be restricted by fixed system limits.\n        name: limit\n        required: false\n        in: query\n      summary: Get group memberships for user\n      tags:\n      - User\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                \"$ref\": \"#/components/schemas/GroupArray\"\n          description: Returned if the requested groups are returned.\n        '403':\n          description: |-\n            Returned if the calling user does not have permission to use\n            Confluence.\n      operationId: com.atlassian.confluence.plugins.restapi.resources.UserResource.getGroupMembershipsForUser_get\n  \"/api/inlinetasks/search\":\n    get:\n      responses:\n        '200':\n          description: Returned if the query fetches zero or more results.\n          content:\n            application/json:\n              schema:\n                \"$ref\": \"#/components/schemas/TaskPageResponse\"\n        '403':\n          description: |-\n            Returned if the calling user does not have permission to view\n            any content.\n      x-atlassian-connect-scope: READ\n      security:\n      - oAuthDefinitions:\n        - read:confluence-content.all\n      summary: Get inline tasks based on search parameters\n      tags:\n      - InlineTasks\n      operationId: com.atlassian.confluence.plugins.restapi.resources.TaskSearchResource.searchTasks_get\n      description: |-\n        Returns inline tasks based on the search query.\n\n        **[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\n        Permission to access the Confluence site ('Can use' global permission). Only tasks\n        in contents that the user has permission to view are returned.\n      parameters:\n      - schema:\n          format: int32\n          default: 0\n          type: integer\n        description: The starting offset for the results.\n        required: false\n        name: start\n        in: query\n      - description: The number of results to be returned.\n        schema:\n          format: int32\n          type: integer\n          default: 20\n        required: false\n        name: limit\n        in: query\n      - description: The space key of a space. Multiple space keys can be specified.\n        schema:\n          default:\n          type: string\n        in: query\n        required: false\n        name: spaceKey\n      - required: false\n        in: query\n        name: pageId\n        description: The page id of a page. Multiple page ids can be specified.\n        schema:\n          default:\n          type: string\n      - required: false\n        name: assignee\n        in: query\n        description: Account ID of a user to whom a task is assigned. Multiple users\n          can be specified.\n        schema:\n          type: string\n          default:\n      - required: false\n        name: creator\n        in: query\n        description: Account ID of a user to who created a task. Multiple users can\n          be specified.\n        schema:\n          type: string\n          default:\n      - description: Account ID of a user who completed a task. Multiple users can\n          be specified.\n        schema:\n          default:\n          type: string\n        in: query\n        required: false\n        name: completedUser\n      - schema:\n          type: integer\n          default:\n          format: int64\n        description: Start of date range based on due dates (inclusive).\n        in: query\n        required: false\n        name: duedateFrom\n      - description: End of date range based on due dates (inclusive).\n        schema:\n          format: int64\n          default:\n          type: integer\n        required: false\n        name: duedateTo\n        in: query\n      - schema:\n          format: int64\n          default:\n          type: integer\n        description: Start of date range based on create dates (inclusive).\n        name: createdateFrom\n        required: false\n        in: query\n      - required: false\n        name: createdateTo\n        in: query\n        schema:\n          format: int64\n          type: integer\n          default:\n        description: End of date range based on create dates (inclusive).\n      - description: Start of date range based on complete dates (inclusive).\n        schema:\n          format: int64\n          type: integer\n          default:\n        in: query\n        required: false\n        name: completedateFrom\n      - schema:\n          format: int64\n          type: integer\n          default:\n        description: End of date range based on complete dates (inclusive).\n        in: query\n        required: false\n        name: completedateTo\n      - required: false\n        name: status\n        in: query\n        schema:\n          enum:\n          - complete\n          - incomplete\n          default:\n          type: string\n        description: The status of the task. (checked/unchecked)\n  \"/api/space/{spaceKey}/property/{key}\":\n    post:\n      responses:\n        '200':\n          description: Returned if the space property is created.\n          content:\n            application/json:\n              schema:\n                \"$ref\": \"#/components/schemas/SpaceProperty\"\n        '400':\n          description: |-\n            Returned if any of the following is true:\n\n            - The space already has a value with the given key.\n            - No property value was provided.\n        '403':\n          description: |-\n            Returned if the user does not have the 'Admin' permission for the\n            space.\n        '413':\n          description: Returned if the value for the property is too long.\n      x-atlassian-connect-scope: WRITE\n      security:\n      - oAuthDefinitions:\n        - write:confluence-props\n      tags:\n      - Space\n      summary: Create space property for key\n      operationId: com.atlassian.confluence.plugins.restapi.resources.SpacePropertyResource.createSpacePropertyForKey_post\n      description: |-\n        Creates a new space property. This is the same as `POST\n        /api/space/{spaceKey}/property` but the key for the property is passed as a\n        path parameter, rather than in the request body.\n\n        **[Permissions required](https://confluence.atlassian.com/x/_AozKw)**:\n        ‘Admin’ permission for the space.\n      requestBody:\n        content:\n          application/json:\n            schema:\n              \"$ref\": \"#/components/schemas/SpacePropertyCreateNoKey\"\n        description: The space property to be created.\n        required: true\n      parameters:\n      - description: The key of the space that the property will be created in.\n        schema:\n          type: string\n        required: true\n        name: spaceKey\n        in: path\n      - required: true\n        in: path\n        name: key\n        schema:\n          type: string\n        description: The key of the property to be created.\n    get:\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                \"$ref\": \"#/components/schemas/SpaceProperty\"\n          description: Returned if the requested space property is returned.\n        '404':\n          description: |-\n            Returned if any of the following is true:\n\n            - There is no space with the given key.\n            - There is no property with the given key.\n            - The calling user does not have permission to view the space.\n      x-atlassian-connect-scope: READ\n      security:\n      - oAuthDefinitions:\n        - read:confluence-props\n      tags:\n      - Space\n      summary: Get space property\n      operationId: com.atlassian.confluence.plugins.restapi.resources.SpacePropertyResource.getSpaceProperty_get\n      description: |-\n        Returns a space property.\n\n        **[Permissions required](https://confluence.atlassian.com/x/_AozKw)**: ‘View’ permission for the space.\n      parameters:\n      - in: path\n        required: true\n        name: spaceKey\n        schema:\n          type: string\n        description: The key of the space that the property is in.\n      - required: true\n        name: key\n        in: path\n        schema:\n          type: string\n        description: The key of the space property.\n      - schema:\n          type: array\n          items:\n            enum:\n            - version\n            - space\n            type: string\n        description: |-\n          A multi-value parameter indicating which properties of the space\n          property to expand. By default, the `version` object is expanded.\n\n          - `version` returns information about the version of the content.\n          - `space` returns the space that the properties are in.\n        in: query\n        required: false\n        name: expand\n        style: form\n    put:\n      x-atlassian-connect-scope: WRITE\n      security:\n      - oAuthDefinitions:\n        - write:confluence-props\n      responses:\n        '200':\n          description: Returned if the space property is updated.\n          content:\n            application/json:\n              schema:\n                \"$ref\": \"#/components/schemas/SpaceProperty\"\n        '400':\n          description: |-\n            Returned if any of the following is true:\n\n            - The given property has a different spaceKey to the one in the path.\n            - The property has a different key to the one in the path.\n        '403':\n          description: |-\n            Returned if the user does not have permission to edit the space with\n            the given spaceKey\n        '404':\n          description: |-\n            Returned if any of the following is true:\n\n            - There is no space with the given spaceKey\n            - There is no property with the given key.\n            - The calling user does not have permission to view the space.\n        '409':\n          description: |-\n            Returned if the given version is does not match the expected target\n            version of the updated property\n        '413':\n          description: Returned if the value of the property is too long.\n      description: |-\n        Updates a space property. Note, you cannot update the key of a space\n        property, only the value.\n\n        **[Permissions required](https://confluence.atlassian.com/x/_AozKw)**:\n        ‘Admin’ permission for the space.\n      requestBody:\n        content:\n          application/json:\n            schema:\n              \"$ref\": \"#/components/schemas/SpacePropertyUpdate\"\n        description: The space property being updated.\n        required: true\n      parameters:\n      - name: spaceKey\n        required: true\n        in: path\n        description: The key of the space that the property is in.\n        schema:\n          type: string\n      - in: path\n        required: true\n        name: key\n        description: The key of the property to be updated.\n        schema:\n          type: string\n      tags:\n      - Space\n      summary: Update space property\n      operationId: com.atlassian.confluence.plugins.restapi.resources.SpacePropertyResource.updateSpaceProperty_put\n    delete:\n      description: |-\n        Deletes a space property.\n\n        **[Permissions required](https://confluence.atlassian.com/x/_AozKw)**:\n        ‘Admin’ permission for the space.\n      parameters:\n      - description: The key of the space that the property is in.\n        schema:\n          type: string\n        required: true\n        name: spaceKey\n        in: path\n      - required: true\n        name: key\n        in: path\n        description: The key of the property to be deleted.\n        schema:\n          type: string\n      tags:\n      - Space\n      summary: Delete space property\n      operationId: com.atlassian.confluence.plugins.restapi.resources.SpacePropertyResource.deleteSpaceProperty_delete\n      x-atlassian-connect-scope: DELETE\n      security:\n      - oAuthDefinitions:\n        - write:confluence-props\n      responses:\n        '204':\n          description: Returned if the space property is deleted.\n        '404':\n          description: |-\n            Returned if any of the following is true:\n\n            - There is no space with the given spaceKey\n            - There is no property with the given key.\n            - The calling user does not have permission to view the space.\n  \"/api/experimental/cql/pdcleaner\":\n    post:\n      x-atlassian-connect-scope: INACCESSIBLE\n      description: |-\n        Converts one or more CQL queries with user identifiers (username or user key)\n        to equivalent CQL queries with account IDs.\n\n        You may wish to use this operation if your system stores CQL queries and you\n        want to make them GDPR-compliant. For more information about GDPR-related changes,\n        see the [migration guide](https://developer.atlassian.com/cloud/confluence/deprecation-notice-user-privacy-api-migration-guide/).\n\n        **[Permissions](https://confluence.atlassian.com/x/_AozKw) required**: None\n      requestBody:\n        description: The CQL queries to convert.\n        content:\n          application/json:\n            schema:\n              \"$ref\": \"#/components/schemas/CQLPersonalDataMigrationRequest\"\n        required: true\n      operationId: com.atlassian.confluence.plugins.restapi.resources.ExperimentalCQLResource.cqlPDCleaner_post\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                \"$ref\": \"#/components/schemas/CQLPersonalDataConvertedQueries\"\n              examples:\n                response:\n                  value: '{ \"queryStrings\": [ \"type = page and creator != ''847586:5371623a-12b4-1a11-ed01-a53542f02dd1''\n                    and space = DEV\"] }'\n          description: |-\n            Returned if the request is successful. The CQL queries are returned\n            in the same order that they were passed. Note that if the user in a\n            CQL query cannot be found, a `200` code is still returned but the username\n            or key is converted to an empty string.\n        '400':\n          description: |-\n            Returned if:\n\n            * At least one of the queries cannot be converted. For example, the\n            CQL has invalid operators or invalid keywords.\n            * More than 100 CQL queries are included in the request.\n      summary: Convert user identifiers to account IDs in CQL queries\n      tags:\n      - Experimental\n  \"/api/space/{spaceKey}/permission\":\n    post:\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                \"$ref\": \"#/components/schemas/SpacePermissionV2\"\n          description: Returned if the requested content is returned.\n        '400':\n          description: |-\n            Used for various errors. Such as:\n            - Permission already exists for the given user or group.\n            - 'read space' permission doesn't exist for the given user or group.\n            - No group found with the given groupName\n        '401':\n          description: |-\n            Returned if the authentication credentials are incorrect or missing\n            from the request.\n        '403':\n          description: Returned if the user isn't authorized.\n        '404':\n          description: |-\n            Returned if any of the following is true:\n            - There is no space with the given key.\n            - The calling user does not have permission to view the space.\n      x-atlassian-connect-scope: INACCESSIBLE\n      tags:\n      - Experimental\n      summary: Add new permission to space\n      operationId: com.atlassian.confluence.plugins.restapi.resources.SpacePermissionResource.addPermission\n      x-experimental: true\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              \"$ref\": \"#/components/schemas/SpacePermissionV2\"\n        description: The permission to be created.\n      description: |-\n        Adds new permission to space.\n\n        **[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\n        'Admin' permission for the space.\n      parameters:\n      - schema:\n          type: string\n        description: The key of the space to be queried for its content.\n        in: path\n        required: true\n        name: spaceKey\n  \"/api/content/{id}/version\":\n    post:\n      parameters:\n      - required: true\n        name: id\n        in: path\n        description: The ID of the content for which the history will be restored.\n        schema:\n          type: string\n      - schema:\n          type: array\n          items:\n            type: string\n            enum:\n            - collaborators\n            - content\n        description: |-\n          A multi-value parameter indicating which properties of the returned\n          content to expand.\n\n          - `collaborators` returns the users that collaborated on the version.\n          - `content` returns the content for the version.\n        style: form\n        name: expand\n        in: query\n      description: |-\n        Restores a historical version to be the latest version. That is, a new version\n        is created with the content of the historical version.\n\n        **[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\n        Permission to update the content.\n      requestBody:\n        description: The content version to be restored.\n        content:\n          application/json:\n            schema:\n              \"$ref\": \"#/components/schemas/VersionRestore\"\n        required: true\n      operationId: com.atlassian.confluence.plugins.restapi.resources.ContentVersionResource.restoreContentVersion_post\n      summary: Restore content version\n      tags:\n      - Content\n      security:\n      - oAuthDefinitions:\n        - write:confluence-content\n      x-atlassian-connect-scope: WRITE\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                \"$ref\": \"#/components/schemas/Version\"\n          description: Returned if the version is restored.\n        '400':\n          description: |-\n            Returned if;\n\n            - There is no content with the given ID.\n            - There is no version with the given version number.\n            - The version number is the current version.\n        '403':\n          description: |-\n            Returned if the calling user doesn't have permission to edit the\n            content.\n    get:\n      parameters:\n      - description: The ID of the content to be queried for its versions.\n        schema:\n          type: string\n        in: path\n        required: true\n        name: id\n      - description: The starting index of the returned versions.\n        schema:\n          default: 0\n          type: integer\n          minimum: 0\n          format: int32\n        required: false\n        name: start\n        in: query\n      - description: |-\n          The maximum number of versions to return per page.\n          Note, this may be restricted by fixed system limits.\n        schema:\n          type: integer\n          default: 200\n          minimum: 0\n          format: int32\n        required: false\n        name: limit\n        in: query\n      - schema:\n          items:\n            type: string\n            enum:\n            - collaborators\n            - content\n          type: array\n        description: |-\n          A multi-value parameter indicating which properties of the content to expand.\n\n          - `collaborators` returns the users that collaborated on the version.\n          - `content` returns the content for the version.\n        required: false\n        in: query\n        name: expand\n        style: form\n      description: |-\n        Returns the versions for a piece of content in descending order.\n\n        **[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\n        Permission to view the content. If the content is a blog post, 'View' permission\n        for the space is required.\n      operationId: com.atlassian.confluence.plugins.restapi.resources.ContentVersionResource.getContentVersions_get\n      tags:\n      - Content\n      summary: Get content versions\n      security:\n      - oAuthDefinitions:\n        - read:confluence-content.summary\n      x-atlassian-connect-scope: READ\n      responses:\n        '200':\n          description: Returned if the requested versions are returned.\n          content:\n            application/json:\n              schema:\n                \"$ref\": \"#/components/schemas/VersionArray\"\n        '403':\n          description: |-\n            Returned if the calling user does not have permission to view the\n            content.\n  \"/api/content\":\n    post:\n      summary: Create content\n      tags:\n      - Content\n      operationId: com.atlassian.confluence.plugins.restapi.resources.ContentResource.createContent_post\n      description: |-\n        Creates a new piece of content or publishes an existing draft.\n\n        To publish a draft, add the `id` and `status` properties to the body of the request.\n        Set the `id` to the ID of the draft and set the `status` to 'current'. When the\n        request is sent, a new piece of content will be created and the metadata from the\n        draft will be transferred into it.\n\n        By default, the following objects are expanded: `space`, `history`, `version`.\n\n        **[Permissions](https://confluence.atlassian.com/x/_AozKw) required**: 'Add' permission for the\n        space that the content will be created in, and permission to view the draft if publishing a draft.\n      requestBody:\n        description: |-\n          The new content to be created. Set the `representation` to the name of the body\n          format type. For example, if you use `storage` for the body format, set\n          '`representation`=`storage`'. See\n          [Confluence storage format](https://confluence.atlassian.com/x/AJkiLw).\n\n          If you are not sure how to generate the different formats, you can create a page in the\n          Confluence application, retrieve the content using [Get content](#api-content-get),\n          and expand the desired content format, e.g. `expand=body.storage`.\n        content:\n          application/json:\n            schema:\n              \"$ref\": \"#/components/schemas/ContentCreate\"\n        required: true\n      parameters:\n      - name: status\n        required: false\n        in: query\n        description: Filter the returned content by status.\n        schema:\n          type: string\n          default: current\n      - \"$ref\": \"#/components/parameters/contentExpand\"\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                \"$ref\": \"#/components/schemas/Content\"\n          description: Returned if the content is created.\n        '401':\n          description: |-\n            Returned if the authentication credentials are incorrect or missing\n            from the request.\n        '403':\n          description: |-\n            Returned if;\n\n            - The space that the content is being created in does not exist.\n            - If the requesting user does not have permission to create content in it.\n      x-atlassian-connect-scope: WRITE\n      security:\n      - oAuthDefinitions:\n        - write:confluence-content\n    get:\n      description: |-\n        Returns all content in a Confluence instance.\n\n        By default, the following objects are expanded: `space`, `history`, `version`.\n\n        **[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\n        Permission to access the Confluence site ('Can use' global permission).\n        Only content that the user has permission to view will be returned.\n      parameters:\n      - required: false\n        in: query\n        name: type\n        description: The type of content to return.\n        schema:\n          enum:\n          - page\n          - blogpost\n          default: page\n          type: string\n      - description: The key of the space to be queried for its content.\n        schema:\n          type: string\n        in: query\n        required: false\n        name: spaceKey\n      - name: title\n        required: false\n        in: query\n        description: The title of the page to be returned. Required for \u003ccode\u003epage\u003c/code\u003e\n          type.\n        schema:\n          type: string\n      - description: |-\n          Filter the results to a set of content based on their status. If set to `any`,\n          content with any status is returned. Note, the `historical` status is currently\n          not supported.\n        schema:\n          type: array\n          default: current\n          items:\n            type: string\n          enum:\n          - current\n          - trashed\n          - draft\n          - any\n        explode: true\n        in: query\n        required: false\n        name: status\n      - schema:\n          type: string\n        description: |-\n          The posting date of the blog post to be returned. Required for\n          \u003ccode\u003eblogpost\u003c/code\u003e type. Format: \u003ccode\u003eyyyy-mm-dd\u003c/code\u003e.\n        required: false\n        in: query\n        name: postingDay\n      - \"$ref\": \"#/components/parameters/contentExpand\"\n      - schema:\n          enum:\n          - viewed\n          type: string\n        description: |-\n          If set to `viewed`, the request will trigger a 'viewed' event for the content.\n          When this event is triggered, the page/blogpost will appear on the 'Recently visited'\n          tab of the user's Confluence dashboard.\n        required: false\n        in: query\n        name: trigger\n      - required: false\n        name: orderby\n        in: query\n        description: |-\n          Orders the content by a particular field. Specify the field and sort direction for\n          this parameter, as follows: 'fieldpath asc/desc'. For example, 'history.createdDate desc'.\n        schema:\n          type: string\n      - description: The starting index of the returned content.\n        schema:\n          default: 0\n          type: integer\n          minimum: 0\n          format: int32\n        required: false\n        in: query\n        name: start\n      - required: false\n        name: limit\n        in: query\n        description: |-\n          The maximum number of content objects to return per page.\n          Note, this may be restricted by fixed system limits.\n        schema:\n          default: 25\n          type: integer\n          minimum: 0\n          format: int32\n      tags:\n      - Content\n      summary: Get content\n      operationId: com.atlassian.confluence.plugins.restapi.resources.ContentResource.getContent_get\n      x-atlassian-connect-scope: READ\n      security:\n      - oAuthDefinitions:\n        - read:confluence-content.summary\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                \"$ref\": \"#/components/schemas/ContentArray\"\n          description: Returned if the requested list of content is returned.\n        '401':\n          description: |-\n            Returned if the authentication credentials are incorrect or missing\n            from the request.\n        '404':\n          description: |-\n            Returned if the calling user does not have permission to view the\n            requested content.\n  \"/api/relation/{relationName}/from/{sourceType}/{sourceKey}/to/{targetType}/{targetKey}\":\n    put:\n      summary: Create relationship\n      tags:\n      - Relation\n      operationId: com.atlassian.confluence.plugins.restapi.resources.RelationResource.createRelationship_put\n      description: |-\n        Creates a relationship between two entities (user, space, content). The\n        'favourite' relationship is supported by default, but you can use this method\n        to create any type of relationship between two entities.\n\n        For example, the following method creates a 'sibling' relationship between\n        two pieces of content:\n        `GET https://your-domain.atlassian.net/wiki/rest/api/relation/sibling/from/content/123/to/content/456`\n\n        **[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\n        Permission to access the Confluence site ('Can use' global permission).\n      parameters:\n      - name: relationName\n        required: true\n        in: path\n        schema:\n          type: string\n        description: |-\n          The name of the relationship. This method supports the 'favourite'\n          (i.e. 'save for later') relationship. You can also specify any other\n          value for this parameter to create a custom relationship type.\n      - description: |-\n          The source entity type of the relationship. This must be 'user', if\n          the `relationName` is 'favourite'.\n        schema:\n          type: string\n          enum:\n          - user\n          - content\n          - space\n        required: true\n        name: sourceType\n        in: path\n      - schema:\n          type: string\n        description: |-\n          - The identifier for the source entity:\n\n          - If `sourceType` is 'user', then specify either 'current' (logged-in\n            user) or the user key.\n          - If `sourceType` is 'content', then specify the content ID.\n          - If `sourceType` is 'space', then specify the space key.\n        in: path\n        required: true\n        name: sourceKey\n      - name: targetType\n        required: true\n        in: path\n        description: |-\n          The target entity type of the relationship. This must be 'space' or\n          'content', if the `relationName` is 'favourite'.\n        schema:\n          enum:\n          - user\n          - content\n          - space\n          type: string\n      - name: targetKey\n        required: true\n        in: path\n        description: |-\n          - The identifier for the target entity:\n\n          - If `sourceType` is 'user', then specify either 'current' (logged-in\n            user) or the user key.\n          - If `sourceType` is 'content', then specify the content ID.\n          - If `sourceType` is 'space', then specify the space key.\n        schema:\n          type: string\n      - schema:\n          type: string\n        description: |-\n          The status of the source. This parameter is only used when the\n          `sourceType` is 'content'.\n        required: false\n        name: sourceStatus\n        in: query\n      - name: targetStatus\n        required: false\n        in: query\n        schema:\n          type: string\n        description: |-\n          The status of the target. This parameter is only used when the\n          `targetType` is 'content'.\n      - description: |-\n          The version of the source. This parameter is only used when the\n          `sourceType` is 'content' and the `sourceStatus` is 'historical'.\n        schema:\n          format: int32\n          type: integer\n        required: false\n        name: sourceVersion\n        in: query\n      - description: |-\n          The version of the target. This parameter is only used when the\n          `targetType` is 'content' and the `targetStatus` is 'historical'.\n        schema:\n          format: int32\n          type: integer\n        required: false\n        name: targetVersion\n        in: query\n      responses:\n        '200':\n          description: Returned if the relationship is created.\n          content:\n            application/json:\n              schema:\n                \"$ref\": \"#/components/schemas/Relation\"\n        '403':\n          description: Returned if the user does not have permission to use Confluence.\n        '404':\n          description: Returned if the user, space or content could not be found.\n      x-atlassian-connect-scope: WRITE\n      security:\n      - oAuthDefinitions:\n        - write:confluence-content\n    delete:\n      security:\n      - oAuthDefinitions:\n        - write:confluence-content\n      x-atlassian-connect-scope: DELETE\n      responses:\n        '204':\n          description: |-\n            Returned if the relationship is deleted or the relationship didn't\n            exist.\n        '403':\n          description: |-\n            Returned if the user does not have permission to delete the\n            relationship.\n        '404':\n          description: Returned if the user, space or content could not be found.\n      parameters:\n      - required: true\n        name: relationName\n        in: path\n        schema:\n          type: string\n        description: The name of the relationship.\n      - schema:\n          type: string\n          enum:\n          - user\n          - content\n          - space\n        description: |-\n          The source entity type of the relationship. This must be 'user', if\n          the `relationName` is 'favourite'.\n        in: path\n        required: true\n        name: sourceType\n      - schema:\n          type: string\n        description: |-\n          - The identifier for the source entity:\n\n          - If `sourceType` is 'user', then specify either 'current' (logged-in\n            user) or the user key.\n          - If `sourceType` is 'content', then specify the content ID.\n          - If `sourceType` is 'space', then specify the space key.\n        required: true\n        in: path\n        name: sourceKey\n      - name: targetType\n        required: true\n        in: path\n        description: |-\n          The target entity type of the relationship. This must be 'space' or\n          'content', if the `relationName` is 'favourite'.\n        schema:\n          type: string\n          enum:\n          - user\n          - content\n          - space\n      - name: targetKey\n        required: true\n        in: path\n        schema:\n          type: string\n        description: |-\n          - The identifier for the target entity:\n\n          - If `sourceType` is 'user', then specify either 'current' (logged-in\n            user) or the user key.\n          - If `sourceType` is 'content', then specify the content ID.\n          - If `sourceType` is 'space', then specify the space key.\n      - description: |-\n          The status of the source. This parameter is only used when the\n          `sourceType` is 'content'.\n        schema:\n          type: string\n        required: false\n        in: query\n        name: sourceStatus\n      - schema:\n          type: string\n        description: |-\n          The status of the target. This parameter is only used when the\n          `targetType` is 'content'.\n        in: query\n        required: false\n        name: targetStatus\n      - description: |-\n          The version of the source. This parameter is only used when the\n          `sourceType` is 'content' and the `sourceStatus` is 'historical'.\n        schema:\n          type: integer\n          format: int32\n        required: false\n        name: sourceVersion\n        in: query\n      - name: targetVersion\n        required: false\n        in: query\n        description: |-\n          The version of the target. This parameter is only used when the\n          `targetType` is 'content' and the `targetStatus` is 'historical'.\n        schema:\n          format: int32\n          type: integer\n      description: |-\n        Deletes a relationship between two entities (user, space, content).\n\n        **[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\n        Permission to access the Confluence site ('Can use' global permission).\n        For favourite relationships, the current user can only delete their own\n        favourite relationships. A space administrator can delete favourite\n        relationships for any user.\n      operationId: com.atlassian.confluence.plugins.restapi.resources.RelationResource.delete_delete\n      tags:\n      - Relation\n      summary: Delete\n    get:\n      description: |-\n        Find whether a particular type of relationship exists from a source\n        entity to a target entity. Note, relationships are one way.\n\n        For example, you can use this method to find whether the current user has\n        selected a particular page as a favorite (i.e. 'save for later'):\n        `GET https://your-domain.atlassian.net/wiki/rest/api/relation/favourite/from/user/current/to/content/123`\n\n        **[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\n        Permission to view both the target entity and source entity.\n      parameters:\n      - name: relationName\n        required: true\n        in: path\n        description: |-\n          The name of the relationship. This method supports the 'favourite'\n          (i.e. 'save for later') relationship as well as any other relationship\n          types created via [Create relationship](#api-relation-relationName-from-sourceType-sourceKey-to-targetType-targetKey-put).\n        schema:\n          type: string\n      - schema:\n          enum:\n          - user\n          - content\n          - space\n          type: string\n        description: |-\n          The source entity type of the relationship. This must be 'user', if\n          the `relationName` is 'favourite'.\n        required: true\n        name: sourceType\n        in: path\n      - in: path\n        required: true\n        name: sourceKey\n        schema:\n          type: string\n        description: |-\n          - The identifier for the source entity:\n\n          - If `sourceType` is `user`, then specify either `current` (logged-in user), the user key of the user, or\n          the account ID of the user. Note that the user key has been deprecated in favor of the account ID for this parameter. See the\n          [migration guide](https://developer.atlassian.com/cloud/confluence/deprecation-notice-user-privacy-api-migration-guide/)\n          for details.\n          - If `sourceType` is 'content', then specify the content ID.\n          - If `sourceType` is 'space', then specify the space key.\n      - schema:\n          enum:\n          - user\n          - content\n          - space\n          type: string\n        description: |-\n          The target entity type of the relationship. This must be 'space' or\n          'content', if the `relationName` is 'favourite'.\n        in: path\n        required: true\n        name: targetType\n      - name: targetKey\n        required: true\n        in: path\n        schema:\n          type: string\n        description: |-\n          The identifier for the target entity:\n\n          - If `targetType` is `user`, then specify either `current` (logged-in user), the user key of the user, or\n          the account ID of the user. Note that the user key has been deprecated in favor of the account ID for this parameter. See the\n          [migration guide](https://developer.atlassian.com/cloud/confluence/deprecation-notice-user-privacy-api-migration-guide/)\n          for details.\n          - If `targetType` is 'content', then specify the content ID.\n          - If `targetType` is 'space', then specify the space key.\n      - description: |-\n          The status of the source. This parameter is only used when the\n          `sourceType` is 'content'.\n        schema:\n          type: string\n        required: false\n        in: query\n        name: sourceStatus\n      - schema:\n          type: string\n        description: |-\n          The status of the target. This parameter is only used when the\n          `targetType` is 'content'.\n        required: false\n        name: targetStatus\n        in: query\n      - name: sourceVersion\n        required: false\n        in: query\n        description: |-\n          The version of the source. This parameter is only used when the\n          `sourceType` is 'content' and the `sourceStatus` is 'historical'.\n        schema:\n          format: int32\n          type: integer\n      - description: |-\n          The version of the target. This parameter is only used when the\n          `targetType` is 'content' and the `targetStatus` is 'historical'.\n        schema:\n          format: int32\n          type: integer\n        required: false\n        name: targetVersion\n        in: query\n      - schema:\n          type: array\n          items:\n            enum:\n            - relationData\n            - source\n            - target\n            type: string\n        description: |-\n          A multi-value parameter indicating which properties of the response\n          object to expand.\n\n          - `relationData` returns information about the relationship, such as\n          who created it and when it was created.\n          - `source` returns the source entity.\n          - `target` returns the target entity.\n        required: false\n        name: expand\n        in: query\n        style: form\n      tags:\n      - Relation\n      summary: Find relationship from source to target\n      operationId: com.atlassian.confluence.plugins.restapi.resources.RelationResource.GetRelationship_get\n      x-atlassian-connect-scope: READ\n      security:\n      - oAuthDefinitions:\n        - read:confluence-content.summary\n      responses:\n        '200':\n          description: Returned if the relationship exists.\n          content:\n            application/json:\n              schema:\n                \"$ref\": \"#/components/schemas/Relation\"\n        '403':\n          description: |-\n            Returned if the user does not have permission to view the\n            relationship.\n        '404':\n          description: Returned if the relationship does not exist.\n  \"/api/content/{id}/history\":\n    get:\n      security:\n      - oAuthDefinitions:\n        - read:confluence-content.summary\n      x-atlassian-connect-scope: READ\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                \"$ref\": \"#/components/schemas/ContentHistory\"\n          description: Returned if the requested content history is returned.\n        '401':\n          description: |-\n            Returned if the authentication credentials are incorrect or missing\n            from the request.\n        '404':\n          description: |-\n            Returned if;\n\n            - There is no content with the given ID.\n            - The calling user does not have permission to view the content.\n      parameters:\n      - required: true\n        in: path\n        name: id\n        schema:\n          type: string\n        description: The ID of the content to be queried for its history.\n      - style: form\n        in: query\n        required: false\n        name: expand\n        schema:\n          type: array\n          items:\n            type: string\n            enum:\n            - lastUpdated\n            - previousVersion\n            - contributors\n            - nextVersion\n        description: |-\n          A multi-value parameter indicating which properties of the content history to expand.\n\n          - `lastUpdated` returns information about the most recent update of the content,\n          including who updated it and when it was updated.\n          - `previousVersion` returns information about the update prior to the current content\n          update. For this method, it contains the same information as `lastUpdated`.\n          - `contributors` returns all of the users who have contributed to the content.\n          - `nextVersion` This parameter is not used for this method.\n      description: |-\n        Returns the most recent update for a piece of content.\n\n        **[Permissions](https://confluence.atlassian.com/x/_AozKw) required**: Permission to view the content.\n      operationId: com.atlassian.confluence.plugins.restapi.resources.ContentResource.getHistoryForContent_get\n      tags:\n      - Content\n      summary: Get history for content\n  \"/api/user\":\n    get:\n      summary: Get user\n      tags:\n      - User\n      operationId: com.atlassian.confluence.plugins.restapi.resources.UserResource.getUser_get\n      responses:\n        '200':\n          description: Returned if the requested user is returned.\n          content:\n            application/json:\n              schema:\n                \"$ref\": \"#/components/schemas/User\"\n        '401':\n          description: |-\n            Returned if the authentication credentials are incorrect or missing\n            from the request.\n        '403':\n          description: Returned if the calling user does not have permission to view\n            users.\n        '404':\n          description: Returned if a user with the given accountId does not exist.\n      x-atlassian-connect-scope: READ\n      description: |-\n        Returns a user. This includes information about the user, such as the\n        display name, account ID, profile picture, and more. The information returned may be\n        restricted by the user's profile visibility settings.\n\n        **Note:** to add, edit, or delete users in your organization, see the\n        [user management REST API](/cloud/admin/user-management/about/).\n\n        **[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\n        Permission to access the Confluence site ('Can use' global permission).\n      parameters:\n      - description: |-\n          This parameter is no longer available and will be removed from the documentation soon.\n          Use `accountId` instead.\n          See the [deprecation notice](/cloud/confluence/deprecation-notice-user-privacy-api-migration-guide/) for details.\n        schema:\n          type: string\n        required: false\n        name: key\n        in: query\n      - schema:\n          type: string\n        description: |-\n          This parameter is no longer available and will be removed from the documentation soon.\n          Use `accountId` instead.\n          See the [deprecation notice](/cloud/confluence/deprecation-notice-user-privacy-api-migration-guide/) for details.\n        name: username\n        required: false\n        in: query\n      - description: |-\n          The account ID of the user, which uniquely identifies the user across all Atlassian products.\n          For example, `384093:32b4d9w0-f6a5-3535-11a3-9c8c88d10192`.\n        schema:\n          type: string\n        in: query\n        required: true\n        name: accountId\n      - style: form\n        required: false\n        name: expand\n        in: query\n        description: |-\n          A multi-value parameter indicating which properties of the user to\n          expand.\n\n            - `operations` returns the operations that the user is allowed to do.\n            - `details.personal` returns the 'Personal' details in the user's profile, like the 'Email' and 'Phone'.\n            Note that these fields have been deprecated due to privacy changes. See the\n            [migration guide](https://developer.atlassian.com/cloud/confluence/deprecation-notice-user-privacy-api-migration-guide/)\n            for details.\n            - `details.business` returns the 'Company' details in the user's profile, like the 'Position' and 'Department'.\n            Note that these fields have been deprecated due to privacy changes. See the\n            [migration guide](https://developer.atlassian.com/cloud/confluence/deprecation-notice-user-privacy-api-migration-guide/)\n            for details.\n            - personalSpace returns the user's personal space, if it exists.\n        schema:\n          items:\n            enum:\n            - operations\n            - details.personal\n            - details.business\n            - personalSpace\n            type: string\n          type: array\n  \"/api/template/blueprint\":\n    get:\n      summary: Get blueprint templates\n      tags:\n      - Template\n      operationId: com.atlassian.confluence.plugins.restapi.resources.TemplateResource.getBlueprintTemplates_get\n      description: |-\n        Returns all templates provided by blueprints. Use this method to retrieve\n        all global blueprint templates or all blueprint templates in a space.\n\n        Note, all global blueprints are inherited by each space. Space blueprints\n        can be customised without affecting the global blueprints.\n\n        **[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\n        Permission to access the Confluence site ('Can use' global permission).\n      parameters:\n      - schema:\n          type: string\n        description: |-\n          The key of the space to be queried for templates. If the `spaceKey`\n          is not specified, global blueprint templates will be returned.\n        in: query\n        required: false\n        name: spaceKey\n      - name: start\n        required: false\n        in: query\n        description: The starting index of the returned templates.\n        schema:\n          format: int32\n          minimum: 0\n          type: integer\n          default: 0\n      - schema:\n          format: int32\n          minimum: 0\n          default: 25\n          type: integer\n        description: |-\n          The maximum number of templates to return per page.\n          Note, this may be restricted by fixed system limits.\n        in: query\n        required: false\n        name: limit\n      - style: form\n        required: false\n        in: query\n        name: expand\n        schema:\n          type: array\n          items:\n            type: string\n            enum:\n            - body\n        description: |-\n          A multi-value parameter indicating which properties of the template\n          to expand.\n\n          - `body` returns the content of the template in storage format.\n      responses:\n        '200':\n          description: Returned if the requested templates are returned.\n          content:\n            application/json:\n              schema:\n                \"$ref\": \"#/components/schemas/BlueprintTemplateArray\"\n        '403':\n          description: |-\n            Returned if the calling user does not have permission to view\n            blueprint templates.\n      x-atlassian-connect-scope: READ\n      security:\n      - oAuthDefinitions:\n        - read:confluence-content.summary\n  \"/api/settings/theme\":\n    get:\n      operationId: com.atlassian.confluence.plugins.restapi.resources.ThemeResource.getThemes_get\n      summary: Get themes\n      tags:\n      - Settings\n      parameters:\n      - schema:\n          minimum: 0\n          format: int32\n          default: 0\n          type: integer\n        description: The starting index of the returned themes.\n        required: false\n        name: start\n        in: query\n      - description: |-\n          The maximum number of themes to return per page.\n          Note, this may be restricted by fixed system limits.\n        schema:\n          type: integer\n          default: 100\n          format: int32\n          minimum: 0\n        name: limit\n        required: false\n        in: query\n      description: |-\n        Returns all themes, not including the default theme.\n\n        **[Permissions](https://confluence.atlassian.com/x/_AozKw) required**: None\n      responses:\n        '200':\n          description: Returned if the requested themes are returned.\n          content:\n            application/json:\n              schema:\n                \"$ref\": \"#/components/schemas/ThemeArray\"\n      security:\n      - oAuthDefinitions:\n        - manage:confluence-configuration\n      x-atlassian-connect-scope: READ\n  \"/api/audit/retention\":\n    get:\n      description: |-\n        Returns the retention period for records in the audit log. The retention\n        period is how long an audit record is kept for, from creation date until\n        it is deleted.\n\n        **[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\n        'Confluence Administrator' global permission.\n      x-atlassian-connect-scope: INACCESSIBLE\n      summary: Get retention period\n      tags:\n      - Audit\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                \"$ref\": \"#/components/schemas/RetentionPeriod\"\n          description: Returned if the requested retention period is returned.\n        '403':\n          description: |-\n            Returned if the calling user does not have permission to view the audit\n            log.\n      operationId: com.atlassian.confluence.plugins.restapi.resources.AuditResource.getRetentionPeriod_get\n    put:\n      requestBody:\n        required: true\n        description: The updated retention period.\n        content:\n          application/json:\n            schema:\n              \"$ref\": \"#/components/schemas/RetentionPeriod\"\n      description: |-\n        Sets the retention period for records in the audit log. The retention period\n        can be set to a maximum of 20 years.\n\n        **[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\n        'Confluence Administrator' global permission.\n      x-atlassian-connect-scope: INACCESSIBLE\n      responses:\n        '200':\n          description: Returned if the retention period is updated.\n          content:\n            application/json:\n              schema:\n                \"$ref\": \"#/components/schemas/RetentionPeriod\"\n        '403':\n          description: |-\n            Returned if the calling user does not have permission to view the audit\n            log.\n      operationId: com.atlassian.confluence.plugins.restapi.resources.AuditResource.setRetentionPeriod_put\n      tags:\n      - Audit\n      summary: Set retention period\n  \"/api/space/{spaceKey}/permission/{id}\":\n    delete:\n      responses:\n        '204':\n          description: Permission successfully removed.\n        '400':\n          description: |-\n            Used for various errors. Such as:\n            - All of the admin permissions cannot be removed from a space.\n        '401':\n          description: |-\n            Returned if the authentication credentials are incorrect or missing\n            from the request.\n        '403':\n          description: Returned if the user isn't authorized.\n        '404':\n          description: |-\n            Returned if any of the following is true:\n            - There is no permission with the given id.\n            - There is no space with the given key.\n            - The calling user does not have permission to view the space.\n      x-atlassian-connect-scope: INACCESSIBLE\n      x-experimental: true\n      operationId: com.atlassian.confluence.plugins.restapi.resources.SpacePermissionResource.removePermission\n      tags:\n      - Experimental\n      summary: Remove a space permission\n      parameters:\n      - schema:\n          type: string\n        description: The key of the space to be queried for its content.\n        required: true\n        in: path\n        name: spaceKey\n      - in: path\n        required: true\n        name: id\n        description: Id of the permission to be deleted.\n        schema:\n          type: integer\n      description: |-\n        Removes a space permission. Note that removing Read Space permission for a user or group will remove all\n        the space permissions for that user or group.\n\n        **[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\n        'Admin' permission for the space.\n  \"/api/template/{contentTemplateId}\":\n    get:\n      x-atlassian-connect-scope: READ\n      security:\n      - oAuthDefinitions:\n        - read:confluence-content.summary\n      responses:\n        '200':\n          description: Returned if the requested template is returned.\n          content:\n            application/json:\n              schema:\n                \"$ref\": \"#/components/schemas/ContentTemplate\"\n        '403':\n          description: |-\n            Returned if;\n\n            - There is no template with the given ID.\n            - The calling user does not have permission to view the template.\n      description: |-\n        Returns a content template. This includes information about template,\n        like the name, the space or blueprint that the template is in, the body\n        of the template, and more.\n\n        **[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\n        'Admin' permission for the space to view space templates and 'Confluence\n        Administrator' global permission to view global templates.\n      parameters:\n      - name: contentTemplateId\n        required: true\n        in: path\n        schema:\n          type: string\n        description: The ID of the content template to be returned.\n      tags:\n      - Template\n      summary: Get content template\n      operationId: com.atlassian.confluence.plugins.restapi.resources.TemplateResource.getContentTemplate_get\n    delete:\n      tags:\n      - Template\n      summary: Remove template\n      operationId: com.atlassian.confluence.plugins.restapi.resources.TemplateResource.removeTemplate_delete\n      description: |-\n        Deletes a template. This results in different actions depending on the\n        type of template:\n\n        - If the template is a content template, it is deleted.\n        - If the template is a modified space-level blueprint template, it reverts\n        to the template inherited from the global-level blueprint template.\n        - If the template is a modified global-level blueprint template, it reverts\n        to the default global-level blueprint template.\n\n         Note, unmodified blueprint templates cannot be deleted.\n      parameters:\n      - schema:\n          type: string\n        description: The ID of the template to be deleted.\n        required: true\n        name: contentTemplateId\n        in: path\n      responses:\n        '204':\n          description: Returned if the template has been successfully been deleted.\n      x-atlassian-connect-scope: DELETE\n      security:\n      - oAuthDefinitions:\n        - write:confluence-content\n  \"/api/space/{spaceKey}/property\":\n    post:\n      tags:\n      - Space\n      summary: Create space property\n      operationId: com.atlassian.confluence.plugins.restapi.resources.SpacePropertyResource.createSpaceProperty_post\n      description: |-\n        Creates a new space property.\n\n        **[Permissions required](https://confluence.atlassian.com/x/_AozKw)**:\n        ‘Admin’ permission for the space.\n      requestBody:\n        content:\n          application/json:\n            schema:\n              \"$ref\": \"#/components/schemas/SpacePropertyCreate\"\n        description: The space property to be created.\n        required: true\n      parameters:\n      - in: path\n        required: true\n        name: spaceKey\n        schema:\n          type: string\n        description: The key of the space that the property will be created in.\n      responses:\n        '200':\n          description: Returned if the space property is created.\n          content:\n            application/json:\n              schema:\n                \"$ref\": \"#/components/schemas/SpaceProperty\"\n        '400':\n          description: |-\n            Returned if any of the following is true:\n\n            - The space already has a value with the given key.\n            - No property value was provided.\n        '403':\n          description: Returned if the user does not have 'Admin' permission for the\n            space.\n        '413':\n          description: Returned if the value for the property is too long.\n      x-atlassian-connect-scope: WRITE\n      security:\n      - oAuthDefinitions:\n        - write:confluence-props\n    get:\n      operationId: com.atlassian.confluence.plugins.restapi.resources.SpacePropertyResource.getSpaceProperties_get\n      tags:\n      - Space\n      summary: Get space properties\n      parameters:\n      - description: The key of the space to be queried for its properties.\n        schema:\n          type: string\n        required: true\n        in: path\n        name: spaceKey\n      - required: false\n        name: expand\n        in: query\n        style: form\n        description: |-\n          A multi-value parameter indicating which properties of the space\n          property to expand. By default, the `version` object is expanded.\n\n          - `version` returns information about the version of the content.\n          - `space` returns the space that the properties are in.\n        schema:\n          items:\n            enum:\n            - version\n            - space\n            type: string\n          type: array\n      - in: query\n        required: false\n        name: start\n        schema:\n          default: 0\n          type: integer\n          minimum: 0\n          format: int32\n        description: The starting index of the returned objects.\n      - description: |-\n          The maximum number of properties to return per page. Note, this may be\n          restricted by fixed system limits.\n        schema:\n          minimum: 0\n          format: int32\n          type: integer\n          default: 10\n        name: limit\n        required: false\n        in: query\n      description: |-\n        Returns all properties for the given space. Space properties are a key-value storage associated with a space.\n\n        **[Permissions required](https://confluence.atlassian.com/x/_AozKw)**: ‘View’ permission for the space.\n      responses:\n        '200':\n          description: Returned if the requested space properties are returned.\n          content:\n            application/json:\n              schema:\n                \"$ref\": \"#/components/schemas/SpacePropertyArray\"\n        '404':\n          description: |-\n            Returned if any of the following is true:\n\n            - There is no space with the given key.\n            - The calling user does not have permission to view the space.\n      security:\n      - oAuthDefinitions:\n        - read:confluence-props\n      x-atlassian-connect-scope: READ\n  \"/api/content/{id}/pagehierarchy/copy\":\n    post:\n      parameters:\n      - schema:\n          type: string\n        required: true\n        in: path\n        name: id\n      description: |-\n        Copy page hierarchy allows the copying of an entire hierarchy of pages and their associated properties, permissions and attachments.\n         The id path parameter refers to the content id of the page to copy, and the new parent of this copied page is defined using the destinationPageId in the request body.\n         The titleOptions object defines the rules of renaming page titles during the copy;\n         for example, search and replace can be used in conjunction to rewrite the copied page titles.\n\n         Response example:\n         \u003cpre\u003e\u003ccode\u003e\n         {\n              \"id\" : \"1180606\",\n              \"links\" : {\n                   \"status\" : \"/rest/api/longtask/1180606\"\n              }\n         }\n         \u003c/code\u003e\u003c/pre\u003e\n         Use the /longtask/\u003ctaskId\u003e REST API to get the copy task status.\n      requestBody:\n        description: Request object from json post body\n        content:\n          application/json:\n            schema:\n              \"$ref\": \"#/components/schemas/CopyPageHierarchyRequest\"\n        required: true\n      operationId: com.atlassian.confluence.plugins.restapi.resources.PageHierarchyResource.copyPageHierarchy_post\n      summary: Copy page hierarchy\n      tags:\n      - Content\n      security:\n      - oAuthDefinitions:\n        - write:confluence-content\n      x-atlassian-connect-scope: WRITE\n      responses:\n        '200':\n          description: Returns a full JSON representation of a long running task\n        '400':\n          description: Returned if original page or destination page doesn't exist.\n        '403':\n          description: Returned if the user does not have permission to create content\n            at destination\n  \"/api/space/{spaceKey}/watch\":\n    get:\n      description: Returns a list of watchers of a space\n      x-atlassian-connect-scope: READ\n      parameters:\n      - description: The key of the space to get watchers.\n        schema:\n          type: string\n        name: spaceKey\n        required: true\n        in: path\n      - schema:\n          type: string\n        description: The start point of the collection to return.\n        required: false\n        in: query\n        name: start\n      - description: The limit of the number of items to return, this may be restricted\n          by fixed system limits.\n        schema:\n          type: string\n        required: false\n        in: query\n        name: limit\n      tags:\n      - Space\n      summary: Returns a list of watchers of a space\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                \"$ref\": \"#/components/schemas/SpaceWatchArray\"\n          description: Returned if watchers list is returned.\n        '404':\n          description: Returned if there is no space with the given key\n      operationId: com.atlassian.confluence.plugins.restapi.resources.SpaceResource.getWatchersForSpace_get\n  \"/api/space/{spaceKey}/content/{type}\":\n    get:\n      security:\n      - oAuthDefinitions:\n        - read:confluence-content.summary\n      x-atlassian-connect-scope: READ\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                \"$ref\": \"#/components/schemas/ContentArray\"\n          description: Returned if the requested content is returned.\n        '401':\n          description: |-\n            Returned if the authentication credentials are incorrect or missing\n            from the request.\n        '404':\n          description: |-\n            Returned if any of the following is true:\n\n            - There is no space with the given key.\n            - The calling user does not have permission to view the space.\n      parameters:\n      - schema:\n          type: string\n        description: The key of the space to be queried for its content.\n        required: true\n        in: path\n        name: spaceKey\n      - required: true\n        in: path\n        name: type\n        schema:\n          enum:\n          - page\n          - blogpost\n          type: string\n        description: The type of content to return.\n      - required: false\n        name: depth\n        in: query\n        schema:\n          enum:\n          - all\n          - root\n          default: all\n          type: string\n        description: |-\n          Filter the results to content at the root level of the space or all\n          content.\n      - \"$ref\": \"#/components/parameters/contentExpand\"\n      - required: false\n        in: query\n        name: start\n        description: The starting index of the returned content.\n        schema:\n          format: int32\n          minimum: 0\n          type: integer\n          default: 0\n      - description: |-\n          The maximum number of content objects to return per page. Note, this\n          may be restricted by fixed system limits.\n        schema:\n          type: integer\n          default: 25\n          format: int32\n          minimum: 0\n        required: false\n        name: limit\n        in: query\n      description: |-\n        Returns all content of a given type, in a space. The returned content is\n        ordered by content ID in ascending order.\n\n        **[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\n        'View' permission for the space. Note, the returned list will only\n        contain content that the current user has permission to view.\n      operationId: com.atlassian.confluence.plugins.restapi.resources.SpaceResource.getContentByTypeForSpace_get\n      tags:\n      - Space\n      summary: Get content by type for space\n  \"/api/user/bulk\":\n    get:\n      description: |-\n        Returns user details for the ids provided in request.\n\n        **[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\n        Permission to access the Confluence site ('Can use' global permission).\n      x-atlassian-connect-scope: INACCESSIBLE\n      parameters:\n      - schema:\n          type: string\n        description: A list of accountId's of users to be returned.\n        required: true\n        in: query\n        name: accountId\n      - style: form\n        required: false\n        in: query\n        name: expand\n        schema:\n          items:\n            enum:\n            - operations\n            - details.personal\n            - details.business\n            - personalSpace\n            type: string\n          type: array\n        description: |-\n          A multi-value parameter indicating which properties of the user to\n          expand.\n\n            - `operations` returns the operations that the user is allowed to do.\n            - `details.personal` returns the 'Personal' details in the user's profile, like the 'Email' and 'Phone'.\n            Note that these fields have been deprecated due to privacy changes. See the\n            [migration guide](https://developer.atlassian.com/cloud/confluence/deprecation-notice-user-privacy-api-migration-guide/)\n            for details.\n            - `details.business` returns the 'Company' details in the user's profile, like the 'Position' and 'Department'.\n            Note that these fields have been deprecated due to privacy changes. See the\n            [migration guide](https://developer.atlassian.com/cloud/confluence/deprecation-notice-user-privacy-api-migration-guide/)\n            for details.\n            - personalSpace returns the user's personal space, if it exists.\n      - description: |-\n          The maximum number of results returned.\n          Currently API returns 200 results max.\n          If more that 200 ids are passed first 200 will be returned.\n        schema:\n          minimum: 1\n          format: int32\n          maximum: 200\n          type: integer\n        required: false\n        in: query\n        name: limit\n      tags:\n      - User\n      summary: Get multiple users using ids\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                \"$ref\": \"#/components/schemas/BulkUserLookupArray\"\n          description: Returned if, the list of users is returned.\n        '403':\n          description: |-\n            Returned if the calling user does not have permission to use\n            Confluence.\n      operationId: com.atlassian.confluence.plugins.restapi.resources.UserResource.getBulkUserLookup\n  \"/api/content/search\":\n    get:\n      tags:\n      - Content\n      summary: Search content by CQL\n      operationId: com.atlassian.confluence.plugins.restapi.resources.ContentResource.searchContentByCQL_get\n      description: |-\n        Returns the list of content that matches a Confluence Query Language\n        (CQL) query. For information on CQL, see:\n        [Advanced searching using CQL](https://developer.atlassian.com/cloud/confluence/advanced-searching-using-cql/).\n\n        **[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\n        Permission to access the Confluence site ('Can use' global permission).\n        Only content that the user has permission to view will be returned.\n      parameters:\n      - description: The CQL string that is used to find the requested content.\n        schema:\n          type: string\n        required: false\n        in: query\n        name: cql\n      - schema:\n          type: string\n        description: |-\n          The space, content, and content status to execute the search against.\n          Specify this as an object with the following properties:\n\n          - `spaceKey` Key of the space to search against. Optional.\n          - `contentId` ID of the content to search against. Optional. Must\n          be in the space spacified by `spaceKey`.\n          - `contentStatuses` Content statuses to search against. Optional.\n        in: query\n        required: false\n        name: cqlcontext\n      - \"$ref\": \"#/components/parameters/contentExpand\"\n      - required: false\n        name: start\n        in: query\n        description: The starting index of the returned content.\n        schema:\n          format: int32\n          minimum: 0\n          type: integer\n          default: 0\n      - description: |-\n          The maximum number of content objects to return per page.\n          Note, this may be restricted by fixed system limits.\n        schema:\n          default: 25\n          type: integer\n          minimum: 0\n          format: int32\n        required: false\n        name: limit\n        in: query\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                \"$ref\": \"#/components/schemas/ContentArray\"\n          description: Returned if the requested list of content is returned.\n        '400':\n          description: Returned if the CQL is invalid or missing.\n        '401':\n          description: |-\n            Returned if the authentication credentials are incorrect or missing\n            from the request.\n      x-atlassian-connect-scope: READ\n      security:\n      - oAuthDefinitions:\n        - search:confluence\n  \"/api/user/watch/space/{spaceKey}\":\n    post:\n      x-atlassian-connect-scope: WRITE\n      security:\n      - oAuthDefinitions:\n        - write:confluence-content\n      responses:\n        '204':\n          description: |-\n            Returned if the watcher was successfully created. No response body is\n            returned.\n        '403':\n          description: |-\n            Returned if;\n\n            - The `X-Atlassian-Token: no-check` header is not specified.\n            - The calling user does not have permission to view the\n            space.\n            - A user is specified via a query parameter and the calling user is\n            not a Confluence administrator.\n            - No space exists for the specified `spaceKey`.\n        '404':\n          description: Returned if no `spaceKey` is specified.\n      description: |-\n        Adds a user as a watcher to a space. Choose the user by doing one of the\n        following:\n\n        - Specify a user via a query parameter: Use the `accountId` to identify the user.\n        - Do not specify a user: The currently logged-in user will be used.\n\n        Note, you must add the `X-Atlassian-Token: no-check` header when making a\n        request, as this operation has XSRF protection.\n\n        **[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\n        'Confluence Administrator' global permission if specifying a user, otherwise\n        permission to access the Confluence site ('Can use' global permission).\n      parameters:\n      - in: path\n        required: true\n        name: spaceKey\n        schema:\n          type: string\n        description: The key of the space to add the watcher to.\n      - schema:\n          type: string\n        description: |-\n          This parameter is no longer available and will be removed from the documentation soon.\n          Use `accountId` instead.\n          See the [deprecation notice](/cloud/confluence/deprecation-notice-user-privacy-api-migration-guide/) for details.\n        name: key\n        required: false\n        in: query\n      - name: username\n        required: false\n        in: query\n        description: |-\n          This parameter is no longer available and will be removed from the documentation soon.\n          Use `accountId` instead.\n          See the [deprecation notice](/cloud/confluence/deprecation-notice-user-privacy-api-migration-guide/) for details.\n        schema:\n          type: string\n      - description: |-\n          The `accountId` of the user to be added as a watcher. The accountId uniquely identifies the user across all\n          Atlassian products. For example, `384093:32b4d9w0-f6a5-3535-11a3-9c8c88d10192`.\n        schema:\n          type: string\n        required: true\n        in: query\n        name: accountId\n      summary: Add space watcher\n      tags:\n      - User\n      operationId: com.atlassian.confluence.plugins.restapi.resources.UserWatchResource.addSpaceWatcher_post\n    get:\n      summary: Get space watch status\n      tags:\n      - User\n      operationId: com.atlassian.confluence.plugins.restapi.resources.UserWatchResource.isWatchingSpace_get\n      description: |-\n        Returns whether a user is watching a space. Choose the user by\n        doing one of the following:\n\n        - Specify a user via a query parameter: Use the `accountId` to identify the user.\n        - Do not specify a user: The currently logged-in user will be used.\n\n        **[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\n        'Confluence Administrator' global permission if specifying a user, otherwise\n        permission to access the Confluence site ('Can use' global permission).\n      parameters:\n      - name: spaceKey\n        required: true\n        in: path\n        description: |-\n          The key of the space to be queried for whether the specified user is\n          watching it.\n        schema:\n          type: string\n      - required: false\n        in: query\n        name: key\n        schema:\n          type: string\n        description: |-\n          This parameter is no longer available and will be removed from the documentation soon.\n          Use `accountId` instead.\n          See the [deprecation notice](/cloud/confluence/deprecation-notice-user-privacy-api-migration-guide/) for details.\n      - in: query\n        required: false\n        name: username\n        schema:\n          type: string\n        description: |-\n          This parameter is no longer available and will be removed from the documentation soon.\n          Use `accountId` instead.\n          See the [deprecation notice](/cloud/confluence/deprecation-notice-user-privacy-api-migration-guide/) for details.\n      - schema:\n          type: string\n        description: |-\n          The `accountId` of the user to be queried for whether they are watching the space. The accountId uniquely identifies\n          the user across all Atlassian products. For example, `384093:32b4d9w0-f6a5-3535-11a3-9c8c88d10192`.\n        required: true\n        in: query\n        name: accountId\n      responses:\n        '200':\n          description: Returned if the requested watch status is returned.\n          content:\n            application/json:\n              schema:\n                \"$ref\": \"#/components/schemas/UserWatch\"\n        '403':\n          description: |-\n            Returned if;\n\n            - The calling user does not have permission to view the\n            space.\n            - A user is specified via a query parameter and the calling user is\n            not a Confluence administrator.\n            - No space exists for the specified `spaceKey`.\n        '404':\n          description: Returned if no `spaceKey` is specified.\n      x-atlassian-connect-scope: READ\n      security:\n      - oAuthDefinitions:\n        - read:confluence-content.summary\n    delete:\n      security:\n      - oAuthDefinitions:\n        - write:confluence-content\n      x-atlassian-connect-scope: DELETE\n      responses:\n        '204':\n          description: Returned if the watcher was successfully deleted. No response\n            body is returned.\n        '403':\n          description: |-\n            Returned if;\n\n            - The `X-Atlassian-Token: no-check` header is not specified.\n            - The calling user does not have permission to view the space.\n            - A user is specified via a query parameter and the calling user is\n            not a Confluence administrator.\n            - No space exists for the specified `spaceKey`.\n        '404':\n          description: Returned if no `spaceKey` is specified.\n      parameters:\n      - description: The key of the space to remove the watcher from.\n        schema:\n          type: string\n        required: true\n        name: spaceKey\n        in: path\n      - required: false\n        name: key\n        in: query\n        schema:\n          type: string\n        description: |-\n          This parameter is no longer available and will be removed from the documentation soon.\n          Use `accountId` instead.\n          See the [deprecation notice](/cloud/confluence/deprecation-notice-user-privacy-api-migration-guide/) for details.\n      - schema:\n          type: string\n        description: |-\n          This parameter is no longer available and will be removed from the documentation soon.\n          Use `accountId` instead.\n          See the [deprecation notice](/cloud/confluence/deprecation-notice-user-privacy-api-migration-guide/) for details.\n        required: false\n        name: username\n        in: query\n      - required: true\n        in: query\n        name: accountId\n        schema:\n          type: string\n        description: |-\n          The `accountId` of the user to be removed as a watcher. The accountId uniquely identifies the user across all\n          Atlassian products. For example, `384093:32b4d9w0-f6a5-3535-11a3-9c8c88d10192`.\n      description: |-\n        Removes a user as a watcher from a space. Choose the user by doing one of\n        the following:\n\n        - Specify a user via a query parameter: Use the `accountId` to identify the user.\n        - Do not specify a user: The currently logged-in user will be used.\n\n        **[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\n        'Confluence Administrator' global permission if specifying a user, otherwise\n        permission to access the Confluence site ('Can use' global permission).\n      operationId: com.atlassian.confluence.plugins.restapi.resources.UserWatchResource.removeSpaceWatch_delete\n      summary: Remove space watch\n      tags:\n      - User\n  \"/api/user/email\":\n    get:\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                \"$ref\": \"#/components/schemas/AccountIdEmailRecord\"\n          description: Returned if the requested user's email is returned.\n        '400':\n          description: Returned if the calling app is not approved to use this API.\n        '401':\n          description: |-\n            Returned if the authentication credentials are incorrect or missing\n            from the request.\n        '404':\n          description: Returned if a user with the given accountId does not exist.\n        '501':\n          description: Indicates that the API is not currently enabled.\n      operationId: com.atlassian.confluence.plugins.restapi.resources.UserEmailResource.getPrivacyUnsafeUserEmail_get\n      tags:\n      - User\n      summary: Get a user's email\n      parameters:\n      - required: true\n        name: accountId\n        in: query\n        description: |-\n          The account ID of the user, which uniquely identifies the user across all Atlassian products.\n          For example, `384093:32b4d9w0-f6a5-3535-11a3-9c8c88d10192`. Required.\n        schema:\n          type: string\n      description: |-\n        Returns a user's email address. This API is only available to apps approved by\n        Atlassian, according to these [guidelines](https://community.developer.atlassian.com/t/guidelines-for-requesting-access-to-email-address/27603).\n\n        **[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\n        Permission to access the Confluence site ('Can use' global permission).\n      x-atlassian-connect-scope: ACCESS_EMAIL_ADDRESSES\n  \"/api/content/{id}/restriction/byOperation/{operationKey}\":\n    get:\n      description: |-\n        Returns the restictions on a piece of content for a given operation (read\n        or update).\n\n        **[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\n        Permission to view the content.\n      parameters:\n      - description: The ID of the content to be queried for its restrictions.\n        schema:\n          type: string\n        required: true\n        in: path\n        name: id\n      - name: operationKey\n        required: true\n        in: path\n        description: The operation type of the restrictions to be returned.\n        schema:\n          enum:\n          - read\n          - update\n          type: string\n      - schema:\n          items:\n            type: string\n            enum:\n            - restrictions.user\n            - restrictions.group\n            - content\n          type: array\n        description: |-\n          A multi-value parameter indicating which properties of the content\n          restrictions to expand.\n\n          - `restrictions.user` returns the piece of content that the restrictions are\n          applied to. Expanded by default.\n          - `restrictions.group` returns the piece of content that the restrictions are\n          applied to. Expanded by default.\n          - `content` returns the piece of content that the restrictions are\n          applied to.\n        required: false\n        in: query\n        name: expand\n        style: form\n      - description: The starting index of the users and groups in the returned restrictions.\n        schema:\n          type: integer\n          default: 0\n          minimum: 0\n          format: int32\n        in: query\n        required: false\n        name: start\n      - schema:\n          minimum: 0\n          format: int32\n          default: 100\n          type: integer\n        description: |-\n          The maximum number of users and the maximum number of groups, in the\n          returned restrictions, to return per page. Note, this may be restricted\n          by fixed system limits.\n        required: false\n        in: query\n        name: limit\n      tags:\n      - Content\n      summary: Get restrictions for operation\n      operationId: com.atlassian.confluence.plugins.restapi.resources.ContentRestrictionResource.getRestrictionsForOperation_get\n      x-atlassian-connect-scope: READ\n      security:\n      - oAuthDefinitions:\n        - read:confluence-content.all\n      responses:\n        '200':\n          description: Returned if the requested restrictions are returned.\n          content:\n            application/json:\n              schema:\n                \"$ref\": \"#/components/schemas/ContentRestriction\"\n  \"/api/template/page\":\n    get:\n      parameters:\n      - in: query\n        required: false\n        name: spaceKey\n        description: |-\n          The key of the space to be queried for templates. If the `spaceKey`\n          is not specified, global templates will be returned.\n        schema:\n          type: string\n      - schema:\n          type: integer\n          default: 0\n          format: int32\n          minimum: 0\n        description: The starting index of the returned templates.\n        required: false\n        in: query\n        name: start\n      - schema:\n          type: integer\n          default: 25\n          format: int32\n          minimum: 0\n        description: |-\n          The maximum number of templates to return per page.\n          Note, this may be restricted by fixed system limits.\n        name: limit\n        required: false\n        in: query\n      - schema:\n          type: array\n          items:\n            enum:\n            - body\n            type: string\n        description: |-\n          A multi-value parameter indicating which properties of the template\n          to expand.\n\n          - `body` returns the content of the template in storage format.\n        style: form\n        name: expand\n        required: false\n        in: query\n      description: |-\n        Returns all content templates. Use this method to retrieve all global\n        content templates or all content templates in a space.\n\n        **[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\n        'Admin' permission for the space to view space templates and 'Confluence\n        Administrator' global permission to view global templates.\n      operationId: com.atlassian.confluence.plugins.restapi.resources.TemplateResource.getContentTemplates_get\n      tags:\n      - Template\n      summary: Get content templates\n      security:\n      - oAuthDefinitions:\n        - read:confluence-content.summary\n      x-atlassian-connect-scope: READ\n      responses:\n        '200':\n          description: Returned if the requested templates are returned.\n          content:\n            application/json:\n              schema:\n                \"$ref\": \"#/components/schemas/ContentTemplateArray\"\n        '403':\n          description: |-\n            Returned if the calling user does not have permission to view the\n            content templates.\n  \"/api/settings/theme/{themeKey}\":\n    get:\n      operationId: com.atlassian.confluence.plugins.restapi.resources.ThemeResource.getTheme_get\n      summary: Get theme\n      tags:\n      - Settings\n      parameters:\n      - required: true\n        in: path\n        name: themeKey\n        schema:\n          type: string\n        description: The key of the theme to be returned.\n      description: |-\n        Returns a theme. This includes information about the theme name,\n        description, and icon.\n\n        **[Permissions](https://confluence.atlassian.com/x/_AozKw) required**: None\n      responses:\n        '200':\n          description: Returned if the requested theme is returned.\n          content:\n            application/json:\n              schema:\n                \"$ref\": \"#/components/schemas/Theme\"\n        '404':\n          description: Returned if there is no theme with the given key.\n      security:\n      - oAuthDefinitions:\n        - manage:confluence-configuration\n      x-atlassian-connect-scope: READ\n  \"/api/content/{id}/property/{key}\":\n    post:\n      parameters:\n      - name: id\n        required: true\n        in: path\n        description: The ID of the content to add the property to.\n        schema:\n          type: string\n      - required: true\n        in: path\n        name: key\n        description: The key of the content property. Required.\n        schema:\n          type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              \"$ref\": \"#/components/schemas/ContentPropertyCreateNoKey\"\n        description: The content property to be created.\n        required: true\n      description: |-\n        Creates a property for an existing piece of content. For more information\n        about content properties, see [Confluence entity properties](https://developer.atlassian.com/cloud/confluence/confluence-entity-properties/).\n\n        This is the same as [Create content property](#api-content-id-property-post)\n        except that the key is specified as a path parameter instead of in the\n        request body.\n\n        Content properties can also be added when creating a new piece of content\n        by including them in the `metadata.properties` of the request.\n\n        **[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\n        Permission to update the content.\n      operationId: com.atlassian.confluence.plugins.restapi.resources.ContentPropertyResource.createContentPropertyForKey_post\n      summary: Create content property for key\n      tags:\n      - Content\n      security:\n      - oAuthDefinitions:\n        - write:confluence-props\n      x-atlassian-connect-scope: WRITE\n      responses:\n        '200':\n          description: Returned if the content property is created.\n          content:\n            application/json:\n              schema:\n                \"$ref\": \"#/components/schemas/ContentProperty\"\n        '400':\n          description: |-\n            Returned if;\n\n            - The content already has a property with the given key.\n            - The key is too long.\n            - The key is empty.\n        '403':\n          description: |-\n            Returned if the user does not have permission to edit the content\n            with the given ID.\n        '413':\n          description: Returned if the value is too long.\n    delete:\n      x-atlassian-connect-scope: DELETE\n      security:\n      - oAuthDefinitions:\n        - write:confluence-props\n      responses:\n        '204':\n          description: Returned if the content property is deleted.\n        '404':\n          description: |-\n            Returned if;\n\n            - There is no content with the given ID.\n            - The calling user does not have permission to view the content.\n      description: |-\n        Deletes a content property. For more information about content properties, see\n        [Confluence entity properties](https://developer.atlassian.com/cloud/confluence/confluence-entity-properties/).\n\n        **[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\n        Permission to update the content.\n      parameters:\n      - description: The ID of the content that the property belongs to.\n        schema:\n          type: string\n        required: true\n        in: path\n        name: id\n      - description: The key of the property.\n        schema:\n          type: string\n        name: key\n        required: true\n        in: path\n      tags:\n      - Content\n      summary: Delete content property\n      operationId: com.atlassian.confluence.plugins.restapi.resources.ContentPropertyResource.deleteContentProperty_delete\n    put:\n      operationId: com.atlassian.confluence.plugins.restapi.resources.ContentPropertyResource.updateContentProperty_put\n      summary: Update content property\n      tags:\n      - Content\n      parameters:\n      - name: id\n        required: true\n        in: path\n        schema:\n          type: string\n        description: The ID of the content that the property belongs to.\n      - description: The key of the property.\n        schema:\n          type: string\n        in: path\n        required: true\n        name: key\n      requestBody:\n        required: true\n        description: The content property being updated.\n        content:\n          application/json:\n            schema:\n              \"$ref\": \"#/components/schemas/ContentPropertyUpdate\"\n      description: |-\n        Updates an existing content property. This method will also create a new\n        property for a piece of content, if the property key does not exist and\n        the property version is 1. For more information about content properties, see\n        [Confluence entity properties](https://developer.atlassian.com/cloud/confluence/confluence-entity-properties/).\n\n        **[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\n        Permission to update the content.\n      responses:\n        '200':\n          description: Returned if the content property is created.\n          content:\n            application/json:\n              schema:\n                \"$ref\": \"#/components/schemas/ContentProperty\"\n        '400':\n          description: |-\n            Returned if;\n\n            - The content already a property with the given key.\n            - The key is too long.\n            - The key is empty.\n        '403':\n          description: |-\n            Returned if the user does not have permission to edit the content\n            with the given ID.\n        '404':\n          description: |-\n            Returned if;\n\n            - There is no content with the given ID.\n            - The calling user does not have permission to view the content.\n            - There is no property with the given key and the version number is not 1.\n        '409':\n          description: Returned if the property version is not correctly incremented.\n        '413':\n          description: Returned if the value is too long.\n      security:\n      - oAuthDefinitions:\n        - write:confluence-props\n      x-atlassian-connect-scope: WRITE\n    get:\n      security:\n      - oAuthDefinitions:\n        - read:confluence-props\n      x-atlassian-connect-scope: READ\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                \"$ref\": \"#/components/schemas/ContentProperty\"\n          description: Returned if the content property is returned.\n        '404':\n          description: |-\n            Returned if;\n\n            - The calling user does not have permission to view the content.\n            - There is no content with the given ID.\n            - There is no property with the given key.\n      parameters:\n      - schema:\n          type: string\n        description: The ID of the content to be queried for the property.\n        required: true\n        in: path\n        name: id\n      - name: key\n        required: true\n        in: path\n        schema:\n          type: string\n        description: The key of the content property.\n      - schema:\n          items:\n            enum:\n            - content\n            - version\n            type: string\n          type: array\n        description: |-\n          A multi-value parameter indicating which properties of the content to\n          expand. By default, the `version` object is expanded.\n\n          - `content` returns the content that the property is stored against.\n          - `version` returns information about the version of the property, such\n          as the version number, when it was created, etc.\n        required: false\n        in: query\n        name: expand\n        style: form\n      description: |-\n        Returns a content property for a piece of content. For more information, see\n        [Confluence entity properties](https://developer.atlassian.com/cloud/confluence/confluence-entity-properties/).\n\n        **[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\n        'View' permission for the space, and permission to view the content if it is a page.\n      operationId: com.atlassian.confluence.plugins.restapi.resources.ContentPropertyResource.getContentProperty_get\n      summary: Get content property\n      tags:\n      - Content\n  \"/api/content/{id}/restriction/byOperation/{operationKey}/user\":\n    put:\n      operationId: com.atlassian.confluence.plugins.restapi.resources.ContentRestrictionResource.addUserToContentRestriction_put\n      summary: Add user to content restriction\n      tags:\n      - Content\n      parameters:\n      - in: path\n        required: true\n        name: id\n        schema:\n          type: string\n        description: The ID of the content that the restriction applies to.\n      - schema:\n          type: string\n        description: The operation that the restriction applies to.\n        required: true\n        name: operationKey\n        in: path\n      - in: query\n        required: false\n        name: key\n        schema:\n          type: string\n        description: |-\n          This parameter is no longer available and will be removed from the documentation soon.\n          Use `accountId` instead.\n          See the [deprecation notice](/cloud/confluence/deprecation-notice-user-privacy-api-migration-guide/) for details.\n      - schema:\n          type: string\n        description: |-\n          This parameter is no longer available and will be removed from the documentation soon.\n          Use `accountId` instead.\n          See the [deprecation notice](/cloud/confluence/deprecation-notice-user-privacy-api-migration-guide/) for details.\n        required: false\n        in: query\n        name: userName\n      - name: accountId\n        required: true\n        in: query\n        schema:\n          type: string\n        description: |-\n          The account ID of the user to add to the content restriction. The accountId uniquely identifies the user across\n          all Atlassian products. For example, `384093:32b4d9w0-f6a5-3535-11a3-9c8c88d10192`.\n      description: |-\n        Adds a user to a content restriction. That is, grant read or update\n        permission to the user for a piece of content.\n\n        **[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\n        Permission to edit the content.\n      responses:\n        '200':\n          description: |-\n            Returned if the user is added to the content restriction. The response\n            body will be empty.\n        '404':\n          description: |-\n            Returned if;\n\n            - There is no content with the given ID.\n            - The calling user does not have permission to view the content.\n            - An invalid operation or group is specified.\n      security:\n      - oAuthDefinitions:\n        - write:confluence-content\n      x-atlassian-connect-scope: WRITE\n    delete:\n      responses:\n        '200':\n          description: |-\n            Returned if the user is removed from the content restriction. The response\n            body will be empty.\n        '404':\n          description: |-\n            Returned if;\n\n            - There is no content with the given ID.\n            - The calling user does not have permission to view the content.\n            - An invalid operation or group is specified.\n      security:\n      - oAuthDefinitions:\n        - write:confluence-content\n      x-atlassian-connect-scope: DELETE\n      operationId: com.atlassian.confluence.plugins.restapi.resources.ContentRestrictionResource.removeUserFromContentRestriction_delete\n      summary: Remove user from content restriction\n      tags:\n      - Content\n      parameters:\n      - schema:\n          type: string\n        description: The ID of the content that the restriction applies to.\n        required: true\n        name: id\n        in: path\n      - in: path\n        required: true\n        name: operationKey\n        description: The operation that the restriction applies to.\n        schema:\n          enum:\n          - read\n          - update\n          type: string\n      - in: query\n        required: false\n        name: key\n        schema:\n          type: string\n        description: |-\n          This parameter is no longer available and will be removed from the documentation soon.\n          Use `accountId` instead.\n          See the [deprecation notice](/cloud/confluence/deprecation-notice-user-privacy-api-migration-guide/) for details.\n      - schema:\n          type: string\n        description: |-\n          This parameter is no longer available and will be removed from the documentation soon.\n          Use `accountId` instead.\n          See the [deprecation notice](/cloud/confluence/deprecation-notice-user-privacy-api-migration-guide/) for details.\n        name: userName\n        required: false\n        in: query\n      - description: |-\n          The account ID of the user to remove from the content restriction. The accountId uniquely identifies the user\n          across all Atlassian products. For example, `384093:32b4d9w0-f6a5-3535-11a3-9c8c88d10192`.\n        schema:\n          type: string\n        required: true\n        in: query\n        name: accountId\n      description: |-\n        Removes a group from a content restriction. That is, remove read or update\n        permission for the group for a piece of content.\n\n        **[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\n        Permission to edit the content.\n    get:\n      responses:\n        '200':\n          description: |-\n            Return true if the content restriction applies to the user. The response\n            body will be empty.\n        '404':\n          description: |-\n            Returned if;\n\n            - There is no content with the given ID.\n            - The calling user does not have permission to view the content.\n            - An invalid operation or user is specified.\n      x-atlassian-connect-scope: READ\n      security:\n      - oAuthDefinitions:\n        - read:confluence-content.all\n      tags:\n      - Content\n      summary: Get content restriction status for user\n      operationId: com.atlassian.confluence.plugins.restapi.resources.ContentRestrictionResource.getContentRestrictionStatusForUser_get\n      description: |-\n        Returns whether the specified content restriction applies to a user.\n        For example, if a page with `id=123` has a `read` restriction for a user with an account ID of\n        `384093:32b4d9w0-f6a5-3535-11a3-9c8c88d10192`, the following request will return `true`:\n\n        `https://your-domain.atlassian.net/wiki/rest/api/content/123/restriction/byOperation/read/user?accountId=384093:32b4d9w0-f6a5-3535-11a3-9c8c88d10192`\n\n        Note that a response of `true` does not guarantee that the user can view the page, as it does not account for\n        account-inherited restrictions, space permissions, or even product access. For more\n        information, see [Confluence permissions](https://confluence.atlassian.com/x/_AozKw).\n\n        **[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\n        Permission to view the content.\n      parameters:\n      - description: The ID of the content that the restriction applies to.\n        schema:\n          type: string\n        required: true\n        name: id\n        in: path\n      - required: true\n        in: path\n        name: operationKey\n        description: The operation that is restricted.\n        schema:\n          type: string\n      - schema:\n          type: string\n        description: |-\n          This parameter is no longer available and will be removed from the documentation soon.\n          Use `accountId` instead.\n          See the [deprecation notice](/cloud/confluence/deprecation-notice-user-privacy-api-migration-guide/) for details.\n        name: key\n        required: false\n        in: query\n      - schema:\n          type: string\n        description: |-\n          This parameter is no longer available and will be removed from the documentation soon.\n          Use `accountId` instead.\n          See the [deprecation notice](/cloud/confluence/deprecation-notice-user-privacy-api-migration-guide/) for details.\n        in: query\n        required: false\n        name: userName\n      - required: true\n        in: query\n        name: accountId\n        schema:\n          type: string\n        description: |-\n          The account ID of the user to be queried for whether the content restriction applies to it. The accountId\n          uniquely identifies the user across all Atlassian products. For example, `384093:32b4d9w0-f6a5-3535-11a3-9c8c88d10192`.\n  \"/api/content/{id}/descendant\":\n    get:\n      security:\n      - oAuthDefinitions:\n        - read:confluence-content.summary\n      x-atlassian-connect-scope: READ\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                \"$ref\": \"#/components/schemas/ContentChildren\"\n          description: Returned if the requested descendants are returned.\n        '404':\n          description: |-\n            Returned if;\n\n            - There is no content with the given ID.\n            - The calling user does not have permission to view the content.\n      parameters:\n      - name: id\n        required: true\n        in: path\n        schema:\n          type: string\n        description: The ID of the content to be queried for its descendants.\n      - style: form\n        in: query\n        required: false\n        name: expand\n        schema:\n          items:\n            enum:\n            - attachment\n            - comment\n            - page\n            type: string\n          type: array\n        description: |-\n          A multi-value parameter indicating which properties of the children to\n          expand, where:\n\n          - `attachment` returns all attachments for the content.\n          - `comments` returns all comments for the content.\n          - `page` returns all child pages of the content.\n      description: |-\n        Returns a map of the descendants of a piece of content. This is similar\n        to [Get content children](#api-content-id-child-get), except that this\n        method returns child pages at all levels, rather than just the direct\n        child pages.\n\n        A piece of content has different types of descendants, depending on its type:\n\n        - `page`: descendant is `page`, `comment`, `attachment`\n        - `blogpost`: descendant is `comment`, `attachment`\n        - `attachment`: descendant is `comment`\n        - `comment`: descendant is `attachment`\n\n        The map will always include all descendant types that are valid for the content.\n        However, if the content has no instances of a descendant type, the map will\n        contain an empty array for that descendant type.\n\n        **[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\n        'View' permission for the space, and permission to view the content if it\n        is a page.\n      operationId: com.atlassian.confluence.plugins.restapi.resources.DescendantContentResource.getContentDescendants_get\n      tags:\n      - Content\n      summary: Get content descendants\n  \"/api/space/{spaceKey}/content\":\n    get:\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                \"$ref\": \"#/components/schemas/ContentArray\"\n          description: Returned if the requested content is returned.\n        '401':\n          description: |-\n            Returned if the authentication credentials are incorrect or missing\n            from the request.\n        '404':\n          description: |-\n            Returned if any of the following is true:\n\n            - There is no space with the given key.\n            - The calling user does not have permission to view the space.\n      security:\n      - oAuthDefinitions:\n        - read:confluence-content.summary\n      x-atlassian-connect-scope: READ\n      operationId: com.atlassian.confluence.plugins.restapi.resources.SpaceResource.getContentForSpace_get\n      tags:\n      - Space\n      summary: Get content for space\n      parameters:\n      - description: The key of the space to be queried for its content.\n        schema:\n          type: string\n        required: true\n        in: path\n        name: spaceKey\n      - required: false\n        in: query\n        name: depth\n        schema:\n          enum:\n          - all\n          - root\n          type: string\n          default: all\n        description: Filter the results to content at the root level of the space\n          or all content.\n      - \"$ref\": \"#/components/parameters/contentExpand\"\n      - schema:\n          type: integer\n          default: 0\n          minimum: 0\n          format: int32\n        description: The starting index of the returned content.\n        in: query\n        required: false\n        name: start\n      - required: false\n        in: query\n        name: limit\n        schema:\n          format: int32\n          minimum: 0\n          default: 25\n          type: integer\n        description: |-\n          The maximum number of content objects to return per page. Note, this\n          may be restricted by fixed system limits.\n      description: |-\n        Returns all content in a space. The returned content is grouped by type\n        (pages then blogposts), then ordered by content ID in ascending order.\n\n        **[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\n        'View' permission for the space. Note, the returned list will only\n        contain content that the current user has permission to view.\n  \"/api/content/{id}/child/comment\":\n    get:\n      security:\n      - oAuthDefinitions:\n        - read:confluence-content.summary\n      x-atlassian-connect-scope: READ\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                \"$ref\": \"#/components/schemas/ContentArray\"\n          description: Returned if the requested comments are returned.\n        '404':\n          description: |-\n            Returned if;\n\n            - There is no parent content with the given ID.\n            - The calling user does not have permission to view the parent content.\n      parameters:\n      - in: path\n        required: true\n        name: id\n        description: The ID of the content to be queried for its comments.\n        schema:\n          type: string\n      - \"$ref\": \"#/components/parameters/contentExpand\"\n      - name: parentVersion\n        in: query\n        schema:\n          type: integer\n          default: 0\n          format: int32\n          minimum: 0\n        description: |-\n          The version of the parent content to retrieve children for.\n          Currently, this only works for the latest version.\n      - name: start\n        in: query\n        schema:\n          format: int32\n          type: integer\n        description: The starting index of the returned comments.\n      - name: limit\n        in: query\n        description: |-\n          The maximum number of comments to return per page. Note,\n          this may be restricted by fixed system limits.\n        schema:\n          minimum: 0\n          format: int32\n          type: integer\n          default: 25\n      - schema:\n          type: array\n          items:\n            type: string\n          enum:\n          - inline\n          - footer\n          - resolved\n        description: |-\n          The location of the comments in the page. Multiple locations can be specified.\n          If no location is specified, comments from all locations are returned.\n        explode: true\n        in: query\n        name: location\n      - schema:\n          type: string\n        description: |-\n          Currently, this parameter is not used.\n          Comments are returned at the root level only.\n        in: query\n        name: depth\n      description: |-\n        Returns the comments on a piece of content.\n\n        **[Permissions](https://confluence.atlassian.com/x/_AozKw) required**: 'View' permission for the space,\n        and permission to view the content if it is a page.\n      operationId: com.atlassian.confluence.plugins.restapi.resources.ChildContentResource.getContentComments_get\n      summary: Get content comments\n      tags:\n      - Content\n  \"/api/settings/systemInfo\":\n    get:\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                \"$ref\": \"#/components/schemas/SystemInfoEntity\"\n          description: |-\n            Returned if the system information for the Confluence Cloud tenant\n            is returned.\n        '403':\n          description: |-\n            Returned when the user does not have permission to view the system\n            information.\n      operationId: com.atlassian.confluence.plugins.restapi.resources.SystemInfoResource.getSystemInfo_get\n      summary: Get system info\n      tags:\n      - Settings\n      security:\n      - oAuthDefinitions:\n        - manage:confluence-configuration\n      description: |-\n        Returns the system information for the Confluence Cloud tenant. This\n        information is used by Atlassian.\n\n        **[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\n        Permission to access the Confluence site ('Can use' global permission).\n      x-atlassian-connect-scope: READ\n  \"/api/content/{id}/restriction/byOperation\":\n    get:\n      description: |-\n        Returns restrictions on a piece of content by operation. This method is\n        similar to [Get restrictions](#api-content-id-restriction-get) except that\n        the operations are properties of the return object, rather than items in\n        a results array.\n\n        **[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\n        Permission to view the content.\n      parameters:\n      - name: id\n        required: true\n        in: path\n        schema:\n          type: string\n        description: The ID of the content to be queried for its restrictions.\n      - description: |-\n          A multi-value parameter indicating which properties of the content\n          restrictions to expand.\n\n          - `restrictions.user` returns the piece of content that the restrictions are\n          applied to. Expanded by default.\n          - `restrictions.group` returns the piece of content that the restrictions are\n          applied to. Expanded by default.\n          - `content` returns the piece of content that the restrictions are\n          applied to.\n        schema:\n          items:\n            type: string\n            enum:\n            - restrictions.user\n            - restrictions.group\n            - content\n          type: array\n        required: false\n        name: expand\n        in: query\n        style: form\n      summary: Get restrictions by operation\n      tags:\n      - Content\n      operationId: com.atlassian.confluence.plugins.restapi.resources.ContentRestrictionResource.getRestrictionsByOperation_get\n      x-atlassian-connect-scope: READ\n      security:\n      - oAuthDefinitions:\n        - read:confluence-content.all\n      responses:\n        '200':\n          description: Returned if the requested restrictions are returned.\n          content:\n            application/json:\n              schema:\n                additionalProperties:\n                  \"$ref\": \"#/components/schemas/ContentRestriction\"\n                required:\n                - _links\n                type: object\n                properties:\n                  _links:\n                    \"$ref\": \"#/components/schemas/GenericLinks\"\n  \"/api/settings/theme/selected\":\n    get:\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                \"$ref\": \"#/components/schemas/Theme\"\n          description: Returned if the global theme is returned.\n        '404':\n          description: |-\n            Returned if Confluence does not have a global theme assigned, i.e.\n            the default theme is used.\n      operationId: com.atlassian.confluence.plugins.restapi.resources.ThemeResource.getGlobalTheme_get\n      tags:\n      - Settings\n      summary: Get global theme\n      security:\n      - oAuthDefinitions:\n        - manage:confluence-configuration\n      description: |-\n        Returns the globally assigned theme.\n\n        **[Permissions](https://confluence.atlassian.com/x/_AozKw) required**: None\n      x-atlassian-connect-scope: READ\n  \"/api/content/{id}/label/{label}\":\n    delete:\n      description: |-\n        Removes a label from a piece of content. This is similar to\n        [Remove label from content using query parameter](#api-content-id-label-delete)\n        except that the label name is specified via a path parameter.\n\n        Use this method if the label name does not have \"/\" characters, as the path\n        parameter does not accept \"/\" characters for security reasons. Otherwise,\n        use [Remove label from content using query parameter](#api-content-id-label-delete).\n\n        **[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\n        Permission to update the content.\n      parameters:\n      - description: The ID of the content that the label will be removed from.\n        schema:\n          type: string\n        name: id\n        required: true\n        in: path\n      - name: label\n        required: true\n        in: path\n        schema:\n          type: string\n        description: The name of the label to be removed.\n      tags:\n      - Content\n      summary: Remove label from content\n      operationId: com.atlassian.confluence.plugins.restapi.resources.ContentLabelsResource.removeLabelFromContent_delete\n      x-atlassian-connect-scope: DELETE\n      security:\n      - oAuthDefinitions:\n        - write:confluence-content\n      responses:\n        '204':\n          description: Returned if the label is removed. The response body will be\n            empty.\n        '400':\n          description: Returned if the label name has a \"/\" character.\n        '403':\n          description: Returned if the calling user can view but not edit the content.\n        '404':\n          description: |-\n            Returned if;\n\n            - There is no content with the given ID.\n            - The calling user does not have permission to view the content.\n  \"/api/user/watch/content/{contentId}\":\n    delete:\n      x-atlassian-connect-scope: DELETE\n      security:\n      - oAuthDefinitions:\n        - write:confluence-content\n      responses:\n        '204':\n          description: |-\n            Returned if the watcher was successfully deleted. No response body is\n            returned.\n        '403':\n          description: |-\n            Returned if;\n\n            - The `X-Atlassian-Token: no-check` header is not specified.\n            - The calling user does not have permission to view the\n            content.\n            - A user is specified via a query parameter and the calling user is\n            not a Confluence administrator.\n            - No content exists for the specified `contentId`.\n        '404':\n          description: Returned if no `contentId` is specified.\n      description: |-\n        Removes a user as a watcher from a piece of content. Choose the user by\n        doing one of the following:\n\n        - Specify a user via a query parameter: Use the `accountId` to identify the user.\n        - Do not specify a user: The currently logged-in user will be used.\n\n        **[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\n        'Confluence Administrator' global permission if specifying a user, otherwise\n        permission to access the Confluence site ('Can use' global permission).\n      parameters:\n      - schema:\n          type: string\n        description: The ID of the content to remove the watcher from.\n        required: true\n        in: path\n        name: contentId\n      - required: false\n        in: query\n        name: key\n        description: |-\n          This parameter is no longer available and will be removed from the documentation soon.\n          Use `accountId` instead.\n          See the [deprecation notice](/cloud/confluence/deprecation-notice-user-privacy-api-migration-guide/) for details.\n        schema:\n          type: string\n      - required: false\n        in: query\n        name: username\n        schema:\n          type: string\n        description: |-\n          This parameter is no longer available and will be removed from the documentation soon.\n          Use `accountId` instead.\n          See the [deprecation notice](/cloud/confluence/deprecation-notice-user-privacy-api-migration-guide/) for details.\n      - schema:\n          type: string\n        description: |-\n          The `accountId` of the user to be removed as a watcher. The accountId uniquely identifies the user across all Atlassian products.\n          For example, `384093:32b4d9w0-f6a5-3535-11a3-9c8c88d10192`.\n        in: query\n        required: true\n        name: accountId\n      tags:\n      - User\n      summary: Remove content watcher\n      operationId: com.atlassian.confluence.plugins.restapi.resources.UserWatchResource.removeContentWatcher_delete\n    get:\n      responses:\n        '200':\n          description: Returned if the requested watch status is returned.\n          content:\n            application/json:\n              schema:\n                \"$ref\": \"#/components/schemas/UserWatch\"\n        '403':\n          description: |-\n            Returned if;\n\n            - The calling user does not have permission to view the\n            content.\n            - A user is specified via a query parameter and the calling user is\n            not a Confluence administrator.\n            - No content exists for the specified `contentId`.\n        '404':\n          description: Returned if no `contentId` is specified.\n      security:\n      - oAuthDefinitions:\n        - read:confluence-content.summary\n      x-atlassian-connect-scope: READ\n      operationId: com.atlassian.confluence.plugins.restapi.resources.UserWatchResource.getContentWatchStatus_get\n      summary: Get content watch status\n      tags:\n      - User\n      parameters:\n      - in: path\n        required: true\n        name: contentId\n        description: |-\n          The ID of the content to be queried for whether the specified user is\n          watching it.\n        schema:\n          type: string\n      - schema:\n          type: string\n        description: |-\n          This parameter is no longer available and will be removed from the documentation soon.\n          Use `accountId` instead.\n          See the [deprecation notice](/cloud/confluence/deprecation-notice-user-privacy-api-migration-guide/) for details.\n        required: false\n        in: query\n        name: key\n      - description: |-\n          This parameter is no longer available and will be removed from the documentation soon.\n          Use `accountId` instead.\n          See the [deprecation notice](/cloud/confluence/deprecation-notice-user-privacy-api-migration-guide/) for details.\n        schema:\n          type: string\n        in: query\n        required: false\n        name: username\n      - required: true\n        in: query\n        name: accountId\n        schema:\n          type: string\n        description: |-\n          The `accountId` of the user to be queried for whether they are watching the content. The accountId uniquely\n          identifies the user across all Atlassian products. For example, `384093:32b4d9w0-f6a5-3535-11a3-9c8c88d10192`.\n      description: |-\n        Returns whether a user is watching a piece of content. Choose the user by\n        doing one of the following:\n\n        - Specify a user via a query parameter: Use the `accountId` to identify the user.\n        - Do not specify a user: The currently logged-in user will be used.\n\n        **[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\n        'Confluence Administrator' global permission if specifying a user, otherwise\n        permission to access the Confluence site ('Can use' global permission).\n    post:\n      operationId: com.atlassian.confluence.plugins.restapi.resources.UserWatchResource.addContentWatcher_post\n      tags:\n      - User\n      summary: Add content watcher\n      parameters:\n      - schema:\n          type: string\n        description: The ID of the content to add the watcher to.\n        required: true\n        name: contentId\n        in: path\n      - description: |-\n          This parameter is no longer available and will be removed from the documentation soon.\n          Use `accountId` instead.\n          See the [deprecation notice](/cloud/confluence/deprecation-notice-user-privacy-api-migration-guide/) for details.\n        schema:\n          type: string\n        name: key\n        required: false\n        in: query\n      - in: query\n        required: false\n        name: username\n        description: |-\n          This parameter is no longer available and will be removed from the documentation soon.\n          Use `accountId` instead.\n          See the [deprecation notice](/cloud/confluence/deprecation-notice-user-privacy-api-migration-guide/) for details.\n        schema:\n          type: string\n      - required: true\n        in: query\n        name: accountId\n        description: |-\n          The `accountId` of the user to be added as a watcher. The accountId uniquely identifies the user across all Atlassian products.\n          For example, `384093:32b4d9w0-f6a5-3535-11a3-9c8c88d10192`.\n        schema:\n          type: string\n      description: |-\n        Adds a user as a watcher to a piece of content. Choose the user by doing\n        one of the following:\n\n        - Specify a user via a query parameter: Use the `accountId` to identify the user.\n        - Do not specify a user: The currently logged-in user will be used.\n\n        Note, you must add the `X-Atlassian-Token: no-check` header when making a\n        request, as this operation has XSRF protection.\n\n        **[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\n        'Confluence Administrator' global permission if specifying a user, otherwise\n        permission to access the Confluence site ('Can use' global permission).\n      responses:\n        '204':\n          description: |-\n            Returned if the watcher was successfully created. No response body is\n            returned.\n        '403':\n          description: |-\n            Returned if;\n\n            - The `X-Atlassian-Token: no-check` header is not specified.\n            - The calling user does not have permission to view the\n            content.\n            - A user is specified via a query parameter and the calling user is\n            not a Confluence administrator.\n            - No content exists for the specified `contentId`.\n        '404':\n          description: Returned if no `contentId` is specified.\n      security:\n      - oAuthDefinitions:\n        - write:confluence-content\n      x-atlassian-connect-scope: WRITE\n  \"/api/relation/{relationName}/from/{sourceType}/{sourceKey}/to/{targetType}\":\n    get:\n      summary: Find target entities related to a source entity\n      tags:\n      - Relation\n      operationId: com.atlassian.confluence.plugins.restapi.resources.RelationResource.findTargetFromSource_get\n      description: |-\n        Returns all target entities that have a particular relationship to the\n        source entity. Note, relationships are one way.\n\n        For example, the following method finds all content that the current user\n        has an 'ignore' relationship with:\n        `GET https://your-domain.atlassian.net/wiki/rest/api/relation/ignore/from/user/current/to/content`\n        Note, 'ignore' is an example custom relationship type.\n\n        **[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\n        Permission to view both the target entity and source entity.\n      parameters:\n      - description: |-\n          The name of the relationship. This method supports relationships created via\n          [Create relationship](#api-relation-relationName-from-sourceType-sourceKey-to-targetType-targetKey-put).\n          Note, this method does not support 'favourite' relationships.\n        schema:\n          type: string\n        in: path\n        required: true\n        name: relationName\n      - schema:\n          enum:\n          - user\n          - content\n          - space\n          type: string\n        description: The source entity type of the relationship.\n        required: true\n        name: sourceType\n        in: path\n      - schema:\n          type: string\n        description: |-\n          The identifier for the source entity:\n\n          - If `sourceType` is `user`, then specify either `current` (logged-in user), the user key of the user, or\n          the account ID of the user. Note that the user key has been deprecated in favor of the account ID for this parameter. See the\n          [migration guide](https://developer.atlassian.com/cloud/confluence/deprecation-notice-user-privacy-api-migration-guide/)\n          for details.\n          - If `sourceType` is 'content', then specify the content ID.\n          - If `sourceType` is 'space', then specify the space key.\n        required: true\n        in: path\n        name: sourceKey\n      - name: targetType\n        required: true\n        in: path\n        description: The target entity type of the relationship.\n        schema:\n          enum:\n          - user\n          - content\n          - space\n          type: string\n      - schema:\n          type: string\n        description: |-\n          The status of the source. This parameter is only used when the\n          `sourceType` is 'content'.\n        in: query\n        required: false\n        name: sourceStatus\n      - description: |-\n          The status of the target. This parameter is only used when the\n          `targetType` is 'content'.\n        schema:\n          type: string\n        name: targetStatus\n        required: false\n        in: query\n      - description: |-\n          The version of the source. This parameter is only used when the\n          `sourceType` is 'content' and the `sourceStatus` is 'historical'.\n        schema:\n          format: int32\n          type: integer\n        required: false\n        name: sourceVersion\n        in: query\n      - in: query\n        required: false\n        name: targetVersion\n        schema:\n          format: int32\n          type: integer\n        description: |-\n          The version of the target. This parameter is only used when the\n          `targetType` is 'content' and the `targetStatus` is 'historical'.\n      - style: form\n        name: expand\n        required: false\n        in: query\n        schema:\n          type: array\n          items:\n            type: string\n            enum:\n            - relationData\n            - source\n            - target\n        description: |-\n          A multi-value parameter indicating which properties of the response\n          object to expand.\n\n          - `relationData` returns information about the relationship, such as\n          who created it and when it was created.\n          - `source` returns the source entity.\n          - `target` returns the target entity.\n      - schema:\n          format: int32\n          minimum: 0\n          type: integer\n          default: 0\n        description: The starting index of the returned relationships.\n        name: start\n        required: false\n        in: query\n      - schema:\n          minimum: 0\n          format: int32\n          default: 25\n          type: integer\n        description: |-\n          The maximum number of relationships to return per page.\n          Note, this may be restricted by fixed system limits.\n        required: false\n        in: query\n        name: limit\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                \"$ref\": \"#/components/schemas/RelationArray\"\n          description: Returned if the requested relationships are returned.\n        '403':\n          description: |-\n            Returned if the user does not have permission to view the\n            relationships.\n        '404':\n          description: Returned if the target entity does not exist.\n      x-atlassian-connect-scope: READ\n      security:\n      - oAuthDefinitions:\n        - read:confluence-content.summary\n  \"/api/user/watch/label/{labelName}\":\n    delete:\n      operationId: com.atlassian.confluence.plugins.restapi.resources.UserWatchResource.removeLabelWatcher_delete\n      summary: Remove label watcher\n      tags:\n      - User\n      parameters:\n      - required: true\n        name: labelName\n        in: path\n        description: The name of the label to remove the watcher from.\n        schema:\n          type: string\n      - required: false\n        name: key\n        in: query\n        description: |-\n          This parameter is no longer available and will be removed from the documentation soon.\n          Use `accountId` instead.\n          See the [deprecation notice](/cloud/confluence/deprecation-notice-user-privacy-api-migration-guide/) for details.\n        schema:\n          type: string\n      - name: username\n        required: false\n        in: query\n        description: |-\n          This parameter is no longer available and will be removed from the documentation soon.\n          Use `accountId` instead.\n          See the [deprecation notice](/cloud/confluence/deprecation-notice-user-privacy-api-migration-guide/) for details.\n        schema:\n          type: string\n      - in: query\n        required: true\n        name: accountId\n        description: |-\n          The `accountId` of the user to be removed as a watcher. The accountId uniquely identifies the user across all Atlassian products.\n          For example, `384093:32b4d9w0-f6a5-3535-11a3-9c8c88d10192`.\n        schema:\n          type: string\n      description: |-\n        Removes a user as a watcher from a label. Choose the user by doing one of\n        the following:\n\n        - Specify a user via a query parameter: Use the `accountId` to identify the user.\n        - Do not specify a user: The currently logged-in user will be used.\n\n        **[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\n        'Confluence Administrator' global permission if specifying a user, otherwise\n        permission to access the Confluence site ('Can use' global permission).\n      responses:\n        '204':\n          description: |-\n            Returned if the watcher was successfully deleted. No response body is\n            returned.\n        '403':\n          description: |-\n            Returned if;\n\n            - The `X-Atlassian-Token: no-check` header is not specified.\n            - A user is specified via a query parameter and the calling user is\n            not a Confluence administrator.\n            - No label exists for the specified `labelName`.\n        '404':\n          description: Returned if no `labelName` is specified.\n      security:\n      - oAuthDefinitions:\n        - write:confluence-content\n      x-atlassian-connect-scope: DELETE\n    get:\n      x-atlassian-connect-scope: READ\n      security:\n      - oAuthDefinitions:\n        - read:confluence-content.summary\n      responses:\n        '200':\n          description: Returned if the requested watch status is returned.\n          content:\n            application/json:\n              schema:\n                \"$ref\": \"#/components/schemas/UserWatch\"\n        '403':\n          description: |-\n            Returned if;\n\n            - A user is specified via a query parameter and the calling user is\n            not a Confluence administrator.\n            - No label exists for the specified `labelName`.\n        '404':\n          description: Returned if no `labelName` is specified.\n      description: |-\n        Returns whether a user is watching a label. Choose the user by doing one\n        of the following:\n\n        - Specify a user via a query parameter: Use the `accountId` to identify the user.\n        - Do not specify a user: The currently logged-in user will be used.\n\n        **[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\n        'Confluence Administrator' global permission if specifying a user, otherwise\n        permission to access the Confluence site ('Can use' global permission).\n      parameters:\n      - description: |-\n          The name of the label to be queried for whether the specified user is\n          watching it.\n        schema:\n          type: string\n        required: true\n        name: labelName\n        in: path\n      - name: key\n        required: false\n        in: query\n        schema:\n          type: string\n        description: |-\n          This parameter is no longer available and will be removed from the documentation soon.\n          Use `accountId` instead.\n          See the [deprecation notice](/cloud/confluence/deprecation-notice-user-privacy-api-migration-guide/) for details.\n      - required: false\n        name: username\n        in: query\n        schema:\n          type: string\n        description: |-\n          This parameter is no longer available and will be removed from the documentation soon.\n          Use `accountId` instead.\n          See the [deprecation notice](/cloud/confluence/deprecation-notice-user-privacy-api-migration-guide/) for details.\n      - in: query\n        required: true\n        name: accountId\n        description: |-\n          The `accountId` of the user to be queried for whether they are watching the label. The accountId uniquely identifies\n          the user across all Atlassian products. For example, `384093:32b4d9w0-f6a5-3535-11a3-9c8c88d10192`.\n        schema:\n          type: string\n      tags:\n      - User\n      summary: Get label watch status\n      operationId: com.atlassian.confluence.plugins.restapi.resources.UserWatchResource.isWatchingLabel_get\n    post:\n      responses:\n        '204':\n          description: |-\n            Returned if the watcher was successfully created. No response body is\n            returned.\n        '403':\n          description: |-\n            Returned if;\n\n            - The `X-Atlassian-Token: no-check` header is not specified.\n            - A user is specified via a query parameter and the calling user is\n            not a Confluence administrator.\n            - No label exists for the specified `labelName`.\n        '404':\n          description: Returned if no `labelName` is specified.\n      x-atlassian-connect-scope: WRITE\n      security:\n      - oAuthDefinitions:\n        - write:confluence-content\n      tags:\n      - User\n      summary: Add label watcher\n      operationId: com.atlassian.confluence.plugins.restapi.resources.UserWatchResource.addLabelWatcher_post\n      description: |-\n        Adds a user as a watcher to a label. Choose the user by doing one of the\n        following:\n\n        - Specify a user via a query parameter: Use the `accountId` to identify the user.\n        - Do not specify a user: The currently logged-in user will be used.\n\n        Note, you must add the `X-Atlassian-Token: no-check` header when making a\n        request, as this operation has XSRF protection.\n\n        **[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\n        'Confluence Administrator' global permission if specifying a user, otherwise\n        permission to access the Confluence site ('Can use' global permission).\n      parameters:\n      - schema:\n          type: string\n        description: The name of the label to add the watcher to.\n        name: labelName\n        required: true\n        in: path\n      - description: |-\n          This parameter is no longer available and will be removed from the documentation soon.\n          Use `accountId` instead.\n          See the [deprecation notice](/cloud/confluence/deprecation-notice-user-privacy-api-migration-guide/) for details.\n        schema:\n          type: string\n        name: key\n        required: false\n        in: query\n      - schema:\n          type: string\n        description: |-\n          This parameter is no longer available and will be removed from the documentation soon.\n          Use `accountId` instead.\n          See the [deprecation notice](/cloud/confluence/deprecation-notice-user-privacy-api-migration-guide/) for details.\n        name: username\n        required: false\n        in: query\n      - required: true\n        name: accountId\n        in: query\n        description: |-\n          The `accountId` of the user to be added as a watcher. The accountId uniquely identifies the user across all Atlassian products.\n          For example, `384093:32b4d9w0-f6a5-3535-11a3-9c8c88d10192`.\n        schema:\n          type: string\n  \"/api/group/{groupName}/member\":\n    get:\n      parameters:\n      - required: true\n        name: groupName\n        in: path\n        schema:\n          type: string\n        description: The name of the group to be queried for its members.\n      - name: start\n        required: false\n        in: query\n        schema:\n          format: int32\n          minimum: 0\n          type: integer\n          default: 0\n        description: The starting index of the returned users.\n      - description: |-\n          The maximum number of users to return per page.\n          Note, this may be restricted by fixed system limits.\n        schema:\n          type: integer\n          default: 200\n          minimum: 0\n          format: int32\n        in: query\n        required: false\n        name: limit\n      description: |-\n        Returns the users that are members of a group.\n\n        **[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\n        Permission to access the Confluence site ('Can use' global permission).\n      x-atlassian-connect-scope: READ\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                \"$ref\": \"#/components/schemas/UserArrayWithLinks\"\n          description: Returned if the requested users are returned.\n        '403':\n          description: Returned if the calling user does not have permission to view\n            users.\n      operationId: com.atlassian.confluence.plugins.restapi.resources.GroupResource.getGroupMembers_get\n      summary: Get group members\n      tags:\n      - Group\n  \"/api/content/{id}/restriction/byOperation/{operationKey}/group/{groupName}\":\n    put:\n      responses:\n        '200':\n          description: |-\n            Returned if the group is added to the content restriction. The response\n            body will be empty.\n        '404':\n          description: |-\n            Returned if;\n\n            - There is no content with the given ID.\n            - The calling user does not have permission to view the content.\n            - An invalid operation or group is specified.\n      x-atlassian-connect-scope: WRITE\n      security:\n      - oAuthDefinitions:\n        - write:confluence-content\n      summary: Add group to content restriction\n      tags:\n      - Content\n      operationId: com.atlassian.confluence.plugins.restapi.resources.ContentRestrictionResource.addGroupToContentRestriction_put\n      description: |-\n        Adds a group to a content restriction. That is, grant read or update\n        permission to the group for a piece of content.\n\n        **[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\n        Permission to edit the content.\n      parameters:\n      - schema:\n          type: string\n        description: The ID of the content that the restriction applies to.\n        required: true\n        in: path\n        name: id\n      - schema:\n          enum:\n          - read\n          - update\n          type: string\n        description: The operation that the restriction applies to.\n        required: true\n        in: path\n        name: operationKey\n      - schema:\n          type: string\n        description: The name of the group to add to the content restriction.\n        required: true\n        in: path\n        name: groupName\n    delete:\n      description: |-\n        Removes a group from a content restriction. That is, remove read or update\n        permission for the group for a piece of content.\n\n        **[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\n        Permission to edit the content.\n      parameters:\n      - in: path\n        required: true\n        name: id\n        schema:\n          type: string\n        description: The ID of the content that the restriction applies to.\n      - required: true\n        in: path\n        name: operationKey\n        description: The operation that the restriction applies to.\n        schema:\n          enum:\n          - read\n          - update\n          type: string\n      - description: The name of the group to remove from the content restriction.\n        schema:\n          type: string\n        required: true\n        name: groupName\n        in: path\n      tags:\n      - Content\n      summary: Remove group from content restriction\n      operationId: com.atlassian.confluence.plugins.restapi.resources.ContentRestrictionResource.removeGroupFromContentRestriction_delete\n      x-atlassian-connect-scope: DELETE\n      security:\n      - oAuthDefinitions:\n        - write:confluence-content\n      responses:\n        '200':\n          description: |-\n            Returned if the group is removed from the content restriction. The response\n            body will be empty.\n        '404':\n          description: |-\n            Returned if;\n\n            - There is no content with the given ID.\n            - The calling user does not have permission to view the content.\n            - The restriction to be deleted does not exist.\n    get:\n      parameters:\n      - description: The ID of the content that the restriction applies to.\n        schema:\n          type: string\n        name: id\n        required: true\n        in: path\n      - schema:\n          type: string\n          enum:\n          - read\n          - update\n        description: The operation that the restriction applies to.\n        name: operationKey\n        required: true\n        in: path\n      - required: true\n        in: path\n        name: groupName\n        schema:\n          type: string\n        description: |-\n          The name of the group to be queried for whether the content restriction\n          applies to it.\n      description: |-\n        Returns whether the specified content restriction applies to a group.\n        For example, if a page with `id=123` has a `read` restriction for the `admins` group,\n        the following request will return `true`:\n\n        `https://your-domain.atlassian.net/wiki/rest/api/content/123/restriction/byOperation/read/group/admins`\n\n        Note that a response of `true` does not guarantee that the group can view the page, as it does not account for\n        account-inherited restrictions, space permissions, or even product access. For more\n        information, see [Confluence permissions](https://confluence.atlassian.com/x/_AozKw).\n\n        **[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\n        Permission to view the content.\n      operationId: com.atlassian.confluence.plugins.restapi.resources.ContentRestrictionResource.getContentRestrictionStatusForGroup_get\n      tags:\n      - Content\n      summary: Get content restriction status for group\n      security:\n      - oAuthDefinitions:\n        - read:confluence-content.all\n      x-atlassian-connect-scope: READ\n      responses:\n        '200':\n          description: |-\n            Returns true if the content restriction applies to the group. The response\n            will not return a response body.\n        '404':\n          description: |-\n            Returned if;\n\n            - There is no content with the given ID.\n            - The calling user does not have permission to view the content.\n            - An invalid operation or group is specified.\nservers:\n- url: \"//your-domain.atlassian.net/wiki/rest\"\ncomponents:\n  securitySchemes:\n    oAuthDefinitions:\n      description: This API uses OAuth 2 with the authorizationCode grant flow.\n      flows:\n        authorizationCode:\n          scopes:\n            write:confluence-file: Upload attachments.\n            write:confluence-space: Create, update and delete space information.\n            read:confluence-props: Read content properties.\n            write:confluence-props: Write content properties.\n            read:confluence-content.summary: Read a summary of the content, which\n              is the content without expansions. Note, APIs using this scope may also\n              return data allowed by read:confluence-space.summary. However, this\n              scope is not a substitute for read:confluence-space.summary.\n            manage:confluence-configuration: Manage global settings.\n            read:confluence-space.summary: Read a summary of space information without\n              expansions.\n            read:confluence-content.all: Read all content, including content body\n              (expansions permitted). Note, APIs using this scope may also return\n              data allowed by read:confluence-space.summary. However, this scope is\n              not a substitute for read:confluence-space.summary.\n            search:confluence: Search Confluence. Note, APIs using this scope may\n              also return data allowed by read:confluence-space.summary and read:confluence-content.summary.\n              However, this scope is not a substitute for read:confluence-space.summary\n              or read:confluence-content.summary.\n            write:confluence-content: Permits the creation of pages, blogs, comments\n              and questions.\n          authorizationUrl: https://auth.atlassian.com/authorize\n          tokenUrl: https://auth.atlassian.com/oauth/token\n      type: oauth2\n  requestBodies:\n    com.atlassian.confluence.plugins.restapi.resources.AttachmentResource.createAttachments_post:\n      content:\n        multipart/form-data:\n          schema:\n            properties:\n              comment:\n                type: string\n                description: |-\n                  The comment for the attachment that is being added.\n                  If you specify a comment, then every file must have a comment and\n                  the comments must be in the same order as the files. Alternatively,\n                  don't specify any comments.\n                format: binary\n              minorEdit:\n                type: string\n                format: binary\n                description: |-\n                  If `minorEdits` is set to 'true', no notification email or activity stream\n                  will be generated when the attachment is added to the content.\n              file:\n                type: string\n                description: |-\n                  The relative location and name of the attachment to be added to\n                  the content.\n                format: binary\n            required:\n            - file\n            - minorEdit\n            type: object\n    ContentBlueprintDraft:\n      required: true\n      content:\n        application/json:\n          schema:\n            \"$ref\": \"#/components/schemas/ContentBlueprintDraft\"\n  schemas:\n    SpaceSettingsUpdate:\n      type: object\n      additionalProperties: false\n      properties:\n        routeOverrideEnabled:\n          description: |-\n            Defines whether an override for the space home should be used. This is\n            used in conjunction with a space theme provided by an app. For\n            example, if this property is set to true, a theme can display a page\n            other than the space homepage when users visit the root URL for a\n            space. This property allows apps to provide content-only theming\n            without overriding the space home.\n          type: boolean\n    DynamicModulesErrorMessage:\n      example:\n        message: The request is not from a Connect app.\n      properties:\n        message:\n          type: string\n          description: The error message.\n      additionalProperties: false\n      type: object\n      required:\n      - message\n    SpaceDescription:\n      type: object\n      required:\n      - value\n      - representation\n      - embeddedContent\n      additionalProperties: false\n      properties:\n        value:\n          type: string\n        embeddedContent:\n          items:\n            type: object\n            additionalProperties: true\n          type: array\n        representation:\n          enum:\n          - plain\n          - view\n          type: string\n    ContentPropertyCreateNoKey:\n      additionalProperties: false\n      required:\n      - value\n      type: object\n      properties:\n        value:\n          \"$ref\": \"#/components/schemas/PropertyValue\"\n    AuditRecord:\n      required:\n      - author\n      - remoteAddress\n      - creationDate\n      - summary\n      - description\n      - category\n      - sysAdmin\n      - affectedObject\n      - changedValues\n      - associatedObjects\n      type: object\n      additionalProperties: false\n      properties:\n        associatedObjects:\n          items:\n            \"$ref\": \"#/components/schemas/AffectedObject\"\n          type: array\n        category:\n          type: string\n        affectedObject:\n          \"$ref\": \"#/components/schemas/AffectedObject\"\n        description:\n          type: string\n        author:\n          properties:\n            username:\n              type: string\n              description: This property has been deprecated and will be removed soon.\n            type:\n              default: user\n              type: string\n              enum:\n              - user\n            operations:\n              type: object\n              default:\n            userKey:\n              type: string\n              description: This property has been deprecated and will be removed soon.\n            displayName:\n              type: string\n          type: object\n          required:\n          - type\n          - displayName\n          - operations\n          - username\n          - userKey\n          additionalProperties: false\n        summary:\n          type: string\n        remoteAddress:\n          type: string\n        creationDate:\n          description: The creation date-time of the audit record, as a timestamp.\n          format: int64\n          type: integer\n        sysAdmin:\n          type: boolean\n        changedValues:\n          items:\n            \"$ref\": \"#/components/schemas/ChangedValue\"\n          type: array\n    ScreenLookAndFeel:\n      properties:\n        backgroundColor:\n          type: string\n        gutterBottom:\n          type: string\n        backgroundSize:\n          type: string\n        background:\n          type: string\n        gutterLeft:\n          type: string\n        gutterRight:\n          type: string\n        backgroundImage:\n          type: string\n        gutterTop:\n          type: string\n      additionalProperties: false\n      required:\n      - background\n      - backgroundColor\n      - backgroundImage\n      - backgroundSize\n      - gutterTop\n      - gutterRight\n      - gutterBottom\n      - gutterLeft\n      type: object\n    ContainerSummary:\n      properties:\n        title:\n          type: string\n        displayUrl:\n          type: string\n      type: object\n      required:\n      - title\n      - displayUrl\n      additionalProperties: false\n    ContentTemplateArray:\n      type: object\n      required:\n      - results\n      - start\n      - limit\n      - size\n      - _links\n      additionalProperties: false\n      properties:\n        size:\n          type: integer\n          format: int32\n        start:\n          format: int32\n          type: integer\n        limit:\n          format: int32\n          type: integer\n        results:\n          type: array\n          items:\n            \"$ref\": \"#/components/schemas/ContentTemplate\"\n        _links:\n          \"$ref\": \"#/components/schemas/GenericLinks\"\n    Task:\n      properties:\n        id:\n          format: int64\n          type: integer\n        dueDate:\n          format: int64\n          type: integer\n        assignee:\n          type: string\n        title:\n          type: string\n        globalId:\n          type: integer\n          format: int64\n        createDate:\n          format: int64\n          type: integer\n        contentId:\n          type: integer\n          format: int64\n        creator:\n          type: string\n        body:\n          type: string\n        description:\n          type: string\n        completeDate:\n          type: integer\n          format: int64\n        status:\n          type: string\n        completeUser:\n          type: string\n        updateDate:\n          format: int64\n          type: integer\n      required:\n      - globalId\n      - id\n      - contentId\n      - status\n      - creator\n      - createDate\n      type: object\n      additionalProperties: false\n    AttachmentUpdate:\n      properties:\n        metadata:\n          additionalProperties: false\n          type: object\n          properties:\n            comment:\n              description: The comment for this update.\n              type: string\n            mediaType:\n              type: string\n              description: The media type of the attachment, e.g. 'img/jpg'.\n        container:\n          additionalProperties: false\n          type: object\n          required:\n          - id\n          - type\n          properties:\n            id:\n              type: string\n              description: The `id` of the parent content.\n            type:\n              type: string\n              description: |-\n                The content type. You can only attach attachments to content\n                of type: `page`, `blogpost`.\n          description: The new content to attach the attachment to.\n        type:\n          description: Set this to `attachment`.\n          enum:\n          - attachment\n          type: string\n        title:\n          type: string\n          description: The updated name of the attachment.\n          maxLength: 255\n        version:\n          description: |-\n            The attachment version. Set this to the current version number of the\n            attachment. Note, the version number only needs to be incremented when\n            updating the actual attachment, not its properties.\n          properties:\n            number:\n              description: The version number.\n              format: int32\n              type: integer\n          type: object\n          required:\n          - number\n          additionalProperties: false\n        id:\n          type: string\n          description: The ID of the attachment to be updated.\n      additionalProperties: false\n      type: object\n      required:\n      - version\n      - id\n      - type\n    ContentTemplateCreate:\n      description: This object is used to create content templates.\n      properties:\n        description:\n          type: string\n          description: A description of the new template.\n          maxLength: 255\n        templateType:\n          description: The type of the new template. Set to `page`.\n          type: string\n        space:\n          required:\n          - key\n          type: object\n          additionalProperties: false\n          properties:\n            key:\n              type: string\n          description: |-\n            The key for the space of the new template. Only applies to space templates.\n            If the spaceKey is not specified, the template will be created as a global\n            template.\n        body:\n          \"$ref\": \"#/components/schemas/ContentBodyCreate\"\n        name:\n          type: string\n          description: The name of the new template.\n        labels:\n          description: Labels for the new template.\n          items:\n            \"$ref\": \"#/components/schemas/Label\"\n          type: array\n      additionalProperties: false\n      required:\n      - name\n      - templateType\n      - body\n      type: object\n    WatchUser:\n      additionalProperties: false\n      required:\n      - type\n      - profilePicture\n      - displayName\n      - operations\n      - accountId\n      - details\n      type: object\n      properties:\n        profilePicture:\n          \"$ref\": \"#/components/schemas/Icon\"\n        username:\n          type: string\n          description: |-\n            This property is no longer available and will be removed from the documentation soon.\n            Use `accountId` instead.\n            See the [deprecation notice](/cloud/confluence/deprecation-notice-user-privacy-api-migration-guide/) for details.\n        type:\n          type: string\n        displayName:\n          type: string\n        accountId:\n          type: string\n          description: |-\n            The account ID of the user, which uniquely identifies the user across all Atlassian products.\n            For example, `384093:32b4d9w0-f6a5-3535-11a3-9c8c88d10192`.\n        userKey:\n          type: string\n          description: |-\n            This property is no longer available and will be removed from the documentation soon.\n            Use `accountId` instead.\n            See the [deprecation notice](/cloud/confluence/deprecation-notice-user-privacy-api-migration-guide/) for details.\n        operations:\n          items:\n            \"$ref\": \"#/components/schemas/OperationCheckResult\"\n          type: array\n        details:\n          \"$ref\": \"#/components/schemas/UserDetails\"\n      description: |-\n        This essentially the same as the `User` object, but no `_links` property and\n        no `_expandable` property (therefore, different required fields).\n    LongTaskStatus:\n      properties:\n        percentageComplete:\n          format: int32\n          type: integer\n        id:\n          type: string\n        elapsedTime:\n          format: int64\n          type: integer\n        messages:\n          type: array\n          items:\n            \"$ref\": \"#/components/schemas/Message\"\n        successful:\n          type: boolean\n        name:\n          type: object\n          required:\n          - key\n          - args\n          additionalProperties: false\n          properties:\n            args:\n              type: array\n              items:\n                type: object\n            key:\n              type: string\n      required:\n      - id\n      - name\n      - elapsedTime\n      - percentageComplete\n      - successful\n      - messages\n      type: object\n      additionalProperties: false\n    SystemInfoEntity:\n      type: object\n      required:\n      - cloudId\n      - commitHash\n      additionalProperties: false\n      properties:\n        commitHash:\n          type: string\n        cloudId:\n          type: string\n    SpaceProperty:\n      properties:\n        space:\n          \"$ref\": \"#/components/schemas/Space\"\n        id:\n          type: integer\n          format: int64\n        key:\n          type: string\n        version:\n          properties:\n            when:\n              format: date-time\n              type: string\n            number:\n              type: integer\n            message:\n              type: string\n            minorEdit:\n              type: boolean\n          additionalProperties: false\n          required:\n          - when\n          - message\n          - number\n          - minorEdit\n          type: object\n        _expandable:\n          properties:\n            space:\n              type: string\n            version:\n              type: string\n          type: object\n        value:\n          type: object\n          additionalProperties: true\n      additionalProperties: false\n      type: object\n      required:\n      - id\n      - key\n      - value\n      - _expandable\n    ContentBodyCreate:\n      properties:\n        representation:\n          description: |-\n            The content format type. Set the value of this property to\n            the name of the format being used, e.g. 'storage'.\n          enum:\n          - view\n          - export_view\n          - styled_view\n          - storage\n          - editor2\n          - anonymous_export_view\n          type: string\n        value:\n          type: string\n          description: The body of the content in the relevant format.\n      description: This object is used when creating or updating content.\n      required:\n      - value\n      - representation\n      type: object\n      additionalProperties: false\n    SpacePropertyUpdate:\n      properties:\n        version:\n          type: object\n          required:\n          - number\n          additionalProperties: false\n          description: The version number of the property.\n          properties:\n            minorEdit:\n              type: boolean\n              default: true\n              description: |-\n                If `minorEdit` is set to 'true', no notification email or activity\n                stream will be generated for the change.\n            number:\n              description: |-\n                The new version for the updated space property. Set this to the\n                current version number incremented by one. To get the current\n                version number, use 'Get space property' and retrieve\n                `version.number`.\n              format: int32\n              type: integer\n        value:\n          description: The value of the property.\n          additionalProperties: true\n          type: object\n      type: object\n      required:\n      - value\n      - version\n      additionalProperties: false\n    Version:\n      properties:\n        _links:\n          \"$ref\": \"#/components/schemas/GenericLinks\"\n        collaborators:\n          \"$ref\": \"#/components/schemas/UsersUserKeys\"\n        friendlyWhen:\n          type: string\n        number:\n          format: int32\n          type: integer\n        content:\n          \"$ref\": \"#/components/schemas/Content\"\n        by:\n          \"$ref\": \"#/components/schemas/User\"\n        message:\n          type: string\n        when:\n          format: date-time\n          type: string\n        _expandable:\n          required:\n          - content\n          - collaborators\n          type: object\n          properties:\n            content:\n              type: string\n            collaborators:\n              type: string\n        minorEdit:\n          type: boolean\n      required:\n      - by\n      - when\n      - friendlyWhen\n      - message\n      - number\n      - minorEdit\n      - _expandable\n      - _links\n      type: object\n      additionalProperties: false\n    WatchArray:\n      properties:\n        _links:\n          \"$ref\": \"#/components/schemas/GenericLinks\"\n        limit:\n          format: int32\n          type: integer\n        size:\n          format: int32\n          type: integer\n        start:\n          format: int32\n          type: integer\n        results:\n          items:\n            \"$ref\": \"#/components/schemas/Watch\"\n          type: array\n      additionalProperties: false\n      required:\n      - results\n      - start\n      - limit\n      - size\n      - _links\n      type: object\n    CopyPageHierarchyRequest:\n      type: object\n      properties:\n        titleOptions:\n          \"$ref\": \"#/components/schemas/CopyPageHierarchyTitleOptions\"\n        copyAttachments:\n          description: If set to `true`, attachments are copied to the destination\n            page.\n          default: false\n          type: boolean\n        copyPermissions:\n          description: If set to `true`, page permissions are copied to the destination\n            page.\n          type: boolean\n          default: false\n        copyCustomContents:\n          description: If set to `true`, custom contents are copied to the destination\n            page.\n          type: boolean\n          default: false\n        copyLabels:\n          description: If set to `true`, labels are copied to the destination page.\n          type: boolean\n          default: false\n        copyProperties:\n          description: If set to `true`, content properties are copied to the destination\n            page.\n          type: boolean\n          default: false\n        destinationPageId:\n          \"$ref\": \"#/components/schemas/ContentId\"\n    AccountIdEmailRecord:\n      properties:\n        accountId:\n          type: string\n        email:\n          type: string\n      additionalProperties: false\n      type: object\n      required:\n      - accountId\n      - email\n    HeaderLookAndFeel:\n      properties:\n        button:\n          \"$ref\": \"#/components/schemas/ButtonLookAndFeel\"\n        primaryNavigation:\n          \"$ref\": \"#/components/schemas/NavigationLookAndFeel\"\n        search:\n          \"$ref\": \"#/components/schemas/SearchFieldLookAndFeel\"\n        secondaryNavigation:\n          \"$ref\": \"#/components/schemas/NavigationLookAndFeel\"\n        backgroundColor:\n          type: string\n      additionalProperties: false\n      type: object\n      required:\n      - backgroundColor\n      - button\n      - primaryNavigation\n      - secondaryNavigation\n      - search\n    AuditRecordCreate:\n      type: object\n      required:\n      - remoteAddress\n      additionalProperties: false\n      properties:\n        author:\n          properties:\n            operations:\n              description: Always defaults to null.\n              enum:\n              -\n              default:\n              type: object\n            type:\n              description: Set to 'user'.\n              default: user\n              type: string\n              enum:\n              - user\n            username:\n              description: This property has been deprecated and will be removed soon.\n              type: string\n            displayName:\n              description: The name that is displayed on the audit log in the Confluence\n                UI.\n              type: string\n            userKey:\n              description: This property has been deprecated and will be removed soon.\n              type: string\n          description: |-\n            The user that actioned the event. If `author` is not specified, then all\n            `author` properties will be set to null/empty, except for `type` which\n            will be set to 'user'.\n          type: object\n          required:\n          - type\n          additionalProperties: false\n        summary:\n          type: string\n          description: |-\n            The summary of the event, which is displayed in the 'Change' column on\n            the audit log in the Confluence UI.\n        remoteAddress:\n          description: The IP address of the computer where the event was initiated\n            from.\n          type: string\n        associatedObjects:\n          description: |-\n            Objects that were associated with the event. For example, if the event\n            was a space permission change then the associated object would be the\n            space.\n          type: array\n          items:\n            \"$ref\": \"#/components/schemas/AffectedObject\"\n        category:\n          type: string\n          description: |-\n            The category of the event, which is displayed in the 'Event type' column\n            on the audit log in the Confluence UI.\n        affectedObject:\n          \"$ref\": \"#/components/schemas/AffectedObject\"\n        description:\n          type: string\n          description: |-\n            A long description of the event, which is displayed in the 'Description'\n            field on the audit log in the Confluence UI.\n        changedValues:\n          description: The values that were changed in the event.\n          items:\n            \"$ref\": \"#/components/schemas/ChangedValue\"\n          type: array\n        sysAdmin:\n          description: Indicates whether the event was actioned by a system administrator.\n          default: false\n          type: boolean\n        creationDate:\n          type: integer\n          format: int64\n          description: |-\n            The creation date-time of the audit record, as a timestamp. This is converted\n            to a date-time display in the Confluence UI. If the `creationDate` is not\n            specified, then it will be set to the timestamp for the current date-time.\n    Breadcrumb:\n      properties:\n        separator:\n          type: string\n        url:\n          type: string\n        label:\n          type: string\n      required:\n      - label\n      - url\n      - separator\n      type: object\n      additionalProperties: false\n    VersionRestore:\n      required:\n      - operationKey\n      - params\n      type: object\n      additionalProperties: false\n      properties:\n        params:\n          properties:\n            versionNumber:\n              type: integer\n              description: The version number to be restored.\n              format: int32\n            message:\n              description: Description for the version.\n              type: string\n          additionalProperties: false\n          type: object\n          required:\n          - versionNumber\n          - message\n        operationKey:\n          enum:\n          - RESTORE\n          type: string\n          description: Set to 'RESTORE'.\n    GroupArray:\n      properties:\n        limit:\n          type: integer\n          format: int32\n        size:\n          type: integer\n          format: int32\n        start:\n          format: int32\n          type: integer\n        results:\n          items:\n            \"$ref\": \"#/components/schemas/Group\"\n          type: array\n      required:\n      - results\n      - start\n      - limit\n      - size\n      type: object\n      additionalProperties: false\n    CQLPersonalDataConvertedQueries:\n      properties:\n        queryStrings:\n          description: |-\n            The list of converted CQL query strings with account IDs in\n            place of user identifiers.\n          items:\n            type: string\n          type: array\n      description: The converted CQL queries.\n      additionalProperties: false\n      type: object\n      required:\n      - queryStrings\n    SpacePropertyCreateNoKey:\n      additionalProperties: false\n      required:\n      - value\n      type: object\n      properties:\n        value:\n          \"$ref\": \"#/components/schemas/PropertyValue\"\n    Embeddable:\n      type: object\n    PropertyValue:\n      description: |-\n        The value of the property. This can be empty or a complex object.\n        For example,\n        ```\n        \"value\": {\n          \"example1\": \"value\",\n          \"example2\": true,\n          \"example3\": 123\n        }\n        ```\n      type: object\n      additionalProperties: true\n    ContentTemplateUpdate:\n      description: This object is used to update content templates.\n      properties:\n        labels:\n          items:\n            \"$ref\": \"#/components/schemas/Label\"\n          type: array\n          description: Labels for the template.\n        name:\n          type: string\n          description: |-\n            The name of the template. Set to the current `name` if this field is\n            not being updated.\n        templateId:\n          type: string\n          description: The ID of the template being updated.\n        body:\n          \"$ref\": \"#/components/schemas/ContentBodyCreate\"\n        space:\n          type: object\n          required:\n          - key\n          additionalProperties: false\n          description: |-\n            The key for the space of the template. Required if the template is a\n            space template. Set this to the current `space.key`.\n          properties:\n            key:\n              type: string\n        description:\n          maxLength: 100\n          description: A description of the template.\n          type: string\n        templateType:\n          description: The type of the template. Set to `page`.\n          type: string\n          enum:\n          - page\n      type: object\n      required:\n      - templateId\n      - name\n      - templateType\n      - body\n      additionalProperties: false\n    ContentRestriction:\n      required:\n      - operation\n      - _expandable\n      - _links\n      type: object\n      additionalProperties: false\n      properties:\n        _expandable:\n          properties:\n            content:\n              type: string\n            restrictions:\n              type: string\n          additionalProperties: false\n          type: object\n        content:\n          \"$ref\": \"#/components/schemas/Content\"\n        operation:\n          type: string\n          enum:\n          - administer\n          - copy\n          - create\n          - delete\n          - export\n          - move\n          - purge\n          - purge_version\n          - read\n          - restore\n          - update\n          - use\n        restrictions:\n          properties:\n            _expandable:\n              properties:\n                user:\n                  type: string\n                group:\n                  type: string\n              type: object\n              additionalProperties: false\n            user:\n              \"$ref\": \"#/components/schemas/UserArray\"\n            group:\n              \"$ref\": \"#/components/schemas/GroupArray\"\n          type: object\n          additionalProperties: false\n        _links:\n          \"$ref\": \"#/components/schemas/GenericLinks\"\n    SpaceDescriptionCreate:\n      additionalProperties: false\n      type: object\n      required:\n      - plain\n      description: |-\n        The description of the new/updated space. Note, only the 'plain' representation\n        can be used for the description when creating or updating a space.\n      properties:\n        plain:\n          properties:\n            value:\n              type: string\n              description: The space description.\n            representation:\n              type: string\n              description: Set to 'plain'.\n          type: object\n    UserArray:\n      type: object\n      required:\n      - results\n      - start\n      - limit\n      - size\n      properties:\n        results:\n          items:\n            \"$ref\": \"#/components/schemas/User\"\n          type: array\n        limit:\n          format: int32\n          type: integer\n        size:\n          format: int32\n          type: integer\n        start:\n          type: integer\n          format: int32\n    ConnectModules:\n      example:\n        adminPages:\n        - url: \"/my-admin-page\"\n          name:\n            value: My Admin Page\n          key: my-admin-page\n        webItems:\n        - location: system.admin/globalsettings\n          url: \"/my-web-item\"\n          name:\n            value: My Web Item\n          key: my-webitem\n      description: |-\n        A list of app modules in the same format as the `modules` property in the\n        [app descriptor](https://developer.atlassian.com/cloud/confluence/app-descriptor/).\n      type: object\n      additionalProperties:\n        type: array\n        items:\n          \"$ref\": \"#/components/schemas/ConnectModule\"\n        description: A list of modules by type.\n    BlueprintTemplate:\n      required:\n      - templateId\n      - originalTemplate\n      - referencingBlueprint\n      - name\n      - description\n      - labels\n      - templateType\n      - _expandable\n      - _links\n      type: object\n      additionalProperties: false\n      properties:\n        name:\n          type: string\n        labels:\n          type: array\n          items:\n            \"$ref\": \"#/components/schemas/Label\"\n        templateType:\n          type: string\n        description:\n          type: string\n        body:\n          \"$ref\": \"#/components/schemas/ContentBody\"\n        _links:\n          \"$ref\": \"#/components/schemas/GenericLinks\"\n        referencingBlueprint:\n          type: string\n        originalTemplate:\n          properties:\n            moduleKey:\n              type: string\n            pluginKey:\n              type: string\n          additionalProperties: false\n          required:\n          - pluginKey\n          - moduleKey\n          type: object\n        _expandable:\n          properties:\n            body:\n              type: string\n          type: object\n          additionalProperties: false\n        templateId:\n          type: string\n    ContentChildType:\n      description: |-\n        Shows whether a piece of content has attachments, comments, or child pages.\n        Note, this doesn't actually contain the child objects.\n      properties:\n        comment:\n          type: object\n          required:\n          - value\n          - _links\n          additionalProperties: false\n          properties:\n            value:\n              type: boolean\n            _links:\n              \"$ref\": \"#/components/schemas/GenericLinks\"\n        attachment:\n          properties:\n            _links:\n              \"$ref\": \"#/components/schemas/GenericLinks\"\n            value:\n              type: boolean\n          additionalProperties: false\n          type: object\n          required:\n          - value\n          - _links\n        _expandable:\n          type: object\n          additionalProperties: false\n          properties:\n            attachment:\n              type: string\n            comment:\n              type: string\n            all:\n              type: string\n            page:\n              type: string\n        page:\n          required:\n          - value\n          - _links\n          type: object\n          additionalProperties: false\n          properties:\n            value:\n              type: boolean\n            _links:\n              \"$ref\": \"#/components/schemas/GenericLinks\"\n      type: object\n      required:\n      - _expandable\n      additionalProperties: false\n    ContentChildren:\n      properties:\n        page:\n          \"$ref\": \"#/components/schemas/ContentArray\"\n        _links:\n          \"$ref\": \"#/components/schemas/GenericLinks\"\n        attachment:\n          \"$ref\": \"#/components/schemas/ContentArray\"\n        comment:\n          \"$ref\": \"#/components/schemas/ContentArray\"\n        _expandable:\n          type: object\n          additionalProperties: false\n          properties:\n            comment:\n              type: string\n            attachment:\n              type: string\n            page:\n              type: string\n      additionalProperties: false\n      type: object\n      required:\n      - _expandable\n      - _links\n    Group:\n      additionalProperties: false\n      required:\n      - type\n      - name\n      - _links\n      type: object\n      properties:\n        name:\n          type: string\n        type:\n          default: group\n          type: string\n          enum:\n          - group\n        _links:\n          \"$ref\": \"#/components/schemas/GenericLinks\"\n    Icon:\n      type: object\n      required:\n      - path\n      - width\n      - height\n      - isDefault\n      additionalProperties: false\n      description: This object represents an icon. If used as a profilePicture, this\n        may be returned as null, depending on the user's privacy setting.\n      properties:\n        isDefault:\n          type: boolean\n        width:\n          format: int32\n          type: integer\n        path:\n          type: string\n        height:\n          format: int32\n          type: integer\n    LookAndFeelUpdated:\n      description: Look and feel settings returned after an update.\n      allOf:\n      - \"$ref\": \"#/components/schemas/LookAndFeel\"\n      - properties:\n          _links:\n            \"$ref\": \"#/components/schemas/GenericLinks\"\n        additionalProperties: false\n        required:\n        - _links\n        type: object\n    SpacePropertyCreate:\n      properties:\n        value:\n          \"$ref\": \"#/components/schemas/PropertyValue\"\n        key:\n          type: string\n          description: The key of the new property.\n          maximum: 255\n      required:\n      - key\n      - value\n      type: object\n      additionalProperties: false\n    NavigationLookAndFeel:\n      properties:\n        hoverOrFocus:\n          properties:\n            backgroundColor:\n              type: string\n            color:\n              type: string\n          type: object\n          required:\n          - backgroundColor\n          - color\n          additionalProperties: false\n        color:\n          type: string\n      type: object\n      required:\n      - color\n      - hoverOrFocus\n    ContentHistory:\n      properties:\n        createdBy:\n          \"$ref\": \"#/components/schemas/User\"\n        nextVersion:\n          \"$ref\": \"#/components/schemas/Version\"\n        previousVersion:\n          \"$ref\": \"#/components/schemas/Version\"\n        lastUpdated:\n          \"$ref\": \"#/components/schemas/Version\"\n        contributors:\n          type: object\n          properties:\n            publishers:\n              \"$ref\": \"#/components/schemas/UsersUserKeys\"\n        _links:\n          \"$ref\": \"#/components/schemas/GenericLinks\"\n        latest:\n          type: boolean\n        _expandable:\n          additionalProperties: false\n          type: object\n          properties:\n            lastUpdated:\n              type: string\n            contributors:\n              type: string\n            nextVersion:\n              type: string\n            previousVersion:\n              type: string\n        createdDate:\n          type: string\n          format: date-time\n      additionalProperties: false\n      required:\n      - latest\n      - createdBy\n      - createdDate\n      type: object\n    SearchFieldLookAndFeel:\n      properties:\n        color:\n          type: string\n        backgroundColor:\n          type: string\n      type: object\n      required:\n      - backgroundColor\n      - color\n      additionalProperties: false\n    SpacePermission:\n      required:\n      - subjects\n      - operation\n      - anonymousAccess\n      - unlicensedAccess\n      type: object\n      additionalProperties: false\n      description: |-\n        This object represents a permission for given space. Permissions consist of\n        at least one operation object with an accompanying subjects object.\n\n        The following combinations of `operation` and `targetType` values are\n        valid for the `operation` object:\n\n          - 'create': 'page', 'blogpost', 'comment', 'attachment'\n          - 'read': 'space'\n          - 'delete': 'page', 'blogpost', 'comment', 'attachment'\n          - 'export': 'space'\n          - 'administer': 'space'\n      properties:\n        operation:\n          \"$ref\": \"#/components/schemas/OperationCheckResult\"\n        unlicensedAccess:\n          description: |-\n            Grants access to unlicensed users from JIRA Service Desk when used\n            with the 'read space' operation.\n          type: boolean\n          default: false\n        anonymousAccess:\n          description: Grant anonymous users permission to use the operation.\n          type: boolean\n          default: false\n        subjects:\n          additionalProperties: false\n          type: object\n          required:\n          - _expandable\n          description: The users and/or groups that the permission applies to.\n          properties:\n            user:\n              additionalProperties: false\n              type: object\n              required:\n              - results\n              - size\n              properties:\n                size:\n                  format: int32\n                  type: integer\n                results:\n                  items:\n                    \"$ref\": \"#/components/schemas/User\"\n                  type: array\n            _expandable:\n              type: object\n              properties:\n                group:\n                  type: string\n                user:\n                  type: string\n            group:\n              type: object\n              required:\n              - results\n              - size\n              additionalProperties: false\n              properties:\n                results:\n                  items:\n                    \"$ref\": \"#/components/schemas/Group\"\n                  type: array\n                size:\n                  format: int32\n                  type: integer\n    OperationCheckResult:\n      description: An operation and the target entity that it applies to, e.g. create\n        page.\n      properties:\n        operation:\n          description: The operation itself.\n          type: string\n          enum:\n          - administer\n          - copy\n          - create\n          - delete\n          - export\n          - move\n          - purge\n          - purge_version\n          - read\n          - restore\n          - update\n          - use\n        targetType:\n          description: The space or content type that the operation applies to.\n          type: string\n          enum:\n          - page\n          - blogpost\n          - comment\n          - attachment\n          - space\n      required:\n      - operation\n      - targetType\n      type: object\n      additionalProperties: false\n    LongTaskStatusArray:\n      properties:\n        size:\n          type: integer\n          format: int32\n        start:\n          type: integer\n          format: int32\n        limit:\n          type: integer\n          format: int32\n        results:\n          items:\n            \"$ref\": \"#/components/schemas/LongTaskStatus\"\n          type: array\n        _links:\n          \"$ref\": \"#/components/schemas/GenericLinks\"\n      required:\n      - results\n      - start\n      - limit\n      - size\n      - _links\n      type: object\n      additionalProperties: false\n    LabelCreate:\n      additionalProperties: false\n      type: object\n      required:\n      - prefix\n      - name\n      properties:\n        prefix:\n          type: string\n          enum:\n          - global\n          - my\n          - team\n          description: The prefix for the label.\n        name:\n          type: string\n          description: The name of the label, which will be shown in the UI.\n    Space:\n      additionalProperties: false\n      type: object\n      required:\n      - id\n      - key\n      - name\n      - type\n      - status\n      - _expandable\n      - _links\n      properties:\n        lookAndFeel:\n          \"$ref\": \"#/components/schemas/LookAndFeel\"\n        status:\n          type: string\n        theme:\n          \"$ref\": \"#/components/schemas/Theme\"\n        description:\n          properties:\n            plain:\n              \"$ref\": \"#/components/schemas/SpaceDescription\"\n            view:\n              \"$ref\": \"#/components/schemas/SpaceDescription\"\n          additionalProperties: false\n          type: object\n        _links:\n          \"$ref\": \"#/components/schemas/GenericLinks\"\n        settings:\n          \"$ref\": \"#/components/schemas/SpaceSettings\"\n        homepage:\n          \"$ref\": \"#/components/schemas/Content\"\n        operations:\n          type: array\n          items:\n            \"$ref\": \"#/components/schemas/OperationCheckResult\"\n        _expandable:\n          type: object\n          properties:\n            permissions:\n              type: string\n            homepage:\n              type: string\n            operations:\n              type: string\n            description:\n              type: string\n            settings:\n              type: string\n            metadata:\n              type: string\n            lookAndFeel:\n              type: string\n            icon:\n              type: string\n            history:\n              type: string\n            theme:\n              type: string\n        permissions:\n          items:\n            \"$ref\": \"#/components/schemas/SpacePermission\"\n          type: array\n        metadata:\n          additionalProperties: false\n          type: object\n          required:\n          - labels\n          properties:\n            labels:\n              \"$ref\": \"#/components/schemas/LabelArray\"\n        icon:\n          \"$ref\": \"#/components/schemas/Icon\"\n        name:\n          type: string\n        type:\n          type: string\n        history:\n          properties:\n            createdDate:\n              type: string\n              format: date-time\n          type: object\n          required:\n          - createdDate\n          additionalProperties: false\n        key:\n          type: string\n        id:\n          type: integer\n          format: int64\n    ContentPropertyArray:\n      properties:\n        _links:\n          \"$ref\": \"#/components/schemas/GenericLinks\"\n        size:\n          format: int32\n          type: integer\n        start:\n          format: int32\n          type: integer\n        limit:\n          format: int32\n          type: integer\n        results:\n          type: array\n          items:\n            \"$ref\": \"#/components/schemas/ContentProperty\"\n      required:\n      - results\n      - start\n      - limit\n      - size\n      - _links\n      type: object\n      additionalProperties: false\n    EmbeddedContent:\n      properties:\n        entityId:\n          type: integer\n          format: int64\n        entity:\n          \"$ref\": \"#/components/schemas/Embeddable\"\n      type: object\n    CopyPageRequest:\n      properties:\n        copyCustomContents:\n          description: If set to `true`, custom contents are copied to the destination\n            page.\n          type: boolean\n          default: false\n        copyAttachments:\n          type: boolean\n          default: false\n          description: If set to `true`, attachments are copied to the destination\n            page.\n        copyPermissions:\n          type: boolean\n          default: false\n          description: If set to `true`, page permissions are copied to the destination\n            page.\n        copyProperties:\n          description: If set to `true`, content properties are copied to the destination\n            page.\n          default: false\n          type: boolean\n        copyLabels:\n          description: If set to `true`, labels are copied to the destination page.\n          type: boolean\n          default: false\n        destination:\n          \"$ref\": \"#/components/schemas/CopyPageRequestDestination\"\n        body:\n          description: If defined, this will replace the body of the destination page.\n          properties:\n            editor2:\n              \"$ref\": \"#/components/schemas/ContentBodyCreate\"\n            storage:\n              \"$ref\": \"#/components/schemas/ContentBodyCreate\"\n          type: object\n          additionalProperties: false\n          minProperties: 1\n          maxProperties: 1\n        pageTitle:\n          description: If defined, this will replace the title of the destination\n            page.\n          type: string\n      required:\n      - destination\n      type: object\n    BulkUserLookup:\n      properties:\n        _expandable:\n          additionalProperties: false\n          type: object\n          properties:\n            operations:\n              type: string\n            details:\n              type: string\n            personalSpace:\n              type: string\n        publicName:\n          type: string\n          description: The public name or nickname of the user. Will always contain\n            a value.\n        accountType:\n          description: The account type of the user, may return empty string if unavailable.\n          type: string\n        email:\n          type: string\n          description: The email address of the user. Depending on the user's privacy\n            setting, this may return an empty string.\n        operations:\n          items:\n            \"$ref\": \"#/components/schemas/OperationCheckResult\"\n          type: array\n        details:\n          \"$ref\": \"#/components/schemas/UserDetails\"\n        personalSpace:\n          \"$ref\": \"#/components/schemas/Space\"\n        username:\n          type: string\n          description: |-\n            This property is no longer available and will be removed from the documentation soon.\n            Use `accountId` instead.\n            See the [deprecation notice](/cloud/confluence/deprecation-notice-user-privacy-api-migration-guide/) for details.\n        profilePicture:\n          \"$ref\": \"#/components/schemas/Icon\"\n        type:\n          type: string\n          enum:\n          - known\n          - unknown\n          - anonymous\n          - user\n        accountId:\n          description: |-\n            The account ID of the user, which uniquely identifies the user across all Atlassian products.\n            For example, `384093:32b4d9w0-f6a5-3535-11a3-9c8c88d10192`.\n          type: string\n        userKey:\n          type: string\n          description: |-\n            This property is no longer available and will be removed from the documentation soon.\n            Use `accountId` instead.\n            See the [deprecation notice](/cloud/confluence/deprecation-notice-user-privacy-api-migration-guide/) for details.\n        _links:\n          \"$ref\": \"#/components/schemas/GenericLinks\"\n        displayName:\n          description: The display name of the user. Depending on the user's privacy\n            setting, this may be the same as publicName.\n          type: string\n      type: object\n      required:\n      - type\n      - accountId\n      - accountType\n      - email\n      - publicName\n      - profilePicture\n      - displayName\n      - _expandable\n      - _links\n      additionalProperties: false\n    LabelArray:\n      type: object\n      required:\n      - results\n      - start\n      - limit\n      - size\n      - _links\n      additionalProperties: false\n      properties:\n        _links:\n          \"$ref\": \"#/components/schemas/GenericLinks\"\n        results:\n          items:\n            \"$ref\": \"#/components/schemas/Label\"\n          type: array\n        start:\n          type: integer\n          format: int32\n        size:\n          type: integer\n          format: int32\n        limit:\n          type: integer\n          format: int32\n    ContentRestrictionArray:\n      additionalProperties: false\n      required:\n      - results\n      - start\n      - limit\n      - size\n      - restrictionsHash\n      - _links\n      type: object\n      properties:\n        size:\n          format: int32\n          type: integer\n        start:\n          format: int32\n          type: integer\n        limit:\n          type: integer\n          format: int32\n        results:\n          type: array\n          items:\n            \"$ref\": \"#/components/schemas/ContentRestriction\"\n        restrictionsHash:\n          description: |-\n            This property is used by the UI to figure out whether a set of restrictions\n            has changed.\n          type: string\n        _links:\n          \"$ref\": \"#/components/schemas/GenericLinks\"\n    Label:\n      type: object\n      required:\n      - prefix\n      - name\n      - id\n      - label\n      additionalProperties: false\n      properties:\n        id:\n          type: string\n        label:\n          type: string\n        prefix:\n          type: string\n        name:\n          type: string\n    AccountIdEmailRecordArray:\n      type: array\n      items:\n        \"$ref\": \"#/components/schemas/AccountIdEmailRecord\"\n    SpaceWatchUser:\n      description: |-\n        This essentially the same as the `User` object, but no `_links` property and\n        no `_expandable` property (therefore, different required fields).\n      properties:\n        username:\n          description: |-\n            This property is no longer available and will be removed from the documentation soon.\n            Use `accountId` instead.\n            See the [deprecation notice](/cloud/confluence/deprecation-notice-user-privacy-api-migration-guide/) for details.\n          type: string\n        profilePicture:\n          \"$ref\": \"#/components/schemas/Icon\"\n        type:\n          type: string\n        userKey:\n          type: string\n          description: |-\n            This property is no longer available and will be removed from the documentation soon.\n            Use `accountId` instead.\n            See the [deprecation notice](/cloud/confluence/deprecation-notice-user-privacy-api-migration-guide/) for details.\n        accountId:\n          type: string\n          description: |-\n            The account ID of the user, which uniquely identifies the user across all Atlassian products.\n            For example, `384093:32b4d9w0-f6a5-3535-11a3-9c8c88d10192`.\n        displayName:\n          type: string\n        accountType:\n          type: string\n        publicName:\n          type: string\n        email:\n          type: string\n        operations:\n          type: array\n          items:\n            \"$ref\": \"#/components/schemas/OperationCheckResult\"\n        details:\n          \"$ref\": \"#/components/schemas/UserDetails\"\n      required:\n      - type\n      - profilePicture\n      - displayName\n      - accountId\n      - accountType\n      - email\n      - publicName\n      type: object\n      additionalProperties: false\n    MigratedUserArray:\n      required:\n      - results\n      - start\n      - limit\n      - size\n      - _links\n      type: object\n      properties:\n        results:\n          type: array\n          items:\n            \"$ref\": \"#/components/schemas/MigratedUser\"\n        size:\n          type: integer\n          format: int32\n        start:\n          format: int32\n          type: integer\n        limit:\n          type: integer\n          format: int32\n        _links:\n          \"$ref\": \"#/components/schemas/GenericLinks\"\n    SpaceWatchArray:\n      properties:\n        size:\n          format: int32\n          type: integer\n        start:\n          type: integer\n          format: int32\n        limit:\n          type: integer\n          format: int32\n        results:\n          type: array\n          items:\n            \"$ref\": \"#/components/schemas/SpaceWatch\"\n        _links:\n          \"$ref\": \"#/components/schemas/GenericLinks\"\n      required:\n      - results\n      - start\n      - limit\n      - size\n      type: object\n      additionalProperties: false\n    ContentBody:\n      additionalProperties: false\n      required:\n      - value\n      - representation\n      - _expandable\n      type: object\n      properties:\n        representation:\n          enum:\n          - view\n          - export_view\n          - styled_view\n          - storage\n          - editor2\n          - anonymous_export_view\n          type: string\n        webresource:\n          \"$ref\": \"#/components/schemas/WebResourceDependencies\"\n        embeddedContent:\n          type: array\n          items:\n            \"$ref\": \"#/components/schemas/EmbeddedContent\"\n        value:\n          type: string\n        _expandable:\n          properties:\n            content:\n              type: string\n          type: object\n          additionalProperties: false\n    GroupArrayWithLinks:\n      description: Same as GroupArray but with `_links` property.\n      allOf:\n      - \"$ref\": \"#/components/schemas/GroupArray\"\n      - required:\n        - _links\n        type: object\n        additionalProperties: false\n        properties:\n          _links:\n            \"$ref\": \"#/components/schemas/GenericLinks\"\n    MigratedUser:\n      properties:\n        accountId:\n          type: string\n        username:\n          type: string\n        key:\n          type: string\n      type: object\n      additionalProperties: false\n    LabelCreateArray:\n      items:\n        \"$ref\": \"#/components/schemas/LabelCreate\"\n      type: array\n    SpaceCreate:\n      description: This is the request object used when creating a new space.\n      properties:\n        name:\n          type: string\n          maxLength: 200\n          description: The name of the new space.\n        key:\n          type: string\n          description: |-\n            The key for the new space. Format: See [Space\n            keys](https://confluence.atlassian.com/x/lqNMMQ).\n        description:\n          \"$ref\": \"#/components/schemas/SpaceDescriptionCreate\"\n        permissions:\n          items:\n            \"$ref\": \"#/components/schemas/SpacePermission\"\n          type: array\n          description: |-\n            The permissions for the new space. If no permissions are provided, the\n            [Confluence default space permissions](https://confluence.atlassian.com/x/UAgzKw#CreateaSpace-Spacepermissions)\n            are applied. Note, for security reasons, permissions cannot be changed\n            via the API after the space has been created, and must be changed via\n            the user interface instead.\n      type: object\n      required:\n      - key\n      - name\n      additionalProperties: false\n    UsersUserKeys:\n      properties:\n        users:\n          items:\n            \"$ref\": \"#/components/schemas/User\"\n          type: array\n        _links:\n          \"$ref\": \"#/components/schemas/GenericLinks\"\n        userKeys:\n          items:\n            type: string\n          type: array\n      type: object\n      required:\n      - users\n      - userKeys\n      additionalProperties: false\n    WebResourceDependencies:\n      type: object\n      properties:\n        uris:\n          properties:\n            js:\n              type: string\n            all:\n              type: string\n            css:\n              type: string\n          type: object\n        contexts:\n          items:\n            type: string\n          type: array\n        tags:\n          type: object\n          properties:\n            js:\n              type: string\n            all:\n              type: string\n            data:\n              type: string\n            css:\n              type: string\n        superbatch:\n          \"$ref\": \"#/components/schemas/SuperBatchWebResources\"\n        keys:\n          items:\n            type: string\n          type: array\n    SpacePrivateCreate:\n      type: object\n      required:\n      - key\n      - name\n      additionalProperties: false\n      properties:\n        name:\n          description: The name of the new space.\n          maxLength: 200\n          type: string\n        key:\n          type: string\n          description: |-\n            The key for the new space. Format: See [Space\n            keys](https://confluence.atlassian.com/x/lqNMMQ).\n        description:\n          \"$ref\": \"#/components/schemas/SpaceDescriptionCreate\"\n      description: This is the request object used when creating a new private space.\n    ConnectModule:\n      example:\n        location: system.admin/globalsettings\n        url: \"/my-web-item\"\n        name:\n          value: My Web Item\n        key: my-webitem\n      description: |-\n        A [Connect module](https://developer.atlassian.com/cloud/confluence/modules/admin-page/) in the same format as in the\n        [app descriptor](https://developer.atlassian.com/cloud/confluence/app-descriptor/).\n      type: object\n    RelationData:\n      properties:\n        createdDate:\n          type: string\n          format: date-time\n        createdBy:\n          \"$ref\": \"#/components/schemas/User\"\n        friendlyCreatedDate:\n          type: string\n      type: object\n    ContentUpdate:\n      additionalProperties: false\n      required:\n      - version\n      - title\n      - type\n      type: object\n      properties:\n        body:\n          additionalProperties: false\n          minProperties: 1\n          type: object\n          maxProperties: 1\n          description: |-\n            The updated body of the content. Does not apply to attachments.\n            If you are not sure how to generate these formats, you can create a page in the\n            Confluence application, retrieve the content using [Get content](#api-content-get),\n            and expand the desired content format, e.g. `expand=body.storage`.\n          properties:\n            view:\n              \"$ref\": \"#/components/schemas/ContentBodyCreate\"\n            anonymous_export_view:\n              \"$ref\": \"#/components/schemas/ContentBodyCreate\"\n            editor2:\n              \"$ref\": \"#/components/schemas/ContentBodyCreate\"\n            storage:\n              \"$ref\": \"#/components/schemas/ContentBodyCreate\"\n            export_view:\n              \"$ref\": \"#/components/schemas/ContentBodyCreate\"\n            styled_view:\n              \"$ref\": \"#/components/schemas/ContentBodyCreate\"\n        title:\n          description: The updated title of the content. If you are not changing this\n            field, set this to the current `title`.\n          maxLength: 255\n          type: string\n        type:\n          description: The type of content. Set this to the current type of the content.\n          enum:\n          - page\n          - blogpost\n          - comment\n          - attachment\n          type: string\n        status:\n          description: |-\n            The updated status of the content. Note, if you change the status of a page from\n            'current' to 'draft' and it has an existing draft, the existing draft will be deleted\n            in favor of the updated page.\n          type: string\n          enum:\n          - current\n          - trashed\n          - historical\n          - draft\n        ancestors:\n          description: The new parent for the content. Only one parent content 'id'\n            can be specified.\n          type: array\n          items:\n            additionalProperties: false\n            required:\n            - id\n            type: object\n            properties:\n              id:\n                description: The `id` of the parent content.\n                type: string\n        version:\n          properties:\n            number:\n              type: integer\n              description: The version number.\n              format: int32\n          description: |-\n            The new version for the updated content. Set this to the current version number incremented by one, unless you are changing the status to 'draft' which must have a version number of 1.\n\n            To get the current version number, use [Get content by ID](#api-content-id-get) and retrieve `version.number`.\n          type: object\n          required:\n          - number\n          additionalProperties: false\n    ContainerLookAndFeel:\n      properties:\n        backgroundSize:\n          type: string\n        backgroundImage:\n          type: string\n        borderRadius:\n          type: string\n        backgroundColor:\n          type: string\n        background:\n          type: string\n        padding:\n          type: string\n      type: object\n      required:\n      - background\n      - backgroundColor\n      - backgroundImage\n      - backgroundSize\n      - padding\n      - borderRadius\n      additionalProperties: false\n    SpacePropertyArray:\n      properties:\n        _links:\n          \"$ref\": \"#/components/schemas/GenericLinks\"\n        results:\n          items:\n            \"$ref\": \"#/components/schemas/SpaceProperty\"\n          type: array\n        size:\n          type: integer\n          format: int32\n        limit:\n          format: int32\n          type: integer\n        start:\n          format: int32\n          type: integer\n      type: object\n      required:\n      - results\n      - start\n      - limit\n      - size\n      - _links\n      additionalProperties: false\n    SuperBatchWebResources:\n      properties:\n        tags:\n          type: object\n          properties:\n            all:\n              type: string\n            js:\n              type: string\n            css:\n              type: string\n            data:\n              type: string\n        metatags:\n          type: string\n        uris:\n          properties:\n            css:\n              type: string\n            all:\n              type: string\n            js:\n              type: string\n          type: object\n      type: object\n    AuditRecordArray:\n      additionalProperties: false\n      required:\n      - results\n      - start\n      - limit\n      - size\n      - _links\n      type: object\n      properties:\n        results:\n          type: array\n          items:\n            \"$ref\": \"#/components/schemas/AuditRecord\"\n        start:\n          format: int32\n          type: integer\n        size:\n          type: integer\n          format: int32\n        limit:\n          type: integer\n          format: int32\n        _links:\n          \"$ref\": \"#/components/schemas/GenericLinks\"\n    ThemeUpdate:\n      additionalProperties: false\n      type: object\n      required:\n      - themeKey\n      properties:\n        themeKey:\n          type: string\n          description: The key of the theme to be set as the space theme.\n    MenusLookAndFeel:\n      additionalProperties: false\n      type: object\n      required:\n      - hoverOrFocus\n      - color\n      properties:\n        color:\n          type: string\n        hoverOrFocus:\n          properties:\n            backgroundColor:\n              type: string\n          required:\n          - backgroundColor\n          type: object\n          additionalProperties: false\n    RetentionPeriod:\n      properties:\n        number:\n          type: integer\n          description: The number of units for the retention period.\n          format: int32\n        units:\n          description: The unit of time that the retention period is measured in.\n          enum:\n          - NANOS\n          - MICROS\n          - MILLIS\n          - SECONDS\n          - MINUTES\n          - HOURS\n          - HALF_DAYS\n          - DAYS\n          - WEEKS\n          - MONTHS\n          - YEARS\n          - DECADES\n          - CENTURIES\n          - MILLENNIA\n          - ERAS\n          - FOREVER\n          type: string\n      additionalProperties: false\n      required:\n      - number\n      - units\n      type: object\n    SearchPageResponseSearchResult:\n      additionalProperties: false\n      type: object\n      required:\n      - results\n      - start\n      - limit\n      - size\n      - totalSize\n      - cqlQuery\n      - searchDuration\n      - _links\n      properties:\n        start:\n          type: integer\n          format: int32\n        searchDuration:\n          format: int32\n          type: integer\n        totalSize:\n          type: integer\n          format: int32\n        _links:\n          \"$ref\": \"#/components/schemas/GenericLinks\"\n        cqlQuery:\n          type: string\n        limit:\n          type: integer\n          format: int32\n        size:\n          format: int32\n          type: integer\n        results:\n          type: array\n          items:\n            \"$ref\": \"#/components/schemas/SearchResult\"\n    ContentArray:\n      properties:\n        results:\n          items:\n            \"$ref\": \"#/components/schemas/Content\"\n          type: array\n        limit:\n          format: int32\n          type: integer\n        size:\n          format: int32\n          type: integer\n        start:\n          type: integer\n          format: int32\n        _links:\n          \"$ref\": \"#/components/schemas/GenericLinks\"\n      required:\n      - results\n      - start\n      - limit\n      - size\n      - _links\n      type: object\n      additionalProperties: false\n    UserWatch:\n      required:\n      - watching\n      type: object\n      additionalProperties: false\n      properties:\n        watching:\n          type: boolean\n    ContentPropertyCreate:\n      properties:\n        key:\n          maxLength: 255\n          description: The key of the new property.\n          type: string\n        value:\n          \"$ref\": \"#/components/schemas/PropertyValue\"\n      additionalProperties: false\n      required:\n      - key\n      - value\n      type: object\n    ContentLookAndFeel:\n      properties:\n        body:\n          \"$ref\": \"#/components/schemas/ContainerLookAndFeel\"\n        screen:\n          \"$ref\": \"#/components/schemas/ScreenLookAndFeel\"\n        container:\n          \"$ref\": \"#/components/schemas/ContainerLookAndFeel\"\n        header:\n          \"$ref\": \"#/components/schemas/ContainerLookAndFeel\"\n      type: object\n      required:\n      - screen\n      - container\n      - header\n      - body\n    ContentCreate:\n      properties:\n        space:\n          required:\n          - key\n          type: object\n          description: The space that the content is being created in.\n          properties:\n            key:\n              type: string\n              description: The key of the space.\n        body:\n          minProperties: 1\n          additionalProperties: false\n          type: object\n          maxProperties: 1\n          description: |-\n            The body of the new content. Does not apply to attachments.\n            Only one body format should be specified as the property for\n            this object, e.g. `storage`.\n\n            Note, `editor2` format is used by Atlassian only. `anonymous_export_view` is\n            the same as 'export_view' format but only content viewable by an anonymous\n            user is included.\n          properties:\n            editor2:\n              \"$ref\": \"#/components/schemas/ContentBodyCreate\"\n            anonymous_export_view:\n              \"$ref\": \"#/components/schemas/ContentBodyCreate\"\n            storage:\n              \"$ref\": \"#/components/schemas/ContentBodyCreate\"\n            view:\n              \"$ref\": \"#/components/schemas/ContentBodyCreate\"\n            styled_view:\n              \"$ref\": \"#/components/schemas/ContentBodyCreate\"\n            export_view:\n              \"$ref\": \"#/components/schemas/ContentBodyCreate\"\n        id:\n          type: string\n          description: The ID of the draft content. Required when publishing a draft.\n        status:\n          default: current\n          type: string\n          enum:\n          - current\n          - trashed\n          - historical\n          - draft\n          description: The status of the new content.\n        ancestors:\n          items:\n            properties:\n              id:\n                description: The `id` of the parent content.\n                type: string\n            required:\n            - id\n            type: object\n          type: array\n          description: |-\n            The parent content of the new content. Only one parent content\n            `id` can be specified.\n        type:\n          description: The type of the new content. Custom content types defined by\n            apps are also supported.\n          enum:\n          - page\n          - blogpost\n          - comment\n          - attachment\n          type: string\n        title:\n          maxLength: 255\n          type: string\n      required:\n      - title\n      - type\n      - space\n      - body\n      type: object\n      additionalProperties: false\n    ContentBlogpost:\n      allOf:\n      - \"$ref\": \"#/components/schemas/Content\"\n      - additionalProperties: false\n        required:\n        - metadata\n        - _links\n        type: object\n        properties:\n          _links:\n            \"$ref\": \"#/components/schemas/GenericLinks\"\n          metadata:\n            \"$ref\": \"#/components/schemas/ContentMetadata\"\n      description: Representation of a blogpost (content)\n    RelationArray:\n      additionalProperties: false\n      type: object\n      required:\n      - results\n      - start\n      - limit\n      - size\n      - _links\n      properties:\n        _links:\n          \"$ref\": \"#/components/schemas/GenericLinks\"\n        results:\n          type: array\n          items:\n            \"$ref\": \"#/components/schemas/Relation\"\n        limit:\n          type: integer\n          format: int32\n        size:\n          format: int32\n          type: integer\n        start:\n          type: integer\n          format: int32\n    ContentBlueprintDraft:\n      properties:\n        type:\n          description: The type of content. Set this to `page`.\n          enum:\n          - page\n          type: string\n        title:\n          maxLength: 255\n          description: |-\n            The title of the content. If you don't want to change the title,\n            set this to the current title of the draft.\n          type: string\n        ancestors:\n          items:\n            required:\n            - id\n            type: object\n            additionalProperties: false\n            properties:\n              id:\n                description: The content ID of the ancestor.\n                type: string\n          type: array\n          description: |-\n            The new ancestor (i.e. parent page) for the content. If you have\n            specified an ancestor, you must also specify a `space` property\n            in the request body for the space that the ancestor is in.\n\n            Note, if you specify more than one ancestor, the last ID in the array\n            will be selected as the parent page for the content.\n        version:\n          additionalProperties: false\n          required:\n          - number\n          type: object\n          properties:\n            number:\n              type: integer\n              description: The version number. Set this to `1`.\n              format: int32\n          description: The version for the new content.\n        status:\n          enum:\n          - current\n          default: current\n          type: string\n          description: The status of the content. Set this to `current` or omit it\n            altogether.\n        space:\n          required:\n          - key\n          type: object\n          additionalProperties: false\n          properties:\n            key:\n              type: string\n              format: int32\n              description: The key of the space\n          description: The space for the content.\n      required:\n      - version\n      - title\n      - type\n      type: object\n      additionalProperties: false\n    Message:\n      properties:\n        args:\n          type: array\n          items:\n            type: object\n        translation:\n          type: string\n      additionalProperties: false\n      type: object\n      required:\n      - translation\n      - args\n    SearchResult:\n      properties:\n        title:\n          type: string\n        excerpt:\n          type: string\n        friendlyLastModified:\n          type: string\n        url:\n          type: string\n        iconCssClass:\n          type: string\n        breadcrumbs:\n          items:\n            \"$ref\": \"#/components/schemas/Breadcrumb\"\n          type: array\n        lastModified:\n          format: date-time\n          type: string\n        resultParentContainer:\n          \"$ref\": \"#/components/schemas/ContainerSummary\"\n        resultGlobalContainer:\n          \"$ref\": \"#/components/schemas/ContainerSummary\"\n        entityType:\n          type: string\n        content:\n          \"$ref\": \"#/components/schemas/Content\"\n      required:\n      - content\n      - title\n      - excerpt\n      - url\n      - resultParentContainer\n      - resultGlobalContainer\n      - breadcrumbs\n      - entityType\n      - iconCssClass\n      - lastModified\n      - friendlyLastModified\n      type: object\n      additionalProperties: false\n    UserAnonymous:\n      properties:\n        _links:\n          \"$ref\": \"#/components/schemas/GenericLinks\"\n        displayName:\n          type: string\n        _expandable:\n          properties:\n            operations:\n              type: string\n          additionalProperties: false\n          type: object\n        profilePicture:\n          \"$ref\": \"#/components/schemas/Icon\"\n        operations:\n          items:\n            \"$ref\": \"#/components/schemas/OperationCheckResult\"\n          type: array\n        type:\n          type: string\n      required:\n      - type\n      - profilePicture\n      - displayName\n      - _expandable\n      - _links\n      type: object\n      additionalProperties: false\n    Content:\n      properties:\n        ancestors:\n          type: array\n          items:\n            \"$ref\": \"#/components/schemas/Content\"\n        _expandable:\n          properties:\n            space:\n              type: string\n            body:\n              type: string\n            restrictions:\n              type: string\n            descendants:\n              type: string\n            metadata:\n              type: string\n            version:\n              type: string\n            history:\n              type: string\n            operations:\n              type: string\n            container:\n              type: string\n            children:\n              type: string\n            ancestors:\n              type: string\n            childTypes:\n              type: string\n          type: object\n          additionalProperties: false\n        operations:\n          items:\n            \"$ref\": \"#/components/schemas/OperationCheckResult\"\n          type: array\n        body:\n          maxProperties: 1\n          additionalProperties: false\n          minProperties: 1\n          type: object\n          required:\n          - _expandable\n          properties:\n            anonymous_export_view:\n              \"$ref\": \"#/components/schemas/ContentBody\"\n            editor2:\n              \"$ref\": \"#/components/schemas/ContentBody\"\n            storage:\n              \"$ref\": \"#/components/schemas/ContentBody\"\n            _expandable:\n              type: object\n              additionalProperties: false\n              properties:\n                editor:\n                  type: string\n                styled_view:\n                  type: string\n                export_view:\n                  type: string\n                view:\n                  type: string\n                anonymous_export_view:\n                  type: string\n                editor2:\n                  type: string\n                storage:\n                  type: string\n            view:\n              \"$ref\": \"#/components/schemas/ContentBody\"\n            styled_view:\n              \"$ref\": \"#/components/schemas/ContentBody\"\n            export_view:\n              \"$ref\": \"#/components/schemas/ContentBody\"\n        _links:\n          \"$ref\": \"#/components/schemas/GenericLinks\"\n        status:\n          type: string\n        version:\n          \"$ref\": \"#/components/schemas/Version\"\n        id:\n          type: string\n        children:\n          \"$ref\": \"#/components/schemas/ContentChildren\"\n        childTypes:\n          \"$ref\": \"#/components/schemas/ContentChildType\"\n        container:\n          \"$ref\": \"#/components/schemas/Container\"\n        title:\n          type: string\n        descendants:\n          \"$ref\": \"#/components/schemas/ContentChildren\"\n        restrictions:\n          required:\n          - _links\n          type: object\n          additionalProperties: false\n          properties:\n            update:\n              \"$ref\": \"#/components/schemas/ContentRestriction\"\n            read:\n              \"$ref\": \"#/components/schemas/ContentRestriction\"\n            _links:\n              \"$ref\": \"#/components/schemas/GenericLinks\"\n        space:\n          \"$ref\": \"#/components/schemas/Space\"\n        history:\n          \"$ref\": \"#/components/schemas/ContentHistory\"\n        type:\n          type: string\n      description: Base object for all content types.\n      type: object\n      required:\n      - id\n      - type\n      - status\n      - title\n      - _expandable\n      additionalProperties: true\n    ContentMetadata:\n      type: object\n      additionalProperties: false\n      description: Metadata object for page, blogpost, comment content\n      properties:\n        frontend:\n          type: object\n        properties:\n          \"$ref\": \"#/components/schemas/GenericLinks\"\n        currentuser:\n          properties:\n            favourited:\n              type: object\n              properties:\n                isFavourite:\n                  type: boolean\n                favouritedDate:\n                  format: date-time\n                  type: string\n            viewed:\n              type: object\n              properties:\n                friendlyLastSeen:\n                  type: string\n                lastSeen:\n                  type: string\n                  format: date-time\n            lastmodified:\n              properties:\n                friendlyLastModified:\n                  type: string\n                version:\n                  \"$ref\": \"#/components/schemas/Version\"\n              type: object\n            lastcontributed:\n              type: object\n              properties:\n                when:\n                  type: string\n                  format: date-time\n                status:\n                  type: string\n          type: object\n        labels:\n          \"$ref\": \"#/components/schemas/LabelArray\"\n    CopyPageRequestDestination:\n      type: object\n      required:\n      - type\n      - value\n      description: |-\n        Defines where the page will be copied to, and can be one of the following types.\n\n          - `parent_page`: page will be copied as a child of the specified parent page\n          - `space`: page will be copied to the specified space as a root page on the space\n          - `existing_page`: page will be copied and replace the specified page\n      properties:\n        value:\n          type: string\n          description: The space key for `space` type, and content id for `parent_page`\n            and `existing_page`\n        type:\n          enum:\n          - space\n          - existing_page\n          - parent_page\n          type: string\n    UserArrayWithLinks:\n      description: Same as UserArray but with `_links` property.\n      allOf:\n      - \"$ref\": \"#/components/schemas/UserArray\"\n      - type: object\n        required:\n        - _links\n        additionalProperties: false\n        properties:\n          _links:\n            \"$ref\": \"#/components/schemas/GenericLinks\"\n    ContentTemplate:\n      type: object\n      required:\n      - templateId\n      - name\n      - description\n      - labels\n      - templateType\n      - _expandable\n      - _links\n      additionalProperties: false\n      properties:\n        templateId:\n          type: string\n        _expandable:\n          type: object\n          additionalProperties: false\n          properties:\n            body:\n              type: string\n        body:\n          \"$ref\": \"#/components/schemas/ContentBody\"\n        _links:\n          \"$ref\": \"#/components/schemas/GenericLinks\"\n        description:\n          type: string\n        templateType:\n          type: string\n        name:\n          type: string\n        labels:\n          type: array\n          items:\n            \"$ref\": \"#/components/schemas/Label\"\n    Relation:\n      additionalProperties: false\n      required:\n      - name\n      - _expandable\n      - _links\n      type: object\n      properties:\n        name:\n          type: string\n        _expandable:\n          properties:\n            source:\n              type: string\n            relationData:\n              type: string\n            target:\n              type: string\n          additionalProperties: false\n          required:\n          - relationData\n          - source\n          - target\n          type: object\n        source:\n          type: object\n          additionalProperties: true\n        relationData:\n          \"$ref\": \"#/components/schemas/RelationData\"\n        _links:\n          \"$ref\": \"#/components/schemas/GenericLinks\"\n        target:\n          type: object\n          additionalProperties: true\n    Theme:\n      allOf:\n      - \"$ref\": \"#/components/schemas/ThemeNoLinks\"\n      - properties:\n          _links:\n            \"$ref\": \"#/components/schemas/GenericLinks\"\n        type: object\n        required:\n        - _links\n        additionalProperties: false\n    SpaceArray:\n      additionalProperties: false\n      type: object\n      required:\n      - results\n      - start\n      - limit\n      - size\n      - _links\n      properties:\n        _links:\n          \"$ref\": \"#/components/schemas/GenericLinks\"\n        results:\n          items:\n            \"$ref\": \"#/components/schemas/Space\"\n          type: array\n        size:\n          format: int32\n          type: integer\n        limit:\n          type: integer\n          format: int32\n        start:\n          format: int32\n          type: integer\n    AffectedObject:\n      type: object\n      required:\n      - name\n      - objectType\n      additionalProperties: false\n      properties:\n        objectType:\n          type: string\n        name:\n          type: string\n    CQLPersonalDataMigrationRequest:\n      type: object\n      required:\n      - queryStrings\n      additionalProperties: false\n      properties:\n        queryStrings:\n          type: array\n          items:\n            type: string\n          description: A list of queries with user identifiers. Maximum of 100 queries.\n          example:\n          - type = page and creator != admin and space = DEV\n      description: The CQL queries to be converted.\n    User:\n      type: object\n      required:\n      - type\n      - accountId\n      - accountType\n      - email\n      - publicName\n      - profilePicture\n      - displayName\n      - _expandable\n      - _links\n      additionalProperties: false\n      properties:\n        accountId:\n          description: |-\n            The account ID of the user, which uniquely identifies the user across all Atlassian products.\n            For example, `384093:32b4d9w0-f6a5-3535-11a3-9c8c88d10192`.\n          type: string\n        userKey:\n          type: string\n          description: |-\n            This property is no longer available and will be removed from the documentation soon.\n            Use `accountId` instead.\n            See the [deprecation notice](/cloud/confluence/deprecation-notice-user-privacy-api-migration-guide/) for details.\n        _links:\n          \"$ref\": \"#/components/schemas/GenericLinks\"\n        displayName:\n          type: string\n          description: The display name of the user. Depending on the user's privacy\n            setting, this may be the same as publicName.\n        username:\n          type: string\n          description: |-\n            This property is no longer available and will be removed from the documentation soon.\n            Use `accountId` instead.\n            See the [deprecation notice](/cloud/confluence/deprecation-notice-user-privacy-api-migration-guide/) for details.\n        profilePicture:\n          \"$ref\": \"#/components/schemas/Icon\"\n        type:\n          type: string\n          enum:\n          - known\n          - unknown\n          - anonymous\n          - user\n        details:\n          \"$ref\": \"#/components/schemas/UserDetails\"\n        personalSpace:\n          \"$ref\": \"#/components/schemas/Space\"\n        _expandable:\n          additionalProperties: false\n          type: object\n          properties:\n            operations:\n              type: string\n            details:\n              type: string\n            personalSpace:\n              type: string\n        publicName:\n          description: The public name or nickname of the user. Will always contain\n            a value.\n          type: string\n        accountType:\n          type: string\n          enum:\n          - atlassian\n          - app (if this user is a bot user created on behalf of an Atlassian app)\n          description: The account type of the user, may return empty string if unavailable.\n        email:\n          description: The email address of the user. Depending on the user's privacy\n            setting, this may return an empty string.\n          type: string\n        operations:\n          type: array\n          items:\n            \"$ref\": \"#/components/schemas/OperationCheckResult\"\n    TaskPageResponse:\n      additionalProperties: false\n      type: object\n      required:\n      - results\n      - start\n      - limit\n      - size\n      properties:\n        size:\n          format: int32\n          type: integer\n        limit:\n          format: int32\n          type: integer\n        start:\n          format: int32\n          type: integer\n        results:\n          type: array\n          items:\n            \"$ref\": \"#/components/schemas/Task\"\n    ContentRestrictionUpdate:\n      properties:\n        operation:\n          description: The restriction operation applied to content.\n          type: string\n          enum:\n          - administer\n          - copy\n          - create\n          - delete\n          - export\n          - move\n          - purge\n          - purge_version\n          - read\n          - restore\n          - update\n          - use\n        restrictions:\n          additionalProperties: false\n          type: object\n          properties:\n            group:\n              items:\n                additionalProperties: false\n                required:\n                - type\n                - name\n                type: object\n                description: A group that the restriction will be applied to.\n                properties:\n                  name:\n                    type: string\n                    description: The name of the group.\n                  type:\n                    description: Set to 'group'.\n                    enum:\n                    - group\n                    type: string\n              type: array\n              description: |-\n                The groups that the restrictions will be applied to. This array must\n                have at least one item, otherwise it should be omitted.\n            user:\n              items:\n                description: |-\n                  A user that the restriction will be applied to. Either the `username`\n                  or the `userKey` must be specified to identify the user.\n                properties:\n                  type:\n                    description: Set to 'known'.\n                    enum:\n                    - known\n                    - unknown\n                    - anonymous\n                    - user\n                    type: string\n                  username:\n                    type: string\n                    description: |-\n                      This property is no longer available and will be removed from the documentation soon.\n                      Use `accountId` instead.\n                      See the [deprecation notice](/cloud/confluence/deprecation-notice-user-privacy-api-migration-guide/) for details.\n                  accountId:\n                    type: string\n                    description: |-\n                      The account ID of the user, which uniquely identifies the user across all Atlassian products.\n                      For example, `384093:32b4d9w0-f6a5-3535-11a3-9c8c88d10192`.\n                  userKey:\n                    type: string\n                    description: |-\n                      This property is no longer available and will be removed from the documentation soon.\n                      Use `accountId` instead.\n                      See the [deprecation notice](/cloud/confluence/deprecation-notice-user-privacy-api-migration-guide/) for details.\n                additionalProperties: false\n                type: object\n                required:\n                - type\n                - accountId\n              type: array\n              description: |-\n                The users that the restrictions will be applied to. This array must\n                have at least one item, otherwise it should be omitted.\n          description: |-\n            The users/groups that the restrictions will be applied to. At least one of\n            `user` or `group` must be specified for this object.\n      type: object\n      required:\n      - operation\n      - restrictions\n      additionalProperties: false\n    ThemeNoLinks:\n      description: Theme object without links. Used in ThemeArray.\n      properties:\n        themeKey:\n          type: string\n        description:\n          type: string\n        icon:\n          \"$ref\": \"#/components/schemas/Icon\"\n        name:\n          type: string\n      type: object\n      required:\n      - themeKey\n      - name\n      - description\n      - icon\n      additionalProperties: false\n    SpaceSettings:\n      required:\n      - routeOverrideEnabled\n      - _links\n      type: object\n      additionalProperties: false\n      properties:\n        routeOverrideEnabled:\n          description: |-\n            Defines whether an override for the space home should be used. This is\n            used in conjunction with a space theme provided by an app. For\n            example, if this property is set to true, a theme can display a page\n            other than the space homepage when users visit the root URL for a\n            space. This property allows apps to provide content-only theming\n            without overriding the space home.\n          type: boolean\n        _links:\n          \"$ref\": \"#/components/schemas/GenericLinks\"\n    ContentComment:\n      allOf:\n      - \"$ref\": \"#/components/schemas/Content\"\n      - additionalProperties: false\n        type: object\n        required:\n        - metadata\n        - extensions\n        - _links\n        properties:\n          _links:\n            \"$ref\": \"#/components/schemas/GenericLinks\"\n          metadata:\n            \"$ref\": \"#/components/schemas/ContentMetadata\"\n          extensions:\n            properties:\n              resolution:\n                type: object\n                properties:\n                  status:\n                    type: string\n                  lastModifiedDate:\n                    type: string\n                    format: date-time\n                  lastModifier:\n                    properties:\n                      type:\n                        type: string\n                      operations:\n                        type: array\n                        items:\n                          \"$ref\": \"#/components/schemas/OperationCheckResult\"\n                      profilePicture:\n                        \"$ref\": \"#/components/schemas/Icon\"\n                      displayName:\n                        type: string\n                    type: object\n              inlineProperties:\n                properties:\n                  markerRef:\n                    type: string\n                  originalSelection:\n                    type: string\n                required:\n                - originalSelection\n                - markerRef\n                type: object\n              location:\n                type: string\n            required:\n            - location\n            type: object\n      description: Representation of a comment (content)\n    ButtonLookAndFeel:\n      required:\n      - backgroundColor\n      - color\n      type: object\n      additionalProperties: false\n      properties:\n        color:\n          type: string\n        backgroundColor:\n          type: string\n    LookAndFeel:\n      properties:\n        content:\n          \"$ref\": \"#/components/schemas/ContentLookAndFeel\"\n        links:\n          properties:\n            color:\n              type: string\n          type: object\n          required:\n          - color\n          additionalProperties: false\n        bordersAndDividers:\n          additionalProperties: false\n          required:\n          - color\n          type: object\n          properties:\n            color:\n              type: string\n        header:\n          \"$ref\": \"#/components/schemas/HeaderLookAndFeel\"\n        headings:\n          type: object\n          required:\n          - color\n          additionalProperties: false\n          properties:\n            color:\n              type: string\n        menus:\n          \"$ref\": \"#/components/schemas/MenusLookAndFeel\"\n      required:\n      - headings\n      - links\n      - menus\n      - header\n      - content\n      - bordersAndDividers\n      type: object\n      additionalProperties: false\n    ThemeArray:\n      properties:\n        results:\n          type: array\n          items:\n            \"$ref\": \"#/components/schemas/ThemeNoLinks\"\n        size:\n          format: int32\n          type: integer\n        limit:\n          type: integer\n          format: int32\n        start:\n          format: int32\n          type: integer\n        _links:\n          \"$ref\": \"#/components/schemas/GenericLinks\"\n      additionalProperties: false\n      required:\n      - results\n      - start\n      - limit\n      - size\n      - _links\n      type: object\n    SpaceUpdate:\n      type: object\n      additionalProperties: false\n      properties:\n        name:\n          type: string\n          maxLength: 200\n          description: The name of the space.\n        homepage:\n          additionalProperties: false\n          type: object\n          required:\n          - id\n          properties:\n            id:\n              type: string\n              description: The ID of the page.\n          description: The page to set as the homepage of the space.\n        description:\n          \"$ref\": \"#/components/schemas/SpaceDescriptionCreate\"\n    GenericLinks:\n      additionalProperties:\n        type: string\n      type: object\n    LookAndFeelType:\n      required:\n      - selected\n      type: object\n      additionalProperties: false\n      description: The object for choosing the look and feel settings for the site\n        or a space.\n      properties:\n        selected:\n          enum:\n          - global\n          - custom\n          type: string\n          description: |-\n            The look and feel scheme. If you set this to `global`, you must specify\n            the current global look and feel settings as a `global` object in this\n            request. Similarly, if you set this to `custom`, you must specify the\n            current custom look and feel settings as a `custom` object in this request.\n        global:\n          \"$ref\": \"#/components/schemas/LookAndFeel\"\n        custom:\n          \"$ref\": \"#/components/schemas/LookAndFeel\"\n    UserDetails:\n      properties:\n        personal:\n          type: object\n          additionalProperties: false\n          properties:\n            phone:\n              type: string\n              description: |-\n                This property has been deprecated due to privacy changes. There is no replacement. See the\n                [migration guide](https://developer.atlassian.com/cloud/confluence/deprecation-notice-user-privacy-api-migration-guide/)\n                for details.\n            email:\n              description: |-\n                This property has been deprecated due to privacy changes. Use the `User.email` property instead. See the\n                [migration guide](https://developer.atlassian.com/cloud/confluence/deprecation-notice-user-privacy-api-migration-guide/)\n                for details.\n              type: string\n            im:\n              description: |-\n                This property has been deprecated due to privacy changes. There is no replacement. See the\n                [migration guide](https://developer.atlassian.com/cloud/confluence/deprecation-notice-user-privacy-api-migration-guide/)\n                for details.\n              type: string\n            website:\n              type: string\n              description: |-\n                This property has been deprecated due to privacy changes. There is no replacement. See the\n                [migration guide](https://developer.atlassian.com/cloud/confluence/deprecation-notice-user-privacy-api-migration-guide/)\n                for details.\n        business:\n          additionalProperties: false\n          type: object\n          properties:\n            department:\n              description: |-\n                This property has been deprecated due to privacy changes. There is no replacement. See the\n                [migration guide](https://developer.atlassian.com/cloud/confluence/deprecation-notice-user-privacy-api-migration-guide/)\n                for details.\n              type: string\n            location:\n              type: string\n              description: |-\n                This property has been deprecated due to privacy changes. There is no replacement. See the\n                [migration guide](https://developer.atlassian.com/cloud/confluence/deprecation-notice-user-privacy-api-migration-guide/)\n                for details.\n            position:\n              type: string\n              description: |-\n                This property has been deprecated due to privacy changes. There is no replacement. See the\n                [migration guide](https://developer.atlassian.com/cloud/confluence/deprecation-notice-user-privacy-api-migration-guide/)\n                for details.\n      additionalProperties: false\n      type: object\n    BulkUserLookupArray:\n      properties:\n        start:\n          type: integer\n          format: int32\n        size:\n          type: integer\n          format: int32\n        limit:\n          type: integer\n          format: int32\n        results:\n          items:\n            \"$ref\": \"#/components/schemas/BulkUserLookup\"\n          type: array\n        _links:\n          \"$ref\": \"#/components/schemas/GenericLinks\"\n      required:\n      - results\n      - start\n      - limit\n      - size\n      - _links\n      type: object\n    SpaceWatch:\n      properties:\n        contentId:\n          type: string\n        watcher:\n          \"$ref\": \"#/components/schemas/SpaceWatchUser\"\n        type:\n          type: string\n        spaceKey:\n          type: string\n      required:\n      - type\n      - watcher\n      - spaceKey\n      type: object\n      additionalProperties: false\n    VersionArray:\n      properties:\n        _links:\n          \"$ref\": \"#/components/schemas/GenericLinks\"\n        size:\n          format: int32\n          type: integer\n        start:\n          type: integer\n          format: int32\n        limit:\n          format: int32\n          type: integer\n        results:\n          type: array\n          items:\n            \"$ref\": \"#/components/schemas/Version\"\n      required:\n      - results\n      - start\n      - limit\n      - size\n      - _links\n      type: object\n      additionalProperties: false\n    CopyPageHierarchyTitleOptions:\n      type: object\n      properties:\n        search:\n          type: string\n        prefix:\n          type: string\n        replace:\n          type: string\n    Watch:\n      properties:\n        contentId:\n          type: string\n        watcher:\n          \"$ref\": \"#/components/schemas/WatchUser\"\n        type:\n          type: string\n      additionalProperties: false\n      required:\n      - type\n      - watcher\n      - contentId\n      type: object\n    BlueprintTemplateArray:\n      properties:\n        _links:\n          \"$ref\": \"#/components/schemas/GenericLinks\"\n        limit:\n          type: integer\n          format: int32\n        size:\n          format: int32\n          type: integer\n        start:\n          format: int32\n          type: integer\n        results:\n          items:\n            \"$ref\": \"#/components/schemas/BlueprintTemplate\"\n          type: array\n      additionalProperties: false\n      required:\n      - results\n      - start\n      - limit\n      - size\n      - _links\n      type: object\n    SpacePermissionV2:\n      description: |-\n        This object represents a single space permission. Permissions consist of\n        at least one operation object with an accompanying subjects object.\n\n        The following combinations of `operation.type` and `operation.target` values are\n        valid for the `operation` object:\n\n          - 'create': 'page', 'blogpost', 'comment', 'attachment'\n          - 'read': 'space'\n          - 'delete': 'page', 'blogpost', 'comment', 'attachment'\n          - 'export': 'space'\n          - 'administer': 'space'\n      properties:\n        id:\n          type: integer\n          format: int64\n        subject:\n          type: object\n          required:\n          - type\n          - identifier\n          additionalProperties: false\n          description: The user or group that the permission applies to.\n          properties:\n            identifier:\n              description: |-\n                for type=user, identifier should be user's accountId or `anonymous` for anonymous users\n                for type=group, identifier should be name of the group\n              type: string\n            type:\n              type: string\n              enum:\n              - user\n              - group\n        _links:\n          \"$ref\": \"#/components/schemas/GenericLinks\"\n        operation:\n          type: object\n          required:\n          - key\n          - target\n          additionalProperties: false\n          properties:\n            key:\n              enum:\n              - administer\n              - copy\n              - create\n              - delete\n              - export\n              - move\n              - purge\n              - purge_version\n              - read\n              - restore\n              - update\n              - use\n              type: string\n            target:\n              description: The space or content type that the operation applies to.\n              type: string\n              enum:\n              - page\n              - blogpost\n              - comment\n              - attachment\n              - space\n      type: object\n      required:\n      - subject\n      - operation\n      additionalProperties: false\n    LookAndFeelSettings:\n      required:\n      - selected\n      - global\n      - custom\n      type: object\n      additionalProperties: false\n      properties:\n        theme:\n          \"$ref\": \"#/components/schemas/LookAndFeel\"\n        global:\n          \"$ref\": \"#/components/schemas/LookAndFeel\"\n        custom:\n          \"$ref\": \"#/components/schemas/LookAndFeel\"\n        selected:\n          enum:\n          - global\n          - custom\n          type: string\n    MacroInstance:\n      type: object\n      additionalProperties: false\n      properties:\n        _links:\n          \"$ref\": \"#/components/schemas/GenericLinks\"\n        body:\n          type: string\n        parameters:\n          additionalProperties: true\n          type: object\n        name:\n          type: string\n    ChangedValue:\n      additionalProperties: false\n      type: object\n      required:\n      - name\n      - oldValue\n      - newValue\n      properties:\n        oldValue:\n          type: string\n        name:\n          type: string\n        newValue:\n          type: string\n    Container:\n      description: |-\n        Container for content. This can be either a space (containing a page or blogpost)\n        or a page/blog post (containing an attachment or comment)\n      type: object\n      additionalProperties: true\n    ContentRestrictionUpdateArray:\n      type: array\n      items:\n        \"$ref\": \"#/components/schemas/ContentRestrictionUpdate\"\n    ContentAttachment:\n      allOf:\n      - \"$ref\": \"#/components/schemas/Content\"\n      - type: object\n        required:\n        - metadata\n        - extensions\n        - _links\n        additionalProperties: false\n        properties:\n          _links:\n            \"$ref\": \"#/components/schemas/GenericLinks\"\n          metadata:\n            properties:\n              mediaType:\n                type: string\n            type: object\n          extensions:\n            type: object\n            properties:\n              position:\n                format: int32\n                type: integer\n      description: Representation of an attachment (content)\n    ContentPage:\n      description: Representation of a page (content)\n      allOf:\n      - \"$ref\": \"#/components/schemas/Content\"\n      - type: object\n        required:\n        - metadata\n        - extensions\n        - _links\n        additionalProperties: false\n        properties:\n          _links:\n            \"$ref\": \"#/components/schemas/GenericLinks\"\n          metadata:\n            \"$ref\": \"#/components/schemas/ContentMetadata\"\n          extensions:\n            properties:\n              position:\n                type: integer\n                format: int32\n            type: object\n    ContentPropertyUpdate:\n      properties:\n        version:\n          additionalProperties: false\n          type: object\n          required:\n          - number\n          properties:\n            number:\n              description: |-\n                The new version for the updated content property. Set this to the\n                current version number incremented by one. To get the current\n                version number, use 'Get content property' and retrieve\n                `version.number`.\n              format: int32\n              type: integer\n            minorEdit:\n              description: |-\n                If `minorEdit` is set to 'true', no notification email or activity\n                stream will be generated for the change.\n              default: true\n              type: boolean\n          description: The version number of the property.\n        value:\n          description: The value of the property.\n          maxProperties: 1\n          type: object\n          minProperties: 1\n          additionalProperties:\n            type: string\n      additionalProperties: false\n      required:\n      - value\n      - version\n      type: object\n    LongTaskStatusWithLinks:\n      allOf:\n      - \"$ref\": \"#/components/schemas/LongTaskStatus\"\n      - additionalProperties: false\n        type: object\n        required:\n        - _links\n        properties:\n          _links:\n            \"$ref\": \"#/components/schemas/GenericLinks\"\n      description: Same as LongTaskStatus but with `_links` property.\n    ContentProperty:\n      required:\n      - id\n      - key\n      - value\n      - _links\n      type: object\n      additionalProperties: false\n      properties:\n        value:\n          description: The value of the content property. This can be empty or a complex\n            object.\n          additionalProperties: true\n          type: object\n        version:\n          additionalProperties: false\n          required:\n          - when\n          - message\n          - number\n          - minorEdit\n          type: object\n          properties:\n            message:\n              type: string\n            number:\n              type: integer\n              format: int32\n            when:\n              format: date-time\n              type: string\n            minorEdit:\n              type: boolean\n        key:\n          type: string\n        content:\n          \"$ref\": \"#/components/schemas/Content\"\n        id:\n          format: int32\n          type: integer\n        _links:\n          \"$ref\": \"#/components/schemas/GenericLinks\"\n    ContentId:\n      type: string\n  parameters:\n    spaceExpand:\n      style: form\n      in: query\n      required: false\n      name: expand\n      description: |-\n        A multi-value parameter indicating which properties of the spaces to\n        expand, where:\n\n          - `settings` returns the settings for the space, similar to [Get space settings](#api-space-spaceKey-settings-get).\n          - `metadata.labels` returns the space labels, which are used to categorize the space.\n          - `operations` returns the operations for a space, which are used when setting permissions.\n          - `lookAndFeel` returns information about the look and feel of the space, including the color scheme.\n          - `permissions` returns the permissions for the space. Note that this may return permissions for deleted groups,\n          because deleting a group doesn't remove associated space permissions.\n          - `icon` returns information about space icon.\n          - `description.plain` returns the description of the space.\n          - `description.view` returns the description of the space.\n          - `theme` returns information about the space theme.\n          - `homepage` returns information about the space homepage.\n      schema:\n        items:\n          type: string\n          enum:\n          - settings\n          - metadata.labels\n          - operations\n          - lookAndFeel\n          - permissions\n          - icon\n          - description.plain\n          - description.view\n          - theme\n          - homepage\n        type: array\n    contentExpand:\n      schema:\n        type: array\n        items:\n          type: string\n          enum:\n          - childTypes.all\n          - childTypes.attachment\n          - childTypes.comment\n          - childTypes.page\n          - container\n          - metadata.currentuser\n          - metadata.properties\n          - metadata.labels\n          - metadata.frontend\n          - operations\n          - children.page\n          - children.attachment\n          - children.comment\n          - restrictions.read.restrictions.user\n          - restrictions.read.restrictions.group\n          - restrictions.update.restrictions.user\n          - restrictions.update.restrictions.group\n          - history\n          - history.lastUpdated\n          - history.previousVersion\n          - history.contributors\n          - history.nextVersion\n          - ancestors\n          - body\n          - version\n          - descendants.page\n          - descendants.attachment\n          - descendants.comment\n          - space\n      description: |-\n        A multi-value parameter indicating which properties of the content to expand.\n\n        - `childTypes.all` returns whether the content has attachments, comments, or child pages.\n        Use this if you only need to check whether the content has children of a particular type.\n        - `childTypes.attachment` returns whether the content has attachments.\n        - `childTypes.comment` returns whether the content has comments.\n        - `childTypes.page` returns whether the content has child pages.\n        - `container` returns the space that the content is in. This is the same as the information\n        returned by [Get space](#api-space-spaceKey-get).\n        - `metadata.currentuser` returns information about the current user in relation to the content,\n        including when they last viewed it, modified it, contributed to it, or added it as a favorite.\n        - `metadata.properties` returns content properties that have been set via the Confluence REST API.\n        - `metadata.labels` returns the labels that have been added to the content.\n        - `metadata.frontend` this property is only used by Atlassian.\n        - `operations` returns the operations for the content, which are used when setting permissions.\n        - `children.page` returns pages that are descendants at the level immediately below the content.\n        - `children.attachment` returns all attachments for the content.\n        - `children.comment` returns all comments on the content.\n        - `restrictions.read.restrictions.user` returns the users that have permission to read the content.\n        - `restrictions.read.restrictions.group` returns the groups that have permission to read the content. Note that\n        this may return deleted groups, because deleting a group doesn't remove associated restrictions.\n        - `restrictions.update.restrictions.user` returns the users that have permission to update the content.\n        - `restrictions.update.restrictions.group` returns the groups that have permission to update the content. Note that\n        this may return deleted groups because deleting a group doesn't remove associated restrictions.\n        - `history` returns the history of the content, including the date it was created.\n        - `history.lastUpdated` returns information about the most recent update of the content, including\n        who updated it and when it was updated.\n        - `history.previousVersion` returns information about the update prior to the current content update.\n        - `history.contributors` returns all of the users who have contributed to the content.\n        - `history.nextVersion` returns information about the update after to the current content update.\n        - `ancestors` returns the parent page, if the content is a page.\n        - `body` returns the body of the content in different formats, including the editor format,\n        view format, and export format.\n        - `version` returns information about the most recent update of the content, including who updated it\n        and when it was updated.\n        - `descendants.page` returns pages that are descendants at any level below the content.\n        - `descendants.attachment` returns all attachments for the content, same as `children.attachment`.\n        - `descendants.comment` returns all comments on the content, same as `children.comment`.\n        - `space` returns the space that the content is in. This is the same as the information returned by\n        [Get space](#api-space-spaceKey-get).\n\n        In addition, the following comment-specific expansions can be used:\n        - `extensions.inlineProperties` returns inline comment-specific properties.\n        - `extensions.resolution` returns the resolution status of each comment.\n      name: expand\n      required: false\n      in: query\n      style: form\nx-atlassian-narrative:\n  documents:\n  - anchor: about\n    title: About\n    body: |-\n      This is the reference for the Confluence Cloud REST API. This API is the primary way to get and\n      modify data in Confluence Cloud, whether you are developing an app or any other integration.\n      Use it to interact with Confluence entities, like pages and blog posts, spaces, users, groups,\n      and more.\n\n      **NOTE:** Personal data that is used to identify users, such as `username` and `userKey`, has\n      been removed from the Confluence Cloud REST API. In addition, other personal data (for example, email)\n      is now restricted by a user's profile settings (or in the case of managed accounts, the visibility\n      settings decided by the site administrator). You must update your apps to accommodate these changes,\n      if you have not done so already. This change was previously announced on 01 October 2018 and followed\n      by a deprecation period (see the [announcement](https://developer.atlassian.com/cloud/confluence/deprecation-notice-user-privacy-api-migration-guide/)).\n  - title: Authentication and authorization\n    anchor: auth\n    body: |-\n      **Authentication:** If you are building a Cloud app, authentication is implemented via JWT (see [Authentication for apps](https://developer.atlassian.com/cloud/confluence/authentication-for-apps/)). Otherwise, if you are authenticating directly against the REST API, the REST API supports basic auth (see [Basic auth for REST APIs](https://developer.atlassian.com/cloud/confluence/basic-auth-for-rest-apis/)).\n\n      **Authorization:** If you are building a Cloud app, authorization can be implemented by [scopes](https://developer.atlassian.com/cloud/confluence/scopes/) or by [OAuth 2.0 user impersonation](https://developer.atlassian.com/cloud/confluence/oauth-2-jwt-bearer-tokens-for-apps). Otherwise, if you are making calls directly against the REST API, authorization is based on the user used in the authentication process.\n\n      See [Security overview](https://developer.atlassian.com/cloud/jira/platform/security-overview/) for more details on authentication and authorization.\n  - body: |-\n      The Confluence REST API uses the [standard HTTP status codes](https://www.w3.org/Protocols/rfc2616/rfc2616-sec10.html).\n\n      Responses that return an error status code will also return a response body, similar to the following:\n      ```json\n      {\n        \"statusCode\": 404,\n        \"data\": {\n          \"authorized\": false,\n          \"valid\": false,\n          \"errors\": [\n            {\n              \"message\": {\n                \"translation\": \"This is an example error message.\",\n                \"args\": []\n              }\n            }\n          ],\n          \"successful\": false\n        },\n        \"message\": \"This is an example error message.\"\n      }\n      ```\n    anchor: status-code\n    title: Status codes\n  - anchor: using\n    title: Using the REST API\n    body: |-\n      **Expansion:** The Confluence REST API uses resource expansion: some parts of a resource are not returned unless explicitly specified. This simplifies responses and minimizes network traffic.\n\n      To expand part of a resource in a request, use the `expand` query parameter and specify the entities to be expanded. If you need to expand nested entities, use the `.` dot notation. For example, the following request will expand information about the requested content's space and labels:\n      ```\n      GET /wiki/rest/api/content/{id}?expand=space,metadata.labels\n      ```\n      **Pagination:** The Confluence REST API uses pagination: a method that returns a response with multiple objects can only return a limited number at one time. This limits the size of responses and conserves server resources.\n\n      Use the 'limit' and 'start' query parameters to specify pagination:\n\n      - `limit` is the number of objects to return per page. This may be restricted by system limits.\n      - `start` is the index of the first item returned in the page of results. The base index is 0.\n\n      For example, the following request will return ten content objects, starting from the fifth object.\n      ```\n      GET /wiki/rest/api/content?start=4,limit=10\n      ```\n      **Special headers:**\n\n      - `X-Atlassian-Token: no-check` request header must be specified for methods\n      that are protected from Cross Site Request Forgery (XSRF/CSRF) attacks. This is\n      stated in the method description, if required. For more information, see this\n      [KB article](https://confluence.atlassian.com/cloudkb/xsrf-check-failed-when-calling-cloud-apis-826874382.html).\n  - body: |-\n      **Webhooks:** A webhook is a user-defined callback over HTTP. You can use Confluence webhooks to notify your app or web application when certain events occur in Confluence. For example, when a page is created or updated. To learn more, see [Webhooks](https://developer.atlassian.com/cloud/confluence/modules/webhook/).\n\n      **Content properties:** Content properties are a key-value storage associated with a piece of Confluence content. If you are building an app, this is one form of persistence that you can use. You can use the Confluence REST API to get, update, and delete content properties. To learn more, see [Content properties in the REST API](https://developer.atlassian.com/cloud/confluence/content-properties/).\n\n      **CQL:** The Confluence Query Language (CQL) allows you to perform complex searches for content using an SQL-like syntax in the `search` resource. To learn more, see [Advanced searching using CQL](https://developer.atlassian.com/cloud/confluence/advanced-searching-using-cql/).\n    anchor: capabilities\n    title: Capabilities\n"
		}
	},
	"Error": "parse: parse spec: parse components: schemas: \"AuditRecord\": parse schema: property \"author\": parse schema: property \"operations\": unexpected default \"null\" value"
}