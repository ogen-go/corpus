{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/haiku/haikudepotserver"
		},
		"file": {
			"name": "pkg.yaml",
			"size": 0,
			"path": "haikudepotserver-api2/src/main/resources/api2/pkg.yaml",
			"byteSize": 32613,
			"content": "# Copyright 2021-2022, Andrew Lindesay\n# Distributed under the terms of the MIT License.\n\nopenapi: 3.0.3\ninfo:\n  title: HDS Package API\n  version: \"2.0\"\n  description: \u003e\n    This API is for access to packages and package versions.\ntags:\n  - name: pkg\npaths:\n\n  /__api/v2/pkg/update-pkg-categories:\n    description: \u003e\n      This method will ensure that the categories configured on the nominated package are as per the list of\n      packages.\n    post:\n      tags:\n        - pkg\n      operationId: updatePkgCategories\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/updatePkgCategoriesRequestEnvelope\"\n      responses:\n        200:\n          description: \u003e\n            The result data.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/updatePkgCategoriesResponseEnvelope\"\n\n  /__api/v2/pkg/search-pkgs:\n    description: \u003e\n      This method can be invoked to get a list of all of the packages that match some search critera in the\n      request.\n    post:\n      tags:\n        - pkg\n      operationId: searchPkgs\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/searchPkgsRequestEnvelope\"\n      responses:\n        200:\n          description: \u003e\n            The result data.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/searchPkgsResponseEnvelope\"\n\n  /__api/v2/pkg/get-pkg:\n    description: \u003e\n      This method will return a package and the specified versions.  It will throw an\n      {@link ObjectNotFoundException} if the package was not able to be located.\n    post:\n      tags:\n        - pkg\n      operationId: getPkg\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/getPkgRequestEnvelope\"\n      responses:\n        200:\n          description: \u003e\n            The result data.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/getPkgResponseEnvelope\"\n\n  /__api/v2/pkg/get-pkg-icons:\n    description: \u003e\n      Returns a list of meta-data regarding the icon data related to the pkg.  This does not contain the icon\n      data itself; just the meta data.\n    post:\n      tags:\n        - pkg\n      operationId: getPkgIcons\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/getPkgIconsRequestEnvelope\"\n      responses:\n        200:\n          description: \u003e\n            The result data.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/getPkgIconsResponseEnvelope\"\n\n  /__api/v2/pkg/configure-pkg-icon:\n    description: \u003e\n      This request will configure the icons for the package nominated.  Note that only certain configurations of\n      icon data may be acceptable; for example, it will require a 16x16px and 32x32px bitmap image.\n    post:\n      tags:\n        - pkg\n      operationId: configurePkgIcon\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/configurePkgIconRequestEnvelope\"\n      responses:\n        200:\n          description: \u003e\n            The result data.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/configurePkgIconResponseEnvelope\"\n\n  /__api/v2/pkg/remove-pkg-icon:\n    description: \u003e\n      This request will remove any icons from the package.\n    post:\n      tags:\n        - pkg\n      operationId: removePkgIcon\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/removePkgIconRequestEnvelope\"\n      responses:\n        200:\n          description: \u003e\n            The result data.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/removePkgIconResponseEnvelope\"\n\n  /__api/v2/pkg/get-pkg-screenshot:\n    description: \u003e\n      This method will get the details of a screenshot image.\n    post:\n      tags:\n        - pkg\n      operationId: getPkgScreenshot\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/getPkgScreenshotRequestEnvelope\"\n      responses:\n        200:\n          description: \u003e\n            The response envelope.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/getPkgScreenshotResponseEnvelope\"\n\n  /__api/v2/pkg/get-pkg-screenshots:\n    description: \u003e\n      This method will return an ordered list of the screenshots that are available for this package.  It will\n      throw an {@link ObjectNotFoundException} in the case where the\n      nominated package is not able to be found.\n    post:\n      tags:\n        - pkg\n      operationId: getPkgScreenshots\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/getPkgScreenshotsRequestEnvelope\"\n      responses:\n        200:\n          description: \u003e\n            The response envelope.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/getPkgScreenshotsResponseEnvelope\"\n\n  /__api/v2/pkg/remove-pkg-screenshot:\n    description: \u003e\n      This method will remove the nominated screenshot from the package.  If the screenshot is not able to be\n      found using the code supplied, the method will throw an instance of\n      {@link ObjectNotFoundException}.\n    post:\n      tags:\n        - pkg\n      operationId: removePkgScreenshot\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/removePkgScreenshotRequestEnvelope\"\n      responses:\n        200:\n          description: \u003e\n            The response envelope.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/removePkgScreenshotResponseEnvelope\"\n\n  /__api/v2/pkg/reorder-pkg-screenshots:\n    description: \u003e\n      This method will reorder the screenshots related to the nominated package.  If any of the screenshots are\n      not accounted for, they will be ordered at the end in an indeterminate manner.  If the package is not able to be\n      found given the name supplied, an instance of\n      {@link ObjectNotFoundException} will be thrown.\n    post:\n      tags:\n        - pkg\n      operationId: reorderPkgScreenshots\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/reorderPkgScreenshotsRequestEnvelope\"\n      responses:\n        200:\n          description: \u003e\n            The response envelope.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/reorderPkgScreenshotsResponseEnvelope\"\n\n  /__api/v2/pkg/update-pkg-localization:\n    description: \u003e\n      This method will update the localizations supplied for the package identified in the request.  In order to\n      remove a localization for a given language, supply the localization data for that language as NULL.\n    post:\n      tags:\n        - pkg\n      operationId: updatePkgLocalization\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/updatePkgLocalizationRequestEnvelope\"\n      responses:\n        200:\n          description: \u003e\n            The response envelope.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/updatePkgLocalizationResponseEnvelope\"\n\n  /__api/v2/pkg/get-pkg-localizations:\n    description: \u003e\n      This method will return all of the localizations that are specific to the\n      package identified in the request.\n    post:\n      tags:\n        - pkg\n      operationId: getPkgLocalizations\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/getPkgLocalizationsRequestEnvelope\"\n      responses:\n        200:\n          description: \u003e\n            The response envelope.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/getPkgLocalizationsResponseEnvelope\"\n\n  /__api/v2/pkg/get-pkg-version-localizations:\n    description: \u003e\n      This method will return the package version localizations for the nominated package.  It will return\n      data for the latest package version in the architecture nominated in the request.  The architecture is\n      required.  If a \"major\" value is supplied in the request then it is assumed that the request is in the\n      context of a specific package version rather than the latest.\n    post:\n      tags:\n        - pkg\n      operationId: getPkgVersionLocalizations\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/getPkgVersionLocalizationsRequestEnvelope\"\n      responses:\n        200:\n          description: \u003e\n            The response envelope.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/getPkgVersionLocalizationsResponseEnvelope\"\n\n  /__api/v2/pkg/update-pkg-prominence:\n    description: \u003e\n      This method will update the prominence of the nominated package.  The prominence is identified by the\n      ordering of the prominence as a natural identifier.\n    post:\n      tags:\n        - pkg\n      operationId: updatePkgProminence\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/updatePkgProminenceRequestEnvelope\"\n      responses:\n        200:\n          description: \u003e\n            The response envelope.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/updatePkgProminenceResponseEnvelope\"\n\n  /__api/v2/pkg/get-pkg-changelog:\n    description: \u003e\n      The package might have a change log associated with it.  This is just a long string with notes\n      about what versions were released and what changed in those releases.  If there is no change log\n      stored for this package, a NULL value may be returned in {@link GetPkgChangelogResult#content}.\n    post:\n      tags:\n        - pkg\n      operationId: getPkgChangelog\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/getPkgChangelogRequestEnvelope\"\n      responses:\n        200:\n          description: \u003e\n            The response envelope.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/getPkgChangelogResponseEnvelope\"\n\n  /__api/v2/pkg/update-pkg-changelog:\n    description: \u003e\n      The package is able to have a change log associated with it.  This method will update the change\n      log.  If the change log content is supplied as NULL or an empty string then the change log may be\n      removed.\n    post:\n      tags:\n        - pkg\n      operationId: updatePkgChangelog\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/updatePkgChangelogRequestEnvelope\"\n      responses:\n        200:\n          description: \u003e\n            The response envelope.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/updatePkgChangelogResponseEnvelope\"\n\n  /__api/v2/pkg/update-pkg-version:\n    description: \u003e\n      This method will allow a package version to be updated.\n      @throws ObjectNotFoundException if the package version is not able to be found.\n    post:\n      tags:\n        - pkg\n      operationId: updatePkgVersion\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/updatePkgVersionRequestEnvelope\"\n      responses:\n        200:\n          description: \u003e\n            The response envelope.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/updatePkgVersionResponseEnvelope\"\n\n  /__api/v2/pkg/increment-view-counter:\n    description: \u003e\n      This API will increment the view counter on a PkgVersion.\n    post:\n      tags:\n        - pkg\n      operationId: incrementViewCounter\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/incrementViewCounterRequestEnvelope\"\n      responses:\n        200:\n          description: \u003e\n            The result of having incrementing the view counter.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/incrementViewCounterResponseEnvelope\"\n\n\ncomponents:\n  schemas:\n\n    incrementViewCounterRequestEnvelope:\n      type: object\n      properties:\n        architectureCode:\n          type: string\n        repositoryCode:\n          type: string\n          description: deprecated; use the repositorySourceCode instead\n        repositorySourceCode:\n          type: string\n        name:\n          type: string\n        major:\n          type: string\n        minor:\n          type: string\n        micro:\n          type: string\n        preRelease:\n          type: string\n        revision:\n          type: integer\n          format: int32\n    incrementViewCounterResponseEnvelope:\n      type: object\n      properties:\n        result:\n          $ref: \"#/components/schemas/incrementViewCounterResult\"\n        error:\n          $ref: \"./error.yaml#/components/schemas/error\"\n    incrementViewCounterResult:\n      type: object\n\n    updatePkgCategoriesRequestEnvelope:\n      type: object\n      properties:\n        pkgName:\n          type: string\n        pkgCategoryCodes:\n          type: array\n          items:\n            type: string\n    updatePkgCategoriesResponseEnvelope:\n      type: object\n      properties:\n        result:\n          $ref: \"#/components/schemas/updatePkgCategoriesResult\"\n        error:\n          $ref: \"./error.yaml#/components/schemas/error\"\n    updatePkgCategoriesResult:\n      type: object\n\n    searchPkgsRequestEnvelope:\n      allOf:\n        - $ref: \"./common.yaml#/components/schemas/abstractSearchRequest\"\n        - type: object\n          properties:\n            architectureCode:\n              type: string\n              description: \u003e\n                This effectively specifies the repository sources to use.\n            repositoryCodes:\n              type: array\n              description: \u003e\n                This field specifies the repositories that the search will look for packages in.\n              items:\n                type: string\n            pkgCategoryCode:\n              type: string\n            sortOrdering:\n              $ref: \"#/components/schemas/searchPkgsSortOrdering\"\n            naturalLanguageCode:\n              type: string\n            daysSinceLatestVersion:\n              type: integer\n    searchPkgsResponseEnvelope:\n      type: object\n      properties:\n        result:\n          $ref: \"#/components/schemas/searchPkgsResult\"\n        error:\n          $ref: \"./error.yaml#/components/schemas/error\"\n    searchPkgsResult:\n      type: object\n      properties:\n        total:\n          type: integer\n        items:\n          type: array\n          items:\n            $ref: \"#/components/schemas/searchPkgsPkg\"\n    searchPkgsSortOrdering:\n      type: string\n      enum:\n        - NAME\n        - PROMINENCE\n        - VERSIONCREATETIMESTAMP\n        - VERSIONVIEWCOUNTER\n    searchPkgsPkgVersion:\n      type: object\n      properties:\n        major:\n          type: string\n        minor:\n          type: string\n        micro:\n          type: string\n        preRelease:\n          type: string\n        revision:\n          type: integer\n        createTimestamp:\n          type: integer\n          format: int64\n        viewCounter:\n          type: integer\n          format: int64\n        architectureCode:\n          type: string\n        summary:\n          type: string\n        payloadLength:\n          type: integer\n          format: int64\n        descriptionSnippet:\n          type: string\n          description: \u003e\n            If this is relevant to the search then it may be returned.\n        title:\n          type: string\n          description: \u003e\n            This value is localized.\n        repositorySourceCode:\n          type: string\n        repositoryCode:\n          type: string\n    searchPkgsPkg:\n      type: object\n      properties:\n        name:\n          type: string\n        modifyTimestamp:\n          type: integer\n          format: int64\n        hasAnyPkgIcons:\n          type: boolean\n          description: \u003e\n            This will be true if the package has any icon data stored for it;\n            regardless of the format of that icon.  This can be used as a cue as\n            to the value in using a specific URL to get a specific icon for the\n            package or to use a generic icon.\n        versions:\n          type: array\n          description: \u003e\n            This versions value should only contain the one item actually, but is\n            provided in this form to retain consistency with other API.\n          items:\n            $ref : \"#/components/schemas/searchPkgsPkgVersion\"\n        derivedRating:\n          type: number\n\n    getPkgRequestEnvelope:\n      type: object\n      properties:\n        repositorySourceCode:\n          type: string\n        name:\n          type: string\n          description: \u003e\n            This is the name of the package that you wish to obtain.\n        incrementViewCounter:\n          type: boolean\n          description: \u003e\n            If this is true then the counter on the version is incremented; indicating that the package has been\n            seen.  Do not use this unless the user is being displayed a user-interface of the package so that they\n            have \u003cem\u003ereally\u003c/em\u003e seen it.  This value may be supplied as null.  This only applies when the\n            {@link PkgVersionType#LATEST} version type is\n            being requested.  Also note that the system has a feature to avoid double counting from the same address in\n            quick succession.\n        architectureCode:\n          type: string\n          description: \u003e\n            Only a version of the package for this architecture will be returned.  Note that this also\n            includes the pseudo-architectures \"any\" and \"source\".\n        versionType:\n          $ref: \"./common.yaml#/components/schemas/pkgVersionType\"\n        naturalLanguageCode:\n          type: string\n        major:\n          type: string\n        minor:\n          type: string\n        micro:\n          type: string\n        preRelease:\n          type: string\n        revision:\n          type: integer\n    getPkgResponseEnvelope:\n      type: object\n      properties:\n        result:\n          $ref: \"#/components/schemas/getPkgResult\"\n        error:\n          $ref: \"./error.yaml#/components/schemas/error\"\n    getPkgResult:\n      type: object\n      description: \u003e\n        This is the result model that comes back from the get packages API invocation.\n      properties:\n        name:\n          type: string\n        modifyTimestamp:\n          type: integer\n          format: int64\n          description: \u003e\n            This is the timestamp (millis since epoc) at which the package was last edited.  This is helpful for\n            situations where it is necessary to create a url that will cause the browser to refresh the data.\n        versions:\n          type: array\n          items:\n            $ref: \"#/components/schemas/getPkgPkgVersion\"\n        pkgCategoryCodes:\n          type: array\n          items:\n            type: string\n        derivedRating:\n          type: number\n        derivedRatingSampleSize:\n          type: integer\n        prominenceOrdering:\n          type: integer\n          description: \u003e\n            This relates to the repository requested.\n        vanityLinkUrl:\n          type: string\n        hasChangelog:\n          type: boolean\n    getPkgPkgVersionUrl:\n      type: object\n      properties:\n        url:\n          type: string\n        urlTypeCode:\n          type: string\n    getPkgPkgVersion:\n      type: object\n      properties:\n        major:\n          type: string\n        minor:\n          type: string\n        micro:\n          type: string\n        preRelease:\n          type: string\n        revision:\n          type: integer\n        architectureCode:\n          type: string\n        summary:\n          type: string\n        description:\n          type: string\n        title:\n          type: string\n          description: \u003e\n            This title is localized.\n        repositorySourceCode:\n          type: string\n        repositoryCode:\n          type: string\n        licenses:\n          type: array\n          items:\n            type: string\n        copyrights:\n          type: array\n          items:\n            type: string\n        urls:\n          type: array\n          items:\n            $ref: \"#/components/schemas/getPkgPkgVersionUrl\"\n        viewCounter:\n          type: integer\n          format: int64\n        isLatest:\n          type: boolean\n        payloadLength:\n          type: integer\n          format: int64\n          description: \u003e\n            The length in bytes of the package payload.\n        createTimestamp:\n          type: integer\n          format: int64\n          description: \u003e\n            This represents when the package version was created in the HDS system.\n        hasSource:\n          type: boolean\n          description: \u003e\n            Is true if the package version has a source package available.\n        hpkgDownloadURL:\n          type: string\n          description: \u003e\n            This value may be a path or may be a full URL.  If it is path then it is assumed\n            that the base URL (scheme and path) are the same as the one on which you have\n            accessed this API on.\n\n    getPkgIconsRequestEnvelope:\n      type: object\n      properties:\n        pkgName:\n          type: string\n    getPkgIconsResponseEnvelope:\n      type: object\n      properties:\n        result:\n          $ref: \"#/components/schemas/getPkgIconsResult\"\n        error:\n          $ref: \"./error.yaml#/components/schemas/error\"\n    getPkgIconsResult:\n      type: object\n      properties:\n        pkgIcons:\n          type: array\n          items:\n            $ref: \"#/components/schemas/getPkgIconsPkgIcon\"\n    getPkgIconsPkgIcon:\n      type: object\n      properties:\n        mediaTypeCode:\n          type: string\n        size:\n          type: integer\n\n    configurePkgIconRequestEnvelope:\n      type: object\n      properties:\n        pkgName:\n          type: string\n        pkgIcons:\n          type: array\n          items:\n            $ref: \"#/components/schemas/configurePkgIconPkgIcon\"\n    configurePkgIconResponseEnvelope:\n      type: object\n      properties:\n        result:\n          $ref: \"#/components/schemas/configurePkgIconResult\"\n        error:\n          $ref: \"./error.yaml#/components/schemas/error\"\n    configurePkgIconResult:\n      type: object\n    configurePkgIconPkgIcon:\n      type: object\n      properties:\n        mediaTypeCode:\n          type: string\n        size:\n          type: integer\n        dataBase64:\n          type: string\n\n    removePkgIconRequestEnvelope:\n      type: object\n      properties:\n        pkgName:\n          type: string\n    removePkgIconResponseEnvelope:\n      type: object\n      properties:\n        result:\n          $ref: \"#/components/schemas/removePkgIconResult\"\n        error:\n          $ref: \"./error.yaml#/components/schemas/error\"\n    removePkgIconResult:\n      type: object\n\n    getPkgScreenshotRequestEnvelope:\n      type: object\n      properties:\n        code:\n          type: string\n    getPkgScreenshotResponseEnvelope:\n      type: object\n      properties:\n        result:\n          $ref: \"#/components/schemas/getPkgScreenshotResult\"\n        error:\n          $ref: \"./error.yaml#/components/schemas/error\"\n    getPkgScreenshotResult:\n      type: object\n      properties:\n        code:\n          type: string\n        length:\n          type: integer\n        height:\n          type: integer\n        width:\n          type: integer\n\n    getPkgScreenshotsRequestEnvelope:\n      type: object\n      properties:\n        pkgName:\n          type: string\n    getPkgScreenshotsResponseEnvelope:\n      type: object\n      properties:\n        result:\n          $ref: \"#/components/schemas/getPkgScreenshotsResult\"\n        error:\n          $ref: \"./error.yaml#/components/schemas/error\"\n    getPkgScreenshotsResult:\n      type: object\n      properties:\n        items:\n          type: array\n          items:\n            $ref: \"#/components/schemas/getPkgScreenshotsScreenshot\"\n    getPkgScreenshotsScreenshot:\n      type: object\n      properties:\n        code:\n          type: string\n        length:\n          type: integer\n        height:\n          type: integer\n        width:\n          type: integer\n\n    removePkgScreenshotRequestEnvelope:\n      type: object\n      properties:\n        code:\n          type: string\n    removePkgScreenshotResponseEnvelope:\n      type: object\n      properties:\n        result:\n          $ref: \"#/components/schemas/removePkgScreenshotResult\"\n        error:\n          $ref: \"./error.yaml#/components/schemas/error\"\n    removePkgScreenshotResult:\n      type: object\n\n    reorderPkgScreenshotsRequestEnvelope:\n      type: object\n      properties:\n        pkgName:\n          type: string\n        codes:\n          type: array\n          description: \u003e\n            This is an ordered list of codes that describe the ordering desired for the screenshots of this package.\n          items:\n            type: string\n    reorderPkgScreenshotsResponseEnvelope:\n      type: object\n      properties:\n        result:\n          $ref: \"#/components/schemas/reorderPkgScreenshotsResult\"\n        error:\n          $ref: \"./error.yaml#/components/schemas/error\"\n    reorderPkgScreenshotsResult:\n      type: object\n\n    updatePkgLocalizationRequestEnvelope:\n      type: object\n      properties:\n        pkgName:\n          type: string\n        pkgLocalizations:\n          type: array\n          items:\n            $ref: \"#/components/schemas/updatePkgLocalizationLocalization\"\n    updatePkgLocalizationResponseEnvelope:\n      type: object\n      properties:\n        result:\n          $ref: \"#/components/schemas/updatePkgLocalizationResult\"\n        error:\n          $ref: \"./error.yaml#/components/schemas/error\"\n    updatePkgLocalizationResult:\n      type: object\n    updatePkgLocalizationLocalization:\n      type: object\n      properties:\n        naturalLanguageCode:\n          type: string\n        title:\n          type: string\n        summary:\n          type: string\n        description:\n          type: string\n\n    getPkgLocalizationsRequestEnvelope:\n      type: object\n      properties:\n        pkgName:\n          type: string\n        naturalLanguageCodes:\n          type: array\n          items:\n            type: string\n    getPkgLocalizationsResponseEnvelope:\n      type: object\n      properties:\n        result:\n          $ref: \"#/components/schemas/getPkgLocalizationsResult\"\n        error:\n          $ref: \"./error.yaml#/components/schemas/error\"\n    getPkgLocalizationsResult:\n      type: object\n      properties:\n        pkgLocalizations:\n          type: array\n          items:\n            $ref: \"#/components/schemas/getPkgLocalizationsPkgLocalization\"\n    getPkgLocalizationsPkgLocalization:\n      type: object\n      properties:\n        naturalLanguageCode:\n          type: string\n        title:\n          type: string\n        summary:\n          type: string\n        description:\n          type: string\n\n    getPkgVersionLocalizationsRequestEnvelope:\n      type: object\n      properties:\n        pkgName:\n          type: string\n        repositorySourceCode:\n          type: string\n        naturalLanguageCodes:\n          type: array\n          items:\n            type: string\n        architectureCode:\n          type: string\n          description: \u003e\n            The architecture is required and is considered if the request is for the latest version of the package\n            or for a specific version.\n        major:\n          type: string\n          description: \u003e\n            If the major value is supplied then the request will be considered to be in the context of a specific\n            package version.  If it is not supplied then the request will be considered to be referring to the\n            latest version of the package.\n        minor:\n          type: string\n        micro:\n          type: string\n        preRelease:\n          type: string\n        revision:\n          type: integer\n    getPkgVersionLocalizationsResponseEnvelope:\n      type: object\n      properties:\n        result:\n          $ref: \"#/components/schemas/getPkgVersionLocalizationsResult\"\n        error:\n          $ref: \"./error.yaml#/components/schemas/error\"\n    getPkgVersionLocalizationsResult:\n      type: object\n      properties:\n        pkgVersionLocalizations:\n          type: array\n          items:\n            $ref: \"#/components/schemas/getPkgVersionLocalizationsPkgVersionLocalization\"\n    getPkgVersionLocalizationsPkgVersionLocalization:\n      type: object\n      properties:\n        naturalLanguageCode:\n          type: string\n        summary:\n          type: string\n        description:\n          type: string\n\n    updatePkgProminenceRequestEnvelope:\n      type: object\n      properties:\n        pkgName:\n          type: string\n        repositoryCode:\n          type: string\n          description: \u003e\n            This update will occur to the nominated package in relation only to\n            this repository.\n        prominenceOrdering:\n          type: integer\n    updatePkgProminenceResponseEnvelope:\n      type: object\n      properties:\n        result:\n          $ref: \"#/components/schemas/updatePkgProminenceResult\"\n        error:\n          $ref: \"./error.yaml#/components/schemas/error\"\n    updatePkgProminenceResult:\n      type: object\n\n    getPkgChangelogRequestEnvelope:\n      type: object\n      properties:\n        pkgName:\n          type: string\n    getPkgChangelogResponseEnvelope:\n      type: object\n      properties:\n        result:\n          $ref: \"#/components/schemas/getPkgChangelogResult\"\n        error:\n          $ref: \"./error.yaml#/components/schemas/error\"\n    getPkgChangelogResult:\n      type: object\n      properties:\n        content:\n          type: string\n\n    updatePkgChangelogRequestEnvelope:\n      type: object\n      properties:\n        pkgName:\n          type: string\n        content:\n          type: string\n    updatePkgChangelogResponseEnvelope:\n      type: object\n      properties:\n        result:\n          $ref: \"#/components/schemas/updatePkgChangelogResult\"\n        error:\n          $ref: \"./error.yaml#/components/schemas/error\"\n    updatePkgChangelogResult:\n      type: object\n\n    updatePkgVersionRequestEnvelope:\n      type: object\n      properties:\n        repositorySourceCode:\n          type: string\n        pkgName:\n          type: string\n        architectureCode:\n          type: string\n        major:\n          type: string\n        minor:\n          type: string\n        micro:\n          type: string\n        preRelease:\n          type: string\n        revision:\n          type: integer\n        active:\n          type: boolean\n          description: \u003e\n            This value can be set.\n        filter:\n          type: array\n          items:\n            $ref: \"#/components/schemas/updatePkgVersionFilter\"\n    updatePkgVersionResponseEnvelope:\n      type: object\n      properties:\n        result:\n          $ref: \"#/components/schemas/updatePkgVersionResult\"\n        error:\n          $ref: \"./error.yaml#/components/schemas/error\"\n    updatePkgVersionResult:\n      type: object\n    updatePkgVersionFilter:\n      type: string\n      enum:\n        - ACTIVE\n",
			"canonicalURL": "/github.com/haiku/haikudepotserver@dd5578708900ed39398e07e0d688010044376c0c/-/blob/haikudepotserver-api2/src/main/resources/api2/pkg.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/haiku/haikudepotserver/blob/dd5578708900ed39398e07e0d688010044376c0c/haikudepotserver-api2/src/main/resources/api2/pkg.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "parse: parse spec: parse components: schemas: \"getPkgRequestEnvelope\": parse schema: property \"versionType\": parse schema: at 1:4775: external \"./common.yaml\": get: file: local file reference is not allowed"
}