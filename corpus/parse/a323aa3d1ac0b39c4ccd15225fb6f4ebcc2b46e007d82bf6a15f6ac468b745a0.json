{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/vanilla/vanilla"
		},
		"file": {
			"name": "discussions.yml",
			"size": 0,
			"path": "applications/vanilla/openapi/discussions.yml",
			"byteSize": 54940,
			"content": "openapi: 3.0.2\ninfo:\nx-resourceEvents:\n    discussion:\n        x-addon: \"vanilla\"\n        name: \"Discussion\"\n        type: \"discussion\"\npaths:\n    /discussions:\n        get:\n            parameters:\n                - name: discussionID\n                  description: Filter by a range or CSV of discussion IDs.\n                  in: query\n                  schema:\n                      $ref: \"#/components/schemas/RangeExpression\"\n                - description: Filter by a category.\n                  in: query\n                  name: categoryID\n                  schema:\n                      type: integer\n                - $ref: \"#/components/parameters/DateInserted\"\n                - $ref: \"#/components/parameters/DateUpdated\"\n                - $ref: \"#/components/parameters/DateLastComment\"\n                - description: |-\n                      Filter discussions by site section ID (ex. subcommunity).\n                      The subcommunity ID or folder can be used if you use [smart IDs](https://success.vanillaforums.com/kb/articles/46-smart-ids).\n                      The query looks like:\n\n                      ```\n                      siteSectionID=$subcommunityID:{id|folder}\n                      ```\n                  example: \"$subcommunityID:en\"\n                  in: query\n                  name: siteSectionID\n                  schema:\n                      type: string\n                - description: Filter by discussion type.\n                  in: query\n                  name: type\n                  schema:\n                      type: string\n                  x-filter:\n                      field: d.Type\n                - description: Filter questions by status (accepted, answered, unanswered).\n                  in: query\n                  name: status\n                  schema:\n                      type: string\n                  x-filter:\n                      field: d.QnA\n                - description: \u003e\n                      Only fetch discussions from followed categories. Pinned\n                      discussions are mixed in.\n                  in: query\n                  name: followed\n                  required: true\n                  schema:\n                      default: false\n                      type: boolean\n                - description: \u003e\n                      Whether or not to include pinned discussions. If true, only\n                      return pinned discussions. Cannot be used with the pinOrder\n                      parameter.\n                  in: query\n                  name: pinned\n                  schema:\n                      type: boolean\n                - description: \u003e\n                      If including pinned posts, in what order should they be\n                      integrated? When \"first\", discussions pinned to a specific category\n                      will only be affected if the discussion's category is passed as the\n                      categoryID parameter. Cannot be used with the pinned parameter.\n\n                      Must be one of: \"first\", \"mixed\".\n                  in: query\n                  name: pinOrder\n                  schema:\n                      type: string\n                      default: first\n                      enum:\n                          - first\n                          - mixed\n                - $ref: \"#/components/parameters/Page\"\n                - description: \u003e\n                      Desired number of items per page. **Note that you may not get the exact number of records back as specified\n                      with the limit unless you also specify pinOrder=mixed**. This is an optimization for pinned\n                      (i.e. announcement) discussion handling.\n                  in: query\n                  name: limit\n                  schema:\n                      type: integer\n                      default: 30\n                      maximum: 100\n                      minimum: 1\n                - name: sort\n                  description: Sort the results.\n                  in: query\n                  schema:\n                      type: string\n                      enum:\n                          - dateLastComment\n                          - dateInserted\n                          - discussionID\n                          - -dateLastComment\n                          - -dateInserted\n                          - -discussionID\n                - description: |\n                      Filter by author.\n                  in: query\n                  name: insertUserID\n                  schema:\n                      type: integer\n                  x-filter:\n                      field: d.InsertUserID\n                - $ref: \"#/components/parameters/DiscussionExpand\"\n                - description: The group the discussion is in.\n                  in: query\n                  name: groupID\n                  schema:\n                      type: integer\n                  allowEmptyValue: true\n                - description: Filter by resolved status.\n                  in: query\n                  name: resolved\n                  schema:\n                      type: boolean\n                  x-filter:\n                      field: d.Resolved\n            responses:\n                \"200\":\n                    content:\n                        \"application/json\":\n                            schema:\n                                items:\n                                    $ref: \"#/components/schemas/Discussion\"\n                                type: array\n                    description: Success\n            tags:\n                - Discussions\n            summary: List discussions.\n        post:\n            responses:\n                \"201\":\n                    content:\n                        \"application/json\":\n                            schema:\n                                $ref: \"#/components/schemas/Discussion\"\n                    description: Success\n            tags:\n                - Discussions\n            requestBody:\n                content:\n                    application/json:\n                        schema:\n                            $ref: \"#/components/schemas/DiscussionPost\"\n                required: true\n            summary: Add a discussion.\n    /discussions/bookmarked:\n        get:\n            parameters:\n                - $ref: \"#/components/parameters/Page\"\n                - description: |\n                      Desired number of items per page.\n                  in: query\n                  name: limit\n                  schema:\n                      type: integer\n                      default: 30\n                      maximum: 100\n                      minimum: 1\n                - $ref: \"#/components/parameters/DiscussionExpand\"\n            responses:\n                \"200\":\n                    content:\n                        \"application/json\":\n                            schema:\n                                items:\n                                    $ref: \"#/components/schemas/Discussion\"\n                                type: array\n                    description: Success\n            tags:\n                - Discussions\n            summary: Get a list of the current user's bookmarked discussions.\n    /discussions/idea:\n        x-addon: ideation\n        post:\n            responses:\n                \"201\":\n                    content:\n                        \"application/json\":\n                            schema:\n                                $ref: \"#/components/schemas/Discussion\"\n                    description: Success\n            tags:\n                - Discussions\n            requestBody:\n                content:\n                    application/json:\n                        schema:\n                            $ref: \"#/components/schemas/DiscussionPost\"\n                required: true\n            summary: Add an idea.\n    /discussions/question:\n        x-addon: qna\n        post:\n            responses:\n                \"201\":\n                    content:\n                        \"application/json\":\n                            schema:\n                                $ref: \"#/components/schemas/Discussion\"\n                    description: Success\n            tags:\n                - Discussions\n            requestBody:\n                content:\n                    application/json:\n                        schema:\n                            $ref: \"#/components/schemas/DiscussionPost\"\n                required: true\n            summary: Add a discussion.\n    /discussions/search:\n        get:\n            parameters:\n                - description: |\n                      The numeric ID of a category to limit search results to.\n                  in: query\n                  name: categoryID\n                  schema:\n                      type: integer\n                - description: \u003e\n                      Limit results to those in followed categories. Cannot be used\n                      with the categoryID parameter.\n                  in: query\n                  name: followed\n                  schema:\n                      type: boolean\n                - description: |\n                      Search terms.\n                  in: query\n                  name: query\n                  required: true\n                  schema:\n                      minLength: 1\n                      type: string\n                - $ref: \"#/components/parameters/Page\"\n                - description: |\n                      Desired number of items per page.\n                  in: query\n                  name: limit\n                  schema:\n                      type: integer\n                      default: 30\n                      maximum: 100\n                      minimum: 1\n                - $ref: \"#/components/parameters/DiscussionExpand\"\n            responses:\n                \"200\":\n                    content:\n                        \"application/json\":\n                            schema:\n                                items:\n                                    $ref: \"#/components/schemas/Discussion\"\n                                type: array\n                    description: Success\n            tags:\n                - Discussions\n            summary: Search discussions.\n    \"/discussions/{id}\":\n        delete:\n            parameters:\n                - description: |\n                      The discussion ID.\n                  in: path\n                  name: id\n                  required: true\n                  schema:\n                      type: integer\n                - $ref: \"#/components/parameters/DiscussionExpand\"\n            responses:\n                \"202\":\n                    $ref: \"../../dashboard/openapi/responses.yml#/components/responses/TrackingSlipResponse\"\n                \"204\":\n                    description: Success\n                \"403\":\n                    $ref: \"../../dashboard/openapi/responses.yml#/components/responses/PermissionError\"\n                \"408\":\n                    $ref: \"../../dashboard/openapi/responses.yml#/components/responses/LongRunnerResponse\"\n            tags:\n                - Discussions\n            summary: Delete a discussion.\n        get:\n            parameters:\n                - description: |\n                      The discussion ID.\n                  in: path\n                  name: id\n                  required: true\n                  schema:\n                      type: integer\n                - $ref: \"#/components/parameters/DiscussionExpand\"\n            responses:\n                \"200\":\n                    content:\n                        \"application/json\":\n                            schema:\n                                $ref: \"#/components/schemas/Discussion\"\n                    description: Success\n            tags:\n                - Discussions\n            summary: Get a discussion.\n        patch:\n            parameters:\n                - description: The discussion ID.\n                  in: path\n                  name: id\n                  required: true\n                  schema:\n                      type: integer\n            responses:\n                \"200\":\n                    content:\n                        \"application/json\":\n                            schema:\n                                $ref: \"#/components/schemas/Discussion\"\n                    description: Success\n            tags:\n                - Discussions\n            requestBody:\n                content:\n                    application/json:\n                        schema:\n                            $ref: \"#/components/schemas/DiscussionPatch\"\n                required: true\n            summary: Update a discussion.\n    \"/discussions/list\":\n        delete:\n            requestBody:\n                content:\n                    application/json:\n                        schema:\n                            type: object\n                            description: An array of discussion IDs.\n                            properties:\n                                discussionIDs:\n                                    type: array\n                                    items:\n                                        type: integer\n                                    example: [2452, 14253, 14124]\n            responses:\n                \"202\":\n                    $ref: \"../../dashboard/openapi/responses.yml#/components/responses/TrackingSlipResponse\"\n                \"204\":\n                    description: Success\n                \"403\":\n                    $ref: \"../../dashboard/openapi/responses.yml#/components/responses/PermissionError\"\n                \"408\":\n                    $ref: \"../../dashboard/openapi/responses.yml#/components/responses/LongRunnerResponse\"\n            tags:\n                - Discussions\n            summary: Delete a list of discussions.\n    \"/discussions/move\":\n        patch:\n            requestBody:\n                content:\n                    application/json:\n                        schema:\n                            type: object\n                            description: An array of discussion IDs.\n                            properties:\n                                discussionIDs:\n                                    type: array\n                                    items:\n                                        type: integer\n                                categoryID:\n                                    description: The category ID to move discussions into.\n                                    type: integer\n                                addRedirects:\n                                    description: If a redirect discussion needs to be created.\n                                    type: boolean\n            responses:\n                \"200\":\n                    description: Success\n                \"202\":\n                    $ref: \"../../dashboard/openapi/responses.yml#/components/responses/TrackingSlipResponse\"\n                \"403\":\n                    $ref: \"../../dashboard/openapi/responses.yml#/components/responses/PermissionError\"\n                \"408\":\n                    $ref: \"../../dashboard/openapi/responses.yml#/components/responses/LongRunnerResponse\"\n            tags:\n                - Discussions\n            summary: Move a list of discussions.\n    \"/discussions/close\":\n        patch:\n            requestBody:\n                content:\n                    application/json:\n                        schema:\n                            type: object\n                            description: An array of discussion IDs.\n                            properties:\n                                discussionIDs:\n                                    type: array\n                                    items:\n                                        type: integer\n                                closed:\n                                    description: Whether to close (true) or open (false) this set of discussions.\n                                    type: boolean\n            responses:\n                \"200\":\n                    description: Success\n                \"202\":\n                    $ref: \"../../dashboard/openapi/responses.yml#/components/responses/TrackingSlipResponse\"\n                \"403\":\n                    $ref: \"../../dashboard/openapi/responses.yml#/components/responses/PermissionError\"\n                \"408\":\n                    $ref: \"../../dashboard/openapi/responses.yml#/components/responses/LongRunnerResponse\"\n            tags:\n                - Discussions\n            summary: Close/open a list of discussions.\n    \"/discussions/merge\":\n        patch:\n            requestBody:\n                content:\n                    application/json:\n                        schema:\n                            type: object\n                            properties:\n                                discussionIDs:\n                                    description: An array of discussion IDs to merge together.\n                                    type: array\n                                    items:\n                                        type: integer\n                                    example: [2052, 2053, 5602]\n                                destinationDiscussionID:\n                                    description: The discussionID that everything will be merged into.\n                                    type: integer\n                                    example: 2052\n                                addRedirects:\n                                    description: If a redirect discussion needs to be created.\n                                    type: boolean\n                                    example: true\n            responses:\n                \"200\":\n                    description: Success\n                \"202\":\n                    $ref: \"../../dashboard/openapi/responses.yml#/components/responses/TrackingSlipResponse\"\n                \"403\":\n                    $ref: \"../../dashboard/openapi/responses.yml#/components/responses/PermissionError\"\n                \"408\":\n                    $ref: \"../../dashboard/openapi/responses.yml#/components/responses/LongRunnerResponse\"\n            tags:\n                - Discussions\n            summary: Merge discussions.\n    \"/discussions/{id}/bookmark\":\n        put:\n            parameters:\n                - description: The discussion ID.\n                  in: path\n                  name: id\n                  required: true\n                  schema:\n                      type: integer\n            responses:\n                \"200\":\n                    content:\n                        \"application/json\":\n                            schema:\n                                properties:\n                                    bookmarked:\n                                        description: The current bookmark value.\n                                        type: boolean\n                                required:\n                                    - bookmarked\n                                type: object\n                    description: Success\n            tags:\n                - Discussions\n            requestBody:\n                content:\n                    application/json:\n                        schema:\n                            properties:\n                                bookmarked:\n                                    description: Pass true to bookmark or false to remove bookmark.\n                                    type: boolean\n                            required:\n                                - bookmarked\n                            type: object\n                required: true\n            summary: Bookmark a discussion.\n    \"/discussions/{id}/edit\":\n        get:\n            parameters:\n                - description: |\n                      The discussion ID.\n                  in: path\n                  name: id\n                  required: true\n                  schema:\n                      type: integer\n                - $ref: \"#/components/parameters/DiscussionExpand\"\n            responses:\n                \"200\":\n                    content:\n                        \"application/json\":\n                            schema:\n                                $ref: \"#/components/schemas/DiscussionGetEdit\"\n                    description: Success\n            tags:\n                - Discussions\n            summary: Get a discussion for editing.\n    \"/discussions/{id}/type\":\n        put:\n            parameters:\n                - description: The discussion ID.\n                  in: path\n                  name: id\n                  required: true\n                  schema:\n                      type: integer\n            responses:\n                \"200\":\n                    content:\n                        \"application/json\":\n                            schema:\n                                $ref: \"#/components/schemas/Discussion\"\n                    description: Success\n            tags:\n                - Discussions\n            requestBody:\n                content:\n                    application/json:\n                        schema:\n                            properties:\n                                type:\n                                    description: record type to convert to.\n                                    type: string\n                            required:\n                                - recordType\n                            type: object\n                required: true\n            summary: Change a discussion type.\n    \"/discussions/{id}/idea\":\n        x-addon: ideation\n        patch:\n            parameters:\n                - in: path\n                  name: id\n                  required: true\n                  schema:\n                      type: integer\n            responses:\n                \"200\":\n                    content:\n                        \"application/json\":\n                            schema:\n                                properties:\n                                    statusID:\n                                        description: Idea status ID.\n                                        type: integer\n                                    statusNotes:\n                                        description: \u003e-\n                                            Notes on a status change. Notes will persist until\n                                            overwritten.\n                                        minLength: 1\n                                        nullable: true\n                                        type: string\n                                required:\n                                    - statusID\n                                    - statusNotes\n                                type: object\n                    description: Success\n            tags:\n                - Discussions\n            requestBody:\n                content:\n                    application/json:\n                        schema:\n                            properties:\n                                statusID:\n                                    description: Idea status ID.\n                                    type: integer\n                                statusNotes:\n                                    description: \u003e-\n                                        Notes on a status change. Notes will persist until\n                                        overwritten.\n                                    minLength: 1\n                                    nullable: true\n                                    type: string\n                            required:\n                                - statusID\n                                - statusNotes\n                            type: object\n                required: true\n            summary: Update idea metadata on a discussion.\n    \"/discussions/{id}/quote\":\n        get:\n            parameters:\n                - description: |\n                      The discussion ID.\n                  in: path\n                  name: id\n                  required: true\n                  schema:\n                      type: integer\n                - $ref: \"#/components/parameters/DiscussionExpand\"\n            responses:\n                \"200\":\n                    content:\n                        \"application/json\":\n                            schema:\n                                properties:\n                                    bodyRaw:\n                                        description: \u003e-\n                                            The raw body of the discussion. This can be an array of\n                                            rich operations or a string for other formats\n                                        minLength: 1\n                                        type: string\n                                        x-todo: \"tpye: array\"\n                                    dateInserted:\n                                        description: When the discussion was created.\n                                        format: date-time\n                                        type: string\n                                    dateUpdated:\n                                        description: When the discussion was last updated.\n                                        format: date-time\n                                        nullable: true\n                                        type: string\n                                    discussionID:\n                                        description: The ID of the discussion.\n                                        type: integer\n                                    format:\n                                        $ref: \"../../dashboard/openapi/schemas.yml#/components/schemas/Format\"\n                                    insertUser:\n                                        $ref: \"../../dashboard/openapi/schemas.yml#/components/schemas/UserFragment\"\n                                    name:\n                                        description: The title of the discussion\n                                        minLength: 1\n                                        type: string\n                                    url:\n                                        description: The full URL to the discussion.\n                                        minLength: 1\n                                        type: string\n                                required:\n                                    - discussionID\n                                    - name\n                                    - bodyRaw\n                                    - dateInserted\n                                    - dateUpdated\n                                    - insertUser\n                                    - url\n                                    - format\n                                type: object\n                    description: Success\n            tags:\n                - Discussions\n    \"/discussions/{id}/reactions\":\n        x-addon: reactions\n        get:\n            parameters:\n                - description: |\n                      The discussion ID.\n                  in: path\n                  name: id\n                  required: true\n                  schema:\n                      type: integer\n                - description: Filter to a specific reaction type by using its URL code.\n                  in: query\n                  name: type\n                  required: true\n                  schema:\n                      minLength: 1\n                      type: string\n                  allowEmptyValue: true\n                - $ref: \"#/components/parameters/Page\"\n                - description: |\n                      Desired number of items per page.\n                  in: query\n                  name: limit\n                  schema:\n                      type: integer\n                      default: 30\n                      maximum: 100\n                      minimum: 1\n            responses:\n                \"200\":\n                    content:\n                        \"application/json\":\n                            schema:\n                                items:\n                                    properties:\n                                        dateInserted:\n                                            format: date-time\n                                            type: string\n                                        reactionType:\n                                            properties:\n                                                class:\n                                                    minLength: 1\n                                                    type: string\n                                                name:\n                                                    minLength: 1\n                                                    type: string\n                                                tagID:\n                                                    type: integer\n                                                urlcode:\n                                                    minLength: 1\n                                                    type: string\n                                            required:\n                                                - tagID\n                                                - urlcode\n                                                - name\n                                                - class\n                                            type: object\n                                        recordID:\n                                            type: integer\n                                        recordType:\n                                            minLength: 1\n                                            type: string\n                                        tagID:\n                                            type: integer\n                                        user:\n                                            $ref: \"../../dashboard/openapi/schemas.yml#/components/schemas/UserFragment\"\n                                        userID:\n                                            type: integer\n                                    required:\n                                        - recordType\n                                        - recordID\n                                        - tagID\n                                        - userID\n                                        - dateInserted\n                                        - user\n                                        - reactionType\n                                    type: object\n                                type: array\n                    description: Success\n            tags:\n                - Discussions\n            summary: Get reactions to a discussion.\n        post:\n            parameters:\n                - in: path\n                  name: id\n                  required: true\n                  schema:\n                      type: integer\n            responses:\n                \"200\":\n                    content:\n                        \"application/json\":\n                            schema:\n                                items:\n                                    properties:\n                                        class:\n                                            minLength: 1\n                                            type: string\n                                        count:\n                                            type: integer\n                                        name:\n                                            minLength: 1\n                                            type: string\n                                        tagID:\n                                            type: integer\n                                        urlcode:\n                                            minLength: 1\n                                            type: string\n                                    required:\n                                        - tagID\n                                        - urlcode\n                                        - name\n                                        - class\n                                        - count\n                                    type: object\n                                type: array\n                    description: Success\n            tags:\n                - Discussions\n            requestBody:\n                content:\n                    application/json:\n                        schema:\n                            properties:\n                                reactionType:\n                                    description: URL code of a reaction type.\n                                    minLength: 1\n                                    type: string\n                            required:\n                                - reactionType\n                            type: object\n                required: true\n            summary: React to a discussion.\n    \"/discussions/{id}/reactions/{userID}\":\n        x-addon: reactions\n        delete:\n            parameters:\n                - description: |\n                      The discussion ID.\n                  in: path\n                  name: id\n                  required: true\n                  schema:\n                      type: integer\n                - description: |\n                      The target user ID.\n                  in: path\n                  name: userID\n                  required: true\n                  schema:\n                      type: integer\n                - $ref: \"#/components/parameters/DiscussionExpand\"\n            responses:\n                \"204\":\n                    description: Success\n            tags:\n                - Discussions\n            summary: Remove a user's reaction.\n    \"/discussions/{id}/reactions/\":\n        x-addon: reactions\n        delete:\n            parameters:\n                - description: |\n                      The discussion ID.\n                  in: path\n                  name: id\n                  required: true\n                  schema:\n                      type: integer\n            responses:\n                \"204\":\n                    description: Success\n            tags:\n                - Discussions\n            summary: Remove user's own reaction.\n    \"/discussions/{id}/canonical-url\":\n        put:\n            parameters:\n                - description: The discussion ID.\n                  in: path\n                  name: id\n                  required: true\n                  schema:\n                      type: integer\n            responses:\n                \"200\":\n                    content:\n                        \"application/json\":\n                            schema:\n                                $ref: \"#/components/schemas/Discussion\"\n                    description: Success\n                \"404\":\n                    description: Not Found\n                \"400\":\n                    description: Bad Request\n            tags:\n                - Discussions\n            requestBody:\n                content:\n                    application/json:\n                        schema:\n                            properties:\n                                canonicalUrl:\n                                    description: Canonical url for discussion.\n                                    type: string\n                            required:\n                                - canonicalUrl\n                            type: object\n                required: true\n            summary: Set custom canonical url for a discussion.\n        delete:\n            parameters:\n                - description: The discussion ID.\n                  in: path\n                  name: id\n                  required: true\n                  schema:\n                      type: integer\n            responses:\n                \"204\":\n                    description: Success\n                \"404\":\n                    description: Not Found\n            tags:\n                - Discussions\n            summary: Remove custom canonical url for a discussion.\n    /discussions/{id}/tags:\n        parameters:\n            - name: id\n              description: The discussion ID\n              in: path\n              required: true\n              schema:\n                  type: integer\n        put:\n            summary: Set the tags on a discussion.\n            tags:\n                - Discussions\n            requestBody:\n                content:\n                    application/json:\n                        schema:\n                            $ref: \"#/components/schemas/TagReference\"\n            responses:\n                \"200\":\n                    description: Success.\n                    content:\n                        application/json:\n                            schema:\n                                type: array\n                                items:\n                                    $ref: \"#/components/schemas/TagFragment\"\n                \"401\":\n                    $ref: \"#/components/responses/PermissionError\"\n                \"404\":\n                    $ref: \"#/components/responses/NotFound\"\n        post:\n            summary: Add tags to a discussion.\n            tags:\n                - Discussions\n            requestBody:\n                content:\n                    application/json:\n                        schema:\n                            $ref: \"#/components/schemas/TagReference\"\n            responses:\n                \"200\":\n                    description: Success.\n                    content:\n                        application/json:\n                            schema:\n                                type: array\n                                items:\n                                    $ref: \"#/components/schemas/TagFragment\"\n                \"401\":\n                    $ref: \"#/components/responses/PermissionError\"\n                \"404\":\n                    $ref: \"#/components/responses/NotFound\"\ncomponents:\n    parameters:\n        DateLastComment:\n            name: dateLastComment\n            in: query\n            description: \u003e\n                Filter by the date of the last comment or the original discussion date if it has no comments. See [date filters](https://docs.vanillaforums.com/help/apiv2/date-filters/).\n            schema:\n                format: date-filter\n                type: string\n        DiscussionExpand:\n            name: expand\n            description: \u003e\n                Expand associated records using one or more valid field names. A value of \"all\" will expand all expandable fields.\n            in: query\n            schema:\n                type: array\n                items:\n                    type: string\n                    enum:\n                        - all\n                        - category\n                        - insertUser\n                        - lastUser\n                        - lastPost\n                        - lastPost.body\n                        - lastPost.insertUser\n                        - reactions\n                        - tagsIDs\n                        - tags\n            style: form\n    schemas:\n        CategoryFragment:\n            properties:\n                categoryID:\n                    description: The ID of the category.\n                    type: integer\n                name:\n                    description: The name of the category.\n                    minLength: 1\n                    type: string\n                url:\n                    description: Full URL to the category.\n                    minLength: 1\n                    type: string\n            required:\n                - categoryID\n                - name\n                - url\n            type: object\n        Discussion:\n            properties:\n                attributes:\n                    properties:\n                        idea:\n                            properties:\n                                status:\n                                    properties:\n                                        name:\n                                            description: Label for the status.\n                                            minLength: 1\n                                            type: string\n                                        state:\n                                            description: The open/closed state of an idea.\n                                            enum:\n                                                - open\n                                                - closed\n                                            minLength: 1\n                                            type: string\n                                    required:\n                                        - name\n                                        - state\n                                    type: object\n                                statusID:\n                                    description: Unique numeric ID of a status.\n                                    type: integer\n                                statusNotes:\n                                    description: Status update notes.\n                                    minLength: 1\n                                    nullable: true\n                                    type: string\n                                type:\n                                    description: \"Voting type for this idea: up-only or up and down.\"\n                                    enum:\n                                        - up\n                                        - up-down\n                                    minLength: 1\n                                    type: string\n                            required:\n                                - statusNotes\n                                - statusID\n                                - status\n                                - type\n                            type: object\n                            x-addon: ideation\n                    type: object\n                body:\n                    description: The body of the discussion.\n                    minLength: 1\n                    type: string\n                bookmarked:\n                    description: Whether or not the discussion is bookmarked by the current user.\n                    type: boolean\n                category:\n                    $ref: \"#/components/schemas/CategoryFragment\"\n                categoryID:\n                    description: The category the discussion is in.\n                    type: integer\n                closed:\n                    description: Whether the discussion is closed or open.\n                    type: boolean\n                countComments:\n                    description: The number of comments on the discussion.\n                    type: integer\n                countUnread:\n                    description: The number of unread comments.\n                    type: integer\n                countViews:\n                    description: The number of views on the discussion.\n                    type: integer\n                dateInserted:\n                    description: When the discussion was created.\n                    format: date-time\n                    type: string\n                dateUpdated:\n                    description: When the discussion was last updated.\n                    format: date-time\n                    nullable: true\n                    type: string\n                dateLastComment:\n                    description: The date of the last comment or the original discussion date if it has no comments.\n                    type: string\n                    format: date-time\n                discussionID:\n                    description: The ID of the discussion.\n                    type: integer\n                groupID:\n                    x-addon: groups\n                    description: The group the discussion is in.\n                    nullable: true\n                    type: integer\n                image:\n                    $ref: \"../../dashboard/openapi/schemas.yml#/components/schemas/MainImage\"\n                insertUser:\n                    $ref: \"../../dashboard/openapi/schemas.yml#/components/schemas/UserFragment\"\n                insertUserID:\n                    description: The user that created the discussion.\n                    type: integer\n                lastPost:\n                    $ref: \"#/components/schemas/PostFragment\"\n                lastUserID:\n                    type: integer\n                    description: The last user to post in the discussion.\n                lastUser:\n                    $ref: \"../../dashboard/openapi/schemas.yml#/components/schemas/UserFragment\"\n                name:\n                    description: The title of the discussion.\n                    minLength: 1\n                    type: string\n                pinLocation:\n                    description: \u003e-\n                        The location for the discussion, if pinned. \"category\" are pinned to\n                        their own category. \"recent\" are pinned to the recent discussions\n                        list, as well as their own category.\n                    enum:\n                        - category\n                        - recent\n                    minLength: 1\n                    nullable: true\n                    type: string\n                pinned:\n                    description: Whether or not the discussion has been pinned.\n                    type: boolean\n                reactions:\n                    items:\n                        properties:\n                            class:\n                                minLength: 1\n                                type: string\n                            count:\n                                type: integer\n                            name:\n                                minLength: 1\n                                type: string\n                            tagID:\n                                type: integer\n                            urlcode:\n                                minLength: 1\n                                type: string\n                        required:\n                            - tagID\n                            - urlcode\n                            - name\n                            - class\n                            - count\n                        type: object\n                    type: array\n                    x-addon: reactions\n                score:\n                    description: Total points associated with this post.\n                    nullable: true\n                    type: integer\n                sink:\n                    description: Whether or not the discussion has been sunk.\n                    type: boolean\n                type:\n                    description: The type of this discussion if any.\n                    minLength: 1\n                    nullable: true\n                    type: string\n                unread:\n                    description: Whether or not the discussion should have an unread indicator.\n                    type: boolean\n                url:\n                    description: The full URL to the discussion.\n                    type: string\n                resolved:\n                    x-addon: resolved2\n                    description: Whether or not the discussion should has been resolved.\n                    type: boolean\n            required:\n                - discussionID\n                - type\n                - name\n                - body\n                - categoryID\n                - dateInserted\n                - dateUpdated\n                - insertUserID\n                - pinLocation\n                - closed\n                - sink\n                - countComments\n                - countViews\n                - score\n                - bookmarked\n                - unread\n                - attributes\n            type: object\n        DiscussionGetEdit:\n            properties:\n                body:\n                    description: The body of the discussion.\n                    minLength: 1\n                    type: string\n                categoryID:\n                    description: The category the discussion is in.\n                    type: integer\n                closed:\n                    description: Whether the discussion is closed or open.\n                    type: boolean\n                discussionID:\n                    description: The ID of the discussion.\n                    type: integer\n                format:\n                    $ref: \"../../dashboard/openapi/schemas.yml#/components/schemas/Format\"\n                groupID:\n                    x-addon: groups\n                    description: The group the discussion is in.\n                    nullable: true\n                    type: integer\n                name:\n                    description: The title of the discussion.\n                    minLength: 1\n                    type: string\n                pinLocation:\n                    description: |\n                        The location for the discussion, if pinned. \"category\" are pinned to their own category.\n                        \"recent\" are pinned to the recent discussions list, as well as their own category.\n                    enum:\n                        - category\n                        - recent\n                    minLength: 1\n                    nullable: true\n                    type: string\n                pinned:\n                    description: Whether or not the discussion has been pinned.\n                    type: boolean\n                sink:\n                    description: Whether or not the discussion has been sunk.\n                    type: boolean\n            required:\n                - discussionID\n                - name\n                - body\n                - format\n                - categoryID\n                - sink\n                - closed\n                - pinned\n                - pinLocation\n            type: object\n        DiscussionPost:\n            properties:\n                body:\n                    description: The body of the discussion.\n                    minLength: 1\n                    type: string\n                categoryID:\n                    description: The category the discussion is in.\n                    type: integer\n                closed:\n                    description: Whether the discussion is closed or open.\n                    type: boolean\n                format:\n                    $ref: \"../../dashboard/openapi/schemas.yml#/components/schemas/Format\"\n                groupID:\n                    x-addon: groups\n                    description: The group the discussion is in.\n                    nullable: true\n                    type: integer\n                name:\n                    description: The title of the discussion.\n                    minLength: 1\n                    type: string\n                pinLocation:\n                    description: \u003e-\n                        The location for the discussion, if pinned. \"category\" are pinned to\n                        their own category. \"recent\" are pinned to the recent discussions\n                        list, as well as their own category.\n                    enum:\n                        - category\n                        - recent\n                    minLength: 1\n                    nullable: true\n                    type: string\n                pinned:\n                    description: Whether or not the discussion has been pinned.\n                    type: boolean\n                sink:\n                    description: Whether or not the discussion has been sunk.\n                    type: boolean\n                resolved:\n                    x-addon: resolved2\n                    description: Whether or not the discussion should has been resolved.\n                    type: boolean\n            required:\n                - name\n                - body\n                - format\n            type: object\n        DiscussionPatch:\n            properties:\n                body:\n                    description: The body of the discussion.\n                    minLength: 1\n                    type: string\n                categoryID:\n                    description: The category the discussion is in.\n                    type: integer\n                closed:\n                    description: Whether the discussion is closed or open.\n                    type: boolean\n                format:\n                    $ref: \"../../dashboard/openapi/schemas.yml#/components/schemas/Format\"\n                groupID:\n                    x-addon: groups\n                    description: The group the discussion is in.\n                    nullable: true\n                    type: integer\n                name:\n                    description: The title of the discussion.\n                    minLength: 1\n                    type: string\n                pinLocation:\n                    description: \u003e-\n                        The location for the discussion, if pinned. \"category\" are pinned to\n                        their own category. \"recent\" are pinned to the recent discussions\n                        list, as well as their own category.\n                    enum:\n                        - category\n                        - recent\n                    minLength: 1\n                    nullable: true\n                    type: string\n                pinned:\n                    description: Whether or not the discussion has been pinned.\n                    type: boolean\n                sink:\n                    description: Whether or not the discussion has been sunk.\n                    type: boolean\n                resolved:\n                    x-addon: resolved2\n                    description: Whether or not the discussion should has been resolved.\n                    type: boolean\n            type: object\n        PostFragment:\n            properties:\n                discussionID:\n                    description: The discussion ID of the post.\n                    type: integer\n                commentID:\n                    description: \"The comment ID of the post, if any.\"\n                    type: integer\n                name:\n                    description: The title of the post.\n                    minLength: 1\n                    type: string\n                body:\n                    description: The HTML formatted body of the post.\n                    type: string\n                url:\n                    description: The URL of the post.\n                    minLength: 1\n                    type: string\n                dateInserted:\n                    description: The date of the post.\n                    format: date-time\n                    type: string\n                insertUser:\n                    $ref: \"../../dashboard/openapi/schemas.yml#/components/schemas/UserFragment\"\n                insertUserID:\n                    description: The author of the post.\n                    type: integer\n            required:\n                - name\n                - url\n                - dateInserted\n                - insertUserID\n            type: object\n",
			"canonicalURL": "/github.com/vanilla/vanilla@dfe2732ec86d37eed7eec0956151e79f2f414b4f/-/blob/applications/vanilla/openapi/discussions.yml",
			"externalURLs": [
				{
					"url": "https://github.com/vanilla/vanilla/blob/dfe2732ec86d37eed7eec0956151e79f2f414b4f/applications/vanilla/openapi/discussions.yml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "parse: parse spec: parse components: schemas: \"DiscussionPost\": parse schema: property \"format\": parse schema: resolve \"../../dashboard/openapi/schemas.yml#/components/schemas/Format\": external \"../../dashboard/openapi/schemas.yml\": file: local file reference is not allowed"
}