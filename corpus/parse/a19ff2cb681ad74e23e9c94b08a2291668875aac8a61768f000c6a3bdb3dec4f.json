{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/interledger-rs/interledger-rs"
		},
		"file": {
			"name": "api.yml",
			"size": 0,
			"path": "docs/api.yml",
			"byteSize": 21972,
			"content": "openapi: \"3.0.2\"\ninfo:\n  title: Interledger-rs API Specification\n  version: \"1.0\"\nservers:\n  - url: https://rs3.xpring.dev\ntags:\n  - name: admins\n    description: Secured Admin-only calls\n  - name: users\n    description: Operations available only to authenticated users\npaths:\n  # Health Check\n  /:\n    get:\n      summary: Node health check\n      responses:\n        \"200\":\n          description: The node's information\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/NodeInformation\"\n\n  # Default SPSP Account\n  /.well_known/pay:\n    get:\n      summary: The default SPSP account used on the node. This endpoint is only enabled if the node is run with the configuration option ILP_DEFAULT_SPSP_ACCOUNT. The SPSP spec can be found at https://interledger.org/rfcs/0009-simple-payment-setup-protocol/\n      responses:\n        \"200\":\n          description: The node's SPSP information\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/SpSpInformation\"\n  # Adjust tracing level\n  /tracing-level:\n    put:\n      summary: Adjusts the node's tracing level\n      tags:\n        - admins\n      parameters:\n        - in: header\n          name: authorization\n          schema:\n            type: string\n          required: true\n          description: Bearer token with the administrator's authorization\n      requestBody:\n        required: true\n        description: The desired log level (RUST_LOG format)\n        content:\n          text/plain:\n            schema:\n              type: string\n              example: \"interledger=trace\"\n      responses:\n        \"200\":\n          description: The new log level applied on the node\n          content:\n            text/plain:\n              example: \"Logging level changed to: interledger=trace\"\n  # Accounts endpoints\n  /accounts:\n    get:\n      summary: Returns all accounts on the node\n      tags:\n        - admins\n      parameters:\n        - in: header\n          name: authorization\n          schema:\n            type: string\n          required: true\n          description: Bearer token with the administrator's authorization\n      responses:\n        \"200\":\n          description: Accounts on the node\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: \"#/components/schemas/Account\"\n    post:\n      summary: Adds a new user on the node\n      tags:\n        - admins\n      parameters:\n        - in: header\n          name: authorization\n          schema:\n            type: string\n          required: true\n          description: Bearer token with the administrator's authorization\n      requestBody:\n        description: The details of the account to be added\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/AccountDetails\"\n      responses:\n        \"200\":\n          description: The inserted account (an ID is auto-generated by the node)\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Account\"\n\n  /accounts/{username}:\n    parameters:\n      - in: path\n        name: username\n        schema:\n          type: string\n        required: true\n        description: Username of the account whose information you are operating on\n    get:\n      summary: Gets an account's information\n      tags:\n        - admins\n        - users\n      parameters:\n        - in: header\n          name: authorization\n          schema:\n            type: string\n          required: true\n          description: Bearer token with the account's or administrator's authorization\n      responses:\n        \"200\":\n          description: The requested account's information\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Account\"\n    put:\n      summary: Edit an account's information. This is an administrator-only call which allows modification of any field of the account, not to be confused with the /accounts/:username/settings endpoint which allows a user to edit some of their authorization related data.\n      parameters:\n        - in: header\n          name: authorization\n          schema:\n            type: string\n          required: true\n          description: Bearer token with administrator's authorization\n      tags:\n        - admins\n      requestBody:\n        description: The new details for the specified account\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/AccountDetails\"\n      responses:\n        \"200\":\n          description: The updated account's information\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Account\"\n    delete:\n      summary: Delete an account\n      tags:\n        - admins\n      parameters:\n        - in: header\n          name: authorization\n          schema:\n            type: string\n          required: true\n          description: Bearer token with administrator's authorization\n      responses:\n        \"200\":\n          description: The deleted account's information\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Account\"\n  /accounts/{username}/settings:\n    parameters:\n      - in: path\n        name: username\n        schema:\n          type: string\n        required: true\n        description: Username of the account whose information you are operating on\n    put:\n      summary: Edit an account's settings (e.g. tokens, URLs, settlement thresholds). This should not be confused with the administrator-only PUT /accounts/:username endpoint which allows changing any user parameter.\n      tags:\n        - admins\n        - users\n      parameters:\n        - in: header\n          name: authorization\n          schema:\n            type: string\n          required: true\n          description: Bearer token with the account's or administrator's authorization\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/AccountDetails\"\n        description: The new account details for the specified username\n      responses:\n        \"200\":\n          description: The updated account's information\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/AccountSettings\"\n\n  /accounts/{username}/balance:\n    parameters:\n      - in: path\n        name: username\n        schema:\n          type: string\n        required: true\n        description: Username of the account whose information you are operating on\n    get:\n      summary: Get an account's balance\n      tags:\n        - admins\n        - users\n      parameters:\n        - in: header\n          name: authorization\n          schema:\n            type: string\n          required: true\n          description: Bearer token with the account's or administrator's authorization\n      responses:\n        \"200\":\n          description: The account's balance\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Balance\"\n\n  /accounts/{username}/spsp:\n    parameters:\n      - in: path\n        name: username\n        schema:\n          type: string\n        required: true\n        description: Username of the account whose information you are operating on\n    get:\n      summary: Get an account's SPSP information\n      responses:\n        \"200\":\n          description: The account's Spsp information\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/SpSpInformation\"\n\n  /accounts/{username}/payments:\n    parameters:\n      - in: path\n        name: username\n        schema:\n          type: string\n        required: true\n        description: Username of the account whose information you are operating on\n    post:\n      summary: Send payment to an account. Note that even though this is a user-only endpoint, node operators have access to server secrets, meaning that they could issue payments from any account if they wished to.\n      tags:\n        - users\n      parameters:\n        - in: header\n          name: authorization\n          schema:\n            type: string\n          required: true\n          description: Bearer token with the account's authorization\n      requestBody:\n        description: The receiver's address and amount to be sent\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/PaymentRequest\"\n      responses:\n        \"200\":\n          description: The receipt of delivery to the receiver\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/PaymentResponse\"\n\n  /accounts/{username}/ilp:\n    parameters:\n      - in: path\n        name: username\n        schema:\n          type: string\n        required: true\n        description: Username of the account whose information you are operating on\n    post:\n      summary: This endpoint is used by nodes to send ILP packets over HTTP requests as defined in ILP-over-HTTP (ILP RFC-35)\n      tags:\n        - users\n      parameters:\n        - in: header\n          name: authorization\n          schema:\n            type: string\n          required: true\n          description: Bearer token with the account's authorization\n      requestBody:\n        description: The serialized packet to be sent to the peer\n        content:\n          text/plain:\n            example: \"\"\n      responses:\n        \"200\":\n          description: The serialized fulfill/reject packet received by the peer\n          content:\n            application/octet-stream:\n              example: \"\"\n  # Routing endpoints\n  /routes:\n    get:\n      summary: Gets the routes on the node\n      responses:\n        \"200\":\n          description: The node's prefix-usernames pairs for the routes\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Routes\"\n\n  /routes/static:\n    put:\n      summary: Configures static routes for the node. These will override routes received by CCP broadcast from other nodes.\n      tags:\n        - admins\n      parameters:\n        - in: header\n          name: authorization\n          schema:\n            type: string\n          required: true\n          description: Bearer token with the administrator's authorization\n      requestBody:\n        description: New static routes. The key is a route prefix, and the value is a username of an account.\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/Routes\"\n      responses:\n        \"200\":\n          description: Returns the created static routes\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Routes\"\n\n  /routes/static/{prefix}:\n    put:\n      summary: Configures a single static route for the node. This will override routes received by CCP broadcast from other nodes.\n      tags:\n        - admins\n      parameters:\n        - in: header\n          name: authorization\n          schema:\n            type: string\n          required: true\n          description: Bearer token with the administrator's authorization\n        - in: path\n          name: prefix\n          schema:\n            type: string\n          required: true\n          description: The prefix which you are overriding\n      requestBody:\n        content:\n          text/plain:\n            schema:\n              type: string\n              example: \"alice\"\n      responses:\n        \"200\":\n          description: The created static route\n          content:\n            text/plain:\n              schema:\n                type: string\n                example: \"alice\"\n\n  # Rates endpoints\n  /rates:\n    get:\n      summary: Get all of the node's exchange rates.\n      responses:\n        \"200\":\n          description: The stored exchange rates\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Pairs\"\n    put:\n      summary: Sets new currency rates. Will override any previous values.\n      tags:\n        - admins\n      parameters:\n        - in: header\n          name: authorization\n          schema:\n            type: string\n          required: true\n          description: Bearer token with the administrator's authorization\n      requestBody:\n        description: The new currency rates\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/Pairs\"\n      responses:\n        \"200\":\n          description: Updated rates\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Pairs\"\n\n  # Engines endpoints\n  /settlement/engines:\n    put:\n      summary: Configure the default settlement engines to use for the given asset codes. If an account is not configured with a `settlement_engine_url` but the account's `asset_code` has a settlement engine configured here, the account will automatically be set up to use that settlement engine\n      tags:\n        - admins\n      parameters:\n        - in: header\n          name: authorization\n          schema:\n            type: string\n          required: true\n          description: Bearer token with the administrator's authorization\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/SettlementEngines\"\n        description: Asset Code to engine URL map\n      responses:\n        \"200\":\n          description: Returns the created engines\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Routes\"\n\n# Various data types returned / sent to the API\ncomponents:\n  schemas:\n    PaymentRequest:\n      type: object\n      required:\n        - receiver\n        - source_amount\n      properties:\n        receiver:\n          type: string\n          example: \"$payment-pointer.example.com\"\n        source_amount:\n          type: integer\n          example: 100000\n        slippage:\n          oneOf:\n            - type: number\n            - type: string\n          default: 0.015\n          description: Maximum acceptable slippage percentage below calculated minimum exchange rate\n    PaymentResponse:\n      type: object\n      properties:\n        source_asset_scale:\n          type: integer\n          example: 9\n        source_asset_code:\n          type: string\n          example: \"XYZ\"\n        sent_amount:\n          type: integer\n          example: 1000000\n          description: Amount fulfilled or currently in-flight, in source units\n        source_amount:\n          type: integer\n          description: Total amount *intended* to be sent, in source units\n        in_flight_amount:\n          type: integer\n          description: Amount in-flight (yet to be fulfilled or rejected), in source units\n        delivered_amount:\n          type: number\n          example: 1000000\n          description: Amount fulfilled and received by the recipient, in destination units\n        destination_asset_scale:\n          type: integer\n          example: 9\n        destination_asset_code:\n          type: string\n          example: \"ABC\"\n        from:\n          type: string\n          example: \"example.node_a.alice\"\n        to:\n          type: string\n          example: \"example.node_b.bob.-p3zU4tXsDRCBLg8vt_U6iiyQ5pgZk4MfoCaG1wZDW8\"\n\n    NodeInformation:\n      type: object\n      required:\n        - status\n        - ilp_address\n        - version\n      properties:\n        status:\n          type: string\n          example: \"Ready\"\n        ilp_address:\n          type: string\n          example: \"example.op1\"\n        version:\n          type: string\n          example: \"0.6.0\"\n    SpSpInformation:\n      type: object\n      required:\n        - destination_account\n        - shared_secret\n      properties:\n        destination_account:\n          type: string\n          example: \"example.op1.alice.6BNqDCEa4o9JIDOaN2X2C49o\"\n        shared_secret:\n          type: string\n          example: \"rmnZu6mLrcNhki3fl3CRuzIdosQ7K6HNb9NiE49rqIY=\"\n    Balance:\n      type: object\n      required:\n        - balance\n        - asset_code\n      properties:\n        balance:\n          type: number\n          example: 0.23\n        asset_code:\n          type: string\n          example: \"ABC\"\n    AccountDetails:\n      type: object\n      required:\n        - username\n        - asset_code\n        - asset_scale\n      properties:\n        username:\n          type: string\n          example: Alice\n        asset_scale:\n          type: integer\n          example: 9\n        asset_code:\n          type: string\n          example: \"ABC\"\n        max_packet_amount:\n          type: integer\n          example: 10000000000\n        min_balance:\n          type: integer\n          example: 0\n        ilp_over_http_url:\n          type: string\n          example: \"https://example.com/accounts/our_username_on_peer/ilp\"\n        ilp_over_http_incoming_token:\n          type: string\n          example: \"peer_password\"\n        ilp_over_http_outgoing_token:\n          type: string\n          example: \"our_password_on_peer\"\n        ilp_over_btp_url:\n          type: string\n          example: \"btps://example.com/accounts/our_username_on_peer/ilp/btp\"\n        ilp_over_btp_incoming_token:\n          type: string\n          example: \"peer_password\"\n        ilp_over_btp_outgoing_token:\n          type: string\n          example: \"our_password_on_peer\"\n        settlement_engine_url:\n          type: string\n          example: \"http://engine.example.com\"\n        settle_threshold:\n          type: integer\n          example: 1000000000\n        settle_to:\n          type: integer\n          example: 1000000000\n        routing_relation:\n          type: string\n          example: \"Peer\"\n        round_trip_time:\n          type: integer\n          example: 500\n        amount_per_minute_limit:\n          type: integer\n          example: 1000000000\n        packets_per_minute_limit:\n          type: integer\n          example: 10\n    Account:\n      type: object\n      required:\n        - id\n        - username\n        - asset_scale\n        - asset_code\n        - max_packet_amount\n        - min_balance\n        - ilp_over_http_url\n        - ilp_over_http_incoming_token\n        - ilp_over_http_outgoing_token\n        - ilp_over_btp_url\n        - ilp_over_btp_incoming_token\n        - ilp_over_btp_outgoing_token\n        - settlement_engine_url\n        - settle_threshold\n        - settle_to\n        - routing_relation\n        - round_trip_time\n        - amount_per_minute_limit\n        - packets_per_minute_limit\n      properties:\n        id:\n          type: string\n          format: uuid\n          example: d290f1ee-6c54-4b01-90e6-d701748f0851\n        username:\n          type: string\n          example: Alice\n        asset_scale:\n          type: integer\n          example: 9\n        asset_code:\n          type: string\n          example: \"ABC\"\n        max_packet_amount:\n          type: integer\n          example: 10000000000\n        min_balance:\n          type: integer\n          example: 0\n        ilp_over_http_url:\n          type: string\n          example: \"https://example.com/accounts/our_username_on_peer/ilp\"\n        ilp_over_http_incoming_token:\n          type: string\n          example: \"peer_password\"\n        ilp_over_http_outgoing_token:\n          type: string\n          example: \"our_password_on_peer\"\n        ilp_over_btp_url:\n          type: string\n          example: \"btps://example.com/accounts/our_username_on_peer/ilp/btp\"\n        ilp_over_btp_incoming_token:\n          type: string\n          example: \"peer_password\"\n        ilp_over_btp_outgoing_token:\n          type: string\n          example: \"our_password_on_peer\"\n        settlement_engine_url:\n          type: string\n          example: \"http://engine.example.com\"\n        settle_threshold:\n          type: integer\n          example: 1000000000\n        settle_to:\n          type: integer\n          example: 1000000000\n        routing_relation:\n          type: string\n          example: \"Peer\"\n        round_trip_time:\n          type: integer\n          example: 500\n        amount_per_minute_limit:\n          type: integer\n          example: 1000000000\n        packets_per_minute_limit:\n          type: integer\n          example: 10\n    AccountSettings:\n      type: object\n      properties:\n        ilp_over_http_url:\n          type: string\n          example: \"https://example.com/accounts/our_username_on_peer/ilp\"\n        ilp_over_http_incoming_token:\n          type: string\n          example: \"peer_password\"\n        ilp_over_http_outgoing_token:\n          type: string\n          example: \"our_password_on_peer\"\n        ilp_over_btp_url:\n          type: string\n          example: \"btps://example.com/accounts/our_username_on_peer/ilp/btp\"\n        ilp_over_btp_incoming_token:\n          type: string\n          example: \"peer_password\"\n        ilp_over_btp_outgoing_token:\n          type: string\n          example: \"our_password_on_peer\"\n        settle_threshold:\n          type: integer\n          example: 1000000000\n        settle_to:\n          type: integer\n          example: 1000000000\n    Pairs:\n      example: { \"ABC\": 1.23, \"XYZ\": 3.25 }\n      type: object\n      additionalProperties:\n        type: number\n        example: 1.23\n    Routes:\n      example: { \"example.op1.alice\": \"alice\", \"example.op1\": \"op1\" }\n      type: object\n      additionalProperties:\n        type: string\n        example: \"alice\"\n    SettlementEngines:\n      example:\n        { \"ABC\": \"http://localhost:3001\", \"XYZ\": \"http://localhost:3002\" }\n      type: object\n      additionalProperties:\n        type: string\n        example: \"http://localhost:3001\"\n"
		}
	},
	"Error": "parse: parse spec: paths: /accounts/{username}/payments: post: operation \"\": requestBody: content: \"application/json\": parse schema: parse schema: resolve \"#/components/schemas/PaymentRequest\": parse schema: property \"slippage\": parse default: unexpected type: \"\""
}