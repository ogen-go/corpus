{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/dstack-group/Butterfly"
		},
		"file": {
			"name": "openapi.json",
			"size": 0,
			"path": "user-manager/user-manager-rest-api/openapi/openapi.json",
			"byteSize": 56510,
			"content": "{\n  \"openapi\": \"3.0.0\",\n  \"info\": {\n    \"version\": \"0.0.1\",\n    \"title\": \"Butterfly User Manager API\",\n    \"description\": \"Butterfly User Manager REST API\",\n    \"contact\": {\n      \"name\": \"DStack Group\",\n      \"email\": \"dstackgroup@gmail.com\"\n    }\n  },\n  \"servers\": [\n    {\n      \"url\": \"http://localhost:5000\",\n      \"description\": \"Development Server\"\n    }\n  ],\n  \"tags\": [\n    {\n      \"name\": \"APIStatus\",\n      \"description\": \"Non business operations related to the API health status and usage metrics\"\n    },\n    {\n      \"name\": \"USERS\",\n      \"description\": \"Operations that concern the User module. When a user is removed from the database, its contact account and its subscriptions should be removed as well.\"\n    },\n    {\n      \"name\": \"USER-CONTACTS\",\n      \"description\": \"Operations that link a user to a contaact account of a certain contact platform. Before creating a user contact, it's necessary that a valid user exists.\"\n    },\n    {\n      \"name\": \"PROJECTS\",\n      \"description\": \"Operations that concern the Project module\"\n    },\n    {\n      \"name\": \"SUBSCRIPTIONS\",\n      \"description\": \"Operations that expresses the interest of a user for a particular event emitted by a project\"\n    },\n    {\n      \"name\": \"SEARCH\",\n      \"description\": \"Operations which take in queries to perform a piece of work. For example matching users to alerts.\"\n    }\n  ],\n  \"paths\": {\n    \"/health\": {\n      \"get\": {\n        \"operationId\": \"getHealth\",\n        \"summary\": \"Ensures the server is still alive\",\n        \"tags\": [\n          \"APIStatus\"\n        ],\n        \"responses\": {\n          \"204\": {\n            \"description\": \"OK, no content to return\"\n          }\n        }\n      }\n    },\n    \"/health/metrics\": {\n      \"get\": {\n        \"operationId\": \"getMetrics\",\n        \"summary\": \"Returns some memory and platform metrics from the running server, for DevOps purposes\",\n        \"tags\": [\n          \"APIStatus\"\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"OK, returns the server metrics.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"data\": {\n                      \"$ref\": \"#/components/schemas/Metrics\"\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/users\": {\n      \"get\": {\n        \"operationId\": \"getUsers\",\n        \"summary\": \"Retrieves the list of registered users\",\n        \"tags\": [\n          \"USERS\"\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"OK, returns a list of user records.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"data\": {\n                      \"type\": \"array\",\n                      \"items\": {\n                        \"$ref\": \"#/components/schemas/User\"\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      },\n      \"post\": {\n        \"operationId\": \"createUser\",\n        \"summary\": \"Creates new user and returns the user record\",\n        \"tags\": [\n          \"USERS\"\n        ],\n        \"requestBody\": {\n          \"description\": \"User record\",\n          \"required\": true,\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/CreateUser\"\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"201\": {\n            \"description\": \"OK, user inserted\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"data\": {\n                      \"$ref\": \"#/components/schemas/User\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"409\": {\n            \"description\": \"Unique constraint violation, another user exists with the same email\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"error\": {\n                      \"type\": \"boolean\",\n                      \"description\": \"error message\"\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/users/{email}\": {\n      \"get\": {\n        \"operationId\": \"getUserByEmail\",\n        \"summary\": \"Searches a user by its email and returns its record data\",\n        \"tags\": [\n          \"USERS\"\n        ],\n        \"parameters\": [\n          {\n            \"in\": \"path\",\n            \"name\": \"email\",\n            \"schema\": {\n              \"type\": \"string\",\n              \"format\": \"email\"\n            },\n            \"required\": true\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"OK, user found\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"data\": {\n                      \"$ref\": \"#/components/schemas/User\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"404\": {\n            \"description\": \"Error, the user does not exist\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"error\": {\n                      \"type\": \"boolean\",\n                      \"description\": \"error message\"\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      },\n      \"patch\": {\n        \"operationId\": \"patchUserByEmail\",\n        \"summary\": \"Updates the data of the user identified by the given email and returns the updated user record\",\n        \"tags\": [\n          \"USERS\"\n        ],\n        \"parameters\": [\n          {\n            \"in\": \"path\",\n            \"name\": \"email\",\n            \"schema\": {\n              \"type\": \"string\",\n              \"format\": \"email\"\n            },\n            \"required\": true\n          }\n        ],\n        \"requestBody\": {\n          \"description\": \"User record\",\n          \"required\": true,\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/UpdateUser\"\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"OK, user updated\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"data\": {\n                      \"$ref\": \"#/components/schemas/User\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"404\": {\n            \"description\": \"Error, the user does not exist\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"error\": {\n                      \"type\": \"boolean\",\n                      \"description\": \"error message\"\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      },\n      \"delete\": {\n        \"operationId\": \"deleteUserByEmail\",\n        \"summary\": \"Removes the user that is registered with the given email\",\n        \"tags\": [\n          \"USERS\"\n        ],\n        \"parameters\": [\n          {\n            \"in\": \"path\",\n            \"name\": \"email\",\n            \"schema\": {\n              \"type\": \"string\",\n              \"format\": \"email\"\n            },\n            \"required\": true\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"OK, user deleted\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"data\": {\n                      \"type\": \"object\",\n                      \"nullable\": true\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"404\": {\n            \"description\": \"Error, the user does not exist\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"error\": {\n                      \"type\": \"boolean\",\n                      \"description\": \"error message\"\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/user-contacts/{userEmail}\": {\n      \"get\": {\n        \"operationId\": \"getUserContacts\",\n        \"summary\": \"Lists all the contact platforms and accounts associated with the user identified by the given email.\",\n        \"tags\": [\n          \"USER-CONTACTS\"\n        ],\n        \"parameters\": [\n          {\n            \"in\": \"path\",\n            \"name\": \"userEmail\",\n            \"schema\": {\n              \"type\": \"string\",\n              \"format\": \"email\"\n            },\n            \"required\": true\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"OK, returns the list of contacts available for the current user\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"data\": {\n                      \"$ref\": \"#/components/schemas/UserContactMap\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"404\": {\n            \"description\": \"Error, the user does not exist\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"error\": {\n                      \"type\": \"boolean\",\n                      \"description\": \"error message\"\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/user-contacts/{contactService}\": {\n      \"post\": {\n        \"operationId\": \"createUserContact\",\n        \"summary\": \"Creates a new association between an existing user and a new contact platform where the user wishes to receive event notifications\",\n        \"tags\": [\n          \"USER-CONTACTS\"\n        ],\n        \"parameters\": [\n          {\n            \"in\": \"path\",\n            \"name\": \"contactService\",\n            \"schema\": {\n              \"$ref\": \"#/components/schemas/ThirdPartyContactService\"\n            },\n            \"required\": true\n          }\n        ],\n        \"requestBody\": {\n          \"description\": \"Contact account identifier for the given contact service\",\n          \"required\": true,\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"type\": \"object\",\n                \"required\": [\n                  \"userEmail\",\n                  \"contactRef\"\n                ],\n                \"properties\": {\n                  \"userEmail\": {\n                    \"type\": \"string\",\n                    \"format\": \"email\",\n                    \"description\": \"the email that identifies the user which will have a new platform account\"\n                  },\n                  \"contactRef\": {\n                    \"type\": \"string\",\n                    \"description\": \"the contact account id, such as the Telegram's bot chat id, the Slack's user id, or the Email address (possibly different from the currently registered email)\"\n                  }\n                }\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"201\": {\n            \"description\": \"OK, new contact info added to the user identified by the given email\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"data\": {\n                      \"$ref\": \"#/components/schemas/UserContact\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"404\": {\n            \"description\": \"Error, the user does not exist\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"error\": {\n                      \"type\": \"boolean\",\n                      \"description\": \"error message\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"409\": {\n            \"description\": \"Conflict error, there is already a contact defined for the given user and service\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"error\": {\n                      \"type\": \"boolean\",\n                      \"description\": \"error message\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"422\": {\n            \"description\": \"Error, the chosen contact service isn't supported\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"error\": {\n                      \"type\": \"boolean\",\n                      \"description\": \"error message\"\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/user-contacts/{userEmail}/{contactService}\": {\n      \"put\": {\n        \"operationId\": \"editUserContact\",\n        \"summary\": \"Edits an existing association between a user and a contact platform where the user wishes to receive event notifications\",\n        \"tags\": [\n          \"USER-CONTACTS\"\n        ],\n        \"parameters\": [\n          {\n            \"in\": \"path\",\n            \"name\": \"userEmail\",\n            \"schema\": {\n              \"type\": \"string\",\n              \"format\": \"email\"\n            },\n            \"required\": true\n          },\n          {\n            \"in\": \"path\",\n            \"name\": \"contactService\",\n            \"schema\": {\n              \"$ref\": \"#/components/schemas/ThirdPartyContactService\"\n            },\n            \"required\": true\n          }\n        ],\n        \"requestBody\": {\n          \"description\": \"Updated contact account identifier for the given contact service\",\n          \"required\": true,\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"type\": \"object\",\n                \"properties\": {\n                  \"contactRef\": {\n                    \"type\": \"string\",\n                    \"description\": \"the new contact account id, such as the Telegram's bot chat id, the Slack's user id, or the Email address (possibly different from the currently registered email)\"\n                  }\n                }\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"OK, new contact info updated for the user identified by the given email\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"data\": {\n                      \"$ref\": \"#/components/schemas/UserContact\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"404\": {\n            \"description\": \"Error, the user or the given contact association does not exist\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"error\": {\n                      \"type\": \"boolean\",\n                      \"description\": \"error message\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"422\": {\n            \"description\": \"Error, the chosen contact service isn't supported\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"error\": {\n                      \"type\": \"boolean\",\n                      \"description\": \"error message\"\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      },\n      \"delete\": {\n        \"operationId\": \"deleteUserContact\",\n        \"summary\": \"Removes the user contact specified by contact service. The user is identified by its email\",\n        \"tags\": [\n          \"USER-CONTACTS\"\n        ],\n        \"parameters\": [\n          {\n            \"in\": \"path\",\n            \"name\": \"userEmail\",\n            \"schema\": {\n              \"type\": \"string\",\n              \"format\": \"email\"\n            },\n            \"required\": true\n          },\n          {\n            \"in\": \"path\",\n            \"name\": \"contactService\",\n            \"schema\": {\n              \"$ref\": \"#/components/schemas/ThirdPartyContactService\"\n            },\n            \"required\": true\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"OK, contact info deleted\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"data\": {\n                      \"type\": \"object\",\n                      \"nullable\": true\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"404\": {\n            \"description\": \"Error, the contact info does not exist\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"error\": {\n                      \"type\": \"boolean\",\n                      \"description\": \"error message\"\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/projects\": {\n      \"get\": {\n        \"operationId\": \"getProjects\",\n        \"summary\": \"Retrieves the list of registered projects\",\n        \"tags\": [\n          \"PROJECTS\"\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"OK, returns a list of projects records.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"data\": {\n                      \"type\": \"array\",\n                      \"items\": {\n                        \"$ref\": \"#/components/schemas/Project\"\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      },\n      \"post\": {\n        \"operationId\": \"createProject\",\n        \"summary\": \"Creates new project and returns the project record\",\n        \"tags\": [\n          \"PROJECTS\"\n        ],\n        \"requestBody\": {\n          \"description\": \"Project record\",\n          \"required\": true,\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/CreateProject\"\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"201\": {\n            \"description\": \"OK, project inserted\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"data\": {\n                      \"$ref\": \"#/components/schemas/Project\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"409\": {\n            \"description\": \"Unique constraint violation, another project exists with the same name\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"error\": {\n                      \"type\": \"boolean\",\n                      \"description\": \"error message\"\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/projects/{projectName}\": {\n      \"get\": {\n        \"operationId\": \"getProjectByName\",\n        \"summary\": \"Searches a project by its name and returns its record data\",\n        \"tags\": [\n          \"PROJECTS\"\n        ],\n        \"parameters\": [\n          {\n            \"in\": \"path\",\n            \"name\": \"projectName\",\n            \"schema\": {\n              \"type\": \"string\"\n            },\n            \"required\": true\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"OK, project found\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"data\": {\n                      \"$ref\": \"#/components/schemas/Project\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"404\": {\n            \"description\": \"Error, the project does not exist\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"error\": {\n                      \"type\": \"boolean\",\n                      \"description\": \"error message\"\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      },\n      \"put\": {\n        \"operationId\": \"updateProjectByName\",\n        \"summary\": \"Updates the data of the project identified by the given project name and returns the updated project record\",\n        \"tags\": [\n          \"PROJECTS\"\n        ],\n        \"parameters\": [\n          {\n            \"in\": \"path\",\n            \"name\": \"projectName\",\n            \"schema\": {\n              \"type\": \"string\"\n            },\n            \"required\": true\n          }\n        ],\n        \"requestBody\": {\n          \"description\": \"Project record\",\n          \"required\": true,\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/UpdateProject\"\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"OK, project updated\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"data\": {\n                      \"$ref\": \"#/components/schemas/Project\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"404\": {\n            \"description\": \"Error, the project does not exist\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"error\": {\n                      \"type\": \"boolean\",\n                      \"description\": \"error message\"\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      },\n      \"delete\": {\n        \"operationId\": \"deleteProjectByName\",\n        \"summary\": \"Removes the project that is registered with the given project name\",\n        \"tags\": [\n          \"PROJECTS\"\n        ],\n        \"parameters\": [\n          {\n            \"in\": \"path\",\n            \"name\": \"projectName\",\n            \"schema\": {\n              \"type\": \"string\"\n            },\n            \"required\": true\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"OK, project deleted\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"data\": {\n                      \"type\": \"object\",\n                      \"nullable\": true\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"404\": {\n            \"description\": \"Error, the project does not exist\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"error\": {\n                      \"type\": \"boolean\",\n                      \"description\": \"error message\"\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/projects/{projectName}/{producerService}\": {\n      \"delete\": {\n        \"operationId\": \"removeServiceURLByProjectNameAndProducerService\",\n        \"summary\": \"Given a project name and a producer service name, removes the project URL associated with the specified producer service.\",\n        \"tags\": [\n          \"PROJECTS\"\n        ],\n        \"parameters\": [\n          {\n            \"in\": \"path\",\n            \"name\": \"projectName\",\n            \"schema\": {\n              \"type\": \"string\"\n            },\n            \"required\": true\n          },\n          {\n            \"in\": \"path\",\n            \"name\": \"producerService\",\n            \"schema\": {\n              \"$ref\": \"#/components/schemas/ThirdPartyProducerService\"\n            },\n            \"required\": true\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"OK, the URL associated with the given producer service name has been removed. Returns the updated project record.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"data\": {\n                      \"$ref\": \"#/components/schemas/Project\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"404\": {\n            \"description\": \"Error, the project does not exist\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"error\": {\n                      \"type\": \"boolean\",\n                      \"description\": \"error message\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"422\": {\n            \"description\": \"Unprocessable Entity error, the given producer service name isn't valid\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"error\": {\n                      \"type\": \"boolean\",\n                      \"description\": \"error message\"\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/subscriptions/users/{userEmail}/projects/{projectName}/event-types/{eventType}\": {\n      \"get\": {\n        \"operationId\": \"getSubscription\",\n        \"summary\": \"Given a user email, a project name, and a service event typology, it returns the subscription which associates the specified user, project, and event type together, if any.\",\n        \"tags\": [\n          \"SUBSCRIPTIONS\"\n        ],\n        \"parameters\": [\n          {\n            \"in\": \"path\",\n            \"name\": \"userEmail\",\n            \"schema\": {\n              \"type\": \"string\",\n              \"format\": \"email\"\n            },\n            \"required\": true,\n            \"example\": \"dstackgroup@gmail.com\"\n          },\n          {\n            \"in\": \"path\",\n            \"name\": \"projectName\",\n            \"schema\": {\n              \"type\": \"string\"\n            },\n            \"required\": true,\n            \"example\": \"Butterfly\"\n          },\n          {\n            \"in\": \"path\",\n            \"name\": \"eventType\",\n            \"schema\": {\n              \"$ref\": \"#/components/schemas/ServiceEventType\"\n            },\n            \"required\": true,\n            \"example\": \"GITLAB_COMMIT_CREATED\"\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"OK, subscription found\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"data\": {\n                      \"$ref\": \"#/components/schemas/Subscription\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"404\": {\n            \"description\": \"Error Not Found, the curren user never subscribed to the given project specifying the given event type.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"error\": {\n                      \"type\": \"boolean\",\n                      \"description\": \"error message\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"422\": {\n            \"description\": \"Unprocessable Entity error, the given user email isn't valid, or the project name is either too long or contains special characters, or the specified event type isn't supported.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"error\": {\n                      \"type\": \"boolean\",\n                      \"description\": \"error message\"\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      },\n      \"patch\": {\n        \"operationId\": \"updateSubscription\",\n        \"summary\": \"Given a user email, a project name, and a service event typology, edits the existing subscription which associates the specified user, project, and event type together, if any.\",\n        \"tags\": [\n          \"SUBSCRIPTIONS\"\n        ],\n        \"parameters\": [\n          {\n            \"in\": \"path\",\n            \"name\": \"userEmail\",\n            \"schema\": {\n              \"type\": \"string\",\n              \"format\": \"email\"\n            },\n            \"required\": true,\n            \"example\": \"dstackgroup@gmail.com\"\n          },\n          {\n            \"in\": \"path\",\n            \"name\": \"projectName\",\n            \"schema\": {\n              \"type\": \"string\"\n            },\n            \"required\": true,\n            \"example\": \"Butterfly\"\n          },\n          {\n            \"in\": \"path\",\n            \"name\": \"eventType\",\n            \"schema\": {\n              \"$ref\": \"#/components/schemas/ServiceEventType\"\n            },\n            \"required\": true,\n            \"example\": \"GITLAB_COMMIT_CREATED\"\n          }\n        ],\n        \"requestBody\": {\n          \"description\": \"Subscription record\",\n          \"required\": true,\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/UpdateSubscription\"\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"OK, subscription edited\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"data\": {\n                      \"$ref\": \"#/components/schemas/Subscription\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"404\": {\n            \"description\": \"Error Not Found, the curren user never subscribed to the given project specifying the given event type.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"error\": {\n                      \"type\": \"boolean\",\n                      \"description\": \"error message\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"422\": {\n            \"description\": \"Unprocessable Entity error, the given user email isn't valid, or the project name is either too long or contains special characters, or the specified event type isn't supported.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"error\": {\n                      \"type\": \"boolean\",\n                      \"description\": \"error message\"\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      },\n      \"delete\": {\n        \"operationId\": \"deleteSubscription\",\n        \"summary\": \"Removes a subscription that keeps the user identified by the given email notified about the given project and event type.\",\n        \"tags\": [\n          \"SUBSCRIPTIONS\"\n        ],\n        \"parameters\": [\n          {\n            \"in\": \"path\",\n            \"name\": \"userEmail\",\n            \"schema\": {\n              \"type\": \"string\",\n              \"format\": \"email\"\n            },\n            \"required\": true,\n            \"example\": \"dstackgroup@gmail.com\"\n          },\n          {\n            \"in\": \"path\",\n            \"name\": \"projectName\",\n            \"schema\": {\n              \"type\": \"string\"\n            },\n            \"required\": true,\n            \"example\": \"Butterfly\"\n          },\n          {\n            \"in\": \"path\",\n            \"name\": \"eventType\",\n            \"schema\": {\n              \"$ref\": \"#/components/schemas/ServiceEventType\"\n            },\n            \"required\": true,\n            \"example\": \"GITLAB_COMMIT_CREATED\"\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"OK, subscription deleted\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"data\": {\n                      \"type\": \"object\",\n                      \"nullable\": true\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"404\": {\n            \"description\": \"Error Not Found, the curren subscription cannot be found.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"error\": {\n                      \"type\": \"boolean\",\n                      \"description\": \"error message\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"422\": {\n            \"description\": \"Unprocessable Entity error, the given user email isn't valid, or the project name is either too long or contains special characters, or the specified event type isn't supported.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"error\": {\n                      \"type\": \"boolean\",\n                      \"description\": \"error message\"\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/subscriptions\": {\n      \"post\": {\n        \"operationId\": \"createSubscription\",\n        \"summary\": \"Subscribes a user to a particular event of a project, sets the contact platform of choice to receive notifications and a list of keywords to be compared with the contents of the future events.\",\n        \"tags\": [\n          \"SUBSCRIPTIONS\"\n        ],\n        \"requestBody\": {\n          \"description\": \"Subscription record\",\n          \"required\": true,\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/CreateSubscription\"\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"201\": {\n            \"description\": \"OK, subscription created\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"data\": {\n                      \"$ref\": \"#/components/schemas/Subscription\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"404\": {\n            \"description\": \"Error Not Found, may be due to the absence of an association between the user and the given contact platform, due to the absence of a project with the given name, or maybe the chosen event isn't supported.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"error\": {\n                      \"type\": \"boolean\",\n                      \"description\": \"error message\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"409\": {\n            \"description\": \"Unique constraint violation, another subscription which involves the same user, project and event type exists.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"error\": {\n                      \"type\": \"boolean\",\n                      \"description\": \"error message\"\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/search/receivers\": {\n      \"post\": {\n        \"operationId\": \"searchEventMostLikelyReceivers\",\n        \"summary\": \"Returns the list of users that have an interested in the current record, and should thus get a notification from Butterfly.\",\n        \"tags\": [\n          \"SEARCH\"\n        ],\n        \"requestBody\": {\n          \"description\": \"Event record\",\n          \"required\": true,\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/Event\"\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"201\": {\n            \"description\": \"OK, the list of users which are most likely to be interested in the current event has been returned successfully. A copy of the current event has been saved to the database.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"data\": {\n                      \"$ref\": \"#/components/schemas/UserContactInfoList\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"description\": \"Bad Request, cannot parse the given event structure.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"error\": {\n                      \"type\": \"boolean\",\n                      \"description\": \"error message\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"422\": {\n            \"description\": \"Unprocessable Entity error, the fields inside the event object aren't specified in a valid format.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"error\": {\n                      \"type\": \"boolean\",\n                      \"description\": \"error message\"\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  },\n  \"components\": {\n    \"schemas\": {\n      \"Metrics\": {\n        \"type\": \"object\",\n        \"required\": [\n          \"uptime\",\n          \"platform\",\n          \"freememory\"\n        ],\n        \"properties\": {\n          \"uptime\": {\n            \"type\": \"integer\",\n            \"format\": \"int64\"\n          },\n          \"platform\": {\n            \"type\": \"string\"\n          },\n          \"freememory\": {\n            \"type\": \"integer\",\n            \"format\": \"int64\"\n          }\n        },\n        \"example\": {\n          \"uptime\": 15023,\n          \"platform\": \"Windows 10\",\n          \"freememory\": 5000250\n        }\n      },\n      \"ThirdPartyProducerService\": {\n        \"type\": \"string\",\n        \"enum\": [\n          \"REDMINE\",\n          \"GITLAB\",\n          \"SONARQUBE\"\n        ]\n      },\n      \"ThirdPartyContactService\": {\n        \"type\": \"string\",\n        \"enum\": [\n          \"TELEGRAM\",\n          \"SLACK\",\n          \"EMAIL\"\n        ]\n      },\n      \"UserPriority\": {\n        \"type\": \"string\",\n        \"enum\": [\n          \"LOW\",\n          \"MEDIUM\",\n          \"HIGH\"\n        ]\n      },\n      \"ServiceEventType\": {\n        \"type\": \"string\",\n        \"enum\": [\n          \"REDMINE_TICKET_CREATED\",\n          \"REDMINE_TICKET_EDITED\",\n          \"GITLAB_COMMIT_CREATED\",\n          \"GITLAB_ISSUE_CREATED\",\n          \"GITLAB_ISSUE_EDITED\",\n          \"GITLAB_MERGE_REQUEST_CREATED\",\n          \"GITLAB_MERGE_REQUEST_EDITED\",\n          \"GITLAB_MERGE_REQUEST_MERGED\",\n          \"GITLAB_MERGE_REQUEST_CLOSED\",\n          \"SONARQUBE_PROJECT_ANALYSIS_COMPLETED\"\n        ]\n      },\n      \"CreateUser\": {\n        \"type\": \"object\",\n        \"required\": [\n          \"email\",\n          \"firstname\",\n          \"lastname\"\n        ],\n        \"properties\": {\n          \"email\": {\n            \"type\": \"string\"\n          },\n          \"firstname\": {\n            \"type\": \"string\"\n          },\n          \"lastname\": {\n            \"type\": \"string\"\n          },\n          \"enabled\": {\n            \"type\": \"boolean\",\n            \"default\": true\n          }\n        },\n        \"example\": {\n          \"email\": \"dstackgroup@gmail.com\",\n          \"firstname\": \"DStack\",\n          \"lastname\": \"Group\"\n        }\n      },\n      \"UpdateUser\": {\n        \"type\": \"object\",\n        \"required\": [\n          \"email\"\n        ],\n        \"properties\": {\n          \"email\": {\n            \"type\": \"string\"\n          },\n          \"firstname\": {\n            \"type\": \"string\"\n          },\n          \"lastname\": {\n            \"type\": \"string\"\n          },\n          \"enabled\": {\n            \"type\": \"boolean\",\n            \"default\": true\n          }\n        },\n        \"example\": {\n          \"email\": \"dstackgroup@gmail.com\",\n          \"enabled\": false\n        }\n      },\n      \"User\": {\n        \"type\": \"object\",\n        \"required\": [\n          \"userId\",\n          \"email\",\n          \"firstname\",\n          \"lastname\",\n          \"created\"\n        ],\n        \"properties\": {\n          \"userId\": {\n            \"type\": \"string\"\n          },\n          \"email\": {\n            \"type\": \"string\"\n          },\n          \"firstname\": {\n            \"type\": \"string\"\n          },\n          \"lastname\": {\n            \"type\": \"string\"\n          },\n          \"enabled\": {\n            \"type\": \"boolean\"\n          },\n          \"created\": {\n            \"type\": \"string\",\n            \"format\": \"date-time\"\n          },\n          \"modified\": {\n            \"type\": \"string\",\n            \"format\": \"date-time\",\n            \"nullable\": true\n          }\n        },\n        \"example\": {\n          \"userId\": \"1\",\n          \"email\": \"dstackgroup@gmail.com\",\n          \"firstname\": \"DStack\",\n          \"lastname\": \"Group\",\n          \"enabled\": true\n        }\n      },\n      \"UserContact\": {\n        \"type\": \"object\",\n        \"required\": [\n          \"userContactid\",\n          \"userId\",\n          \"contactType\",\n          \"contactRef\"\n        ],\n        \"properties\": {\n          \"userContactId\": {\n            \"type\": \"string\"\n          },\n          \"userId\": {\n            \"type\": \"string\"\n          },\n          \"contactType\": {\n            \"$ref\": \"#/components/schemas/ThirdPartyContactService\"\n          },\n          \"contactRef\": {\n            \"type\": \"string\"\n          }\n        },\n        \"example\": {\n          \"userContactId\": \"23\",\n          \"userId\": \"1\",\n          \"contactType\": \"TELEGRAM\",\n          \"contactRef\": \"12739814\"\n        }\n      },\n      \"UserContactMap\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"TELEGRAM\": {\n            \"$ref\": \"#/components/schemas/UserContact\"\n          },\n          \"SLACK\": {\n            \"$ref\": \"#/components/schemas/UserContact\"\n          },\n          \"EMAIL\": {\n            \"$ref\": \"#/components/schemas/UserContact\"\n          }\n        },\n        \"example\": {\n          \"TELEGRAM\": {\n            \"userContactId\": \"23\",\n            \"userId\": \"1\",\n            \"contactType\": \"TELEGRAM\",\n            \"contactRef\": \"12739814\"\n          },\n          \"EMAIL\": {\n            \"userContactId\": \"24\",\n            \"userId\": \"1\",\n            \"contactType\": \"EMAIL\",\n            \"contactRef\": \"someemail@gmail.com\"\n          }\n        }\n      },\n      \"ProjectURL\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"REDMINE\": {\n            \"type\": \"string\",\n            \"format\": \"url\",\n            \"nullable\": true\n          },\n          \"GITLAB\": {\n            \"type\": \"string\",\n            \"format\": \"url\",\n            \"nullable\": true\n          },\n          \"SONARQUBE\": {\n            \"type\": \"string\",\n            \"format\": \"url\",\n            \"nullable\": true\n          }\n        },\n        \"example\": {\n          \"REDMINE\": \"http://redmine.dstack.unipd.it\",\n          \"GITLAB\": \"http://gitlab.dstack.unipd.it\"\n        }\n      },\n      \"CreateProject\": {\n        \"type\": \"object\",\n        \"required\": [\n          \"projectName\",\n          \"projectURL\"\n        ],\n        \"properties\": {\n          \"projectName\": {\n            \"type\": \"string\"\n          },\n          \"projectURL\": {\n            \"$ref\": \"#/components/schemas/ProjectURL\"\n          }\n        },\n        \"example\": {\n          \"projectName\": \"Butterfly\",\n          \"projectURL\": {\n            \"REDMINE\": \"http://redmine.dstack.unipd.it\",\n            \"GITLAB\": \"http://gitlab.dstack.unipd.it\"\n          }\n        }\n      },\n      \"UpdateProject\": {\n        \"type\": \"object\",\n        \"required\": [\n          \"projectName\",\n          \"projectURL\"\n        ],\n        \"properties\": {\n          \"projectName\": {\n            \"type\": \"string\"\n          },\n          \"projectURL\": {\n            \"$ref\": \"#/components/schemas/ProjectURL\"\n          }\n        },\n        \"example\": {\n          \"projectName\": \"Butterfly\",\n          \"projectURL\": {\n            \"SONARQUBE\": \"http://sonarqube.dstack.unipd.it\"\n          }\n        }\n      },\n      \"Project\": {\n        \"type\": \"object\",\n        \"required\": [\n          \"projectId\",\n          \"projectName\",\n          \"projectURL\",\n          \"created\"\n        ],\n        \"properties\": {\n          \"projectId\": {\n            \"type\": \"string\"\n          },\n          \"projectName\": {\n            \"type\": \"string\"\n          },\n          \"projectURL\": {\n            \"$ref\": \"#/components/schemas/ProjectURL\"\n          },\n          \"created\": {\n            \"type\": \"string\",\n            \"format\": \"date-time\"\n          },\n          \"updated\": {\n            \"type\": \"string\",\n            \"format\": \"date-time\",\n            \"nullable\": true\n          }\n        },\n        \"example\": {\n          \"projectId\": \"2\",\n          \"projectName\": \"Butterfly\",\n          \"projectURL\": {\n            \"REDMINE\": \"http://redmine.dstack.unipd.it\",\n            \"GITLAB\": \"http://gitlab.dstack.unipd.it\",\n            \"SONARQUBE\": \"http://sonarqube.dstack.unipd.it\"\n          }\n        }\n      },\n      \"CreateSubscription\": {\n        \"type\": \"object\",\n        \"required\": [\n          \"userEmail\",\n          \"projectName\",\n          \"eventType\",\n          \"contactServices\",\n          \"userPriority\",\n          \"keywords\"\n        ],\n        \"properties\": {\n          \"userEmail\": {\n            \"type\": \"string\",\n            \"format\": \"email\"\n          },\n          \"projectName\": {\n            \"type\": \"string\"\n          },\n          \"eventType\": {\n            \"$ref\": \"#/components/schemas/ServiceEventType\"\n          },\n          \"contactServices\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"$ref\": \"#/components/schemas/ThirdPartyContactService\"\n            }\n          },\n          \"userPriority\": {\n            \"$ref\": \"#/components/schemas/UserPriority\"\n          },\n          \"keywords\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"type\": \"string\"\n            }\n          }\n        },\n        \"example\": {\n          \"userEmail\": \"dstackgroup@gmail.com\",\n          \"projectName\": \"Butterfly\",\n          \"eventType\": \"GITLAB_COMMIT_CREATED\",\n          \"contactServices\": [\n            \"TELEGRAM\",\n            \"SLACK\"\n          ],\n          \"userPriority\": \"HIGH\",\n          \"keywords\": [\n            \"bug\",\n            \"fix\",\n            \"performance\"\n          ]\n        }\n      },\n      \"UpdateSubscription\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"contactType\": {\n            \"$ref\": \"#/components/schemas/ThirdPartyContactService\"\n          },\n          \"userPriority\": {\n            \"$ref\": \"#/components/schemas/UserPriority\"\n          },\n          \"keywords\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"type\": \"string\"\n            }\n          }\n        },\n        \"example\": {\n          \"contactTypes\": [\n            \"EMAIL\",\n            \"SLACK\"\n          ],\n          \"userPriority\": \"HIGH\",\n          \"keywords\": [\n            \"bug\",\n            \"fix\",\n            \"performance\"\n          ]\n        }\n      },\n      \"Subscription\": {\n        \"type\": \"object\",\n        \"required\": [\n          \"subscriptionId\",\n          \"userId\",\n          \"projectId\",\n          \"eventType\",\n          \"contactType\",\n          \"userPriority\",\n          \"keywords\"\n        ],\n        \"properties\": {\n          \"subscriptionId\": {\n            \"type\": \"string\"\n          },\n          \"userId\": {\n            \"type\": \"string\"\n          },\n          \"projectId\": {\n            \"type\": \"string\"\n          },\n          \"eventType\": {\n            \"$ref\": \"#/components/schemas/ServiceEventType\"\n          },\n          \"contactTypes\": {\n            \"type\": \"object\",\n            \"properties\": {\n              \"#/components/schemas/ThirdPartyContactService\": {\n                \"type\": \"string\"\n              }\n            }\n          },\n          \"userPriority\": {\n            \"$ref\": \"#/components/schemas/UserPriority\"\n          },\n          \"keywords\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"type\": \"string\"\n            }\n          }\n        },\n        \"example\": {\n          \"subscriptionId\": \"123\",\n          \"userEmail\": \"1\",\n          \"projectName\": \"2\",\n          \"eventType\": \"GITLAB_COMMIT_CREATED\",\n          \"contactTypes\": {\n            \"TELEGRAM\": \"1232398\",\n            \"EMAIL\": \"dstackgroup@gmail.com\"\n          },\n          \"userPriority\": \"HIGH\",\n          \"keywords\": [\n            \"bug\",\n            \"fix\",\n            \"performance\"\n          ]\n        }\n      },\n      \"UserContactInfo\": {\n        \"type\": \"object\",\n        \"required\": [\n          \"firstname\",\n          \"lastname\",\n          \"contacts\"\n        ],\n        \"properties\": {\n          \"firstname\": {\n            \"type\": \"string\"\n          },\n          \"lastname\": {\n            \"type\": \"string\"\n          },\n          \"contactInfo\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"type\": \"object\",\n              \"required\": [\n                \"contactType\",\n                \"contactRef\"\n              ],\n              \"properties\": {\n                \"#/components/schemas/ThirdPartyContactService\": {\n                  \"type\": \"string\"\n                }\n              }\n            }\n          }\n        },\n        \"example\": {\n          \"firstname\": \"Jon\",\n          \"lastname\": \"Snow\",\n          \"contactInfo\": {\n            \"TELEGRAM\": \"120923823\",\n            \"EMAIL\": \"jon.snow@got.co.uk\"\n          }\n        }\n      },\n      \"UserContactInfoList\": {\n        \"type\": \"array\",\n        \"items\": {\n          \"$ref\": \"#/components/schemas/UserContactInfo\"\n        },\n        \"example\": [\n          {\n            \"firstname\": \"Jon\",\n            \"lastname\": \"Snow\",\n            \"contactInfo\": [\n              {\n                \"contactType\": \"TELEGRAM\",\n                \"contactRef\": \"120923823\"\n              },\n              {\n                \"contactType\": \"EMAIL\",\n                \"contactRef\": \"jon.snow@got.co.uk\"\n              }\n            ]\n          },\n          {\n            \"firstname\": \"Sansa\",\n            \"lastname\": \"Stark\",\n            \"contactInfo\": [\n              {\n                \"contactType\": \"SLACK\",\n                \"contactRef\": \"23232nkn23\"\n              }\n            ]\n          }\n        ]\n      },\n      \"Event\": {\n        \"type\": \"object\",\n        \"required\": [\n          \"timestamp\",\n          \"service\",\n          \"projectName\",\n          \"projectURL\",\n          \"eventId\",\n          \"eventType\",\n          \"title\",\n          \"description\",\n          \"tags\"\n        ],\n        \"properties\": {\n          \"timestamp\": {\n            \"type\": \"string\",\n            \"format\": \"date-time\"\n          },\n          \"service\": {\n            \"$ref\": \"#/components/schemas/ThirdPartyProducerService\"\n          },\n          \"projectName\": {\n            \"type\": \"string\"\n          },\n          \"projectURL\": {\n            \"type\": \"string\",\n            \"nullable\": true\n          },\n          \"eventId\": {\n            \"type\": \"string\"\n          },\n          \"eventType\": {\n            \"$ref\": \"#/components/schemas/ServiceEventType\"\n          },\n          \"userEmail\": {\n            \"type\": \"string\",\n            \"format\": \"email\"\n          },\n          \"title\": {\n            \"type\": \"string\"\n          },\n          \"description\": {\n            \"type\": \"string\"\n          },\n          \"tags\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"type\": \"string\"\n            }\n          }\n        },\n        \"example\": {\n          \"service\": \"GITLAB\",\n          \"projectName\": \"Butterfly\",\n          \"projectURL\": \"http://gitlab.dstack.unipd.it\",\n          \"eventId\": \"1\",\n          \"eventType\": \"GITLAB_ISSUE_CREATED\",\n          \"title\": \"Fix kanban card\",\n          \"descripion\": \"Todo kanban fixes for tomorrow\",\n          \"tags\": [\n            \"BUG\",\n            \"FIX\"\n          ]\n        }\n      }\n    },\n    \"responses\": {\n      \"UserSuccessReturnRecord\": {\n        \"description\": \"OK, user processed correctly\",\n        \"content\": {\n          \"application/json\": {\n            \"schema\": {\n              \"type\": \"object\",\n              \"properties\": {\n                \"message\": {\n                  \"type\": \"string\"\n                },\n                \"data\": {\n                  \"$ref\": \"#/components/schemas/User\"\n                }\n              }\n            }\n          }\n        }\n      },\n      \"NotFound\": {\n        \"description\": \"Entity not found.\"\n      },\n      \"IllegalInput\": {\n        \"description\": \"Illegal input for operation.\"\n      }\n    },\n    \"parameters\": {\n      \"skip\": {\n        \"name\": \"skip\",\n        \"in\": \"query\",\n        \"description\": \"number of items to skip\",\n        \"required\": true,\n        \"schema\": {\n          \"type\": \"integer\",\n          \"format\": \"int32\"\n        }\n      },\n      \"limit\": {\n        \"name\": \"limit\",\n        \"in\": \"query\",\n        \"description\": \"max records to return\",\n        \"required\": true,\n        \"schema\": {\n          \"type\": \"integer\",\n          \"format\": \"int32\"\n        }\n      }\n    }\n  }\n}",
			"canonicalURL": "/github.com/dstack-group/Butterfly@87952e4222e52db8511ef5f1ee4b6c0cd01a4ec5/-/blob/user-manager/user-manager-rest-api/openapi/openapi.json",
			"externalURLs": [
				{
					"url": "https://github.com/dstack-group/Butterfly/blob/87952e4222e52db8511ef5f1ee4b6c0cd01a4ec5/user-manager/user-manager-rest-api/openapi/openapi.json",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "parse: parse spec: parse operations: at 332:5: duplicate path: \"/user-contacts/{userEmail}\""
}