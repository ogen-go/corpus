{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/nasa/uam-apis"
		},
		"file": {
			"name": "utm-telemetry.yaml",
			"size": 0,
			"path": "datacollection/openapi/X3/utm-telemetry.yaml",
			"byteSize": 3259,
			"content": "---\nopenapi: 3.0.2\ninfo:\n  title: UTM Telemetry API (USS-\u003eUDC)\n  version: 0.1.0\n  description: |-\n    Interface definitions for sending telemetry to UDC.\n    Endpoint(s) here are protected with the 'utm.strategic_coordination' scope.\n\n\ntags:\n  - name: Telemetry\n    description: Endpoint exposed to collect real-time telemetry data. Send telemetry to UDC for operations in Activated, NonConforming, or Contingent states. Telemetry messages should be sent once per second until the operation transitions to the Ended state.\n\n#\n#\n#\n\npaths:\n  #\n  # UDC Endpoint: TELEMETRY\n  #\n\n  /telemetry/{entityuuid}:\n    summary: Send detailed information on the position of an Operation.\n    parameters:\n      - name: entityuuid\n        description: EntityUUID of the VehicleTelemetry object. Each telemetry message has a unique identifier.\n        schema:\n          $ref: 'https://raw.githubusercontent.com/astm-utm/Protocol/implementation_2020q2/utm.yaml#/components/schemas/EntityUUID'\n        in: path\n        required: true\n\n    put:\n      tags:\n        - Telemetry\n\n      summary: Notify UDC on the position of an Operation in the Activated, NonConforming, or Contingent states.\n      operationId: notifyTelemetryDetails\n      description: Notify UDC directly of telemetry associated with an Operation. Send telemetry once per second.\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: 'https://raw.githubusercontent.com/nasa/uam-apis/master/datacollection/nasa-astm-utm.yaml#/components/schemas/VehicleTelemetry'\n        required: true\n      responses:\n        \"204\":\n          description: Telemetry information received successfully.\n        \"400\":\n          content:\n            application/json:\n              schema:\n                $ref: 'https://raw.githubusercontent.com/astm-utm/Protocol/implementation_2020q2/utm.yaml#/components/schemas/ErrorResponse'\n          description: |-\n            * One or more parameters were missing or invalid.\n            * The Entity could not be parsed, or contains illegal data.\n        \"401\":\n          content:\n            application/json:\n              schema:\n                $ref: 'https://raw.githubusercontent.com/astm-utm/Protocol/implementation_2020q2/utm.yaml#/components/schemas/ErrorResponse'\n          description: |-\n            Bearer access token was not provided in Authorization header, token could not be decoded, or token was invalid.\n        \"403\":\n          content:\n            application/json:\n              schema:\n                $ref: 'https://raw.githubusercontent.com/astm-utm/Protocol/implementation_2020q2/utm.yaml#/components/schemas/ErrorResponse'\n          description: |-\n            * The access token was decoded successfully but did not include a scope appropriate to this endpoint.\n            * The client identified in the access token is not the owner of this Entity according to the receiving client's records.\n        \"429\":\n          content:\n            application/json:\n              schema:\n                $ref: 'https://raw.githubusercontent.com/astm-utm/Protocol/implementation_2020q2/utm.yaml#/components/schemas/ErrorResponse'\n          description: The client issued too many requests in a short period of time.\n",
			"canonicalURL": "/github.com/nasa/uam-apis@d18c3afbdac9b91b89564c7a0f9dbe1c7332a9de/-/blob/datacollection/openapi/X3/utm-telemetry.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/nasa/uam-apis/blob/d18c3afbdac9b91b89564c7a0f9dbe1c7332a9de/datacollection/openapi/X3/utm-telemetry.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "parse: parse spec: parse operations: path \"/telemetry/{entityuuid}\": parameters: parse parameter \"entityuuid\": at 1:286: invalid schema:style:explode combination: (\"\":\"simple\":false)"
}