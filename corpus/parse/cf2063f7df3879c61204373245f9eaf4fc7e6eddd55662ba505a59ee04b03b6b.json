{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/nhost/nhost"
		},
		"file": {
			"name": "hasura-auth.json",
			"size": 0,
			"path": "docs/static/openapi/hasura-auth.json",
			"byteSize": 65967,
			"content": "{\n  \"openapi\": \"3.0.0\",\n  \"info\": {\n    \"title\": \"Hasura auth\",\n    \"description\": \"Authentication for Hasura\",\n    \"license\": {\n      \"name\": \"MIT\",\n      \"url\": \"\"\n    },\n    \"termsOfService\": \"\",\n    \"version\": \"0.7.1\"\n  },\n  \"servers\": [],\n  \"security\": [\n    {\n      \"BearerAuth\": []\n    }\n  ],\n  \"components\": {\n    \"securitySchemes\": {\n      \"BearerAuth\": {\n        \"type\": \"http\",\n        \"scheme\": \"bearer\"\n      }\n    },\n    \"schemas\": {\n      \"SignInPasswordlessEmailSchema\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"email\": {\n            \"type\": \"string\",\n            \"format\": \"email\",\n            \"description\": \"A valid email\",\n            \"example\": \"john.smith@nhost.io\"\n          },\n          \"options\": {\n            \"type\": \"object\",\n            \"properties\": {\n              \"locale\": {\n                \"type\": \"string\",\n                \"description\": \"A two-characters locale\",\n                \"example\": \"en\",\n                \"default\": \"en\"\n              },\n              \"defaultRole\": {\n                \"type\": \"string\",\n                \"enum\": [\n                  \"me\",\n                  \"user\"\n                ],\n                \"example\": \"user\",\n                \"default\": \"user\"\n              },\n              \"allowedRoles\": {\n                \"type\": \"array\",\n                \"items\": {\n                  \"oneOf\": [\n                    {\n                      \"enum\": [\n                        \"me\"\n                      ]\n                    },\n                    {\n                      \"enum\": [\n                        \"user\"\n                      ]\n                    }\n                  ]\n                },\n                \"example\": [\n                  \"me\",\n                  \"user\"\n                ],\n                \"default\": [\n                  \"me\",\n                  \"user\"\n                ]\n              },\n              \"displayName\": {\n                \"type\": \"string\",\n                \"example\": \"John Smith\"\n              },\n              \"metadata\": {\n                \"type\": \"object\",\n                \"properties\": {},\n                \"additionalProperties\": false,\n                \"example\": {\n                  \"firstName\": \"John\",\n                  \"lastName\": \"Smith\"\n                },\n                \"default\": {}\n              },\n              \"redirectTo\": {\n                \"anyOf\": [\n                  {\n                    \"type\": \"string\",\n                    \"pattern\": \"^https:\\\\/\\\\/my-app.com\"\n                  }\n                ],\n                \"example\": \"https://my-app.com/catch-redirection\",\n                \"default\": \"https://my-app.com\"\n              }\n            },\n            \"additionalProperties\": false\n          }\n        },\n        \"required\": [\n          \"email\"\n        ],\n        \"additionalProperties\": false\n      },\n      \"SignUpEmailPasswordSchema\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"email\": {\n            \"type\": \"string\",\n            \"format\": \"email\",\n            \"description\": \"A valid email\",\n            \"example\": \"john.smith@nhost.io\"\n          },\n          \"password\": {\n            \"type\": \"string\",\n            \"minLength\": 3,\n            \"description\": \"A password of minimum 3 characters\",\n            \"example\": \"Str0ngPassw#ord-94|%\"\n          },\n          \"options\": {\n            \"type\": \"object\",\n            \"properties\": {\n              \"locale\": {\n                \"type\": \"string\",\n                \"description\": \"A two-characters locale\",\n                \"example\": \"en\",\n                \"default\": \"en\"\n              },\n              \"defaultRole\": {\n                \"type\": \"string\",\n                \"enum\": [\n                  \"me\",\n                  \"user\"\n                ],\n                \"example\": \"user\",\n                \"default\": \"user\"\n              },\n              \"allowedRoles\": {\n                \"type\": \"array\",\n                \"items\": {\n                  \"oneOf\": [\n                    {\n                      \"enum\": [\n                        \"me\"\n                      ]\n                    },\n                    {\n                      \"enum\": [\n                        \"user\"\n                      ]\n                    }\n                  ]\n                },\n                \"example\": [\n                  \"me\",\n                  \"user\"\n                ],\n                \"default\": [\n                  \"me\",\n                  \"user\"\n                ]\n              },\n              \"displayName\": {\n                \"type\": \"string\",\n                \"example\": \"John Smith\"\n              },\n              \"metadata\": {\n                \"type\": \"object\",\n                \"properties\": {},\n                \"additionalProperties\": false,\n                \"example\": {\n                  \"firstName\": \"John\",\n                  \"lastName\": \"Smith\"\n                },\n                \"default\": {}\n              },\n              \"redirectTo\": {\n                \"anyOf\": [\n                  {\n                    \"type\": \"string\",\n                    \"pattern\": \"^https:\\\\/\\\\/my-app.com\"\n                  }\n                ],\n                \"example\": \"https://my-app.com/catch-redirection\",\n                \"default\": \"https://my-app.com\"\n              }\n            },\n            \"additionalProperties\": false\n          }\n        },\n        \"required\": [\n          \"email\",\n          \"password\"\n        ],\n        \"additionalProperties\": false\n      },\n      \"SignInEmailPasswordSchema\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"email\": {\n            \"type\": \"string\",\n            \"format\": \"email\",\n            \"description\": \"A valid email\",\n            \"example\": \"john.smith@nhost.io\"\n          },\n          \"password\": {\n            \"type\": \"string\",\n            \"example\": \"Str0ngPassw#ord-94|%\"\n          }\n        },\n        \"required\": [\n          \"email\",\n          \"password\"\n        ],\n        \"additionalProperties\": false\n      },\n      \"SignInPasswordlessSmsSchema\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"phoneNumber\": {\n            \"type\": \"string\"\n          },\n          \"options\": {\n            \"type\": \"object\",\n            \"properties\": {\n              \"locale\": {\n                \"type\": \"string\",\n                \"description\": \"A two-characters locale\",\n                \"example\": \"en\",\n                \"default\": \"en\"\n              },\n              \"defaultRole\": {\n                \"type\": \"string\",\n                \"enum\": [\n                  \"me\",\n                  \"user\"\n                ],\n                \"example\": \"user\",\n                \"default\": \"user\"\n              },\n              \"allowedRoles\": {\n                \"type\": \"array\",\n                \"items\": {\n                  \"oneOf\": [\n                    {\n                      \"enum\": [\n                        \"me\"\n                      ]\n                    },\n                    {\n                      \"enum\": [\n                        \"user\"\n                      ]\n                    }\n                  ]\n                },\n                \"example\": [\n                  \"me\",\n                  \"user\"\n                ],\n                \"default\": [\n                  \"me\",\n                  \"user\"\n                ]\n              },\n              \"displayName\": {\n                \"type\": \"string\",\n                \"example\": \"John Smith\"\n              },\n              \"metadata\": {\n                \"type\": \"object\",\n                \"properties\": {},\n                \"additionalProperties\": false,\n                \"example\": {\n                  \"firstName\": \"John\",\n                  \"lastName\": \"Smith\"\n                },\n                \"default\": {}\n              },\n              \"redirectTo\": {\n                \"anyOf\": [\n                  {\n                    \"type\": \"string\",\n                    \"pattern\": \"^https:\\\\/\\\\/my-app.com\"\n                  }\n                ],\n                \"example\": \"https://my-app.com/catch-redirection\",\n                \"default\": \"https://my-app.com\"\n              }\n            },\n            \"additionalProperties\": false\n          }\n        },\n        \"required\": [\n          \"phoneNumber\"\n        ],\n        \"additionalProperties\": false\n      },\n      \"SignInOtpSchema\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"phoneNumber\": {\n            \"type\": \"string\"\n          },\n          \"otp\": {\n            \"type\": \"string\"\n          }\n        },\n        \"required\": [\n          \"phoneNumber\",\n          \"otp\"\n        ],\n        \"additionalProperties\": false\n      },\n      \"SignInMfaTotpSchema\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"ticket\": {\n            \"type\": \"string\",\n            \"pattern\": \"mfaTotp:\\\\b[0-9a-f]{8}\\\\b-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-\\\\b[0-9a-f]{12}\\\\b\",\n            \"example\": \"mfaTotp:e08204c7-40af-4434-a7ed-31c6aa37a390\"\n          },\n          \"otp\": {\n            \"type\": \"string\"\n          }\n        },\n        \"required\": [\n          \"ticket\",\n          \"otp\"\n        ],\n        \"additionalProperties\": false\n      },\n      \"SignInAnonymousSchema\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"locale\": {\n            \"type\": \"string\",\n            \"description\": \"A two-characters locale\",\n            \"example\": \"en\",\n            \"default\": \"en\"\n          },\n          \"displayName\": {\n            \"type\": \"string\",\n            \"example\": \"John Smith\"\n          },\n          \"metadata\": {\n            \"type\": \"object\",\n            \"properties\": {},\n            \"additionalProperties\": false,\n            \"example\": {\n              \"firstName\": \"John\",\n              \"lastName\": \"Smith\"\n            },\n            \"default\": {}\n          }\n        },\n        \"additionalProperties\": false\n      },\n      \"SignOutSchema\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"refreshToken\": {\n            \"type\": \"string\",\n            \"pattern\": \"\\\\b[0-9a-f]{8}\\\\b-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-\\\\b[0-9a-f]{12}\\\\b\",\n            \"description\": \"Refresh token during authentication or when refreshing the JWT\",\n            \"example\": \"2c35b6f3-c4b9-48e3-978a-d4d0f1d42e24\"\n          },\n          \"all\": {\n            \"type\": \"boolean\",\n            \"description\": \"Sign out from all connected devices\",\n            \"default\": false\n          }\n        },\n        \"required\": [\n          \"refreshToken\"\n        ],\n        \"additionalProperties\": false\n      },\n      \"UserPasswordResetSchema\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"email\": {\n            \"type\": \"string\",\n            \"format\": \"email\",\n            \"description\": \"A valid email\",\n            \"example\": \"john.smith@nhost.io\"\n          },\n          \"options\": {\n            \"type\": \"object\",\n            \"properties\": {\n              \"redirectTo\": {\n                \"anyOf\": [\n                  {\n                    \"type\": \"string\",\n                    \"pattern\": \"^https:\\\\/\\\\/my-app.com\"\n                  }\n                ],\n                \"example\": \"https://my-app.com/catch-redirection\",\n                \"default\": \"https://my-app.com\"\n              }\n            },\n            \"additionalProperties\": false\n          }\n        },\n        \"required\": [\n          \"email\"\n        ],\n        \"additionalProperties\": false\n      },\n      \"UserPasswordSchema\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"newPassword\": {\n            \"type\": \"string\",\n            \"example\": \"Str0ngPassw#ord-94|%\"\n          }\n        },\n        \"required\": [\n          \"newPassword\"\n        ],\n        \"additionalProperties\": false\n      },\n      \"UserEmailChangeSchema\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"newEmail\": {\n            \"type\": \"string\",\n            \"format\": \"email\",\n            \"description\": \"A valid email\",\n            \"example\": \"john.smith@nhost.io\"\n          },\n          \"options\": {\n            \"type\": \"object\",\n            \"properties\": {\n              \"redirectTo\": {\n                \"anyOf\": [\n                  {\n                    \"type\": \"string\",\n                    \"pattern\": \"^https:\\\\/\\\\/my-app.com\"\n                  }\n                ],\n                \"example\": \"https://my-app.com/catch-redirection\",\n                \"default\": \"https://my-app.com\"\n              }\n            },\n            \"additionalProperties\": false\n          }\n        },\n        \"additionalProperties\": false\n      },\n      \"UserEmailSendVerificationEmailSchema\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"email\": {\n            \"type\": \"string\",\n            \"format\": \"email\",\n            \"description\": \"A valid email\",\n            \"example\": \"john.smith@nhost.io\"\n          },\n          \"options\": {\n            \"type\": \"object\",\n            \"properties\": {\n              \"redirectTo\": {\n                \"anyOf\": [\n                  {\n                    \"type\": \"string\",\n                    \"pattern\": \"^https:\\\\/\\\\/my-app.com\"\n                  }\n                ],\n                \"example\": \"https://my-app.com/catch-redirection\",\n                \"default\": \"https://my-app.com\"\n              }\n            },\n            \"additionalProperties\": false\n          }\n        },\n        \"required\": [\n          \"email\"\n        ],\n        \"additionalProperties\": false\n      },\n      \"UserMfaSchema\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"code\": {\n            \"type\": \"string\",\n            \"description\": \"MFA activation code\"\n          },\n          \"activeMfaType\": {\n            \"anyOf\": [\n              {\n                \"type\": \"string\",\n                \"enum\": [\n                  \"\"\n                ]\n              },\n              {\n                \"type\": \"string\",\n                \"enum\": [\n                  \"totp\"\n                ]\n              }\n            ],\n            \"description\": \"Multi-factor authentication type. A null value deactivates MFA\",\n            \"example\": \"totp\"\n          }\n        },\n        \"required\": [\n          \"code\"\n        ],\n        \"additionalProperties\": false\n      },\n      \"UserDeanonymizeSchema\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"signInMethod\": {\n            \"type\": \"string\",\n            \"enum\": [\n              \"email-password\",\n              \"passwordless\"\n            ],\n            \"example\": \"email-password\"\n          },\n          \"email\": {\n            \"type\": \"string\",\n            \"format\": \"email\",\n            \"description\": \"A valid email\",\n            \"example\": \"john.smith@nhost.io\"\n          },\n          \"password\": {\n            \"type\": \"string\",\n            \"example\": \"Str0ngPassw#ord-94|%\"\n          },\n          \"connection\": {\n            \"type\": \"string\",\n            \"example\": \"email\"\n          },\n          \"options\": {\n            \"type\": \"object\",\n            \"properties\": {\n              \"locale\": {\n                \"type\": \"string\",\n                \"description\": \"A two-characters locale\",\n                \"example\": \"en\",\n                \"default\": \"en\"\n              },\n              \"defaultRole\": {\n                \"type\": \"string\",\n                \"enum\": [\n                  \"me\",\n                  \"user\"\n                ],\n                \"example\": \"user\",\n                \"default\": \"user\"\n              },\n              \"allowedRoles\": {\n                \"type\": \"array\",\n                \"items\": {\n                  \"oneOf\": [\n                    {\n                      \"enum\": [\n                        \"me\"\n                      ]\n                    },\n                    {\n                      \"enum\": [\n                        \"user\"\n                      ]\n                    }\n                  ]\n                },\n                \"example\": [\n                  \"me\",\n                  \"user\"\n                ],\n                \"default\": [\n                  \"me\",\n                  \"user\"\n                ]\n              },\n              \"displayName\": {\n                \"type\": \"string\",\n                \"example\": \"John Smith\"\n              },\n              \"metadata\": {\n                \"type\": \"object\",\n                \"properties\": {},\n                \"additionalProperties\": false,\n                \"example\": {\n                  \"firstName\": \"John\",\n                  \"lastName\": \"Smith\"\n                },\n                \"default\": {}\n              },\n              \"redirectTo\": {\n                \"anyOf\": [\n                  {\n                    \"type\": \"string\",\n                    \"pattern\": \"^https:\\\\/\\\\/my-app.com\"\n                  }\n                ],\n                \"example\": \"https://my-app.com/catch-redirection\",\n                \"default\": \"https://my-app.com\"\n              }\n            },\n            \"additionalProperties\": false\n          }\n        },\n        \"required\": [\n          \"signInMethod\",\n          \"email\"\n        ],\n        \"additionalProperties\": false\n      },\n      \"UserProviderTokensSchema\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"providerId\": {\n            \"type\": \"string\"\n          },\n          \"userId\": {\n            \"type\": \"string\",\n            \"pattern\": \"\\\\b[0-9a-f]{8}\\\\b-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-\\\\b[0-9a-f]{12}\\\\b\",\n            \"description\": \"Id of the user\",\n            \"example\": \"2c35b6f3-c4b9-48e3-978a-d4d0f1d42e24\"\n          }\n        },\n        \"required\": [\n          \"providerId\",\n          \"userId\"\n        ],\n        \"additionalProperties\": false\n      },\n      \"TokenSchema\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"refreshToken\": {\n            \"type\": \"string\",\n            \"pattern\": \"\\\\b[0-9a-f]{8}\\\\b-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-\\\\b[0-9a-f]{12}\\\\b\",\n            \"description\": \"Refresh token during authentication or when refreshing the JWT\",\n            \"example\": \"2c35b6f3-c4b9-48e3-978a-d4d0f1d42e24\"\n          }\n        },\n        \"required\": [\n          \"refreshToken\"\n        ],\n        \"additionalProperties\": false\n      },\n      \"VerifySchema\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"redirectTo\": {\n            \"anyOf\": [\n              {\n                \"type\": \"string\",\n                \"pattern\": \"^https:\\\\/\\\\/my-app.com\"\n              }\n            ],\n            \"example\": \"https://my-app.com/catch-redirection\",\n            \"default\": \"https://my-app.com\"\n          },\n          \"ticket\": {\n            \"type\": \"string\"\n          },\n          \"type\": {\n            \"type\": \"string\"\n          }\n        },\n        \"required\": [\n          \"redirectTo\",\n          \"ticket\",\n          \"type\"\n        ],\n        \"additionalProperties\": false\n      },\n      \"RouteNotFoundError\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"error\": {\n            \"enum\": [\n              \"route-not-found\"\n            ]\n          },\n          \"message\": {\n            \"enum\": [\n              \"Route not found\"\n            ]\n          },\n          \"status\": {\n            \"enum\": [\n              404\n            ]\n          }\n        },\n        \"additionalProperties\": false\n      },\n      \"DisabledEndpointError\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"error\": {\n            \"enum\": [\n              \"disabled-endpoint\"\n            ]\n          },\n          \"message\": {\n            \"enum\": [\n              \"This endpoint is disabled\"\n            ]\n          },\n          \"status\": {\n            \"enum\": [\n              404\n            ]\n          }\n        },\n        \"additionalProperties\": false\n      },\n      \"InvalidRequestError\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"error\": {\n            \"enum\": [\n              \"invalid-request\"\n            ]\n          },\n          \"message\": {\n            \"enum\": [\n              \"The request payload is incorrect\"\n            ]\n          },\n          \"status\": {\n            \"enum\": [\n              400\n            ]\n          }\n        },\n        \"additionalProperties\": false\n      },\n      \"DisabledMfaTotpError\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"error\": {\n            \"enum\": [\n              \"disabled-mfa-totp\"\n            ]\n          },\n          \"message\": {\n            \"enum\": [\n              \"MFA TOTP is not enabled for this user\"\n            ]\n          },\n          \"status\": {\n            \"enum\": [\n              400\n            ]\n          }\n        },\n        \"additionalProperties\": false\n      },\n      \"NoTotpSecretError\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"error\": {\n            \"enum\": [\n              \"no-totp-secret\"\n            ]\n          },\n          \"message\": {\n            \"enum\": [\n              \"OTP secret is not set for user\"\n            ]\n          },\n          \"status\": {\n            \"enum\": [\n              400\n            ]\n          }\n        },\n        \"additionalProperties\": false\n      },\n      \"DisabledUserError\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"error\": {\n            \"enum\": [\n              \"disabled-user\"\n            ]\n          },\n          \"message\": {\n            \"enum\": [\n              \"User is disabled\"\n            ]\n          },\n          \"status\": {\n            \"enum\": [\n              401\n            ]\n          }\n        },\n        \"additionalProperties\": false\n      },\n      \"InvalidEmailPasswordError\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"error\": {\n            \"enum\": [\n              \"invalid-email-password\"\n            ]\n          },\n          \"message\": {\n            \"enum\": [\n              \"Incorrect email or password\"\n            ]\n          },\n          \"status\": {\n            \"enum\": [\n              401\n            ]\n          }\n        },\n        \"additionalProperties\": false\n      },\n      \"InvalidOtpError\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"error\": {\n            \"enum\": [\n              \"invalid-otp\"\n            ]\n          },\n          \"message\": {\n            \"enum\": [\n              \"Invalid or expired OTP\"\n            ]\n          },\n          \"status\": {\n            \"enum\": [\n              401\n            ]\n          }\n        },\n        \"additionalProperties\": false\n      },\n      \"InvalidTicketError\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"error\": {\n            \"enum\": [\n              \"invalid-ticket\"\n            ]\n          },\n          \"message\": {\n            \"enum\": [\n              \"Invalid or expired verification ticket\"\n            ]\n          },\n          \"status\": {\n            \"enum\": [\n              401\n            ]\n          }\n        },\n        \"additionalProperties\": false\n      },\n      \"UnverifiedUserError\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"error\": {\n            \"enum\": [\n              \"unverified-user\"\n            ]\n          },\n          \"message\": {\n            \"enum\": [\n              \"Email is not verified\"\n            ]\n          },\n          \"status\": {\n            \"enum\": [\n              401\n            ]\n          }\n        },\n        \"additionalProperties\": false\n      },\n      \"EmailAlreadyInUseError\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"error\": {\n            \"enum\": [\n              \"email-already-in-use\"\n            ]\n          },\n          \"message\": {\n            \"enum\": [\n              \"Email already in use\"\n            ]\n          },\n          \"status\": {\n            \"enum\": [\n              409\n            ]\n          }\n        },\n        \"additionalProperties\": false\n      },\n      \"MfaTypeNotFoundError\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"error\": {\n            \"enum\": [\n              \"mfa-type-not-found\"\n            ]\n          },\n          \"message\": {\n            \"enum\": [\n              \"There is no active MFA set for the user\"\n            ]\n          },\n          \"status\": {\n            \"enum\": [\n              400\n            ]\n          }\n        },\n        \"additionalProperties\": false\n      },\n      \"EmailAlreadyVerifiedError\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"error\": {\n            \"enum\": [\n              \"email-already-verified\"\n            ]\n          },\n          \"message\": {\n            \"enum\": [\n              \"User's email is already verified\"\n            ]\n          },\n          \"status\": {\n            \"enum\": [\n              400\n            ]\n          }\n        },\n        \"additionalProperties\": false\n      },\n      \"TotpAlreadyActiveError\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"error\": {\n            \"enum\": [\n              \"totp-already-active\"\n            ]\n          },\n          \"message\": {\n            \"enum\": [\n              \"TOTP MFA already active\"\n            ]\n          },\n          \"status\": {\n            \"enum\": [\n              400\n            ]\n          }\n        },\n        \"additionalProperties\": false\n      },\n      \"UserNotFoundError\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"error\": {\n            \"enum\": [\n              \"user-not-found\"\n            ]\n          },\n          \"message\": {\n            \"enum\": [\n              \"No user found\"\n            ]\n          },\n          \"status\": {\n            \"enum\": [\n              400\n            ]\n          }\n        },\n        \"additionalProperties\": false\n      },\n      \"UserNotAnonymousError\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"error\": {\n            \"enum\": [\n              \"user-not-anonymous\"\n            ]\n          },\n          \"message\": {\n            \"enum\": [\n              \"Logged in user is not anonymous\"\n            ]\n          },\n          \"status\": {\n            \"enum\": [\n              400\n            ]\n          }\n        },\n        \"additionalProperties\": false\n      },\n      \"InvalidRefreshTokenError\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"error\": {\n            \"enum\": [\n              \"invalid-refresh-token\"\n            ]\n          },\n          \"message\": {\n            \"enum\": [\n              \"Invalid or expired refresh token\"\n            ]\n          },\n          \"status\": {\n            \"enum\": [\n              401\n            ]\n          }\n        },\n        \"additionalProperties\": false\n      },\n      \"InvalidRedirectionError\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"error\": {\n            \"enum\": [\n              \"invalid-redirection\"\n            ]\n          },\n          \"message\": {\n            \"enum\": [\n              \"Invalid or missing redirectTo\"\n            ]\n          },\n          \"status\": {\n            \"enum\": [\n              400\n            ]\n          }\n        },\n        \"additionalProperties\": false\n      },\n      \"InvalidAdminSecretError\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"error\": {\n            \"enum\": [\n              \"invalid-admin-secret\"\n            ]\n          },\n          \"message\": {\n            \"enum\": [\n              \"Invalid admin secret\"\n            ]\n          },\n          \"status\": {\n            \"enum\": [\n              401\n            ]\n          }\n        },\n        \"additionalProperties\": false\n      },\n      \"UnauthenticatedUserError\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"error\": {\n            \"enum\": [\n              \"unauthenticated-user\"\n            ]\n          },\n          \"message\": {\n            \"enum\": [\n              \"User is not logged in\"\n            ]\n          },\n          \"status\": {\n            \"enum\": [\n              401\n            ]\n          }\n        },\n        \"additionalProperties\": false\n      },\n      \"ForbiddenEndpointInProductionError\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"error\": {\n            \"enum\": [\n              \"forbidden-endpoint-in-production\"\n            ]\n          },\n          \"message\": {\n            \"enum\": [\n              \"This endpoint is only available on test environments\"\n            ]\n          },\n          \"status\": {\n            \"enum\": [\n              400\n            ]\n          }\n        },\n        \"additionalProperties\": false\n      },\n      \"InvalidSignInMethodError\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"error\": {\n            \"enum\": [\n              \"invalid-sign-in-method\"\n            ]\n          },\n          \"message\": {\n            \"enum\": [\n              \"Incorrect sign in method\"\n            ]\n          },\n          \"status\": {\n            \"enum\": [\n              400\n            ]\n          }\n        },\n        \"additionalProperties\": false\n      },\n      \"User\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"id\": {\n            \"type\": \"string\",\n            \"pattern\": \"\\\\b[0-9a-f]{8}\\\\b-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-\\\\b[0-9a-f]{12}\\\\b\",\n            \"description\": \"Id of the user\",\n            \"example\": \"2c35b6f3-c4b9-48e3-978a-d4d0f1d42e24\"\n          },\n          \"createdAt\": {\n            \"type\": \"string\",\n            \"format\": \"date-time\"\n          },\n          \"displayName\": {\n            \"type\": \"string\",\n            \"example\": \"John Smith\"\n          },\n          \"avatarUrl\": {\n            \"type\": \"string\"\n          },\n          \"locale\": {\n            \"type\": \"string\",\n            \"description\": \"A two-characters locale\",\n            \"example\": \"en\",\n            \"default\": \"en\"\n          },\n          \"email\": {\n            \"type\": \"string\",\n            \"format\": \"email\",\n            \"description\": \"A valid email\",\n            \"example\": \"john.smith@nhost.io\"\n          },\n          \"isAnonymous\": {\n            \"type\": \"boolean\",\n            \"default\": false\n          },\n          \"defaultRole\": {\n            \"type\": \"string\",\n            \"enum\": [\n              \"me\",\n              \"user\"\n            ],\n            \"example\": \"user\",\n            \"default\": \"user\"\n          },\n          \"metadata\": {\n            \"type\": \"object\",\n            \"properties\": {},\n            \"additionalProperties\": false,\n            \"example\": {\n              \"firstName\": \"John\",\n              \"lastName\": \"Smith\"\n            },\n            \"default\": {}\n          },\n          \"activeMfaType\": {\n            \"anyOf\": [\n              {\n                \"type\": \"string\",\n                \"enum\": [\n                  \"\"\n                ]\n              },\n              {\n                \"type\": \"string\",\n                \"enum\": [\n                  \"totp\"\n                ]\n              }\n            ],\n            \"description\": \"Multi-factor authentication type. A null value deactivates MFA\",\n            \"example\": \"totp\"\n          },\n          \"emailVerified\": {\n            \"type\": \"boolean\",\n            \"default\": false\n          },\n          \"phoneNumber\": {\n            \"type\": \"string\"\n          },\n          \"phoneNumberVerified\": {\n            \"type\": \"boolean\",\n            \"default\": false\n          },\n          \"roles\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"oneOf\": [\n                {\n                  \"enum\": [\n                    \"me\"\n                  ]\n                },\n                {\n                  \"enum\": [\n                    \"user\"\n                  ]\n                }\n              ]\n            },\n            \"example\": [\n              \"me\",\n              \"user\"\n            ],\n            \"default\": [\n              \"me\",\n              \"user\"\n            ]\n          }\n        },\n        \"required\": [\n          \"createdAt\",\n          \"displayName\",\n          \"avatarUrl\",\n          \"locale\",\n          \"email\",\n          \"isAnonymous\",\n          \"defaultRole\",\n          \"metadata\",\n          \"activeMfaType\",\n          \"emailVerified\",\n          \"phoneNumber\",\n          \"phoneNumberVerified\",\n          \"roles\"\n        ],\n        \"additionalProperties\": false\n      },\n      \"Session\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"accessToken\": {\n            \"type\": \"string\"\n          },\n          \"accessTokenExpiresIn\": {\n            \"type\": \"number\",\n            \"format\": \"float\"\n          },\n          \"refreshToken\": {\n            \"type\": \"string\",\n            \"pattern\": \"\\\\b[0-9a-f]{8}\\\\b-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-\\\\b[0-9a-f]{12}\\\\b\",\n            \"description\": \"Refresh token during authentication or when refreshing the JWT\",\n            \"example\": \"2c35b6f3-c4b9-48e3-978a-d4d0f1d42e24\"\n          },\n          \"user\": {\n            \"$ref\": \"#/components/schemas/User\"\n          }\n        },\n        \"required\": [\n          \"accessToken\",\n          \"accessTokenExpiresIn\",\n          \"refreshToken\"\n        ],\n        \"additionalProperties\": false\n      },\n      \"Mfa\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"ticket\": {\n            \"type\": \"string\"\n          }\n        },\n        \"additionalProperties\": false\n      },\n      \"SessionPayload\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"session\": {\n            \"$ref\": \"#/components/schemas/Session\"\n          },\n          \"mfa\": {\n            \"$ref\": \"#/components/schemas/Mfa\"\n          }\n        },\n        \"additionalProperties\": false\n      },\n      \"TotpPayload\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"imageUrl\": {\n            \"type\": \"string\",\n            \"description\": \"Data URL of the QR code\"\n          },\n          \"totpSecret\": {\n            \"type\": \"string\",\n            \"description\": \"TOTP secret\"\n          }\n        },\n        \"required\": [\n          \"imageUrl\",\n          \"totpSecret\"\n        ],\n        \"additionalProperties\": false\n      },\n      \"UnauthorizedError\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"error\": {\n            \"type\": \"string\"\n          },\n          \"status\": {\n            \"enum\": [\n              401\n            ]\n          },\n          \"message\": {\n            \"type\": \"string\"\n          }\n        },\n        \"required\": [\n          \"error\",\n          \"status\"\n        ],\n        \"additionalProperties\": false\n      },\n      \"Version\": {\n        \"type\": \"string\",\n        \"example\": \"0.7.1\"\n      }\n    }\n  },\n  \"paths\": {\n    \"/healthz\": {\n      \"get\": {\n        \"deprecated\": false,\n        \"summary\": \"Check if the server is up and running\",\n        \"security\": [],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\"\n          }\n        },\n        \"parameters\": [],\n        \"tags\": [\n          \"General\"\n        ]\n      }\n    },\n    \"/version\": {\n      \"get\": {\n        \"deprecated\": false,\n        \"summary\": \"Get the current Hasura-auth version\",\n        \"security\": [],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Hasura auth version\",\n            \"content\": {\n              \"text/plain\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Version\"\n                }\n              }\n            }\n          }\n        },\n        \"parameters\": [],\n        \"tags\": [\n          \"General\"\n        ]\n      }\n    },\n    \"/mfa/totp/generate\": {\n      \"get\": {\n        \"deprecated\": false,\n        \"summary\": \"Generate a secret to request the activation of Time-based One-Time Password (TOTP) multi-factor authentication\",\n        \"security\": [\n          {\n            \"BearerAuth\": []\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/TotpPayload\"\n                }\n              }\n            }\n          },\n          \"401\": {\n            \"description\": \"User is not authenticated\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/UnauthenticatedUserError\"\n                }\n              }\n            }\n          },\n          \"404\": {\n            \"description\": \"The feature is not activated\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/DisabledEndpointError\"\n                }\n              }\n            }\n          }\n        },\n        \"parameters\": [],\n        \"tags\": [\n          \"User management\"\n        ]\n      }\n    },\n    \"/signin/email-password\": {\n      \"post\": {\n        \"deprecated\": false,\n        \"summary\": \"Authenticate with email + password\",\n        \"security\": [],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Signed in successfully\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/SessionPayload\"\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"description\": \"The payload is invalid\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/InvalidRequestError\"\n                }\n              }\n            }\n          },\n          \"401\": {\n            \"description\": \"Invalid email or password, or user is not verified\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/UnauthorizedError\"\n                }\n              }\n            }\n          },\n          \"404\": {\n            \"description\": \"The feature is not activated\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/DisabledEndpointError\"\n                }\n              }\n            }\n          }\n        },\n        \"parameters\": [],\n        \"tags\": [\n          \"Authentication\"\n        ],\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/SignInEmailPasswordSchema\"\n              }\n            }\n          },\n          \"description\": \"\",\n          \"required\": true\n        }\n      }\n    },\n    \"/signin/passwordless/email\": {\n      \"post\": {\n        \"deprecated\": false,\n        \"summary\": \"Email passwordless authentication\",\n        \"security\": [],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Email sent successfully\",\n            \"content\": {\n              \"text/plain\": {\n                \"schema\": {\n                  \"type\": \"string\"\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"description\": \"The payload is invalid\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/InvalidRequestError\"\n                }\n              }\n            }\n          },\n          \"401\": {\n            \"description\": \"User is disabled\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/DisabledUserError\"\n                }\n              }\n            }\n          },\n          \"404\": {\n            \"description\": \"The feature is not activated\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/DisabledEndpointError\"\n                }\n              }\n            }\n          }\n        },\n        \"parameters\": [],\n        \"tags\": [\n          \"Authentication\"\n        ],\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/SignInPasswordlessEmailSchema\"\n              }\n            }\n          },\n          \"description\": \"\",\n          \"required\": true\n        }\n      }\n    },\n    \"/signin/passwordless/sms\": {\n      \"post\": {\n        \"deprecated\": false,\n        \"summary\": \"Send a one-time password by SMS\",\n        \"security\": [],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"SMS sent successfully\",\n            \"content\": {\n              \"text/plain\": {\n                \"schema\": {\n                  \"type\": \"string\"\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"description\": \"The payload is invalid\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/InvalidRequestError\"\n                }\n              }\n            }\n          },\n          \"404\": {\n            \"description\": \"The feature is not activated\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/DisabledEndpointError\"\n                }\n              }\n            }\n          }\n        },\n        \"parameters\": [],\n        \"tags\": [\n          \"Authentication\"\n        ],\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/SignInPasswordlessSmsSchema\"\n              }\n            }\n          },\n          \"description\": \"\",\n          \"required\": true\n        }\n      }\n    },\n    \"/signin/passwordless/sms/otp\": {\n      \"post\": {\n        \"deprecated\": false,\n        \"summary\": \"Passwordless authentication from a one-time password code received by SMS\",\n        \"security\": [],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"User successfully authenticated\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/SessionPayload\"\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"description\": \"The payload is invalid\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/InvalidRequestError\"\n                }\n              }\n            }\n          },\n          \"401\": {\n            \"description\": \"Error processing the request\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/UnauthorizedError\"\n                }\n              }\n            }\n          },\n          \"404\": {\n            \"description\": \"The feature is not activated\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/DisabledEndpointError\"\n                }\n              }\n            }\n          }\n        },\n        \"parameters\": [],\n        \"tags\": [\n          \"Authentication\"\n        ],\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/SignInOtpSchema\"\n              }\n            }\n          },\n          \"description\": \"\",\n          \"required\": true\n        }\n      }\n    },\n    \"/signin/anonymous\": {\n      \"post\": {\n        \"deprecated\": false,\n        \"summary\": \"Anonymous authentication\",\n        \"security\": [],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"User successfully authenticated\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/SessionPayload\"\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"description\": \"The payload is invalid\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/InvalidRequestError\"\n                }\n              }\n            }\n          },\n          \"404\": {\n            \"description\": \"The feature is not activated\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/DisabledEndpointError\"\n                }\n              }\n            }\n          }\n        },\n        \"parameters\": [],\n        \"tags\": [\n          \"Authentication\"\n        ],\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/SignInAnonymousSchema\"\n              }\n            }\n          },\n          \"description\": \"\",\n          \"required\": true\n        }\n      }\n    },\n    \"/signin/mfa/totp\": {\n      \"post\": {\n        \"deprecated\": false,\n        \"summary\": \"Sign in with a Time-base One-Time Password (TOTP) ticket\",\n        \"security\": [],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"User successfully authenticated\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/SessionPayload\"\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"description\": \"The payload is invalid\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/InvalidRequestError\"\n                }\n              }\n            }\n          },\n          \"404\": {\n            \"description\": \"The feature is not activated\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/DisabledEndpointError\"\n                }\n              }\n            }\n          }\n        },\n        \"parameters\": [],\n        \"tags\": [\n          \"Authentication\"\n        ],\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/SignInMfaTotpSchema\"\n              }\n            }\n          },\n          \"description\": \"\",\n          \"required\": true\n        }\n      }\n    },\n    \"/signin/provider/{provider}\": {\n      \"get\": {\n        \"deprecated\": false,\n        \"summary\": \"\",\n        \"security\": [],\n        \"responses\": {},\n        \"parameters\": [\n          {\n            \"name\": \"provider\",\n            \"in\": \"path\",\n            \"description\": \"name param description\",\n            \"required\": true,\n            \"deprecated\": false,\n            \"schema\": {\n              \"type\": \"string\",\n              \"enum\": [\n                \"github\",\n                \"google\",\n                \"facebook\",\n                \"twitter\",\n                \"apple\",\n                \"windowslive\",\n                \"linkedin\",\n                \"spotify\",\n                \"strava\",\n                \"gitlab\",\n                \"bitbucket\"\n              ]\n            }\n          },\n          {\n            \"name\": \"redirectUrl\",\n            \"in\": \"query\",\n            \"description\": \"-\",\n            \"required\": true,\n            \"deprecated\": false,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"tags\": [\n          \"Authentication\"\n        ]\n      }\n    },\n    \"/signin/provider/{provider}/callback\": {\n      \"get\": {\n        \"deprecated\": false,\n        \"summary\": \"Oauth callback url, that will be used by the Oauth provider, to redirect to the client application. Attention: all providers are using a GET operation, except Apple that uses POST\",\n        \"security\": [],\n        \"responses\": {\n          \"302\": {\n            \"description\": \"Redirect to the initial url given as a query parameter in /signin/provider/{provider}\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"string\"\n                }\n              }\n            }\n          }\n        },\n        \"parameters\": [\n          {\n            \"name\": \"provider\",\n            \"in\": \"path\",\n            \"description\": \"name param description\",\n            \"required\": true,\n            \"deprecated\": false,\n            \"schema\": {\n              \"type\": \"string\",\n              \"enum\": [\n                \"github\",\n                \"google\",\n                \"facebook\",\n                \"twitter\",\n                \"apple\",\n                \"windowslive\",\n                \"linkedin\",\n                \"spotify\",\n                \"strava\",\n                \"gitlab\",\n                \"bitbucket\"\n              ]\n            }\n          },\n          {\n            \"name\": \"redirectUrl\",\n            \"in\": \"query\",\n            \"description\": \"\",\n            \"required\": true,\n            \"deprecated\": false,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"tags\": [\n          \"Authentication\"\n        ]\n      }\n    },\n    \"/signout\": {\n      \"post\": {\n        \"deprecated\": false,\n        \"summary\": \"Sign out\",\n        \"security\": [\n          {\n            \"BearerAuth\": []\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Successfully signed out\",\n            \"content\": {\n              \"text/plain\": {\n                \"schema\": {\n                  \"type\": \"string\"\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"description\": \"The payload is invalid\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/InvalidRequestError\"\n                }\n              }\n            }\n          },\n          \"401\": {\n            \"description\": \"User must be signed in to sign out from all sessions\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/UnauthenticatedUserError\"\n                }\n              }\n            }\n          }\n        },\n        \"parameters\": [],\n        \"tags\": [\n          \"Sign out\"\n        ],\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/SignOutSchema\"\n              }\n            }\n          },\n          \"description\": \"\",\n          \"required\": true\n        }\n      }\n    },\n    \"/signup/email-password\": {\n      \"post\": {\n        \"deprecated\": false,\n        \"summary\": \"Signup with email and password\",\n        \"security\": [],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Successfully registered. Null session means email verification is pending\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/SessionPayload\"\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"description\": \"The payload is invalid\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/InvalidRequestError\"\n                }\n              }\n            }\n          },\n          \"409\": {\n            \"description\": \"Email is already present in the database\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/EmailAlreadyInUseError\"\n                }\n              }\n            }\n          }\n        },\n        \"parameters\": [],\n        \"tags\": [\n          \"Registration\"\n        ],\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/SignUpEmailPasswordSchema\"\n              }\n            }\n          },\n          \"description\": \"\",\n          \"required\": true\n        }\n      }\n    },\n    \"/token\": {\n      \"post\": {\n        \"deprecated\": false,\n        \"summary\": \"Refresh the access token (JWT) and the refresh token\",\n        \"security\": [],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"User successfully authenticated\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/SessionPayload\"\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"description\": \"The payload is invalid\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/InvalidRequestError\"\n                }\n              }\n            }\n          },\n          \"401\": {\n            \"description\": \"Unauthenticated user or invalid token\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/UnauthorizedError\"\n                }\n              }\n            }\n          }\n        },\n        \"parameters\": [],\n        \"tags\": [\n          \"General\"\n        ],\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/TokenSchema\"\n              }\n            }\n          },\n          \"description\": \"\",\n          \"required\": true\n        }\n      }\n    },\n    \"/user\": {\n      \"get\": {\n        \"deprecated\": false,\n        \"summary\": \"Get user information\",\n        \"security\": [\n          {\n            \"BearerAuth\": []\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"User information\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/User\"\n                }\n              }\n            }\n          },\n          \"401\": {\n            \"description\": \"User is not authenticated\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/UnauthenticatedUserError\"\n                }\n              }\n            }\n          }\n        },\n        \"parameters\": [],\n        \"tags\": [\n          \"User management\"\n        ]\n      }\n    },\n    \"/user/password/reset\": {\n      \"post\": {\n        \"deprecated\": false,\n        \"summary\": \"Send an email asking the user to reset their password\",\n        \"security\": [],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"The email to reset the password has been sent\",\n            \"content\": {\n              \"text/plain\": {\n                \"schema\": {\n                  \"type\": \"string\"\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"description\": \"The payload is invalid\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/InvalidRequestError\"\n                }\n              }\n            }\n          }\n        },\n        \"parameters\": [],\n        \"tags\": [\n          \"User management\"\n        ],\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/UserPasswordResetSchema\"\n              }\n            }\n          },\n          \"description\": \"\",\n          \"required\": true\n        }\n      }\n    },\n    \"/user/password\": {\n      \"post\": {\n        \"deprecated\": false,\n        \"summary\": \"Set a new password\",\n        \"security\": [\n          {\n            \"BearerAuth\": []\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"The password has been successfully changed\",\n            \"content\": {\n              \"text/plain\": {\n                \"schema\": {\n                  \"type\": \"string\"\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"description\": \"The payload is invalid\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/InvalidRequestError\"\n                }\n              }\n            }\n          },\n          \"401\": {\n            \"description\": \"User is not authenticated\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/UnauthenticatedUserError\"\n                }\n              }\n            }\n          }\n        },\n        \"parameters\": [],\n        \"tags\": [\n          \"User management\"\n        ],\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/UserPasswordSchema\"\n              }\n            }\n          },\n          \"description\": \"\",\n          \"required\": true\n        }\n      }\n    },\n    \"/user/email/send-verification-email\": {\n      \"post\": {\n        \"deprecated\": false,\n        \"summary\": \"Send an email to verify the account\",\n        \"security\": [],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\",\n            \"content\": {\n              \"text/plain\": {\n                \"schema\": {\n                  \"type\": \"string\"\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"description\": \"The payload format is invalid\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/InvalidRequestError\"\n                }\n              }\n            }\n          }\n        },\n        \"parameters\": [],\n        \"tags\": [\n          \"User management\"\n        ],\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/UserEmailSendVerificationEmailSchema\"\n              }\n            }\n          },\n          \"description\": \"\",\n          \"required\": true\n        }\n      }\n    },\n    \"/user/email/change\": {\n      \"post\": {\n        \"deprecated\": false,\n        \"summary\": \"Change the current user's email\",\n        \"security\": [\n          {\n            \"BearerAuth\": []\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"A verification email has been sent to the new email\",\n            \"content\": {\n              \"text/plain\": {\n                \"schema\": {\n                  \"type\": \"string\"\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"description\": \"The payload format is invalid\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/InvalidRequestError\"\n                }\n              }\n            }\n          },\n          \"401\": {\n            \"description\": \"User is not authenticated\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/UnauthenticatedUserError\"\n                }\n              }\n            }\n          }\n        },\n        \"parameters\": [],\n        \"tags\": [\n          \"User management\"\n        ],\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/UserEmailChangeSchema\"\n              }\n            }\n          },\n          \"description\": \"\",\n          \"required\": true\n        }\n      }\n    },\n    \"/user/mfa\": {\n      \"post\": {\n        \"deprecated\": false,\n        \"summary\": \"Activate/deactivate Multi-factor authentication\",\n        \"security\": [\n          {\n            \"BearerAuth\": []\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\",\n            \"content\": {\n              \"text/plain\": {\n                \"schema\": {\n                  \"type\": \"string\"\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"description\": \"The payload format is invalid\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/InvalidRequestError\"\n                }\n              }\n            }\n          },\n          \"401\": {\n            \"description\": \"User is not authenticated\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/UnauthenticatedUserError\"\n                }\n              }\n            }\n          }\n        },\n        \"parameters\": [],\n        \"tags\": [\n          \"Authentication\"\n        ],\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/UserMfaSchema\"\n              }\n            }\n          },\n          \"description\": \"\",\n          \"required\": true\n        }\n      }\n    },\n    \"/user/deanonymize\": {\n      \"post\": {\n        \"deprecated\": false,\n        \"summary\": \"'Deanonymize' an anonymous user in adding missing email or email+password, depending on the chosen authentication method. Will send a confirmation email if the server is configured to do so.\",\n        \"security\": [\n          {\n            \"BearerAuth\": []\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\",\n            \"content\": {\n              \"text/plain\": {\n                \"schema\": {\n                  \"type\": \"string\"\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"description\": \"The payload format is invalid\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/InvalidRequestError\"\n                }\n              }\n            }\n          },\n          \"401\": {\n            \"description\": \"User is not authenticated\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/UnauthenticatedUserError\"\n                }\n              }\n            }\n          }\n        },\n        \"parameters\": [],\n        \"tags\": [\n          \"Authentication\"\n        ],\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/UserDeanonymizeSchema\"\n              }\n            }\n          },\n          \"description\": \"\",\n          \"required\": true\n        }\n      }\n    },\n    \"/user/provider/tokens\": {\n      \"post\": {\n        \"deprecated\": false,\n        \"summary\": \"Refresh the Oauth access tokens of a given user. You must be an admin to perform this operation.\",\n        \"security\": [],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\",\n            \"content\": {\n              \"text/plain\": {\n                \"schema\": {\n                  \"type\": \"string\"\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"description\": \"The payload format is invalid\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/InvalidRequestError\"\n                }\n              }\n            }\n          },\n          \"401\": {\n            \"description\": \"Incorrect admin secret header\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/InvalidAdminSecretError\"\n                }\n              }\n            }\n          }\n        },\n        \"parameters\": [\n          {\n            \"name\": \"x-hasura-admin-secret\",\n            \"in\": \"header\",\n            \"description\": \"Hasura admin secret\",\n            \"required\": true,\n            \"deprecated\": false,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"tags\": [\n          \"User management\"\n        ],\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/UserProviderTokensSchema\"\n              }\n            }\n          },\n          \"description\": \"\",\n          \"required\": true\n        }\n      }\n    },\n    \"/verify\": {\n      \"get\": {\n        \"deprecated\": false,\n        \"summary\": \"Verify tickets created by email verification, email passwordless authentication, or password reset\",\n        \"security\": [],\n        \"responses\": {\n          \"302\": {\n            \"description\": \"{redirectTo}?refreshToken=${refreshToken}\u0026type=${type}\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"string\"\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"description\": \"The payload format is invalid\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/InvalidRequestError\"\n                }\n              }\n            }\n          }\n        },\n        \"parameters\": [\n          {\n            \"name\": \"ticket\",\n            \"in\": \"query\",\n            \"description\": \"Ticket generated in the previous actions and sent by email\",\n            \"required\": true,\n            \"deprecated\": false,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"type\",\n            \"in\": \"query\",\n            \"description\": \"name param description\",\n            \"required\": true,\n            \"deprecated\": false,\n            \"schema\": {\n              \"type\": \"string\",\n              \"enum\": [\n                \"emailVerify\",\n                \"emailConfirmChange\",\n                \"signinPasswordless\",\n                \"passwordReset\"\n              ]\n            }\n          },\n          {\n            \"name\": \"redirectTo\",\n            \"in\": \"query\",\n            \"description\": \"Redirection link\",\n            \"required\": true,\n            \"deprecated\": false,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"tags\": [\n          \"General\"\n        ]\n      }\n    }\n  },\n  \"tags\": []\n}\n",
			"canonicalURL": "/github.com/nhost/nhost@d5f56f7e188d5c854b9a14a6a15f419f4316869e/-/blob/docs/static/openapi/hasura-auth.json",
			"externalURLs": [
				{
					"url": "https://github.com/nhost/nhost/blob/d5f56f7e188d5c854b9a14a6a15f419f4316869e/docs/static/openapi/hasura-auth.json",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "parse: parse spec: parse components: schemas: \"ForbiddenEndpointInProductionError\": parse schema: property \"status\": at 1117:21: parse enum values: parse value \"400\": unexpected type: \"\""
}