{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/onnela-lab/beiwe-backend"
		},
		"file": {
			"name": "tableau_spec.yaml",
			"size": 0,
			"path": "api/tableau_spec.yaml",
			"byteSize": 14988,
			"content": "openapi: 3.0.3\ninfo:\n  title: Beiwe Tableau API\n  description: \u003e\n    This spec details the interface for the Beiwe Tableau API. You can view this with any OpenAPI\n    viewer (like [Swagger Editor](https://editor.swagger.io)). For more information about how\n    individual values are calculated, visit the\n    [Beiwe Summary Statitics Wiki](https://github.com/onnela-lab/beiwe/wiki/Summary-Statistics).\n\n    Note: This API and specification is currently in active development and is subject to change\n    without notice.\n  termsOfService: 'https://beiwe.org/'  # Todo\n  contact:\n    email: todo@beiwe.org\n  license:\n    name: BSD 3-Clause License\n    url: 'https://opensource.org/licenses/BSD-3-Clause'\n  version: 0.1.0\nexternalDocs:\n  description: Find out more about Beiwe\n  url: 'https://beiwe.org/'\nservers:\n  - url: 'https://studies.beiwe.org/api/v0'  # Todo: upgrade this to v1 when released\n\ncomponents:\n  parameters:\n    access_key_id:\n      description: Access key id for Tableau API access\n      in: header\n      name: X-Access-Key-Id\n      required: true\n      schema:\n        format: string\n    access_key_secret:\n      description: Access key secret for Tableau API access\n      in: header\n      name: X-Access-Key-Secret\n      required: true\n      schema:\n        format: string\n    data_type:\n      description: Data stream type for data type to retrieve\n      in: path\n      name: data_type\n      required: true\n      schema:\n        type: string\n    filter_date_end:\n      description: End date (inclusive) for results to retrieve\n      example: '?end_date=2020-01-31'\n      in: query\n      name: end_date\n      schema:\n        format: date\n        type: string\n    filter_date_start:\n      description: Start date (inclusive) for results to retrieve\n      example: '?start=2020-01-01'\n      in: query\n      name: start_date\n      schema:\n        format: date\n        type: string\n    filter_fields:\n      description: Comma-separated list of fields to include in results (by default, all fields are included)\n      example: '?fields=distance_diameter,distance_from_home'\n      explode: false\n      in: query\n      name: fields\n      schema:\n        items:\n          type: string\n        minItems: 1\n        type: array\n    filter_limit:\n      description: Maximum number of results to retrieve\n      example: '?limit=100'\n      in: query\n      name: limit\n      schema:\n        type: integer\n    filter_order_by:\n      description: Field to sort results by\n      example: '?order_by=date'\n      in: query\n      name: order_by\n      schema:\n        default: date\n        enum:  # Todo: any other fields to support?\n          - date\n          - participant_id\n        type: string\n    filter_order_direction:\n      description: Whether order_by should be sorted ascending or descending\n      example: '?order_direction=ascending'\n      in: query\n      name: order_direction\n      schema:\n        default: descending\n        enum:\n          - ascending\n          - descending\n        type: string\n    filter_participant_ids:\n      description: Comma-separated list of 8-character participant patient ids\n      example: '?participant_ids=ouq7r382,r3h9qp2o'\n      explode: false\n      in: query\n      name: participant_ids\n      schema:\n        items:\n          type: string\n        minItems: 1\n        type: array\n    patient_id:\n      description: 8-character participant patient id\n      in: path\n      name: patient_id\n      required: true\n      schema:\n        type: string\n    study_id:\n      description: 24-character study id\n      in: path\n      name: study_id\n      required: true\n      schema:\n        type: string\n  responses:\n    400:\n      content:\n        application/json:\n          schema:\n            properties:\n              errors:\n                items:\n                  example: Some descriptive error.\n                  type: string\n                type: array\n            type: object\n      description: Invalid request\n    404:\n      description: Resource not found or access is denied (these two cases are not differentiated for security purposes)\n  schemas:\n    identifiers:\n      properties:\n        # Identifiers\n        patient_id:\n          description: 8-character participant patient id\n          example: ba86o7ad\n          type: string\n        study_id:\n          description: 24-character study id\n          example: pJyc2utlNJauNeMVTB94mG7g\n          type: string\n      type: object\n    data_point:\n      allOf:\n        - $ref: '#/components/schemas/identifiers'\n        - properties:\n            # Date\n            date:\n              description: Date for this data point\n              type: string\n              format: date\n\n            # GPS\n            distance_diameter:\n              # MaxDiam_km\n              description: Largest distance between any two places visited (meters)\n              format: float\n              type: number\n            distance_from_home:\n              # MaxHomeDist_km\n              description: Maximum distance from home (meters)\n              format: float\n              type: number\n            distance_traveled:\n              # DistTravelled_km\n              description: Distance traveled (meters)\n              format: float\n              type: number\n            flight_distance_average:\n              # AvgFlightLen_km\n              description: Average distance of straight line movement (meters)\n              format: float\n              type: number\n            flight_distance_standard_deviation:\n              # StdFlightLen_km\n              description: Standard deviation of straight line movement (meters)\n              format: float\n              type: number\n            flight_duration_average:\n              # AvgFlightDur_min\n              description: Average duration of straight line movement (minutes)\n              format: float\n              type: number\n            flight_duration_standard_deviation:\n              # StdFlightDur_min\n              description: Standard deviation of straight line movement (minutes)\n              format: float\n              type: number\n            gps_data_missing_duration:\n              description: Duration of GPS data missing (minutes)\n              type: integer\n            home_duration:\n              # Hometime_hrs\n              description: Duration of time spent at home (hours)\n              format: float\n              type: number\n            physical_circadian_rhythm:\n              description: Continuous measurement of routine in the interval [0, 1] where 1 is a complete break from routine\n              format: float\n              type: number\n            physical_circadian_rhythm_stratified:\n              description: Same as physical_circadian_rhythm but calculated separately for weekdays and weekends\n              format: float\n              type: number\n            radius_of_gyration:\n              # RoG_km\n              description: Radius of gyration (meters)\n              type: integer\n            significant_location_count:\n              description: Number of significant locations visited\n              type: integer\n            significant_location_entropy:\n              description: Entropy measure based on the proportion of time spent at significant locations\n              type: string\n            stationary_fraction:\n              description: Fraction of day spent stationary  # Todo: units\n              type: string\n\n            # Texts\n            text_incoming_count:\n              # incoming_texts\n              description: Number of incoming texts\n              type: integer\n            text_incoming_degree:\n              # text_indegree\n              description: Number of unique incoming texts\n              type: integer\n            text_incoming_length:\n              # incoming_textlengths\n              description: Number of characters in incoming texts\n              type: integer\n            text_incoming_responsiveness:\n              description: Mean time before sending a text after a text is received (hours)\n              type: integer\n            text_outgoing_count:\n              # outgoing_texts\n              description: Number of outgoing texts\n              type: integer\n            text_outgoing_degree:\n              # text_outdegree\n              description: Number of unique outgoing texts\n              type: integer\n            text_outgoing_length:\n              # outgoing_textlengths\n              description: Number of characters in outgoing texts\n              type: integer\n            text_reciprocity:\n              # reciprocity\n              description: Sum of incoming and outgoing texts that are not reciprocated\n              type: integer\n\n            # Calls\n            call_incoming_count:\n              # incoming_calls\n              description: Number of incoming calls\n              type: integer\n            call_incoming_degree:\n              # call_indegree\n              description: Number of unique incoming calls\n              type: integer\n            call_incoming_duration:\n              # incoming_calllengths\n              description: Duration of incoming calls (minutes)\n              type: integer\n            call_incoming_responsiveness:\n              # responsiveness\n              description: Mean time before initiating a call after receiving a call (hours)\n              type: integer\n            call_outgoing_count:\n              # outgoing_calls\n              description: Number of outgoing calls\n              type: integer\n            call_outgoing_degree:\n              # call_outdegree\n              description: Number of unique outgoing calls\n              type: integer\n            call_outgoing_duration:\n              # outgoing_calllengths\n              description: Duration of outgoing calls (minutes)\n              type: integer\n\n            # Accelerometer\n            acceleration_direction:\n              description: \u003e\n                A normalized vector (x, y, z) estimating the direction in which the phone is accelerating with respect to\n                the phone's frame of reference\n              type: string\n            accelerometer_coverage_fraction:\n              description: \u003e\n                Fraction of a participant's follow-up time during which accelerometer measurements have been recorded\n              type: string\n            accelerometer_signal_variability:\n              description: Sample variance of consecutive accelerometer measurements\n              type: string  # Todo\n            accelerometer_univariate_summaries:\n              description: \u003e\n                A univariate summary representing the three axes of accelerometer measurements (meters per second squared)\n              type: number\n            device_proximity:\n              description: A binary classification corresponding to whether the phone is \"on-person\" or \"off-person\"\n              type: boolean\n\n            # Power state\n            total_power_events:\n              description: Number of discrete periods that the phone has been connected to a power supply\n              type: integer\n            total_screen_events:\n              description: Number of times the screen has been turned on\n              type: integer\n            total_unlock_events:\n              description: Number of times the phone has been unlocked\n              type: integer\n\n            # Multiple domains\n            awake_onset_time:\n              description: Most likely time for that day's waking onset  # Todo: UTC or local\n              format: time\n              type: string\n            sleep_duration:\n              description: Duration of sleep time as calculated by sleep_onset_time and awake_onset_time  # Todo: units\n              type: integer\n            sleep_onset_time:\n              description: Most likely time for that day's sleeping onset  # Todo: UTC or local\n              format: time\n              type: string\n          type: object\n    data_collection_metadata:\n      allOf:\n        - $ref: '#/components/schemas/identifiers'\n        - properties:\n            data_type:\n              description: Data stream type\n              example: accelerometer\n              type: string\n            files:\n              items:\n                properties:\n                  file_size:\n                    description: File record size in bytes\n                    example: 2839\n                    type: integer\n                  time_bin:\n                    description: Time bin start\n                    format: 'date-time'\n                    type: string\n                type: object\n              type: array\n            total_files_count:\n              description: Number of file records\n              example: 1\n              type: integer\n            total_file_size:\n              description: Total size of file records in bytes\n              example: 2839\n              type: integer\n\npaths:\n  '/participants/{patient_id}/data-type/{data_type}/metadata':\n    get:\n      description: Returns data collection metadata about a participant for a specific data type\n      operationId: get_data_collection_metadata\n      parameters:\n        - $ref: '#/components/parameters/patient_id'\n        - $ref: '#/components/parameters/data_type'\n        - $ref: '#/components/parameters/access_key_id'\n        - $ref: '#/components/parameters/access_key_secret'\n      responses:\n        200:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/data_collection_metadata'\n          description: Data collection metadata\n        400:\n          $ref: '#/components/responses/400'\n        404:\n          $ref: '#/components/responses/404'\n      summary: Get metadata for a participant and data type\n  '/studies/{study_id}/summary-statistics/daily':\n    get:\n      description: Returns a list of daily data points for all participants in the study\n      operationId: get_study_daily_data\n      parameters:\n        - $ref: '#/components/parameters/study_id'\n        - $ref: '#/components/parameters/access_key_id'\n        - $ref: '#/components/parameters/access_key_secret'\n        - $ref: '#/components/parameters/filter_date_end'\n        - $ref: '#/components/parameters/filter_date_start'\n        - $ref: '#/components/parameters/filter_fields'\n        - $ref: '#/components/parameters/filter_limit'\n        - $ref: '#/components/parameters/filter_order_by'\n        - $ref: '#/components/parameters/filter_order_direction'\n        - $ref: '#/components/parameters/filter_participant_ids'\n      responses:\n        200:\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: '#/components/schemas/data_point'\n                type: array\n          description: List of daily data for a study\n        400:\n          $ref: '#/components/responses/400'\n        404:\n          $ref: '#/components/responses/404'\n      summary: Get daily data for a study\n",
			"canonicalURL": "/github.com/onnela-lab/beiwe-backend@d74dcd8f18d65152695e1a572d930b451c9b21d2/-/blob/api/tableau_spec.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/onnela-lab/beiwe-backend/blob/d74dcd8f18d65152695e1a572d930b451c9b21d2/api/tableau_spec.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "parse: parse spec: parse components: parameters: \"access_key_id\": at 1:46: invalid schema:style:explode combination: (\"\":\"simple\":false)"
}