{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/emanuelfreitas/3gpp-documentation"
		},
		"file": {
			"name": "TS26512_M1_ProvisioningSessions.yaml",
			"size": 0,
			"path": "apis/TS26512_M1_ProvisioningSessions.yaml",
			"byteSize": 3442,
			"content": "openapi: 3.0.0\ninfo:\n  title: M1_ProvisioningSessions\n  version: 1.0.0\n  description: |\n    5GMS AF M1 Provisioning Sessions API\n    Â© 2021, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC).\n    All rights reserved.\ntags:\n  - name: M1_ProvisioningSessions\n    description: '5G Media Streaming: Provisioning (M1) APIs: Provisioning Sessions'\nexternalDocs:\n  description: 'TS 26.512 V16.2.0; 5G Media Streaming (5GMS); Protocols'\n  url: 'https://www.3gpp.org/ftp/Specs/archive/26_series/26.512/'\nservers:\n  - url: '{apiRoot}/3gpp-m1/v1'\n    variables:\n      apiRoot:\n        default: https://example.com\n        description: See 3GPP TS 29.512 clause 6.1.\npaths:\n  /provisioning-sessions:\n    post:\n      operationId: createProvisioningSession\n      summary: 'Create a new Provisioning Session'\n      responses:\n        '201':\n          description: 'Provisioning Session Created'\n          headers:\n            Location:\n              description: 'URL including the resource identifier of the newly created Provisioning Session.'\n              required: true\n              schema:\n                $ref: 'TS26512_CommonData.yaml#/components/schemas/Url'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ProvisioningSession'\n  /provisioning-sessions/{provisioningSessionId}:\n    parameters:\n        - name: provisioningSessionId\n          in: path\n          required: true\n          schema:\n            $ref: 'TS26512_CommonData.yaml#/components/schemas/ResourceId'\n          description: 'The resource identifier of an existing Provisioning Session.'\n    get:\n      operationId: getProvisioningSessionById\n      summary: 'Retrieve an existing Provisioning Session'\n      responses:\n        '200':\n          description: 'Success'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ProvisioningSession'\n    delete:\n      operationId: destroyProvisioningSession\n      summary: 'Destroy an existing Provisioning Session'\n      responses:\n        '204':\n          description: 'Provisioning Session Destroyed'\n          # No Content\ncomponents:\n  schemas:\n    ProvisioningSession:\n      type: object\n      description: \"A representation of a Provisioning Session.\"\n      required:\n        - provisioningSessionId\n        - provisioningSessionType\n        - contentProtocols\n      properties:\n        provisioningSessionId:\n          $ref: 'TS26512_CommonData.yaml#/components/schemas/ResourceId'\n        provisioningSessionType:\n          $ref: 'TS26512_CommonData.yaml#/components/schemas/ProvisioningSessionType'\n        aspId:\n          $ref: 'TS29514_Npcf_PolicyAuthorization.yaml#/components/schemas/AspId'\n        serverCertificateIds:\n          type: array\n          items:\n            $ref: 'TS26512_CommonData.yaml#/components/schemas/ResourceId'\n          minItems: 1\n        contentPreparationTemplateIds:\n          type: array\n          items:\n            $ref: 'TS26512_CommonData.yaml#/components/schemas/ResourceId'\n          minItems: 1\n        metricsReportingConfigurationIds:\n          type: array\n          items:\n            $ref: 'TS26512_CommonData.yaml#/components/schemas/ResourceId'\n          minItems: 1\n        policyTemplateIds:\n          type: array\n          items:\n            $ref: 'TS26512_CommonData.yaml#/components/schemas/ResourceId'\n          minItems: 1\n"
		}
	},
	"Error": "parse: parse spec: parse components: schemas: \"ProvisioningSession\": parse schema: property \"aspId\": parse schema: resolve \"TS29514_Npcf_PolicyAuthorization.yaml#/components/schemas/AspId\": find schema: external base \"TS29514_Npcf_PolicyAuthorization.yaml\" is not supported"
}