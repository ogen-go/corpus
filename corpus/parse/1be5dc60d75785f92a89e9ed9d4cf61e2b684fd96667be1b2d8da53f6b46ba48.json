{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/crowdin-node/crowdin-node"
		},
		"file": {
			"name": "v1.yml",
			"size": 0,
			"path": "schemata/v1.yml",
			"byteSize": 5213,
			"content": "openapi: 3.0.0\ninfo:\n  title: 'Crowdin API v1'\n  description: \"(Unofficial) OpenAPI schema for the v1 Crowdin API.\"\n  version: ''\npaths:\n\n  '/api/project/{project}/add-directory':\n    post:\n      summary: 'Add a directory to your project.' \n      operationId: api.projects.directories.add\n      externalDocs:\n        url: 'https://support.crowdin.com/api/add-directory/'\n      responses:\n        '200':\n          description: 'Added a directory to your project.'\n      parameters:\n        -\n          name: project\n          in: path\n          required: true\n        -\n          name: key\n          in: query\n          required: true\n        -\n          name: name\n          description: Directory name (with path if nested directory should be created).\n          in: query\n          required: true\n        -\n          name: recursive\n          description: Create directories recursively if a nested name is provided. Default is false\n          in: query\n\n  '/api/project/{project}/delete-directory':\n    post:\n      summary: Delete a Crowdin project directory. All nested files and directories will be deleted too.\n      operationId: api.projects.directories.delete\n      externalDocs:\n        url: 'https://support.crowdin.com/api/delete-directory/'\n      responses:\n        '200':\n          description: 'Deleted directory.'\n      parameters:\n        -\n          name: project\n          in: path\n          required: true\n        -\n          name: name\n          in: query\n          required: true\n          description: Path to the directory to delete\n        -\n          name: branch\n          in: query\n          description: Name of the related version branch.\n\n  '/api/project/{project}/add-file':\n    post:\n      summary: 'Add one or many files to your project.'\n      operationId: api.projects.files.add\n      externalDocs:\n        url: 'https://support.crowdin.com/api/add-file/'\n      responses:\n        '200':\n          description: 'Added file(s) to your project.'\n      parameters:\n        -\n          name: project\n          in: path\n          required: true\n        -\n          name: key\n          in: query\n          required: true\n      requestBody:\n        content:\n          application/json:\n            schema:\n              required:\n                - files\n              properties:\n                files:\n                  description: 'Filenames to include'\n                  type: object\n\n  '/api/project/{project}/update-file':\n    post:\n      summary: 'Update one or many files in your project.'\n      operationId: api.projects.files.update\n      externalDocs:\n        url: 'https://support.crowdin.com/api/update-file/'\n      responses:\n        '200':\n          description: 'Updated file(s) in your project.'\n      parameters:\n        -\n          name: project\n          in: path\n          required: true\n        -\n          name: key\n          in: query\n          required: true\n      requestBody:\n        content:\n          application/json:\n            schema:\n              required:\n                - files\n              properties:\n                files:\n                  description: 'Filenames to include'\n                  type: object\n\n  '/api/project/{project}/export-file':\n    get:\n      summary: 'Export a single translated file from your project.'\n      operationId: api.projects.files.export\n      externalDocs:\n        url: 'https://support.crowdin.com/api/export-file/'\n      responses:\n        '200':\n          description: 'Exported file.'\n      parameters:\n        -\n          name: project\n          in: path\n          required: true\n        -\n          name: file\n          in: query\n          required: true\n          description: The path to the file that should be exported from the project.\n        -\n          name: language\n          in: query\n          required: true\n          description: \"Crowdin language code. See https://support.crowdin.com/api/language-codes/\"\n        -\n          name: branch\n          in: query\n          description: \"The name of the related version branch. See https://support.crowdin.com/versions-management/\"\n        -\n          name: format\n          in: query\n          description: \"Specify `xliff` to export file in the XLIFF file format.\"\n\n  '/api/project/{project}/info':\n    post:\n      summary: 'Get project details.'\n      operationId: api.projects.getDetails\n      externalDocs:\n        url: 'https://support.crowdin.com/api/info/'\n      parameters:\n        -\n          name: project\n          in: path\n          required: true\n        -\n          name: key\n          in: query\n          required: true\n      responses:\n        '200':\n          description: 'Got project details.'\n\n  '/api/project/{project}/status':\n    post:\n      summary: 'Get overall translation and proofreading progresses of each target language.'\n      operationId: api.projects.getTranslationStatus\n      externalDocs:\n        url: 'https://support.crowdin.com/api/status/'\n      parameters:\n        -\n          name: project\n          in: path\n          required: true\n        -\n          name: key\n          in: query\n          required: true\n      responses:\n        '200':\n          description: 'Got project translation status.'\n\n",
			"canonicalURL": "/github.com/crowdin-node/crowdin-node@1082707131b0e692d6924f51bbc0c3e25d1d6d5a/-/blob/schemata/v1.yml",
			"externalURLs": [
				{
					"url": "https://github.com/crowdin-node/crowdin-node/blob/1082707131b0e692d6924f51bbc0c3e25d1d6d5a/schemata/v1.yml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "parse: parse spec: parse operations: paths: /api/project/{project}/add-directory: post: operation \"api.projects.directories.add\": parameters: parse parameter \"project\": parameter MUST contain either a schema property, or a content property"
}