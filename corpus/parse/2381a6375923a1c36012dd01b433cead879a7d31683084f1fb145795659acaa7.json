{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/tatumio/tatum-blockchain-connector"
		},
		"file": {
			"name": "openapi.yaml",
			"size": 0,
			"path": "quorum-connector/module/openapi.yaml",
			"byteSize": 23855,
			"content": "openapi: 3.0.0\nservers:\n  - url: 'https://api-eu1.tatum.io'\ninfo:\n  version: 1.0.0\n  title: Tatum Quorum API\ntags:\n  - description: |\n      \u003cp\u003eQuorum is an open-source, private-permissioned blockchain compatible with Ethereum. It provides enhanced enterprise functionality with multiple pluggable consensus mechanisms, enterprise-grade permissions management, and transaction privacy features. Developed by J.P. Morgan, and later acquired by ConsenSys, the blockchain is used to run the Interbank Information Network, a payments network that involves more than 300 banks.\u003cbr/\u003e\n      The Quorum network is not run by Tatum, developers should connect to their own private instance. For testing purposes, there is a playground Quorum implementation available at \u003cb\u003ehttps://tatum.blockchain.azure.com:3200/21O-VGUJSqOz9xw7JSFhNyvk\u003c/b\u003e.\u003c/p\u003e\n    name: Blockchain / Quorum\npaths:\n  /v3/quorum/account:\n    post:\n      description: |\n        \u003ch4\u003e2 credit per API call.\u003c/h4\u003e\u003cbr/\u003e\n        \u003cp\u003eGenerate address account. Account must be protected with the password. To start using account, it must be unlocked via \u003ca href=\"#operation/QuorumUnlockAccount\" target=\"_blank\"\u003eUnlock Quorum Account method\u003c/a\u003e.\u003c/p\u003e\n      operationId: QuorumGenerateAccount\n      parameters:\n        - in: header\n          name: x-quorum-endpoint\n          required: true\n          description: URL of the Quorum network\n          schema:\n            type: string\n            example: https://tatum.blockchain.azure.com:3200/21O-VGUJSqOz9xw7JSFhNyvk\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              required:\n                - password\n              properties:\n                password:\n                  description: Password to protect new account.\n                  example: ksjdfhu98q34fi\n                  type: string\n        required: true\n      responses:\n        200:\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  address:\n                    example: '0x73fda64d9feaaada90cd0de8df6b520ae0fe65da'\n                    type: string\n                    description: Address of the account.\n                required:\n                  - address\n          description: OK\n        400: \u0026API400\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error400\"\n          description: Bad Request. Validation failed for the given object in the HTTP Body or Request parameters.\n        401: \u0026API401\n          content:\n            application/json:\n              schema:\n                oneOf:\n                  - $ref: \"#/components/schemas/Error401NotActive\"\n                  - $ref: \"#/components/schemas/Error401Invalid\"\n          description: Unauthorized. Not valid or inactive subscription key present in the HTTP Header.\n        403: \u0026API403\n          description: Forbidden. The request is authenticated, but it is not possible to required perform operation due to logical error or invalid permissions.\n          content:\n            application/json:\n              schema:\n                oneOf:\n                  - $ref: \"#/components/schemas/Error403\"\n        500: \u0026API500\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error500\"\n          description: Internal server error. There was an error on the server during the processing of the request.\n      security:\n        - X-Api-Key: [ ]\n      x-code-samples:\n      summary: Generate Quorum Account\n      tags:\n        - Blockchain / Quorum\n  /v3/quorum/account/{address}/unlock:\n    post:\n      description: |\n        \u003ch4\u003e2 credit per API call.\u003c/h4\u003e\u003cbr/\u003e\n        \u003cp\u003eUnlock account.\u003c/p\u003e\n      operationId: QuorumUnlockAccount\n      parameters:\n        - in: header\n          name: x-quorum-endpoint\n          required: true\n          description: URL of the Quorum network\n          schema:\n            type: string\n            example: https://tatum.blockchain.azure.com:3200/21O-VGUJSqOz9xw7JSFhNyvk\n        - description: \"Account address\"\n          in: path\n          name: address\n          required: true\n          schema:\n            type: string\n            example: \"0x3223AEB8404C7525FcAA6C512f91e287AE9FfE7B\"\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              required:\n                - password\n              properties:\n                password:\n                  description: Password to protect new account.\n                  example: ksjdfhu98q34fi\n                  type: string\n        required: true\n      responses:\n        200:\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  success:\n                    example: true\n                    type: boolean\n                    description: Status flag of the operation.\n                required:\n                  - address\n          description: OK\n        400:\n          \u003c\u003c: *API400\n        401:\n          \u003c\u003c: *API401\n        403:\n          \u003c\u003c: *API403\n        500:\n          \u003c\u003c: *API500\n      security:\n        - X-Api-Key: [ ]\n      x-code-samples:\n      summary: Unlock Quorum Account\n      tags:\n        - Blockchain / Quorum\n  /v3/quorum/web3/{xApiKey}:\n      post:\n        description: |\n          \u003ch4\u003e2 credits per API call.\u003c/h4\u003e\u003cbr/\u003e\n          \u003cp\u003eUse this endpoint URL as a http-based web3 driver to connect directly to the Quorum node.\n          To learn more about Quorum Web3, please visit \u003ca href=\"https://ethereum.org/en/developers/\" target=\"_blank\"\u003eEthereum developer's guide.\u003c/a\u003e\u003c/p\u003e\n        operationId: QuorumWeb3Driver\n        parameters:\n          - in: header\n            name: x-quorum-endpoint\n            required: true\n            description: URL of the Quorum network\n            schema:\n              type: string\n          - description: \"Tatum X-API-Key used for authorization.\"\n            in: path\n            name: xApiKey\n            required: true\n            schema:\n              type: string\n              example: asdlkfjnqunalkwjfnq2oi303294857k\n        requestBody:\n          content:\n            application/json:\n              schema:\n                type: object\n                description: Any valid Web3 method content body.\n                example: { \"jsonrpc\": \"2.0\",\"method\": \"web3_clientVersion\",\"params\": [ ],\"id\": 2 }\n          required: true\n        responses:\n          200:\n            content:\n              application/json:\n                schema:\n                  type: object\n                  description: Any valid Web3 response.\n                  example: { \"jsonrpc\": \"2.0\",\"id\": 2,\"result\": \"Geth/v1.9.9-omnibus-e320ae4c-20191206/linux-amd64/go1.13.4\" }\n            description: OK\n          400:\n            \u003c\u003c: *API400\n          401:\n            \u003c\u003c: *API401\n          500:\n            \u003c\u003c: *API500\n        x-code-samples:\n        summary: Web3 HTTP driver\n        tags:\n          - Blockchain / Quorum\n  /v3/quorum/block/current:\n    get:\n      description: \"\u003ch4\u003e1 credit per API call.\u003c/h4\u003e\u003cbr/\u003e\u003cp\u003eGet Quorum current block number. This is the number of the latest block in the blockchain.\u003c/p\u003e\"\n      operationId: QuorumGetCurrentBlock\n      parameters:\n        - in: header\n          name: x-quorum-endpoint\n          required: true\n          description: URL of the Quorum network\n          schema:\n            type: string\n            example: https://tatum.blockchain.azure.com:3200/21O-VGUJSqOz9xw7JSFhNyvk\n      responses:\n        200:\n          content:\n            application/json:\n              schema:\n                type: number\n                description: Current block number\n                example: 6491272\n          description: OK\n        400:\n          \u003c\u003c: *API400\n        401:\n          \u003c\u003c: *API401\n        403:\n          \u003c\u003c: *API403\n        500:\n          \u003c\u003c: *API500\n      security:\n        - X-Api-Key: [ ]\n      x-code-samples:\n      summary: Get current block number\n      tags:\n        - Blockchain / Quorum\n  /v3/quorum/block/{hash}:\n    get:\n      description: \"\u003ch4\u003e1 credit per API call.\u003c/h4\u003e\u003cbr/\u003e\u003cp\u003eGet Quorum block by block hash or block number.\u003c/p\u003e\"\n      operationId: QuorumGetBlock\n      parameters:\n        - in: header\n          name: x-quorum-endpoint\n          required: true\n          description: URL of the Quorum network\n          schema:\n            type: string\n            example: https://tatum.blockchain.azure.com:3200/21O-VGUJSqOz9xw7JSFhNyvk\n        - description: \"Block hash or block number\"\n          in: path\n          name: hash\n          required: true\n          schema:\n            type: string\n            example: '6470657'\n      responses:\n        200:\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/QuorumBlock\"\n          description: OK\n        400:\n          \u003c\u003c: *API400\n        401:\n          \u003c\u003c: *API401\n        403:\n          \u003c\u003c: *API403\n        500:\n          \u003c\u003c: *API500\n      security:\n        - X-Api-Key: [ ]\n      x-code-samples:\n      summary: Get Quorum block by hash\n      tags:\n        - Blockchain / Quorum\n  /v3/quorum/transaction/{hash}:\n    get:\n      description: \"\u003ch4\u003e1 credit per API call.\u003c/h4\u003e\u003cbr/\u003e\u003cp\u003eGet Quorum transaction by transaction hash.\u003c/p\u003e\"\n      operationId: QuorumGetTransaction\n      parameters:\n        - in: header\n          name: x-quorum-endpoint\n          required: true\n          description: URL of the Quorum network\n          schema:\n            type: string\n            example: https://tatum.blockchain.azure.com:3200/21O-VGUJSqOz9xw7JSFhNyvk\n        - description: \"Transaction hash\"\n          in: path\n          name: hash\n          required: true\n          schema:\n            type: string\n            example: \"0xe6e7340394958674cdf8606936d292f565e4ecc476aaa8b258ec8a141f7c75d7\"\n      responses:\n        200:\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/QuorumTx\"\n          description: OK\n        400:\n          \u003c\u003c: *API400\n        401:\n          \u003c\u003c: *API401\n        403:\n          description: Forbidden. The request is authenticated, but it is not possible to required perform operation due to logical error or invalid permissions.\n          content:\n            application/json:\n              schema:\n                oneOf:\n                  - $ref: \"#/components/schemas/Error403TxNotFound\"\n        500:\n          \u003c\u003c: *API500\n      security:\n        - X-Api-Key: [ ]\n      x-code-samples:\n      summary: Get Quorum Transaction\n      tags:\n        - Blockchain / Quorum\n  /v3/quorum/transaction/{hash}/receipt:\n    get:\n      description: |\n        \u003ch4\u003e1 credit per API call.\u003c/h4\u003e\u003cbr/\u003e\n        \u003cp\u003eGet Quorum Transaction Receipt by transaction hash. Transaction receipt is available only after transaction is included in the block and contains information about paid fee or created contract address and much more.\u003c/p\u003e\n      operationId: QuorumGetTransactionReceipt\n      parameters:\n        - in: header\n          name: x-quorum-endpoint\n          required: true\n          description: URL of the Quorum network\n          schema:\n            type: string\n            example: https://tatum.blockchain.azure.com:3200/21O-VGUJSqOz9xw7JSFhNyvk\n        - description: \"Transaction hash\"\n          in: path\n          name: hash\n          required: true\n          schema:\n            type: string\n            example: \"0xe6e7340394958674cdf8606936d292f565e4ecc476aaa8b258ec8a141f7c75d7\"\n      responses:\n        200:\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/QuorumTx\"\n          description: OK\n        400:\n          \u003c\u003c: *API400\n        401:\n          \u003c\u003c: *API401\n        403:\n          \u003c\u003c: *API403\n        500:\n          \u003c\u003c: *API500\n      security:\n        - X-Api-Key: [ ]\n      x-code-samples:\n      summary: Get Quorum transaction receipt\n      tags:\n        - Blockchain / Quorum\n  /v3/quorum/transaction:\n    post:\n      description: |\n        \u003ch4\u003e2 credits per API call.\u003c/h4\u003e\u003cbr/\u003e\n        \u003cp\u003eSend Quorum transaction account to account.\u003cbr/\u003e\u003cbr/\u003e\n        This operation can be used to send native assets between two accounts or to store data into the blockchain.\u003c/p\u003e\n      operationId: QuorumBlockchainTransfer\n      parameters:\n        - in: header\n          name: x-quorum-endpoint\n          required: true\n          description: URL of the Quorum network\n          schema:\n            type: string\n            example: https://tatum.blockchain.azure.com:3200/21O-VGUJSqOz9xw7JSFhNyvk\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/TransferQuorum\"\n        required: true\n      responses:\n        200:\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/TransactionHash\"\n          description: OK\n        400:\n          \u003c\u003c: *API400\n        401:\n          \u003c\u003c: *API401\n        403:\n          \u003c\u003c: *API403\n        500:\n          \u003c\u003c: *API500\n      security:\n        - X-Api-Key: [ ]\n      x-code-samples:\n      summary: Send Quorum transaction\n      tags:\n        - Blockchain / Quorum\ncomponents:\n  securitySchemes:\n    X-Api-Key:\n      description: |\n        To maintain the highest security level, Tatum requires X-API-Key HTTP header.\n        This X-API-Key represents identification of the plan and can be used by 1 developer or per environment.\n        Each X-API-Key is bound to the test or production blockchains.\n      in: header\n      name: x-api-key\n      type: apiKey\n  schemas:\n    QuorumBlock:\n      type: object\n      properties:\n        difficulty:\n          description: Difficulty for this block.\n          type: number\n          example: 3296820833\n        extraData:\n          description: The 'extra data' field of this block.\n          type: string\n          example: \"0x\"\n        gasLimit:\n          description: The maximum gas allowed in this block.\n          type: number\n          example: 8000000\n        gasUsed:\n          description: The total used gas by all transactions in this block.\n          type: number\n          example: 7985124\n        hash:\n          description: Hash of the block. 'null' when its pending block.\n          type: string\n          example: \"0x5d40698ee1b1ec589035f2a39c6162287e9056868cc79d66cfb248ba9f66c3fc\"\n        logsBloom:\n          description: The bloom filter for the logs of the block. 'null' when its pending block.\n          type: string\n          example: \"0x042080004210492080800001610060ad9600005bc81502020800000043e302020381a404000100409102040240300641108004000400007000008000c049558055a800000a0001800748900806502004200400108205005418c0218802281a0408060000533210462021050470810a010140102809011814018281115020090201068401847000a04010000c00084062000485640d00020220181150020008589105a41c0880001112034100010882545410240011402a3480050104004c310204000002009490d0012022a040c20c20011020401020140250805100410060008280200008181a220114102800001648640828200c00a94c1003a2060e001000\"\n        miner:\n          description: The address of the beneficiary to whom the mining rewards were given.\n          type: string\n          example: \"0xD8869d9E3d497323561Fbca2319a9FC3F6f10c4B\"\n        mixHash:\n          description: ''\n          type: string\n          example: \"0x7a44a1f56f12ae825fdc04550d7c3af2344daab987691771c06235f25fafcaa6\"\n        nonce:\n          description: Hash of the generated proof-of-work. 'null' when its pending block.\n          type: string\n          example: \"0xfa1692f52a7ac672\"\n        number:\n          description: The block number. 'null' when its pending block.\n          type: number\n          example: 6470657\n        parentHash:\n          description: Hash of the parent block.\n          type: string\n          example: \"0xd34aab8a455027086ac54034e68608c84d984401a883b7b5d91f9ae0bbefda15\"\n        sha3Uncles:\n          description: SHA3 of the uncles data in the block.\n          type: string\n          example: \"0x1dcc4de8dec75d7aab85b567b6ccd41ad312451b948a7413f0a142fd40d49347\"\n        size:\n          description: The size of this block in bytes.\n          type: number\n          example: 15296\n        stateRoot:\n          description: The root of the final state trie of the block.\n          type: string\n          example: \"0x32757c92f10c6c5a106c6fb4b9ca3ff301e413a59ca3d0513b4bf98c72efddba\"\n        timestamp:\n          description: The unix timestamp for when the block was collated.\n          type: number\n          example: 1569600592\n        totalDifficulty:\n          description: Total difficulty of the chain until this block.\n          type: number\n          example: 23329673338013873\n        transactions:\n          description: Array of transactions.\n          type: array\n          items:\n            $ref: \"#/components/schemas/QuorumTx\"\n        uncles:\n            description: Array of uncles.\n            type: array\n            items:\n              type: object\n    TransferQuorum:\n      type: object\n      properties:\n        from:\n          description: Blockchain address to send transaction from\n          example: \"0x687422eEA2cB73B5d3e242bA5456b782919AFc85\"\n          pattern: ^0[xX][0-9a-fA-F]+$\n          maxLength: 42\n          minLength: 42\n          type: string\n        to:\n          description: Blockchain address to send transaction to\n          example: \"0x938516ad9dc6d8d4dc8b2aa7cd7791125302fc95\"\n          pattern: ^0[xX][0-9a-fA-F]+$\n          maxLength: 42\n          minLength: 42\n          type: string\n        data:\n          type: string\n          maxLength: 1e12\n          description: Additinal data, that can be passed to blockchain transaction as data property.\n          pattern: ^0[xX][0-9a-fA-F]+$\n          example: \"0x234958719045871984571934519035710938457190385719038457190457190385719034751903745092134857\"\n        nonce:\n          type: number\n          minimum: 0\n          description: Nonce to be set to transaction. If not present, last known nonce will be used.\n        amount:\n          description: Amount to be sent in native asset in HEX.\n          example: \"0xcee3\"\n          pattern: ^0[xX][0-9a-fA-F]+$\n          type: string\n      required:\n        - to\n        - from\n    QuorumTx:\n        type: object\n        properties:\n          blockHash:\n            description: Hash of the block where this transaction was in.\n            type: string\n            example: \"0xcf2c40f475e78c7c19778e1ae999a0e371c9319b38182ea15dc94536f13f9137\"\n          blockNumber:\n            type: number\n            description: Block number where this transaction was in.\n            example: 6470854\n          from:\n            type: string\n            description: Address of the sender.\n            example: \"0x81b7E08F65Bdf5648606c89998A9CC8164397647\"\n          gas:\n            type: number\n            description: Gas provided by the sender.\n            example: 21000\n          gasPrice:\n            type: string\n            description: Gas price provided by the sender in wei.\n            example: \"1000000000\"\n          hash:\n            type: string\n            description: Hash of the transaction.\n            example: \"0xe6e7340394958674cdf8606936d292f565e4ecc476aaa8b258ec8a141f7c75d7\"\n          input:\n            type: string\n            description: The data sent along with the transaction.\n            example: \"0x\"\n          nonce:\n            type: number\n            description: The number of transactions made by the sender prior to this one.\n            example: 26836405\n          to:\n            type: string\n            description: Address of the receiver. 'null' when its a contract creation transaction.\n            example: \"0xbC546fa1716Ed886967cf73f40e8F2F5e623a92d\"\n          transactionIndex:\n            type: number\n            description: Integer of the transactions index position in the block.\n            example: 3\n          value:\n            type: string\n            description: Value transferred in wei.\n            example: \"0x0\"\n    QuorumTxReceipt:\n        type: object\n        properties:\n          blockHash:\n            description: Hash of the block where this transaction was in.\n            type: string\n            example: \"0xcf2c40f475e78c7c19778e1ae999a0e371c9319b38182ea15dc94536f13f9137\"\n          status:\n            type: boolean\n            example: true\n            description: TRUE if the transaction was successful, FALSE, if the EVM reverted the transaction.\n          blockNumber:\n            type: number\n            description: Block number where this transaction was in.\n            example: 6470854\n          from:\n            type: string\n            description: Address of the sender.\n            example: \"0x81b7E08F65Bdf5648606c89998A9CC8164397647\"\n          transactionHash:\n            type: string\n            description: Hash of the transaction.\n            example: \"0xe6e7340394958674cdf8606936d292f565e4ecc476aaa8b258ec8a141f7c75d7\"\n          to:\n            type: string\n            description: Address of the receiver. 'null' when its a contract creation transaction.\n            example: \"0xbC546fa1716Ed886967cf73f40e8F2F5e623a92d\"\n          transactionIndex:\n            type: number\n            description: Integer of the transactions index position in the block.\n            example: 3\n          value:\n            type: string\n            description: Value transferred in wei.\n            example: \"1000000000000000000\"\n          gasUsed:\n            type: number\n            description: The amount of gas used by this specific transaction alone.\n            example: 21000\n          cumulativeGasUsed:\n            type: number\n            description: The total amount of gas used when this transaction was executed in the block.\n            example: 314159\n          contractAddress:\n            type: string\n            description: The contract address created, if the transaction was a contract creation, otherwise null.\n            example: \"0x81b7E08F65Bdf5648606c89998A9CC8164397647\"\n          logsBloom:\n            type: string\n            description: The bloom filter for the logs of the transaction. 'null' when its pending transaction.\n            example: \"0x81b7E08F65Bdf5648606c89998A9CC8164397647\"\n          logs:\n            type: array\n            description: Log events, that happened in this transaction.\n            items:\n              type: object\n              properties:\n                address:\n                  type: string\n                  description: From which this event originated from.\n                  example: \"0x81b7E08F65Bdf5648606c89998A9CC8164397647\"\n                topics:\n                  type: array\n                  description: An array with max 4 32 Byte topics, topic 1-3 contains indexed parameters of the log.\n                  items:\n                    type: string\n                    example: \"0x033456732123ffff2342342dd12342434324234234fd234fd23fd4f23d4234\"\n                data:\n                  type: string\n                  description: The data containing non-indexed log parameter.\n                logIndex:\n                  type: number\n                  description: Integer of the event index position in the block.\n                transactionIndex:\n                  type: number\n                  description: Integer of the transaction’s index position, the event was created in.\n                transactionHash:\n                  type: string\n                  description: Hash of the transaction this event was created in.\n                  example: \"0xe6e7340394958674cdf8606936d292f565e4ecc476aaa8b258ec8a141f7c75d7\"\n"
		}
	},
	"Error": "parse: parse spec: parse operations: paths: /v3/quorum/transaction: post: operation \"QuorumBlockchainTransfer\": responses: 401: content: application/json: schema: parse schema: oneOf: [0]: parse schema: resolve \"#/components/schemas/Error401NotActive\": find schema: resolve \"#/components/schemas/Error401NotActive\": can't find value for \"components/schemas/Error401NotActive\""
}