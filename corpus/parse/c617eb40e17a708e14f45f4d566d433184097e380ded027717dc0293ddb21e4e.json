{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/DTS-STN/eligibility-estimator"
		},
		"file": {
			"name": "insomnia.yaml",
			"size": 0,
			"path": "public/insomnia.yaml",
			"byteSize": 25517,
			"content": "_type: export\n__export_format: 4\n__export_date: 2022-01-22T01:27:53.504Z\n__export_source: insomnia.desktop.app:v2021.7.2\nresources:\n  - _id: req_wrk_90d4d590fb5a4034b3d98b7c089648520e5d7dae\n    parentId: wrk_90d4d590fb5a4034b3d98b7c08964852\n    modified: 1642814835908\n    created: 1637965624524\n    url: '{{ base_url }}/calculateEligibility'\n    name: Calculate eligibility\n    description: ''\n    method: GET\n    body: {}\n    parameters:\n      - name: income\n        disabled: false\n        value: '1000'\n        id: pair_2f8aced01f9a4d128fa36282aa45c6b5\n      - name: age\n        disabled: false\n        value: '65'\n        id: pair_1d25f7cb27f94d35817e9226538c63a3\n      - name: maritalStatus\n        disabled: false\n        value: married\n        id: pair_c78fbe94847b4b34ab8a089a2e579527\n      - name: livingCountry\n        disabled: false\n        value: CAN\n        id: pair_9542c2acc6cd40b9a98d058ea5a81406\n      - name: legalStatus\n        disabled: false\n        value: canadianCitizen\n        id: pair_c9d0beae8e8146919a4da6a722ea0157\n      - name: livedOutsideCanada\n        disabled: false\n        value: 'false'\n        id: pair_98766dee942443a082abebe796f9692a\n      - name: yearsInCanadaSince18\n        disabled: true\n        value: '40'\n        id: pair_ef57fba8d2fd47c69c73a6d3e4f10ef1\n        description: ''\n      - name: everLivedSocialCountry\n        disabled: false\n        value: 'true'\n        id: pair_61dbd67490104aed967462240b1f10f2\n      - name: partnerBenefitStatus\n        disabled: false\n        value: helpMe\n        id: pair_c52d5778ca724b2e96fd84a88a81b692\n      - name: partnerIncome\n        disabled: false\n        value: '0'\n        id: pair_d0962370ae2d4ab0bedac2726499adab\n      - name: partnerAge\n        disabled: false\n        value: '65'\n        id: pair_6baff6ad68d04ff1a23e6c971b26aebe\n        description: ''\n      - name: partnerLivingCountry\n        disabled: false\n        value: CAN\n        id: pair_01b3d3f7535c442fa8fce1e9cefdfa8e\n        description: ''\n      - name: partnerLegalStatus\n        disabled: false\n        value: canadianCitizen\n        id: pair_d4dc755da0d04758a5040ba154b16687\n        description: ''\n      - name: partnerLivedOutsideCanada\n        disabled: false\n        value: 'false'\n        id: pair_530a2572ff674192860e5a81fe42fb2d\n        description: ''\n      - name: partnerYearsInCanadaSince18\n        disabled: false\n        value: '40'\n        id: pair_123d63271caa497d91ff48b3b56e1662\n        description: ''\n      - name: partnerEverLivedSocialCountry\n        disabled: false\n        value: 'true'\n        id: pair_4ef870a388ea4b608bfed6b7a227b303\n        description: ''\n      - name: _language\n        disabled: false\n        value: EN\n        id: pair_13187d812646456ab9fd55f7dbd735ff\n    headers: []\n    authentication: {}\n    metaSortKey: -1637965624524\n    isPrivate: false\n    settingStoreCookies: true\n    settingSendCookies: true\n    settingDisableRenderRequestBody: false\n    settingEncodeUrl: true\n    settingRebuildPath: true\n    settingFollowRedirects: global\n    _type: request\n  - _id: wrk_90d4d590fb5a4034b3d98b7c08964852\n    parentId: null\n    modified: 1637016450873\n    created: 1637016450873\n    name: eligibility-estimator.yaml\n    description: ''\n    scope: design\n    _type: workspace\n  - _id: env_e85c84355a7e428ff3e7002e5d1e8146fed429b0\n    parentId: wrk_90d4d590fb5a4034b3d98b7c08964852\n    modified: 1637963607236\n    created: 1637016450884\n    name: Base Environment\n    data:\n      base_url: '{{ scheme }}://{{ host }}{{ base_path }}'\n    dataPropertyOrder:\n      '\u0026':\n        - base_url\n    color: null\n    isPrivate: false\n    metaSortKey: 1637016450884\n    _type: environment\n  - _id: jar_e85c84355a7e428ff3e7002e5d1e8146fed429b0\n    parentId: wrk_90d4d590fb5a4034b3d98b7c08964852\n    modified: 1637016450890\n    created: 1637016450890\n    name: Default Jar\n    cookies: []\n    _type: cookie_jar\n  - _id: spc_8baaccaea9424f4b84a71dd08f84ee16\n    parentId: wrk_90d4d590fb5a4034b3d98b7c08964852\n    modified: 1642814863431\n    created: 1637016450877\n    fileName: eligibility-estimator-openapi\n    contents: \u003e\n      openapi: 3.0.3\n      info:\n        title: Benefits Eligibility Estimator API\n        version: '1.0'\n        description: \u003e\n          Calculates eligibility for OAS, GIS, and more. Support for entitlement value is coming soon.\n\n\n          Please note that this is simply a testing interface for the backend API, and is not meant to serve as a user-facing frontend interface.\n\n\n          The code for this project is available [here](https://github.com/DTS-STN/eligibility-estimator).\n\n\n          **To interact with the API, click the \"Try it out\" button below on the right.**\n\n      servers:\n        - url: /api\n          description: Current domain (default)\n        - url: https://eligibility-estimator.vercel.app/api\n          description: 'Main production site'\n        - url: https://eligibility-estimator-dev.vercel.app/api\n          description: 'Main development site'\n        - url: http://localhost:3000/api\n          description: 'Local developer environment'\n\n      paths:\n        /calculateEligibility:\n          get:\n            summary: Calculate eligibility\n            description: Calculates eligibility for all benefits given a certain set of parameters.\n            tags:\n              - Endpoints\n            parameters:\n              - $ref: '#/components/parameters/income'\n              - $ref: '#/components/parameters/age'\n              - $ref: '#/components/parameters/oasDefer'\n              - $ref: '#/components/parameters/oasAge'\n              - $ref: '#/components/parameters/maritalStatus'\n              - $ref: '#/components/parameters/livingCountry'\n              - $ref: '#/components/parameters/legalStatus'\n              - $ref: '#/components/parameters/livedOutsideCanada'\n              - $ref: '#/components/parameters/yearsInCanadaSince18'\n              - $ref: '#/components/parameters/everLivedSocialCountry'\n              - $ref: '#/components/parameters/partnerBenefitStatus'\n              - $ref: '#/components/parameters/partnerIncome'\n              - $ref: '#/components/parameters/partnerAge'\n              - $ref: '#/components/parameters/partnerLivingCountry'\n              - $ref: '#/components/parameters/partnerLegalStatus'\n              - $ref: '#/components/parameters/partnerLivedOutsideCanada'\n              - $ref: '#/components/parameters/partnerYearsInCanadaSince18'\n              - $ref: '#/components/parameters/partnerEverLivedSocialCountry'\n            responses:\n              '200':\n                $ref: '#/components/responses/200'\n              '400':\n                $ref: '#/components/responses/400'\n\n      components:\n        schemas:\n          FieldKey:\n            type: array\n            description: A list of fields that the frontend should display.\n            items:\n              type: string\n              enum:\n                - income\n                - age\n                - oasDefer\n                - oasAge\n                - maritalStatus\n                - livingCountry\n                - legalStatus\n                - livedOutsideCanada\n                - yearsInCanadaSince18\n                - everLivedSocialCountry\n                - partnerBenefitStatus\n                - partnerIncome\n                - partnerAge\n                - partnerLivingCountry\n                - partnerLegalStatus\n                - partnerLivedOutsideCanada\n                - partnerYearsInCanadaSince18\n                - partnerEverLivedSocialCountry\n\n          ResultKey:\n            type: string\n            description: A summary of the resulting eligibility calculation\n            format: string\n            enum:\n              - eligible\n              - ineligible\n              - unavailable\n              - moreInfo\n              - invalid\n\n          ResultReason:\n            type: string\n            description: The reason for the provided outcome\n            format: string\n            enum:\n              - You meet the criteria\n              - Age does not meet requirement for this benefit\n              - Age does not meet yet requirement for this benefit, will in the future\n              - Not enough years in Canada\n              - Not living in Canada\n              - Legal status does not meet requirement for this benefit\n              - Not in a country with a social agreement\n              - Need more information...\n              - Not eligible for OAS\n              - Income too high\n              - Your marital status does not meet the requirement for this benefit\n              - Your partner does not receive the required benefits\n\n          ResultObject:\n            type: object\n            description: The calculated results for a given benefit\n            required:\n              - eligibilityResult\n              - entitlementResult\n              - reason\n              - detail\n            properties:\n              eligibilityResult:\n                $ref: '#/components/schemas/ResultKey'\n              entitlementResult:\n                type: number\n                example: 500\n              reason:\n                $ref: '#/components/schemas/ResultReason'\n              detail:\n                type: string\n                example: Based on the information provided, you are eligible!\n              missingFields:\n                $ref: '#/components/schemas/FieldKey'\n\n          ResponseObject:\n            type: object\n            description: The overall eligibility results, plus a list of fields that the frontend should display\n            required:\n              - oas\n              - gis\n              - allowance\n              - afs\n              - visibleFields\n            properties:\n              oas:\n                $ref: '#/components/schemas/ResultObject'\n              gis:\n                $ref: '#/components/schemas/ResultObject'\n              allowance:\n                $ref: '#/components/schemas/ResultObject'\n              afs:\n                $ref: '#/components/schemas/ResultObject'\n              visibleFields:\n                $ref: '#/components/schemas/FieldKey'\n\n          ErrorResponseObject:\n            type: object\n            description: Error details for the failed request\n            required:\n              - error\n              - detail\n            properties:\n              error:\n                type: string\n                example: Request is invalid!\n              detail:\n                type: object\n\n        responses:\n          '200':\n            description: \u003e\n              Successful request and response. Returns the overall eligibility results, plus a list of fields that the frontend should display.\n\n\n              _Note that \"afs\" means \"Allowance for Survivor\"._\n            content:\n              application/json:\n                schema:\n                  $ref: '#/components/schemas/ResponseObject'\n                examples:\n                  'Standard case':\n                    value:\n                      oas:\n                        eligibilityResult: eligible\n                        entitlementResult: 0\n                        reason: You meet the criteria\n                        detail: Based on the information provided, you are eligible for OAS!\n                      gis:\n                        eligibilityResult: eligible\n                        entitlementResult: 0\n                        reason: You meet the criteria\n                        detail: Based on the information provided, you are eligible for GIS!\n                      allowance:\n                        eligibilityResult: ineligible\n                        entitlementResult: 0\n                        reason: Age does not meet requirement for this benefit\n                        detail: You must be between 60 and 64 to be eligible for Allowance.\n                      afs:\n                        eligibilityResult: ineligible\n                        entitlementResult: 0\n                        reason: Age does not meet requirement for this benefit\n                        detail: You must be between 60 and 64 to be eligible for Allowance for Survivor.\n                      visibleFields:\n                        - income\n                        - age\n                        - livingCountry\n                        - legalStatus\n                        - yearsInCanadaSince18\n                        - maritalStatus\n                        - partnerBenefitStatus\n\n                  'Blank request':\n                    value:\n                      oas:\n                        eligibilityResult: moreInfo\n                        entitlementResult: 0\n                        reason: Need more information...\n                        detail: Missing 1 required field.\n                        missingFields:\n                          - income\n                      gis:\n                        eligibilityResult: moreInfo\n                        entitlementResult: 0\n                        reason: Need more information...\n                        detail: Missing 1 required field.\n                        missingFields:\n                          - income\n                      allowance:\n                        eligibilityResult: moreInfo\n                        entitlementResult: 0\n                        reason: Need more information...\n                        detail: Missing 1 required field.\n                        missingFields:\n                          - income\n                      afs:\n                        eligibilityResult: moreInfo\n                        entitlementResult: 0\n                        reason: Need more information...\n                        detail: Missing 1 required field.\n                        missingFields:\n                          - income\n                      visibleFields:\n                        - income\n\n                  'Ineligible case':\n                    value:\n                      oas:\n                        eligibilityResult: ineligible\n                        entitlementResult: 0\n                        reason: Income too high\n                        detail: Your income is too high to be eligible for OAS.\n                      gis:\n                        eligibilityResult: ineligible\n                        entitlementResult: 0\n                        reason: Not eligible for OAS\n                        detail: You need to be eligible for OAS to be eligible for GIS.\n                      allowance:\n                        eligibilityResult: ineligible\n                        entitlementResult: 0\n                        reason: Age does not meet requirement for this benefit\n                        detail: You must be between 60 and 64 to be eligible for Allowance.\n                      afs:\n                        eligibilityResult: ineligible\n                        entitlementResult: 0\n                        reason: Age does not meet requirement for this benefit\n                        detail: You must be between 60 and 64 to be eligible for Allowance for Survivor.\n                      visibleFields:\n                        - income\n                        - age\n                        - livingCountry\n                        - legalStatus\n                        - yearsInCanadaSince18\n                        - maritalStatus\n                        - partnerBenefitStatus\n\n          '400':\n            description: Invalid request, typically because the input did not pass the validation rules.\n            content:\n              application/json:\n                schema:\n                  $ref: '#/components/schemas/ErrorResponseObject'\n                examples:\n                  'Years in Canada validation':\n                    value:\n                      error: Request is invalid!\n                      detail:\n                        message: Years in Canada should be no more than age minus 18\n                        path:\n                          - yearsInCanadaSince18\n                        type: number.max\n                  'Maximum age validation':\n                    value:\n                      error: Request is invalid!\n                      detail:\n                        message: '\"age\" must be less than or equal to 150'\n                        path:\n                          - age\n                        type: number.max\n\n        parameters:\n          income:\n            name: income\n            in: query\n            description: \u003e\n              The client's current net income.\n\n\n              _Note: This should include the client's combined income, and/or partner's income, if applicable._\n            required: true\n            example: 10000\n            schema:\n              type: integer\n              description: Income in Canadian dollars.\n            allowEmptyValue: false\n\n          age:\n            name: age\n            in: query\n            description: The current age of the client, up to a max of 150.\n            required: false\n            schema:\n              type: integer\n              description: Age, up to a max of 150.\n              example: 65\n              maximum: 150\n            allowEmptyValue: false\n\n          oasDefer:\n            name: oasDefer\n            in: query\n            description: If the client would like to defer OAS.\n            required: false\n            schema:\n              type: boolean\n            allowEmptyValue: false\n\n          oasAge:\n            name: oasAge\n            in: query\n            description: The age at which the client would like to start receiving OAS. Can be 65-70.\n            required: false\n            schema:\n              type: integer\n              description: OAS deferral age\n              example: 65\n              minimum: 65\n              maximum: 70\n            allowEmptyValue: false\n\n          maritalStatus:\n            name: maritalStatus\n            in: query\n            description: The current marital status of the client.\n            required: false\n            example: married\n            schema:\n              type: string\n              enum:\n                - single\n                - partnered\n                - widowed\n                - invSeparated\n              description: The current marital status of the client.\n            allowEmptyValue: false\n\n          livingCountry:\n            name: livingCountry\n            in: query\n            description: \u003e\n              The country that the client is currently living in.\n\n\n              _For testing purposes, \"Agreement\" and \"No agreement\" are options._\n            required: false\n            allowEmptyValue: false\n            schema:\n              type: string\n              description: Any country\n              example: CAN\n              enum:\n                - CAN\n                - AGREEMENT\n                - NO_AGREEMENT\n\n          legalStatus:\n            name: legalStatus\n            in: query\n            description: The current legal status of the client.\n            required: false\n            example: canadianCitizen\n            schema:\n              type: string\n              enum:\n                - canadianCitizen\n                - permanentResident\n                - sponsored\n                - indianStatus\n                - other\n              description: The current legal status of the client.\n            allowEmptyValue: false\n\n          livedOutsideCanada:\n            name: livedOutsideCanada\n            in: query\n            description: Since the age of 18 years old, have you lived outside of Canada for longer than 6 months?\n            required: false\n            example: false\n            schema:\n              type: boolean\n            allowEmptyValue: false\n\n          yearsInCanadaSince18:\n            name: yearsInCanadaSince18\n            in: query\n            description: \u003e\n              How many years the client has lived in Canada since the age of 18.\n\n\n              _Note that this can not be greater than `age - 18`._\n            required: false\n            example: 40\n            schema:\n              type: integer\n              description: Years, up to a max of 100.\n              maximum: 100\n            allowEmptyValue: false\n\n          everLivedSocialCountry:\n            name: everLivedSocialCountry\n            in: query\n            description: Has the client ever lived in a country with a social agreement? [link of countries to be included]\n            required: false\n            example: true\n            schema:\n              type: boolean\n            allowEmptyValue: false\n\n          partnerBenefitStatus:\n            name: partnerBenefitStatus\n            in: query\n            description: \u003e\n              Is the client's partner receiving OAS?\n\n\n              _Note: This can be \"true\" only when marital status is Married or Common-Law._\n            required: false\n            example: false\n            schema:\n              type: boolean\n            allowEmptyValue: false\n\n          partnerIncome:\n            name: partnerIncome\n            in: query\n            description: \u003e\n              What is your partner's annual net income in Canadian dollars?\n\n\n              _Note: This can be provided only when marital status is Married or Common-Law._\n            required: false\n            example: 10000\n            schema:\n              type: integer\n              description: Income in Canadian dollars.\n            allowEmptyValue: false\n\n          partnerAge:\n            name: partnerAge\n            in: query\n            description: The current age of the partner, up to a max of 150.\n            required: false\n            schema:\n              type: integer\n              description: Age, up to a max of 150.\n              example: 65\n              maximum: 150\n            allowEmptyValue: false\n\n          partnerLivingCountry:\n            name: partnerLivingCountry\n            in: query\n            description: \u003e\n              The country that the partner is currently living in.\n\n\n              _For testing purposes, \"Agreement\" and \"No agreement\" are options._\n            required: false\n            allowEmptyValue: false\n            schema:\n              type: string\n              description: Any country\n              example: CAN\n              enum:\n                - CAN\n                - AGREEMENT\n                - NO_AGREEMENT\n\n          partnerLegalStatus:\n            name: partnerLegalStatus\n            in: query\n            description: The current legal status of the partner.\n            required: false\n            example: canadianCitizen\n            schema:\n              type: string\n              enum:\n                - canadianCitizen\n                - permanentResident\n                - sponsored\n                - indianStatus\n                - other\n              description: The current legal status of the partner.\n            allowEmptyValue: false\n\n          partnerLivedOutsideCanada:\n            name: partnerLivedOutsideCanada\n            in: query\n            description: Since the age of 18, has your partner lived outside of Canada for longer than 6 months?\n            required: false\n            example: false\n            schema:\n              type: boolean\n            allowEmptyValue: false\n\n          partnerYearsInCanadaSince18:\n            name: partnerYearsInCanadaSince18\n            in: query\n            description: \u003e\n              How many years the partner has lived in Canada since the age of 18.\n\n\n              _Note that this can not be greater than `age - 18`._\n            required: false\n            example: 40\n            schema:\n              type: integer\n              description: Years, up to a max of 100.\n              maximum: 100\n            allowEmptyValue: false\n\n          partnerEverLivedSocialCountry:\n            name: partnerEverLivedSocialCountry\n            in: query\n            description: Has the partner ever lived in a country with a social agreement? [link of countries to be included]\n            required: false\n            example: true\n            schema:\n              type: boolean\n            allowEmptyValue: false\n    contentType: yaml\n    _type: api_spec\n  - _id: env_env_e85c84355a7e428ff3e7002e5d1e8146fed429b0_sub\n    parentId: env_e85c84355a7e428ff3e7002e5d1e8146fed429b0\n    modified: 1639429002812\n    created: 1637342147321\n    name: Prod env\n    data:\n      scheme:\n        - http\n      base_path: /api\n      host: eligibility-estimator.vercel.app\n    dataPropertyOrder:\n      '\u0026':\n        - scheme\n        - base_path\n        - host\n    color: null\n    isPrivate: false\n    metaSortKey: 1637342147321\n    _type: environment\n  - _id: env_e4bbab0d34a74edb8c6d1c0ae7ad0cf2\n    parentId: env_e85c84355a7e428ff3e7002e5d1e8146fed429b0\n    modified: 1639429004155\n    created: 1637633131081\n    name: Local env\n    data:\n      scheme: http\n      base_path: /api\n      host: localhost:3000\n    dataPropertyOrder:\n      '\u0026':\n        - scheme\n        - base_path\n        - host\n    color: null\n    isPrivate: false\n    metaSortKey: 1637342147371\n    _type: environment\n  - _id: env_caaf3e25e5e1424ebecd70a3666e20ed\n    parentId: env_e85c84355a7e428ff3e7002e5d1e8146fed429b0\n    modified: 1639429003487\n    created: 1637965573028\n    name: Dev env\n    data:\n      scheme: https\n      base_path: /api\n      host: eligibility-estimator-dev.vercel.app\n    dataPropertyOrder:\n      '\u0026':\n        - scheme\n        - base_path\n        - host\n    color: null\n    isPrivate: false\n    metaSortKey: 1637342147346\n    _type: environment\n",
			"canonicalURL": "/github.com/DTS-STN/eligibility-estimator@5511dd583fc8ac356b320d8e9a4608eef5c92ea9/-/blob/public/insomnia.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/DTS-STN/eligibility-estimator/blob/5511dd583fc8ac356b320d8e9a4608eef5c92ea9/public/insomnia.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "parse: parse spec: parse version: at public/insomnia.yaml:1:1: invalid version: invalid major version: strconv.Atoi: parsing \"\": invalid syntax"
}