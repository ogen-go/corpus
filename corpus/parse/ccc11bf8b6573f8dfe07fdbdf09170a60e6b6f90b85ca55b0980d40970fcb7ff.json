{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/geoserver/geoserver"
		},
		"file": {
			"name": "workspaces.yaml",
			"size": 0,
			"path": "src/community/rest-openapi/openapi/src/main/resources/org/geoserver/rest/openapi/1.0.0/workspaces.yaml",
			"byteSize": 6619,
			"content": "openapi: 3.0.0\ninfo:\n  version: \"1.0.0\"\n  title: GeoServer Workspace\n  description: A workspace is a grouping of data stores. Similar to a namespace, it is used\n    to group data that is related in some way.\n\nsecurity:\n  - basicAuth: []\n\ntags:\n  - name: workspaces\n    description: Workspaces API\n\npaths:\n  /workspaces:\n    get:\n      tags:\n        - workspaces\n      operationId: getWorkspaces\n      summary: Get a list of workspaces\n      description: Displays a list of all workspaces on the server.\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                  $ref: \"#/components/schemas/WorkspacesResponse\"\n              examples:\n                response:\n                  value: \u003e\n                    {\n                      \"workspaces\": {\n                      \"workspace\": [\n                        {\n                         \"name\": \"topp\",\n                         \"href\": \"http://localhost:8080/geoserver/rest/workspaces/topp.json\"\n                        },\n                        {\n                          \"name\": \"it.geosolutions\",\n                          \"href\": \"http://localhost:8080/geoserver/rest/workspaces/it.geosolutions.json\"\n                        }\n                      ]\n                      }\n                    }\n        \"401\":\n          description: Unauthorized\n    post:\n      tags:\n        - workspaces\n      operationId: createWorkspace\n      summary: add a new workspace to GeoServer\n      description: Adds a new workspace to the server\n      parameters:\n        - name: default\n          in: query\n          description: New workspace will be the used as the default. Allowed values are true or false,  The default value is false.\n          required: false\n          schema:\n            type: boolean\n            default: false\n      requestBody:\n        $ref: \"#/components/requestBodies/Workspace\"\n      responses:\n        \"201\":\n          description: Created\n          headers:\n            Location:\n              description: URL where the newly created workspace can be found\n              schema:\n                type: string\n         #Note: ignoring the response here because geoserver returns a single unquoted string both for JSON and XML\n         #responses and it can't be parsed either way. It should return only text/plain or a properly encoded response for the output content type\n         # content:\n         #   application/json:\n         #     schema:\n         #       type: string\n        \"401\":\n          description: Unable to add workspace as it already exists\n\n  /workspaces/{workspace}:\n    parameters:\n      - name: workspace\n        in: path\n        description: the name of the workspace to fetch\n        required: true\n        schema:\n          type: string\n    get:\n      tags:\n        - workspaces\n      operationId: getWorkspace\n      summary: Retrieve a Workspace\n      description: Retrieves a single workspace definition.\n      parameters:\n        - in: query\n          name: quietOnNotFound\n          required: false\n          schema:\n             type: boolean\n             default: true\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                type: object\n                title: GetWorkspaceResponse\n                properties:\n                  workspace:\n                    $ref: \"#/components/schemas/WorkspaceSummary\"\n              examples:\n                response:\n                  value: \u003e\n                    {\n\n                    \"workspace\": {\n                      \"name\": \"topp\",\n                      \"dataStores\": \"http://localhost:8080/geoserver/rest/workspaces/topp/datastores.json\",\n                      \"coverageStores\": \"http://localhost:8080/geoserver/rest/workspaces/topp/coveragestores.json\",\n                      \"wmsStores\": \"http://localhost:8080/geoserver/rest/workspaces/topp/wmsstores.json\"\n                    }\n\n                    }\n        \"404\":\n          description: workspace does not exist\n    put:\n      tags:\n        - workspaces\n      summary: Update a workspace\n      description: takes the body of the post and modifies the workspace from it.\n      operationId: modifyWorkspace\n      responses:\n        \"200\":\n          description: Modified\n        \"404\":\n          description: Workspace not found\n        \"405\":\n          description: Forbidden to change the name of the workspace\n      requestBody:\n        $ref: \"#/components/requestBodies/Workspace\"\n    delete:\n      tags:\n        - workspaces\n      operationId: deleteWorkspace\n      parameters:\n        - name: recurse\n          in: query\n          description: delete workspace contents (default false)\n          required: false\n          schema:\n            type: boolean\n      responses:\n        \"200\":\n          description: Success workspace deleted\n        \"403\":\n          description: Workspace or related Namespace is not empty (and recurse not true)\n        \"404\":\n          description: Workspace doesn't exist\n        \"405\":\n          description: Can't delete default workspace\n          \ncomponents:\n  securitySchemes:\n    basicAuth:     # \u003c-- arbitrary name for the security scheme\n      type: http\n      scheme: basic\n\n  requestBodies:\n    Workspace:\n      content:\n        application/json:\n          schema:\n            $ref: \"#/components/schemas/WorkspaceWrapper\"\n      description: The Workspace body information to upload.\n      required: true\n  schemas:\n    WorkspaceWrapper:\n      type: object\n      title: Wrapper object around Workspace, in order to conform to how XStream serializes to JSON in GeoServer\n      properties:\n        workspace:\n          $ref: \"catalog.yaml#/components/schemas/WorkspaceInfo\"\n\n    WorkspaceSummary:\n      title: Workspace Response\n      type: object\n      properties:\n        name:\n          type: string\n          description: Name of workspace\n        isolated:\n          type: boolean\n          default: false\n        dataStores:\n          type: string\n          description: URL to Datas tores in this workspace\n        coverageStores:\n          type: string\n          description: URL to Coverage stores in this workspace\n        wmsStores:\n          type: string\n          description: URL to WMS stores in this workspace\n\n    WorkspacesResponse:\n      type: object\n      properties:\n        workspaces:\n          type: object\n          title: WorkspaceResponseWrapper\n          properties:\n            workspace:\n              $ref: \"catalogresponses.yaml#/components/schemas/NamedLinks\"\n"
		}
	},
	"Error": "parse: parse spec: paths: /workspaces: get: operation \"getWorkspaces\": responses: 200: content: \"application/json\": schema: parse schema: reference \"#/components/schemas/WorkspacesResponse\": parse schema: workspaces: parse schema: workspace: parse schema: reference \"catalogresponses.yaml#/components/schemas/NamedLinks\": resolve reference \"catalogresponses.yaml#/components/schemas/NamedLinks\": invalid schema reference \"catalogresponses.yaml#/components/schemas/NamedLinks\""
}