{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/MetaCell/cloud-harness"
		},
		"file": {
			"name": "workflows.yaml",
			"size": 0,
			"path": "applications/workflows/api/workflows.yaml",
			"byteSize": 4348,
			"content": "openapi: 3.0.0\n\nservers:\n  - description: Metacell host\n    url: https://workflows.cloudharness.metacell.us/api\n\ninfo:\n  description: Workflows API\n  version: \"0.1.0\"\n  title: Workflows API\n  contact:\n    email: cloudharness@metacell.us\n  license:\n    name: UNLICENSED\n\ntags:\n  - name: Create and Access\n    description: standard creation, listing and retrieve\n\npaths:\n\n  /operations:\n    get:\n      summary: lists operations\n      operationId: listOperations\n      tags:\n      - Create and Access\n      description: |\n        see all operations for the user\n      parameters:\n      - in: query\n        name: status\n        description: filter by status\n        schema:\n          $ref: '#/components/schemas/OperationStatus'\n        example: 'QUEUED'\n      - in: query\n        name: previous_search_token\n        description: continue previous search (pagination chunks)\n        schema:\n          type: string\n      - in: query\n        name: limit\n        description: maximum number of records to return per page\n        schema:\n          type: integer\n          minimum: 1\n          maximum: 50\n          default: 10\n      responses:\n        200:\n          description: search results matching criteria\n          content:\n            application/json:\n              schema:\n                  $ref: '#/components/schemas/OperationSearchResult'\n        400:\n          description: bad input parameter\n\n  '/operations/{name}':\n    get:\n      summary: get operation by name\n      operationId: getOperation\n      tags:\n      - Create and Access\n      description: |\n        retrieves an operation by its name\n      parameters:\n      - in: path\n        name: name\n        required: true\n        schema:\n          type: string\n      responses:\n        200:\n          description: search results matching criteria\n          content:\n            application/json:\n              schema:\n                type: object\n                items:\n                  $ref: '#/components/schemas/Operation'\n        404:\n          description: not found\n    delete:\n      summary: deletes operation by name\n      operationId: deleteOperation\n      tags:\n      - Create and Access\n      description: |\n        delete operation by its name\n      parameters:\n      - in: path\n        name: name\n        required: true\n        schema:\n          type: string\n      responses:\n          200:\n            description: delete OK\n          404:\n            description: not found\n  '/operations/{name}/logs':\n    get:\n      summary: get operation by name\n      operationId: logOperation\n      tags:\n      - Create and Access\n      description: |\n        retrieves an operation log by its name\n      parameters:\n      - in: path\n        name: name\n        required: true\n        schema:\n          type: string\n      responses:\n        200:\n          description: search results matching criteria\n          content:\n            text/plain:\n              schema:\n                type: string\n                example: \"Hello world\"\n        404:\n          description: not found\ncomponents:\n  schemas:\n    OperationSearchResult:\n      description: a list of operations with meta data about the result\n      properties:\n        meta:\n          $ref: '#/components/schemas/SearchResultData'\n        items:\n          type: array\n          items:\n            $ref: '#/components/schemas/Operation'\n    SearchResultData:\n      description: describes a search\n      properties:\n        continueToken:\n          description: token to use for pagination\n          type: string\n    Operation:\n      description: represents the status of a distributed API call\n      properties:\n        message:\n          type: string\n          description: usually set when an error occurred\n          example: \"\"\n        name:\n          type: string\n          description: operation name\n        createTime:\n          type: string\n          format: date-time\n          readOnly: true\n          example: \"2016-08-29T09:12:33.001Z\"\n        status:\n          $ref: '#/components/schemas/OperationStatus'\n        workflow:\n          type: string\n          description: low level representation as an Argo json\n\n    OperationStatus:\n        type: string\n        default: Pending\n        enum:\n          - Pending\n          - Running\n          - Error\n          - Succeeded\n          - Skipped\n          - Failed",
			"canonicalURL": "/github.com/MetaCell/cloud-harness@1677e55fe23347e0162ef6f34cc1416f62841f8c/-/blob/applications/workflows/api/workflows.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/MetaCell/cloud-harness/blob/1677e55fe23347e0162ef6f34cc1416f62841f8c/applications/workflows/api/workflows.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "parse: parse spec: parse operations: path \"/operations/{name}\": at 1:2060: get: operation \"getOperation\": at 1:2392: responses: 200: at 1:2580: at 1:2591: content: application/json: at 1:2611: schema: at 1:2621: parse schema: object cannot contain 'items' field"
}