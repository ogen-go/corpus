{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/ga4gh-discovery/data-connect"
		},
		"file": {
			"name": "api.yaml",
			"size": 0,
			"path": "spec/api.yaml",
			"byteSize": 9771,
			"content": "openapi: \"3.0.2\"\ninfo:\n  title: Data Connect API\n  version: 1.0.0\n  description: |\n    Data Connect is a standard for discovery and search of biomedical data.\n\n    More information on [GitHub](https://github.com/ga4gh-discovery/data-connect).\n  license:\n    name: 'Apache 2.0'\n    url: 'https://raw.githubusercontent.com/ga4gh-discovery/data-connect/develop/LICENSE'\n  contact:\n    name: 'Data Connect Team'\n    email: 'ga4gh-discovery-search@ga4gh.org'\nsecurity:\n  - bearerAuth: [ ]\npaths:\n  /tables:\n    get:\n      summary: List Tables\n      description: Returns a list of Tables.\n      operationId: listTables\n      tags:\n        - Table API\n      responses:\n        '200':\n          description: A list of Tables\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ListTablesResponse\"\n        '500':\n          description: An unexpected error occurred\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponse\"\n  /table/{table_name}/info:\n    get:\n      summary: Get a Table\n      description: Returns the information about the Table identified by name.\n      operationId: getTable\n      tags:\n        - Table API\n      parameters:\n        - name: table_name\n          in: path\n          description: A table name\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: A Table\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Table\"\n        '404':\n          description: The table doesn't exist\n        '500':\n          description: An unexpected error occurred\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponse\"\n  /table/{table_name}/data:\n    get:\n      summary: Fetch data from a Table\n      description: Returns the data of a Table\n      operationId: getData\n      tags:\n        - Table API\n      parameters:\n        - name: table_name\n          in: path\n          description: A table name\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: Data from the Table\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/TableData\"\n        '404':\n          description: The table doesn't exist\n        '500':\n          description: An unexpected error occurred\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponse\"\n  /search:\n    post:\n      summary: Perform a search on Tables\n      description: Optional operation that accepts a SearchRequest and returns a TableData\n      operationId: search\n      requestBody:\n        description: Query to execute\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/SearchRequest\"\n      tags:\n        - Search API\n      responses:\n        '200':\n          description: Query results returned as TableData\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/TableData\"\n        '400':\n          description: Error in request headers or body, for example if the query is invalid. Details are provided in the ErrorResponse body.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponse\"\n        '404':\n          description: This server does not implement the search operation\n        '500':\n          description: An unexpected error occurred\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorResponse\"\n  /service-info:\n    get:\n      summary: 'Show information about the Data Connect service'\n      operationId: getServiceInfo\n      tags:\n        - Service Info API\n      responses:\n        '200':\n          description: |\n            Show information about this Data Connect service.\n\n            Use `\"type\": {\"group\": \"org.ga4gh\", \"artifact\": \"data-connect\", \"version\": \"1.0.0\"}` when implementing this specification directly.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Service'\ncomponents:\n  securitySchemes:\n    bearerAuth:\n      type: http\n      scheme: bearer\n  schemas:\n    ListTablesResponse:\n      required:\n        - tables\n      type: object\n      properties:\n        tables:\n          type: array\n          items:\n            $ref: \"#/components/schemas/Table\"\n        pagination:\n          $ref: '#/components/schemas/Pagination'\n        errors:\n          $ref: \"#/components/schemas/ErrorList\"\n    Table:\n      required:\n        - name\n        - data_model\n      type: object\n      properties:\n        name:\n          type: string\n          description: |\n            Uniquely identifies a table within this Data Connect service.\n\n            Table names should be human-readable and will typically (but not necessarily)\n            be split into two or three parts separated by a dot (`.`).\n          example: my_catalog.some_schema.a_table\n        description:\n          type: string\n          description: Optional description of the Table\n        data_model:\n          $ref: \"http://json-schema.org/draft-07/schema#\"\n        errors:\n          $ref: \"#/components/schemas/ErrorList\"\n      description: |\n        Describes a Table hosted by this Data Connect node.\n    TableData:\n      required:\n        - data\n      type: object\n      properties:\n        data_model:\n          $ref: \"http://json-schema.org/draft-07/schema#\"\n        data:\n          type: array\n          description: Page of JSON values, each adhering to the schema given in the `data_model` property\n          items:\n            # Each item must conform to the schema provided in the \"data_model\" section of this Table.\n            # Not sure if this constraint can be expressed in OpenAPI 3.0.\n            type: object\n        pagination:\n          $ref: \"#/components/schemas/Pagination\"\n        errors:\n          $ref: \"#/components/schemas/ErrorList\"\n      description: |\n        A paginated collection of tabular data.\n\n        Note that the `data_model` property is required unless `data` is also absent.\n        See [the pagination rules](https://github.com/ga4gh-discovery/data-connect/blob/develop/SPEC.md#pagination-and-long-running-queries) for details.\n    ErrorResponse:\n      type: object\n      properties:\n        errors:\n          $ref: \"#/components/schemas/ErrorList\"\n      description: The response body when no part of the request can be fulfilled\n    ErrorList:\n      type: array\n      description: List of errors encountered\n      items:\n        $ref: \"#/components/schemas/Error\"\n    Error:\n      type: object\n      properties:\n        source:\n          type: string\n          description: \u003e\n            The \"source\" field should only be present when the error originated in an attached data source backing the Data Connect\n            API. The value of source can be any of the following:\n\n            1. A fully qualified table `name`\n            2. Any prefix of a table `name` that ends before a `.` character in the name. For example\n            if there is a table called `foo.bar.baz`, valid prefixes would be `foo` and `foo.bar`. Partial prefixes\n            which do not end just before a `.`, are not valid. For example: `foo.b` and `fo` are not allowed.\n\n            If the error originated inside the Data Connect API implementation and is not associated with any particular table\n            or group of tables, then the source must be absent. An example of this would be an error occurring from a bug\n            in the implementation. Additionally, if the error is due to a bad request from the client, the source must\n            also be absent.\n        title:\n          type: string\n          description: |\n            A short, human-readable description of the error.\n            The value should not change from occurrence to occurrence of an error, except for purposes of localization.\n          example: 'Internal server error'\n        detail:\n          type: string\n          description: 'A human-readable explanation specific to this occurrence of the error.'\n          example: 'Internal server error'\n      required:\n        - title\n    Pagination:\n      type: object\n      properties:\n        next_page_url:\n          type: string\n          description: |\n            URL pointing to the next page of data. Null or absent on last page.\n            \n            See [the pagination rules](https://github.com/ga4gh-discovery/data-connect/blob/develop/SPEC.md#pagination-and-long-running-queries) for full details.\n          format: uri\n    SearchRequest:\n      description:\n        Request body containing an SQL query with zero or more positional parameters.\n      type: object\n      required:\n        - query\n      properties:\n        query:\n          type: string\n          description: Query in SQL. Supported SQL grammar, data types, and functions are described in [the specification](https://github.com/ga4gh-discovery/data-connect/blob/develop/SPEC.md#query).\n          example: SELECT some_string, some_num FROM a_table WHERE some_string=? AND some_num=?\n        parameters:\n          type: array\n          items: {}\n          description: Positional parameters for the query in `query` property.\n          example: [ hello, 42 ]\n    Service:\n      $ref: 'https://raw.githubusercontent.com/ga4gh-discovery/ga4gh-service-info/v1.0.0/service-info.yaml#/components/schemas/Service'"
		}
	},
	"Error": "parse: parse spec: paths: /service-info: get: operation \"getServiceInfo\": responses: 200: content: \"application/json\": schema: parse schema: reference \"#/components/schemas/Service\": parse schema: reference \"https://raw.githubusercontent.com/ga4gh-discovery/ga4gh-service-info/v1.0.0/service-info.yaml#/components/schemas/Service\": resolve reference \"https://raw.githubusercontent.com/ga4gh-discovery/ga4gh-service-info/v1.0.0/service-info.yaml#/components/schemas/Service\": invalid schema reference \"https://raw.githubusercontent.com/ga4gh-discovery/ga4gh-service-info/v1.0.0/service-info.yaml#/components/schemas/Service\""
}