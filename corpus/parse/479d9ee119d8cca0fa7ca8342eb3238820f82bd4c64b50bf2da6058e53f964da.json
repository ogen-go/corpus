{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/radiantearth/stac-api-spec"
		},
		"file": {
			"name": "openapi.yaml",
			"size": 0,
			"path": "collections/openapi.yaml",
			"byteSize": 7381,
			"content": "openapi: 3.0.3\ninfo:\n  title: STAC API - Collections\n  version: '1.0.0-rc.1'\n  description: \u003e-\n    This is an OpenAPI definition of the SpatioTemporal Asset Catalog API - Collections\n    specification.  This is a subset of the STAC API - Features specification.\n  contact:\n    name: STAC Specification\n    url: 'http://stacspec.org'\n  license:\n    name: Apache License 2.0\n    url: 'http://www.apache.org/licenses/LICENSE-2.0'\ntags:\n  - name: Core\n    description: essential characteristics of a STAC API\n  - name: Collections\n    description: All endpoints related to STAC API - Collections\npaths:\n  '/':\n    get:\n      tags:\n        - Core\n      summary: landing page\n      description: |-\n        The landing page provides links to the sub-resources.\n      operationId: getLandingPage\n      responses:\n        '200':\n          description: |-\n            The landing page provides links to the API definition\n            (link relations `service-desc` and `service-doc`),\n            the Conformance declaration (path `/conformance`,\n            link relation `conformance`), and the Feature\n            Collections (path `/collections`, link relation\n            `data`).\n          content:\n            application/json:\n              schema:\n                $ref: '../core/openapi.yaml#/components/schemas/landingPage'\n              example:\n                stac_version: '1.0.0'\n                type: Catalog\n                id: sentinel\n                title: Copernicus Sentinel Imagery\n                description: Catalog of Copernicus Sentinel 1 and 2 imagery.\n                conformsTo:\n                  - 'https://api.stacspec.org/v1.0.0-rc.1/core'\n                  - 'http://www.opengis.net/spec/ogcapi-features-1/1.0/conf/core'\n                  - 'http://www.opengis.net/spec/ogcapi-features-1/1.0/conf/oas30'\n                  - 'http://www.opengis.net/spec/ogcapi-features-1/1.0/conf/geojson'\n                links:\n                  - href: 'http://data.example.org/'\n                    rel: self\n                    type: application/json\n                    title: this document\n                  - href: 'http://data.example.org/api'\n                    rel: service-desc\n                    type: application/vnd.oai.openapi+json;version=3.0\n                    title: the API definition\n                  - href: 'http://data.example.org/api.html'\n                    rel: service-doc\n                    type: text/html\n                    title: the API documentation\n                  - href: 'http://data.example.org/conformance'\n                    rel: conformance\n                    type: application/json\n                    title: OGC API conformance classes implemented by this server\n                  - href: 'http://data.example.org/collections'\n                    rel: data\n                    type: application/json\n                    title: Information about the feature collections\n  '/collections':\n    get:\n      tags:\n        - Collections\n      summary: the feature collections in the dataset\n      description: |-\n        A body of Feature Collections that belong or are used together with additional links.\n        Request may not return the full set of metadata per Feature Collection.\n      operationId: getCollections\n      responses:\n        '200':\n          $ref: '#/components/responses/Collections'\n        '500':\n          $ref: '#/components/responses/ServerError'\n  '/collections/{collectionId}':\n    get:\n      tags:\n        - Collections\n      summary: |-\n        describe the feature collection with id `collectionId`\n      description: |-\n        A single Feature Collection for the given if `collectionId`.\n        Request this endpoint to get a full list of metadata for the Feature Collection.\n      operationId: describeCollection\n      parameters:\n        - $ref: '#/components/parameters/collectionId'\n      responses:\n        '200':\n          $ref: '#/components/responses/Collection'\n        '404':\n          $ref: '#/components/responses/NotFound'\n        '500':\n          $ref: '#/components/responses/ServerError'\ncomponents:\n  parameters:\n    collectionId:\n      name: collectionId\n      in: path\n      description: local identifier of a collection\n      required: true\n      schema:\n        type: string\n  schemas:\n    collections:\n      type: object\n      required:\n        - links\n        - collections\n      properties:\n        links:\n          $ref: '../core/commons.yaml#/components/schemas/links'\n        collections:\n          type: array\n          items:\n            $ref: '../core/commons.yaml#/components/schemas/collection'\n  responses:\n    Collections:\n      description: |-\n        The feature collections shared by this API.\n\n        The dataset is organized as one or more feature collections. This resource\n        provides information about and access to the collections.\n\n        The response contains the list of collections. For each collection, a link\n        to the items in the collection (path `/collections/{collectionId}/items`,\n        link relation `items`) as well as key information about the collection.\n        This information includes:\n\n        * A local identifier for the collection that is unique for the dataset;\n        * A list of coordinate reference systems (CRS) in which geometries may be returned by the server. The first CRS is the default coordinate reference system (the default is always WGS 84 with axis order longitude/latitude);\n        * An optional title and description for the collection;\n        * An optional extent that can be used to provide an indication of the spatial and temporal extent of the collection - typically derived from the data;\n        * An optional indicator about the type of the items in the collection (the default value, if the indicator is not provided, is 'feature').\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/collections'\n    Collection:\n      description: |-\n        Information about the feature collection with id `collectionId`.\n\n        The response contains a link to the items in the collection\n        (path `/collections/{collectionId}/items`, link relation `items`)\n        as well as key information about the collection. This information\n        includes:\n\n        * A local identifier for the collection that is unique for the dataset;\n        * A list of coordinate reference systems (CRS) in which geometries may be returned by the server. The first CRS is the default coordinate reference system (the default is always WGS 84 with axis order longitude/latitude);\n        * An optional title and description for the collection;\n        * An optional extent that can be used to provide an indication of the spatial and temporal extent of the collection - typically derived from the data;\n        * An optional indicator about the type of the items in the collection (the default value, if the indicator is not provided, is 'feature').\n      content:\n        application/json:\n          schema:\n            $ref: '../core/commons.yaml#/components/schemas/collection'\n    NotFound:\n      description: |-\n        The requested URI was not found.\n    ServerError:\n      description: |-\n        A server error occurred.\n      content:\n        application/json:\n          schema:\n            $ref: '../core/commons.yaml#/components/schemas/exception'\n"
		}
	},
	"Error": "parse: parse spec: parse components: schemas: \"collections\": parse schema: property \"collections\": parse schema: item: parse schema: resolve \"../core/commons.yaml#/components/schemas/collection\": external \"../core/commons.yaml\": file: local file reference is not allowed"
}