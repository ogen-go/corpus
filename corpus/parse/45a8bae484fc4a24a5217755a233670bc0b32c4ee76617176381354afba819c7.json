{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/hpi-schul-cloud/schulcloud-server"
		},
		"file": {
			"name": "openapi-template.yaml",
			"size": 0,
			"path": "src/services/school/docs/openapi-template.yaml",
			"byteSize": 24264,
			"content": "security:\n  - jwtBearer: []\ninfo:\n  title: Schul-Cloud School Service API\n  description:\n    This is the API specification for the Schul-Cloud School service.\n    \n  contact:\n    name: support\n    email: info@dbildungscloud.de\n  license:\n    name: GPL-3.0\n    url: 'https://github.com/hpi-schul-cloud/schulcloud-server/blob/master/LICENSE'\n  version: 1.0.0\ncomponents:\n  securitySchemes:\n    jwtBearer:\n      type: http\n      scheme: bearer\n      bearerFormat: JWT\n  schemas:\n    schools:\n      description: TODO\n    schools_list:\n      description: TODO\n    schoolId:\n      description: TODO\n    schoolId_list:\n      description: TODO\n    schoolGroup:\n      description: TODO\n    schoolGroup_list:\n      description: TODO\n    years:\n      description: TODO\n    years_list:\n      description: TODO\n    gradeLevels:\n      description: TODO\n    gradeLevels_list:\n      description: TODO\n    teacher:\n      description: TODO\n    teacher_list:\n      description: TODO\n\npaths:\n  /schools:\n    get:\n      parameters:\n        - description: Number of results to return\n          in: query\n          name: $limit\n          schema:\n            type: integer\n        - description: Number of results to skip\n          in: query\n          name: $skip\n          schema:\n            type: integer\n        - description: Property to sort results\n          in: query\n          name: $sort\n          style: deepObject\n          schema:\n            type: object\n        - description: Query parameters to filter\n          in: query\n          name: filter\n          style: form\n          explode: true\n          schema:\n            $ref: '#/components/schemas/schools'\n      responses:\n        '200':\n          description: success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/schools_list'\n        '401':\n          description: not authenticated\n        '500':\n          description: general error\n      description: Retrieves a list of all resources from the service.\n      summary: ''\n      tags:\n        - schools\n      security: []\n    post:\n      parameters: []\n      responses:\n        '201':\n          description: created\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/schools'\n        '401':\n          description: not authenticated\n        '500':\n          description: general error\n      description: Creates a new resource with data.\n      summary: ''\n      tags:\n        - schools\n      security: []\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/schools'\n  '/schools/{_id}':\n    get:\n      parameters:\n        - in: path\n          name: _id\n          description: ID of schools to return\n          schema:\n            type: integer\n          required: true\n      responses:\n        '200':\n          description: success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/schools'\n        '401':\n          description: not authenticated\n        '404':\n          description: not found\n        '500':\n          description: general error\n      description: Retrieves a single resource with the given id from the service.\n      summary: ''\n      tags:\n        - schools\n      security: []\n    put:\n      parameters:\n        - in: path\n          name: _id\n          description: ID of schools to update\n          schema:\n            type: integer\n          required: true\n      responses:\n        '200':\n          description: success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/schools'\n        '401':\n          description: not authenticated\n        '404':\n          description: not found\n        '500':\n          description: general error\n      description: Updates the resource identified by id using data.\n      summary: ''\n      tags:\n        - schools\n      security: []\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/schools'\n    patch:\n      parameters:\n        - in: path\n          name: _id\n          description: ID of schools to update\n          schema:\n            type: integer\n          required: true\n      responses:\n        '200':\n          description: success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/schools'\n        '401':\n          description: not authenticated\n        '404':\n          description: not found\n        '500':\n          description: general error\n      description: Updates the resource identified by id using data.\n      summary: ''\n      tags:\n        - schools\n      security: []\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/schools'\n    delete:\n      parameters:\n        - in: path\n          name: _id\n          description: ID of schools to remove\n          schema:\n            type: integer\n          required: true\n      responses:\n        '200':\n          description: success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/schools'\n        '401':\n          description: not authenticated\n        '404':\n          description: not found\n        '500':\n          description: general error\n      description: Removes the resource with id.\n      summary: ''\n      tags:\n        - schools\n      security: []\n  '/schools/{schoolId}/maintenance':\n    get:\n      parameters:\n        - in: path\n          name: schoolId\n          schema:\n            type: string\n          required: true\n          description: schoolId parameter\n        - description: Number of results to return\n          in: query\n          name: $limit\n          schema:\n            type: integer\n        - description: Number of results to skip\n          in: query\n          name: $skip\n          schema:\n            type: integer\n        - description: Property to sort results\n          in: query\n          name: $sort\n          style: deepObject\n          schema:\n            type: object\n        - description: Query parameters to filter\n          in: query\n          name: filter\n          style: form\n          explode: true\n          schema:\n            $ref: '#/components/schemas/schoolId'\n      responses:\n        '200':\n          description: success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/schoolId_list'\n        '401':\n          description: not authenticated\n        '500':\n          description: general error\n      description: Retrieves a list of all resources from the service.\n      summary: ''\n      tags:\n        - schools\n      security: []\n    post:\n      parameters:\n        - in: path\n          name: schoolId\n          schema:\n            type: string\n          required: true\n          description: schoolId parameter\n      responses:\n        '201':\n          description: created\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/schoolId'\n        '401':\n          description: not authenticated\n        '500':\n          description: general error\n      description: Creates a new resource with data.\n      summary: ''\n      tags:\n        - schools\n      security: []\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/schoolId'\n  /schoolGroup:\n    get:\n      parameters:\n        - description: Number of results to return\n          in: query\n          name: $limit\n          schema:\n            type: integer\n        - description: Number of results to skip\n          in: query\n          name: $skip\n          schema:\n            type: integer\n        - description: Property to sort results\n          in: query\n          name: $sort\n          style: deepObject\n          schema:\n            type: object\n        - description: Query parameters to filter\n          in: query\n          name: filter\n          style: form\n          explode: true\n          schema:\n            $ref: '#/components/schemas/schoolGroup'\n      responses:\n        '200':\n          description: success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/schoolGroup_list'\n        '401':\n          description: not authenticated\n        '500':\n          description: general error\n      description: Retrieves a list of all resources from the service.\n      summary: ''\n      tags:\n        - schoolGroup\n      security: []\n    post:\n      parameters: []\n      responses:\n        '201':\n          description: created\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/schoolGroup'\n        '401':\n          description: not authenticated\n        '500':\n          description: general error\n      description: Creates a new resource with data.\n      summary: ''\n      tags:\n        - schoolGroup\n      security: []\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/schoolGroup'\n  '/schoolGroup/{_id}':\n    get:\n      parameters:\n        - in: path\n          name: _id\n          description: ID of schoolGroup to return\n          schema:\n            type: integer\n          required: true\n      responses:\n        '200':\n          description: success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/schoolGroup'\n        '401':\n          description: not authenticated\n        '404':\n          description: not found\n        '500':\n          description: general error\n      description: Retrieves a single resource with the given id from the service.\n      summary: ''\n      tags:\n        - schoolGroup\n      security: []\n    put:\n      parameters:\n        - in: path\n          name: _id\n          description: ID of schoolGroup to update\n          schema:\n            type: integer\n          required: true\n      responses:\n        '200':\n          description: success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/schoolGroup'\n        '401':\n          description: not authenticated\n        '404':\n          description: not found\n        '500':\n          description: general error\n      description: Updates the resource identified by id using data.\n      summary: ''\n      tags:\n        - schoolGroup\n      security: []\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/schoolGroup'\n    patch:\n      parameters:\n        - in: path\n          name: _id\n          description: ID of schoolGroup to update\n          schema:\n            type: integer\n          required: true\n      responses:\n        '200':\n          description: success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/schoolGroup'\n        '401':\n          description: not authenticated\n        '404':\n          description: not found\n        '500':\n          description: general error\n      description: Updates the resource identified by id using data.\n      summary: ''\n      tags:\n        - schoolGroup\n      security: []\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/schoolGroup'\n    delete:\n      parameters:\n        - in: path\n          name: _id\n          description: ID of schoolGroup to remove\n          schema:\n            type: integer\n          required: true\n      responses:\n        '200':\n          description: success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/schoolGroup'\n        '401':\n          description: not authenticated\n        '404':\n          description: not found\n        '500':\n          description: general error\n      description: Removes the resource with id.\n      summary: ''\n      tags:\n        - schoolGroup\n      security: []\n  /years:\n    get:\n      parameters:\n        - description: Number of results to return\n          in: query\n          name: $limit\n          schema:\n            type: integer\n        - description: Number of results to skip\n          in: query\n          name: $skip\n          schema:\n            type: integer\n        - description: Property to sort results\n          in: query\n          name: $sort\n          style: deepObject\n          schema:\n            type: object\n        - description: Query parameters to filter\n          in: query\n          name: filter\n          style: form\n          explode: true\n          schema:\n            $ref: '#/components/schemas/years'\n      responses:\n        '200':\n          description: success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/years_list'\n        '401':\n          description: not authenticated\n        '500':\n          description: general error\n      description: Retrieves a list of all resources from the service.\n      summary: ''\n      tags:\n        - years\n      security: []\n    post:\n      parameters: []\n      responses:\n        '201':\n          description: created\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/years'\n        '401':\n          description: not authenticated\n        '500':\n          description: general error\n      description: Creates a new resource with data.\n      summary: ''\n      tags:\n        - years\n      security: []\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/years'\n  '/years/{_id}':\n    get:\n      parameters:\n        - in: path\n          name: _id\n          description: ID of years to return\n          schema:\n            type: integer\n          required: true\n      responses:\n        '200':\n          description: success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/years'\n        '401':\n          description: not authenticated\n        '404':\n          description: not found\n        '500':\n          description: general error\n      description: Retrieves a single resource with the given id from the service.\n      summary: ''\n      tags:\n        - years\n      security: []\n    put:\n      parameters:\n        - in: path\n          name: _id\n          description: ID of years to update\n          schema:\n            type: integer\n          required: true\n      responses:\n        '200':\n          description: success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/years'\n        '401':\n          description: not authenticated\n        '404':\n          description: not found\n        '500':\n          description: general error\n      description: Updates the resource identified by id using data.\n      summary: ''\n      tags:\n        - years\n      security: []\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/years'\n    patch:\n      parameters:\n        - in: path\n          name: _id\n          description: ID of years to update\n          schema:\n            type: integer\n          required: true\n      responses:\n        '200':\n          description: success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/years'\n        '401':\n          description: not authenticated\n        '404':\n          description: not found\n        '500':\n          description: general error\n      description: Updates the resource identified by id using data.\n      summary: ''\n      tags:\n        - years\n      security: []\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/years'\n    delete:\n      parameters:\n        - in: path\n          name: _id\n          description: ID of years to remove\n          schema:\n            type: integer\n          required: true\n      responses:\n        '200':\n          description: success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/years'\n        '401':\n          description: not authenticated\n        '404':\n          description: not found\n        '500':\n          description: general error\n      description: Removes the resource with id.\n      summary: ''\n      tags:\n        - years\n      security: []\n  /gradeLevels:\n    get:\n      parameters:\n        - description: Number of results to return\n          in: query\n          name: $limit\n          schema:\n            type: integer\n        - description: Number of results to skip\n          in: query\n          name: $skip\n          schema:\n            type: integer\n        - description: Property to sort results\n          in: query\n          name: $sort\n          style: deepObject\n          schema:\n            type: object\n        - description: Query parameters to filter\n          in: query\n          name: filter\n          style: form\n          explode: true\n          schema:\n            $ref: '#/components/schemas/gradeLevels'\n      responses:\n        '200':\n          description: success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/gradeLevels_list'\n        '401':\n          description: not authenticated\n        '500':\n          description: general error\n      description: Retrieves a list of all resources from the service.\n      summary: ''\n      tags:\n        - gradeLevels\n      security: []\n    post:\n      parameters: []\n      responses:\n        '201':\n          description: created\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/gradeLevels'\n        '401':\n          description: not authenticated\n        '500':\n          description: general error\n      description: Creates a new resource with data.\n      summary: ''\n      tags:\n        - gradeLevels\n      security: []\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/gradeLevels'\n  '/gradeLevels/{_id}':\n    get:\n      parameters:\n        - in: path\n          name: _id\n          description: ID of gradeLevels to return\n          schema:\n            type: integer\n          required: true\n      responses:\n        '200':\n          description: success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/gradeLevels'\n        '401':\n          description: not authenticated\n        '404':\n          description: not found\n        '500':\n          description: general error\n      description: Retrieves a single resource with the given id from the service.\n      summary: ''\n      tags:\n        - gradeLevels\n      security: []\n    put:\n      parameters:\n        - in: path\n          name: _id\n          description: ID of gradeLevels to update\n          schema:\n            type: integer\n          required: true\n      responses:\n        '200':\n          description: success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/gradeLevels'\n        '401':\n          description: not authenticated\n        '404':\n          description: not found\n        '500':\n          description: general error\n      description: Updates the resource identified by id using data.\n      summary: ''\n      tags:\n        - gradeLevels\n      security: []\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/gradeLevels'\n    patch:\n      parameters:\n        - in: path\n          name: _id\n          description: ID of gradeLevels to update\n          schema:\n            type: integer\n          required: true\n      responses:\n        '200':\n          description: success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/gradeLevels'\n        '401':\n          description: not authenticated\n        '404':\n          description: not found\n        '500':\n          description: general error\n      description: Updates the resource identified by id using data.\n      summary: ''\n      tags:\n        - gradeLevels\n      security: []\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/gradeLevels'\n    delete:\n      parameters:\n        - in: path\n          name: _id\n          description: ID of gradeLevels to remove\n          schema:\n            type: integer\n          required: true\n      responses:\n        '200':\n          description: success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/gradeLevels'\n        '401':\n          description: not authenticated\n        '404':\n          description: not found\n        '500':\n          description: general error\n      description: Removes the resource with id.\n      summary: ''\n      tags:\n        - gradeLevels\n      security: []\n  /school/teacher/studentvisibility:\n    get:\n      parameters:\n        - description: Number of results to return\n          in: query\n          name: $limit\n          schema:\n            type: integer\n        - description: Number of results to skip\n          in: query\n          name: $skip\n          schema:\n            type: integer\n        - description: Property to sort results\n          in: query\n          name: $sort\n          style: deepObject\n          schema:\n            type: object\n        - description: Query parameters to filter\n          in: query\n          name: filter\n          style: form\n          explode: true\n          schema:\n            $ref: '#/components/schemas/teacher'\n      responses:\n        '200':\n          description: success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/teacher_list'\n        '401':\n          description: not authenticated\n        '500':\n          description: general error\n      description: Retrieves a list of all resources from the service.\n      summary: ''\n      tags:\n        - school\n      security: []\n  '/school/teacher/studentvisibility/{id}':\n    patch:\n      parameters:\n        - in: path\n          name: id\n          description: ID of teacher to update\n          schema:\n            type: integer\n          required: true\n      responses:\n        '200':\n          description: success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/teacher'\n        '401':\n          description: not authenticated\n        '404':\n          description: not found\n        '500':\n          description: general error\n      description: Updates the resource identified by id using data.\n      summary: ''\n      tags:\n        - school\n      security: []\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/teacher'\nopenapi: 3.0.2\ntags:\n  - name: schools\n    description: A schools service.\n  - name: schoolGroup\n    description: A schoolGroup service.\n  - name: years\n    description: A years service.\n  - name: gradeLevels\n    description: A gradeLevels service.\n  - name: school\n    description: A school service.\n",
			"canonicalURL": "/github.com/hpi-schul-cloud/schulcloud-server@84cc9ab5620b99ed9c8c4133516ddc6df1f5c2ee/-/blob/src/services/school/docs/openapi-template.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/hpi-schul-cloud/schulcloud-server/blob/84cc9ab5620b99ed9c8c4133516ddc6df1f5c2ee/src/services/school/docs/openapi-template.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "parse: parse spec: parse operations: path \"/gradeLevels\": get: parameters: parse parameter \"filter\": at 1:1332: invalid schema:style:explode combination: (\"\":\"form\":true)"
}