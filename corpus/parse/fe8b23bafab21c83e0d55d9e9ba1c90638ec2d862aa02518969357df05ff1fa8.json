{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/vanilla/vanilla"
		},
		"file": {
			"name": "messages.yml",
			"size": 0,
			"path": "applications/conversations/openapi/messages.yml",
			"byteSize": 4654,
			"content": "openapi: 3.0.2\ninfo:\npaths:\n    /messages:\n        get:\n            parameters:\n                - description: |\n                      Filter by conversation.\n                  in: query\n                  name: conversationID\n                  schema:\n                      type: integer\n                - description: |\n                      Filter by author.\n                  in: query\n                  name: insertUserID\n                  schema:\n                      type: integer\n                - $ref: \"#/components/parameters/Page\"\n                - description: |\n                      Desired number of items per page.\n                  in: query\n                  name: limit\n                  schema:\n                      type: integer\n                      default: 50\n                      maximum: 100\n                      minimum: 1\n                - description: \u003e\n                      Expand associated records using one or more valid field names. A\n                      value of \"all\" will expand all expandable fields.\n                  in: query\n                  name: expand\n                  schema:\n                      items:\n                          enum:\n                              - insertUser\n                              - all\n                          type: string\n                      type: array\n                  style: form\n            responses:\n                \"200\":\n                    content:\n                        application/json:\n                            schema:\n                                items:\n                                    $ref: \"#/components/schemas/Message\"\n                                type: array\n                    description: Success\n            tags:\n                - Messages\n            summary: List user messages.\n        post:\n            responses:\n                \"201\":\n                    content:\n                        application/json:\n                            schema:\n                                $ref: \"#/components/schemas/Message\"\n                    description: Success\n            tags:\n                - Messages\n            requestBody:\n                content:\n                    application/json:\n                        schema:\n                            $ref: \"#/components/schemas/MessagePost\"\n                required: true\n            summary: Add a message.\n    \"/messages/{id}\":\n        get:\n            parameters:\n                - description: |\n                      The message ID.\n                  in: path\n                  name: id\n                  required: true\n                  schema:\n                      type: integer\n            responses:\n                \"200\":\n                    content:\n                        application/json:\n                            schema:\n                                $ref: \"#/components/schemas/Message\"\n                    description: Success\n            tags:\n                - Messages\n            summary: Get a message.\ncomponents:\n    schemas:\n        Message:\n            properties:\n                body:\n                    description: The body of the message.\n                    maxLength: 2000\n                    minLength: 1\n                    type: string\n                conversationID:\n                    description: The ID of the conversation.\n                    type: integer\n                dateInserted:\n                    description: When the message was created.\n                    format: date-time\n                    type: string\n                insertUser:\n                    $ref: \"#/components/schemas/UserFragment\"\n                insertUserID:\n                    description: The user that created the message.\n                    type: integer\n                messageID:\n                    description: The ID of the message.\n                    type: integer\n            required:\n                - messageID\n                - conversationID\n                - body\n                - insertUserID\n                - dateInserted\n            type: object\n        MessagePost:\n            properties:\n                body:\n                    description: The body of the message.\n                    maxLength: 2000\n                    minLength: 1\n                    type: string\n                conversationID:\n                    description: The ID of the conversation.\n                    type: integer\n                format:\n                    $ref: \"../../dashboard/openapi/schemas.yml#/components/schemas/Format\"\n            required:\n                - conversationID\n                - body\n            type: object\n",
			"canonicalURL": "/github.com/vanilla/vanilla@dfe2732ec86d37eed7eec0956151e79f2f414b4f/-/blob/applications/conversations/openapi/messages.yml",
			"externalURLs": [
				{
					"url": "https://github.com/vanilla/vanilla/blob/dfe2732ec86d37eed7eec0956151e79f2f414b4f/applications/conversations/openapi/messages.yml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "parse: parse spec: parse components: at 1:15: schemas: \"Message\": parse schema: property \"insertUser\": at 1:342: parse schema: resolve \"#/components/schemas/UserFragment\": find schema: resolve: can't find value for \"components/schemas/UserFragment\""
}