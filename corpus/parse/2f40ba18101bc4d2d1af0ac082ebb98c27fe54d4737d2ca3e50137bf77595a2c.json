{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/d-date/AppStoreConnectAPISpec"
		},
		"file": {
			"name": "Swagger.yaml",
			"size": 0,
			"path": "Swagger.yaml",
			"byteSize": 70153,
			"content": "openapi: 3.0.0\ninfo:\n  title: App Store Connect API\n  description: \u003e-\n    The App Store Connect API is a REST API used to build custom workflows as\n    part of your app development life cycle and automate actions you take in App\n    Store Connect. Use of the API requires authorization via JSON Web Tokens\n    (JWT); you obtain keys to create the tokens from your organizationâ€™s App\n    Store Connect account. See Creating API Keys for App Store Connect API to\n    create your keys and tokens.\n  version: 1.0.0\nservers:\n  - url: 'http://api.appstoreconnect.apple.com/v1'\ntags:\n  - name: TestFlight\n    description: Resources to manage your beta testing program.\n    externalDocs:\n      description: see more\n      url: 'https://developer.apple.com/documentation/appstoreconnectapi/testflight'\n  - name: Users\n    description: Users on your App Store Connect team.\n    externalDocs:\n      description: see more\n      url: 'https://developer.apple.com/documentation/appstoreconnectapi/users'\n  - name: User Invitations\n    description: Email invitations for joining your App Store Connect team.\n    externalDocs:\n      description: see more\n      url: \u003e-\n        https://developer.apple.com/documentation/appstoreconnectapi/user_invitations\n  - name: Sales and Finance Reports\n    description: Download your sales and financial reports.\n    externalDocs:\n      description: see more\n      url: \u003e-\n        https://developer.apple.com/documentation/appstoreconnectapi/sales_and_finance_reports\npaths:\n  /betaTesters:\n    post:\n      tags:\n        - TestFlight\n      summary: Create a Beta Tester\n      description: 'Create a beta tester assigned to a group, a build, or an app.'\n      operationId: createBetaTester\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/BetaTesterCreateRequest'\n        description: The resource data.\n      responses:\n        '201':\n          description: Created\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BetaTesterResponse'\n        '400':\n          description: Bad Request. An error occurred with your request.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CommonErrorResponse'\n        '403':\n          description: Forbitten. Request not authorized.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CommonErrorResponse'\n        '409':\n          description: Conflict. The provided resource data is not valid.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CommonErrorResponse'\n    delete:\n      tags:\n        - TestFlight\n      summary: Delete a Beta Tester\n      description: Remove a beta tester's ability to test all apps.\n      operationId: DeleteBetaTester\n      parameters:\n        - name: id\n          in: path\n          required: true\n          description: \u003e-\n            (Required) An opaque resource ID that uniquely identifies the\n            resource\n          schema:\n            type: string\n      responses:\n        '204':\n          description: No Content\n        '400':\n          description: Bad Request. An error occurred with your request.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CommonErrorResponse'\n        '403':\n          description: Forbitten. Request not authorized.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CommonErrorResponse'\n        '404':\n          description: Forbitten. Request not authorized.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CommonErrorResponse'\n        '409':\n          description: Conflict. The provided resource data is not valid.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CommonErrorResponse'\n    get:\n      tags:\n        - TestFlight\n      summary: List Beta Testers\n      description: 'Find and list beta testers for all apps, builds, and beta groups.'\n      operationId: listBetaTester\n      parameters:\n        - name: 'fields[app]'\n          in: query\n          description: Fields to return for included related types.\n          schema:\n            type: array\n            items:\n              type: string\n              enum:\n                - betaAppLocalizations\n                - betaAppReviewDetail\n                - betaGroups\n                - betaLicenseAgreement\n                - betaTesters\n                - builds\n                - bundleId\n                - name\n                - preReleaseVersions\n                - primaryLocale\n                - skumore\n        - name: 'fields[betaGroups]'\n          in: query\n          description: Fields to return for included related types.\n          schema:\n            type: array\n            items:\n              type: string\n              enum:\n                - app\n                - betaTesters\n                - builds\n                - createdDate\n                - isInternalGroup\n                - name\n                - publicLink\n                - publicLinkEnabled\n                - publicLinkId\n                - publicLinkLimit\n                - publicLinkLimitEnabledmore\n        - name: 'fields[betaTesters]'\n          in: query\n          description: Fields to return for included related types.\n          schema:\n            type: array\n            items:\n              type: string\n              enum:\n                - apps\n                - betaGroups\n                - builds\n                - email\n                - firstName\n                - inviteType\n                - lastName\n        - name: 'fields[builds]'\n          in: query\n          description: Fields to return for included related types.\n          schema:\n            type: array\n            items:\n              type: string\n              enum:\n                - app\n                - appEncryptionDeclaration\n                - betaAppReviewSubmission\n                - betaBuildLocalizations\n                - betaGroups\n                - buildBetaDetail\n                - expirationDate\n                - expired\n                - iconAssetToken\n                - individualTesters\n                - minOsVersion\n                - preReleaseVersion\n                - processingState\n                - uploadedDate\n                - usesNonExemptEncryption\n                - versionmore\n        - name: 'filter[apps]'\n          in: query\n          description: 'Attributes, relationships, and IDs by which to filter.'\n          schema:\n            type: array\n            items:\n              type: string\n        - name: 'filter[betaGroups]'\n          in: query\n          description: 'Attributes, relationships, and IDs by which to filter.'\n          schema:\n            type: array\n            items:\n              type: string\n        - name: 'filter[builds]'\n          in: query\n          description: 'Attributes, relationships, and IDs by which to filter.'\n          schema:\n            type: array\n            items:\n              type: string\n        - name: 'filter[email]'\n          in: query\n          description: 'Attributes, relationships, and IDs by which to filter.'\n          schema:\n            type: array\n            items:\n              type: string\n        - name: 'filter[firstName]'\n          in: query\n          description: 'Attributes, relationships, and IDs by which to filter.'\n          schema:\n            type: array\n            items:\n              type: string\n        - name: 'filter[inviteType]'\n          in: query\n          description: 'Attributes, relationships, and IDs by which to filter.'\n          schema:\n            type: array\n            items:\n              type: string\n        - name: 'filter[lastName]'\n          in: query\n          description: 'Attributes, relationships, and IDs by which to filter.'\n          schema:\n            type: array\n            items:\n              type: string\n        - name: include\n          in: query\n          schema:\n            type: array\n            items:\n              type: string\n              enum:\n                - apps\n                - betaGroups\n                - builds\n        - name: limit\n          in: query\n          description: Number of resources to return. Maximum is 200\n          schema:\n            type: integer\n        - name: 'limit[apps]'\n          in: query\n          description: Number of resources to return. Maximum is 50\n          schema:\n            type: integer\n        - name: 'limit[betaGroups]'\n          in: query\n          description: Number of resources to return. Maximum is 50\n          schema:\n            type: integer\n        - name: 'limit[builds]'\n          in: query\n          description: Number of resources to return. Maximum is 50\n          schema:\n            type: integer\n        - name: sort\n          in: query\n          description: Attributes by which to sort.\n          schema:\n            type: string\n            enum:\n              - email\n              - +email\n              - '-email'\n              - firstName\n              - +firstName\n              - '-firstName'\n              - inviteType\n              - +inviteType\n              - '-inviteType'\n              - lastName\n              - +lastName\n              - '-lastNamemore'\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BetaTestersResponse'\n        '400':\n          description: Bad Request. An error occurred with your request.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CommonErrorResponse'\n        '403':\n          description: Forbidden. Request not authorized.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CommonErrorResponse'\n  '/betaTesters/{id}':\n    get:\n      tags:\n        - TestFlight\n      summary: Read Beta Tester Information\n      description: Get a specific beta tester.\n      operationId: readBetaTester\n      parameters:\n        - name: id\n          in: path\n          description: \u003e-\n            (Required) An opaque resource ID that uniquely identifies the\n            resource.\n          required: true\n          schema:\n            type: string\n        - name: 'fields[app]'\n          in: query\n          description: Fields to return for included related types.\n          schema:\n            type: array\n            items:\n              type: string\n              enum:\n                - betaAppLocalizations\n                - betaAppReviewDetail\n                - betaGroups\n                - betaLicenseAgreement\n                - betaTesters\n                - builds\n                - bundleId\n                - name\n                - preReleaseVersions\n                - primaryLocale\n                - skumore\n        - name: 'fields[betaGroups]'\n          in: query\n          description: Fields to return for included related types.\n          schema:\n            type: array\n            items:\n              type: string\n              enum:\n                - app\n                - betaTesters\n                - builds\n                - createdDate\n                - isInternalGroup\n                - name\n                - publicLink\n                - publicLinkEnabled\n                - publicLinkId\n                - publicLinkLimit\n                - publicLinkLimitEnabledmore\n        - name: 'fields[betaTesters]'\n          in: query\n          description: Fields to return for included related types.\n          schema:\n            type: array\n            items:\n              type: string\n              enum:\n                - apps\n                - betaGroups\n                - builds\n                - email\n                - firstName\n                - inviteType\n                - lastName\n        - name: 'fields[builds]'\n          in: query\n          description: Fields to return for included related types.\n          schema:\n            type: array\n            items:\n              type: string\n              enum:\n                - app\n                - appEncryptionDeclaration\n                - betaAppReviewSubmission\n                - betaBuildLocalizations\n                - betaGroups\n                - buildBetaDetail\n                - expirationDate\n                - expired\n                - iconAssetToken\n                - individualTesters\n                - minOsVersion\n                - preReleaseVersion\n                - processingState\n                - uploadedDate\n                - usesNonExemptEncryption\n                - versionmore\n        - name: 'filter[apps]'\n          in: query\n          description: 'Attributes, relationships, and IDs by which to filter.'\n          schema:\n            type: array\n            items:\n              type: string\n        - name: 'filter[betaGroups]'\n          in: query\n          description: 'Attributes, relationships, and IDs by which to filter.'\n          schema:\n            type: array\n            items:\n              type: string\n        - name: 'filter[builds]'\n          in: query\n          description: 'Attributes, relationships, and IDs by which to filter.'\n          schema:\n            type: array\n            items:\n              type: string\n        - name: 'filter[email]'\n          in: query\n          description: 'Attributes, relationships, and IDs by which to filter.'\n          schema:\n            type: array\n            items:\n              type: string\n        - name: 'filter[firstName]'\n          in: query\n          description: 'Attributes, relationships, and IDs by which to filter.'\n          schema:\n            type: array\n            items:\n              type: string\n        - name: 'filter[inviteType]'\n          in: query\n          description: 'Attributes, relationships, and IDs by which to filter.'\n          schema:\n            type: array\n            items:\n              type: string\n        - name: 'filter[lastName]'\n          in: query\n          description: 'Attributes, relationships, and IDs by which to filter.'\n          schema:\n            type: array\n            items:\n              type: string\n        - name: include\n          in: query\n          schema:\n            type: array\n            items:\n              type: string\n              enum:\n                - apps\n                - betaGroups\n                - builds\n        - name: limit\n          in: query\n          description: Number of resources to return. Maximum is 200\n          schema:\n            type: integer\n        - name: 'limit[apps]'\n          in: query\n          description: Number of resources to return. Maximum is 50\n          schema:\n            type: integer\n        - name: 'limit[betaGroups]'\n          in: query\n          description: Number of resources to return. Maximum is 50\n          schema:\n            type: integer\n        - name: 'limit[builds]'\n          in: query\n          description: Number of resources to return. Maximum is 50\n          schema:\n            type: integer\n        - name: sort\n          in: query\n          description: Attributes by which to sort.\n          schema:\n            type: string\n            enum:\n              - email\n              - +email\n              - '-email'\n              - firstName\n              - +firstName\n              - '-firstName'\n              - inviteType\n              - +inviteType\n              - '-inviteType'\n              - lastName\n              - +lastName\n              - '-lastNamemore'\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BetaTesterResponse'\n        '400':\n          description: Bad Request. An error occurred with your request.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CommonErrorResponse'\n        '403':\n          description: Forbidden. Request not authorized.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CommonErrorResponse'\n        '404':\n          description: Not Found. Resource not found.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CommonErrorResponse'\n  '/betaTesters/{id}/relationships/betaGroups':\n    post:\n      tags:\n        - TestFlight\n      summary: Add a Beta Tester to Beta Groups\n      description: Add one or more beta testers to a specific beta group.\n      operationId: addBetaTester\n      parameters:\n        - name: id\n          in: path\n          required: true\n          description: \u003e-\n            (Required) An opaque resource ID that uniquely identifies the\n            resource.\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/BetaTesterBetaGroupsLinkagesRequest'\n      responses:\n        '204':\n          description: No Content\n        '403':\n          description: Forbidden. Request not authorized.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CommonErrorResponse'\n        '404':\n          description: Not Found. Resource not found.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CommonErrorResponse'\n        '409':\n          description: Conflict. The provided resource data is not valid.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CommonErrorResponse'\n    delete:\n      tags:\n        - TestFlight\n      summary: Remove a Beta Tester from Beta Groups\n      description: \u003e-\n        Remove a specific beta tester from one or more beta groups, revoking\n        their access to test builds associated with those groups.\n      operationId: RemoveBetaTesterFromBetaGroups\n      parameters:\n        - name: id\n          in: path\n          required: true\n          description: \u003e-\n            (Required) An opaque resource ID that uniquely identifies the\n            resource.\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/BetaTesterBetaGroupsLinkagesRequest'\n      responses:\n        '204':\n          description: No Content\n        '403':\n          description: Forbidden. Request not authorized.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CommonErrorResponse'\n        '404':\n          description: Not Found. Resource not found.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CommonErrorResponse'\n        '409':\n          description: Conflict. The provided resource data is not valid.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CommonErrorResponse'\n  '/betaTesters/{id}/relationships/builds':\n    get:\n      tags:\n        - TestFlight\n      summary: Get All IDs of Builds Individually Assigned to a Beta Tester\n      description: \u003e-\n        Get a list of build resource IDs individually assigned to a specific\n        beta tester.\n      operationId: getAllBuildsAssignedToBetaTester\n      parameters:\n        - name: id\n          in: path\n          required: true\n          description: \u003e-\n            (Required) An opaque resource ID that uniquely identifies the\n            resource.\n          schema:\n            type: string\n        - name: limit\n          in: query\n          description: Number of resources to return. Maximum is 200.\n          schema:\n            type: integer\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BetaTesterBuildsLinkagesResponse'\n        '400':\n          description: Bad Request. An error occurred with your request.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CommonErrorResponse'\n        '403':\n          description: Forbidden. Request not authorized.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CommonErrorResponse'\n        '404':\n          description: Not Found. Resource not found.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CommonErrorResponse'\n    post:\n      tags:\n        - TestFlight\n      summary: Individually Assign a Beta Tester to Builds\n      description: Individually assign a beta tester to a build.\n      operationId: assignBetaTesterToBuilds\n      parameters:\n        - name: id\n          in: path\n          required: true\n          description: \u003e-\n            (Required) An opaque resource ID that uniquely identifies the\n            resource.\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/BetaTesterBuildsLinkagesRequest'\n      responses:\n        '204':\n          description: No Content\n        '403':\n          description: Forbidden. Request not authorized.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CommonErrorResponse'\n        '404':\n          description: Not Found. Resource not found.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CommonErrorResponse'\n        '409':\n          description: Conflict. The provided resource data is not valid.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CommonErrorResponse'\n    delete:\n      tags:\n        - TestFlight\n      summary: Individually Unassign a Beta Tester from Builds\n      description: Remove an individually assigned beta tester's ability to test a build.\n      operationId: unassignBetaTesterFromBuilds\n      parameters:\n        - name: id\n          in: path\n          required: true\n          description: \u003e-\n            (Required) An opaque resource ID that uniquely identifies the\n            resource.\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/BetaTesterBuildsLinkagesRequest'\n      responses:\n        '204':\n          description: No Content\n        '403':\n          description: Forbidden. Request not authorized.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CommonErrorResponse'\n        '404':\n          description: Not Found. Resource not found.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CommonErrorResponse'\n        '409':\n          description: Conflict. The provided resource data is not valid.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CommonErrorResponse'\n  '/betaTesters/{id}/relationships/apps':\n    get:\n      tags:\n        - TestFlight\n      summary: Get All App Resource IDs for a Beta Tester\n      description: Get a list of app resource IDs associated with a beta tester.\n      operationId: getAllAppResourceIdsForBetaTester\n      parameters:\n        - name: id\n          in: path\n          required: true\n          description: \u003e-\n            (Required) An opaque resource ID that uniquely identifies the\n            resource.\n          schema:\n            type: string\n        - name: limit\n          in: query\n          description: Maximum is 200\n          schema:\n            type: integer\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BetaTesterAppsLinkagesResponse'\n        '400':\n          description: Bad Request. An error occurred with your request.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CommonErrorResponse'\n        '403':\n          description: Forbidden. Request not authorized.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CommonErrorResponse'\n        '404':\n          description: Not Found. Resource not found.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CommonErrorResponse'\n    delete:\n      tags:\n        - TestFlight\n      summary: Remove a Beta Testerâ€™s Access to Apps\n      description: \u003e-\n        Remove a specific beta tester's access to test any builds of one or more\n        apps.\n      operationId: removeBetaTesterAccessToApps\n      parameters:\n        - name: id\n          in: path\n          required: true\n          description: \u003e-\n            (Required) An opaque resource ID that uniquely identifies the\n            resource.\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/BetaTesterAppsLinkagesRequest'\n      responses:\n        '204':\n          description: No Content\n        '403':\n          description: Forbidden. Request not authorized.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CommonErrorResponse'\n        '404':\n          description: Not Found. Resource not found.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CommonErrorResponse'\n        '409':\n          description: Conflict. The provided resource data is not valid.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CommonErrorResponse'\n  '/betaTesters/{id}/apps':\n    get:\n      tags:\n        - TestFlight\n      summary: List All Apps for a Beta Tester\n      description: Get a list of apps that a beta tester can test.\n      operationId: listAllAppsForBetaTester\n      parameters:\n        - name: id\n          in: path\n          required: true\n          description: \u003e-\n            (Required) An opaque resource ID that uniquely identifies the\n            resource.\n          schema:\n            type: string\n        - name: limit\n          in: query\n          description: Number of resources to return. Maximum is 200.\n          schema:\n            type: integer\n        - name: 'fields[apps]'\n          in: query\n          description: Fields to return for included related types.\n          schema:\n            type: array\n            items:\n              type: string\n              enum:\n                - betaAppLocalizations\n                - betaAppReviewDetail\n                - betaGroups\n                - betaLicenseAgreement\n                - betaTesters\n                - builds\n                - bundleId\n                - name\n                - preReleaseVersions\n                - primaryLocale\n                - skumore\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AppsResponse'\n        '400':\n          description: Bad Request. An error occurred with your request.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CommonErrorResponse'\n        '403':\n          description: Forbidden. Request not authorized.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CommonErrorResponse'\n        '404':\n          description: Not Found. Resource not found.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CommonErrorResponse'\n  '/betaTesters/{id}/builds':\n    get:\n      tags:\n        - TestFlight\n      summary: List All Builds Individually Assigned to a Beta Tester\n      description: Get a list of builds individually assigned to a specific beta tester.\n      operationId: listAllBuildsAssignedToBetaTester\n      parameters:\n        - name: id\n          in: path\n          required: true\n          description: \u003e-\n            (Required) An opaque resource ID that uniquely identifies the\n            resource.\n          schema:\n            type: string\n        - name: limit\n          in: query\n          description: Number of resources to return. Maximum is 200.\n          schema:\n            type: integer\n        - name: 'fields[builds]'\n          in: query\n          description: Fields to return for included related types.\n          schema:\n            type: array\n            items:\n              type: string\n              enum:\n                - app\n                - appEncryptionDeclaration\n                - betaAppReviewSubmission\n                - betaBuildLocalizations\n                - betaGroups\n                - buildBetaDetail\n                - expirationDate\n                - expired\n                - iconAssetToken\n                - individualTesters\n                - minOsVersion\n                - preReleaseVersion\n                - processingState\n                - uploadedDate\n                - usesNonExemptEncryption\n                - versionmore\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BuildsResponse'\n        '400':\n          description: Bad Request. An error occurred with your request.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CommonErrorResponse'\n        '403':\n          description: Forbidden. Request not authorized.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CommonErrorResponse'\n        '404':\n          description: Not Found. Resource not found.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CommonErrorResponse'\n  /betaTesterInvitations:\n    post:\n      tags:\n        - TestFlight\n      summary: Send an Invitation to a Beta Tester\n      description: Send or resend an invitation to a beta tester to test a specified app.\n      operationId: sendInvitationToBetaTester\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/BetaTesterInvitationCreateRequest'\n      responses:\n        '201':\n          description: Created\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BetaTesterInvitationResponse'\n        '400':\n          description: Bad Request. An error occurred with your request.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CommonErrorResponse'\n        '403':\n          description: Forbidden. Request not authorized.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CommonErrorResponse'\n        '409':\n          description: Conflict. The provided resource data is not valid.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CommonErrorResponse'\n  /betaGroups:\n    post:\n      tags:\n        - TestFlight\n      summary: Create a Beta Group\n      description: \u003e-\n        Create a beta group associated with an app, optionally enabling\n        TestFlight public links.\n      operationId: createBetaGroup\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/BetaGroupCreateRequest'\n      responses:\n        '201':\n          description: Created\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BetaGroupResponse'\n        '400':\n          description: Bad Request. An error occurred with your request.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CommonErrorResponse'\n        '403':\n          description: Forbidden. Request not authorized.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CommonErrorResponse'\n        '409':\n          description: Conflict. The provided resource data is not valid.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CommonErrorResponse'\n  '/betaGroups/{id}':\n    patch:\n      tags:\n      - TestFlight\n      summary: Modify a Beta Group\n      description: \u003e-\n        Modify a beta group's metadata, including changing its Testflight public\n        link status.\n      operationId: ModifyBetaGroup\n      parameters:\n        - name: id\n          in: path\n          required: true\n          description: \u003e-\n            (Required) An opaque resource ID that uniquely identifies the\n            resource.\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/BetaGroupUpdateRequest'\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BetaGroupResponse'\n        '400':\n          description: Bad Request. An error occurred with your request.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CommonErrorResponse'\n        '403':\n          description: Forbidden. Request not authorized.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CommonErrorResponse'\n        '404':\n          description: Not Found. Resource not found.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CommonErrorResponse'\n        '409':\n          description: Conflict. The provided resource data is not valid.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CommonErrorResponse'\ncomponents:\n  schemas:\n    App:\n      required:\n        - id\n      properties:\n        attributes:\n          $ref: '#/components/schemas/App.Attributes'\n        id:\n          type: string\n          description: The opaque resource ID that uniquely identifies the resource.\n        relationships:\n          $ref: '#/components/schemas/App.Relationships'\n        type:\n          type: string\n          example: apps\n        links:\n          $ref: '#/components/schemas/ResourceLinks'\n    App.Attributes:\n      properties:\n        bundleId:\n          type: string\n          description: \u003e-\n            The bundle ID for your app. This ID must match the one you use in\n            Xcode. The bundle ID cannot be changed after you upload your first\n            build.\n        name:\n          type: string\n          description: \u003e-\n            The name of your app as it will appear in the App Store. The maximum\n            length is 30 characters.\n        primaryLocale:\n          type: string\n          description: \u003e-\n            The primary locale for your app. If localized app information isnâ€™t\n            available in an App Store territory, the information from your\n            primary language is used instead.\n        sky:\n          type: string\n          description: A unique ID for your app that is not visible on the App Store.\n    App.Relationships:\n      properties:\n        betaLicenseAgreement:\n          $ref: '#/components/schemas/App.Relationships.BetaLicenseAgreement'\n        preReleaseVersions:\n          $ref: '#/components/schemas/App.Relationships.PreReleaseVersions'\n        betaAppLocalizations:\n          $ref: '#/components/schemas/App.Relationships.BetaAppLocalizations'\n        betaGroups:\n          $ref: '#/components/schemas/App.Relationships.BetaGroups'\n        betaTesters:\n          $ref: '#/components/schemas/App.Relationships.BetaTesters'\n        builds:\n          $ref: '#/components/schemas/App.Relationships.Builds'\n        betaAppReviewDetail:\n          $ref: '#/components/schemas/App.Relationships.BetaAppReviewDetail'\n    App.Relationships.BetaLicenseAgreement:\n      properties:\n        data:\n          $ref: '#/components/schemas/CommonData'\n        links:\n          $ref: '#/components/schemas/CommonLinks'\n    App.Relationships.PreReleaseVersions:\n      properties:\n        data:\n          type: array\n          items:\n            $ref: '#/components/schemas/CommonData'\n        links:\n          $ref: '#/components/schemas/CommonLinks'\n        meta:\n          $ref: '#/components/schemas/PagingInformation'\n    App.Relationships.BetaAppLocalizations:\n      properties:\n        data:\n          type: array\n          items:\n            $ref: '#/components/schemas/CommonData'\n        links:\n          $ref: '#/components/schemas/CommonLinks'\n        meta:\n          $ref: '#/components/schemas/PagingInformation'\n    App.Relationships.BetaGroups:\n      properties:\n        data:\n          type: array\n          items:\n            $ref: '#/components/schemas/CommonData'\n        links:\n          $ref: '#/components/schemas/CommonLinks'\n        meta:\n          $ref: '#/components/schemas/PagingInformation'\n    App.Relationships.BetaTesters:\n      properties:\n        data:\n          type: array\n          items:\n            $ref: '#/components/schemas/CommonData'\n        links:\n          $ref: '#/components/schemas/CommonLinks'\n        meta:\n          $ref: '#/components/schemas/PagingInformation'\n    App.Relationships.Builds:\n      properties:\n        data:\n          type: array\n          items:\n            $ref: '#/components/schemas/CommonData'\n        links:\n          $ref: '#/components/schemas/CommonLinks'\n        meta:\n          $ref: '#/components/schemas/PagingInformation'\n    App.Relationships.BetaAppReviewDetail:\n      properties:\n        data:\n          $ref: '#/components/schemas/CommonData'\n        links:\n          $ref: '#/components/schemas/CommonLinks'\n    AppsResponse:\n      description: A response containing a list of resources.\n      required:\n      - data\n      - links\n      properties:\n        data:\n          $ref: '#/components/schemas/Build'\n        include:\n          oneOf:\n            - $ref: '#/components/schemas/BetaGroup'\n            - $ref: '#/components/schemas/PrereleaseVersion'\n            - $ref: '#/components/schemas/BetaAppLocalization'\n            - $ref: '#/components/schemas/Build'\n            - $ref: '#/components/schemas/BetaLicenseAgreement'\n            - $ref: '#/components/schemas/BetaAppReviewDetail'\n        links:\n          $ref: '#/components/schemas/PagedDocumentLinks'\n        meta:\n          $ref: '#/components/schemas/PagingInformation'\n    BetaGroup:\n      required:\n        - id\n      properties:\n        attributes:\n          $ref: '#/components/schemas/BetaGroup.Attributes'\n        id:\n          type: string\n          description: The opaque resource ID that uniquely identifies the resource.\n        relationships:\n          $ref: '#/components/schemas/BetaGroup.Relationships'\n        type:\n          type: string\n          example: apps\n        links:\n          $ref: '#/components/schemas/ResourceLinks'\n    BetaGroup.Attributes:\n      description: Attributes that describe a resource.\n      properties:\n        isInternalGroup:\n          type: boolean\n          description: \u003e-\n            A Boolean value that indicates whether the group is internal. Only\n            existing users of App Store Connect may be added for internal beta\n            testing.\n        name:\n          type: string\n          description: The name for the beta group.\n        publicLink:\n          type: string\n          format: uri\n          description: The URL of the public link provided to your app's beta testers.\n        publicLinkEnabled:\n          type: boolean\n          description: \u003e-\n            A Boolean value that indicates whether a public link is enabled.\n            Enabling a link allows you to invite anyone outside of your team to\n            beta test your app. When you share this link, testers will be able\n            to install the beta version of your app on their devices in\n            TestFlight and share the link with others.\n        publicLinkId:\n          type: string\n          description: The ID as part of the URL of the public link.\n        publicLinkLimit:\n          type: integer\n          description: \u003e-\n            The maximum number of testers that can join this beta group using\n            the public link. Values must be between 1 and 10,000.\n        publicLinkLimitEnabled:\n          type: boolean\n          description: \u003e-\n            A Boolean value that limits the number of testers who can join the\n            beta group using the public link.\n        createdDate:\n          type: string\n          format: date-time\n          description: The creation date of the beta group.\n    BetaGroup.Relationships:\n      properties:\n        app:\n          $ref: '#/components/schemas/BetaGroup.Relationships.App'\n        betaTesters:\n          $ref: '#/components/schemas/BetaGroup.Relationships.BetaTesters'\n        builds:\n          $ref: '#/components/schemas/BetaGroup.Relationships.Builds'\n    BetaGroup.Relationships.App:\n      properties:\n        data:\n          $ref: '#/components/schemas/CommonData'\n        links:\n          $ref: '#/components/schemas/CommonLinks'\n    BetaGroup.Relationships.BetaTesters:\n      properties:\n        data:\n          $ref: '#/components/schemas/CommonData'\n        links:\n          $ref: '#/components/schemas/CommonLinks'\n        meta:\n          $ref: '#/components/schemas/PagingInformation'\n    BetaGroup.Relationships.Builds:\n      properties:\n        data:\n          $ref: '#/components/schemas/CommonData'\n        links:\n          $ref: '#/components/schemas/CommonLinks'\n        meta:\n          $ref: '#/components/schemas/PagingInformation'    \n    BetaTesterCreateRequest:\n      properties:\n        data:\n          $ref: '#/components/schemas/BetaTesterCreateRequest.Data'\n    BetaTesterCreateRequest.Data:\n      required:\n        - type\n      properties:\n        attributes:\n          $ref: '#/components/schemas/BetaTesterCreateRequest.Data.Attributes'\n        relationships:\n          $ref: '#/components/schemas/BetaTesterCreateRequest.Data.Relationships'\n        type:\n          type: string\n          description: The resource type.\n          example: null\n    BetaTesterCreateRequest.Data.Attributes:\n      required:\n        - email\n      type: object\n      description: Attributes that describe a resource.\n      properties:\n        email:\n          type: string\n          format: email\n        firstName:\n          type: string\n          description: The beta tester's first name.\n        lastName:\n          type: string\n          description: The beta tester's last name.\n    BetaTesterCreateRequest.Data.Relationships:\n      type: object\n      description: The types and IDs of the related data to update.\n      properties:\n        betaGroups:\n          $ref: \u003e-\n            #/components/schemas/BetaTesterCreateRequest.Data.Relationships.BetaGroups\n        builds:\n          $ref: \u003e-\n            #/components/schemas/BetaTesterCreateRequest.Data.Relationships.Builds\n    BetaTesterCreateRequest.Data.Relationships.BetaGroups:\n      type: object\n      properties:\n        data:\n          type: array\n          items:\n            $ref: \u003e-\n              #/components/schemas/BetaTesterCreateRequest.Data.Relationships.BetaGroups.Data\n    BetaTesterCreateRequest.Data.Relationships.BetaGroups.Data:\n      required:\n        - id\n        - type\n      properties:\n        id:\n          type: string\n          description: The opaque resource ID that uniquely identifies the resource.\n        type:\n          type: string\n          description: The resource type.\n    BetaTesterCreateRequest.Data.Relationships.Builds:\n      type: object\n      properties:\n        data:\n          type: array\n          items:\n            $ref: \u003e-\n              #/components/schemas/BetaTesterCreateRequest.Data.Relationships.Builds.Data\n    BetaTesterCreateRequest.Data.Relationships.Builds.Data:\n      required:\n        - id\n        - type\n      properties:\n        id:\n          type: string\n          description: The opaque resource ID that uniquely identifies the resource.\n        type:\n          type: string\n          description: The resource type.\n          example: builds\n    BetaTesterResponse:\n      properties:\n        data:\n          $ref: '#/components/schemas/BetaTester'\n        include:\n          oneOf:\n            - $ref: '#/components/schemas/App'\n            - $ref: '#/components/schemas/BetaGroup'\n            - $ref: '#/components/schemas/Build'\n        links:\n          $ref: '#/components/schemas/DocumentLinks'\n    BetaTestersResponse:\n      description: A response containing a list of resources.\n      required:\n        - data\n      properties:\n        data:\n          description: (Required) The resource data.\n          type: array\n          items:\n            $ref: '#/components/schemas/BetaTester'\n        include:\n          description: The requested relationship data.\n          oneOf:\n            - $ref: '#/components/schemas/App'\n            - $ref: '#/components/schemas/BetaGroup'\n            - $ref: '#/components/schemas/Build'\n        links:\n          description: (Required) Navigational links that include the self-link.\n          $ref: '#/components/schemas/PagedDocumentLinks'\n        meta:\n          $ref: '#/components/schemas/PagingInformation'\n          description: Paging information.\n    BetaTester:\n      required:\n        - id\n        - type\n      properties:\n        attributes:\n          $ref: '#/components/schemas/BetaTester.Attributes'\n        id:\n          type: string\n          description: The opaque resource ID that uniquely identifies the resource.\n        relationships:\n          $ref: '#/components/schemas/BetaTester.Relationships'\n        type:\n          type: string\n          example: betaTesters\n          description: The resource type\n        links:\n          $ref: '#/components/schemas/ResourceLinks'\n    BetaTester.Attributes:\n      properties:\n        email:\n          type: string\n          format: email\n          description: \u003e-\n            The beta tester's email address, used for sending beta testing\n            invitations.\n        firstName:\n          type: string\n          description: The beta tester's first name.\n        inviteType:\n          $ref: '#/components/schemas/BetaInviteType'\n        lastName:\n          type: string\n          description: The beta tester's last name.\n    BetaTester.Relationships:\n      properties:\n        apps:\n          $ref: '#/components/schemas/BetaTester.Relationships.Apps'\n        betaGroups:\n          $ref: '#/components/schemas/BetaTester.Relationships.BetaGroups'\n        builds:\n          $ref: '#/components/schemas/BetaTester.Relationships.Builds'\n    BetaTester.Relationships.Apps:\n      properties:\n        data:\n          type: array\n          items:\n            $ref: '#/components/schemas/CommonData'\n        links:\n          $ref: '#/components/schemas/CommonLinks'\n        meta:\n          $ref: '#/components/schemas/PagingInformation'\n    BetaTester.Relationships.BetaGroups:\n      properties:\n        data:\n          type: array\n          items:\n            $ref: '#/components/schemas/CommonData'\n        links:\n          $ref: '#/components/schemas/CommonLinks'\n        meta:\n          $ref: '#/components/schemas/PagingInformation'\n    BetaTester.Relationships.Builds:\n      properties:\n        data:\n          type: array\n          items:\n            $ref: '#/components/schemas/CommonData'\n        links:\n          $ref: '#/components/schemas/CommonLinks'\n        meta:\n          $ref: '#/components/schemas/PagingInformation'\n    BetaGroupCreateRequest:\n      description: A request containing a single resource.\n      required:\n        - data\n      properties:\n        data:\n          description: (Required) The resource data.\n          $ref: '#/components/schemas/BetaGroupCreateRequest.Data'\n    BetaGroupCreateRequest.Data:\n      required:\n        - attributes\n        - relationships\n        - type\n      properties:\n        attributes:\n          $ref: '#/components/schemas/BetaGroupCreateRequest.Data.Attributes'\n        relationships:\n          $ref: '#/components/schemas/BetaGroupCreateRequest.Data.Relationships'\n        type:\n          type: string\n          description: (Required) The resource type.\n          example: betaGroups\n    BetaGroupCreateRequest.Data.Attributes:\n      description: Attributes that describe a resource.\n      required:\n        - name\n      properties:\n        name:\n          type: string\n          description: (Required) The name for the beta group.\n        publicLinkEnabled:\n          type: boolean\n          description: \u003e-\n            A Boolean value that indicates whether a public link is enabled.\n            Enabling a link allows you to invite anyone outside of your team to\n            beta test your app. When you share this link, testers will be able\n            to install the beta version of your app on their devices in\n            TestFlight and share the link with others.\n        publicLinkLimit:\n          type: integer\n          description: \u003e-\n            The maximum number of testers that can join this beta group using\n            the public link. Values must be between 1 and 10,000.\n        publicLinkLimitEnabled:\n          type: boolean\n          description: \u003e-\n            A Boolean value that limits the number of testers who can join the\n            beta group using the public link.\n    BetaGroupCreateRequest.Data.Relationships:\n      required:\n        - app\n      properties:\n        app:\n          $ref: '#/components/schemas/BetaGroupCreateRequest.Data.Relationships.App'\n        betaTesters:\n          $ref: '#/components/schemas/BetaGroupCreateRequest.Data.Relationships.BetaTesters'\n        builds:\n          $ref: '#/components/schemas/BetaGroupCreateRequest.Data.Relationships.Builds'\n    BetaGroupCreateRequest.Data.Relationships.App:\n      required:\n      - data\n      properties:\n        data:\n          $ref: '#/components/schemas/CommonData'\n    BetaGroupCreateRequest.Data.Relationships.BetaTesters:\n      properties:\n        data:\n          type: array\n          items:\n            $ref: '#/components/schemas/CommonData'\n    BetaGroupCreateRequest.Data.Relationships.Builds:\n      properties:\n        data:\n          type: array\n          items:\n            $ref: '#/components/schemas/CommonData'\n        link:\n          $ref: '#/components/schemas/CommonLinks'\n        meta:\n          $ref: '#/components/schemas/PagingInformation'\n    BetaGroupUpdateRequest:\n      description: A request containing a single resource.\n      required:\n        - data\n      properties:\n        data:\n          $ref: '#/components/schemas/BetaGroupUpdateRequest.Data'\n          description: (Required) The resource data.\n    BetaGroupUpdateRequest.Data:\n      required:\n        - id\n        - type\n      properties:\n        attributes:\n          $ref: '#/components/schemas/BetaGroupUpdateRequest.Data.Attributes'\n          description: The resource's attributes.\n        id:\n          type: string\n          description: \u003e-\n            (Required) The opaque resource ID that uniquely identifies the\n            resource.\n        type:\n          type: string\n          description: (Required) The resource type.\n          example: betaGroups\n    BetaGroupUpdateRequest.Data.Attributes:\n      description: Attributes that describe a resource.\n      properties:\n        name:\n          type: string\n          description: The name for the beta group.\n        publicLinkEnabled:\n          type: boolean\n          description: \u003e-\n            A Boolean value that indicates whether a public link is enabled.\n            Enabling a link allows you to invite anyone outside of your team to\n            beta test your app. When you share this link, testers will be able\n            to install the beta version of your app on their devices in\n            TestFlight and share the link with others.\n        publicLinkLimit:\n          type: integer\n          description: \u003e-\n            The maximum number of testers that can join this beta group using\n            the public link. Values must be between 1 and 10,000.\n        publicLinkLimitEnabled:\n          type: boolean\n          description: \u003e-\n            A Boolean value that limits the number of testers who can join the\n            beta group using the public link.\n    BetaGroupResponse:\n      description: A response containing a single resource.\n      required:\n        - data\n        - links\n      properties:\n        data:\n          $ref: '#/components/schemas/BetaGroup'\n          description: (Required) The resource data.\n        include:\n          oneOf:\n            - $ref: '#/components/schemas/App'\n            - $ref: '#/components/schemas/Build'\n            - $ref: '#/components/schemas/BetaTester'\n          description: The requested relationship data.\n        links:\n          $ref: '#/components/schemas/DocumentLinks'\n    BetaInviteType:\n      type: string\n      description: \u003e-\n        An invite type that indicates if a beta tester was invited by an email\n        invite or used a TestFlight public link to join a beta test.\n      enum:\n        - EMAIL\n        - PUBLIC_LINK\n    BetaTesterAppsLinkagesRequest:\n      description: A request containing the IDs of related resources.\n      required:\n        - data\n      properties:\n        data:\n          type: array\n          items:\n            $ref: '#/components/schemas/CommonData'\n    BetaTesterAppsLinkagesResponse:\n      description: A response containing a list of related resource IDs.\n      properties:\n        data:\n          type: array\n          items:\n            $ref: '#/components/schemas/CommonData'\n        links:\n          $ref: '#/components/schemas/PagedDocumentLinks'\n        meta:\n          $ref: '#/components/schemas/PagingInformation'\n    BetaTesterBetaGroupsLinkagesRequest:\n      description: A request containing the IDs of related resources.\n      required:\n        - data\n      properties:\n        data:\n          type: array\n          items:\n            $ref: '#/components/schemas/CommonData'\n    BetaTesterBetaGroupsLinkagesResponse:\n      description: A response containing a list of related resource IDs.\n      properties:\n        data:\n          type: array\n          items:\n            $ref: '#/components/schemas/CommonData'\n        links:\n          $ref: '#/components/schemas/PagedDocumentLinks'\n        meta:\n          $ref: '#/components/schemas/PagingInformation'\n    BetaTesterBuildsLinkagesRequest:\n      description: A request containing the IDs of related resources.\n      properties:\n        data:\n          type: array\n          items:\n            $ref: '#/components/schemas/CommonData'\n          description: (Required) The types and IDs of related resources.\n    BetaTesterBuildsLinkagesResponse:\n      description: A response containing a list of related resource IDs.\n      properties:\n        data:\n          type: array\n          items:\n            $ref: '#/components/schemas/CommonData'\n            description: (Required) The object types and IDs of the related resources.\n        links:\n          $ref: '#/components/schemas/PagedDocumentLinks'\n          description: \u003e-\n            (Required) Navigational links including the self-link and links to\n            the related data.\n        meta:\n          $ref: '#/components/schemas/PagingInformation'\n          description: Paging information.\n    Build:\n      required:\n        - id\n        - type\n      properties:\n        attributes:\n          $ref: '#/components/schemas/Build.Attributes'\n          description: The resource's attributes.\n        id:\n          type: string\n          description: \u003e-\n            (Required) The opaque resource ID that uniquely identifies the\n            resource.\n        relationships:\n          $ref: '#/components/schemas/Build.Relationships'\n          description: \u003e-\n            Navigational links to related data and included resource types and\n            IDs.\n        type:\n          type: string\n          description: (Required) The resource type.\n          example: builds\n        links:\n          $ref: '#/components/schemas/ResourceLinks'\n          description: (Required) Navigational links that include the self-link.\n    Build.Attributes:\n      description: Attributes that describe a resource.\n      properties:\n        expired:\n          type: boolean\n          description: \u003e-\n            A Boolean value that indicates if the build has expired. An expired\n            build is unavailable for testing.\n        iconAssetToken:\n          $ref: '#/components/schemas/ImageAsset'\n          description: The icon of the uploaded build.\n        minOsVersion:\n          type: string\n          description: The minimum operating system version needed to test a build.\n        processingState:\n          type: string\n          description: \u003e-\n            The processing state of the build indicating that it is not yet\n            available for testing.\n          enum:\n            - PROCESSING\n            - FAILED\n            - INVALID\n            - VALID\n        version:\n          type: string\n          description: The version number of the uploaded build.\n        usesNonExemptEncryption:\n          type: boolean\n          description: \u003e-\n            A Boolean value that indicates whether the build uses non-exempt\n            encryption.\n        uploadedDate:\n          type: string\n          format: datetime\n          description: The date and time the build was uploaded to App Store Connect.\n        expirationDate:\n          type: string\n          format: datetime\n          description: \u003e-\n            The date and time the build will auto-expire and no longer be\n            available for testing.\n    BuildsResponse:\n      description: A response containing a list of resources.\n      required:\n      - data\n      - links\n      properties:\n        data:\n          $ref: '#/components/schemas/Build'\n        include:\n          oneOf:\n            - $ref: '#/components/schemas/PrereleaseVersion'\n            - $ref: '#/components/schemas/BetaTester'\n            - $ref: '#/components/schemas/BetaBuild'\n            - $ref: '#/components/schemas/Localizaton'\n            - $ref: '#/components/schemas/AppEncryptionDeclaration'\n            - $ref: '#/components/schemas/BetaAppReviewSubmission'\n            - $ref: '#/components/schemas/App'\n            - $ref: '#/components/schemas/BuildBetaDetail'\n        links:\n          $ref: '#/components/schemas/PagedDocumentLinks'\n        meta:\n          $ref: '#/components/schemas/PagingInformation'\n    ImageAsset:\n      description: 'An image asset, including its height, width, and template URL.'\n      properties:\n        templateUrl:\n          type: string\n        height:\n          type: integer\n        width:\n          type: integer\n    BetaTesterInvitationCreateRequest:\n      description: A request containing a single resource.\n      required:\n        - data\n      properties:\n        data:\n          $ref: '#/components/schemas/BetaTesterInvitationCreateRequest.Data'\n          description: (Required) The resource data.\n    BetaTesterInvitationCreateRequest.Data:\n      required:\n        - properties\n      properties:\n        relationships:\n          $ref: \u003e-\n            #/components/schemas/BetaTesterInvitationCreateRequest.Data.Relationships\n          description: (Required) The types and IDs of the related data to update.\n        type:\n          type: string\n          description: (Required) The resource type.\n          example: betaTesterInvitations\n    BetaTesterInvitationCreateRequest.Data.Relationships:\n      required:\n        - app\n        - betaTester\n      properties:\n        app:\n          $ref: \u003e-\n            #/components/schemas/BetaTesterInvitationCreateRequest.Data.Relationships.App\n        betaTester:\n          $ref: \u003e-\n            #/components/schemas/BetaTesterInvitationCreateRequest.Data.Relationships.BetaTester\n    BetaTesterInvitationCreateRequest.Data.Relationships.App:\n      required:\n        - data\n      properties:\n        data:\n          $ref: '#/components/schemas/CommonData'\n    BetaTesterInvitationCreateRequest.Data.Relationships.BetaTester:\n      required:\n        - data\n      properties:\n        data:\n          $ref: '#/components/schemas/CommonData'\n    BetaTesterInvitationResponse:\n      description: A response containing a single resource.\n      required:\n        - data\n        - links\n      properties:\n        data:\n          $ref: '#/components/schemas/BetaTesterInvitation'\n          description: (Required) The resource data.\n        links:\n          $ref: '#/components/schemas/DocumentLinks'\n          description: (Required) Navigational links that include the self-link.\n    BetaTesterInvitation:\n      description: The data structure that represents the resource.\n      required:\n        - id\n        - type\n        - links\n      properties:\n        id:\n          type: string\n          description: \u003e-\n            (Required) The opaque resource ID that uniquely identifies the\n            resource.\n        type:\n          type: string\n          description: (Required) The resource type.\n          example: betaTesterInvitations\n        links:\n          $ref: '#/components/schemas/ResourceLinks'\n    Build.Relationships:\n      properties:\n        app:\n          $ref: '#/components/schemas/Build.Relationships.App'\n        appEncryptionDeclaration:\n          $ref: '#/components/schemas/Build.Relationships.AppEncryptionDeclaration'\n        individualTesters:\n          $ref: '#/components/schemas/Build.Relationships.IndividualTesters'\n        preReleaseVersion:\n          $ref: '#/components/schemas/Build.Relationships.PreReleaseVersion'\n        betaBuildLocalizations:\n          $ref: '#/components/schemas/Build.Relationships.BetaBuildLocalizations'\n        betaGroups:\n          $ref: '#/components/schemas/Build.Relationships.BetaGroups'\n        buildBetaDetail:\n          $ref: '#/components/schemas/Build.Relationships.BuildBetaDetail'\n        betaAppReviewSubmission:\n          $ref: '#/components/schemas/Build.Relationships.BetaAppReviewSubmission'\n    Build.Relationships.App:\n      properties:\n        data:\n          $ref: '#/components/schemas/CommonData'\n        links:\n          $ref: '#/components/schemas/CommonLinks'\n    Build.Relationships.AppEncryptionDeclaration:\n      properties:\n        data:\n          $ref: '#/components/schemas/CommonData'\n        links:\n          $ref: '#/components/schemas/CommonLinks'\n    Build.Relationships.IndividualTesters:\n      properties:\n        data:\n          $ref: '#/components/schemas/CommonData'\n        links:\n          $ref: '#/components/schemas/CommonLinks'\n        meta:\n          $ref: '#/components/schemas/PagingInformation'\n    Build.Relationships.PreReleaseVersion:\n      properties:\n        data:\n          $ref: '#/components/schemas/CommonData'\n        links:\n          $ref: '#/components/schemas/CommonLinks'\n    Build.Relationships.BetaBuildLocalizations:\n      properties:\n        data:\n          $ref: '#/components/schemas/CommonData'\n        links:\n          $ref: '#/components/schemas/CommonLinks'\n        meta:\n          $ref: '#/components/schemas/PagingInformation'\n    Build.Relationships.BetaGroups:\n      properties:\n        data:\n          $ref: '#/components/schemas/CommonData'\n        links:\n          $ref: '#/components/schemas/CommonLinks'\n        meta:\n          $ref: '#/components/schemas/PagingInformation'\n    Build.Relationships.BuildBetaDetail:\n      properties:\n        data:\n          $ref: '#/components/schemas/CommonData'\n        links:\n          $ref: '#/components/schemas/CommonLinks'\n    Build.Relationships.BetaAppReviewSubmission:\n      properties:\n        data:\n          $ref: '#/components/schemas/CommonData'\n        links:\n          $ref: '#/components/schemas/CommonLinks'\n    CommonData:\n      required:\n        - id\n        - type\n      properties:\n        id:\n          type: string\n          description: The opaque resource ID that uniquely identifies the resource.\n        type:\n          type: string\n          description: The resource type.\n    CommonLinks:\n      properties:\n        related:\n          type: string\n          format: uri\n        self:\n          type: string\n          format: uri\n    DocumentLinks:\n      required:\n        - self\n      properties:\n        self:\n          type: string\n          format: uri\n          description: The link that produced the current document.\n    CommonErrorResponse:\n      properties:\n        errors:\n          type: array\n          items:\n            $ref: '#/components/schemas/CommonErrorResponse.Errors'\n      description: \u003e-\n        Detailed error information returned in the response body whenever an API\n        request is not successful.\n    CommonErrorResponse.Errors:\n      description: \u003e-\n        The details about one error that is returned when an API request is not\n        successful.\n      required:\n        - code\n        - status\n        - title\n        - detail\n      properties:\n        code:\n          type: string\n          description: \u003e-\n            (Required) A machine-readable code indicating the type of error. The\n            code is a hierarchical value with levels of specificity separated by\n            the '.' character. This value is parseable for programmatic error\n            handling in code.\n        status:\n          type: string\n          description: \u003e-\n            (Required) The HTTP status code of the error. This status code\n            usually matches the response's status code; however, if the request\n            produces multiple errors, these two codes may differ.\n        id:\n          type: string\n          description: \u003e-\n            The unique ID of a specific instance of an error, request, and\n            response. Use this ID when providing feedback to or debugging issues\n            with Apple.\n        title:\n          type: string\n          description: \u003e-\n            (Required) A summary of the error. Do not use this field for\n            programmatic error handling.\n        detail:\n          type: string\n          description: \u003e-\n            (Required) A detailed explanation of the error. Do not use this\n            field for programmatic error handling.\n        source:\n          oneOf:\n            - $ref: '#/components/schemas/CommonErrorResponse.Errors.JsonPointer'\n            - $ref: '#/components/schemas/CommonErrorResponse.Errors.Parameter'\n          description: \u003e-\n            One of two possible types of values. source.parameter, provided when\n            a query parameter produced the error, or source.JsonPointer,\n            provided when a problem with the entity produced the error.\n    CommonErrorResponse.Errors.JsonPointer:\n      description: \u003e-\n        An object containing the JSON pointer that indicates the location of the\n        error.\n      properties:\n        pointer:\n          type: string\n          description: \u003e-\n            A JSON pointer that indicates the location in the request entity\n            where the error originates.\n    CommonErrorResponse.Errors.Parameter:\n      description: An object containing the query parameter that produced the error.\n      properties:\n        parameter:\n          type: string\n          description: The query parameter that produced the error.\n    PagedDocumentLinks:\n      description: \u003e-\n        Links related to the response document, including paging links. All the\n        response data constitutes a document.\n      required:\n        - self\n      properties:\n        first:\n          type: string\n          format: uri\n          description: The link to the first page of documents.\n        next:\n          type: string\n          format: uri\n          description: The link to the next page of documents.\n        self:\n          type: string\n          format: uri\n          description: (Required) The link that produced the current document.\n    PagingInformation:\n      required:\n        - paging\n      properties:\n        paging:\n          $ref: '#/components/schema/PagingInformation.Page'\n    PagingInformation.Page:\n          required:\n            - properties\n            - limit\n          description: The paging information details.\n          properties:\n            total:\n              type: integer\n              description: The total number of resources matching your request.\n            limit:\n              type: integer\n              description: \u003e-\n                The maximum number of resources to return per page, from 0 to\n                200.\n    ResourceLinks:\n      required:\n        - self\n      properties:\n        self:\n          type: string\n          format: uri\n          description: The link to the resource.\n",
			"canonicalURL": "/github.com/d-date/AppStoreConnectAPISpec@42be7c9b3322fcb6dd14f20133f6f7dd2902b560/-/blob/Swagger.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/d-date/AppStoreConnectAPISpec/blob/42be7c9b3322fcb6dd14f20133f6f7dd2902b560/Swagger.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "parse: parse spec: parse components: schemas: \"BetaTesterBuildsLinkagesResponse\": parse schema: property \"meta\": parse schema: resolve \"#/components/schemas/PagingInformation\": parse schema: property \"paging\": parse schema: resolve \"#/components/schema/PagingInformation.Page\": find schema: resolve \"#/components/schema/PagingInformation.Page\": can't find value for \"components/schema/PagingInformation.Page\""
}