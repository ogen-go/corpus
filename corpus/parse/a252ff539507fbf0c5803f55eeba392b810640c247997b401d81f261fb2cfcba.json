{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/openfoodfoundation/openfoodnetwork"
		},
		"file": {
			"name": "swagger.yaml",
			"size": 0,
			"path": "swagger/v1/swagger.yaml",
			"byteSize": 10829,
			"content": "---\nopenapi: 3.0.1\ninfo:\n  title: API V1\n  version: v1\ncomponents:\n  schemas:\n    error_response:\n      type: object\n      properties:\n        errors:\n          type: array\n          items:\n            type: object\n            properties:\n              title:\n                type: string\n              detail:\n                type: string\n              source:\n                type: object\n            required:\n            - detail\n      required:\n      - errors\n    resources:\n      customer:\n        type: object\n        properties:\n          data:\n            type: object\n            properties:\n              id:\n                type: string\n                example: '1'\n              type:\n                type: string\n                example: customer\n              attributes:\n                type: object\n                properties:\n                  id:\n                    type: integer\n                    example: 1\n                  enterprise_id:\n                    type: integer\n                    example: 2\n                  first_name:\n                    type: string\n                    nullable: true\n                    example: Alice\n                  last_name:\n                    type: string\n                    nullable: true\n                    example: Springs\n                  code:\n                    type: string\n                    nullable: true\n                    example: BUYER1\n                  email:\n                    type: string\n                    example: alice@example.com\n                required:\n                - id\n                - enterprise_id\n                - first_name\n                - last_name\n                - code\n                - email\n              relationships:\n                type: object\n                properties:\n                  enterprise:\n                    type: object\n                    properties:\n                      data:\n                        type: object\n                        properties:\n                          id:\n                            type: string\n                          type:\n                            type: string\n                            example: enterprise\n                      links:\n                        type: object\n                        properties:\n                          related:\n                            type: string\n          meta:\n            type: object\n          links:\n            type: object\n        required:\n        - data\n      customers_collection:\n        type: object\n        properties:\n          data:\n            type: array\n            items:\n              type: object\n              properties:\n                id:\n                  type: string\n                  example: '1'\n                type:\n                  type: string\n                  example: customer\n                attributes:\n                  type: object\n                  properties:\n                    id:\n                      type: integer\n                      example: 1\n                    enterprise_id:\n                      type: integer\n                      example: 2\n                    first_name:\n                      type: string\n                      nullable: true\n                      example: Alice\n                    last_name:\n                      type: string\n                      nullable: true\n                      example: Springs\n                    code:\n                      type: string\n                      nullable: true\n                      example: BUYER1\n                    email:\n                      type: string\n                      example: alice@example.com\n                  required:\n                  - id\n                  - enterprise_id\n                  - first_name\n                  - last_name\n                  - code\n                  - email\n                relationships:\n                  type: object\n                  properties:\n                    enterprise:\n                      type: object\n                      properties:\n                        data:\n                          type: object\n                          properties:\n                            id:\n                              type: string\n                            type:\n                              type: string\n                              example: enterprise\n                        links:\n                          type: object\n                          properties:\n                            related:\n                              type: string\n          meta:\n            type: object\n            properties:\n              pagination:\n                type: object\n                properties:\n                  results:\n                    type: integer\n                    example: 250\n                  pages:\n                    type: integer\n                    example: 5\n                  page:\n                    type: integer\n                    example: 2\n                  per_page:\n                    type: integer\n                    example: 50\n            required:\n            - pagination\n          links:\n            type: object\n            properties:\n              self:\n                type: string\n              first:\n                type: string\n              prev:\n                type: string\n                nullable: true\n              next:\n                type: string\n                nullable: true\n              last:\n                type: string\n        required:\n        - data\n        - meta\n        - links\n  securitySchemas:\n    api_key_header:\n      type: apiKey\n      name: X-Api-Token\n      in: header\n      description: Authenticates via API key passed in specified header\n    api_key_param:\n      type: apiKey\n      name: token\n      in: query\n      description: Authenticates via API key passed in specified query param\n    session:\n      type: http\n      name: _ofn_session\n      in: cookie\n      description: Authenticates using the current user's session if logged in\npaths:\n  \"/api/v1/customers\":\n    get:\n      summary: List customers\n      tags:\n      - Customers\n      parameters:\n      - name: enterprise_id\n        in: query\n        schema:\n          type: string\n      responses:\n        '200':\n          description: Customers list\n          content:\n            application/json:\n              schema:\n                \"$ref\": \"#/components/schemas/resources/customers_collection\"\n    post:\n      summary: Create customer\n      tags:\n      - Customers\n      parameters: []\n      responses:\n        '201':\n          description: Customer created\n          content:\n            application/json:\n              schema:\n                \"$ref\": \"#/components/schemas/resources/customer\"\n        '422':\n          description: Unprocessable entity\n          content:\n            application/json:\n              schema:\n                \"$ref\": \"#/components/schemas/error_response\"\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                enterprise_id:\n                  type: integer\n                  example: 2\n                first_name:\n                  type: string\n                  nullable: true\n                  example: Alice\n                last_name:\n                  type: string\n                  nullable: true\n                  example: Springs\n                code:\n                  type: string\n                  nullable: true\n                  example: BUYER1\n                email:\n                  type: string\n                  example: alice@example.com\n              required:\n              - enterprise_id\n              - email\n  \"/api/v1/customers/{id}\":\n    get:\n      summary: Show customer\n      tags:\n      - Customers\n      parameters:\n      - name: id\n        in: path\n        required: true\n        schema:\n          type: string\n      responses:\n        '200':\n          description: Customer\n          content:\n            application/json:\n              schema:\n                \"$ref\": \"#/components/schemas/resources/customer\"\n        '404':\n          description: Not found\n          content:\n            application/json:\n              schema:\n                \"$ref\": \"#/components/schemas/error_response\"\n        '401':\n          description: Unauthorized\n          content:\n            application/json:\n              schema:\n                \"$ref\": \"#/components/schemas/error_response\"\n    put:\n      summary: Update customer\n      tags:\n      - Customers\n      parameters:\n      - name: id\n        in: path\n        required: true\n        schema:\n          type: string\n      responses:\n        '200':\n          description: Customer updated\n          content:\n            application/json:\n              schema:\n                \"$ref\": \"#/components/schemas/resources/customer\"\n        '422':\n          description: Unprocessable entity\n          content:\n            application/json:\n              schema:\n                \"$ref\": \"#/components/schemas/error_response\"\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                id:\n                  type: integer\n                  example: 1\n                enterprise_id:\n                  type: integer\n                  example: 2\n                first_name:\n                  type: string\n                  nullable: true\n                  example: Alice\n                last_name:\n                  type: string\n                  nullable: true\n                  example: Springs\n                code:\n                  type: string\n                  nullable: true\n                  example: BUYER1\n                email:\n                  type: string\n                  example: alice@example.com\n              required:\n              - enterprise_id\n              - email\n    delete:\n      summary: Delete customer\n      tags:\n      - Customers\n      parameters:\n      - name: id\n        in: path\n        required: true\n        schema:\n          type: string\n      responses:\n        '200':\n          description: Customer deleted\n          content:\n            application/json:\n              schema:\n                \"$ref\": \"#/components/schemas/resources/customer\"\n  \"/api/v1/enterprises/{enterprise_id}/customers\":\n    get:\n      summary: List customers of an enterprise\n      tags:\n      - Customers\n      - Enterprises\n      parameters:\n      - name: enterprise_id\n        in: path\n        required: true\n        schema:\n          type: string\n      responses:\n        '200':\n          description: Customers list\n          content:\n            application/json:\n              schema:\n                \"$ref\": \"#/components/schemas/resources/customers_collection\"\nservers:\n- url: \"/\"\n"
		}
	},
	"Error": "parse: parse spec: paths: /api/v1/customers/{id}: get: operation \"\": responses: 200: content: \"application/json\": schema: parse schema: reference \"#/components/schemas/resources/customer\": resolve reference \"#/components/schemas/resources/customer\": schema not found"
}