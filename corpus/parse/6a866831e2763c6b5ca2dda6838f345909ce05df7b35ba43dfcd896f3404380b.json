{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/prusa3d/Prusa-Link-Web"
		},
		"file": {
			"name": "openapi-legacy.yaml",
			"size": 0,
			"path": "spec/openapi-legacy.yaml",
			"byteSize": 68543,
			"content": "openapi: 3.0.1\ninfo:\n  title: Prusa Link Web\n  description:\n    This is a printer connect webservice. It is compatible with another 3D\n    printer services, so many applications which use this service\n  contact:\n    email: developer@prusa3d.cz\n  license:\n    name: Apache 2.0\n    url: http://www.apache.org/licenses/LICENSE-2.0.html\n  version: 2.0.0\nexternalDocs:\n  description: Find out more about API\n  url: http://connect.prusa3d.cz\nsecurity:\n  - ApiKeyAuth: [developer]\npaths:\n  /api/version:\n    get:\n      summary: version informations\n      parameters:\n        - in: query\n          name: system\n          required: false\n          description: If system versions must be returned.\n          schema:\n            type: boolean\n            default: false\n      responses:\n        200:\n          description: OK\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  api:\n                    type: string\n                    example: \"0.1\"\n                  server:\n                    type: string\n                    example: \"1.1.0\"\n                    description: \"Firmware on Prusa-Link version\"\n                  original:\n                    type: string\n                    example: \"PrusaLink I3MK3S\"\n                  text:\n                    type: string\n                    example: \"OctoPrint 1.1.0\"\n                  hostname:\n                    type: string\n                    example: \"prusa-sl1\"\n                  firmware:\n                    type: string\n                    description: \"Firmaware version\"\n                    example: \"3.10.0\"\n                  sdk:\n                    type: string\n                    example: \"0.2.0\"\n                  # platform dependent\n                  python:\n                    type: array\n                    items:\n                      type: object\n                      properties:\n                        name:\n                          type: string\n                          example: \"urllib3\"\n                        version:\n                          type: string\n                          example: \"1.26.1\"\n                        path:\n                          type: string\n                          example: \"/usr/lib/python3/dist-packages\"\n                  # platform dependent\n                  system:\n                    type: object\n                    properties:\n                      python:\n                        type: string\n                      DESCRIPTION:\n                        type: string\n                      ID:\n                        type: string\n                        example: \"Raspbian\"\n                      OS:\n                        type: string\n                        example: \"GNU/Linux\"\n  /api/connection:\n    get:\n      summary: Retrieve a mock for current connection settings.\n      responses:\n        200:\n          description: OK\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  current:\n                    $ref: \"#/components/schemas/ConnCurrent\"\n                  options:\n                    $ref: \"#/components/schemas/ConnOptions\"\n                  connect:\n                    $ref: \"#/components/schemas/ConnConfig\"\n                  states:\n                    $ref: \"#/components/schemas/ConnStates\"\n\n        403:\n          $ref: \"#/components/responses/Unauthorized\"\n    post:\n      summary: Issue a connection command\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                # platform dependent\n                command:\n                  type: string\n                  default: connect\n                # platform dependent\n                baudrate:\n                  type: integer\n                  default: 115200\n                # platform dependent\n                port:\n                  type: string\n                  default: VIRTUAL\n                # platform dependent\n                printerProfile:\n                  type: string\n                  default: _default\n                # platform dependent\n                connect:\n                  type: object\n                  properties:\n                    hostname:\n                      type: string\n                      example: \"connect.prusa3d.com\"\n                    port:\n                      type: integer\n                      default: 0\n                    tls:\n                      type: boolean\n                      default: true\n      responses:\n        # Return 200 only, if connect is filled\n        200:\n          description: OK\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  url:\n                    type: string\n                    example: \"http://dev.connect.prusa:8080/add-printer/connect/1.3.1/AHWAXF7JZI/Shelf/Home\"\n\n        204:\n          description: No Content\n                       No Error\n        403:\n          $ref: \"#/components/responses/Unauthorized\"\n\n  # platform dependent\n  /api/printerprofiles:\n    get:\n      summary: Retrive a mock of octoprinter printer profile\n      responses:\n        200:\n          description: OK\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  profiles:\n                    $ref: \"#/components/schemas/Profiles\"\n        403:\n          $ref: \"#/components/responses/Unauthorized\"\n\n  /api/printer:\n    get:\n      summary: Retrive the current printer state\n      parameters:\n        - in: query\n          name: exclude\n          description: A list of attributes to not return in the response.\n          schema:\n            type: array\n            items:\n              type: string\n      responses:\n        200:\n          description: OK\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  temperature:\n                    $ref: \"#/components/schemas/TemperatureState\"\n                  sd:\n                    $ref: \"#/components/schemas/SDState\"\n                  state:\n                    $ref: \"#/components/schemas/PrinterState\"\n                  telemetry:\n                    oneOf:\n                      - $ref: \"#/components/schemas/TelemetryFDM\"\n                      - $ref: \"#/components/schemas/TelemetryMini\"\n                      - $ref: \"#/components/schemas/TelemetrySL1\"\n        403:\n          $ref: \"#/components/responses/Unauthorized\"\n\n  /api/printer/sd:\n    get:\n      summary: Retrieves the current state of the printerâ€™s SD card.\n      responses:\n        200:\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/SDState\"\n        403:\n          $ref: \"#/components/responses/Unauthorized\"\n\n  /api/printer/printhead:\n    post:\n      summary: Control printhead movement in XYZ axes\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                jog:\n                  type: object\n                  properties:\n                    command:\n                      type: string\n                      example: \"jog\"\n                    x:\n                      type: number\n                      example: 10\n                    y:\n                      type: number\n                      example: -5\n                    z:\n                      type: number\n                      example: 0.02\n                home:\n                  type: object\n                  properties:\n                    command:\n                      type: string\n                      example: \"home\"\n                    axes:\n                      type: array\n                      items:\n                        type: string\n                        example: \"X\"\n                speed:\n                  type: object\n                  properties:\n                    command:\n                      type: string\n                      example: \"speed\"\n                    factor:\n                      type: number\n                      example: 105\n                feedrate:\n                  type: object\n                  properties:\n                    command:\n                      type: string\n                      example: \"feedrate\"\n                    factor:\n                      type: number\n                      example: 105\n                disable_steppers:\n                  type: object\n                  properties:\n                    command:\n                      type: string\n                      example: \"disable_steppers\"\n\n      responses:\n        204:\n          description: No Content\n                       No Error\n        400:\n          $ref: \"#/components/responses/BadRequest\"\n        409:\n          $ref: \"#/components/responses/Conflict\"\n\n  /api/printer/tool:\n    post:\n      summary: Control extruder\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                target:\n                  type: object\n                  properties:\n                    command:\n                      type: string\n                      example: \"target\"\n                    targets:\n                      type: object\n                      properties:\n                        tool0:\n                          type: number\n                          example: 220\n                offset:\n                  type: object\n                  properties:\n                    command:\n                      type: string\n                      example: \"offset\"\n                    offsets:\n                      type: object\n                      properties:\n                        tool0:\n                          type: number\n                          example: 10\n                select:\n                  type: object\n                  properties:\n                    command:\n                      type: string\n                      example: \"select\"\n                    tool:\n                      type: string\n                      example: \"tool0\"\n                extrude:\n                  type: object\n                  properties:\n                    command:\n                      type: string\n                      example: \"extrude\"\n                    amount:\n                      type: number\n                      example: 5\n                retract:\n                  type: object\n                  properties:\n                    command:\n                      type: string\n                      example: \"extrude\"\n                    amount:\n                      type: number\n                      example: -3\n                flowrate:\n                  type: object\n                  properties:\n                    command:\n                      type: string\n                      example: \"flowrate\"\n                    amount:\n                      type: number\n                      example: 95\n      responses:\n        204:\n          description: No Content\n                       No Error\n        400:\n          $ref: \"#/components/responses/BadRequest\"\n        409:\n          $ref: \"#/components/responses/Conflict\"\n\n  /api/printer/bed:\n    post:\n      summary: Control bed temperature\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                command:\n                  type: string\n                  example: \"target\"\n                target:\n                  type: number\n                  example: 75\n\n      responses:\n        204:\n          description: No Content\n                       No Error\n        400:\n          $ref: \"#/components/responses/BadRequest\"\n        409:\n          $ref: \"#/components/responses/Conflict\"\n  # MK3\n  # - not supporting this endpoint\n\n  # MINI\n  # - will probably not support this endpoint.\n  # - On error sends plaintext error description in response body\n  # - On error possibly sends Content-Location header with URL to help.prusa3d.com.\n  # - PCL page /error will be ommited\n\n  # SL1\n  # - supports this endpoint\n  # - Response is dependent on Accept header in request\n  # - If no Accept header is present:\n  #   - sends plaintext error description in response body (compatibility with older slicer)\n  #   - sends Content-Location header with URL to \u003cPCL IP\u003e/error (in the future it may send URL to hlep.prusa3d.com)\n  # - if Accept header is present (currently supports only Accept: application/json):\n  #   - sends JSON with same content as this /api/printer/error endpoint (code, title, text, url)\n  #    sends Content-Location header with URL to \u003cPCL IP\u003e/error (in the future it may send URL to hlep.prusa3d.com)\n  /api/printer/error:\n    get:\n      summary: Retrive the error number and text. Not compatible with OctoPrint.\n      responses:\n        200:\n          description: Custom endpoint to get error details. Client can see if printer is in error state by polling /api/printer\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n        403:\n          $ref: \"#/components/responses/Unauthorized\"\n\n  /api/job: # this should be used instead of /files/preview to determine if project was selected. If \"file\" object is not null, project was previously selected\n    get:\n      summary: Retrieve information about the current job (if there is one).\n      responses:\n        200:\n          description: OK\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  job:\n                    $ref: \"#/components/schemas/Job\"\n                  progress:\n                    $ref: \"#/components/schemas/Progress\"\n                  state:\n                    $ref: \"#/components/schemas/State\"\n        403:\n          $ref: \"#/components/responses/Unauthorized\"\n        409:\n          $ref: \"#/components/responses/Conflict\"\n          description: File not found or wrong format.\n    post:\n      summary: Issue a job command.\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                command:\n                  type: string\n                  enum: [\"start\", \"restart\", \"pause\", \"cancel\"]\n                  default: start\n                action:\n                  type: string\n                  enum: [pause, resume]\n                  default: resume\n      responses:\n        204:\n          description: No Content\n                       No Error\n        403:\n          $ref: \"#/components/responses/Unauthorized\"\n        409:\n          $ref: \"#/components/responses/Conflict\"\n          description: If not is project, file not found or printer is printing.\n        501:\n          $ref: \"#/components/responses/NotImplemented\"\n          description: Unsupported command.\n\n  /api/system/commands:\n    get:\n      summary: Retrieves all configured system commands.\n      responses:\n        200:\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Commands\"\n        403:\n          $ref: \"#/components/responses/Unauthorized\"\n\n  /api/system/commands/core/reboot:\n    post:\n      summary: Execute system reboot.\n      responses:\n        200:\n          description: OK\n          content:\n            application/json:\n              schema:\n                type: object\n        400:\n          description: Bad request\n          content:\n            application/json:\n              schema:\n                type: object\n        403:\n          $ref: \"#/components/responses/Unauthorized\"\n\n\n  /api/system/commands/core/restart:\n    post:\n      summary: Trigger restarting of Prusa-Link.\n      responses:\n        200:\n          description: OK\n          content:\n            application/json:\n              schema:\n                type: object\n        400:\n          description: Bad request\n          content:\n            application/json:\n              schema:\n                type: object\n        403:\n          $ref: \"#/components/responses/Unauthorized\"\n\n\n  /api/system/commands/core/shutdown:\n    post:\n      summary: Shutdown whole system.\n      responses:\n        200:\n          description: OK\n          content:\n            application/json:\n              schema:\n                type: object\n        400:\n          description: Bad request\n          content:\n            application/json:\n              schema:\n                type: object\n        403:\n          $ref: \"#/components/responses/Unauthorized\"\n\n\n  /api/system/commands/custom/changeexposure:\n    post:\n      summary: Change the exposure times\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                exposureTime: # [ms]\n                  type: integer\n                  example: 6000\n                  nullable: true\n                exposureTimeFirst: # [ms]\n                  type: number\n                  example: 30000\n                  nullable: true\n                exposureTimeCalibration: # [ms]\n                  type: number\n                  example: 30000\n                  nullable: true\n                exposureUserProfile: # [-]\n                  type: number\n                  example: 1\n                  nullable: true\n      responses:\n        204:\n          description: No Content\n                       No Error\n\n  /api/system/commands/custom/resinrefill:\n    post:\n      summary: Update remaining resing in the printer.\n      responses:\n        204:\n          description: No Content\n                       No Error\n\n  /api/access/users:\n    get:\n      summary: Retrieves a list of all registered users in OctoPrint. Currently just a mock.\n      responses:\n        200:\n          description: OK\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  users:\n                    type: array\n                    items:\n                      $ref: \"#/components/schemas/Users\"\n        403:\n          $ref: \"#/components/responses/Unauthorized\"\n\n  /api/settings:\n    get:\n      summary: Returns printer settings info\n      responses:\n        200:\n          description: OK\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  api-key:\n                    type: string\n                  printer:\n                    type: object\n                    properties:\n                      name:\n                        type: string\n                      location:\n                        type: string\n                      farm_mode:\n                        type: boolean\n    post:\n      summary: Sets new printer and/or user settings and writes it to ini file\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                  printer:\n                    type: object\n                    properties:\n                      name:\n                        type: string\n                      location:\n                        type: string\n                  user:\n                    type: object\n                    properties:\n                      password:\n                        type: string\n                      username:\n                        type: string\n                      new_password:\n                        type: string\n                      new_repassword:\n                        type: string\n      responses:\n        200:\n          description: OK\n        400:\n          description: Bad Request\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  errors:\n                    type: object\n                    properties:\n                      printer:\n                        type: object\n                        properties:\n                          missing_credentials:\n                            type: boolean\n                      user:\n                        type: object\n                        properties:\n                          username:\n                            type: boolean\n                          password:\n                            type: boolean\n                          repassword:\n                            type: boolean\n                          old_digest:\n                            type: boolean\n                          same_digest:\n                            type: boolean\n\n  /api/settings/apikey:\n    get:\n      summary: Regenerate api key and save it to settings and config file\n      responses:\n        200:\n          description: OK\n          content:\n            application/json:\n              schema:\n                type: object\n\n  /api/settings/sn:\n    post:\n      summary: If printer is in SN error, user can insert new SN\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                serial:\n                  type: string\n                  example: \"CZPX4242X042XC42042\"\n      responses:\n        200:\n          description: OK\n        400:\n          $ref: \"#/components/responses/BadRequest\"\n        409:\n          $ref: \"#/components/responses/Conflict\"\n        507:\n          description: Insufficient Storage\n\n  /api/files/{target}/{path}:\n    parameters:\n      - in: path\n        name: target\n        required: true\n        description: The target location of the file (local, sdcard).\n        schema:\n          type: string\n          default: local\n          enum:\n            - local\n            - sdcard\n      - in: path\n        name: path\n        required: true\n        description: The path to the file.\n        schema:\n          type: string\n    get:\n      summary: Returns metadata from cache file\n      responses:\n        200:\n          description: OK\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  origin:\n                    type: string\n                    example: \"local\"\n                  name:\n                    type: string\n                    example: \"castle.gcode\"\n                  path:\n                    type: string\n                    example: \"/Prusa Link gcodes/castle.gcode\"\n                  type:\n                    type: string\n                    example: \"machinecode\"\n                  typePath:\n                    type: array\n                    items:\n                      type: string\n                      example: [\"machinecode\", \"gcode\"]\n                  refs:\n                    type: object\n                    properties:\n                      resource:\n                        type: string\n                        example: \"/api/files/local/Prusa Link gcodes/castle.gcode\"\n                      download:\n                        type: string\n                        example: \"/api/files/local/Prusa Link gcodes/castle.gcode/raw\"\n                      thumbnailSmall:\n                        type: string\n                        example: null\n                      thumbnailBig:\n                        type: string\n                        example: \"/api/thumbnails/Prusa Link gcodes/castle.gcode.orig.png\"\n                  size:\n                    type: integer\n                    example: 177514\n                  date:\n                    type: integer\n                    example: 1648038843\n                  gcodeAnalysis:\n                    type: object\n                    properties:\n                      estimatedPrintTime:\n                        type: integer\n                        example: 207\n                      material:\n                        type: string\n                        example: \"PLA\"\n                      layerHeight:\n                        type: number\n                        example: 0.3\n        404:\n          $ref: \"#/components/responses/NotFound\"\n    post:\n      summary: Start print if no print job is running.\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                command:\n                  type: string\n                  example: \"select\"\n                print:\n                  type: boolean\n                  example: true\n              required:\n                - select\n      responses:\n        204:\n          description: No Content\n                       No Error\n        400:\n          $ref: \"#/components/responses/BadRequest\"\n        409:\n          $ref: \"#/components/responses/Conflict\"\n    delete:\n      summary: Terminate the current file download process.\n      responses:\n        204:\n          description: No Content\n                       No Error\n        409:\n          $ref: \"#/components/responses/Conflict\"\n\n  /api/files/{target}/{path}/raw:\n      parameters:\n        - in: path\n          name: target\n          required: true\n          description: The target location from which to download the file (local, sdcard).\n          schema:\n            type: string\n            default: local\n            enum:\n              - local\n              - sdcard\n        - in: path\n          name: path\n          required: true\n          description: The path to the file.\n          schema:\n            type: string\n      get:\n        summary: Downloads intended gcode\n        responses:\n          200:\n            description: OK\n            content:\n              application/octet-stream:\n                schema:\n                  type: string\n                  format: binary\n          404:\n            $ref: \"#/components/responses/NotFound\"\n\n  /api/downloads/{target}/{filename}:\n    parameters:\n      - in: path\n        name: target\n        required: true\n        description: The target location to which to download the file (local, sdcard).\n        schema:\n          type: string\n          default: local\n          enum:\n            - local\n            - sdcard\n      - in: path\n        name: filename\n        required: true\n        description: The path within the location to download the file.\n        schema:\n          type: string\n    get:\n      summary: Download a file.\n      responses:\n        200:\n          description: OK\n          content:\n            application/octet-stream:\n              schema:\n                type: string\n                format: binary\n        403:\n          $ref: \"#/components/responses/Unauthorized\"\n        404:\n          $ref: \"#/components/responses/NotFound\"\n        415:\n          $ref: \"#/components/responses/UnsupportedMediaType\"\n\n  # Ony for compatibility, use /api/transfer where possible\n  /api/download:\n    get:\n      summary: Get information about the file currently being transferred.\n      responses:\n        200:\n          description: OK\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  type:\n                    type: string\n                    example: \"FROM_WEB\"\n                  url:\n                    type: string\n                    example: \"https://www.prusaprinters.org/castle.gcode\"\n                  target:\n                    type: string\n                    example: \"local\"\n                  destination:\n                    type: string\n                    example: \"/Prusa Link gcodes/castle.gcode\"\n                  path:\n                    type: string\n                    example: \"/Prusa Link gcodes/castle.gcode\"\n                  size:\n                    type: string\n                    example: \"68073825\"\n                  start_time:\n                    type: string\n                    example: \"1620292282\"\n                  progress:\n                    type: string\n                    example: \"0.95\"\n                  remaining_time:\n                    type: string\n                    example: \"281.92677480085825\"\n                  to_select:\n                    type: boolean\n                  to_print:\n                    type: boolean\n        204:\n          description: No Content\n                       No Error\n        403:\n          $ref: \"#/components/responses/Unauthorized\"\n    delete:\n      summary: Terminate the current file download process.\n      responses:\n        204:\n          description: No Content\n                       No Error\n\n  /api/transfer:\n    get:\n      summary: Get information about the file currently being transferred.\n      responses:\n        200:\n          description: OK\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  type:\n                    type: string\n                    example: \"FROM_WEB\"\n                  url:\n                    type: string\n                    example: \"https://www.prusaprinters.org/castle.gcode\"\n                  target:\n                    type: string\n                    example: \"local\"\n                  destination:\n                    type: string\n                    example: \"/Prusa Link gcodes/castle.gcode\"\n                  path:\n                    type: string\n                    example: \"/Prusa Link gcodes/castle.gcode\"\n                  size:\n                    type: string\n                    example: \"68073825\"\n                  start_time:\n                    type: string\n                    example: \"1620292282\"\n                  progress:\n                    type: string\n                    example: \"0.95\"\n                  remaining_time:\n                    type: string\n                    example: \"281.92677480085825\"\n                  to_select:\n                    type: boolean\n                  to_print:\n                    type: boolean\n        204:\n          description: No Content\n                       No Error\n        403:\n          $ref: \"#/components/responses/Unauthorized\"\n    delete:\n      summary: Terminate the current file download process.\n      responses:\n        204:\n          description: No Content\n                       No Error\n\n  /api/modify/{target}:\n    parameters:\n      - in: path\n        name: target\n        required: true\n        description: The target location to which to move the file (local, sdcard).\n        schema:\n          type: string\n          default: local\n          enum:\n            - local\n            - sdcard\n    post:\n      summary: Move file to different folder or/and rename it.\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                source:\n                  type: string\n                destination:\n                  type: string\n              required:\n                - source\n                - destination\n      responses:\n        201:\n          description: Created\n        400:\n          $ref: \"#/components/responses/BadRequest\"\n        403:\n          $ref: \"#/components/responses/Unauthorized\"\n        404:\n          $ref: \"#/components/responses/NotFound\"\n        409:\n          $ref: \"#/components/responses/Conflict\"\n\n  /api/folder/{target}/{path}:\n    parameters:\n      - in: path\n        name: target\n        required: true\n        description: The target location where to create/delete the folder (local, sdcard).\n        schema:\n          type: string\n          default: local\n          enum:\n            - local\n            - sdcard\n      - in: path\n        name: path\n        required: true\n        description: The path to the folder.\n        schema:\n          type: string\n          example: \"archived_gcodes\"\n    post:\n      summary: Create a new folder.\n      responses:\n        201:\n          description: Created\n        409:\n          $ref: \"#/components/responses/Conflict\"\n    delete:\n      summary: Delete a folder.\n      responses:\n        200:\n          description: OK\n        409:\n          $ref: \"#/components/responses/Conflict\"\n\n  /api/download/{target}:\n    parameters:\n      - in: path\n        name: target\n        required: true\n        description: The target location to which to download the file (local, sdcard).\n        schema:\n          type: string\n          default: local\n          enum:\n            - local\n            - sdcard\n    post:\n      summary: Download the file from url to the destination.\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                  url:\n                    type: string\n                  destination:\n                    type: string\n                  to_select:\n                    type: boolean\n                    default: false\n                  to_print:\n                    type: boolean\n                    default: false\n              required:\n                - url\n                - destination\n      responses:\n        201:\n          description: Created\n        403:\n          $ref: \"#/components/responses/Unauthorized\"\n        409:\n          $ref: \"#/components/responses/Conflict\"\n          description: Another file is being downloaded or same file is currently being printed.\n\n  /api/files:\n    get:\n      summary: Retrieve all filesâ€™ and foldersâ€™ information.\n      parameters:\n        - in: header\n          name: If-None-Match\n          description: ETag\n          schema:\n            type: string\n            default: none\n        - in: query\n          name: recursive\n          schema:\n            type: boolean\n            default: false\n\n      responses:\n        200:\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/AllFilesInfo\"\n          headers:\n            ETag:\n              schema:\n                type: string\n        403:\n          $ref: \"#/components/responses/Unauthorized\"\n\n  /api/files/path/{path}:\n    get:\n      summary: Retrieve filesâ€™ and foldersâ€™ information from specific location.\n      parameters:\n        - in: header\n          name: If-None-Match\n          description: ETag\n          schema:\n            type: string\n            default: none\n        - in: query\n          name: recursive\n          schema:\n            type: boolean\n            default: false\n        - in: path\n          name: target\n          required: true\n          description: Specific location.\n          schema:\n            type: string\n            default: local\n            enum:\n              - local\n              - sdcard\n      responses:\n        200:\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/AllFilesInfo\"\n          headers:\n            ETag:\n              schema:\n                type: string\n        403:\n          $ref: \"#/components/responses/Unauthorized\"\n\n  /api/files/{target}:\n    parameters:\n      - in: path\n        name: target\n        required: true\n        description: The target location to which to upload the file (local, sdcard).\n        schema:\n          type: string\n          default: local\n          enum:\n            - local\n            - sdcard\n    get:\n      summary: Retrieve all filesâ€™ and foldersâ€™ information for the target location.\n      parameters:\n        - in: header\n          name: If-None-Match\n          description: ETag\n          schema:\n            type: string\n            default: none\n          required: false\n        - in: query\n          name: recursive\n          schema:\n            type: boolean\n            default: false\n          required: false\n      responses:\n        200:\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/AllFilesInfo\"\n          headers:\n            ETag:\n              schema:\n                type: string\n        403:\n          $ref: \"#/components/responses/Unauthorized\"\n        404:\n          $ref: \"#/components/responses/NotFound\"\n    post:\n      summary: Upload file or create folder.\n      requestBody:\n        content:\n          multipart/form-data:\n            schema:\n              oneOf:\n                - $ref: \"#/components/schemas/UploadFile\"\n                - $ref: \"#/components/schemas/CreateFolder\"\n      responses:\n        201:\n          description: No error\n          content:\n            application/json:\n              schema:\n                oneOf:\n                  - $ref: \"#/components/schemas/FileUploaded\"\n                  - $ref: \"#/components/schemas/FolderCreated\"\n        400:\n          $ref: \"#/components/responses/BadRequest\"\n          description: Could not create folder or file not found.\n        403:\n          $ref: \"#/components/responses/Unauthorized\"\n        409:\n          $ref: \"#/components/responses/Conflict\"\n          description: File already exist.\n        415:\n          $ref: \"#/components/responses/UnsupportedMediaType\"\n        500:\n          $ref: \"#/components/responses/InternalServerError\"\n          description: File is too big.\n\n  /api/files/{target}/{filename}:\n    parameters:\n      - in: path\n        name: target\n        required: true\n        description: The target location to which to upload the file (local, sdcard).\n        schema:\n          type: string\n          default: local\n          enum:\n            - local\n            - sdcard\n      - in: path\n        name: filename\n        required: true\n        description: The path within the location to the file or folder.\n        schema:\n          type: string\n          default: example.sl1\n    get:\n      summary: Retrieve a specific fileâ€™s or folderâ€™s information.\n      parameters:\n        - in: header\n          name: If-None-Match\n          description: ETag\n          schema:\n            type: string\n            default: none\n          required: false\n        - in: query\n          name: recursive\n          schema:\n            type: boolean\n            default: false\n          required: false\n      responses:\n        200:\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/FileOrFolderInfo\"\n          headers:\n            ETag:\n              schema:\n                type: string\n        304:\n          $ref: \"#/components/responses/NotModified\"\n        403:\n          $ref: \"#/components/responses/Unauthorized\"\n        404:\n          $ref: \"#/components/responses/NotFound\"\n    post:\n      summary: Issue a file command to an existing file.\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/FileCommand\"\n      responses:\n        204:\n          description: No Content\n                       No Error\n        400:\n          $ref: \"#/components/responses/BadRequest\"\n          description: Mandatory parameter is missing.\n        403:\n          $ref: \"#/components/responses/Unauthorized\"\n        404:\n          $ref: \"#/components/responses/NotFound\"\n        409:\n          $ref: \"#/components/responses/Conflict\"\n          description: If the file is currently being printed.\n        415:\n          $ref: \"#/components/responses/UnsupportedMediaType\"\n        501:\n          $ref: \"#/components/responses/NotImplemented\"\n          description: Unsupported command.\n    delete:\n      summary: Delete a file or folder.\n      responses:\n        204:\n          description: No Content\n                       No Error\n        403:\n          $ref: \"#/components/responses/Unauthorized\"\n        404:\n          $ref: \"#/components/responses/NotFound\"\n          description: If location is neither local nor sdcard or the requested file was not found\n        409:\n          $ref: \"#/components/responses/Conflict\"\n          description: If the file to be deleted is currently being printed\n\n  /api/thumbnails/{path}.orig.png:\n    parameters:\n      - in: path\n        name: path\n        required: true\n        description: The path to the g-code file.\n        schema:\n          type: string\n          example: \"Prusa Link gcodes/castle.gcode\"\n    get:\n      summary: Return g-code file model preview.\n      responses:\n        200:\n          description: OK\n          content:\n            application/octet-stream:\n              schema:\n                type: string\n                format: binary\n        404:\n          $ref: \"#/components/responses/NotFound\"\n\n  /api/logs:\n    get:\n      summary: Return available logs\n      responses:\n        200:\n          description: OK\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  files:\n                    type: array\n                    items:\n                      type: object\n                      properties:\n                        name:\n                          type: string\n                          description: File name\n                          example: system.log\n                        date:\n                          type: integer\n                          description: Last modified timestamp\n                        size:\n                          type: integer\n                        refs:\n                          type: object\n                          properties:\n                            download:\n                              type: string\n                              description: The download URL for the log file\n\n  /api/logs/{filename}:\n    parameters:\n      - in: path\n        name: filename\n        required: true\n        description: The name of the log\n        schema:\n          type: string\n          example: system.log\n    get:\n      summary: Return log content\n      responses:\n        200:\n          description: OK\n          content:\n            text/plain:\n              schema:\n                type: string\n        404:\n          $ref: \"#/components/responses/NotFound\"\n\ncomponents:\n  schemas:\n    ConnCurrent:\n      type: object\n      properties:\n        baudrate:\n          type: integer\n          example: 115200\n          nullable: true\n        port:\n          type: string\n          example: VIRTUAL\n          nullable: true\n        printerProfile:\n          type: string\n          example: _default\n        state:\n          $ref: \"#/components/schemas/State\"\n\n    ConnOptions:\n      type: object\n      properties:\n        ports:\n          type: array\n          items:\n            type: string\n          example: [\"VIRTUAL\"]\n        baudrates:\n          type: array\n          items:\n            type: integer\n          example: [115200]\n        printerProfiles:\n          type: array\n          items:\n            type: object\n            properties:\n              id:\n                type: string\n                example: _default\n              name:\n                type: string\n                example: Prusa SL1\n\n    ConnConfig:\n      type: object\n      properties:\n          hostname:\n            type: string\n            example: \"connect.prusa3d.com\"\n          port:\n            type: integer\n            default: 0\n          tls:\n            type: boolean\n            default: true\n          registration:\n            type: string\n            example: \"IN_PROGRESS\"\n          code:\n            type: string\n            example: \"3Y2K12SQ42\"\n\n    ConnStates:\n      type: object\n      properties:\n        printer:\n          type: object\n          properties:\n            ok:\n              type: boolean\n              example: false\n            message:\n              type: string\n              example: \"Serial port cannot be obtained\"\n        connect:\n          type: object\n          properties:\n            ok:\n              type: boolean\n              nullable: true\n              example: true\n            message:\n              type: string\n              example: \"OK\"\n\n    Commands:\n      type: object\n      properties:\n        core:\n          type: array\n          example: []\n          items:\n            type: object\n            nullable: true\n        custom:\n          oneOf:\n            #- $ref: \"#/components/schemas/CommandsFDM\"\n            - $ref: \"#/components/schemas/CommandsSLA\"\n\n    #CommandsFDM:\n\n    CommandsSLA:\n      type: array\n      items:\n        $ref: \"#/components/schemas/SystemCommand\"\n\n    SystemCommand:\n      type: object\n      properties:\n        action:\n          type: string\n        name:\n          type: string\n        confirm:\n          type: string\n          nullable: true\n        source:\n          type: string\n        resource:\n          type: string\n      default: [\n        {\n          \"action\": \"resinrefill\", # Updates remaining resin in the printer\n          \"name\": \"Refill resin\",\n          \"source\": \"custom\",\n          \"resource\": \"http://localhost/api/system/commands/custom/resinrefill\"\n        },\n        {\n          \"action\": \"changeexposure\",\n          \"name\": \"Change exposure times\",\n          \"source\": \"custom\",\n          \"resource\": \"http://localhost/api/system/commands/custom/changeexposure\"\n        },\n      ]\n\n    Profiles:\n      type: object\n      properties:\n        _default:\n          type: object\n          properties:\n            id:\n              type: string\n              example: _default\n            name:\n              type: string\n              example: Original Prusa SL1\n            model:\n              type: string\n              example: Original Prusa SL1\n            color:\n              type: string\n              example: default\n            current:\n              type: boolean\n              example: true\n            default:\n              type: boolean\n              example: true\n            heatedBed: # Original Prusa SL1 uses for CPU temperature\n              type: boolean\n              example: true\n            heatedChamber: # Original Prusa SL1 uses for ambient temp\n              type: boolean\n              example: true\n            extruder: # Original Prusa SL1 uses for UV LED temp\n              type: object\n              properties:\n                count:\n                  type: integer\n                  description: Number of print heads\n                  example: 1\n                offsets:\n                  type: array\n                  items:\n                    type: array\n                    items:\n                      type: number\n                    example: [0.0, 0.0]\n            resource:\n              type: string\n              example: http://localhost/api/printerprofiles/_default\n\n    TemperatureData:\n      type: object\n      properties:\n        actual:\n          type: number\n          description: Current temperature\n        target:\n          type: number\n          description: Target temperature\n          nullable: true\n        # platform dependent\n        offset:\n          type: number\n          nullable: true\n          description: Currenntly configured temperature offset to apply.\n      example:\n        actual: 22.5\n        target: 50.0\n        # platform dependent\n        offset: 1.0\n\n    TemperatureState:\n      type: object\n      properties:\n        tool0:\n          $ref: \"#/components/schemas/TemperatureData\"\n        bed:\n          $ref: \"#/components/schemas/TemperatureData\"\n        # platform dependent\n        chamber:\n          $ref: \"#/components/schemas/TemperatureData\"\n\n    SDState:\n      type: object\n      properties:\n        ready:\n          type: boolean\n          example: false\n\n    PrinterState:\n      type: object\n      properties:\n        text:\n          $ref: \"#/components/schemas/State\"\n        flags:\n          type: object\n          properties:\n            operational:\n              type: boolean\n              example: false\n            paused:\n              type: boolean\n              example: false\n            printing:\n              type: boolean\n              example: true\n            cancelling:\n              type: boolean\n              example: false\n            pausing:\n              type: boolean\n              example: false\n            sdReady:\n              type: boolean\n              example: false\n            error: # this will indicate printer has an error to show in /api/priner/error\n              type: boolean\n              example: false\n            ready:\n              type: boolean\n              example: true\n            closedOrError:\n              type: boolean\n              example: false\n            finished:\n              type: boolean\n              example: true\n            prepared:\n              type: boolean\n              example: true\n            # platform dependent\n            busy:\n              type: boolean\n              example: false\n\n    Job:\n      oneOf:\n        - $ref: \"#/components/schemas/JobFDM\"\n        - $ref: \"#/components/schemas/JobSLA\"\n      type: object\n      properties:\n        estimatedPrintTime:\n          type: integer\n          description: Estimated print time for the file in seconds.\n          nullable: true\n        averagePrintTime:\n          type: integer\n          description: Average print time for the file in seconds\n          nullable: true\n        lastPrintTime:\n          type: integer\n          description: Last print time for the file in seconds\n          nullable: true\n        filament:\n          type: string\n          description: Job filament type\n          nullable: true\n        file:\n          oneOf:\n            - $ref: \"#/components/schemas/JobFileFDM\"\n            - $ref: \"#/components/schemas/JobFileSLA\"\n          type: object\n          properties:\n            name:\n              type: string\n              description: The name of the file without path.\n              example: \"harry_potter_hogwarts_anthony_mohimont.sl1\"\n              nullable: true\n            path:\n              type: string\n              description: The name of the file with path.\n              example: \"internal/examples/harry_potter_hogwarts_anthony_mohimont.sl1\"\n              nullable: true\n            origin:\n              enum: [\"local\", \"sdcard\"]\n              nullable: true\n            date:\n              type: integer\n              description: Unix timestamp.\n              example: 1574175255\n              nullable: true\n            size:\n              type: integer\n              description: The size of the file in bytes.\n              example: 873151\n              nullable: true\n            # platform dependent\n            display:\n              type: string\n              description: The name of the file without path\n              example: \"harry_potter_hogwarts_anthony_mohimont.sl1\"\n              nullable: true\n            # platform dependent\n            refs:\n              type: object\n              properties:\n                resource:\n                  type: string\n                thumbnailBig:\n                  type: string\n                  nullable: true\n        user:\n          type: string\n          example: \"_api\"\n\n    Progress:\n      oneOf:\n        - $ref: \"#/components/schemas/ProgressMK3\"\n        - $ref: \"#/components/schemas/ProgressMini\"\n        - $ref: \"#/components/schemas/ProgressSL1\"\n      type: object\n      properties:\n        completion:\n          type: number\n          description: Percentage of completion of the current job.\n          nullable: true\n          example: 55.6349010\n        filepos:\n          type: integer\n          description: Current position in the file being printed, in bytes from the beginning. Not being used for SL1.\n          nullable: true\n          example: 12345\n        printTime:\n          type: integer\n          description: Time already spent printing in seconds.\n          nullable: true\n          example: 601\n        printTimeLeft:\n          type: integer\n          description: Estimate of time left to print in seconds.\n          nullable: true\n          example: 30495\n\n    ProgressMK3:\n      type: object\n      properties:\n        pos_z_mm:\n          type: number\n        printSpeed:\n          type: integer\n        flow_factor:\n          type: integer\n        completion:\n          type: number\n        filepos:\n          type: integer\n        printTime:\n          type: integer\n        printTimeLeft:\n          type: integer\n        printTimeLeftOrigin:\n          type: string\n\n    ProgressMini:\n      type: object\n      properties:\n        pos_z_mm:\n          type: number\n        printSpeed:\n          type: number\n        flow_factor:\n          type: number\n        filament_status: # shouldn't it be filamentSensor?\n          type: string\n\n    ProgressSL1:\n      type: object\n      properties:\n        currentLayer:\n          type: integer\n          description: Number of current layer being printed.\n          nullable: true\n          example: 42\n\n    Users:\n      type: object\n      properties:\n        active:\n          type: boolean\n          example: true\n        admin:\n          type: boolean\n          example: true\n        apikey:\n          type: string\n          nullable: true\n        name:\n          type: string\n          example: prusa\n        settings:\n          type: object\n          example: null\n        user:\n          type: boolean\n          example: true\n\n    CommonFileInfo:\n      type: object\n      properties:\n        origin:\n          type: string\n          example: local\n        path:\n          type: string\n        display:\n          type: string\n        name:\n          type: string\n        size:\n          type: integer\n          example: 873151\n        type:\n          type: string\n        typePath:\n          type: array\n          items:\n            type: string\n\n    FileInfo:\n      allOf:\n        - $ref: \"#/components/schemas/CommonFileInfo\"\n        - type: object\n      properties:\n        refs:\n          type: object\n          properties:\n            resource:\n              type: string\n            download:\n              type: string\n            thumbnailSmall: # do not send if metadata not ready\n              type: string\n              nullable: true\n            thumbnailBig: # do not send if metadata not ready\n              type: string\n              nullable: true\n        gcodeAnalysis:\n          type: object\n          properties:\n            estimatedPrintTime: # do not send if metadata not ready\n              type: integer # [s]\n              description: estimated print time in [s].\n              nullable: true\n            material: # do not send if metadata not ready\n              type: string\n              description: String with used material. It is not compatible with OctoPrint.\n              nullable: true\n            layerHeight: # do not send if metadata not ready\n              type: number # [mm]\n              description: Layer height of the file in [mm]. It is not compatible with OctoPrint.\n        hash:\n          type: string\n        date:\n          type: integer\n          description: Unix timestamp of last modified date [s]. It is not compatible with OctoPrint.\n      default:\n        origin: local\n        path: internal/examples/harry_potter_hogwarts_a_mohimont.sl1\n        display: harry_potter_hogwarts_a_mohimont.sl1\n        name: harry_potter_hogwarts_a_mohimont.sl1\n        size: 873151\n        date: 1574156567\n        type: machinecode\n        typePath: [machinecode, gcode]\n        hash: 5f972cc1cfb91f91f7c70d0dff6a0462a9de1d41\n        refs:\n          resource: http://localhost/api/files/local/internal/examples/harry_potter_hogwarts_a_mohimont.sl1\n          download: http://localhost/api/downloads/local/internal/examples/harry_potter_hogwarts_a_mohimont.sl1\n          thumbnailSmall: http://localhost/api/thumbnails/tmpy36n51rt/thumbnail/thumbnail400x400.png\n          thumbnailBig: http://localhost/api/thumbnails/tmpy36n51rt/thumbnail/thumbnail800x480.png\n        gcodeAnalysis:\n          estimatedPrintTime: 2445\n          material: \"Prusa Orange Tough\"\n          layerHeight: 0.025\n\n    FolderInfo:\n      allOf:\n        - $ref: \"#/components/schemas/CommonFileInfo\"\n        - type: object\n      properties:\n        refs:\n          type: object\n          properties:\n            resource:\n              type: string\n        children:\n          type: array\n          items:\n            type: object\n      example:\n        origin: local\n        path: internal/examples\n        display: examples\n        name: examples\n        size: 873151\n        type: folder\n        typePath: [folder]\n        refs:\n          resource: http://localhost/api/files/local/internal/examples\n\n    FullFolderInfo:\n      allOf:\n        - $ref: \"#/components/schemas/FolderInfo\"\n        - type: object\n      properties:\n        children:\n          type: array\n          items:\n            oneOf:\n              - $ref: \"#/components/schemas/FileInfo\"\n              - $ref: \"#/components/schemas/FolderInfo\"\n            discriminator:\n              propertyName: type\n\n    FileOrFolderInfo:\n      oneOf:\n        - $ref: \"#/components/schemas/FileInfo\"\n        - $ref: \"#/components/schemas/FullFolderInfo\"\n\n    AllFilesInfo:\n      type: object\n      properties:\n        files:\n          type: array\n          items:\n            oneOf:\n              - $ref: \"#/components/schemas/FileInfo\"\n              - $ref: \"#/components/schemas/FullFolderInfo\"\n        free:\n          type: integer\n        # platform dependent\n        total:\n          type: integer\n\n    FileCommand:\n      type: object\n      properties:\n        command:\n          type: string\n          enum: [select, copy, move]\n          default: select\n\n    CreateFolder:\n      properties:\n        path:\n          type: string\n          description: The path within the location to upload the file to or create the folder.\n        foldername:\n          type: string\n          description: The name of the folder to create. Ignored when uploading a file.\n      required:\n        - path\n        - foldername\n\n    UploadFile:\n      properties:\n        path:\n          type: string\n          default: subfolder\n          description: The path within the location to upload the file to or create the folder.\n        file:\n          type: string\n          format: binary\n          default: test.gcode\n          description: The file to upload, including a valid filename.\n        select:\n          type: string\n          default: true\n          description: Whether to select the file directly after upload (true) or not (false). Defaults to true.\n      required:\n        - path\n        - file\n\n    FileUploaded:\n      type: object\n      properties:\n        done:\n          type: boolean\n        files:\n          type: object\n          properties:\n            local:\n              type: object\n              properties:\n                name:\n                  type: string\n                  example: harry_potter_hogwarts_a_mohimont.sl1\n                origin:\n                  type: string\n                  example: local\n                path:\n                  type: string\n                  example: internal/examples/harry_potter_hogwarts_a_mohimont.sl1\n                refs:\n                  type: object\n                  properties:\n                    resource:\n                      type: string\n                      example: http://localhost/api/files/local/internal/examples/harry_potter_hogwarts_a_mohimont.sl1\n                    download:\n                      type: string\n                      example: http://localhost/api/downloads/local/internal/examples/harry_potter_hogwarts_a_mohimont.sl1\n\n    FolderCreated:\n      type: object\n      properties:\n        done:\n          type: boolean\n        folder:\n          type: object\n          properties:\n            name:\n              type: string\n            origin:\n              type: string\n            path:\n              type: string\n            refs:\n              type: object\n              properties:\n                resource:\n                  type: string\n\n    State:\n      type: string\n      enum: [\n        \"Operational\",\n        \"Printing\",\n        \"Pausing\",\n        \"Paused\",\n        \"Cancelling\",\n        \"Error\",\n        \"Offline\",\n        \"Busy\",\n      ]\n      example: \"Operational\"\n\n    TelemetryFDM:\n      type: object\n      properties:\n        temp_bed:\n          type: number\n        temp_nozzle:\n          type: number\n        material:\n          type: string\n        z-height:\n          type: number\n        print-speed:\n          type: integer\n        axis_x:\n          type: number\n        axis_y:\n          type: number\n        axis_z:\n          type: number\n\n    TelemetryMini:\n      type: object\n      properties:\n        temp_bed:\n          type: number\n        temp_nozzle:\n          type: number\n        material:\n          type: string\n\n    TelemetrySL1:\n      type: object\n      properties:\n        fanUvLed:\n          type: integer\n          example: 2000\n        fanBlower:\n          type: integer\n          example: 3333\n        fanRear:\n          type: integer\n          example: 1000\n        coverClosed:\n          type: boolean\n          example: true\n        tempAmbient:\n          type: number\n          example: 23.4\n        tempCpu:\n          type: number\n          example: 46.9\n        tempUvLed:\n          type: number\n          example: 52.6\n\n    JobFileFDM:\n      type: object\n      properties:\n        name:\n          type: string\n          example: \"Skeleton.gcode\"\n        path:\n          type: string\n          example: \"/Prusa Link gcodes/Skeleton.gcode\"\n        size:\n          type: integer\n          example: 404942\n        origin:\n          type: string\n          example: \"local\"\n        date:\n          type: integer\n          example: 1533095642\n        display:\n          type: string\n          example: \"Skeleton.gcode\"\n\n\n    JobFileSLA:\n      type: object\n      properties:\n        layers:\n          type: integer\n          description: Total number of layers\n          example: 12345\n          nullable: true\n        layerHeight: # [mm]\n          type: number\n          example: 0.025\n        exposureTime: # [ms]\n          type: integer\n          example: 6000\n          nullable: true\n        exposureTimeFirst: # [ms]\n          type: number\n          example: 30000\n          nullable: true\n        exposureTimeCalibration: # [ms]\n          type: number\n          example: 30000\n          nullable: true\n        exposureUserProfile: # [-]\n          type: number\n          example: 1\n          nullable: true\n\n    JobFDM:\n      type: object\n      properties:\n        filament:\n          type: object\n          properties:\n            length:\n              type: number\n              description: Length of filament used in mm.\n              nullable: true\n            volume:\n              type: number\n              description: Volume in filament used in cm3.\n              nullable: true\n          nullable: true\n\n    JobSLA:\n      type: object\n      properties:\n        resin:\n          type: object\n          properties:\n            remaining:\n              type: number\n              description: Volume of remaining resin in the tank [ml].\n              nullable: true\n              example: 134.5\n            consumed:\n              type: number\n              description: Volume of already consumed resin in the tank [ml].\n              nullable: true\n              example: 22.4\n          nullable: true\n\n    Error:\n      type: object\n      properties:\n        code:\n          type: string\n          description: Prusa error code. Mus be string if we will have printer with code for example 04\n          example: \"10108\"\n        title:\n          type: string\n          description: Prusa error text string with prefiled variable macros.\n          example: \"RESIN TOO LOW\"\n        text:\n          type: string\n          description: Prusa error text string with prefiled variable macros.\n          example: \"Measured resin volume 22.4 ml is lower than required for this print. Refill the tank and restart the print.\"\n        url:\n          type: string\n          description: Link to the Prusa help page\n          example: \"https://help.prusa3d.com/en/10108/LHE3Q0I1\"\n      required:\n        - title\n        - text\n\n    ResponsePlaintext:\n      type: string\n      default: \"Project with same name has been already uploaded.\"\n      description: Prusa error message (raw_message)\n\n  headers:\n    Accept: # Slicer doesn't have to use this. If the header is not present, it defaults to: text/plain\n      required: false\n      schema:\n        type: string\n        default: application/json\n      description: Parameter specifying supported data format from client. PCL has to support it\n    Content-Location:\n      required: true\n      schema:\n        type: string\n        default: \"http://\u003cPCL IP\u003e/error\"\n      description: URI path to nice error page. We can send URI to help.prusa3d.com in the future.\n\n  securitySchemes:\n    ApiKeyAuth:\n      type: apiKey\n      in: header\n      name: X-API-Key\n\n  responses:\n    NotModified: # 304\n      description: Not Modified\n      headers:\n        Content-Location:\n          $ref: \"#/components/headers/Content-Location\"\n      content:\n        text/plain:\n          schema:\n            $ref: \"#/components/schemas/ResponsePlaintext\"\n        application/json:\n          schema:\n            $ref: \"#/components/schemas/Error\"\n\n    BadRequest: # 400\n      description: Bad Request\n      headers:\n        Content-Location:\n          $ref: \"#/components/headers/Content-Location\"\n      content:\n        text/plain:\n          schema:\n            $ref: \"#/components/schemas/ResponsePlaintext\"\n        application/json:\n          schema:\n            $ref: \"#/components/schemas/Error\"\n\n    Unauthorized: # 401\n      description: Unauthorized\n      headers:\n        Content-Location:\n          $ref: \"#/components/headers/Content-Location\"\n      content:\n        text/plain:\n          schema:\n            $ref: \"#/components/schemas/ResponsePlaintext\"\n        application/json:\n          schema:\n            $ref: \"#/components/schemas/Error\"\n\n    Forbidden: # 403\n      description: Forbidden\n      headers:\n        Content-Location:\n          $ref: \"#/components/headers/Content-Location\"\n      content:\n        text/plain:\n          schema:\n            $ref: \"#/components/schemas/ResponsePlaintext\"\n        application/json:\n          schema:\n            $ref: \"#/components/schemas/Error\"\n\n    NotFound: # 404\n      description: Not Found\n      headers:\n        Content-Location:\n          $ref: \"#/components/headers/Content-Location\"\n      content:\n        text/plain:\n          schema:\n            $ref: \"#/components/schemas/ResponsePlaintext\"\n        application/json:\n          schema:\n            $ref: \"#/components/schemas/Error\"\n\n    Conflict: # 409\n      description: Conflict\n      headers:\n        Content-Location:\n          $ref: \"#/components/headers/Content-Location\"\n      content:\n        text/plain:\n          schema:\n            $ref: \"#/components/schemas/ResponsePlaintext\"\n        application/json:\n          schema:\n            $ref: \"#/components/schemas/Error\"\n\n    UnsupportedMediaType: # 415\n      description: Unsupported Media Type\n      headers:\n        Content-Location:\n          $ref: \"#/components/headers/Content-Location\"\n      content:\n        text/plain:\n          schema:\n            $ref: \"#/components/schemas/ResponsePlaintext\"\n        application/json:\n          schema:\n            $ref: \"#/components/schemas/Error\"\n\n    InternalServerError: # 500\n      description: Internal Server Error\n      headers:\n        Content-Location:\n          $ref: \"#/components/headers/Content-Location\"\n      content:\n        text/plain:\n          schema:\n            $ref: \"#/components/schemas/ResponsePlaintext\"\n        application/json:\n          schema:\n            $ref: \"#/components/schemas/Error\"\n\n    NotImplemented: # 501\n      description: Not Implemented\n      headers:\n        Content-Location:\n          $ref: \"#/components/headers/Content-Location\"\n      content:\n        text/plain:\n          schema:\n            $ref: \"#/components/schemas/ResponsePlaintext\"\n        application/json:\n          schema:\n            $ref: \"#/components/schemas/Error\"\n",
			"canonicalURL": "/github.com/prusa3d/Prusa-Link-Web@6f716ec9b9ce60942f81fdafa57b82d037d16109/-/blob/spec/openapi-legacy.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/prusa3d/Prusa-Link-Web/blob/6f716ec9b9ce60942f81fdafa57b82d037d16109/spec/openapi-legacy.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "parse: parse spec: parse components: schemas: \"FileInfo\": parse schema: at 1:6222: invalid value \"{\\\"date\\\":1574156567,\\\"display\\\":\\\"harry_potter_hogwarts_a_mohimont.sl1\\\",\\\"gcodeAnalysis\\\":{\\\"estimatedPrintTime\\\":2445,\\\"layerHeight\\\":0.025,\\\"material\\\":\\\"Prusa Orange Tough\\\"},\\\"hash\\\":\\\"5f972cc1cfb91f91f7c70d0dff6a0462a9de1d41\\\",\\\"name\\\":\\\"harry_potter_hogwarts_a_mohimont.sl1\\\",\\\"origin\\\":\\\"local\\\",\\\"path\\\":\\\"internal/examples/harry_potter_hogwarts_a_mohimont.sl1\\\",\\\"refs\\\":{\\\"download\\\":\\\"http://localhost/api/downloads/local/internal/examples/harry_potter_hogwarts_a_mohimont.sl1\\\",\\\"resource\\\":\\\"http://localhost/api/files/local/internal/examples/harry_potter_hogwarts_a_mohimont.sl1\\\",\\\"thumbnailBig\\\":\\\"http://localhost/api/thumbnails/tmpy36n51rt/thumbnail/thumbnail800x480.png\\\",\\\"thumbnailSmall\\\":\\\"http://localhost/api/thumbnails/tmpy36n51rt/thumbnail/thumbnail400x400.png\\\"},\\\"size\\\":873151,\\\"type\\\":\\\"machinecode\\\",\\\"typePath\\\":[\\\"machinecode\\\",\\\"gcode\\\"]}\""
}