{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/PaloAltoNetworks/gaia"
		},
		"file": {
			"name": "automationcondition.json",
			"size": 0,
			"path": "openapi3_autogen/automationcondition.json",
			"byteSize": 9168,
			"content": "{\n  \"openapi\": \"3.0.3\",\n  \"components\": {\n    \"schemas\": {\n      \"automationcondition\": {\n        \"description\": \"Condition that can be used in automations.\",\n        \"properties\": {\n          \"ID\": {\n            \"description\": \"Identifier of the object.\",\n            \"readOnly\": true,\n            \"type\": \"string\"\n          },\n          \"annotations\": {\n            \"additionalProperties\": {\n              \"items\": {\n                \"type\": \"string\"\n              },\n              \"type\": \"array\"\n            },\n            \"description\": \"Stores additional information about an entity.\",\n            \"type\": \"object\"\n          },\n          \"associatedTags\": {\n            \"description\": \"List of tags attached to an entity.\",\n            \"items\": {\n              \"type\": \"string\"\n            },\n            \"type\": \"array\"\n          },\n          \"createTime\": {\n            \"description\": \"Creation date of the object.\",\n            \"format\": \"date-time\",\n            \"readOnly\": true,\n            \"type\": \"string\"\n          },\n          \"description\": {\n            \"description\": \"Description of the object.\",\n            \"type\": \"string\"\n          },\n          \"entitlements\": {\n            \"additionalProperties\": {\n              \"items\": {\n                \"enum\": [\n                  \"\",\n                  \"retrieve-many\",\n                  \"retrieve\",\n                  \"create\",\n                  \"update\",\n                  \"delete\",\n                  \"patch\",\n                  \"info\"\n                ]\n              },\n              \"type\": \"array\"\n            },\n            \"description\": \"Contains the entitlements needed for executing the function.\",\n            \"type\": \"object\"\n          },\n          \"function\": {\n            \"description\": \"Function contains the code.\",\n            \"type\": \"string\"\n          },\n          \"key\": {\n            \"description\": \"Contains the unique identifier key for the condition.\",\n            \"type\": \"string\"\n          },\n          \"metadata\": {\n            \"description\": \"Contains tags that can only be set during creation, must all start\\nwith the '@' prefix, and should only be used by external systems.\",\n            \"items\": {\n              \"type\": \"string\"\n            },\n            \"type\": \"array\"\n          },\n          \"name\": {\n            \"description\": \"Name of the entity.\",\n            \"example\": \"the name\",\n            \"type\": \"string\"\n          },\n          \"namespace\": {\n            \"description\": \"Namespace tag attached to an entity.\",\n            \"readOnly\": true,\n            \"type\": \"string\"\n          },\n          \"normalizedTags\": {\n            \"description\": \"Contains the list of normalized tags of the entities.\",\n            \"items\": {\n              \"type\": \"string\"\n            },\n            \"readOnly\": true,\n            \"type\": \"array\"\n          },\n          \"parameters\": {\n            \"additionalProperties\": {\n              \"type\": \"object\"\n            },\n            \"description\": \"Contains the computed parameters.\",\n            \"type\": \"object\"\n          },\n          \"propagate\": {\n            \"description\": \"Propagates the policy to all of its children.\",\n            \"type\": \"boolean\"\n          },\n          \"protected\": {\n            \"description\": \"Defines if the object is protected.\",\n            \"type\": \"boolean\"\n          },\n          \"steps\": {\n            \"description\": \"Contains all the steps with parameters.\",\n            \"items\": {\n              \"$ref\": \"./uistep#/components/schemas/uistep\"\n            },\n            \"type\": \"array\"\n          },\n          \"updateTime\": {\n            \"description\": \"Last update date of the object.\",\n            \"format\": \"date-time\",\n            \"readOnly\": true,\n            \"type\": \"string\"\n          }\n        },\n        \"required\": [\n          \"name\"\n        ],\n        \"type\": \"object\"\n      }\n    }\n  },\n  \"info\": {\n    \"contact\": {\n      \"email\": \"dev@aporeto.com\",\n      \"name\": \"Aporeto Inc.\",\n      \"url\": \"go.aporeto.io/api\"\n    },\n    \"license\": {\n      \"name\": \"TODO\"\n    },\n    \"termsOfService\": \"https://localhost/TODO\",\n    \"title\": \"automationcondition\",\n    \"version\": \"1.0\"\n  },\n  \"paths\": {\n    \"/automationconditions\": {\n      \"get\": {\n        \"description\": \"Retrieves the list of automation conditions.\",\n        \"operationId\": \"get-all-automationconditions\",\n        \"parameters\": [\n          {\n            \"description\": \"Also retrieve the objects that propagate down.\",\n            \"in\": \"query\",\n            \"name\": \"propagated\",\n            \"schema\": {\n              \"type\": \"boolean\"\n            }\n          },\n          {\n            \"description\": \"Filtering query. Consequent `q` parameters will form an or.\",\n            \"example\": \"associatedTags contains ['$name=hello'] or type == 'Docker'\",\n            \"in\": \"query\",\n            \"name\": \"q\",\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/automationcondition\"\n                  },\n                  \"type\": \"array\"\n                }\n              }\n            },\n            \"description\": \"n/a\"\n          }\n        },\n        \"tags\": [\n          \"integration/automation\",\n          \"sephiroth\"\n        ]\n      },\n      \"post\": {\n        \"description\": \"Creates a new automation condition.\",\n        \"operationId\": \"create-a-new-automationcondition\",\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/automationcondition\"\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/automationcondition\"\n                }\n              }\n            },\n            \"description\": \"n/a\"\n          }\n        },\n        \"tags\": [\n          \"integration/automation\",\n          \"sephiroth\"\n        ]\n      }\n    },\n    \"/automationconditions/{id}\": {\n      \"delete\": {\n        \"description\": \"Deletes the automation condition with the given ID.\",\n        \"operationId\": \"delete-automationcondition-by-ID\",\n        \"parameters\": [\n          {\n            \"description\": \"Filtering query. Consequent `q` parameters will form an or.\",\n            \"example\": \"associatedTags contains ['$name=hello'] or type == 'Docker'\",\n            \"in\": \"query\",\n            \"name\": \"q\",\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/automationcondition\"\n                }\n              }\n            },\n            \"description\": \"n/a\"\n          }\n        },\n        \"tags\": [\n          \"integration/automation\",\n          \"sephiroth\"\n        ]\n      },\n      \"get\": {\n        \"description\": \"Retrieves the automation condition with the given ID.\",\n        \"operationId\": \"get-automationcondition-by-ID\",\n        \"parameters\": [\n          {\n            \"description\": \"Also retrieve the objects that propagate down.\",\n            \"in\": \"query\",\n            \"name\": \"propagated\",\n            \"schema\": {\n              \"type\": \"boolean\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/automationcondition\"\n                }\n              }\n            },\n            \"description\": \"n/a\"\n          }\n        },\n        \"tags\": [\n          \"integration/automation\",\n          \"sephiroth\"\n        ]\n      },\n      \"parameters\": [\n        {\n          \"in\": \"path\",\n          \"name\": \"id\",\n          \"required\": true,\n          \"schema\": {\n            \"type\": \"string\"\n          }\n        }\n      ],\n      \"put\": {\n        \"description\": \"Updates the automation condition with the given ID.\",\n        \"operationId\": \"update-automationcondition-by-ID\",\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/automationcondition\"\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/automationcondition\"\n                }\n              }\n            },\n            \"description\": \"n/a\"\n          }\n        },\n        \"tags\": [\n          \"integration/automation\",\n          \"sephiroth\"\n        ]\n      }\n    }\n  },\n  \"tags\": [\n    {\n      \"description\": \"This tag is for group 'integration/automation'\",\n      \"name\": \"integration/automation\"\n    },\n    {\n      \"description\": \"This tag is for package 'sephiroth'\",\n      \"name\": \"sephiroth\"\n    }\n  ]\n}\n"
		}
	},
	"Error": "parse: parse spec: paths: /automationconditions: get: operation \"get-all-automationconditions\": responses: 200: content: \"application/json\": schema: parse schema: item: parse schema: resolve \"#/components/schemas/automationcondition\": parse schema: property \"steps\": parse schema: item: parse schema: resolve \"./uistep#/components/schemas/uistep\": find schema: external base \"./uistep\" is not supported"
}