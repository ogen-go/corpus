{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/tip-initiative/tip-initiative-apis"
		},
		"file": {
			"name": "rfps.yaml",
			"size": 0,
			"path": "endpoints/rfps.yaml",
			"byteSize": 3277,
			"content": "openapi: \"3.0.0\"\ninfo:\n  version: 6.0.0\n  title: Request For Proposals (RFPS)\n  description: Allows the buyer to submit a Request for Proposal (RFP) to the seller with overall media budget, goal and makegood terms and optionally include specific detailed inventory requests\n  termsOfService: http://placeholderdomain.io/terms/\n  contact:\n    name: TIP Initiative\n    email: tipinitiative@frontrowadvisory.com\n    url: http://placeholderdomain.io\n  license:\n    name: MIT\n    url: https://opensource.org/licenses/MIT\nservers:\n  - url: http://placeholderdomain.io\nsecurity:\n  - bearerAuth: []\npaths:\n  /buyer/rfps:\n    post:\n      tags:\n        - Buyer\n      summary: Allows the buyer to submit a Request for Proposal (RFP) to the seller with media budget, goals and overall terms\n      description: \u003e-\n        This endpoint resides on the seller side. The purpose of the endpoint is to allow the buyer to send new RFP or cancel\n        a previously sent request.\u003cbr/\u003e\n        Supported Transaction Types:\u003cbr/\u003e\n        \u003cul\u003e\n        \u003cli\u003eNew - Send a new Request for Proposal using the BuyerRPFS schema\u003c/li\u003e\n        \u003cli\u003eCancel - Send a cacellation of previously sent request\u003c/li\u003e\n        \u003c/ul\u003e\n      operationId: BuyerRFPS\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/BuyerRFPSRequest'\n            examples:\n              New:\n                value:\n                  $ref: 'examples\\6.0.0\\Buyer\\JSON\\RFPSNew.json'\n              Cancel:\n                value:\n                  $ref: 'examples\\6.0.0\\Buyer\\JSON\\RFPSCancel.json'\n          application/xml:\n            schema:\n              $ref: '#/components/schemas/BuyerRFPSRequest'\n            examples:\n              New:\n                value:\n                  $ref: 'examples\\6.0.0\\Buyer\\XML\\RFPSNew.xml'\n              Cancel:\n                value:\n                  $ref: 'examples\\6.0.0\\Buyer\\XML\\RFPSCancel.xml'\n      responses:\n        '200': #OK\n          $ref: 'schemas/commonResponses.yaml#/components/responses/Success'\n        '202': #Accepted\n          $ref: 'schemas/commonResponses.yaml#/components/responses/Accepted'\n        '400': #Bad Request\n          $ref: 'schemas/commonResponses.yaml#/components/responses/BadRequest'\n        '401': #Unauthorized\n          $ref: 'schemas/commonResponses.yaml#/components/responses/Unauthorized'\n        '403': #Forbidden\n          $ref: 'schemas/commonResponses.yaml#/components/responses/Forbidden'\n        '404': #Not Found\n          $ref: 'schemas/commonResponses.yaml#/components/responses/NotFound'\n        '405': #Not Allowed\n          $ref: 'schemas/commonResponses.yaml#/components/responses/NotAllowed'\n        default: #unexpected\n          $ref: 'schemas/commonResponses.yaml#/components/responses/Unexpected'\ncomponents:\n  securitySchemes:\n    bearerAuth:\n      type: http\n      scheme: bearer\n      bearerFormat: JWT\n  schemas:\n    BuyerRFPSRequest:\n      description: Request Body for the endpoint varies based on Transaction type\n      oneOf:\n        - $ref: 'schemas/rfpsSchemas.yaml#/components/schemas/BuyerRFPS'\n        - $ref: 'schemas/commonSchemas.yaml#/components/schemas/CancelConfirmRecallReject'\n      xml:\n        name: BuyerRFPSRequest\n",
			"canonicalURL": "/github.com/tip-initiative/tip-initiative-apis@2e3c15b6685f042803acf59e6e5f6c3a0092bcb1/-/blob/endpoints/rfps.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/tip-initiative/tip-initiative-apis/blob/2e3c15b6685f042803acf59e6e5f6c3a0092bcb1/endpoints/rfps.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "parse: parse spec: parse components: at 1:15: schemas: \"BuyerRFPSRequest\": parse schema: oneOf: [0]: at 1:135: parse schema: resolve \"schemas/rfpsSchemas.yaml#/components/schemas/BuyerRFPS\": external \"schemas/rfpsSchemas.yaml\": get: file: local file reference is not allowed"
}