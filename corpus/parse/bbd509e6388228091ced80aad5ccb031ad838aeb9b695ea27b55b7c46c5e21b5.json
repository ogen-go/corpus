{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/ZeusWPI/zauth"
		},
		"file": {
			"name": "zauth.v1.yaml",
			"size": 0,
			"path": "openapi/reference/zauth.v1.yaml",
			"byteSize": 9764,
			"content": "openapi: 3.0.0\ninfo:\n  title: Zauth\n  version: '1.0'\nservers:\n  - url: 'http://localhost:8000'\npaths:\n  /users:\n    get:\n      summary: List users\n      tags: []\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/User'\n      operationId: get-users\n      description: ''\n    post:\n      summary: Create user\n      operationId: post-users\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/User'\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/NewUser'\n        description: ''\n  /clients:\n    get:\n      summary: List clients\n      tags: []\n      responses: {}\n      operationId: get-clients\n      description: ''\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: array\n              items:\n                $ref: '#/components/schemas/Client'\n      security:\n        - Admin login: []\n    post:\n      summary: Create a client\n      operationId: post-clients\n      responses:\n        '201':\n          description: Created\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Client'\n      description: ''\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/NewClient'\n      security:\n        - Admin login: []\n  /oauth/authorize:\n    get:\n      summary: Your GET endpoint\n      tags: []\n      responses:\n        '307':\n          description: Temporary Redirect\n        '401':\n          description: Unauthorized\n      operationId: get-oauth-authorize\n      parameters:\n        - schema:\n            type: string\n          in: query\n          name: response_type\n          required: true\n        - schema:\n            type: string\n          in: query\n          name: client_id\n          required: true\n        - schema:\n            type: string\n          in: query\n          name: redirect_uri\n          required: true\n        - schema:\n            type: string\n          in: query\n          name: scope\n        - schema:\n            type: string\n          in: query\n          name: state\n  /oauth/grant:\n    get:\n      summary: Your GET endpoint\n      tags: []\n      responses:\n        '200':\n          description: OK\n        '404':\n          description: Client not found\n      operationId: get-oauth-grant\n      parameters:\n        - schema:\n            type: integer\n          in: query\n          name: client_id\n          required: true\n        - schema:\n            type: string\n          in: query\n          name: client_name\n          required: true\n        - schema:\n            type: string\n          in: query\n          name: redirect_uri\n          required: true\n        - schema:\n            type: string\n          in: query\n          name: scope\n          description: ''\n        - schema:\n            type: string\n          in: query\n          name: client_state\n    post:\n      summary: ''\n      operationId: post-oauth-grant\n      responses:\n        '307':\n          description: Temporary Redirect\n      requestBody:\n        content:\n          application/x-www-form-urlencoded:\n            schema:\n              $ref: '#/components/schemas/GrantFormData'\n            examples: {}\n  /oauth/login:\n    get:\n      summary: Login in the oauth flow\n      tags: []\n      responses:\n        '200':\n          description: OK\n      operationId: get-oauth-login\n      parameters:\n        - schema:\n            type: number\n          in: query\n          name: client_id\n          required: true\n        - schema:\n            type: string\n          in: query\n          name: client_name\n          required: true\n        - schema:\n            type: string\n          in: query\n          name: redirect_uri\n          required: true\n        - schema:\n            type: string\n          in: query\n          name: scope\n        - schema:\n            type: string\n          in: query\n          name: client_state\n      description: ''\n    post:\n      summary: ''\n      operationId: post-oauth-login\n      responses:\n        '307':\n          description: Temporary Redirect\n      description: ''\n      requestBody:\n        content:\n          application/x-www-form-urlencoded:\n            schema:\n              $ref: '#/components/schemas/LoginFormData'\n        description: ''\n  /oauth/token:\n    post:\n      summary: ''\n      operationId: post-oauth-token\n      responses:\n        '200':\n          description: OK\n      requestBody:\n        content:\n          application/x-www-form-urlencoded:\n            schema:\n              $ref: '#/components/schemas/TokenFormData'\n  /login:\n    post:\n      summary: Login to the zauth application\n      operationId: post-login\n      responses:\n        '307':\n          description: Temporary Redirect\n        '401':\n          description: 'Unauthorized: Incorrect username or password'\n      requestBody:\n        content:\n          application/x-www-form-urlencoded:\n            schema:\n              $ref: '#/components/schemas/LoginFormData'\n      description: ''\n    get:\n      summary: Get the login page\n      operationId: get-login\n      responses:\n        '200':\n          description: OK\n      parameters:\n        - schema:\n            type: string\n          in: query\n          name: state\n  /logout:\n    get:\n      summary: Delete the session\n      tags: []\n      responses:\n        '200':\n          description: OK\n      operationId: get-logout\n      description: ''\n    post:\n      summary: Destroy the session\n      operationId: post-logout\n      responses:\n        '307':\n          description: Temporary Redirect\n          headers: {}\n      description: ''\n  /current_user:\n    get:\n      summary: Current user\n      tags: []\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/User'\n      operationId: get-current_user\n  '/users/{username}':\n    get:\n      summary: Show user\n      tags: []\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/User'\n      operationId: get-users-id\n    parameters:\n      - schema:\n          type: number\n        name: id\n        in: path\n        required: true\n    put:\n      summary: Update user\n      operationId: put-users-id\n      responses:\n        '204':\n          description: No Content\n        '403':\n          description: Forbidden\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/UserChange'\n  '/users/{username}/admin':\n    parameters:\n      - schema:\n          type: number\n        name: id\n        in: path\n        required: true\n    post:\n      summary: Set admin\n      operationId: post-users-id-admin\n      responses:\n        '204':\n          description: No Content\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/ChangeAdmin'\ncomponents:\n  schemas:\n    NewClient:\n      title: NewClient\n      type: object\n      properties:\n        name:\n          type: string\n        needs_grant:\n          type: string\n        redirect_uri_list:\n          type: string\n      required:\n        - name\n        - needs_grant\n        - redirect_uri_list\n    User:\n      title: User\n      type: object\n      properties:\n        id:\n          type: integer\n        username:\n          type: string\n        admin:\n          type: boolean\n    Client:\n      title: Client\n      type: object\n      properties:\n        id:\n          type: integer\n        name:\n          type: string\n        secret:\n          type: string\n        needs_grant:\n          type: boolean\n        redirect_uri_list:\n          type: string\n    NewUser:\n      title: NewUser\n      type: object\n      properties:\n        username:\n          type: string\n        password:\n          type: string\n      required:\n        - username\n        - password\n    GrantFormData:\n      title: GrantFormData\n      type: object\n      properties:\n        state:\n          type: string\n        grant:\n          type: boolean\n    OauthLoginFormData:\n      title: OauthLoginFormData\n      type: object\n      properties:\n        username:\n          type: string\n        password:\n          type: string\n        remember_me:\n          type: boolean\n        state:\n          type: string\n    TokenFormData:\n      title: TokenFormData\n      type: object\n      properties:\n        grant_type:\n          type: string\n        code:\n          type: string\n        redirect_uri:\n          type: string\n        client_id:\n          type: string\n        client_secret:\n          type: string\n      required:\n        - grant_type\n        - code\n    LoginFormData:\n      title: LoginFormData\n      type: object\n      properties:\n        username:\n          type: string\n        password:\n          type: string\n        state:\n          type: string\n      required:\n        - username\n        - password\n    UserChange:\n      title: UserChange\n      type: object\n      properties:\n        username:\n          type: string\n        password:\n          type: string\n    ChangeAdmin:\n      title: ChangeAdmin\n      type: object\n      properties:\n        admin:\n          type: boolean\n  securitySchemes:\n    Admin login:\n      type: http\n      scheme: basic\n      description: ''\n",
			"canonicalURL": "/github.com/ZeusWPI/zauth@da39ceeb839fe1ae752b4c90f1b9350dbe1c6f46/-/blob/openapi/reference/zauth.v1.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/ZeusWPI/zauth/blob/da39ceeb839fe1ae752b4c90f1b9350dbe1c6f46/openapi/reference/zauth.v1.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "parse: parse spec: parse components: securitySchemes: at openapi/reference/zauth.v1.yaml:432:5: invalid name: \"Admin login\" doesn't match \"^[a-zA-Z0-9.\\\\-_]+$\""
}