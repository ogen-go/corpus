{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/cebe/yii2-openapi"
		},
		"file": {
			"name": "blog_v2.yaml",
			"size": 0,
			"path": "tests/specs/blog_v2.yaml",
			"byteSize": 12547,
			"content": "openapi: \"3.0.0\"\ninfo:\n  version: 2.0.0\n  title: Blog prototype for test migrations. Modify columns, remove log_records table, added tags, post_tag tables\n  license:\n    name: MIT\nservers:\n  - url: http://blog.dummy.io/v2\npaths:\n  /posts:\n    get:\n      summary: List all posts\n      operationId: listPosts\n      tags:\n        - posts\n      parameters:\n        - name: limit\n          in: query\n          description: How many items to return at one time (max 100)\n          required: false\n          schema:\n            type: integer\n            format: int32\n      responses:\n        '200':\n          description: A paged array of posts\n          headers:\n            x-next:\n              description: A link to the next page of responses\n              schema:\n                type: string\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Posts\"\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n  /posts/{id}:\n    parameters:\n      -   name: id\n          in: path\n          required: true\n          description: The id of the post to retrieve\n          schema:\n            type: integer\n    get:\n      summary: Info for a specific post\n      operationId: showPostById\n      tags:\n        - posts\n      responses:\n        '200':\n          $ref: \"#/components/responses/Post\"\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n  /posts/{id}/relationships/category:\n    parameters:\n      - name: id\n        in: path\n        required: true\n        description: The id of the post to retrieve\n        schema:\n          type: integer\n          additionalProperties:\n            $ref: \"#/components/schemas/Post\"\n    get:\n      summary: Category for a specific post\n      operationId: showPostCategory\n      tags:\n        - categories\n      responses:\n        '200':\n           $ref: \"#/components/responses/Category\"\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n  /posts/{id}/relationships/comments:\n    parameters:\n      - name: id\n        in: path\n        required: true\n        description: The id of the post to retrieve\n        schema:\n          type: integer\n          additionalProperties:\n            $ref: \"#/components/schemas/Post\"\n    get:\n      summary: Category for a specific post\n      operationId: showPostComments\n      tags:\n        - comments\n      responses:\n        '200':\n          $ref: \"#/components/responses/Comments\"\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n  /posts/{postId}/comments:\n    parameters:\n      -   name: postId\n          in: path\n          required: true\n          description: The id of the post to retrieve\n          schema:\n            type: integer\n            additionalProperties:\n              $ref: \"#/components/schemas/Post\"\n    get:\n      summary: Info for a specific post\n      operationId: showPostComments\n      tags:\n        - comments\n      responses:\n        '200':\n          $ref: \"#/components/responses/Comments\"\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n    post:\n      summary: Create a comment for post\n      operationId: createPostComment\n      tags:\n        - comments\n      responses:\n        '201':\n          description: Null response\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n  /category/{categoryId}/posts/{id}:\n    parameters:\n      - name: categoryId\n        in: path\n        required: true\n        description: The slug of the post to retrieve\n        schema:\n          type: integer\n          additionalProperties:\n              $ref: \"#/components/schemas/Category\"\n      - name: id\n        in: path\n        required: true\n        description: The id of the comment to retrieve\n        schema:\n          type: integer\n          additionalProperties:\n             $ref: \"#/components/schemas/Post\"\n    get:\n       summary: Show post from concrete category\n       operationId: showPostFromCategory\n       tags:\n         - posts\n       responses:\n         '200':\n           description: Expected response to a valid request\n           content:\n             application/json:\n               schema:\n                 $ref: \"#/components/schemas/Post\"\n         default:\n           description: unexpected error\n           content:\n             application/json:\n               schema:\n                 $ref: \"#/components/schemas/Error\"\n  /posts/{slug}/comment/{id}:\n    parameters:\n      -   name: slug\n          in: path\n          required: true\n          description: The slug of the post to retrieve\n          schema:\n            type: string\n            additionalProperties:\n              $ref: \"#/components/schemas/Post\"\n      -   name: id\n          in: path\n          required: true\n          description: The id of the comment to retrieve\n          schema:\n            type: integer\n    get:\n      summary: Info for a specific comment\n      operationId: showPostComment\n      tags:\n        - comments\n      responses:\n        '200':\n          $ref: \"#/components/responses/Comment\"\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n    patch:\n      summary: update a specific pet\n      operationId: updatePostCommentById\n      tags:\n        - comments\n      responses:\n        '200':\n          description: The updated comment\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Comment\"\n    delete:\n      summary: delete a specific comment\n      operationId: deletePostCommentById\n      tags:\n        - comments\n      responses:\n        '204':\n          description: successfully deleted comment\ncomponents:\n  schemas:\n    User:\n      description: The User\n      x-table: v2_users\n      x-indexes:\n        - unique:login\n        - unique:email\n        - hash:role,flags\n      required:\n        - id\n        - login\n        - email\n        - password\n      properties:\n        id:\n          type: integer\n          format: int64\n          readOnly: True\n        login:\n          type: string\n        email:\n          type: string\n        password:\n          type: string\n          format: password\n        role:\n          type: string\n          x-db-type: enum\n          enum:\n            - admin\n            - editor\n            - reader\n          x-faker: \"$faker-\u003erandomElement(['admin', 'editor', 'reader'])\"\n        flags:\n          type: integer\n          default: \"0\"\n        created_at:\n          type: string\n          format: date-time\n    Users:\n      type: array\n      items:\n        $ref: \"#/components/schemas/User\"\n    Category:\n      x-table: v2_categories\n      x-indexes:\n        - title\n      description: Category of posts\n      required:\n        - id\n        - title\n        - cover\n        - active\n      properties:\n        id:\n          type: integer\n          format: int64\n          readOnly: True\n        title:\n          type: string\n          maxLength: 100\n        cover:\n          type: string\n        active:\n          type: boolean\n        posts:\n          type: array\n          items:\n            $ref: \"#/components/schemas/Post\"\n    Categories:\n      type: array\n      items:\n        $ref: \"#/components/schemas/Category\"\n    Post:\n      x-table: v2_posts\n      x-indexes:\n        - unique:title\n      description: A blog post (uid used as pk for test purposes)\n      required:\n        - id\n        - title\n        - category\n        - author\n        - active\n      properties:\n        id:\n          type: integer\n          format: int64\n          readOnly: True\n        title:\n          type: string\n          x-db-type: VARCHAR\n          maxLength: 255\n        slug:\n          type: string\n          minLength: 1\n          maxLength: 200\n        lang:\n          type: string\n          x-db-type: enum\n          enum:\n            - ru\n            - eng\n          default: ru\n        category:\n          $ref: \"#/components/schemas/Category\"\n        active:\n          type: boolean\n        created_at:\n          type: string\n          format: date\n        created_by:\n          $ref: \"#/components/schemas/User\"\n        comments:\n          type: array\n          items:\n            $ref: \"#/components/schemas/Comment\"\n        tags:\n          type: array\n          items:\n            $ref: \"#/components/schemas/Tag\"\n    Posts:\n      type: array\n      items:\n        $ref: \"#/components/schemas/Post\"\n    Comment:\n      x-table: v2_comments\n      required:\n        - id\n        - post\n        - message\n        - created_at\n      properties:\n        id:\n          type: integer\n          format: int64\n          readOnly: True\n        post:\n          $ref: \"#/components/schemas/Post\"\n        user:\n          $ref: \"#/components/schemas/User\"\n        message:\n          type: string\n        meta_data:\n          type: string\n          example: \"type=='ticket' \u0026\u0026 status=='closed'\"\n          minLength: 1\n          maxLength: 300\n          default: ''\n        created_at:\n          type: string\n          format: date-time\n    Comments:\n      type: array\n      items:\n        $ref: \"#/components/schemas/Comment\"\n    Tag:\n      x-table: v2_tags\n      x-indexes:\n        - unique:name\n      required:\n        - id\n        - name\n        - lang\n      properties:\n        id:\n          type: integer\n          format: int64\n          readOnly: True\n        name:\n          type: string\n          x-db-type: VARCHAR\n          maxLength: 100\n        lang:\n          type: string\n          x-db-type: enum\n          enum:\n            - ru\n            - eng\n        posts:\n          type: array\n          items:\n            $ref: \"#/components/schemas/Post\"\n    Tags:\n      type: array\n      items:\n        $ref: \"#/components/schemas/Tag\"\n    Error:\n      required:\n        - code\n        - message\n      properties:\n        code:\n          type: integer\n          format: int32\n        message:\n          type: string\n  responses:\n    Post:\n      description: Expected response to a valid request\n      content:\n        application/json:\n          schema:\n            type: object\n            properties:\n              post:\n                $ref: \"#/components/schemas/Post\"\n    Category:\n      description: Expected response to a valid request\n      content:\n        application/json:\n          schema:\n            type: object\n            properties:\n              category:\n                $ref: \"#/components/schemas/Category\"\n    Comment:\n      description: Expected response to a valid request\n      content:\n        application/vnd.api+json:\n          schema:\n            type: object\n            properties:\n              data:\n                type: object\n                properties:\n                    id:\n                      type: integer\n                      example: 1\n                    type:\n                      type: string\n                      enum:\n                        - \"comment\"\n                    attributes:\n                      $ref: \"#/components/schemas/Comment\"\n                    relationships:\n                      type: object\n                      properties:\n                        author:\n                          type: object\n              links:\n                type: object\n                additionalProperties:\n                  oneOf:\n                      - type: string\n                      - type: object\n                        properties:\n                          href:\n                            type: string\n                          meta:\n                            type: object\n    Comments:\n      description: Expected response to a valid request\n      content:\n        application/vnd.api+json:\n          schema:\n            type: array\n            items:\n              $ref: \"#/components/schemas/Comment\"\n\n"
		}
	},
	"Error": "parse: parse spec: paths: /posts/{id}/relationships/category: get: operation \"showPostCategory\": responses: 200: resolve \"#/components/responses/Category\" reference: content: \"application/json\": schema: parse schema: property \"category\": parse schema: resolve \"#/components/schemas/Category\": parse schema: property \"posts\": parse schema: item: parse schema: resolve \"#/components/schemas/Post\": parse schema: property \"comments\": parse schema: item: parse schema: resolve \"#/components/schemas/Comment\": parse schema: property \"user\": parse schema: resolve \"#/components/schemas/User\": parse schema: property \"flags\": parse default: expected type \"integer\", got \"string\""
}