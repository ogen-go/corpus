{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/influxdata/openapi"
		},
		"file": {
			"name": "datasourcesd.yml",
			"size": 0,
			"path": "contracts/svc/datasourcesd.yml",
			"byteSize": 3832,
			"content": "openapi: 3.0.0\ninfo:\n  title: Cloud Data Sources Service\n  version: '1.0'\nservers:\n  - url: /\npaths:\n  /datasources:\n    get:\n      operationId: get-datasources\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/Datasource'\n      description: Get a list of datasources for this organization\n    post:\n      operationId: post-datasources\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  id:\n                    type: string\n                  endpoint:\n                    $ref: '#/components/schemas/ListenerEndpoint'\n      description: Create a datasource with a specific plugin configuration\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                name:\n                  type: string\n                config:\n                  type: object\n  '/datasources/{datasourceID}':\n    delete:\n      operationId: delete-orgs-orgID-datasources-datasourceID\n      description: Delete the datasource and stop the telegraf plugin\n      responses:\n        '200':\n          description: OK\n    get:\n      operationId: get-orgs-orgID-datasources-datasourceID\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Datasource'\n      description: Get a datasource for this organization\n  '/webhooks/{token}':\n    post:\n      summary: handler for incoming webhook posts from the web\n      operationId: post-webhooks-token\n      description: A post operation coming from the web. body could be anything. Requests will be routed to the right Datasource\n      responses:\n        '200':\n          description: OK\ncomponents:\n  schemas:\n    Datasource:\n      title: Datasource\n      type: object\n      description: Data Source containing telegraf plugin name and configuration\n      properties:\n        id:\n          type: integer\n          readOnly: true\n        orgID:\n          type: string\n        name:\n          type: string\n        config:\n          type: object\n          description: an object containing the configuration for the plugin\n        createdBy:\n          type: string\n          readOnly: true\n        createdAt:\n          type: string\n          readOnly: true\n        state:\n          type: string\n          enum:\n            - running\n            - paused\n          readOnly: true\n      required:\n        - orgID\n        - name\n    ListenerEndpoint:\n      title: ListenerEndpoint\n      type: object\n      description: describes a route for an incoming request to a specific telegraf instance and port on a pod\n      properties:\n        id:\n          type: integer\n        orgID:\n          type: string\n        serviceID:\n          type: string\n        datasourceID:\n          type: string\n        externalURL:\n          type: string\n        internalIP:\n          type: string\n        internalPort:\n          type: integer\n    Service:\n      title: Service\n      type: object\n      description: 'describes a telegraf instance we want to be running, maps 1:1 with k8s services, which should typically be backed by one pod. '\n      properties:\n        id:\n          type: integer\n        name:\n          type: string\n        orgID:\n          type: string\n        datasourceID:\n          type: integer\n        nextFreePort:\n          type: integer\n          description: keeps track of what ports are available to assign. incremented atomically\n      required:\n        - name\n        - orgID\n",
			"canonicalURL": "/github.com/influxdata/openapi@4f3df3bd6d208d5dead2a24257716353b3ab3fc6/-/blob/contracts/svc/datasourcesd.yml",
			"externalURLs": [
				{
					"url": "https://github.com/influxdata/openapi/blob/4f3df3bd6d208d5dead2a24257716353b3ab3fc6/contracts/svc/datasourcesd.yml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "parse: parse spec: parse operations: paths: /datasources/{datasourceID}: get: operation \"get-orgs-orgID-datasources-datasourceID\": parse path \"/datasources/{datasourceID}\": path parameter not specified: \"datasourceID\""
}