{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/cloud-hypervisor/cloud-hypervisor"
		},
		"file": {
			"name": "cloud-hypervisor.yaml",
			"size": 0,
			"path": "vmm/src/api/openapi/cloud-hypervisor.yaml",
			"byteSize": 28722,
			"content": "openapi: 3.0.1\ninfo:\n  title: Cloud Hypervisor API\n  description: Local HTTP based API for managing and inspecting a cloud-hypervisor virtual machine.\n  license:\n    name: Apache 2.0\n    url: http://www.apache.org/licenses/LICENSE-2.0.html\n  version: 0.3.0\n\nservers:\n- url: http://localhost/api/v1\n\npaths:\n\n  /vmm.ping:\n    get:\n      summary: Ping the VMM to check for API server availability\n      responses:\n        200:\n          description: The VMM information\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/VmmPingResponse'\n\n  /vmm.shutdown:\n    put:\n      summary: Shuts the cloud-hypervisor VMM.\n      operationId: shutdownVMM\n      responses:\n        204:\n          description: The VMM successfully shutdown.\n\n  /vm.info:\n    get:\n      summary: Returns general information about the cloud-hypervisor Virtual Machine (VM) instance.\n      responses:\n        200:\n          description: The VM information\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/VmInfo'\n\n  /vm.counters:\n    get:\n      summary: Get counters from the VM\n      responses:\n        200:\n          description: The VM counters\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/VmCounters'\n\n  /vm.create:\n    put:\n      summary: Create the cloud-hypervisor Virtual Machine (VM) instance. The instance is not booted, only created.\n      operationId: createVM\n      requestBody:\n        description: The VM configuration\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/VmConfig'\n        required: true\n      responses:\n        204:\n          description: The VM instance was successfully created.\n\n  /vm.delete:\n    put:\n      summary: Delete the cloud-hypervisor Virtual Machine (VM) instance.\n      operationId: deleteVM\n      responses:\n        204:\n          description: The VM instance was successfully deleted.\n\n  /vm.boot:\n    put:\n      summary: Boot the previously created VM instance.\n      operationId: bootVM\n      responses:\n        204:\n          description: The VM instance successfully booted.\n        404:\n          description: The VM instance could not boot because it is not created yet\n\n  /vm.pause:\n    put:\n      summary: Pause a previously booted VM instance.\n      operationId: pauseVM\n      responses:\n        204:\n          description: The VM instance successfully paused.\n        404:\n          description: The VM instance could not pause because it is not created yet\n        405:\n          description: The VM instance could not pause because it is not booted.\n\n  /vm.resume:\n    put:\n      summary: Resume a previously paused VM instance.\n      operationId: resumeVM\n      responses:\n        204:\n          description: The VM instance successfully paused.\n        404:\n          description: The VM instance could not resume because it is not booted yet\n        405:\n          description: The VM instance could not resume because it is not paused.\n\n  /vm.shutdown:\n    put:\n      summary: Shut the VM instance down.\n      operationId: shutdownVM\n      responses:\n        204:\n          description: The VM instance successfully shut down.\n        404:\n          description: The VM instance could not shut down because is not created.\n        405:\n          description: The VM instance could not shut down because it is not started.\n\n  /vm.reboot:\n    put:\n      summary: Reboot the VM instance.\n      operationId: rebootVM\n      responses:\n        204:\n          description: The VM instance successfully rebooted.\n        404:\n          description: The VM instance could not reboot because it is not created.\n        405:\n          description: The VM instance could not reboot because it is not booted.\n\n  /vm.power-button:\n    put:\n      summary: Trigger a power button in the VM\n      operationId: power-buttonVM\n      responses:\n        204:\n          description: Power button successfully triggered in the VM\n        404:\n          description: The button could not be triggered because it is not created yet\n        405:\n          description: The button could not be triggered because it is not booted.\n\n  /vm.resize:\n    put:\n      summary: Resize the VM\n      requestBody:\n        description: The target size for the VM\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/VmResize'\n        required: true\n      responses:\n        204:\n          description: The VM instance was successfully resized.\n        404:\n          description: The VM instance could not be resized because it is not created.\n\n  /vm.resize-zone:\n    put:\n      summary: Resize a memory zone\n      requestBody:\n        description: The target size for the memory zone\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/VmResizeZone'\n        required: true\n      responses:\n        204:\n          description: The memory zone was successfully resized.\n        500:\n          description: The memory zone could not be resized.\n\n  /vm.add-device:\n    put:\n      summary: Add a new device to the VM\n      requestBody:\n        description: The path of the new device\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/VmAddDevice'\n        required: true\n      responses:\n        200:\n          description: The new device was successfully added to the VM instance.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PciDeviceInfo'\n        204:\n          description: The new device was successfully (cold) added to the VM instance.\n        404:\n          description: The new device could not be added to the VM instance.\n\n  /vm.remove-device:\n    put:\n      summary: Remove a device from the VM\n      requestBody:\n        description: The identifier of the device\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/VmRemoveDevice'\n        required: true\n      responses:\n        204:\n          description: The device was successfully removed from the VM instance.\n        404:\n          description: The device could not be removed from the VM instance.\n\n  /vm.add-disk:\n    put:\n      summary: Add a new disk to the VM\n      requestBody:\n        description: The details of the new disk\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/DiskConfig'\n        required: true\n      responses:\n        200:\n          description: The new disk was successfully added to the VM instance.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PciDeviceInfo'\n        204:\n          description: The new disk was successfully (cold) added to the VM instance.\n        500:\n          description: The new disk could not be added to the VM instance.\n\n  /vm.add-fs:\n    put:\n      summary: Add a new virtio-fs device to the VM\n      requestBody:\n        description: The details of the new virtio-fs\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/FsConfig'\n        required: true\n      responses:\n        200:\n          description: The new device was successfully added to the VM instance.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PciDeviceInfo'\n        204:\n          description: The new device was successfully (cold) added to the VM instance.\n        500:\n          description: The new device could not be added to the VM instance.\n\n  /vm.add-pmem:\n    put:\n      summary: Add a new pmem device to the VM\n      requestBody:\n        description: The details of the new pmem device\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/PmemConfig'\n        required: true\n      responses:\n        200:\n          description: The new device was successfully added to the VM instance.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PciDeviceInfo'\n        204:\n          description: The new device was successfully (cold) added to the VM instance.\n        500:\n          description: The new device could not be added to the VM instance.\n\n  /vm.add-net:\n    put:\n      summary: Add a new network device to the VM\n      requestBody:\n        description: The details of the new network device\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/NetConfig'\n        required: true\n      responses:\n        200:\n          description: The new device was successfully added to the VM instance.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PciDeviceInfo'\n        204:\n          description: The new device was successfully (cold) added to the VM instance.\n        500:\n          description: The new device could not be added to the VM instance.\n\n  /vm.add-vsock:\n    put:\n      summary: Add a new vsock device to the VM\n      requestBody:\n        description: The details of the new vsock device\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/VsockConfig'\n        required: true\n      responses:\n        200:\n          description: The new device was successfully added to the VM instance.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PciDeviceInfo'\n        204:\n          description: The new device was successfully (cold) added to the VM instance.\n        500:\n          description: The new device could not be added to the VM instance.\n  \n  /vm.add-vdpa:\n    put:\n      summary: Add a new vDPA device to the VM\n      requestBody:\n        description: The details of the new vDPA device\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/VdpaConfig'\n        required: true\n      responses:\n        200:\n          description: The new vDPA device was successfully added to the VM instance.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PciDeviceInfo'\n        204:\n          description: The new vDPA device was successfully (cold) added to the VM instance.\n        500:\n          description: The new vDPA device could not be added to the VM instance.\n\n  /vm.snapshot:\n    put:\n      summary: Returns a VM snapshot.\n      requestBody:\n        description: The snapshot configuration\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/VmSnapshotConfig'\n        required: true\n      responses:\n        204:\n          description: The VM instance was successfully snapshotted.\n        404:\n          description: The VM instance could not be snapshotted because it is not created.\n        405:\n          description: The VM instance could not be snapshotted because it is not booted.\n\n  /vm.restore:\n    put:\n      summary: Restore a VM from a snapshot.\n      requestBody:\n        description: The restore configuration\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/RestoreConfig'\n        required: true\n      responses:\n        204:\n          description: The VM instance was successfully restored.\n        404:\n          description: The VM instance could not be restored because it is already created.\n\n  /vm.receive-migration:\n    put:\n      summary: Receive a VM migration from URL\n      requestBody:\n        description: The URL for the reception of migration state\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/ReceiveMigrationData'\n        required: true\n      responses:\n        204:\n          description: The VM migration was successfully received.\n        500:\n          description: The VM migration could not be received.\n\n  /vm.send-migration:\n    put:\n      summary: Send a VM migration to URL\n      requestBody:\n        description: The URL for sending the migration state\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/SendMigrationData'\n        required: true\n      responses:\n        204:\n          description: The VM migration was successfully sent.\n        500:\n          description: The VM migration could not be sent.\n\ncomponents:\n  schemas:\n\n    VmmPingResponse:\n      required:\n      - version\n      type: object\n      properties:\n        version:\n          type: string\n      description: Virtual Machine Monitor information\n\n    VmInfo:\n      required:\n      - config\n      - state\n      type: object\n      properties:\n        config:\n          $ref: '#/components/schemas/VmConfig'\n        state:\n          type: string\n          enum: [Created, Running, Shutdown, Paused]\n        memory_actual_size:\n          type: integer\n          format: int64\n        device_tree:\n          type: object\n          additionalProperties:\n            $ref: '#/components/schemas/DeviceNode'\n      description: Virtual Machine information\n\n    DeviceNode:\n      type: object\n      properties:\n        id:\n          type: string\n        resources:\n          type: array\n          items:\n            # Rust enum type (with data) which can't be better represented here\n            type: object\n        children:\n          type: array\n          items:\n            type: string\n        pci_bdf:\n          type: string\n\n    VmCounters:\n      type: object\n      additionalProperties:\n        type: object\n        additionalProperties:\n          type: integer\n          format: int64\n\n    PciDeviceInfo:\n      required:\n      - id\n      - bdf\n      type: object\n      properties:\n        id:\n          type: string\n        bdf:\n          type: string\n      description: Information about a PCI device\n\n    VmConfig:\n      required:\n      - kernel\n      type: object\n      properties:\n        cpus:\n          $ref: '#/components/schemas/CpusConfig'\n        memory:\n          $ref: '#/components/schemas/MemoryConfig'\n        kernel:\n          $ref: '#/components/schemas/KernelConfig'\n        initramfs:\n          $ref: '#/components/schemas/InitramfsConfig'\n        cmdline:\n          $ref: '#/components/schemas/CmdLineConfig'\n        disks:\n          type: array\n          items:\n            $ref: '#/components/schemas/DiskConfig'\n        net:\n          type: array\n          items:\n            $ref: '#/components/schemas/NetConfig'\n        rng:\n          $ref: '#/components/schemas/RngConfig'\n        balloon:\n          $ref: '#/components/schemas/BalloonConfig'\n        fs:\n          type: array\n          items:\n            $ref: '#/components/schemas/FsConfig'\n        pmem:\n          type: array\n          items:\n            $ref: '#/components/schemas/PmemConfig'\n        serial:\n          $ref: '#/components/schemas/ConsoleConfig'\n        console:\n          $ref: '#/components/schemas/ConsoleConfig'\n        devices:\n          type: array\n          items:\n            $ref: '#/components/schemas/DeviceConfig'\n        vdpa:\n          type: array\n          items:\n            $ref: '#/components/schemas/VdpaConfig'\n        vsock:\n            $ref: '#/components/schemas/VsockConfig'\n        sgx_epc:\n          type: array\n          items:\n            $ref: '#/components/schemas/SgxEpcConfig'\n        tdx:\n          $ref: '#/components/schemas/TdxConfig'\n        numa:\n          type: array\n          items:\n            $ref: '#/components/schemas/NumaConfig'\n        iommu:\n          type: boolean\n          default: false\n        watchdog:\n          type: boolean\n          default: false\n        platform:\n          $ref: '#/components/schemas/PlatformConfig'\n      description: Virtual machine configuration\n\n    CpuAffinity:\n      type: object\n      properties:\n        vcpu:\n          type: integer\n        host_cpus:\n          type: array\n          items:\n            type: integer\n\n    CpuFeatures:\n      type: object\n      properties:\n        amx:\n          type: boolean\n\n    CpuTopology:\n      type: object\n      properties:\n        threads_per_core:\n          type: integer\n        cores_per_die:\n          type: integer\n        dies_per_package:\n          type: integer\n        packages:\n          type: integer\n\n    CpusConfig:\n      required:\n      - boot_vcpus\n      - max_vcpus\n      type: object\n      properties:\n        boot_vcpus:\n          minimum: 1\n          default: 1\n          type: integer\n        max_vcpus:\n          minimum: 1\n          default: 1\n          type: integer\n        topology:\n          $ref: '#/components/schemas/CpuTopology'\n        max_phys_bits:\n          type: integer\n        affinity:\n          type: array\n          items:\n            $ref: '#/components/schemas/CpuAffinity'\n        features:\n          $ref: '#/components/schemas/CpuFeatures'\n\n    PlatformConfig:\n      type: object\n      properties:\n        num_pci_segments:\n          type: integer\n          format: int16\n        iommu_segments:\n          type: array\n          items:\n            type: integer\n            format: int16\n\n    MemoryZoneConfig:\n      required:\n      - id\n      - size\n      type: object\n      properties:\n        id:\n          type: string\n        size:\n          type: integer\n          format: int64\n          default: 512 MB\n        file:\n          type: string\n        mergeable:\n          type: boolean\n          default: false\n        shared:\n          type: boolean\n          default: false\n        hugepages:\n          type: boolean\n          default: false\n        hugepage_size:\n          type: integer\n          format: int64\n        host_numa_node:\n          type: integer\n          format: int32\n        hotplug_size:\n          type: integer\n          format: int64\n        hotplugged_size:\n          type: integer\n          format: int64\n        prefault:\n          type: boolean\n          default: false\n\n    MemoryConfig:\n      required:\n      - size\n      type: object\n      properties:\n        size:\n          type: integer\n          format: int64\n          default: 512 MB\n        hotplug_size:\n          type: integer\n          format: int64\n        hotplugged_size:\n          type: integer\n          format: int64\n        mergeable:\n          type: boolean\n          default: false\n        hotplug_method:\n          type: string\n          default: \"Acpi\"\n        shared:\n          type: boolean\n          default: false\n        hugepages:\n          type: boolean\n          default: false\n        hugepage_size:\n          type: integer\n          format: int64\n        prefault:\n          type: boolean\n          default: false\n        zones:\n          type: array\n          items:\n            $ref: '#/components/schemas/MemoryZoneConfig'\n\n    KernelConfig:\n      required:\n      - path\n      type: object\n      properties:\n        path:\n          type: string\n\n    InitramfsConfig:\n      nullable: true\n      required:\n      - path\n      type: object\n      properties:\n        path:\n          type: string\n\n    CmdLineConfig:\n      required:\n      - args\n      type: object\n      properties:\n        args:\n          type: string\n\n    TokenBucket:\n      required:\n      - size\n      - refill_time\n      type: object\n      properties:\n        size:\n          type: integer\n          format: int64\n          minimum: 0\n          description: The total number of tokens this bucket can hold.\n        one_time_burst:\n          type: integer\n          format: int64\n          minimum: 0\n          description: The initial size of a token bucket.\n        refill_time:\n          type: integer\n          format: int64\n          minimum: 0\n          description: The amount of milliseconds it takes for the bucket to refill.\n      description:\n        Defines a token bucket with a maximum capacity (_size_), an initial burst size\n        (_one_time_burst_) and an interval for refilling purposes (_refill_time_).\n        The refill-rate is derived from _size_ and _refill_time_, and it is the constant\n        rate at which the tokens replenish. The refill process only starts happening after\n        the initial burst budget is consumed.\n        Consumption from the token bucket is unbounded in speed which allows for bursts\n        bound in size by the amount of tokens available.\n        Once the token bucket is empty, consumption speed is bound by the refill-rate.\n\n    RateLimiterConfig:\n      type: object\n      properties:\n        bandwidth:\n          $ref: '#/components/schemas/TokenBucket'\n        ops:\n          $ref: '#/components/schemas/TokenBucket'\n      description:\n        Defines an IO rate limiter with independent bytes/s and ops/s limits.\n        Limits are defined by configuring each of the _bandwidth_ and _ops_ token buckets.\n\n    DiskConfig:\n      required:\n      - path\n      type: object\n      properties:\n        path:\n          type: string\n        readonly:\n          type: boolean\n          default: false\n        direct:\n          type: boolean\n          default: false\n        iommu:\n          type: boolean\n          default: false\n        num_queues:\n          type: integer\n          default: 1\n        queue_size:\n          type: integer\n          default: 128\n        vhost_user:\n          type: boolean\n          default: false\n        vhost_socket:\n          type: string\n        poll_queue:\n          type: boolean\n          default: true\n        rate_limiter_config:\n            $ref: '#/components/schemas/RateLimiterConfig'\n        pci_segment:\n          type: integer\n          format: int16\n        id:\n          type: string\n\n    NetConfig:\n      type: object\n      properties:\n        tap:\n          type: string\n        ip:\n          type: string\n          default: \"192.168.249.1\"\n        mask:\n          type: string\n          default: \"255.255.255.0\"\n        mac:\n          type: string\n        iommu:\n          type: boolean\n          default: false\n        num_queues:\n          type: integer\n          default: 2\n        queue_size:\n          type: integer\n          default: 256\n        vhost_user:\n          type: boolean\n          default: false\n        vhost_socket:\n          type: string\n        vhost_mode:\n          type: string\n          default: \"Client\"\n        id:\n          type: string\n        pci_segment:\n          type: integer\n          format: int16\n        rate_limiter_config:\n            $ref: '#/components/schemas/RateLimiterConfig'\n\n    RngConfig:\n      required:\n      - src\n      type: object\n      properties:\n        src:\n          type: string\n          default: \"/dev/urandom\"\n        iommu:\n          type: boolean\n          default: false\n\n    BalloonConfig:\n      required:\n      - size\n      type: object\n      properties:\n        size:\n          type: integer\n          format: int64\n        deflate_on_oom:\n          type: boolean\n          default: false\n          description: Deflate balloon when the guest is under memory pressure.\n        free_page_reporting:\n          type: boolean\n          default: false\n          description: Enable guest to report free pages.\n\n    FsConfig:\n      required:\n      - cache_size\n      - dax\n      - num_queues\n      - queue_size\n      - socket\n      - tag\n      type: object\n      properties:\n        tag:\n          type: string\n        socket:\n          type: string\n        num_queues:\n          type: integer\n          default: 1\n        queue_size:\n          type: integer\n          default: 1024\n        dax:\n          type: boolean\n          default: true\n        cache_size:\n          type: integer\n          format: int64\n          default: 8589934592\n        pci_segment:\n          type: integer\n          format: int16\n        id:\n          type: string\n\n    PmemConfig:\n      required:\n      - file\n      type: object\n      properties:\n        file:\n          type: string\n        size:\n          type: integer\n          format: int64\n        iommu:\n          type: boolean\n          default: false\n        mergeable:\n          type: boolean\n          default: false\n        discard_writes:\n          type: boolean\n          default: false\n        pci_segment:\n          type: integer\n          format: int16\n        id:\n          type: string\n\n    ConsoleConfig:\n      required:\n      - mode\n      type: object\n      properties:\n        file:\n          type: string\n        mode:\n          type: string\n          enum: [Off, Pty, Tty, File, Null]\n        iommu:\n          type: boolean\n          default: false\n\n    DeviceConfig:\n      required:\n      - path\n      type: object\n      properties:\n        path:\n          type: string\n        iommu:\n          type: boolean\n          default: false\n        pci_segment:\n          type: integer\n          format: int16\n        id:\n          type: string\n\n    VdpaConfig:\n      required:\n      - path\n      - num_queues\n      type: object\n      properties:\n        path:\n          type: string\n        num_queues:\n          type: integer\n          default: 1\n        pci_segment:\n          type: integer\n          format: int16\n        id:\n          type: string\n\n    VsockConfig:\n      required:\n      - cid\n      - socket\n      type: object\n      properties:\n        cid:\n          type: integer\n          format: int64\n          minimum: 3\n          description: Guest Vsock CID\n        socket:\n          type: string\n          description: Path to UNIX domain socket, used to proxy vsock connections.\n        iommu:\n          type: boolean\n          default: false\n        pci_segment:\n          type: integer\n          format: int16\n        id:\n          type: string\n\n    SgxEpcConfig:\n      required:\n      - id\n      - size\n      type: object\n      properties:\n        id:\n          type: string\n        size:\n          type: integer\n          format: int64\n        prefault:\n          type: boolean\n          default: false\n\n    TdxConfig:\n      required:\n      - firmware\n      type: object\n      properties:\n        firmware:\n          type: string\n          description: Path to the firmware that will be used to boot the TDx guest up.\n\n    NumaDistance:\n      required:\n      - destination\n      - distance\n      type: object\n      properties:\n        destination:\n          type: integer\n          format: int32\n        distance:\n          type: integer\n          format: int32\n\n    NumaConfig:\n      required:\n      - guest_numa_id\n      type: object\n      properties:\n        guest_numa_id:\n          type: integer\n          format: int32\n        cpus:\n          type: array\n          items:\n            type: integer\n            format: int32\n        distances:\n          type: array\n          items:\n            $ref: '#/components/schemas/NumaDistance'\n        memory_zones:\n          type: array\n          items:\n            type: string\n        sgx_epc_sections:\n          type: array\n          items:\n            type: string\n\n    VmResize:\n      type: object\n      properties:\n        desired_vcpus:\n          minimum: 1\n          type: integer\n        desired_ram:\n          description: desired memory ram in bytes\n          type: integer\n          format: int64\n        desired_balloon:\n          description: desired balloon size in bytes\n          type: integer\n          format: int64\n\n    VmResizeZone:\n      type: object\n      properties:\n        id:\n          type: string\n        desired_ram:\n          description: desired memory zone size in bytes\n          type: integer\n          format: int64\n\n    VmAddDevice:\n      type: object\n      properties:\n        path:\n          type: string\n        iommu:\n          type: boolean\n          default: false\n        id:\n          type: string\n\n    VmRemoveDevice:\n      type: object\n      properties:\n        id:\n          type: string\n\n    VmSnapshotConfig:\n      type: object\n      properties:\n        destination_url:\n          type: string\n\n    RestoreConfig:\n      required:\n      - source_url\n      type: object\n      properties:\n        source_url:\n          type: string\n        prefault:\n          type: boolean\n\n    ReceiveMigrationData:\n      required:\n      - receiver_url\n      type: object\n      properties:\n        receiver_url:\n          type: string\n\n    SendMigrationData:\n      required:\n      - destination_url\n      type: object\n      properties:\n        destination_url:\n          type: string\n        local:\n          type: boolean\n"
		}
	},
	"Error": "parse: parse spec: paths: /vm.info: get: operation \"\": responses: 200: content: \"application/json\": schema: parse schema: resolve \"#/components/schemas/VmInfo\": parse schema: property \"config\": parse schema: resolve \"#/components/schemas/VmConfig\": parse schema: property \"console\": parse schema: resolve \"#/components/schemas/ConsoleConfig\": parse schema: property \"mode\": parse enum values: parse value \"false\": expected type \"string\", got \"bool\""
}