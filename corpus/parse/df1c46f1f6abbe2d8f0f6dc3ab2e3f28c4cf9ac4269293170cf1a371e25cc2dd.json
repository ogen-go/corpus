{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/dcsaorg/DCSA-OpenAPI"
		},
		"file": {
			"name": "tnt.yaml",
			"size": 0,
			"path": "tnt/v3/tnt.yaml",
			"byteSize": 27868,
			"content": "openapi: 3.0.3\ninfo:\n  version: 3.0.0-Beta-1\n  title: 'DCSA OpenAPI specification for Track \u0026 Trace'\n  description: |\n    Managing and sending `ShipmentEvents`, `TransportEvents` and `EquipmentEvents` and subscriptions for **Track \u0026amp; Trace** (T\u0026amp;T). API specification issued by DCSA.org.\n    \n    For explanation to specific values or objects please refer to the [Information Model 2022.{to be updated}](https://dcsa.my.salesforce.com/sfc/p/#2o000000YvHJ/a/7T0000005DYt/jyzttKZQS1vxdd6dAFkWYi4F5RMiz38EsGwCBGhp1ic)\n    \n    Polling can be done on the\n    \n        GET /v3/events\n    \n    endPoint. It is also possible to setup a subscription on the\n    \n        /v3/event-subscriptions\n\n    endPoints in order to use the push model. Here events are pushed as they occur.\n\n    For a changelog please click [here](https://github.com/dcsaorg/DCSA-OpenAPI/blob/master/tnt/v3#v300). Please also [create a GitHub issue](https://github.com/dcsaorg/DCSA-OpenAPI/issues/new) if you have any questions/comments.\n  license:\n    name: Apache 2.0\n    url: http://www.apache.org/licenses/LICENSE-2.0.html\n  contact:\n    name: Digital Container Shipping Association (DCSA)\n    url: https://dcsa.org\n    email: info@dcsa.org\ntags:\n  - name: Events\n    description: Event operations\n  - name: Subscriptions\n    description: Subscription operations\n  - name: Secret\n    description: Update secret\npaths:\n  /v3/events:\n    get:\n      tags:\n        - Events\n      summary: Find events.\n      description: |\n        Returns all events filtered by the queryParameters.\n        \n        **NB**: It is possible to combine queryParameters. When combining queryParameters be aware that it is also possible to make combinations that are mutual contradicting. Example:\n        \n            shipmentEventTypeCode=DRFT \u0026 equipmentEventTypeCode=GTIN\n        \n        Since there is no event that can be a ShipmentEvent **and** an EquipmentEvent at the same time **this will return an empty list**!\n      parameters:\n        # OBS: Be aware that changing the parameters requires a manual change in other APIs\n\n        # Chunk with Metadata Event related parameters\n\n        - $ref: 'https://api.swaggerhub.com/domains/dcsaorg/EVENT_DOMAIN/3.0.0#/components/parameters/eventCreatedDateTime'\n        - $ref: 'https://api.swaggerhub.com/domains/dcsaorg/EVENT_DOMAIN/3.0.0#/components/parameters/eventDateTime'\n        # The eventType parameter is needed when more than one Event type can be returned\n        - name: eventType\n          in: query\n          description: |\n            The type of event(s) to filter by. Possible values are\n            \n            - SHIPMENT (Shipment events)\n            - TRANSPORT (Transport events)\n            - EQUIPMENT (Equipment events)\n            \n            It is possible to select multiple values by comma `,` separating them. For multiple values the **OR**-operator is used. For example\n            \n                eventType=SHIPMENT,EQUIPMENT\n            \n            matches **both** `ShipmentEvents` and `EquipmentEvents`.\n            \n            Default value is all `eventTypes`.\n          required: false\n          style: form\n          explode: false\n          schema:\n            default: SHIPMENT,TRANSPORT,EQUIPMENT\n            type: array\n            items:\n              type: string\n              enum:\n                - SHIPMENT\n                - TRANSPORT\n                - EQUIPMENT\n\n        # Chunk with Shipment related event parameters\n        - $ref: 'https://api.swaggerhub.com/domains/dcsaorg/EVENT_DOMAIN/3.0.0#/components/parameters/shipmentEventTypeCode'\n        - $ref: 'https://api.swaggerhub.com/domains/dcsaorg/EVENT_DOMAIN/3.0.0#/components/parameters/documentTypeCode'\n        - $ref: 'https://api.swaggerhub.com/domains/dcsaorg/EVENT_DOMAIN/3.0.0#/components/parameters/documentReference'\n        # - $ref: 'https://api.swaggerhub.com/domains/dcsaorg/EVENT_DOMAIN/3.0.0#/components/parameters/equipmentReference'\n        # - $ref: 'https://api.swaggerhub.com/domains/dcsaorg/EVENT_DOMAIN/3.0.0#/components/parameters/carrierBookingReference'\n        # - $ref: 'https://api.swaggerhub.com/domains/dcsaorg/EVENT_DOMAIN/3.0.0#/components/parameters/transportDocumentReference'\n\n        # Chunk with Transport related event parameters\n        - $ref: 'https://api.swaggerhub.com/domains/dcsaorg/EVENT_DOMAIN/3.0.0#/components/parameters/transportEventTypeCode'\n\n        # Chunk with Equipment related event parameters\n        - $ref: 'https://api.swaggerhub.com/domains/dcsaorg/EVENT_DOMAIN/3.0.0#/components/parameters/equipmentEventTypeCode'\n        - $ref: 'https://api.swaggerhub.com/domains/dcsaorg/EVENT_DOMAIN/3.0.0#/components/parameters/equipmentReference'\n\n        # Chunk with TransportCall related event parameters (used both in Equipment- and Transport-Events)\n        - $ref: 'https://api.swaggerhub.com/domains/dcsaorg/EVENT_DOMAIN/3.0.0#/components/parameters/transportCallReference'\n        - $ref: 'https://api.swaggerhub.com/domains/dcsaorg/EVENT_DOMAIN/3.0.0#/components/parameters/vesselIMONumber'\n        - $ref: 'https://api.swaggerhub.com/domains/dcsaorg/EVENT_DOMAIN/3.0.0#/components/parameters/carrierExportVoyageNumber'\n        - $ref: 'https://api.swaggerhub.com/domains/dcsaorg/EVENT_DOMAIN/3.0.0#/components/parameters/universalExportVoyageReference'\n        - $ref: 'https://api.swaggerhub.com/domains/dcsaorg/EVENT_DOMAIN/3.0.0#/components/parameters/carrierServiceCode'\n        - $ref: 'https://api.swaggerhub.com/domains/dcsaorg/EVENT_DOMAIN/3.0.0#/components/parameters/universalServiceReference'\n        - $ref: 'https://api.swaggerhub.com/domains/dcsaorg/EVENT_DOMAIN/3.0.0#/components/parameters/UNLocationCode'\n\n\n        # Chunk with event parameters needed to be included in all APIs\n        - $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/2.0.3#/components/parameters/limit'\n        - $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/2.0.3#/components/parameters/cursor'\n        - $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/2.0.3#/components/parameters/sort'\n        - $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/2.0.3#/components/parameters/Api-Version-Major'\n      responses:\n        '200':\n          description: Successful operation\n          headers:\n            API-Version:\n              $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/2.0.3#/components/headers/API-Version'\n            Current-Page:\n              $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/2.0.3#/components/headers/Current-Page'\n            Next-Page:\n              $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/2.0.3#/components/headers/Next-Page'\n            Prev-Page:\n              $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/2.0.3#/components/headers/Prev-Page'\n            Last-Page:\n              $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/2.0.3#/components/headers/Last-Page'\n            First-Page:\n              $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/2.0.3#/components/headers/First-Page'\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  oneOf:\n                    - $ref: 'https://api.swaggerhub.com/domains/dcsaorg/EVENT_DOMAIN/3.0.0#/components/schemas/shipmentEvent'\n                    - $ref: 'https://api.swaggerhub.com/domains/dcsaorg/EVENT_DOMAIN/3.0.0#/components/schemas/equipmentEvent'\n                    - $ref: 'https://api.swaggerhub.com/domains/dcsaorg/EVENT_DOMAIN/3.0.0#/components/schemas/transportEvent'\n        default:\n          description: Unexpected error\n          headers:\n            API-Version:\n              $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/2.0.3#/components/headers/API-Version'\n          content:\n            application/json:\n              schema:\n                allOf:\n                  - $ref: 'https://api.swaggerhub.com/domains/dcsaorg/ERROR_DOMAIN/1.1.0#/components/schemas/error'\n                  - type: object\n                    properties:\n                      httpMethod:\n                        example: GET\n                  - type: object\n                    properties:\n                      requestUri:\n                        example: 'https://dcsa.org/dcsa/tnt/v3/events'\n  /v3/events/{eventID}:\n    get:\n      tags:\n        - Events\n      summary: Find event by eventID.\n      description: Returns the event with the specified `eventID`.\n      parameters:\n        - $ref: 'https://api.swaggerhub.com/domains/dcsaorg/EVENT_DOMAIN/3.0.0#/components/parameters/eventID'\n      responses:\n        '200':\n          description: Successful operation\n          headers:\n            API-Version:\n              $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/2.0.3#/components/headers/API-Version'\n          content:\n            application/json:\n              schema:\n                oneOf:\n                  - $ref: 'https://api.swaggerhub.com/domains/dcsaorg/EVENT_DOMAIN/3.0.0#/components/schemas/shipmentEvent'\n                  - $ref: 'https://api.swaggerhub.com/domains/dcsaorg/EVENT_DOMAIN/3.0.0#/components/schemas/equipmentEvent'\n                  - $ref: 'https://api.swaggerhub.com/domains/dcsaorg/EVENT_DOMAIN/3.0.0#/components/schemas/transportEvent'\n                discriminator:\n                  propertyName: eventType\n              examples:\n                Shipment Event:\n                  value:\n                    metadata:\n                      eventID: '84db923d-2a19-4eb0-beb5-446c1ec57d34'\n                      eventCreatedDateTime: '2022-09-19T06:31:00+02:00'\n                      eventType: 'SHIPMENT'\n                    payload:\n                      eventClassifierCode: 'ACT'\n                      eventDateTime: '2022-09-19T06:31:00+02:00'\n                      shipmentEventTypeCode: 'ISSU'\n                      documentTypeCode: 'TRD'\n                      documentReference: '84db923d-2a19-4eb0-beb5-446c1ec57d34'\n                      reason: 'All good'\n                      relatedDocumentReferences:\n                        - relatedDocumentReferenceType: 'BKG'\n                          relatedDocumentReferenceValue: 'ABC123059'\n                      references:\n                        - referenceType: 'EQ'\n                          referenceValue: 'APZU4812090'\n                Retracted Transport Event:\n                  value:\n                    metadata:\n                      eventID: '2239d040-78c9-4172-8863-89428af41a0e'\n                      eventCreatedDateTime: '2022-09-20T07:41:00+08:30'\n                      eventType: 'TRANSPORT'\n                      retractedEventID: '957e4966-dad0-4111-9f8f-fb7216c43907'\n        default:\n          description: Unexpected error\n          headers:\n            API-Version:\n              $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/2.0.3#/components/headers/API-Version'\n          content:\n            application/json:\n              schema:\n                allOf:\n                  - $ref: 'https://api.swaggerhub.com/domains/dcsaorg/ERROR_DOMAIN/1.1.0#/components/schemas/error'\n                  - type: object\n                    properties:\n                      httpMethod:\n                        example: GET\n                  - type: object\n                    properties:\n                      requestUri:\n                        example: 'https://dcsa.org/dcsa/tnt/v3/events/123e4567-e89b-12d3-a456-426614174000'\n\n  /v3/event-subscriptions:\n    get:\n      tags:\n      - Subscriptions\n      summary: Receive a list of your active subscriptions\n      parameters:\n        - $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/2.0.3#/components/parameters/limit'\n        - $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/2.0.3#/components/parameters/cursor'\n        - $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/2.0.3#/components/parameters/sort'\n        - $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/2.0.3#/components/parameters/Api-Version-Major'\n      responses:\n        '200':\n          description: Returns a list of subscriptions\n          headers:\n            API-Version:\n              $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/2.0.3#/components/headers/API-Version'\n            Current-Page:\n              $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/2.0.3#/components/headers/Current-Page'\n            Next-Page:\n              $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/2.0.3#/components/headers/Next-Page'\n            Prev-Page:\n              $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/2.0.3#/components/headers/Prev-Page'\n            Last-Page:\n              $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/2.0.3#/components/headers/Last-Page'\n            First-Page:\n              $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/2.0.3#/components/headers/First-Page'\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/subscription'\n        default:\n          description: Unexpected error\n          headers:\n            API-Version:\n              $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/2.0.3#/components/headers/API-Version'\n          content:\n            application/json:\n              schema:\n                allOf:\n                  - $ref: 'https://api.swaggerhub.com/domains/dcsaorg/ERROR_DOMAIN/1.1.0#/components/schemas/error'\n                  - type: object\n                    properties:\n                      httpMethod:\n                        example: GET\n                  - type: object\n                    properties:\n                      requestUri:\n                        example: 'https://dcsa.org/dcsa/tnt/v3/event-subscriptions'\n    post:\n      tags:\n      - Subscriptions\n      summary: Create a subscription\n      parameters:\n        - $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/2.0.3#/components/parameters/Api-Version-Major'\n      requestBody:\n        description: |\n          Parameters used to configure the subscription. It is possible to only receive cirtain types of events by adding filter values to the subscription.\n          \n          All values in the subscription body except: `callback`, `secret` and `subscriptionID` will be used as filters. All filters specified **must** be fulfilled in order to match an Event.\n          \n          A logical **AND** is used between filters. So\n          \n              shipmentEventTypeCode=DRFT\u0026carrierBookingReference=ABC123123\n          \n          means that the events matched ***must*** both be in draft status (`shipmentEventTypeCode=DRFT`) **and** be connected to carrierBookingReference ABC123123 (`carrierBookingReference=ABC123123`)\n          \n          Filters that are specified as `,` (comma) separated lists use logical **OR** between list values. So\n          \n              eventType=SHIPMENT,TRANSPORT\n          \n          means that **both** `ShipmentEvents` **and** `TransportEvents` will be matched by this subscription.\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/subscriptionBodyWithSecret'\n      responses:\n        '201':\n          description: Subscription created\n          headers:\n            API-Version:\n              $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/2.0.3#/components/headers/API-Version'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/subscription'\n        default:\n          description: Unexpected error\n          headers:\n            API-Version:\n              $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/2.0.3#/components/headers/API-Version'\n          content:\n            application/json:\n              schema:\n                allOf:\n                  - $ref: 'https://api.swaggerhub.com/domains/dcsaorg/ERROR_DOMAIN/1.1.0#/components/schemas/error'\n                  - type: object\n                    properties:\n                      httpMethod:\n                        example: POST\n                  - type: object\n                    properties:\n                      requestUri:\n                        example: 'https://dcsa.org/dcsa/tnt/v3/event-subscriptions'\n      callbacks:\n        event:\n          '{$request.body.callbackUrl}':\n            post:   # Method\n              parameters:\n                - $ref: 'https://api.swaggerhub.com/domains/dcsaorg/EVENT_DOMAIN/3.0.0#/components/parameters/signatureHeader'\n                - $ref: 'https://api.swaggerhub.com/domains/dcsaorg/EVENT_DOMAIN/3.0.0#/components/parameters/subscriptionIDHeader'\n                - $ref: 'https://api.swaggerhub.com/domains/dcsaorg/EVENT_DOMAIN/3.0.0#/components/parameters/notificationSignature'\n                - $ref: 'https://api.swaggerhub.com/domains/dcsaorg/EVENT_DOMAIN/3.0.0#/components/parameters/apiVersion'\n              description: |\n                Whenever an event occurs that matches a subscription a `POST` call will be made to the `callbackUrl`. The request will be a list of events and contain the `subscriptionID` in the header originating the request.\n                \n                It is up to the receiver of the request to validate the content and make sure it is not sent from a malicious sender. This process is documented in the [DCSA Subscription Callback API 1.0](file:///C:/Users/Henrik/Downloads/202109_DCSA-Subscription-Callback-API_1.0_Final.pdf).\n                \n                When the `POST` request is accepted by the receiver a `204` (No Content) **MUST** be returned.\n              requestBody: # Contents of the callback message\n                required: true\n                content:\n                  application/json:\n                    schema:\n                      type: array\n                      items:\n                        oneOf:\n                          - $ref: 'https://api.swaggerhub.com/domains/dcsaorg/EVENT_DOMAIN/3.0.0#/components/schemas/shipmentEvent'\n                          - $ref: 'https://api.swaggerhub.com/domains/dcsaorg/EVENT_DOMAIN/3.0.0#/components/schemas/equipmentEvent'\n                          - $ref: 'https://api.swaggerhub.com/domains/dcsaorg/EVENT_DOMAIN/3.0.0#/components/schemas/transportEvent'\n              responses:   # Expected responses to the callback message\n                '204':\n                  description: 'Your server returns this code if it accepts the callback'\n  /v3/event-subscriptions/{subscriptionID}:\n    get:\n      tags:\n      - Subscriptions\n      summary: Find a subscription by subscription ID\n      parameters:\n        - $ref: 'https://api.swaggerhub.com/domains/dcsaorg/EVENT_DOMAIN/3.0.0#/components/parameters/subscriptionID'\n        - $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/2.0.3#/components/parameters/Api-Version-Major'\n      responses:\n        '200':\n          description: Subscription returned\n          headers:\n            API-Version:\n              $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/2.0.3#/components/headers/API-Version'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/subscription'\n        default:\n          description: Unexpected error\n          headers:\n            API-Version:\n              $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/2.0.3#/components/headers/API-Version'\n          content:\n            application/json:\n              schema:\n                allOf:\n                  - $ref: 'https://api.swaggerhub.com/domains/dcsaorg/ERROR_DOMAIN/1.1.0#/components/schemas/error'\n                  - type: object\n                    properties:\n                      httpMethod:\n                        example: GET\n                  - type: object\n                    properties:\n                      requestUri:\n                        example: 'https://dcsa.org/dcsa/tnt/v3/event-subscriptions/8fbdc2d8-57c8-48b9-a04b-18fd8ec1d809'\n    delete:\n      tags:\n      - Subscriptions\n      summary: Stop a subscription, using the subscription ID\n      parameters:\n        - $ref: 'https://api.swaggerhub.com/domains/dcsaorg/EVENT_DOMAIN/3.0.0#/components/parameters/subscriptionID'\n        - $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/2.0.3#/components/parameters/Api-Version-Major'\n      responses:\n        '204':\n          description: Subscription stopped\n          headers:\n            API-Version:\n              $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/2.0.3#/components/headers/API-Version'\n        default:\n          description: Unexpected error\n          headers:\n            API-Version:\n              $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/2.0.3#/components/headers/API-Version'\n          content:\n            application/json:\n              schema:\n                allOf:\n                  - $ref: 'https://api.swaggerhub.com/domains/dcsaorg/ERROR_DOMAIN/1.1.0#/components/schemas/error'\n                  - type: object\n                    properties:\n                      httpMethod:\n                        example: DELETE\n                  - type: object\n                    properties:\n                      requestUri:\n                        example: 'https://dcsa.org/dcsa/tnt/v3/event-subscriptions/8fbdc2d8-57c8-48b9-a04b-18fd8ec1d809'\n    put:\n      tags:\n      - Subscriptions\n      summary: Alter a subscription using the `subscriptionID`\n      parameters:\n        - $ref: 'https://api.swaggerhub.com/domains/dcsaorg/EVENT_DOMAIN/3.0.0#/components/parameters/subscriptionID'\n        - $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/2.0.3#/components/parameters/Api-Version-Major'\n      requestBody:\n        description: Parameters used to configure the subscription\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/subscription'\n      responses:\n        '200':\n          description: Subscription updated\n          headers:\n            API-Version:\n              $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/2.0.3#/components/headers/API-Version'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/subscription'\n        default:\n          description: Unexpected error\n          headers:\n            API-Version:\n              $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/2.0.3#/components/headers/API-Version'\n          content:\n            application/json:\n              schema:\n                allOf:\n                  - $ref: 'https://api.swaggerhub.com/domains/dcsaorg/ERROR_DOMAIN/1.1.0#/components/schemas/error'\n                  - type: object\n                    properties:\n                      httpMethod:\n                        example: PUT\n                  - type: object\n                    properties:\n                      requestUri:\n                        example: 'https://dcsa.org/dcsa/tnt/v3/event-subscriptions/8fbdc2d8-57c8-48b9-a04b-18fd8ec1d809'\n  /v3/event-subscriptions/{subscriptionID}/secret:\n    put:\n      tags:\n      - Secret\n      summary: Resets the Secret on an existing subscription identified by subscription ID.\n      parameters:\n        - $ref: 'https://api.swaggerhub.com/domains/dcsaorg/EVENT_DOMAIN/3.0.0#/components/parameters/subscriptionID'\n        - $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/2.0.3#/components/parameters/Api-Version-Major'\n      requestBody:\n        description: Parameters used to configure the subscription\n        required: true\n        content:\n          application/json:\n            schema:\n              allOf:\n                - type: object\n                  properties:\n                    secret:\n                      $ref: 'https://api.swaggerhub.com/domains/dcsaorg/EVENT_DOMAIN/3.0.0#/components/schemas/secret'\n      responses:\n        '204':\n          description: Secret updated\n          headers:\n            API-Version:\n              $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/2.0.3#/components/headers/API-Version'\n        default:\n          description: Unexpected error\n          headers:\n            API-Version:\n              $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/2.0.3#/components/headers/API-Version'\n          content:\n            application/json:\n              schema:\n                allOf:\n                  - $ref: 'https://api.swaggerhub.com/domains/dcsaorg/ERROR_DOMAIN/1.1.0#/components/schemas/error'\n                  - type: object\n                    properties:\n                      httpMethod:\n                        example: PUT\n                  - type: object\n                    properties:\n                      requestUri:\n                        example: 'https://dcsa.org/dcsa/tnt/v3/event-subscriptions/8fbdc2d8-57c8-48b9-a04b-18fd8ec1d809/secret'\n\ncomponents:\n\n  ##############################\n  # All events and subscriptions\n  ##############################\n\n  schemas:\n    eventTypes:\n      type: array\n      description: |\n        List of `eventType` to filter by. If multiple values are selected - the **OR**-operator will be used.\n        \n        Possible values are\n        - SHIPMENT (Shipment events)\n        - TRANSPORT (Transport events)\n        - EQUIPMENT (Equipment events)\n        \n        Default is none as it will not filter on `eventType` if not specified.\n      example: [TRANSPORT,EQUIPMENT]\n      items:\n        type: string\n        enum:\n        - SHIPMENT\n        - TRANSPORT\n        - EQUIPMENT\n    subscriptionBody:\n      type: object\n      allOf:\n        - type: object\n          properties:\n            callbackUrl:\n              $ref: 'https://api.swaggerhub.com/domains/dcsaorg/EVENT_DOMAIN/3.0.0#/components/schemas/callbackUrl'\n        - type: object\n          properties:\n            eventType:\n              allOf:\n                - $ref: '#/components/schemas/eventTypes'\n        - $ref: 'https://api.swaggerhub.com/domains/dcsaorg/EVENT_DOMAIN/3.0.0#/components/schemas/shipmentSubscriptionBody'\n        - $ref: 'https://api.swaggerhub.com/domains/dcsaorg/EVENT_DOMAIN/3.0.0#/components/schemas/transportSubscriptionBody'\n        - $ref: 'https://api.swaggerhub.com/domains/dcsaorg/EVENT_DOMAIN/3.0.0#/components/schemas/equipmentSubscriptionBody'\n      required:\n        - callbackUrl\n        \n    subscriptionBodyWithSecret:\n      type: object\n      allOf:\n        - $ref: '#/components/schemas/subscriptionBody'\n        - type: object\n          properties:\n            secret:\n              allOf:\n                - $ref: 'https://api.swaggerhub.com/domains/dcsaorg/EVENT_DOMAIN/3.0.0#/components/schemas/secret'\n                - description: |\n                    A shared secret shared between the Publisher and the Subscriber. It is used to compute the contents of the `Notification-Signature` header.\n                    \n                    _**Only** valid in `POST` calls - anywhere else must be omitted!_\n      required:\n        - secret\n\n    subscription:\n      type: object\n      allOf:\n        - type: object\n          properties:\n            subscriptionID:\n              $ref: 'https://api.swaggerhub.com/domains/dcsaorg/EVENT_DOMAIN/3.0.0#/components/schemas/subscriptionID'\n        - $ref: '#/components/schemas/subscriptionBody'\n# servers:\n#   - description: SwaggerHub API Auto Mocking\n#     url: https://virtserver.swaggerhub.com/dcsaorg/DCSA_TNT/2.1.1\n",
			"canonicalURL": "/github.com/dcsaorg/DCSA-OpenAPI@4733c746cf0c687bd498d3b63dc56d58d0a62952/-/blob/tnt/v3/tnt.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/dcsaorg/DCSA-OpenAPI/blob/4733c746cf0c687bd498d3b63dc56d58d0a62952/tnt/v3/tnt.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "parse: parse spec: parse components: schemas: \"subscription\": parse schema: parse schema: property \"subscriptionID\": parse schema: at 1:539: external \"https://api.swaggerhub.com/domains/dcsaorg/EVENT_DOMAIN/3.0.0\": get: https: do: Get \"https://api.swaggerhub.com/domains/dcsaorg/EVENT_DOMAIN/3.0.0\": host \"api.swaggerhub.com\" is not allowed"
}