{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/Texyfore/Archytex"
		},
		"file": {
			"name": "openapi.yml",
			"size": 0,
			"path": "openapi.yml",
			"byteSize": 9204,
			"content": "openapi: 3.0.1\ninfo:\n  title: Archytex\n  description: API used for the Archytex project.\n  contact:\n    email: texyfore@gmail.com\n  version: 0.1.0b\nexternalDocs:\n  description: Find out more about Swagger\n  url: http://swagger.io\nservers:\n  - url: http://localhost:8080/api\ntags:\n  - name: authentication\n    description: APIs regarding login and registration\n  - name: assets\n    description: Endpoint to access public files and metadata\n  - name: authenticated\n    description: Endpoints requiring authentication\n  - name: projects\n    description: Project management\npaths:\n  /register:\n    post:\n      summary: Create a new account\n      tags:\n        - authentication\n      responses:\n        '400':\n          description: User already exists\n        '403':\n          description: Invalid captcha\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                username:\n                  type: string\n                email:\n                  type: string\n                password:\n                  type: string\n                captcha:\n                  type: string\n  /verify:\n    get:\n      summary: Verifies a registered account\n      tags:\n        - authentication\n      responses:\n        '400':\n          description: Invalid token\n      parameters:\n        - name: token\n          in: query\n          description: Token from verification E-Mail\n          schema:\n            type: string\n          required: true\n  /login:\n    post:\n      summary: Logs into an account\n      tags:\n        - authentication\n      responses:\n        '200':\n          description: Successful login\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  token:\n                    type: string\n        '400':\n          description: Invalid username or password\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                username:\n                  type: string\n                password:\n                  type: string\n  /ws:\n    summary: WebSocket for Project updated\n    description: This endpoint is undocumented due to documentation software limitations\n  /assets:\n    get:\n      summary: Get list of props and textures\n      tags:\n        - assets\n      responses:\n        '200':\n          description: List of all assets\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  props:\n                    $ref: '#/components/schemas/Asset'\n                  textures:\n                    $ref: '#/components/schemas/Asset'\n  /render/{render}:\n    get:\n      summary: Gets the image of a render\n      tags:\n        - assets\n        - projects\n      responses:\n        '200':\n          description: Rendered image\n          content:\n            image/png:\n              schema:\n                type: string\n                format: binary\n        '400':\n          description: Invalid request\n      parameters:\n        - name: render\n          in: path\n          required: true\n          schema:\n            type: string\n  /auth/user:\n    post:\n      summary: Gets information about the currently logged in user\n      tags:\n        - authenticated\n      responses:\n        '200':\n          description: Short-form user information\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  username:\n                    type: string\n                  email:\n                    type: string\n                  coins:\n                    type: number\n        '400':\n          description: Missing Bearer token\n        '401':\n          description: Unauthorized\n      security:\n        - api_key: []\n  /project:\n    post:\n      summary: Creates new project\n      tags:\n        - authenticated\n        - projects\n      security:\n        - api_key: []\n      responses:\n        '200':\n          description: Successfully created project\n        '400':\n          description: JSON formatting error\n        '401':\n          description: Unauthorized\n  /project/{id}:\n    delete:\n      summary: Delete project\n      tags:\n        - authenticated\n        - projects\n      parameters:\n        - name: id\n          in: path\n          schema:\n            type: string\n          required: true\n      security:\n        - api_key: []\n      responses:\n        '200':\n          description: Successfully deleted project\n        '400':\n          description: Invalid ID\n        '401':\n          description: Unauthorized\n    patch:\n      summary: Rename project\n      tags:\n        - authenticated\n        - projects\n      parameters:\n        - name: id\n          in: path\n          required: true\n          schema:\n            type: string\n      security:\n        - api_key: []\n      responses:\n        '200':\n          description: Successfully deleted project\n        '400':\n          description: Invalid ID\n        '401':\n          description: Unauthorized\n      requestBody:\n        description: New name\n        content:\n          application/json:\n            schema:\n              type: string\n  /project/{id}/data:\n    post:\n      summary: Uploads new project file\n      tags:\n        - authenticated\n        - projects\n      parameters:\n        - name: id\n          in: path\n          required: true\n          schema:\n            type: string\n      security:\n        - api_key: []\n      responses:\n        '200':\n          description: Successfully saved project\n        '401':\n          description: Unauthorized\n        '404':\n          description: Project not found\n      requestBody:\n        description: Project file in the proprietary Archytex scene format\n        content:\n          application/octet-stream:\n            schema:\n              type: string\n              format: binary\n    get:\n      summary: Downloads latest project file\n      tags:\n        - authenticated\n        - projects\n      parameters:\n        - name: id\n          in: path\n          required: true\n          schema:\n            type: string\n      security:\n        - api_key: []\n      responses:\n        '200':\n          description: Successfully fetched project file\n          content:\n            application/octet-stream:\n              schema:\n                type: string\n                format: binary\n        '401':\n          description: Unauthorized\n        '404':\n          description: Project not found\n  /project/{id}/render/{width}/{height}/{samples}:\n    post:\n      summary: Sends project to render queue\n      tags:\n        - authenticated\n        - projects\n      parameters:\n        - name: id\n          in: path\n          required: true\n          schema:\n            type: string\n      security:\n        - api_key: []\n      responses:\n        '200':\n          description: Successfully saved project\n        '400':\n          description: Invalid parameter\n        '404':\n          description: Project not found\n      requestBody:\n        description: Project file in the proprietary Archytex scene format\n        content:\n          application/octet-stream:\n            schema:\n              type: string\n              format: binary\n  /project/{id}/render/{render}:\n    delete:\n      summary: Deletes render\n      tags:\n        - authenticated\n        - projects\n      parameters:\n        - name: id\n          in: path\n          required: true\n          schema:\n            type: string\n        - name: render\n          in: path\n          required: true\n          schema:\n            type: string\n      security:\n        - api_key: []\n      responses:\n        '200':\n          description: Successfully saved project\n        '400':\n          description: Invalid parameter\n        '404':\n          description: Project or Render not found\ncomponents:\n  securitySchemes:\n    api_key:\n      type: http\n      scheme: bearer\n  schemas:\n    User:\n      type: object\n      properties:\n        id:\n          type: string\n        username:\n          type: string\n        email:\n          type: string\n        coins:\n          type: number\n        projects:\n          type: array\n          items:\n            $ref: '#/components/schemas/Project'\n    Project:\n      type: object\n      properties:\n        id:\n          type: string\n        title:\n          type: string\n        created:\n          type: string\n        path:\n          type: string\n        renders:\n          type: array\n          items:\n            $ref: '#/components/schemas/Render'\n    Render:\n      type: object\n      properties:\n        id:\n          type: string\n        name:\n          type: string\n        status:\n          type: number\n        started:\n          type: string\n        finished:\n          type: string\n        icon:\n          type: string\n    Asset:\n      type: object\n      properties:\n        _id:\n          type: string\n        id:\n          type: number\n        url:\n          type: string\n        public:\n          type: boolean\n"
		}
	},
	"Error": "parse: parse spec: paths: /project/{id}/render/{width}/{height}/{samples}: post: operation \"\": parse path: path parameter not specified: \"width\""
}