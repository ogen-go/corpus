{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/vanilla/vanilla"
		},
		"file": {
			"name": "resources.yml",
			"size": 0,
			"path": "applications/dashboard/openapi/resources.yml",
			"byteSize": 6244,
			"content": "openapi: 3.0.2\ninfo:\npaths:\n    /resources:\n        get:\n            summary: List the resources available on the site.\n            tags:\n                - Resources\n            parameters:\n                - name: crawlable\n                  in: query\n                  schema:\n                      type: boolean\n                      description: Filter by resources that have crawling information.\n            responses:\n                \"200\":\n                    description: Success\n                    content:\n                        application/json:\n                            schema:\n                                type: array\n                                items:\n                                    $ref: \"#/components/schemas/ResourceFragment\"\n                            example:\n                                - recordType: user\n                                  url: \"https://example.com/api/v2/resources/user\"\n                                  crawlable: true\n                                - recordType: discussion\n                                  url: \"https://example.com/api/v2/resources/discussion\"\n                                  crawlable: true\n                                - recordType: comment\n                                  url: \"https://example.com/api/v2/resources/comment\"\n                                  crawlable: true\n                \"403\":\n                    $ref: \"#/components/responses/PermissionError\"\n    /resources/{recordType}:\n        get:\n            summary: Get the details of a resource.\n            tags:\n                - Resources\n            parameters:\n                - name: recordType\n                  description: The record type slug of the resource.\n                  in: path\n                  required: true\n                  schema:\n                      type: string\n                      example: discussion\n                - name: expand\n                  description: Expand fields on the result.\n                  in: query\n                  schema:\n                      type: array\n                      items:\n                          type: string\n                          enum:\n                              - all\n                              - crawl\n                  style: form\n            responses:\n                \"200\":\n                    description: Success\n                    content:\n                        application/json:\n                            schema:\n                                $ref: \"#/components/schemas/Resource\"\n                \"403\":\n                    $ref: \"#/components/responses/PermissionError\"\n    /resources/dirty-records/{recordType}:\n        delete:\n            summary: Delete resources dirty records.\n            tags:\n                - Resources\n            parameters:\n                - name: recordType\n                  description: The record type slug of the resource.\n                  in: path\n                  required: true\n                  schema:\n                      type: string\n                      example: discussion\n                - name: dateInserted\n                  description: Date to filter records by.\n                  in: query\n                  schema:\n                      type: string\n            responses:\n                \"204\":\n                    description: Success\ncomponents:\n    schemas:\n        ResourceFragment:\n            description: Meta information about a resource.\n            type: object\n            properties:\n                recordType:\n                    type: string\n                    description: The record the resource represents. Also the unique ID of the resource.\n                url:\n                    type: string\n                    description: The URL of the resource meta information.\n                    format: uri\n                crawlable:\n                    type: boolean\n                    description: Whether or not the resource has crawl information.\n            required:\n                - recordType\n                - url\n                - crawlable\n        Resource:\n            type: object\n            properties:\n                recordType:\n                    type: string\n                    description: The record the resource represents. Also the unique ID of the resource.\n                crawl:\n                    type: object\n                    properties:\n                        url:\n                            type: string\n                            description: The URL template used to crawl the resource.\n                            format: uri\n                        min:\n                            description: The minimum parameter value for crawling the resource.\n                            oneOf:\n                                - type: number\n                                  format: int32\n                                - type: string\n                                  format: date-time\n                        max:\n                            description: The maximum parameter value for crawling the resource.\n                            oneOf:\n                                - type: number\n                                  format: int32\n                                - type: string\n                                  format: date-time\n                        count:\n                            type: number\n                            format: int32\n                            description: The approximate number of rows the resource has.\n                        parameter:\n                            type: string\n                            description: The name of the parameter you need to pass to the crawl URL.\n                    required:\n                        - url\n                        - min\n                        - max\n                        - count\n                        - parameter\n            required:\n                - recordType\n            example:\n                recordType: discussion\n                crawl:\n                    url: https://example.com/api/v2/discussions?expand=crawl?order=-discussionID\n                    min: 1,\n                    max: 500000,\n                    count: 499560,\n                    parameter: discussionID\n",
			"canonicalURL": "/github.com/vanilla/vanilla@dfe2732ec86d37eed7eec0956151e79f2f414b4f/-/blob/applications/dashboard/openapi/resources.yml",
			"externalURLs": [
				{
					"url": "https://github.com/vanilla/vanilla/blob/dfe2732ec86d37eed7eec0956151e79f2f414b4f/applications/dashboard/openapi/resources.yml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "parse: parse spec: parse operations: path \"/resources/{recordType}\": get: responses: 403: at 1:3352: resolve \"#/components/responses/PermissionError\" reference: can't find value for \"components/responses/PermissionError\""
}