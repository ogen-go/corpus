{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/lezhnev74/openapi-psr7-validator"
		},
		"file": {
			"name": "api.yaml",
			"size": 0,
			"path": "tests/stubs/api.yaml",
			"byteSize": 3512,
			"content": "openapi: 3.0.2\ninfo:\n  title: Weather API\n  version: 0.0.1\n  contact:\n    name: Dmitry Lezhnev\n    url: https://github.com/lezhnev74/openapi-psr7-validator\n    email: lezhnev.work@gmail.com\npaths:\n  /read/{param1}/from/{param2}:\n    parameters:\n      - in: path\n        name: param1\n        required: true\n        schema:\n          type: string\n      - in: path\n        name: param2\n        required: true\n        schema:\n          type: integer\n  /read:\n    parameters:\n      - name: offset\n        in: query\n        schema:\n          type: integer\n        required: true\n    get:\n      summary: Read data\n      operationId: read\n      parameters:\n        - name: filter\n          in: query\n          schema:\n            type: string\n        - name: limit\n          in: query\n          required: true\n          schema:\n            type: integer\n      responses:\n        200:\n          description: good read\n          content:\n            text/plain:\n              schema:\n                type: string\n\n  /request-body:\n    post:\n      summary: Request post with body payload\n      requestBody:\n        description: Request body\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                name:\n                  type: string\n          text/plain:\n            schema:\n              type: string\n      responses:\n        200:\n          description: Created\n          content:\n            text/plain:\n              schema:\n                type: string\n  /cookies:\n    post:\n      summary: Make a post operation\n      operationId: post1\n      parameters:\n        - in: cookie\n          name: session_id\n          schema:\n            type: string\n          required: true\n        - in: cookie\n          name: debug\n          schema:\n            type: integer\n      responses:\n        200:\n          description: posted\n          headers:\n            Set-Cookie:\n              schema:\n                type: string\n          content:\n            text/plain:\n              schema:\n                type: string\n  /path1:\n    get:\n      parameters:\n        - $ref: 'schemas.yaml#/components/parameters/HeaderA'\n        - $ref: 'schemas.yaml#/components/parameters/QueryArgumentA'\n      description: Get Path1\n      responses:\n        200:\n          description: fake endpoint\n          headers:\n            Header-B:\n              schema:\n                type: string\n                enum:\n                  - good value\n                  - another good value\n          content:\n            application/json:\n              schema:\n                $ref: 'schemas.yaml#/components/schemas/SchemaA'\n            image/jpeg:\n              schema:\n                type: string\n                format: binary\n  /empty:\n    post:\n      description: Get empty response\n      responses:\n        204:\n          description: No content\n    patch:\n      summary: Empty response body for all response statuses\n      responses:\n        default:\n          description: No content\n  /ref:\n    post:\n      responses:\n        200:\n          description: body contains schema with references\n          content:\n            application/json:\n              schema:\n                allOf:\n                  - $ref: 'schemas.yaml#/components/schemas/SchemaB'\n                  - type: object\n                    properties:\n                      name:\n                        type: string\n                    required:\n                      - name"
		}
	},
	"Error": "parse: parse spec: paths: /path1: get: operation \"\": parameters: parse parameter \"\": resolve \"schemas.yaml#/components/parameters/HeaderA\" reference: invalid parameter reference: \"schemas.yaml#/components/parameters/HeaderA\""
}