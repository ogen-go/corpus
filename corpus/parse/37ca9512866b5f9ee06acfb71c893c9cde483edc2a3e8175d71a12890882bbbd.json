{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/NENA911/i3"
		},
		"file": {
			"name": "i3-discrepancy-reports.yaml",
			"size": 0,
			"path": "schema/i3-discrepancy-reports.yaml",
			"byteSize": 20900,
			"content": "openapi: 3.0.1\ninfo:\n  title: Discrepancy Reports Service\n  version: \"1.0\"\nservers:\n  - url: http://localhost/DiscrepancyReports/v1\npaths:\n  /Reports:\n    post:\n      tags:\n        - SubmitReport\n      summary: Submits a new Discrepancy Report\n      operationId: SubmitReport\n      requestBody:\n        description: Discrepancy Report data\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/DiscrepancyReport'\n        required: true\n      callbacks:\n        submitResolution:\n          '{#/components/schemas/DiscrepancyReport/resolutionUri}':\n            post:\n              requestBody:\n                required: true\n                content:\n                  application/json:\n                    schema:\n                      $ref: '#/components/schemas/DiscrepancyResolution'\n              responses:\n                '201':\n                  description: Resolution received\n      responses:\n        '201':\n          description: Report successfully created\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DiscrepancyReportResponse'\n        '454':\n          description: Unspecified Error\n        '470':\n          description: Unknown Service/Database (“not ours”)\n        '471':\n          description: Unauthorized Reporter\n  /Resolutions:\n    post:\n      tags:\n        - SubmitResolution\n      summary: Submits a new Discrepancy Resolution\n      operationId: SubmitResolutiuon\n      requestBody:\n        description: Discrepancy Resolution data\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/DiscrepancyResolution'\n        required: true\n      responses:\n        '201':\n          description: Discrepancy Resolution successfully created\n        '454':\n          description: Unspecified Error\n        '472':\n          description: Unauthorized Responder\n        '473':\n          description: Unknown ReportId\n    get:\n      tags:\n        - GetResolution\n      summary: Retrieves a Discrepancy Report Resolution based on Agency Name and Discrepancy Report ID\n      operationId: GetResolution\n      parameters:\n        - name: agencyName\n          in: query\n          description: Reporting Agency Name\n          required: true\n          schema:\n            type: string\n        - name: discrepancyReportId\n          in: query\n          description: ID of the Discrepancy Report\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: Resolution found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DiscrepancyResolution'\n        '404':\n          description: Not found\n        '471':\n          description: Unauthorized Reporter\n        '473':\n          description: Unknown ReportId\n        '475':\n          description: Response not available yet\n  /StatusUpdates:\n    get:\n      tags:\n        - StatusUpdateRequest\n      summary: Request a Status Update for a previously submitted Discrepancy Report\n      operationId: StatusUpdateRequest\n      parameters:\n        - name: agencyName\n          in: query\n          description: Reporting Agency Name\n          required: true\n          schema:\n            type: string\n        - name: discrepancyReportId\n          in: query\n          description: ID of the Discrepancy Report\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: Status Update found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/StatusUpdate'\n        '404':\n          description: Not found\n        '454':\n          description: Unspecified Error\n        '471':\n          description: Unauthorized Reporter\n        '473':\n          description: Unknown ReportId\n        '474':\n          description: Resolution already provided\n  /Versions:\n    servers:\n      - url: https://api.example.com/DiscrepancyReports\n        description: Override base path for Versions query\n    get:\n      tags:\n        - RetrieveVersions\n      summary: Retrieves all supported versions, vendor parameter is optional.\n      operationId: RetrieveVersions\n      responses:\n        '200':\n          description: Versions found\n          content:\n            application/json:\n              schema:\n                $ref: 'i3-common.yaml#/components/schemas/VersionsArray'\ncomponents:\n  schemas:\n    DiscrepancyReport:\n      type: object\n      required:\n        - resolutionUri\n        - reportType\n        - discrepancyReportSubmitTimeStamp\n        - discrepancyReportId\n        - reportingAgencyName\n        - reportingContactJcard\n        - problemSeverity\n      properties:\n        resolutionUri:\n          type: string\n          format: uri\n          example: https://agencyX.com/DiscrepancyReports/resolutions\n        reportType:\n          type: string\n          enum: [PolicyStoreDiscrepancyReport, LostDiscrepancyReport, BcfDiscrepancyReport, LoggingDiscrepancyReport, CallTakerDiscrepancyReport,\n                 SipDiscrepancyReport, PermissionsDiscrepancyReport, GisDiscrepancyReport, LisDiscrepancyReport, PolicyDiscrepancyReport,\n                 OriginatingServiceDiscrepancyReport, CallTransferDiscrepancyReport, McsDiscrepancyReport, EsrpDiscrepancyReport, AdrDiscrepancyReport,\n                 NetworkDiscrepancyReport, ImrDiscrepancyReport, TestCallDiscrepancyReport, LogSignatureCertificateDiscrepancyReport]\n        discrepancyReportSubmitTimeStamp:\n          type: string\n          format: date-time\n          example: '2020-03-10T10:00:00-05:00'\n        discrepancyReportId:\n          type: string\n        reportingAgencyName:\n          type: string\n        reportingAgentId:\n          type: string\n        reportingContactJcard:\n          type: string\n        problemService:\n          type: string\n        problemSeverity:\n          type: string\n        problemComments:\n          type: string\n      discriminator:\n        propertyName: reportType\n    DiscrepancyReportResponse:\n      type: object\n      required:\n        - respondingAgencyName\n        - respondingContactJcard\n      properties:\n        respondingAgencyName:\n          type: string\n        respondingContactJcard:\n          type: string\n        respondingAgentId:\n          type: string\n        responseEstimatedReturnTime:\n          type: string\n          format: date-time\n          example: '2020-03-10T10:00:00-05:00'\n        responseComments:\n          type: string\n    DiscrepancyResolution:\n      type: object\n      required:\n        - respondingAgencyName\n        - respondingContactJcard\n        - discrepancyReportId\n        - reportingAgencyName\n        - problemService\n        - responseTime\n        - resolution\n      properties:\n        respondingAgencyName:\n          type: string\n        respondingContactJcard:\n          type: string\n        respondingAgentId:\n          type: string\n        discrepancyReportId:\n          type: string\n        reportingAgencyName:\n          type: string\n        problemService:\n          type: string\n        responseTime:\n          type: string\n          format: date-time\n          example: '2020-03-10T10:00:00-05:00'\n        reportingAgentId:\n          type: string\n        responseComments:\n          type: string\n        resolution:\n          type: string\n          enum: [DiscrepancyCorrected, NoDiscrepancy, OtherResponse, PolicyAdded, PolicyUpdated, NoSuchPolicy, InsufficientCredentials, EntryAdded,\n                 PerPolicy, CallTakerAdvised, TransferCorrect, BadCertificateChain, DataCorrected, RecordsCorrected, PermissionsCorrected,\n                 DeviceConfigError, PolicyCorrected, NoError, ProblemCorrected, InvalidRecord, Gis, Acknowledged, OtherResponse]\n    StatusUpdate:\n      type: object\n      required:\n        - respondingAgencyName\n        - respondingContactJcard\n        - responseEstimatedReturnTime\n      properties:\n        respondingAgencyName:\n          type: string\n        respondingContactJcard:\n          type: string\n        respondingAgentId:\n          type: string\n        responseEstimatedReturnTime:\n          type: string\n          format: date-time\n          example: '2020-03-10T10:00:00-05:00'\n        statusComments:\n          type: string\n    PolicyStoreDiscrepancyReport:\n      allOf:\n        - $ref: '#/components/schemas/DiscrepancyReport'\n        - type: object\n          required:\n            - policyAgencyName\n            - problem\n            - retrievePolicyResponse\n          properties:\n            policyType:\n              type: string\n            policyQueueName:\n              type: string\n            policyId:\n              type: string\n            policyAgencyName:\n              type: string\n            problem:\n              type: string\n              enum: [PolicyInvalid, PolicyAltered, SignatureVerificationFailure, PolicyMissing, OtherPolicyStore]\n            retrievePolicyResponse:\n              type: string\n    LostDiscrepancyReport:\n      allOf:\n        - $ref: '#/components/schemas/DiscrepancyReport'\n        - type: object\n          required:\n            - query\n            - request\n            - response\n            - problem\n          properties:\n            query:\n              type: string\n              enum: [findService, getServiceBoundary, listServices, listServicesByLocation]\n            request:\n              type: string\n            response:\n              type: string\n            problem:\n              type: string\n              enum: [BelievedValid, BelievedInvalid, NoSuchLocation, RouteIncorrect, MultipleMappings, ServiceBoundaryIncorrect, ServiceNumberIncorrect, DataExpired, IncorrectUri, LocationErrorInError, OtherLost]\n            discrepancyDetail:\n              type: string\n    BcfDiscrepancyReport:\n      allOf:\n        - $ref: '#/components/schemas/DiscrepancyReport'\n        - type: object\n          required:\n            - problem\n            - sosSource\n            - eventTimestamp\n          properties:\n            request:\n              type: string\n            problem:\n              type: string\n              enum: [InitialTrafficBlocked, MidTrafficBlocked, BadSdp, BadSip, MediaLoss, TrafficNotBlockedBadActor, TrafficNotBlocked, Qos, BadCdr, Tty, Firewall, OtherBcf]\n            sosSource:\n              type: string\n              format: byte\n            eventTimestamp:\n              type: string\n              format: date-time\n              example: '2020-03-10T10:00:00-05:00'\n            packetHeader:\n              type: string\n    LoggingDiscrepancyReport:\n      allOf:\n        - $ref: '#/components/schemas/DiscrepancyReport'\n        - type: object\n          required:\n            - request\n            - problem\n            - result\n          properties:\n            request:\n              type: string\n            problem:\n              type: string\n              enum: [InviteSrsError, LogEventError, RetrieveLogEventError, OtherLogging]\n            result:\n              type: string\n            callIdUrn:\n              type: string\n            incidentIdUrn:\n              type: string\n    CallTakerDiscrepancyReport:\n      allOf:\n        - $ref: '#/components/schemas/DiscrepancyReport'\n        - type: object\n          required:\n            - callIdUrn\n            - incidentIdUrn\n            - pidfLo\n            - callHeader\n          properties:\n            callIdUrn:\n              type: string\n            incidentIdUrn:\n              type: string\n            pidfLo:\n              type: string\n            callHeader:\n              type: string\n    SipDiscrepancyReport:\n      allOf:\n        - $ref: '#/components/schemas/DiscrepancyReport'\n        - type: object\n          required:\n            - problem\n          properties:\n            problem:\n              type: string\n              enum: [InitialINVITE, MESSAGE, OPTIONS, MidDialog, RequiredMedia, MediaProblem, EngorgedQ, Signaling, OtherSip]\n            callIdUrn:\n              type: string\n            incidentIdUrn:\n              type: string\n            testCallGenerator:\n              type: string\n            request:\n              type: string\n            result:\n              type: string\n            queueName:\n              type: string\n    PermissionsDiscrepancyReport:\n      allOf:\n        - $ref: '#/components/schemas/DiscrepancyReport'\n        - type: object\n          required:\n            - problem\n            - resource\n            - identity\n            - result\n          properties:\n            problem:\n              type: string\n              enum: [UnableAuthenticate, UnableSubscribe, AbleSubscribe, UnableRead, UnableWrite, UnableDelete, AbleRead, AbleWrite, AbleDelete, OtherPermissions]\n            resource:\n              type: string\n            identity:\n              type: string\n            result:\n              type: string\n            detail:\n              type: string\n    GisDiscrepancyReport:\n      allOf:\n        - $ref: '#/components/schemas/DiscrepancyReport'\n        - type: object\n          required:\n            - problem\n          properties:\n            problem:\n              type: string\n              enum: [Gap, Overlap, IncorrectLost, BadGeometry, DuplicateAttribute, OmittedField, IncorrectDataType, AddressRange, GeneralProvisioning, MalformedUri, DisplayData, OtherGis]\n            layerIds:\n              type: string\n            location:\n              type: string\n            lostUri:\n              type: string\n              format: uri\n            detail:\n              type: string\n    LisDiscrepancyReport:\n      allOf:\n        - $ref: '#/components/schemas/DiscrepancyReport'\n        - type: object\n          required:\n            - problem\n          properties:\n            problem:\n              type: string\n              enum: [IncorrectRecords, OwnLocationUnavailable, LocationReferenceNotResolved, BadPidfLo, IncorrectLocation, OtherLis]\n            ownLocationRequest:\n              type: string\n            locationUrn:\n              type: string\n            pidfLo:\n              type: string\n    PolicyDiscrepancyReport:\n      allOf:\n        - $ref: '#/components/schemas/DiscrepancyReport'\n        - type: object\n          required:\n            - policyId\n          properties:\n            policyId:\n              type: string\n            problem:\n              type: string\n              enum: [InvalidUrn, UnknownPSAP, ConflictingRoute, OtherConflict, IncorrectUrn, Malformed, Loop, VerificationFailure, OtherPolicy]\n            location:\n              type: string\n            callId:\n              type: string\n            routeUrn:\n              type: string\n    OriginatingServiceDiscrepancyReport:\n      allOf:\n        - $ref: '#/components/schemas/DiscrepancyReport'\n        - type: object\n          required:\n            - problem\n          properties:\n            problem:\n              type: string\n              enum: [LocationNotLvfValid, LocationNotUsable, NoAni, BadPidfLo, QueryTimeOut, CallDropped, IncorrectLocation, BadSip, CallDrought, CallFlood, InvalidAdr, BadAdditionalData, OtherOsp, StiError]\n            status:\n              type: string\n            location:\n              type: string\n            locationId:\n              type: string\n            locationCorrect:\n              type: string\n            callHeader:\n              type: string\n            callVolume:\n              type: integer\n              format: int32\n            callVolumeTimePeriod:\n              type: integer\n              format: int32\n    CallTransferDiscrepancyReport:\n      allOf:\n        - $ref: '#/components/schemas/DiscrepancyReport'\n        - type: object\n          required:\n            - callId\n            - incidentId\n            - origin\n            - status\n            - destination\n          properties:\n            callId:\n              type: string\n            incidentId:\n              type: string\n            origin:\n              type: string\n            status:\n              type: string\n            destination:\n              type: string\n    McsDiscrepancyReport:\n      allOf:\n        - $ref: '#/components/schemas/DiscrepancyReport'\n        - type: object\n          required:\n            - serviceCall\n            - pidfLo\n            - msag\n            - statusCode\n          properties:\n            serviceCall:\n              type: string\n            pidfLo:\n              type: string\n            msag:\n              type: string\n            statusCode:\n              type: string\n            referral:\n              type: string\n    EsrpDiscrepancyReport:\n      allOf:\n        - $ref: '#/components/schemas/DiscrepancyReport'\n        - type: object\n          required:\n            - problem\n          properties:\n            problem:\n              type: string\n              enum: [CallReceived, EngorgedQ, CallDrought]\n            callId:\n              type: string\n            incidentId:\n              type: string\n            pidfLo:\n              type: string\n            queueName:\n              type: string\n    AdrDiscrepancyReport:\n      allOf:\n        - $ref: '#/components/schemas/DiscrepancyReport'\n        - type: object\n          required:\n            - problem\n          properties:\n            problem:\n              type: string\n              enum: [ReferenceNotResolved, Malformed, UnknownBlock, ReceivedIncorrectData, TooManyUris, OtherAdr]\n            block:\n              type: string\n            location:\n              type: string\n            identity:\n              type: string\n            url:\n              type: string\n              format: uri\n            result:\n              type: string\n    NetworkDiscrepancyReport:\n      allOf:\n        - $ref: '#/components/schemas/DiscrepancyReport'\n        - type: object\n          required:\n            - problem\n            - timestamp\n          properties:\n            problem:\n              type: string\n              enum: [ReferenceNotResolved, Malformed, UnknownBlock, ReceivedIncorrectData, TooManyUris, OtherAdr]\n            ipAddressLocal:\n              type: string\n              format: ipv4\n            ipAddressRemote:\n              type: string\n              format: ipv4\n            url:\n              type: string\n              format: uri\n            timestamp:\n              type: string\n              format: date-time\n              example: '2020-03-10T10:00:00-05:00'\n    ImrDiscrepancyReport:\n      allOf:\n        - $ref: '#/components/schemas/DiscrepancyReport'\n        - type: object\n          required:\n            - problem\n            - callId\n            - callHeader\n          properties:\n            problem:\n              type: string\n              enum: [EngorgedQ, ResponseIncorrect, ResponseConfusing, CallTransferIncorrect, ExcessiveSilence, UnknownScript, InputFailed, ScriptLogicFailure, OtherImr]\n            callId:\n              type: string\n            incidentId:\n              type: string\n            callHeader:\n              type: string\n    TestCallDiscrepancyReport:\n      allOf:\n        - $ref: '#/components/schemas/DiscrepancyReport'\n        - type: object\n          required:\n            - problem\n            - callIdUrn\n            - request\n            - nbrOfCalls\n            - successCount\n            - failCount\n            - time\n            - result\n            - mediaOk\n          properties:\n            problem:\n              type: string\n              enum: [TestInvite, TestMessage, TestOptions, TestMidDialog, TestMedia, TestLoopbackMedia, TestSignaling, OtherTestCall]\n            callIdUrn:\n              type: string\n              format: uri\n            request:\n              type: string\n            nbrOfCalls:\n              type: integer\n              format: int32\n            successCount:\n              type: integer\n              format: int32\n            failCount:\n              type: integer\n              format: int32\n            time:\n              type: string\n              format: date-time\n              example: '2020-03-10T10:00:00-05:00'\n            result:\n              type: integer\n              format: int32\n            contact:\n              type: string\n            sdp:\n              type: string\n            mediaOk:\n              type: boolean\n    LogSignatureCertificateDiscrepancyReport:\n      allOf:\n        - $ref: '#/components/schemas/DiscrepancyReport'\n        - type: object\n          required:\n            - problem\n            - logIdentifier\n          properties:\n            problem:\n              type: string\n              enum: [BadAlgorithm, NoCert, BadURL, BadThumb, BadCertX5c, BadCertX5u, BadSignature, OtherLogSignature]\n            logIdentifier:\n              type: string\n            result:\n              type: string\n            thumbCalc:\n              type: string"
		}
	},
	"Error": "parse: parse spec: paths: /Resolutions: get: operation \"GetResolution\": responses: 200: content: \"application/json\": schema: parse schema: resolve \"#/components/schemas/DiscrepancyResolution\": parse schema: resolution: parse enum values: duplicate enum value: 'OtherResponse'"
}