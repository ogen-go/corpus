{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/openfisca/openfisca-core"
		},
		"file": {
			"name": "openAPI.yml",
			"size": 0,
			"path": "openfisca_web_api/openAPI.yml",
			"byteSize": 13824,
			"content": "openapi: \"3.1.0\"\n\ninfo:\n  title: \"{COUNTRY_PACKAGE_NAME} Web API\"\n  description: \"The OpenFisca Web API lets you get up-to-date information and formulas included in the {COUNTRY_PACKAGE_NAME} legislation.\"\n  version: \"{COUNTRY_PACKAGE_VERSION}\"\n  termsOfService: \"https://openfisca.org/doc/licence.html\"\n  contact:\n    email: \"contact@openfisca.org\"\n  license:\n    name: \"AGPL\"\n    url: \"https://www.gnu.org/licenses/agpl-3.0\"\n\ntags:\n  - name: \"Parameters\"\n    description: \"A parameter is a numeric property of the legislation that can evolve over time.\"\n    externalDocs:\n      description: \"Parameters documentation\"\n      url: \"https://openfisca.org/doc/key-concepts/parameters.html\"\n\n  - name: \"Variables\"\n    description: \"A variable depends on a person, or an entity (e.g. zip code, salary, income tax).\"\n    externalDocs:\n      description: \"Variables documentation\"\n      url: \"https://openfisca.org/doc/key-concepts/variables.html\"\n\n  - name: \"Entities\"\n    description: \"An entity is a person of a group of individuals (such as a household).\"\n    externalDocs:\n      description: \"Entities documentation\"\n      url: \"https://openfisca.org/doc/key-concepts/person,_entities,_role.html\"\n\n  - name: \"Calculations\"\n\n  - name: \"Documentation\"\n\ncomponents:\n  schemas:\n    Parameter:\n      type: \"object\"\n      properties:\n        values:\n          $ref: \"#/components/schemas/Values\"\n        brackets:\n          type: \"object\"\n          additionalProperties:\n            $ref: \"#/components/schemas/Brackets\"\n        subparams:\n          type: \"object\"\n          additionalProperties:\n            type: \"object\"\n            properties:\n              definition:\n                type: \"string\"\n        metadata:\n          type: \"object\"\n        description:\n          type: \"string\"\n        id:\n          type: \"integer\"\n          format: \"string\"\n        source:\n          type: \"string\"\n\n    Parameters:\n      type: \"object\"\n      additionalProperties:\n        type: \"object\"\n        properties:\n          description:\n            type: \"string\"\n          href:\n            type: \"string\"\n\n    Variable:\n      type: \"object\"\n      properties:\n        defaultValue:\n          type: \"string\"\n        definitionPeriod:\n          type: \"string\"\n          enum:\n            - \"MONTH\"\n            - \"YEAR\"\n            - \"ETERNITY\"\n        description:\n          type: \"string\"\n        entity:\n          type: \"string\"\n        formulas:\n          type: \"object\"\n          additionalProperties:\n            $ref: \"#/components/schemas/Formula\"\n        id:\n          type: \"string\"\n        reference:\n          type: \"array\"\n          items:\n            type: \"string\"\n        source:\n          type: \"string\"\n        valueType:\n          type: \"string\"\n          enum:\n            - \"Int\"\n            - \"Float\"\n            - \"Boolean\"\n            - \"Date\"\n            - \"String\"\n\n    Variables:\n      type: \"object\"\n      additionalProperties:\n        type: \"object\"\n        properties:\n          description:\n            type: \"string\"\n          href:\n            type: \"string\"\n\n    Formula:\n      type: \"object\"\n      properties:\n        content:\n          type: \"string\"\n        source:\n          type: \"string\"\n\n    Brackets:\n      type: \"object\"\n      additionalProperties:\n        type: \"number\"\n        format: \"float\"\n\n    Values:\n      description: \"All keys are ISO dates. Values can be numbers, booleans, or arrays of a single type (number, boolean or string).\"\n      type: \"object\"\n      additionalProperties:\n        $ref: \"#/components/schemas/Value\"\n      propertyNames:  # this keyword is part of JSON Schema but is not supported in OpenAPI Specification at the time of writing, see https://swagger.io/docs/specification/data-models/keywords/#unsupported\n        pattern: \"^[12][0-9]{3}-[01][0-9]-[0-3][0-9]$\"  # all keys are ISO dates\n\n    Value:\n      oneOf:\n      - type: \"boolean\"\n      - type: \"number\"\n        format: \"float\"\n      - type: \"array\"\n        items:\n          oneOf:\n          - type: \"string\"\n          - type: \"number\"\n\n    Entities:\n      type: \"object\"\n      properties:\n        description:\n          type: \"string\"\n        documentation:\n          type: \"string\"\n        plural:\n          type: \"string\"\n        roles:\n          type: \"object\"\n          additionalProperties:\n            $ref: \"#/components/schemas/Roles\"\n\n    Roles:\n      type: \"object\"\n      properties:\n        description:\n          type: \"string\"\n        max:\n          type: \"integer\"\n        plural:\n          type: \"string\"\n\n    Trace:\n      type: \"object\"\n      properties:\n        requestedCalculations:\n          type: \"array\"\n          items:\n            type: \"string\"\n        entitiesDescription:\n          type: \"object\"\n          additionalProperties: false  # Will be dynamically added by the Web API\n        trace:\n          type: \"object\"\n          additionalProperties:\n            type: \"object\"\n            properties:\n              value:\n                type: \"array\"\n                items: {}\n              dependencies:\n                type: \"array\"\n                items:\n                  type: \"string\"\n              parameters:\n                type: \"object\"\n                additionalProperties:\n                  type: \"object\"\n\n  headers:\n    Country-Package:\n      description: \"The name of the country package currently loaded in this API server\"\n      schema:\n        type: \"string\"\n\n    Country-Package-Version:\n      description: \"The version of the country package currently loaded in this API server\"\n      schema:\n        type: \"string\"\n        pattern: \"^(0|[1-9][0-9]*)\\\\.(0|[1-9][0-9]*)\\\\.(0|[1-9][0-9]*)(?:-((?:0|[1-9][0-9]*|[0-9]*[a-zA-Z-][0-9a-zA-Z-]*)(?:\\\\.(?:0|[1-9][0-9]*|[0-9]*[a-zA-Z-][0-9a-zA-Z-]*))*))?(?:\\\\+([0-9a-zA-Z-]+(?:\\\\.[0-9a-zA-Z-]+)*))?$\"  # adapted from https://semver.org/#is-there-a-suggested-regular-expression-regex-to-check-a-semver-string\n\npaths:\n  /calculate:\n    post:\n      summary: \"Run a simulation\"\n      tags:\n      - \"Calculations\"\n      operationId: \"calculate\"\n      requestBody:\n        description: \"Describe the situation (persons and entities). Add the variable you wish to calculate in the proper entity, with null as the value. Learn more in our official documentation: https://openfisca.org/doc/openfisca-web-api/input-output-data.html\"\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/SituationInput\"\n      responses:\n        200:\n          description: \"The calculation result is sent back in the response body\"\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/SituationOutput\"\n          headers:\n            Country-Package:\n              $ref: \"#/components/headers/Country-Package\"\n            Country-Package-Version:\n              $ref: \"#/components/headers/Country-Package-Version\"\n        404:\n          description: \"A variable mentioned in the input situation does not exist in the loaded tax and benefit system. Details are sent back in the response body\"\n          headers:\n            Country-Package:\n              $ref: \"#/components/headers/Country-Package\"\n            Country-Package-Version:\n              $ref: \"#/components/headers/Country-Package-Version\"\n        400:\n          description: \"The request is invalid. Details about the error are sent back in the response body\"\n          headers:\n            Country-Package:\n              $ref: \"#/components/headers/Country-Package\"\n            Country-Package-Version:\n              $ref: \"#/components/headers/Country-Package-Version\"\n\n  /parameters:\n    get:\n      tags:\n      - \"Parameters\"\n      summary: \"List all available parameters\"\n      operationId: \"getParameters\"\n      responses:\n        200:\n          description: \"The list of parameters is sent back in the response body\"\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Parameters\"\n          headers:\n            Country-Package:\n              $ref: \"#/components/headers/Country-Package\"\n            Country-Package-Version:\n              $ref: \"#/components/headers/Country-Package-Version\"\n\n  /parameter/{parameterID}:\n    get:\n      tags:\n      - \"Parameters\"\n      summary: \"Get information about a specific parameter\"\n      operationId: \"getParameter\"\n      parameters:\n      - name: \"parameterID\"\n        in: \"path\"\n        description: \"ID of parameter. IDs can be obtained by enumerating the /parameters endpoint\"\n        required: true\n        schema:\n          type: \"string\"\n      responses:\n        200:\n          description: \"The requested parameter's information is sent back in the response body\"\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Parameter\"\n          headers:\n            Country-Package:\n              $ref: \"#/components/headers/Country-Package\"\n            Country-Package-Version:\n              $ref: \"#/components/headers/Country-Package-Version\"\n        404:\n          description: \"The requested parameter does not exist\"\n          headers:\n            Country-Package:\n              $ref: \"#/components/headers/Country-Package\"\n            Country-Package-Version:\n              $ref: \"#/components/headers/Country-Package-Version\"\n\n  /variables:\n    get:\n      tags:\n      - \"Variables\"\n      summary: \"List all available variables\"\n      operationId: \"getVariables\"\n      responses:\n        200:\n          description: \"The list of variables is sent back in the response body\"\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Variables\"\n          headers:\n            Country-Package:\n              $ref: \"#/components/headers/Country-Package\"\n            Country-Package-Version:\n              $ref: \"#/components/headers/Country-Package-Version\"\n\n  /variable/{variableID}:\n    get:\n      tags:\n      - \"Variables\"\n      summary: \"Get information about a specific variable\"\n      operationId: \"getVariable\"\n      parameters:\n      - name: \"variableID\"\n        in: \"path\"\n        description: \"ID of a variable. IDs can be obtained by enumerating the /variables endpoint.\"\n        required: true\n        schema:\n          type: \"string\"\n      responses:\n        200:\n          description: \"The requested variable's information is sent back in the response body\"\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Variable\"\n          headers:\n            Country-Package:\n              $ref: \"#/components/headers/Country-Package\"\n            Country-Package-Version:\n              $ref: \"#/components/headers/Country-Package-Version\"\n        404:\n          description: \"The requested variable does not exist\"\n          headers:\n            Country-Package:\n              $ref: \"#/components/headers/Country-Package\"\n            Country-Package-Version:\n              $ref: \"#/components/headers/Country-Package-Version\"\n\n  /entities:\n    get:\n      tags:\n      - \"Entities\"\n      summary: \"List all available Entities\"\n      operationId: \"getEntities\"\n      responses:\n        200:\n          description: \"The list of the entities as well as their information is sent back in the response body\"\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Entities\"\n          headers:\n            Country-Package:\n              $ref: \"#/components/headers/Country-Package\"\n            Country-Package-Version:\n              $ref: \"#/components/headers/Country-Package-Version\"\n\n  /trace:\n    post:\n      summary: \"Explore a simulation's steps in details.\"\n      tags:\n      - \"Calculations\"\n      operationId: \"trace\"\n      requestBody:\n        description: \"Describe the situation (persons and entities). Add the variable you wish to calculate in the proper entity, with null as the value.\"\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/SituationInput\"\n      responses:\n        200:\n          description: \"The calculation details are sent back in the response body\"\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Trace\"\n          headers:\n            Country-Package:\n              $ref: \"#/components/headers/Country-Package\"\n            Country-Package-Version:\n              $ref: \"#/components/headers/Country-Package-Version\"\n        404:\n          description: \"A variable mentioned in the input situation does not exist in the loaded tax and benefit system. Details are sent back in the response body\"\n          headers:\n            Country-Package:\n              $ref: \"#/components/headers/Country-Package\"\n            Country-Package-Version:\n              $ref: \"#/components/headers/Country-Package-Version\"\n        400:\n          description: \"The request is invalid. Details about the error are sent back in the response body\"\n          headers:\n            Country-Package:\n              $ref: \"#/components/headers/Country-Package\"\n            Country-Package-Version:\n              $ref: \"#/components/headers/Country-Package-Version\"\n\n  /spec:\n    get:\n      summary: \"Provide the API documentation in an OpenAPI format\"\n      tags:\n      - \"Documentation\"\n      operationId: \"spec\"\n      responses:\n        200:\n          description: \"The API documentation is sent back in the response body\"\n          headers:\n            Country-Package:\n              $ref: \"#/components/headers/Country-Package\"\n            Country-Package-Version:\n              $ref: \"#/components/headers/Country-Package-Version\"\n",
			"canonicalURL": "/github.com/openfisca/openfisca-core@f7529a2f0da2447b2d7f960f48b5dc28c75ca198/-/blob/openfisca_web_api/openAPI.yml",
			"externalURLs": [
				{
					"url": "https://github.com/openfisca/openfisca-core/blob/f7529a2f0da2447b2d7f960f48b5dc28c75ca198/openfisca_web_api/openAPI.yml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "parse: parse spec: parse path items: path \"/calculate\": post: operation \"calculate\": requestBody: parse content: application/json: schema: parse schema: at openfisca_web_api/openAPI.yml:230:21: $ref: resolve \"#/components/schemas/SituationInput\": resolve: can't find value for \"components/schemas/SituationInput\""
}