{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "gitlab.com/thorchain/thornode"
		},
		"file": {
			"name": "openapi.yaml",
			"size": 0,
			"path": "openapi/openapi.yaml",
			"byteSize": 40293,
			"content": "openapi: 3.0.0\ninfo:\n  title: Thornode API\n  version: 1.89.0\n  contact:\n    email: devs@thorchain.org\n  description: Thornode REST API.\n\n########################################################################################\n# Paths\n########################################################################################\n\npaths:\n  # ------------------------------ health ------------------------------\n\n  /thorchain/ping:\n    get:\n      operationId: ping\n      tags:\n        - Health\n      responses:\n        200:\n          description: OK\n          content:\n            application/json:\n              schema:\n                type: object\n                title: Ping\n                properties:\n                  ping:\n                    type: string\n                    example: pong\n\n  # ------------------------------ pools ------------------------------\n\n  /thorchain/pool/{asset}:\n    parameters:\n      - $ref: \"#/components/parameters/queryHeight\"\n      - $ref: \"#/components/parameters/asset\"\n    get:\n      description: Returns the pool information for the provided asset.\n      operationId: pool\n      tags:\n        - Pools\n      responses:\n        200:\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/PoolResponse\"\n\n  /thorchain/pools:\n    parameters:\n      - $ref: \"#/components/parameters/queryHeight\"\n    get:\n      description: Returns the pool information for all assets.\n      operationId: pools\n      tags:\n        - Pools\n      responses:\n        200:\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/PoolsResponse\"\n\n  # # ------------------------------ liquidity providers ------------------------------\n\n  /thorchain/pool/{asset}/liquidity_provider/{address}:\n    parameters:\n      - $ref: \"#/components/parameters/queryHeight\"\n      - $ref: \"#/components/parameters/asset\"\n      - $ref: \"#/components/parameters/address\"\n    get:\n      description: Returns the liquidity provider information for an address and asset.\n      operationId: liquidityProvider\n      tags:\n        - Liquidity Providers\n      responses:\n        200:\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/LiquidityProviderResponse\"\n\n  /thorchain/pool/{asset}/liquidity_providers:\n    parameters:\n      - $ref: \"#/components/parameters/queryHeight\"\n      - $ref: \"#/components/parameters/asset\"\n    get:\n      description: Returns all liquidity provider information for an asset.\n      operationId: liquidityProviders\n      tags:\n        - Liquidity Providers\n      responses:\n        200:\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/LiquidityProviderResponse\"\n\n  # ------------------------------ transactions ------------------------------\n\n  /thorchain/tx/{hash}:\n    parameters:\n      - $ref: \"#/components/parameters/queryHeight\"\n      - $ref: \"#/components/parameters/hash\"\n    get:\n      description: Returns the observed transaction for a provided inbound or outbound hash.\n      operationId: tx\n      tags:\n        - Transactions\n      responses:\n        200:\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/TxResponse\"\n\n  /thorchain/tx/{hash}/signers:\n    parameters:\n      - $ref: \"#/components/parameters/queryHeight\"\n      - $ref: \"#/components/parameters/hash\"\n    get:\n      description: Returns the signers for a provided inbound or outbound hash.\n      operationId: txSigners\n      tags:\n        - Transactions\n      responses:\n        200:\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/TxSignersResponse\"\n\n  # ------------------------------ nodes ------------------------------\n\n  /thorchain/node/{address}:\n    parameters:\n      - $ref: \"#/components/parameters/queryHeight\"\n      - $ref: \"#/components/parameters/address\"\n    get:\n      description: Returns node information for the provided node address.\n      operationId: node\n      tags:\n        - Nodes\n      responses:\n        200:\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/NodeResponse\"\n\n  /thorchain/nodes:\n    parameters:\n      - $ref: \"#/components/parameters/queryHeight\"\n    get:\n      description: Returns node information for all registered validators.\n      operationId: nodes\n      tags:\n        - Nodes\n      responses:\n        200:\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/NodesResponse\"\n\n  # ------------------------------ vaults ------------------------------\n\n  /thorchain/vaults/asgard:\n    parameters:\n      - $ref: \"#/components/parameters/queryHeight\"\n    get:\n      description: Returns current asgard vaults.\n      operationId: asgard\n      tags:\n        - Vaults\n      responses:\n        200:\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/VaultsResponse\"\n\n  /thorchain/vaults/yggdrasil:\n    parameters:\n      - $ref: \"#/components/parameters/queryHeight\"\n    get:\n      description: Returns current yggdrasil vaults.\n      operationId: yggdrasil\n      tags:\n        - Vaults\n      responses:\n        200:\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/VaultsResponse\"\n\n  /thorchain/vaults/{pubkey}:\n    parameters:\n      - $ref: \"#/components/parameters/queryHeight\"\n      - $ref: \"#/components/parameters/pubkey\"\n    get:\n      description: Returns the vault for the provided pubkey.\n      operationId: vault\n      tags:\n        - Vaults\n      responses:\n        200:\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Vault\"\n\n  /thorchain/vaults/pubkeys:\n    parameters:\n      - $ref: \"#/components/parameters/queryHeight\"\n    get:\n      description: Returns all pubkeys for current vaults.\n      operationId: vaultPubkeys\n      tags:\n        - Vaults\n      responses:\n        200:\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/VaultPubkeysResponse\"\n\n  # ------------------------------ network ------------------------------\n\n  /thorchain/network:\n    parameters:\n      - $ref: \"#/components/parameters/queryHeight\"\n    get:\n      description: Returns network overview statistics.\n      operationId: network\n      tags:\n        - Network\n      responses:\n        200:\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/NetworkResponse\"\n\n  /thorchain/inbound_addresses:\n    parameters:\n      - $ref: \"#/components/parameters/queryHeight\"\n    get:\n      description: Returns the set of asgard addresses that should be used for inbound transactions.\n      operationId: inboundAddresses\n      tags:\n        - Network\n      responses:\n        200:\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InboundAddressesResponse\"\n\n  /thorchain/lastblock:\n    parameters:\n      - $ref: \"#/components/parameters/queryHeight\"\n    get:\n      description: Returns the last block information for all chains.\n      operationId: lastblock\n      tags:\n        - Network\n      responses:\n        200:\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/LastBlockResponse\"\n\n  /thorchain/lastblock/{chain}:\n    parameters:\n      - $ref: \"#/components/parameters/queryHeight\"\n      - $ref: \"#/components/parameters/chain\"\n    get:\n      description: Returns the last block information for the provided chain.\n      operationId: lastblockChain\n      tags:\n        - Network\n      responses:\n        200:\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/LastBlockResponse\"\n\n  /thorchain/version:\n    parameters:\n      - $ref: \"#/components/parameters/queryHeight\"\n    get:\n      description: Returns the network's current THORNode version, the network's next THORNode version, and the querier's THORNode version.\n      operationId: version\n      tags:\n        - Network\n      responses:\n        200:\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/VersionResponse\"\n\n  /thorchain/constants:\n    parameters:\n      - $ref: \"#/components/parameters/queryHeight\"\n    get:\n      description: Returns constant configuration, can be overridden by mimir.\n      operationId: constants\n      tags:\n        - Network\n      responses:\n        200:\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ConstantsResponse\"\n\n  /thorchain/ragnarok:\n    parameters:\n      - $ref: \"#/components/parameters/queryHeight\"\n    get:\n      description: Returns a boolean indicating whether the chain is in ragnarok.\n      operationId: ragnarok\n      tags:\n        - Network\n      responses:\n        200:\n          description: OK\n          content:\n            application/json:\n              schema:\n                type: boolean\n                example: false\n\n  /thorchain/ban/{address}:\n    parameters:\n      - $ref: \"#/components/parameters/queryHeight\"\n      - $ref: \"#/components/parameters/address\"\n    get:\n      description: Returns the ban status for the provided node address.\n      operationId: ban\n      tags:\n        - Network\n      responses:\n        200:\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/BanResponse\"\n\n  # ------------------------------ queue ------------------------------\n\n  /thorchain/queue:\n    parameters:\n      - $ref: \"#/components/parameters/queryHeight\"\n    get:\n      description: Returns queue statistics.\n      operationId: queue\n      tags:\n        - Queue\n      responses:\n        200:\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/QueueResponse\"\n\n  /thorchain/queue/scheduled:\n    parameters:\n      - $ref: \"#/components/parameters/queryHeight\"\n    get:\n      description: Returns the scheduled queue.\n      operationId: queueScheduled\n      tags:\n        - Queue\n      responses:\n        200:\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ScheduledResponse\"\n\n  /thorchain/queue/outbound:\n    parameters:\n      - $ref: \"#/components/parameters/queryHeight\"\n    get:\n      description: Returns the outbound queue including estimated RUNE values.\n      operationId: queueOutbound\n      tags:\n        - Queue\n      responses:\n        200:\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/OutboundResponse\"\n\n  # ------------------------------ tss ------------------------------\n\n  /thorchain/keysign/{height}:\n    parameters:\n      - $ref: \"#/components/parameters/pathHeight\"\n    get:\n      description: Returns keysign information for the provided height - the height being the first block a tx out item appears in the signed-but-unobserved outbound queue.\n      operationId: keysign\n      tags:\n        - TSS\n      responses: &keysign-response\n        200:\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/KeysignResponse\"\n\n  /thorchain/keysign/{height}/{pubkey}:\n    parameters:\n      - $ref: \"#/components/parameters/pathHeight\"\n      - $ref: \"#/components/parameters/pubkey\"\n    get:\n      description: Returns keysign information for the provided height and pubkey - the height being the block at which a tx out item is scheduled to be signed and moved from the scheduled outbound queue to the outbound queue.\n      operationId: keysignPubkey\n      tags:\n        - TSS\n      responses: *keysign-response\n\n  # TODO: Deprecate?\n  # /thorchain/keygen/{height}/{pubkey}:\n\n  # ------------------------------ tss metrics ------------------------------\n\n  /thorchain/metrics:\n    parameters:\n      - $ref: \"#/components/parameters/queryHeight\"\n    get:\n      description: Returns keygen and keysign metrics for current vaults.\n      operationId: metrics\n      tags:\n        - TSS\n      responses:\n        200:\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/MetricsResponse\"\n\n  /thorchain/metric/keygen/{pubkey}:\n    parameters:\n      - $ref: \"#/components/parameters/queryHeight\"\n      - $ref: \"#/components/parameters/pubkey\"\n    get:\n      description: Returns keygen metrics for the provided vault pubkey.\n      operationId: metricsKeygen\n      tags:\n        - TSS\n      responses:\n        200:\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/KeygenMetricsResponse\"\n\n  # ------------------------------ thornames ------------------------------\n\n  /thorchain/thorname/{name}:\n    parameters:\n      - $ref: \"#/components/parameters/queryHeight\"\n      - name: name\n        in: path\n        description: the thornode to lookup\n        required: true\n        schema:\n          type: string\n    get:\n      description: Returns addresses registered to the provided thorname.\n      operationId: thorname\n      tags:\n        - Thornames\n      responses:\n        200:\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ThornameResponse\"\n\n  # ------------------------------ mimir ------------------------------\n\n  /thorchain/mimir:\n    parameters:\n      - $ref: \"#/components/parameters/queryHeight\"\n    get:\n      description: Returns current active mimir configuration.\n      operationId: mimir\n      tags:\n        - Mimir\n      responses:\n        200:\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/MimirResponse\"\n\n  /thorchain/mimir/key/{key}:\n    parameters:\n      - $ref: \"#/components/parameters/queryHeight\"\n      - name: key\n        in: path\n        description: the mimir key to lookup\n        required: true\n        schema:\n          type: string\n    get:\n      description: Returns current active mimir configuration for the provided key.\n      operationId: mimirKey\n      tags:\n        - Mimir\n      responses:\n        200:\n          description: OK\n          content:\n            application/json:\n              schema:\n                type: int64\n\n  /thorchain/mimir/admin:\n    parameters:\n      - $ref: \"#/components/parameters/queryHeight\"\n    get:\n      description: Returns current admin mimir configuration.\n      operationId: mimirAdmin\n      tags:\n        - Mimir\n      responses:\n        200:\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/MimirResponse\"\n\n  /thorchain/mimir/nodes_all:\n    parameters:\n      - $ref: \"#/components/parameters/queryHeight\"\n    get:\n      description: Returns current node mimir votes.\n      operationId: mimirNodes\n      tags:\n        - Mimir\n      responses:\n        200:\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/MimirNodesResponse\"\n\n  /thorchain/mimir/node/{address}:\n    parameters:\n      - $ref: \"#/components/parameters/queryHeight\"\n      - $ref: \"#/components/parameters/address\"\n    get:\n      description: Returns current node mimir configuration for the provided node address.\n      operationId: mimirNode\n      tags:\n        - Mimir\n      responses:\n        200:\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/MimirResponse\"\n\n  # TODO: Deprecate?\n  # /thorchain/mimir/nodes:\n\n########################################################################################\n# Components\n########################################################################################\n\ncomponents:\n  # ------------------------------ parameters ------------------------------\n\n  parameters:\n    queryHeight:\n      name: height\n      in: query\n      description: optional block height, defaults to current tip\n      required: false\n      schema:\n        type: int64\n        minimum: 0\n\n    pathHeight:\n      name: height\n      in: path\n      required: true\n      schema:\n        type: int64\n        minimum: 0\n\n    hash:\n      name: hash\n      in: path\n      required: true\n      schema:\n        type: string\n        example: \"CF524818D42B63D25BBA0CCC4909F127CAA645C0F9CD07324F2824CC151A64C7\"\n\n    asset:\n      name: asset\n      in: path\n      required: true\n      schema:\n        type: string\n        example: \"BTC.BTC\"\n\n    address:\n      name: address\n      in: path\n      required: true\n      schema:\n        type: string\n        example: \"thor1zupk5lmc84r2dh738a9g3zscavannjy3nzplwt\"\n\n    pubkey:\n      name: pubkey\n      in: path\n      required: true\n      schema:\n        type: string\n        example: \"thorpub1addwnpepq068dr0x7ue973drmq4eqmzhcq3650n7nx5fhgn9gl207luxp6vaklu52tc\"\n\n    chain:\n      name: chain\n      in: path\n      required: true\n      schema:\n        type: string\n        example: \"BTC\"\n\n  # ------------------------------ schemas ------------------------------\n\n  schemas:\n    Pool:\n      type: object\n      required:\n        - balance_rune\n        - balance_asset\n        - asset\n        - LP_units\n        - pool_units\n        - status\n        - synth_units\n        - synth_supply\n        - pending_inbound_rune\n        - pending_inbound_asset\n      properties:\n        balance_rune:\n          type: string\n          example: \"13460619152985\"\n        balance_asset:\n          type: string\n          example: \"3197744873\"\n        asset:\n          type: string\n          example: \"BTC.BTC\"\n        LP_units:\n          type: string\n          description: the total pool liquidity provider units\n          example: \"14694928607473\"\n        pool_units:\n          type: string\n          description: the total pool units, this is the sum of LP and synth units\n          example: \"14694928607473\"\n        status:\n          type: string\n          example: \"Available\"\n        decimals:\n          type: int64\n          example: 6\n        synth_units:\n          type: string\n          description: the total synth units in the pool\n          example: \"0\"\n        synth_supply:\n          type: string\n          description: the total supply of synths for the asset\n          example: \"0\"\n        pending_inbound_rune:\n          type: string\n          example: \"464993836\"\n        pending_inbound_asset:\n          type: string\n          example: \"101713319\"\n\n    LiquidityProvider:\n      type: object\n      required:\n        - asset\n        - units\n        - pending_rune\n        - pending_asset\n        - rune_deposit_value\n        - asset_deposit_value\n      properties:\n        asset:\n          type: string\n          example: \"BNB.BNB\"\n        rune_address:\n          type: string\n          example: \"thor1xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\"\n        asset_address:\n          type: string\n          example: \"bnb1xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\"\n        last_add_height:\n          type: int64\n          example: 82745\n        last_withdraw_height:\n          type: int64\n          example: 82745\n        units:\n          type: string\n          example: \"0\"\n        pending_rune:\n          type: string\n          example: \"0\"\n        pending_asset:\n          type: string\n          example: \"242000000\"\n        pending_tx_Id:\n          type: string\n          example: \"C4C876802xxxxxxxxxxBC408829878446A37011EBBA0C5CAA3DD64A548879CB228\"\n        rune_deposit_value:\n          type: string\n          example: \"0\"\n        asset_deposit_value:\n          type: string\n          example: \"0\"\n\n    Coin:\n      type: object\n      required:\n        - asset\n        - amount\n      properties:\n        asset:\n          type: string\n          example: \"BTC.BTC\"\n        amount:\n          type: string\n          example: \"100000\"\n        decimals:\n          type: int64\n          example: 6\n\n    Vault:\n      type: object\n      required:\n        - coins\n        - routers\n        - addresses\n      properties:\n        block_height:\n          type: int64\n        pub_key:\n          type: string\n        coins:\n          type: array\n          items:\n            $ref: \"#/components/schemas/Coin\"\n        type:\n          type: string\n          enum: [\"AsgardVault\", \"YggdrasilVault\"]\n        status:\n          type: string\n          # TODO: Currently status is not consistent between asgard and yggdrasil.\n          # enum: [\"Active\", ...]\n        status_since:\n          type: int64\n        membership:\n          type: array\n          description: the list of node public keys which are members of the vault\n          items:\n            type: string\n        chains:\n          type: array\n          items:\n            type: string\n        inbound_tx_count:\n          type: int64\n        outbound_tx_count:\n          type: int64\n        pending_tx_block_heights:\n          type: array\n          items:\n            type: int64\n        routers:\n          type: array\n          items:\n            $ref: \"#/components/schemas/VaultRouter\"\n        addresses:\n          type: array\n          items:\n            $ref: \"#/components/schemas/VaultAddress\"\n\n    VaultRouter:\n      type: object\n      properties:\n        chain:\n          type: string\n          example: \"ETH\"\n        router:\n          type: string\n          example: \"0x3624525075b88B24ecc29CE226b0CEc1fFcB6976\"\n\n    VaultAddress:\n      type: object\n      properties:\n        chain:\n          type: string\n          example: \"BTC\"\n        address:\n          type: string\n          example: \"bc1qd45uzetakjvdy5ynjjyp4nlnj89am88e4e5jeq\"\n\n    VaultInfo:\n      type: object\n      required:\n        - pub_key\n        - routers\n      properties:\n        pub_key:\n          type: string\n          example: \"thorpub1addwnpepq068dr0x7ue973drmq4eqmzhcq3650n7nx5fhgn9gl207luxp6vaklu52tc\"\n        routers:\n          type: array\n          items:\n            $ref: \"#/components/schemas/VaultRouter\"\n\n    Tx:\n      type: object\n      required:\n        - coins\n        - gas\n      properties:\n        id:\n          type: string\n          example: \"CF524818D42B63D25BBA0CCC4909F127CAA645C0F9CD07324F2824CC151A64C7\"\n        chain:\n          type: string\n          example: \"BTC\"\n        from_address:\n          type: string\n          example: \"bcrt1q0s4mg25tu6termrk8egltfyme4q7sg3h8kkydt\"\n        to_address:\n          type: string\n          example: \"bcrt1qf3s7q037eancht7sg0aj995dht25rwrnqsf45e\"\n        coins:\n          type: array\n          items:\n            $ref: \"#/components/schemas/Coin\"\n        gas:\n          type: array\n          items:\n            $ref: \"#/components/schemas/Coin\"\n        memo:\n          type: string\n          example: \"ADD:BTC.BTC:thor1zupk5lmc84r2dh738a9g3zscavannjy3nzplwt\"\n\n    LastBlock:\n      type: object\n      required:\n        - chain\n        - last_observed_in\n        - last_signed_out\n        - thorchain\n      properties:\n        chain:\n          type: string\n        last_observed_in:\n          type: int64\n        last_signed_out:\n          type: int64\n        thorchain:\n          type: int64\n\n    ObservedTx:\n      type: object\n      required:\n        - tx\n      properties:\n        tx:\n          $ref: \"#/components/schemas/Tx\"\n        status:\n          type: string\n          enum: [\"done\", \"incomplete\"]\n          example: \"done\"\n        out_hashes:\n          type: array\n          items:\n            type: string\n            example: \"E17A0906E015F0C343691C18E475C8CB5F3F6C63F5BCDE0F3A341909763CC92B\"\n        block_height:\n          type: int64\n          example: 7581334\n        signers:\n          type: array\n          items:\n            type: string\n            example: \"thor1f3s7q037eancht7sg0aj995dht25rwrnu4ats5\"\n        observed_pub_key:\n          type: string\n          example: \"thorpub1addwnpepq27ck6u44zl8qqdnmzjjc8rg72amrxrsp42p9vd7kt6marhy6ww76z8shwe\"\n        keysign_ms:\n          type: int64\n          example: 10000\n        finalise_height:\n          type: int64\n          example: 7581334\n        aggregator:\n          type: string\n          description: the outbound aggregator to use, will also match a suffix\n          example: \"0x69800327b38A4CeF30367Dec3f64c2f2386f3848\"\n        aggregator_target:\n          type: string\n          description: the aggregator target asset provided to transferOutAndCall\n          example: \"0x0a44986b70527154e9F4290eC14e5f0D1C861822\"\n        aggregator_target_limit:\n          type: string\n          description: the aggregator target asset limit provided to transferOutAndCall\n          example: \"0x0a44986b70527154e9F4290eC14e5f0D1C861822\"\n\n    TxOutItem:\n      type: object\n      required:\n        - chain\n        - to_address\n        - coin\n        - max_gas\n        - height\n      properties:\n        chain:\n          type: string\n          example: \"ETH\"\n        to_address:\n          type: string\n          example: \"0x66fb1cd65b97fa40457b90b7d1ca6b92cb64b32b\"\n        vault_pub_key:\n          type: string\n          example: \"thorpub1addwnpepqt45wmsxj29xpgdrdsvg2h3dx68qeapgykw3hlyj6vuds2r0pnkwx5gt9m4\"\n        coin:\n          $ref: \"#/components/schemas/Coin\"\n        memo:\n          type: string\n          example: \"OUT:208BF0ACD78C89A0534B0457BA0867B101961A2319C1E49DD28676526904BBEA\"\n        max_gas:\n          type: array\n          items:\n            $ref: \"#/components/schemas/Coin\"\n        gas_rate:\n          type: int64\n        in_hash:\n          type: string\n          example: \"208BF0ACD78C89A0534B0457BA0867B101961A2319C1E49DD28676526904BBEA\"\n        out_hash:\n          type: string\n          example: \"0D0B2FDB6DAD6E5FD3C5E46D39128F9DA15E96F0B2CC054CE059EA3532B150FB\"\n        height:\n          type: int64\n          example: 1234\n\n    TssMetric:\n      type: object\n      properties:\n        address:\n          type: string\n        tss_time:\n          type: int64\n\n    TssKeysignMetric:\n      type: object\n      required:\n        - node_tss_times\n      properties:\n        tx_id:\n          type: string\n        node_tss_times:\n          type: array\n          items:\n            $ref: \"#/components/schemas/TssMetric\"\n\n    Node:\n      type: object\n      required:\n        - node_address\n        - status\n        - pub_key_set\n        - validator_cons_pub_key\n        - bond\n        - active_block_height\n        - bond_address\n        - status_since\n        - signer_membership\n        - requested_to_leave\n        - forced_to_leave\n        - leave_height\n        - ip_address\n        - version\n        - slash_points\n        - jail\n        - current_award\n        - observe_chains\n        - preflight_status\n        - bond_providers\n      properties:\n        node_address:\n          type: string\n          example: \"thor1f3s7q037eancht7sg0aj995dht25rwrnu4ats5\"\n        status:\n          type: string\n          enum: [\"Active\", \"Whitelisted\", \"Standby\", \"Disabled\"]\n          example: \"Active\"\n        pub_key_set:\n          type: object\n          title: NodePubKeySet\n          properties:\n            secp256k1:\n              type: string\n              example: \"thorpub1addwnpepq27ck6u44zl8qqdnmzjjc8rg72amrxrsp42p9vd7kt6marhy6ww76z8shwe\"\n            ed25519:\n              type: string\n              example: \"thorpub1addwnpepq27ck6u44zl8qqdnmzjjc8rg72amrxrsp42p9vd7kt6marhy6ww76z8shwe\"\n        validator_cons_pub_key:\n          type: string\n          description: the consensus pub key for the node\n          example: \"thor104gsqwta048e80j909g6y9kkqdjrw0lff866ew\"\n        bond:\n          type: string\n          description: current node bond\n          example: \"123456789\"\n        active_block_height:\n          type: int64\n          description: the block height at which the node became active\n          example: 123456\n        bond_address:\n          type: string\n          example: \"thor1f3s7q037eancht7sg0aj995dht25rwrnu4ats5\"\n        status_since:\n          type: int64\n          description: the block height of the current provided information for the node\n          example: 100000\n        signer_membership:\n          type: array\n          description: the set of vault public keys of which the node is a member\n          items:\n            type: string\n            example: \"thorpub1addwnpepq2jqhv5rdqlkusfxy05stfzcgslhhz5qh8pxetw5ry2aa6awgdh3shq8s82\"\n        requested_to_leave:\n          type: boolean\n        forced_to_leave:\n          type: boolean\n          description: indicates whether the node has been forced to leave by the network, typically via ban\n        leave_height:\n          type: int64\n          example: 0\n        ip_address:\n          type: string\n          example: \"10.20.30.40\"\n        version:\n          type: string\n          description: the currently set version of the node\n          example: \"0.35.0\"\n        slash_points:\n          type: int64\n          description: the accumlated slash points, reset at churn but excessive slash points may carry over\n          example: 42\n        jail:\n          type: object\n          title: NodeJail\n          properties:\n            node_address:\n              type: string\n              example: \"tthor1f3s7q037eancht7sg0aj995dht25rwrnu4ats5\"\n            release_height:\n              type: int64\n              example: 1234\n            reason:\n              type: string\n        current_award:\n          type: string\n          example: \"123456\"\n        observe_chains:\n          type: array\n          description: the last observed heights for all chain by the node\n          items:\n            type: object\n            title: ChainHeight\n            required:\n              - chain\n              - height\n            properties:\n              chain:\n                type: string\n                example: \"BTC\"\n              height:\n                type: int64\n                example: 2000000\n        preflight_status:\n          type: object\n          title: NodePreflightStatus\n          required:\n            - status\n            - reason\n            - code\n          properties:\n            status:\n              type: string\n              description: the next status of the node\n              example: \"Ready\"\n            reason:\n              type: string\n              description: the reason for the transition to the next status\n              example: \"OK\"\n            code:\n              type: int64\n              example: 0\n        bond_providers:\n          type: object\n          title: NodeBondProviders\n          properties:\n            node_address:\n              type: string\n            node_operator_fee:\n              type: string\n            providers:\n              type: object\n              title: NodeBondProvider\n              properties:\n                bond_address:\n                  type: string\n                bond:\n                  type: string\n\n    # ------------------------------ responses ------------------------------\n\n    PoolResponse:\n      $ref: \"#/components/schemas/Pool\"\n\n    PoolsResponse:\n      type: array\n      items:\n        $ref: \"#/components/schemas/Pool\"\n\n    LiquidityProviderResponse:\n      type: array\n      items:\n        $ref: \"#/components/schemas/LiquidityProvider\"\n\n    TxResponse:\n      type: object\n      properties:\n        observed_tx:\n          $ref: \"#/components/schemas/ObservedTx\"\n        keysign_metric:\n          $ref: \"#/components/schemas/TssKeysignMetric\"\n\n    TxSignersResponse:\n      type: object\n      required:\n        - tx\n        - txs\n        - actions\n        - out_txs\n      properties:\n        tx_id:\n          type: string\n          example: \"CF524818D42B63D25BBA0CCC4909F127CAA645C0F9CD07324F2824CC151A64C7\"\n        tx:\n          $ref: \"#/components/schemas/ObservedTx\"\n        height:\n          type: int64\n          example: 1234\n        txs:\n          type: array\n          items:\n            $ref: \"#/components/schemas/ObservedTx\"\n        actions:\n          type: array\n          items:\n            $ref: \"#/components/schemas/ObservedTx\"\n        out_txs:\n          type: array\n          items:\n            type: string\n        finalised_height:\n          type: int64\n          example: 7581334\n        updated_vault:\n          type: boolean\n          example: false\n        reverted:\n          type: boolean\n          example: false\n        outbound_height:\n          type: int64\n          example: 1234\n\n    NodeResponse:\n      $ref: \"#/components/schemas/Node\"\n\n    NodesResponse:\n      type: array\n      items:\n        $ref: \"#/components/schemas/Node\"\n\n    VaultsResponse:\n      type: array\n      items:\n        $ref: \"#/components/schemas/Vault\"\n\n    VaultResponse:\n      $ref: \"#/components/schemas/Vault\"\n\n    VaultPubkeysResponse:\n      type: object\n      required:\n        - asgard\n        - yggdrasil\n      properties:\n        asgard:\n          type: array\n          items:\n            $ref: \"#/components/schemas/VaultInfo\"\n        yggdrasil:\n          type: array\n          items:\n            $ref: \"#/components/schemas/VaultInfo\"\n\n    NetworkResponse:\n      type: object\n      required:\n        - bond_reward_rune\n        - total_bond_units\n        - total_reserve\n        - burned_bep_2_rune\n        - burned_erc_20_rune\n      properties:\n        bond_reward_rune:\n          type: string\n          example: \"857134475040\"\n          description: total amount of RUNE awarded to node operators\n        total_bond_units:\n          type: string\n          example: \"0\"\n          description: total bonded RUNE\n        total_reserve:\n          type: string\n          example: \"21999180112172346\"\n          description: total reserve RUNE\n        burned_bep_2_rune:\n          type: string\n          example: \"674699077345087\"\n          description: total of burned BEP2 RUNE\n        burned_erc_20_rune:\n          type: string\n          example: \"66369401654835\"\n          description: total of burned ERC20 RUNE\n\n    InboundAddressesResponse:\n      type: array\n      items:\n        type: object\n        title: InboundAddress\n        required:\n          - halted\n        properties:\n          chain:\n            type: string\n            example: \"BTC\"\n          pub_key:\n            type: string\n            example: \"thorpub1addwnpepq2jqhv5rdqlkusfxy05stfzcgslhhz5qh8pxetw5ry2aa6awgdh3shq8s82\"\n          address:\n            type: string\n            example: \"bc1qn9esxuw8ca7ts8l6w66kdh800s09msvutydc46\"\n          gas_rate:\n            type: string\n            example: \"214\"\n          router:\n            type: string\n          halted:\n            type: boolean\n            example: false\n\n    LastBlockResponse:\n      type: array\n      items:\n        $ref: \"#/components/schemas/LastBlock\"\n\n    VersionResponse:\n      type: object\n      required:\n        - current\n        - next\n        - querier\n      properties:\n        current:\n          type: string\n          example: \"0.17.0\"\n          description: current version\n        next:\n          type: string\n          example: \"0.18.0\"\n          description: next version\n        querier:\n          type: string\n          example: \"0.16.0\"\n          description: querier version\n\n    ConstantsResponse:\n      type: object\n      properties:\n        int64_values:\n          type: object\n          additionalProperties:\n            type: string\n          example:\n            AsgardSize: 40\n            BadValidatorRate: 43200\n        bool_values:\n          type: object\n          additionalProperties:\n            type: string\n          example:\n            StrictBondLiquidityRatio: true\n        string_values:\n          type: object\n          additionalProperties:\n            type: string\n          example:\n            DefaultPoolStatus: Staged\n\n    BanResponse:\n      type: object\n      properties:\n        node_address:\n          type: string\n          example: \"thor1f3s7q037eancht7sg0aj995dht25rwrnu4ats5\"\n        block_height:\n          type: int64\n        signers:\n          type: array\n          items:\n            type: string\n            example: \"thor1f3s7q037eancht7sg0aj995dht25rwrnu4ats5\"\n\n    QueueResponse:\n      type: object\n      required:\n        - swap\n        - outbound\n        - internal\n        - scheduled_outbound_value\n      properties:\n        swap:\n          type: int64\n          example: 0\n        outbound:\n          type: int64\n          example: 10\n          description: number of signed outbound tx in the queue\n        internal:\n          type: int64\n          example: 0\n        scheduled_outbound_value:\n          type: string\n          description: scheduled outbound value in RUNE\n\n    OutboundResponse:\n      type: array\n      items:\n        $ref: \"#/components/schemas/TxOutItem\"\n\n    ScheduledResponse:\n      type: array\n      items:\n        $ref: \"#/components/schemas/TxOutItem\"\n\n    KeysignResponse:\n      type: object\n      properties:\n        keysign:\n          type: object\n          title: KeysignInfo\n          required:\n            - tx_array\n          properties:\n            height:\n              type: int64\n              description: the block(s) in which a tx out item is scheduled to be signed and moved from the scheduled outbound queue to the outbound queue\n            tx_array:\n              type: array\n              items:\n                $ref: \"#/components/schemas/TxOutItem\"\n        signature:\n          type: string\n\n    KeygenMetricsResponse:\n      type: array\n      items:\n        type: object\n        title: KeygenMetric\n        required:\n          - node_tss_times\n        properties:\n          pub_key:\n            type: string\n          node_tss_times:\n            type: array\n            items:\n              type: object\n              title: NodeKeygenMetric\n              properties:\n                address:\n                  type: string\n                tss_time:\n                  type: string\n\n    MetricsResponse:\n      type: object\n      properties:\n        keygen:\n          $ref: \"#/components/schemas/KeygenMetricsResponse\"\n        keysign:\n          type: object\n          title: KeysignMetrics\n          properties:\n            tx_id:\n              type: string\n            node_tss_times:\n              type: array\n              items:\n                $ref: \"#/components/schemas/TssMetric\"\n\n    ThornameResponse:\n      type: array\n      items:\n        type: object\n        title: Thorname\n        properties:\n          name:\n            type: string\n            example: \"thor\"\n          chain:\n            type: string\n            example: \"BTC\"\n          address:\n            type: string\n            example: \"bc1qd45uzetakjvdy5ynjjyp4nlnj89am88e4e5jeq\"\n          expire_block_height:\n            type: int64\n            example: 1234\n\n    MimirResponse:\n      type: object\n      additionalProperties:\n        type: string\n      example:\n        NODEOPERATORFEE: 2000\n        NUMBEROFNEWNODESPERCHURN: 2\n\n    MimirNodesResponse:\n      type: object\n      properties:\n        mimirs:\n          type: array\n          items:\n            type: object\n            title: MimirVote\n            properties:\n              key:\n                type: string\n              value:\n                type: int64\n              signer:\n                type: string\n",
			"canonicalURL": "/gitlab.com/thorchain/thornode@4da1044a69552a6c5665c788edeb163b9b1a1579/-/blob/openapi/openapi.yaml",
			"externalURLs": [
				{
					"url": "https://gitlab.com/thorchain/thornode/blob/4da1044a69552a6c5665c788edeb163b9b1a1579/openapi/openapi.yaml",
					"serviceKind": "GITLAB"
				}
			]
		}
	},
	"Error": "parse: parse spec: parse components: at 1:15: schemas: \"LastBlock\": parse schema: property \"last_observed_in\": at 1:3156: parse schema: unexpected schema type: \"int64\""
}