{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/ULCA-IN/ulca"
		},
		"file": {
			"name": "ulca-api-contract.yaml",
			"size": 0,
			"path": "specs/ulca-api-contract.yaml",
			"byteSize": 29196,
			"content": "openapi: 3.0.0\ninfo:\n  title: Unified Language Contribution API (ULCA) documentation\n  description: 'The ULCA API documentation defines a core set of interfaces that enables users and communities to contribute AI/ML datasets to build a large, open Indic languages resource ecosystem. The dataset contributions are primarily geared toward the area of NLP, ASR/TTS and OCR. The documentation proposes core set of interfaces where various AI based models can be hosted, referenced and benchmarked. The interfaces enables entire community to participate, collaborate and track key benchmark parameters.'\n  contact:\n    name: ekstep foundation\n    email: contact@ekstep.org\n  version: 0.7.0\nservers:\n  - url: /ulca\npaths:\n  /v0.2/dataset/corpus/submit:\n    post:\n      tags:\n        - 'dataset, core-api'\n      summary: 'to starts submission of dataset creation process, the submission goes through stage life-cycle before it gets contributed to the ecosystem'\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/DatasetSubmitRequest'\n        required: true\n      responses:\n        '200':\n          description: On successful completion of the job.\n          content:\n            '*/*':\n              schema:\n                $ref: '#/components/schemas/HttpSuccessResponse'\n        '400':\n          description: On input errors causing a failure in the job.\n          content:\n            '*/*':\n              schema:\n                $ref: '#/components/schemas/HttpErrorResponse'\n      security:\n        - authToken: []\n  /v0.2/dataset/corpus/label:\n    post:\n      tags:\n        - 'dataset, core-api'\n      summary: 'to submit referenced dataset or additional label in the dataset, primarily to enhance existing dataset by adding additional attribute(s) thus increasing existing dataset quality and coverage.'\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/ReferenceDatasetRequest'\n        required: true\n      responses:\n        '200':\n          description: On successful completion of the job.\n          content:\n            '*/*':\n              schema:\n                $ref: '#/components/schemas/HttpSuccessResponse'\n        '400':\n          description: On input errors causing a failure in the job.\n          content:\n            '*/*':\n              schema:\n                $ref: '#/components/schemas/HttpErrorResponse'\n      security:\n        - authToken: []\n  /v0.2/dataset/corpus/status-check:\n    post:\n      tags:\n        - 'dataset, core-api'\n      summary: 'check the status of submitted dataset request, user can track the status by using the provided acknowledgment identifier'\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/DatasetStatusRequest'\n        required: true\n      responses:\n        '200':\n          description: On successful completion of the job.\n          content:\n            '*/*':\n              schema:\n                $ref: '#/components/schemas/HttpSuccessResponse'\n        '400':\n          description: On input errors causing a failure in the job.\n          content:\n            '*/*':\n              schema:\n                $ref: '#/components/schemas/HttpErrorResponse'\n  /v0.2/dataset/statistics/search:\n    post:\n      tags:\n        - 'dataset, core-api'\n      summary: 'to query analytical information for the available datasets, primarily used to get statistical count of records count present in the ULCA ecosystem. The queries can be done based upon the PARAMS like languages, domain, etc.'\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/DatasetSearchRequest'\n        required: true\n      responses:\n        '200':\n          description: On successful completion of the job.\n          content:\n            '*/*':\n              schema:\n                $ref: '#/components/schemas/HttpSuccessResponse'\n        '400':\n          description: On input errors causing a failure in the job.\n          content:\n            '*/*':\n              schema:\n                $ref: '#/components/schemas/HttpErrorResponse'\n  /v0.2/dataset/ingest:\n    post:\n      tags:\n        - 'dataset, peripheral-api'\n      summary: peripheral internal api that will actually transform the ingested dataset and push to the store after running business flow pertaining to individual dataset validation flow.\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/DatasetIngestRequest'\n        required: true\n      responses:\n        '200':\n          description: On successful completion of the job.\n          content:\n            '*/*':\n              schema:\n                $ref: '#/components/schemas/HttpSuccessResponse'\n        '400':\n          description: On input errors causing a failure in the job.\n          content:\n            '*/*':\n              schema:\n                $ref: '#/components/schemas/HttpErrorResponse'\n      security:\n        - authToken: []\n  /v0.2/model/submit:\n    post:\n      tags:\n        - 'model, core-api'\n      summary: 'submit model to ULCA, from here benchmarking would be next stop'\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/ModelSubmitRequest'\n        required: true\n      responses:\n        '200':\n          description: On successful completion of the job.\n          content:\n            '*/*':\n              schema:\n                $ref: '#/components/schemas/HttpSuccessResponse'\n        '400':\n          description: On input errors causing a failure in the job.\n          content:\n            '*/*':\n              schema:\n                $ref: 'https://raw.githubusercontent.com/ULCA-IN/ulca/master/specs/model-benchmark-schema.yml#/components/schemas/StatusCode'\n      security:\n        - authToken: []\n  /v0.2/model/status-check:\n    post:\n      tags:\n        - 'model, core-api'\n      summary: check the status of submitted model\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/ModelStatusRequest'\n        required: true\n      responses:\n        '200':\n          description: On successful completion of the job.\n          content:\n            '*/*':\n              schema:\n                $ref: '#/components/schemas/HttpSuccessResponse'\n        '400':\n          description: On input errors causing a failure in the job.\n          content:\n            '*/*':\n              schema:\n                $ref: 'https://raw.githubusercontent.com/ULCA-IN/ulca/master/specs/model-benchmark-schema.yml#/components/schemas/StatusCode'\n  /v0.2/model/search:\n    post:\n      tags:\n        - 'model, core-api'\n      summary: to query analytical information for the available model for a task that is define at ULCA\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/ModelSearchRequest'\n        required: true\n      responses:\n        '200':\n          description: On successful completion of the job.\n          content:\n            '*/*':\n              schema:\n                $ref: '#/components/schemas/HttpSuccessResponse'\n        '400':\n          description: On input errors causing a failure in the job.\n          content:\n            '*/*':\n              schema:\n                $ref: 'https://raw.githubusercontent.com/ULCA-IN/ulca/master/specs/model-benchmark-schema.yml#/components/schemas/StatusCode'\n  /v0.2/model/try-me:\n    post:\n      tags:\n        - 'model, core-api'\n      summary: to provide any interface to try out the model\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/ModelTryMeRequest'\n        required: true\n      responses:\n        '200':\n          description: On successful completion of the job.\n          content:\n            '*/*':\n              schema:\n                $ref: '#/components/schemas/HttpSuccessResponse'\n        '400':\n          description: On input errors causing a failure in the job.\n          content:\n            '*/*':\n              schema:\n                $ref: 'https://raw.githubusercontent.com/ULCA-IN/ulca/master/specs/model-benchmark-schema.yml#/components/schemas/StatusCode'\n  /v0.2/model/benchmark/start:\n    post:\n      tags:\n        - 'model, core-api'\n      summary: 'starts the benchmarking process of the submitted model, benchmarking can be done on all available benchmark or on the user supplied subset. Benchmarking can be a long running operation, status-check should be used to'\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/ModelBenchmarkRequest'\n        required: true\n      responses:\n        '200':\n          description: On successful completion of the job.\n          content:\n            '*/*':\n              schema:\n                $ref: '#/components/schemas/HttpSuccessResponse'\n        '400':\n          description: On input errors causing a failure in the job.\n          content:\n            '*/*':\n              schema:\n                $ref: 'https://raw.githubusercontent.com/ULCA-IN/ulca/master/specs/model-benchmark-schema.yml#/components/schemas/StatusCode'\n  /v0.2/model/benchmark/status-check:\n    post:\n      tags:\n        - 'model, core-api'\n      summary: returns the benchmark progress status check.\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/ModelBenchmarkStatusRequest'\n        required: true\n      responses:\n        '200':\n          description: On successful completion of the job.\n          content:\n            '*/*':\n              schema:\n                $ref: '#/components/schemas/HttpSuccessResponse'\n        '400':\n          description: On input errors causing a failure in the job.\n          content:\n            '*/*':\n              schema:\n                $ref: 'https://raw.githubusercontent.com/ULCA-IN/ulca/master/specs/model-benchmark-schema.yml#/components/schemas/StatusCode'\n  /v0.2/model/benchmark/publish:\n    post:\n      tags:\n        - 'model, core-api'\n      summary: starts the benchmark publishing process of the submitted model\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/ModelBenchmarkPublishRequest'\n        required: true\n      responses:\n        '200':\n          description: On successful completion of the job.\n          content:\n            '*/*':\n              schema:\n                $ref: '#/components/schemas/HttpSuccessResponse'\n        '400':\n          description: On input errors causing a failure in the job.\n          content:\n            '*/*':\n              schema:\n                $ref: 'https://raw.githubusercontent.com/ULCA-IN/ulca/master/specs/model-benchmark-schema.yml#/components/schemas/StatusCode'\n  /v0.2/model/benchmark/detailed-result:\n    post:\n      tags:\n        - 'model, core-api'\n      summary: returns the record level score of the mentioned metric\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/ModelBenchmarkDetailResultRequest'\n        required: true\n      responses:\n        '200':\n          description: On successful completion of the job.\n          content:\n            '*/*':\n              schema:\n                $ref: '#/components/schemas/HttpSuccessResponse'\n        '400':\n          description: On input errors causing a failure in the job.\n          content:\n            '*/*':\n              schema:\n                $ref: 'https://raw.githubusercontent.com/ULCA-IN/ulca/master/specs/model-benchmark-schema.yml#/components/schemas/StatusCode'\ncomponents:\n  schemas:\n    DatasetSubmitRequest:\n      allOf:\n        - $ref: 'https://raw.githubusercontent.com/ULCA-IN/ulca/master/specs/dataset-schema.yml#/components/schemas/Dataset'\n        - type: object\n      type: object\n      description: request to submit the dataset\n      required:\n        - type\n      properties:\n        type:\n          description: one of the defined possible values\n          $ref: 'https://raw.githubusercontent.com/ULCA-IN/ulca/master/specs/dataset-schema.yml#/components/schemas/DatasetType'\n    ReferenceDatasetRequest:\n      allOf:\n        - $ref: 'https://raw.githubusercontent.com/ULCA-IN/ulca/master/specs/dataset-schema.yml#/components/schemas/Dataset'\n        - type: object\n      required:\n        - type\n        - referenceDatasetId\n      type: object\n      properties:\n        type:\n          description: one of the defined possible values\n          $ref: 'https://raw.githubusercontent.com/ULCA-IN/ulca/master/specs/dataset-schema.yml#/components/schemas/DatasetType'\n        referenceDatasetId:\n          type: string\n          description: original dataset identifier from which referenced dataset is drived.\n          format: uuidv4\n    DatasetSubmitResponse:\n      type: object\n      properties:\n        acknowlegmentId:\n          type: string\n          description: 'auto generated identifier to identify the internal representation, user can check the status of dataset stage using this acknowlegment identifier'\n          format: uuidv4\n        timestamp:\n          type: string\n          format: datetime\n          description: dataset submission timestamp\n      description: 'uploaded dataset goes through series of validation checks, automated or human-in-the-loop before it gets listed'\n    DatasetSearchRequest:\n      required:\n        - criterions\n        - groupby\n        - type\n      type: object\n      properties:\n        type:\n          description: one of the defined possible values\n          $ref: 'https://raw.githubusercontent.com/ULCA-IN/ulca/master/specs/dataset-schema.yml#/components/schemas/DatasetType'\n        criterions:\n          type: array\n          description: comma separted system defined tags\n          items:\n            $ref: 'https://raw.githubusercontent.com/ULCA-IN/ulca/master/specs/dataset-schema.yml#/components/schemas/SearchParams'\n        groupby:\n          type: array\n          description: groupby based upon the entity\n          items:\n            $ref: 'https://raw.githubusercontent.com/ULCA-IN/ulca/master/specs/dataset-schema.yml#/components/schemas/SearchParams'\n            minItems: 1\n        starttime:\n          type: string\n          description: start of timestamp\n          format: datetime\n        endtime:\n          type: string\n          description: end of timestamp\n          format: datetime\n    DatasetSearchResponse:\n      required:\n        - data\n      type: object\n      properties:\n        data:\n          type: array\n          description: collection of value and label\n          items:\n            $ref: 'https://raw.githubusercontent.com/ULCA-IN/ulca/master/specs/common-schemas.yml#/components/schemas/DataPoint'\n    DatasetStatusRequest:\n      type: object\n      required:\n        - acknowlegmentId\n      properties:\n        acknowlegmentId:\n          type: string\n          description: provided acknowledgment identifier at the time of dataset submission\n    \n    DatasetStatusResponse:\n      type: object\n      required:\n        - acknowledgmentId\n        - status\n        - progress\n      properties:\n        acknowlegmentId:\n          type: string\n          description: user provided identifier\n        dataset:\n          type: object\n          description: uploaded dataset and its system representation\n          $ref: 'https://raw.githubusercontent.com/ULCA-IN/ulca/master/specs/dataset-schema.yml#/components/schemas/Dataset'\n        status:\n          type: string\n          description: status of each stage\n          enum:\n            - in-progress\n            - status-with-errors\n            - success\n            - failed\n        progress:\n          type: object\n          description: detailed for the dataset as it can be longer running operation\n          $ref: 'https://raw.githubusercontent.com/ULCA-IN/ulca/master/specs/dataset-schema.yml#/components/schemas/DatasetProgressInformation'\n    \n    DatasetIngestRequest:\n      type: object\n      required:\n        - acknowlegmentId\n        - params\n        - rows\n      properties:\n        acknowlegmentId:\n          type: string\n          description: the acknowlegment identifier should be same as returned to the user in the body of DatasetSubmitResponse.\n          format: uuidv4\n        referenceDatasetId:\n          type: string\n          description: original dataset identifier from which referenced dataset is drived.\n          format: uuidv4\n        params:\n          type: object\n          oneOf:\n            - $ref: 'https://raw.githubusercontent.com/ULCA-IN/ulca/master/specs/dataset-schema.yml#/components/schemas/ParallelDatasetParamsSchema'\n            - $ref: 'https://raw.githubusercontent.com/ULCA-IN/ulca/master/specs/dataset-schema.yml#/components/schemas/MonolingualParamsSchema'\n            - $ref: 'https://raw.githubusercontent.com/ULCA-IN/ulca/master/specs/dataset-schema.yml#/components/schemas/ASRParamsSchema'\n            - $ref: 'https://raw.githubusercontent.com/ULCA-IN/ulca/master/specs/dataset-schema.yml#/components/schemas/DocumentOCRParamsSchema'\n        rows:\n          type: array\n          items:\n            oneOf:\n              - $ref: 'https://raw.githubusercontent.com/ULCA-IN/ulca/master/specs/dataset-schema.yml#/components/schemas/ParallelDatasetRowSchema'\n              - $ref: 'https://raw.githubusercontent.com/ULCA-IN/ulca/master/specs/dataset-schema.yml#/components/schemas/MonolingualRowSchema'\n              - $ref: 'https://raw.githubusercontent.com/ULCA-IN/ulca/master/specs/dataset-schema.yml#/components/schemas/ASRRowSchema'\n              - $ref: 'https://raw.githubusercontent.com/ULCA-IN/ulca/master/specs/dataset-schema.yml#/components/schemas/DocumentOCRRowSchema'\n            minItems: 100\n  \n    ModelSubmitRequest:\n      type: object\n      description: starting the workflow for model life-cycle\n      properties:\n        model:\n          $ref: 'https://raw.githubusercontent.com/ULCA-IN/ulca/master/specs/model-benchmark-schema.yml#/components/schemas/Model'\n    ModelSubmitResponse:\n      type: object\n      description: 'ULCA will acknowledge the submission, however model is not published yet'\n      properties:\n        acknowlegmentId:\n          type: string\n          description: auto generated identifier to identify the internal submission\n          format: uuidv4\n        timestamp:\n          type: string\n          format: datetime\n          description: submission timestamp\n    ModelStatusRequest:\n      type: object\n      required:\n        - acknowlegmentId\n      properties:\n        acknowlegmentId:\n          type: string\n          description: provided acknowledgment identifier at the time of submission\n    ModelStatusResponse:\n      type: object\n      required:\n        - acknowledgmentId\n        - contributor\n        - timelines\n      properties:\n        acknowlegmentId:\n          type: string\n          description: ULCA provided identifier\n        contributor:\n          type: object\n          description: submitter of the dataset\n          $ref: 'https://raw.githubusercontent.com/ULCA-IN/ulca/master/specs/common-schemas.yml#/components/schemas/Contributor'\n        timelines:\n          type: array\n          items:\n            $ref: 'https://raw.githubusercontent.com/ULCA-IN/ulca/master/specs/common-schemas.yml#/components/schemas/Timeline'\n    ModelSearchRequest:\n      required:\n        - criterions\n        - groupby\n        - type\n      type: object\n      properties:\n        type:\n          description: one of the defined possible values\n          $ref: 'https://raw.githubusercontent.com/ULCA-IN/ulca/master/specs/model-benchmark-schema.yml#/components/schemas/ModelTask'\n        criterions:\n          type: array\n          description: comma separted system defined tags\n          items:\n            $ref: 'https://raw.githubusercontent.com/ULCA-IN/ulca/master/specs/model-benchmark-schema.yml#/components/schemas/SearchParams'\n        groupby:\n          type: array\n          description: groupby based upon the entity\n          items:\n            $ref: 'https://raw.githubusercontent.com/ULCA-IN/ulca/master/specs/model-benchmark-schema.yml#/components/schemas/SearchParams'\n            minItems: 1\n        starttime:\n          type: string\n          description: start of timestamp\n          format: datetime\n        endtime:\n          type: string\n          description: end of timestamp\n          format: datetime\n    ModelSearchResponse:\n      required:\n        - data\n      type: object\n      properties:\n        data:\n          type: array\n          description: collection of model\n          items:\n            $ref: 'https://raw.githubusercontent.com/ULCA-IN/ulca/master/specs/model-benchmark-schema.yml#/components/schemas/Model'\n    ModelTryMeRequest:\n      type: object\n      properties:\n        modelId:\n          type: string\n          description: model identifier allocated by ULCA\n        requestSchema:\n          type: object\n          oneOf:\n            - $ref: 'https://raw.githubusercontent.com/ULCA-IN/ulca/master/specs/translation-schemas.yml#/components/schemas/TranslateRequest'\n            - $ref: 'https://raw.githubusercontent.com/ULCA-IN/ulca/master/specs/audio-schema.yml#/components/schemas/SpeechRecognitionRequest'\n            - $ref: 'https://raw.githubusercontent.com/ULCA-IN/ulca/master/specs/document-ocr-schema.yml#/components/schemas/DocumentOCRRequest'\n    ModelTryMeResponse:\n      type: object\n      properties:\n        modelId:\n          type: string\n          description: model identifier allocated by ULCA\n        requestSchema:\n          type: object\n          oneOf:\n            - $ref: 'https://raw.githubusercontent.com/ULCA-IN/ulca/master/specs/translation-schemas.yml#/components/schemas/TranslateResponse'\n            - $ref: 'https://raw.githubusercontent.com/ULCA-IN/ulca/master/specs/audio-schema.yml#/components/schemas/SpeechRecognitionResult'\n            - $ref: 'https://raw.githubusercontent.com/ULCA-IN/ulca/master/specs/document-ocr-schema.yml#/components/schemas/DocumentOCRResponse'\n    ModelBenchmarkRequest:\n      type: object\n      properties:\n        modelId:\n          type: string\n          description: model identifier allocated by ULCA\n        benchmarks:\n          type: array\n          description: you can run benchmarking on subset of available benchmarks\n          items:\n            $ref: 'https://raw.githubusercontent.com/ULCA-IN/ulca/master/specs/model-benchmark-schema.yml#/components/schemas/Benchmarks'\n    ModelBenchmarkStatusRequest:\n      type: object\n      required:\n        - acknowlegmentId\n      properties:\n        acknowlegmentId:\n          type: string\n          description: provided acknowledgment identifier at the time of starting benchmark operation\n    ModelBenchmarkResponse:\n      type: object\n      properties:\n        acknowlegmentId:\n          type: string\n          description: ULCA provided identifier\n        timestamp:\n          type: string\n          format: datetime\n          description: submission timestamp\n        status:\n          type: string\n          enum:\n            - in-progress\n            - completed\n        results:\n          oneOf:\n            - $ref: 'https://raw.githubusercontent.com/ULCA-IN/ulca/master/specs/model-benchmark-schema.yml#/components/schemas/TranslationBenchmarkResult'\n            - $ref: 'https://raw.githubusercontent.com/ULCA-IN/ulca/master/specs/model-benchmark-schema.yml#/components/schemas/DocumentLayoutBenchmarkResult'\n            - $ref: 'https://raw.githubusercontent.com/ULCA-IN/ulca/master/specs/model-benchmark-schema.yml#/components/schemas/DocumentOCRBenchmarkResult'\n            - $ref: 'https://raw.githubusercontent.com/ULCA-IN/ulca/master/specs/model-benchmark-schema.yml#/components/schemas/ASRBenchmarkResult'\n    ModelBenchmarkPublishRequest:\n      type: object\n      properties:\n        modelId:\n          type: string\n          description: identifier provided by ULCA system\n        results:\n          oneOf:\n            - $ref: 'https://raw.githubusercontent.com/ULCA-IN/ulca/master/specs/model-benchmark-schema.yml#/components/schemas/TranslationBenchmarkResult'\n            - $ref: 'https://raw.githubusercontent.com/ULCA-IN/ulca/master/specs/model-benchmark-schema.yml#/components/schemas/DocumentLayoutBenchmarkResult'\n            - $ref: 'https://raw.githubusercontent.com/ULCA-IN/ulca/master/specs/model-benchmark-schema.yml#/components/schemas/DocumentOCRBenchmarkResult'\n            - $ref: 'https://raw.githubusercontent.com/ULCA-IN/ulca/master/specs/model-benchmark-schema.yml#/components/schemas/ASRBenchmarkResult'\n    ModelBenchmarkPublishResponse:\n      type: object\n      properties:\n        modelId:\n          type: string\n          description: identifier provided by ULCA system\n        results:\n          oneOf:\n            - $ref: 'https://raw.githubusercontent.com/ULCA-IN/ulca/master/specs/model-benchmark-schema.yml#/components/schemas/TranslationBenchmarkResult'\n            - $ref: 'https://raw.githubusercontent.com/ULCA-IN/ulca/master/specs/model-benchmark-schema.yml#/components/schemas/DocumentLayoutBenchmarkResult'\n            - $ref: 'https://raw.githubusercontent.com/ULCA-IN/ulca/master/specs/model-benchmark-schema.yml#/components/schemas/DocumentOCRBenchmarkResult'\n            - $ref: 'https://raw.githubusercontent.com/ULCA-IN/ulca/master/specs/model-benchmark-schema.yml#/components/schemas/ASRBenchmarkResult'\n    ModelBenchmarkDetailResultRequest:\n      type: object\n      properties:\n        modelId:\n          type: string\n          description: identifier provided by ULCA system\n    ModelBenchmarkDetailResultResponse:\n      type: object\n      properties:\n        modelId:\n          type: string\n          description: identifier provided by ULCA system\n        results:\n          oneOf:\n            - $ref: 'https://raw.githubusercontent.com/ULCA-IN/ulca/master/specs/model-benchmark-schema.yml#/components/schemas/TranslationBenchmarkResult'\n            - $ref: 'https://raw.githubusercontent.com/ULCA-IN/ulca/master/specs/model-benchmark-schema.yml#/components/schemas/DocumentLayoutBenchmarkResult'\n            - $ref: 'https://raw.githubusercontent.com/ULCA-IN/ulca/master/specs/model-benchmark-schema.yml#/components/schemas/DocumentOCRBenchmarkResult'\n            - $ref: 'https://raw.githubusercontent.com/ULCA-IN/ulca/master/specs/model-benchmark-schema.yml#/components/schemas/ASRBenchmarkResult'\n    \n    HttpSuccessResponse:\n      type: object\n      properties:\n        ok:\n          type: boolean\n          description: request successful indicator.\n        why:\n          type: string\n          description: Response message.\n        status:\n          type: object\n          description: status code as returned\n          oneOf:\n            - $ref: '#/components/schemas/StatusCode'\n        data:\n          type: object\n          description: response object based upon the submitted request\n          oneOf:\n            - $ref: '#/components/schemas/ModelSubmitResponse'\n            - $ref: '#/components/schemas/ModelStatusResponse'\n            - $ref: '#/components/schemas/ModelSearchResponse'\n            - $ref: '#/components/schemas/ModelBenchmarkResponse'\n            - $ref: '#/components/schemas/ModelBenchmarkPublishResponse'\n            - $ref: '#/components/schemas/ModelBenchmarkDetailResultResponse'\n            - $ref: '#/components/schemas/ModelTryMeResponse'\n            - $ref: '#/components/schemas/DatasetSubmitResponse'\n            - $ref: '#/components/schemas/DatasetStatusResponse'\n            - $ref: '#/components/schemas/DatasetSearchResponse'\n    \n    HttpErrorResponse:\n      type: object\n      properties:\n        ok:\n          type: boolean\n          description: request successful indicator.\n        why:\n          type: string\n          description: Response message.\n        status:\n          type: object\n          description: status code as returned\n          oneOf:\n            - $ref: '#/components/schemas/StatusCode'\n    \n    StatusCode:\n      required:\n      - code\n      - message\n      type: object\n      properties:\n        code:\n          type: string\n          description: status code as encountered in the processing life-cycle\n          enum:\n            - insufficent-dataset-rows-provided\n            - searched-query-not-supported\n            - missing-mandatory-parameters\n            - authorization-failed\n            - schema-validation-failed\n            - object-validation-failed\n            - benchmark-failed\n            - invalid-callback-url\n        message:\n          type: string\n          description: human understandable format\n    \n  securitySchemes:\n    authToken:\n      type: apiKey\n      description: token issued by authenticating the user\n      name: auth-token\n      in: header\n",
			"canonicalURL": "/github.com/ULCA-IN/ulca@1d834e4b7fa2256780e524838388c50cedf4a943/-/blob/specs/ulca-api-contract.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/ULCA-IN/ulca/blob/1d834e4b7fa2256780e524838388c50cedf4a943/specs/ulca-api-contract.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "parse: parse spec: parse components: schemas: \"DatasetIngestRequest\": parse schema: property \"params\": parse schema: parse schema: parse schema: parse schema: parse schema: property \"version\": at https://raw.githubusercontent.com/ULCA-IN/ulca/master/specs/dataset-schema.yml:84:20: parse default: expected type \"string\", got \"number\""
}