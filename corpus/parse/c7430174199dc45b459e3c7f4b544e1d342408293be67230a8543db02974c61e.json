{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/softcite/softcite_kb"
		},
		"file": {
			"name": "openapi.yaml",
			"size": 0,
			"path": "software_kb/api/openapi/openapi.yaml",
			"byteSize": 13175,
			"content": "openapi: \"3.0.0\"\n\ninfo:\n  description: Web services for the Softcite Knowledge Base\n  version: \"0.1.0\"\n  title: Softcite KB web service\n  contact:\n    name: Patrice Lopez\n    email: patrice.lopez@science-miner.com\n    url: https://science-miner.com\n  license:\n    name: Apache 2.0\n    url: https://www.apache.org/licenses/LICENSE-2.0.html\n\nservers:\n  - url: http://localhost:5000/api\n  - url: http://work.local:5000/api\n  - url: /api\n\n# Paths supported by the server application\npaths:\n  /alive:\n    get:\n      operationId: generic.alive\n      tags:\n        - generic\n      summary: Return true if the API is up and running\n      description: Return true if the API is up and running\n      responses:\n        200:\n          description: API is up and running\n        400:\n          description: Bad request\n  /version:\n    get:\n      operationId: generic.version\n      tags:\n        - generic\n      summary: Return the version number of the current web API\n      description: Return the version number of the current web API\n      responses:\n        200:\n          description: API version number\n        400:\n          description: Bad request\n\n  /software/{id}:\n    get:\n      operationId: software.read_one\n      tags:\n        - software\n      summary: Access information for one software entity\n      description: Access information for one software entity\n      parameters:\n        - name: id\n          in: path\n          description: Identifier of the software entity\n          required: true\n          schema:\n            type: string\n            example: \"Q8029\"\n      responses:\n        200:\n          description: Successfully access the information for the software entity\n        400:\n          description: Bad request\n\n  /software/{id}/citations:\n    get:\n      operationId: software.read_citations\n      tags:\n        - software\n      summary: Access information to all citations of one software entity\n      description: Access information to all citations of one software entity\n      parameters:\n        - name: id\n          in: path\n          description: Identifier of the cited software entity\n          required: true\n          schema:\n            type: string\n            example: \"Q8029\"\n      responses:\n        200:\n          description: Successfully access the information for all the citations to the software entity\n        400:\n          description: Bad request\n\n  /software/disambiguate:\n    post:\n      operationId: software.disambiguate\n      tags:\n        - software\n      summary: Disambiguate a software mention against the database content \n      description: Disambiguate a software mention against the database content \n      requestBody:\n        description: The software mention JSON object\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/software'\n      responses:\n        200:\n          description: Successfully disambiguate the mention\n        400:\n          description: Bad request\n\n  /document/mentions:\n    get:\n      operationId: document.read_one_mentions\n      tags:\n        - document\n      summary: Access all mention information of one document\n      description: Access all mention information of one document\n      parameters:\n        - name: id\n          in: query\n          description: Identifier of the document\n          required: true\n          schema:\n            type: string\n            example: \"10.1002/blabla\"\n      responses:\n        200:\n          description: Successfully access the information for all the mentions to the document\n        400:\n          description: Bad request\n\n  /software/{id}/documents:\n    get:\n      operationId: software.nbest_documents\n      tags:\n        - software\n      summary: Provide the n-best citing documents for a software entity\n      description: Provide the n-best citing documents for a software entity\n      parameters:\n        - name: id\n          in: path\n          description: Identifier of the cited software entity\n          required: true\n          schema:\n            type: string\n            example: \"Q8029\"\n        - name: n\n          in: formData\n          description: Number of most relevant documents citing a software entity (default 1)          \n          required: false\n          schema:\n            type: integer\n            default: 1\n            minimum: 1\n      responses:\n        200:\n          description: Successfully provide the n-best citing documents for a software entity\n        400:\n          description: Bad request\n\n  /software/{id}/related:\n    get:\n      operationId: software.nbest_software\n      tags:\n        - software\n      summary: Provide the n most related software entities for a given software entity\n      description: Provide the n most related software entities for a given software entity\n      parameters:\n        - name: id\n          in: path\n          description: Identifier of the cited software entity\n          required: true\n          schema:\n            type: string\n            example: \"Q8029\"\n        - name: n\n          in: formData\n          description: Number of most relevant software entities for a given software entity (default 1)\n          required: false\n          schema:\n            type: integer\n            default: 1\n            minimum: 1\n      responses:\n        200:\n          description: Successfully provide the n most related software entities for a given software entity\n        400:\n          description: Bad request\n\n  /person/{id}/software:\n    get:\n      operationId: person.software\n      tags:\n        - person\n      summary: Provide for a given person, all the software entities he has authored \n      description: Provide for a given person, all the software entities he has authored and for each software the citing documents supporting the authorship \n      parameters:\n        - name: id\n          in: path\n          description: Identifier of the person in the database\n          required: true\n          schema:\n            type: string\n            example: \"Q93068\"\n      responses:\n        200:\n          description: Successfully provide the software entities authored by one person\n        400:\n          description: Bad request      \n\n  /person/disambiguate:\n      post:\n        operationId: person.disambiguate\n        tags:\n          - person\n        summary: Disambiguate a person name against the database content \n        description: Disambiguate a person name against the database content \n        requestBody:\n          description: The person JSON object information\n          required: true\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/person'\n        responses:\n          200:\n            description: Successfully disambiguate the person name\n          400:\n            description: Bad request\n\n  /organization/{id}/software:\n    get:\n      operationId: organization.software\n      tags:\n        - organization\n      summary: Provide for a given organization, all the software entities it is publishing\n      description: Provide for a given organization, all the software entities it is publishing and for each software the citing documents supporting the publication role \n      parameters:\n        - name: id\n          in: path\n          description: Identifier of the organization in the database\n          required: true\n          schema:\n            type: string\n            example: \"Q93068\"\n      responses:\n        200:\n          description: Successfully provide the software entities authored by one person\n        400:\n          description: Bad request      \n\n  /organization/disambiguate:\n      post:\n        operationId: organization.disambiguate\n        tags:\n          - organization\n        summary: Disambiguate a organization name against the database content \n        description: Disambiguate a organization name and its additional metadata against the database content \n        requestBody:\n          description: The organization JSON object information\n          required: true\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/organization'\n        responses:\n          200:\n            description: Successfully disambiguate the organization name\n          400:\n            description: Bad request\n\n  /document:\n      post:\n        operationId: document.add\n        tags:\n          - document\n        summary: Add to the Knowledge Base a new annotated document\n        description: Add to the Knowledge Base a new document, its new annotations, try to disambiguate the software mention and creators, update the different KB object.\n        requestBody:\n          description: The annotation JSON object information\n          required: true\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/person'\n        responses:\n          200:\n            description: Successful addition of the document and its annotations into the knowledge base\n          400:\n            description: Bad request\n\n  /document/software:\n    get:\n      operationId: document.read_one_software\n      tags:\n        - document\n      summary: Access all software entities cited in one document\n      description: Access all software entities cited in one document\n      parameters:\n        - name: id\n          in: query\n          description: Identifier of the document\n          required: true\n          schema:\n            type: string\n            example: \"10.1002/blabla\"\n      responses:\n        200:\n          description: Successfully access the information for all the software entities cited in one document\n        400:\n          description: Bad request\n\n  /document:\n    delete:\n      operationId: document.delete\n      tags: \n        - document\n      summary: Delete a document from the Knowledge Base, this will also delete all its annotations/citations\n      description: Delete a document from the Knowledge Base, this will also delete all its annotations/citations at the software entity level\n      parameters:\n        - name: id\n          in: query\n          description: Identifier of the document that should be deleted from the KB\n          required: true\n          schema:\n            type: string\n            example: \"10.1002/blabla\"\n      responses:\n        200:\n          description: Successful deletion of the document into the knowledge base\n        400:\n          description: Bad request\n\n  /document/disambiguate:\n      post:\n        operationId: document.disambiguate\n        tags:\n          - document\n        summary: Disambiguate document metadata against the database content \n        description: Disambiguate document metadata against the database content \n        requestBody:\n          description: The metadata document JSON object information\n          required: true\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/document'\n        responses:\n          200:\n            description: Successfully disambiguate the document metadata\n          400:\n            description: Bad request  \n\n  /document/software/related:\n    get:\n      operationId: document.nbest_software\n      tags:\n        - document\n      summary: Provide for a given document the n most relevant related software entities \n      description: Provide for a given document the n most relevant related software entities NOT mentioned in the document\n      parameters:\n        - name: id\n          in: query\n          description: Identifier of the document for which we want the most related software\n          required: true\n          schema:\n            type: string\n            example: \"10.1002/blabla\"\n        - name: n\n          in: query\n          description: Number of most relevant software entities for a given document (default 1)\n          required: false\n          schema:\n            type: integer\n            default: 1\n            minimum: 1\n      responses:\n        200:\n          description: Successfully provide the n most related software entities for a given document\n        400:\n          description: Bad request      \n\n\ncomponents:\n  schemas:\n\n    software:\n      required:\n        - name\n      properties:\n        name:\n          type: string\n        creator:\n          type: string\n        version_number:\n          type: string\n        version_date:\n          type: string\n        url:\n          type: string\n\n    document:\n      properties:\n        doi:\n          type: string\n        pmc:\n          type: string\n        pmid:\n          type: string\n        arxiv_id:\n          type: string\n\n    person:\n      required:\n        - lastname\n      properties:\n        lastname:\n          type: string\n        firstname:\n          type: string\n        middlename:\n          type: string\n        orcid:\n          type: string\n\n    organization:\n      required:\n        - name\n      properties:\n        name:\n          type: string\n        acronym:\n          type: string\n        full_address:\n          type: string\n        country:\n          type: string",
			"canonicalURL": "/github.com/softcite/softcite_kb@1d26a31a1e97582df398121efdbe47b4a6ef2711/-/blob/software_kb/api/openapi/openapi.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/softcite/softcite_kb/blob/1d26a31a1e97582df398121efdbe47b4a6ef2711/software_kb/api/openapi/openapi.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "parse: parse spec: parse path items: path \"/software/{id}/documents\": get: operation \"software.nbest_documents\": parameters: parse parameter \"false\": at 1:8737: unknown parameter location \"formData\""
}