{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/APIs-guru/openapi-directory"
		},
		"file": {
			"name": "openapi.yaml",
			"size": 0,
			"path": "APIs/hetzner.cloud/1.0.0/openapi.yaml",
			"byteSize": 1045339,
			"content": "openapi: 3.0.0\nservers:\n  - url: https://api.hetzner.cloud/v1\ninfo:\n  description: |\n    This is the official API documentation for the Public Hetzner Cloud.\n\n    ## Introduction\n\n    The Hetzner Cloud API operates over HTTPS and uses JSON as its data format. The API is a RESTful API and utilizes HTTP methods and HTTP status codes to specify requests and responses.\n\n    As an alternative to working directly with our API you may also consider to use:\n    * Our CLI program [hcloud](https://github.com/hetznercloud/cli)\n    * Our [library for Go](https://github.com/hetznercloud/hcloud-go)\n    * Our [library for Python](https://github.com/hetznercloud/hcloud-python)\n\n    Also you can find a [list of libraries, tools, and integrations on GitHub](https://github.com/hetznercloud/awesome-hcloud).\n\n    If you are developing integrations based on our API and your product is Open Source you may be eligible for a free one time €50 (excl. VAT) credit on your account. Please contact us via the the support page on your Cloud Console and let us know the following:\n    * The type of integration you would like to develop\n    * Link to the GitHub repo you will use for the Project\n    * Link to some other Open Source work you have already done (if you have done so)\n\n    ## Getting Started\n    To get started using the API you first need an API token. Sign in into the [Hetzner Cloud Console](https://console.hetzner.cloud/) choose a Project, go to `Access` → `Tokens`, and create a new token. Make sure to copy the token because it won’t be shown to you again. A token is bound to a Project, to interact with the API of another Project you have to create a new token inside the Project. Let’s say your new token is `jEheVytlAoFl7F8MqUQ7jAo2hOXASztX`.\n\n    You’re now ready to do your first request against the API. To get a list of all Servers in your Project, issue the example request on the right side using [curl](https://curl.haxx.se/).\n\n    Make sure to replace the token in the example command with the token you have just created. Since your Project probably does not contain any Servers yet, the example response will look like the response on the right side. We will almost always provide a resource root like `servers` inside the example response. A response can also contain a `meta` object with information like [Pagination](https://docs.hetzner.cloud/#overview-pagination).\n\n    **Example Request**\n    ```bash\n    curl -H \"Authorization: Bearer jEheVytlAoFl7F8MqUQ7jAo2hOXASztX\" \\\n        https://api.hetzner.cloud/v1/servers\n    ```\n\n    **Example Response**\n    ```json\n    {\n        \"servers\": [],\n        \"meta\": {\n            \"pagination\": {\n                \"page\": 1,\n                \"per_page\": 25,\n                \"previous_page\": null,\n                \"next_page\": null,\n                \"last_page\": 1,\n                \"total_entries\": 0\n            }\n        }\n    }\n    ```\n\n    ## Authentication\n    All requests to the Hetzner Cloud API must be authenticated via a API token. Include your secret API token in every request you send to the API with the `Authorization` HTTP header.\n\n    To create a new API token for your Project, switch into the [Hetzner Cloud Console](https://console.hetzner.cloud/) choose a Project, go to `Access` → `Security`, and create a new token.\n\n    **Example Authorization header**\n    ```html\n    Authorization: Bearer LRK9DAWQ1ZAEFSrCNEEzLCUwhYX1U3g7wMg4dTlkkDC96fyDuyJ39nVbVjCKSDfj\n    ```\n\n    ## Errors\n    Errors are indicated by HTTP status codes. Further, the response of the request which generated the error contains an error code, an error message, and, optionally, error details. The schema of the error details object depends on the error code.\n\n    The error response contains the following keys:\n\n    | Keys      | Meaning                                                               |\n    |-----------|-----------------------------------------------------------------------|\n    | `code`    | Short string indicating the type of error (machine-parsable)          |\n    | `message` | Textual description on what has gone wrong                            |\n    | `details` | An object providing for details on the error (schema depends on code) |\n\n    **Example response**\n    ```json\n    {\n      \"error\": {\n        \"code\": \"invalid_input\",\n        \"message\": \"invalid input in field 'broken_field': is too long\",\n        \"details\": {\n          \"fields\": [\n            {\n              \"name\": \"broken_field\",\n              \"messages\": [\"is too long\"]\n            }\n          ]\n        }\n      }\n    }\n    ```\n\n    ### Error Codes\n\n    | Code                      | Description                                                                      |\n    |---------------------------|----------------------------------------------------------------------------------|\n    | `forbidden`               | Insufficient permissions for this request                                        |\n    | `invalid_input`           | Error while parsing or processing the input                                      |\n    | `json_error`              | Invalid JSON input in your request                                               |\n    | `locked`                  | The item you are trying to access is locked (there is already an Action running) |\n    | `not_found`               | Entity not found                                                                 |\n    | `rate_limit_exceeded`     | Error when sending too many requests                                             |\n    | `resource_limit_exceeded` | Error when exceeding the maximum quantity of a resource for an account           |\n    | `resource_unavailable`    | The requested resource is currently unavailable                                  |\n    | `service_error`           | Error within a service                                                           |\n    | `uniqueness_error`        | One or more of the objects fields must be unique                                 |\n    | `protected`               | The Action you are trying to start is protected for this resource                |\n    | `maintenance`             | Cannot perform operation due to maintenance                                      |\n    | `conflict`                | The resource has changed during the request, please retry                        |\n    | `unsupported_error`       | The corresponding resource does not support the Action                           |\n    | `token_readonly`          | The token is only allowed to perform GET requests                                |\n\n    **invalid_input**\n    ```json\n    {\n      \"error\": {\n        \"code\": \"invalid_input\",\n        \"message\": \"invalid input in field 'broken_field': is too long\",\n        \"details\": {\n          \"fields\": [\n            {\n              \"name\": \"broken_field\",\n              \"messages\": [\"is too long\"]\n            }\n          ]\n        }\n      }\n    }\n    ```\n\n    **uniqueness_error**\n    ```json\n    {\n      \"error\": {\n        \"code\": \"uniqueness_error\",\n        \"message\": \"SSH key with the same fingerprint already exists\",\n        \"details\": {\n          \"fields\": [\n            {\n              \"name\": \"public_key\"\n            }\n          ]\n        }\n      }\n    }\n    ```\n\n    **resource_limit_exceeded**\n    ```json\n    {\n      \"error\": {\n        \"code\": \"resource_limit_exceeded\",\n        \"message\": \"project limit exceeded\",\n        \"details\": {\n          \"limits\": [\n            {\n              \"name\": \"project_limit\"\n            }\n          ]\n        }\n      }\n    }\n    ```\n\n    ## Labels\n    Labels are `key/value` pairs that can be attached to Servers, Floating IPs, Volumes, SSH keys and Images.\n\n    Valid label keys have two segments: an optional prefix and name, separated by a slash (`/`). The name segment is required and must be a string of 63 characters or less, beginning and ending with an alphanumeric character (`[a-z0-9A-Z]`) with dashes (`-`), underscores (`_`), dots (`.`), and alphanumerics between. The prefix is optional. If specified, the prefix must be a DNS subdomain: a series of DNS labels separated by dots (`.`), not longer than 253 characters in total, followed by a slash (`/`).\n\n    Valid label values must be a string of 63 characters or less and must be empty or begin and end with an alphanumeric character (`[a-z0-9A-Z]`) with dashes (`-`), underscores (`_`), dots (`.`), and alphanumerics between.\n\n    The `hetzner.cloud/` prefix is reserved and cannot be used.\n\n    **Example Labels**\n    ```json\n    {\n      \"labels\": {\n        \"environment\":\"development\",\n        \"service\":\"backend\",\n        \"example.com/my\":\"label\",\n        \"just-a-key\":\"\"\n      }\n    }\n    ```\n\n    ## Label Selector\n    For resources with labels, you can filter resources by their labels using the label selector query language.\n\n    | Expression           | Meaning                                                             |\n    |----------------------|---------------------------------------------------------------------|\n    | `k==v` / `k=v`       | Value of key `k` does equal value `v`                               |\n    | `k!=v`               | Value of key `k` does not equal value `v`                           |\n    | `k`                  | Key `k` is present                                                  |\n    | `!k`                 | Key `k` is not present                                              |\n    | `k in (v1,v2,v3)`    | Value of key `k` is `v1`, `v2`, or `v3`                             |\n    | `k notin (v1,v2,v3)` | Value of key `k` is neither `v1`, nor `v2`, nor `v3`                |\n    | `k1==v,!k2`          | Value of key `k1` is `v` and key `k2` is not present                |\n\n    ### Examples\n    * Returns all resources that have a `env=production` label and that don't have a `type=database` label:\n\n      `env=production,type!=database`\n    * Returns all resources that have a `env=testing` or `env=staging` label:\n\n        `env in (testing,staging)`\n    * Returns all resources that don't have a `type` label:\n\n        `!type`\n\n    ## Pagination\n    Responses which return multiple items support pagination. If they do support pagination, it can be controlled with following query string parameters:\n\n    * A `page` parameter specifies the page to fetch. The number of the first page is 1.\n    * A `per_page` parameter specifies the number of items returned per page. The default value is 25, the maximum value is 50 except otherwise specified in the documentation.\n\n    Responses contain a `Link` header with pagination information.\n\n    Additionally, if the response body is JSON and the root object is an object, that object has a `pagination` object inside the `meta` object with pagination information:\n\n    **Example Pagination**\n    ```json\n    {\n        \"servers\": [...],\n        \"meta\": {\n            \"pagination\": {\n                \"page\": 2,\n                \"per_page\": 25,\n                \"previous_page\": 1,\n                \"next_page\": 3,\n                \"last_page\": 4,\n                \"total_entries\": 100\n            }\n        }\n    }\n    ```\n\n    The keys `previous_page`, `next_page`, `last_page`, and `total_entries` may be `null` when on the first page, last page, or when the total number of entries is unknown.\n\n    **Example Pagination Link header**\n    ```bash\n    Link: \u003chttps://api.hetzner.cloud/v1/actions?page=2\u0026per_page=5\u003e; rel=\"prev\",\n          \u003chttps://api.hetzner.cloud/v1/actions?page=4\u0026per_page=5\u003e; rel=\"next\",\n          \u003chttps://api.hetzner.cloud/v1/actions?page=6\u0026per_page=5\u003e; rel=\"last\"\n    ```\n\n    Line breaks have been added for display purposes only and responses may only contain some of the above `rel` values.\n\n    ## Rate Limiting\n    All requests, whether they are authenticated or not, are subject to rate limiting. If you have reached your limit, your requests will be handled with a `429 Too Many Requests` error. Burst requests are allowed. Responses contain serveral headers which provide information about your current rate limit status.\n\n    * The `RateLimit-Limit` header contains the total number of requests you can perform per hour.\n    * The `RateLimit-Remaining` header contains the number of requests remaining in the current rate limit time frame.\n    * The `RateLimit-Reset` header contains a UNIX timestamp of the point in time when your rate limit will have recovered and you will have the full number of requests available again.\n\n    The default limit is 3600 requests per hour and per Project. The number of remaining requests increases gradually. For example, when your limit is 3600 requests per hour, the number of remaining requests will increase by 1 every second.\n\n    ## Server Metadata\n    Your Server can discover metadata about itself by doing a HTTP request to specific URLs. The following data is available:\n\n    | Data             | Format | Contents                                                     |\n    |------------------|--------|--------------------------------------------------------------|\n    | hostname         | text   | Name of the Server as set in the api                         |\n    | instance-id      | number | ID of the server                                             |\n    | public-ipv4      | text   | Primary public IPv4 address                                  |\n    | private-networks | yaml   | Details about the private networks the Server is attached to |\n\n    **Example: Hostname**\n    ```bash\n    $ curl http://169.254.169.254/hetzner/v1/metadata/hostname\n    my-server\n    ```\n\n    **Example: Instance ID**\n    ```bash\n    $ curl http://169.254.169.254/hetzner/v1/metadata/instance-id\n    42\n    ```\n\n    **Example: Public IPv4**\n    ```bash\n    $ curl http://169.254.169.254/hetzner/v1/metadata/public-ipv4\n    1.2.3.4\n    ```\n\n    **Example: Private Networks**\n    ```bash\n    $ curl http://169.254.169.254/hetzner/v1/metadata/private-networks\n    ```\n\n    ```json\n    - ip: 10.0.0.2\n      alias_ips: [10.0.0.3, 10.0.0.4]\n      interface_num: 1\n      mac_address: 86:00:00:2a:7d:e0\n      network_id: 1234\n      network_name: nw-test1\n      network: 10.0.0.0/8\n      subnet: 10.0.0.0/24\n      gateway: 10.0.0.1\n    - ip: 192.168.0.2\n      alias_ips: []\n      interface_num: 2\n      mac_address: 86:00:00:2a:7d:e1\n      network_id: 4321\n      network_name: nw-test2\n      network: 192.168.0.0/16\n      subnet: 192.168.0.0/24\n      gateway: 192.168.0.1\n    ```\n\n    ## Sorting\n    Some responses which return multiple items support sorting. If they do support sorting the documentation states which fields can be used for sorting. You specify sorting with the `sort` query string parameter. You can sort by multiple fields. You can set the sort direction by appending `:asc` or `:desc` to the field name. By default, ascending sorting is used.\n\n    **Example: Sorting**\n    ```bash\n    https://api.hetzner.cloud/v1/actions?sort=status\n    https://api.hetzner.cloud/v1/actions?sort=status:asc\n    https://api.hetzner.cloud/v1/actions?sort=status:desc\n    https://api.hetzner.cloud/v1/actions?sort=status:asc\u0026sort=command:desc\n    ```\n\n    ## Changelog\n    You can find our changelog on our [Developer Hub](https://developers.hetzner.com/cloud/changelog/?id=backend).\n  title: Hetzner Cloud API\n  version: 1.0.0\n  x-apisguru-categories:\n    - hosting\n  x-logo:\n    url: https://www.hetzner.com/themes/hetzner/images/favicons/apple-touch-icon.png\n  x-origin:\n    - format: openapi\n      url: https://docs.hetzner.cloud/spec.json\n      version: \"3.0\"\n  x-providerName: hetzner.cloud\ntags:\n  - description: Actions show the results and progress of asynchronous requests to the API.\n    name: Actions\n  - description: TLS/SSL Certificates prove the identity of a Server and are used to encrypt client traffic.\n    name: Certificates\n  - name: Certificate Actions\n  - description: |\n      Each Datacenter represents a physical entity where virtual machines are hosted. Note that Datacenters are **not** guaranteed to be entirely independent failure domains.\n\n      Datacenters in the same Location are connected by very low latency links.\n\n      Datacenter names are made up of their Location and Datacenter number, for example `fsn1-dc8` means Datacenter `8` in Location `fsn1`.\n    name: Datacenters\n  - description: |\n      Firewalls can limit the network access to or from your resources.\n\n      * When applying a firewall with no `in` rule all inbound traffic will be dropped. The default for `in` is `DROP`.\n      * When applying a firewall with no `out` rule all outbound traffic will be accepted. The default for `out` is `ACCEPT`.\n    name: Firewalls\n  - name: Firewall Actions\n  - description: |\n      Floating IPs help you to create highly available setups. You can assign a Floating IP to any Server. The Server can then use this IP. You can reassign it to a different Server at any time, or you can choose to unassign the IP from Servers all together.\n\n      Floating IPs can be used globally. This means you can assign a Floating IP to a Server in one Location and later reassign it to a Server in a different Location. For optimal routing and latency Floating IPs should be used in the Location they were created in.\n\n      For Floating IPs to work with your Server, you must configure them inside your operation system.\n\n      Floating IPs of type `ipv4` use a single IPv4 address as their `ip` property. Floating IPs of type `ipv6` use a /64 network such as `fc00::/64` as their `ip` property. Any IP address within that network can be used on your host.\n\n      Floating IPs are billed on a monthly basis.\n    name: Floating IPs\n  - name: Floating IP Actions\n  - description: |\n      Images are blueprints for your VM disks. They can be of different types:\n\n      ### System Images\n      Distribution Images maintained by us, e.g. “Ubuntu 20.04”\n\n      ### Snapshot Images\n      Maintained by you, for example “Ubuntu 20.04 with my own settings”. These are billed per GB per month.\n\n      ### Backup Images\n      Daily Backups of your Server. Will automatically be created for Servers which have backups enabled (`POST /servers/{id}/actions/enable_backup`)\n\n      Bound to exactly one Server. If you delete the Server, you also delete all backups bound to it. You may convert backup Images to snapshot Images to keep them.\n\n      These are billed at 20% of your instance price for 7 backup slots.\n\n      ### App Images\n      Prebuild images with specific software configurations, e.g. “Wordpress”. All app images are created by us.\n    name: Images\n  - name: Image Actions\n  - description: |\n      ISOs are read-only Images of DVDs. While we recommend using our Image functionality to install your Servers we also provide some stock ISOs so you can install more exotic operating systems by yourself.\n\n      On request our support uploads a private ISO just for you. These are marked with type `private` and only visible in your Project.\n\n      To attach an ISO to your Server use `POST /servers/{id}/actions/attach_iso`.\n    name: ISOs\n  - name: Load Balancers\n  - name: Load Balancer Actions\n  - description: |\n      Load Balancer types define kinds of Load Balancers offered. Each type has an hourly and a monthly cost. You will pay whichever amount is lower for your usage of this specific Load Balancer. Costs may differ between Locations.\n\n      Currency for all amounts is €. All prices exclude VAT.\n    name: Load Balancer Types\n  - description: Datacenters are organized by Locations. Datacenters in the same Location are connected with very low latency links.\n    name: Locations\n  - description: |\n      Networks is a private networks feature. These Networks are optional and they coexist with the public network that every Server has by default.\n\n      They allow Servers to talk to each other over a dedicated network interface using private IP addresses not available publicly.\n\n      The IP addresses are allocated and managed via the API, they must conform to [RFC1918](https://tools.ietf.org/html/rfc1918#section-3) standard. IPs and network interfaces defined under Networks do not provide public internet connectivity, you will need to use the already existing public network interface for that.\n\n      Each network has a user selected `ip_range` which defines all available IP addresses which can be used for Subnets within the Network.\n\n      To assign individual IPs to Servers you will need to create Network Subnets, described below.\n\n      Currently Networks support IPv4 only.\n\n      ### Subnets\n      Subnets divide the `ip_range` from the parent Network object into multiple Subnetworks that you can use for different specific purposes.\n\n      For each subnet you need to specify its own `ip_range` which must be contained within the parent Network’s `ip_range`. Additionally each subnet must belong to one of the available Network Zones described below. Subnets can not have overlapping IP ranges.\n\n      Currently there are three types of subnet:\n      * type `cloud` is used to connect cloud Resources into your Network.\n      * type `server` was used to connect only cloud Servers into your Network. This type is deprecated and is replaced by type cloud.\n      * type `vswitch` allows you to connect [Dedicated Server vSwitch](https://docs.hetzner.com/robot/dedicated-server/network/vswitch) - and all Dedicated Servers attached to it - into your Network\n\n      Subnets of type `vswitch` must set a `vswitch_id` which is the ID of the existing vSwitch in Hetzner Robot that should be coupled.\n\n      ### Network Zones\n      Network Zones are groups of Locations which have special high-speed network connections between them. The [Location object](https://docs.hetzner.cloud/#locations-get-a-location) contains the `network_zone` property each Location belongs to. Currently only one Network zone exists and is called `eu-central`. It spans the `nbg1`, `fsn1` and `hel1` Locations.\n\n      ### IP address management\n      When a cloud Server is attached to a network without the user specifying an IP it automatically gets an IP address assigned from a subnet of type `server` in the same network zone. If you specify the optional `ip` parameter when attaching then we will try to assign that IP. Keep in mind that the Server’s location must be covered by the Subnet’s Network Zone if you specify an IP, or that at least one Subnet with the zone covering Server’s location must exist.\n\n      A cloud Server can also have more than one IP address in a Network by specifying aliases. For details see the [attach to network action](https://docs.hetzner.cloud/#server-actions-attach-a-server-to-a-network).\n\n      The following IP addresses are reserved in networks and can not be used:\n        * the first IP of the network `ip_range` as it will be used as a default gateway for the private Network interface.\n        * `172.31.1.1` as it is being used as default gateway for our public Network interfaces.\n\n      ### Coupling Dedicated Servers\n\n      By using subnets of type `vswitch` you can couple the Cloud Networks with an existing [Dedicated Server vSwitch](https://docs.hetzner.com/robot/dedicated-server/network/vswitch) and enable dedicated and cloud servers to\n      talk to each other over the Network.\n      In order for this to work the dedicated servers may only use IPs from the subnet and must have a special network configuration. Please refer to [FAQ](https://docs.hetzner.com/cloud/networks/connect-dedi-vswitch). vSwitch Layer 2 features are not supported.\n\n      ### Routes\n      Networks also support the notion of routes which are automatically applied to private traffic. A route makes sure that all packets for a given `destination` IP prefix will be sent to the address specified in its `gateway`.\n    name: Networks\n  - name: Network Actions\n  - description: |\n      Placement groups are used to influence the location of interdependent virtual servers in our data centers. The distribution of the different instances within a group is based on a pattern specified in the type. By enforcing certain rules on the placement of instances within our infrastructure, availability can be influenced in a way that fits your needs best.\n\n      In `spread` placement groups, all virtual servers will run on different physical servers. This decreases the probability that some instances might fail together.\n    name: Placement Groups\n  - description: Returns prices for resources.\n    name: Pricing\n  - description: Servers are virtual machines that can be provisioned.\n    name: Servers\n  - name: Server Actions\n  - description: |\n      Server types define kinds of Servers offered. Each type has an hourly and a monthly cost. You will pay whichever cost is lower for your usage of this specific Server. Costs may differ between Locations.\n\n      Currency for all amounts is €. All prices exclude VAT.\n    name: Server Types\n  - description: SSH keys are public keys you provide to the cloud system. They can be injected into Servers at creation time. We highly recommend that you use keys instead of passwords to manage your Servers.\n    name: SSH Keys\n  - description: |\n      A Volume is a highly-available, scalable, and SSD-based block storage for Servers.\n\n      Pricing for Volumes depends on the Volume size and Location, not the actual used storage.\n\n      Please see [Hetzner Docs](https://docs.hetzner.com/cloud/#Volumes) for more details about Volumes.\n    name: Volumes\n  - name: Volume Actions\npaths:\n  /actions:\n    get:\n      description: Returns all Action objects. You can `sort` the results by using the sort URI parameter, and filter them with the `status` parameter.\n      parameters:\n        - description: Can be used multiple times, the response will contain only Actions with specified IDs\n          in: query\n          name: id\n          required: false\n          schema:\n            type: integer\n        - description: Can be used multiple times.\n          in: query\n          name: sort\n          required: false\n          schema:\n            enum:\n              - id\n              - id:asc\n              - id:desc\n              - command\n              - command:asc\n              - command:desc\n              - status\n              - status:asc\n              - status:desc\n              - progress\n              - progress:asc\n              - progress:desc\n              - started\n              - started:asc\n              - started:desc\n              - finished\n              - finished:asc\n              - finished:desc\n            title: ParameterSort\n            type: string\n        - description: Can be used multiple times, the response will contain only Actions with specified statuses\n          in: query\n          name: status\n          required: false\n          schema:\n            enum:\n              - running\n              - success\n              - error\n            title: ParameterStatus\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                properties:\n                  actions:\n                    items:\n                      properties:\n                        command:\n                          description: Command executed in the Action\n                          example: start_server\n                          type: string\n                        error:\n                          description: Error message for the Action if error occurred, otherwise null\n                          nullable: true\n                          properties:\n                            code:\n                              description: Fixed machine readable code\n                              example: action_failed\n                              type: string\n                            message:\n                              description: Humanized error message\n                              example: Action failed\n                              type: string\n                          required:\n                            - code\n                            - message\n                          type: object\n                        finished:\n                          description: Point in time when the Action was finished (in ISO-8601 format). Only set if the Action is finished otherwise null.\n                          example: 2016-01-30T23:55:00+00:00\n                          nullable: true\n                          type: string\n                        id:\n                          description: ID of the Resource\n                          example: 42\n                          type: integer\n                        progress:\n                          description: Progress of Action in percent\n                          example: 100\n                          type: number\n                        resources:\n                          description: Resources the Action relates to\n                          items:\n                            properties:\n                              id:\n                                description: ID of the Resource\n                                example: 42\n                                type: integer\n                              type:\n                                description: Type of resource referenced\n                                example: server\n                                type: string\n                            required:\n                              - id\n                              - type\n                            type: object\n                          type: array\n                        started:\n                          description: Point in time when the Action was started (in ISO-8601 format)\n                          example: 2016-01-30T23:55:00+00:00\n                          type: string\n                        status:\n                          description: Status of the Action\n                          enum:\n                            - success\n                            - running\n                            - error\n                          type: string\n                      required:\n                        - id\n                        - command\n                        - status\n                        - progress\n                        - started\n                        - finished\n                        - resources\n                        - error\n                      title: Action\n                      type: object\n                    type: array\n                  meta:\n                    properties:\n                      pagination:\n                        properties:\n                          last_page:\n                            description: ID of the last page available. Can be null if the current page is the last one.\n                            example: 4\n                            nullable: true\n                            type: number\n                          next_page:\n                            description: ID of the next page. Can be null if the current page is the last one.\n                            example: 4\n                            nullable: true\n                            type: number\n                          page:\n                            description: Current page number\n                            example: 3\n                            type: number\n                          per_page:\n                            description: Maximum number of items shown per page in the response\n                            example: 25\n                            type: number\n                          previous_page:\n                            description: ID of the previous page. Can be null if the current page is the first one.\n                            example: 2\n                            nullable: true\n                            type: number\n                          total_entries:\n                            description: The total number of entries that exist in the database for this query. Nullable if unknown.\n                            example: 100\n                            nullable: true\n                            type: number\n                        required:\n                          - page\n                          - per_page\n                          - previous_page\n                          - next_page\n                          - last_page\n                          - total_entries\n                        type: object\n                    required:\n                      - pagination\n                    type: object\n                required:\n                  - actions\n                title: ActionsResponse\n                type: object\n          description: The `actions` key contains a list of Actions\n      summary: Get all Actions\n      tags:\n        - Actions\n  \"/actions/{id}\":\n    get:\n      description: Returns a specific Action object.\n      parameters:\n        - description: ID of the Resource\n          in: path\n          name: id\n          required: true\n          schema:\n            type: integer\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                properties:\n                  action:\n                    properties:\n                      command:\n                        description: Command executed in the Action\n                        example: start_server\n                        type: string\n                      error:\n                        description: Error message for the Action if error occurred, otherwise null\n                        nullable: true\n                        properties:\n                          code:\n                            description: Fixed machine readable code\n                            example: action_failed\n                            type: string\n                          message:\n                            description: Humanized error message\n                            example: Action failed\n                            type: string\n                        required:\n                          - code\n                          - message\n                        type: object\n                      finished:\n                        description: Point in time when the Action was finished (in ISO-8601 format). Only set if the Action is finished otherwise null.\n                        example: 2016-01-30T23:55:00+00:00\n                        nullable: true\n                        type: string\n                      id:\n                        description: ID of the Resource\n                        example: 42\n                        type: integer\n                      progress:\n                        description: Progress of Action in percent\n                        example: 100\n                        type: number\n                      resources:\n                        description: Resources the Action relates to\n                        items:\n                          properties:\n                            id:\n                              description: ID of the Resource\n                              example: 42\n                              type: integer\n                            type:\n                              description: Type of resource referenced\n                              example: server\n                              type: string\n                          required:\n                            - id\n                            - type\n                          type: object\n                        type: array\n                      started:\n                        description: Point in time when the Action was started (in ISO-8601 format)\n                        example: 2016-01-30T23:55:00+00:00\n                        type: string\n                      status:\n                        description: Status of the Action\n                        enum:\n                          - success\n                          - running\n                          - error\n                        type: string\n                    required:\n                      - id\n                      - command\n                      - status\n                      - progress\n                      - started\n                      - finished\n                      - resources\n                      - error\n                    title: Action\n                    type: object\n                required:\n                  - action\n                title: ActionResponse\n                type: object\n          description: The `action` key in the reply has this structure\n      summary: Get an Action\n      tags:\n        - Actions\n  /certificates:\n    get:\n      description: Returns all Certificate objects.\n      parameters:\n        - description: Can be used multiple times.\n          in: query\n          name: sort\n          required: false\n          schema:\n            enum:\n              - id\n              - id:asc\n              - id:desc\n              - name\n              - name:asc\n              - name:desc\n              - created\n              - created:asc\n              - created:desc\n            type: string\n        - description: Can be used to filter resources by their name. The response will only contain the resources matching the specified name\n          in: query\n          name: name\n          required: false\n          schema:\n            type: string\n        - description: Can be used to filter resources by labels. The response will only contain resources matching the label selector.\n          in: query\n          name: label_selector\n          required: false\n          schema:\n            type: string\n        - description: Can be used multiple times. The response will only contain Certificates matching the type.\n          in: query\n          name: type\n          required: false\n          schema:\n            enum:\n              - uploaded\n              - managed\n            title: ParameterType\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              example:\n                certificates:\n                  - certificate: |-\n                      -----BEGIN CERTIFICATE-----\n                      ...\n                    created: 2019-01-08T12:10:00+00:00\n                    domain_names:\n                      - example.com\n                      - webmail.example.com\n                      - www.example.com\n                    fingerprint: 03:c7:55:9b:2a:d1:04:17:09:f6:d0:7f:18:34:63:d4:3e:5f\n                    id: 897\n                    labels:\n                      env: dev\n                    name: my website cert\n                    not_valid_after: 2019-07-08T09:59:59+00:00\n                    not_valid_before: 2019-01-08T10:00:00+00:00\n                    status: null\n                    type: uploaded\n                    used_by:\n                      - id: 4711\n                        type: load_balancer\n              schema:\n                properties:\n                  certificates:\n                    items:\n                      properties:\n                        certificate:\n                          description: Certificate and chain in PEM format, in order so that each record directly certifies the one preceding\n                          example: |-\n                            -----BEGIN CERTIFICATE-----\n                            ...\n                          nullable: true\n                          type: string\n                        created:\n                          description: Point in time when the Resource was created (in ISO-8601 format)\n                          example: 2016-01-30T23:55:00+00:00\n                          type: string\n                        domain_names:\n                          description: Domains and subdomains covered by the Certificate\n                          example:\n                            - example.com\n                            - webmail.example.com\n                            - www.example.com\n                          items:\n                            type: string\n                          type: array\n                        fingerprint:\n                          description: SHA256 fingerprint of the Certificate\n                          example: 03:c7:55:9b:2a:d1:04:17:09:f6:d0:7f:18:34:63:d4:3e:5f\n                          nullable: true\n                          type: string\n                        id:\n                          description: ID of the Resource\n                          example: 42\n                          type: integer\n                        labels:\n                          additionalProperties:\n                            type: string\n                          description: User-defined labels (key-value pairs)\n                          type: object\n                        name:\n                          description: Name of the Resource. Must be unique per Project.\n                          example: my-resource\n                          type: string\n                        not_valid_after:\n                          description: Point in time when the Certificate stops being valid (in ISO-8601 format)\n                          example: 2019-07-08T09:59:59+00:00\n                          nullable: true\n                          type: string\n                        not_valid_before:\n                          description: Point in time when the Certificate becomes valid (in ISO-8601 format)\n                          example: 2019-01-08T10:00:00+00:00\n                          nullable: true\n                          type: string\n                        status:\n                          description: Current status of a type `managed` Certificate, always *null* for type `uploaded` Certificates\n                          nullable: true\n                          properties:\n                            error:\n                              description: If issuance or renewal reports `failed`, this property contains information about what happened\n                              example: null\n                              nullable: true\n                              properties:\n                                code:\n                                  type: string\n                                message:\n                                  type: string\n                              type: object\n                            issuance:\n                              description: Status of the issuance process of the Certificate\n                              enum:\n                                - pending\n                                - completed\n                                - failed\n                              example: valid\n                              type: string\n                            renewal:\n                              description: Status of the renewal process of the Certificate.\n                              enum:\n                                - scheduled\n                                - pending\n                                - failed\n                                - unavailable\n                              example: scheduled\n                              type: string\n                          type: object\n                        type:\n                          description: Type of the Certificate\n                          enum:\n                            - uploaded\n                            - managed\n                          example: uploaded\n                          type: string\n                        used_by:\n                          description: Resources currently using the Certificate\n                          items:\n                            properties:\n                              id:\n                                description: ID of resource referenced\n                                example: 4711\n                                type: integer\n                              type:\n                                description: Type of resource referenced\n                                example: load_balancer\n                                type: string\n                            required:\n                              - id\n                              - type\n                            type: object\n                          type: array\n                      required:\n                        - id\n                        - name\n                        - labels\n                        - certificate\n                        - created\n                        - not_valid_before\n                        - not_valid_after\n                        - domain_names\n                        - fingerprint\n                        - used_by\n                      title: Certificate\n                      type: object\n                    type: array\n                  meta:\n                    properties:\n                      pagination:\n                        properties:\n                          last_page:\n                            description: ID of the last page available. Can be null if the current page is the last one.\n                            example: 4\n                            nullable: true\n                            type: number\n                          next_page:\n                            description: ID of the next page. Can be null if the current page is the last one.\n                            example: 4\n                            nullable: true\n                            type: number\n                          page:\n                            description: Current page number\n                            example: 3\n                            type: number\n                          per_page:\n                            description: Maximum number of items shown per page in the response\n                            example: 25\n                            type: number\n                          previous_page:\n                            description: ID of the previous page. Can be null if the current page is the first one.\n                            example: 2\n                            nullable: true\n                            type: number\n                          total_entries:\n                            description: The total number of entries that exist in the database for this query. Nullable if unknown.\n                            example: 100\n                            nullable: true\n                            type: number\n                        required:\n                          - page\n                          - per_page\n                          - previous_page\n                          - next_page\n                          - last_page\n                          - total_entries\n                        type: object\n                    required:\n                      - pagination\n                    type: object\n                required:\n                  - certificates\n                title: CertificatesResponse\n                type: object\n          description: The `certificates` key contains an array of Certificate objects\n      summary: Get all Certificates\n      tags:\n        - Certificates\n    post:\n      description: |\n        Creates a new Certificate.\n\n        The default type **uploaded** allows for uploading your existing `certificate` and `private_key` in PEM format. You have to monitor its expiration date and handle renewal yourself.\n\n        In contrast, type **managed** requests a new Certificate from *Let's Encrypt* for the specified `domain_names`. Only domains managed by *Hetzner DNS* are supported. We handle renewal and timely alert the project owner via email if problems occur.\n\n        For type `managed` Certificates the `action` key of the response contains the Action that allows for tracking the issuance process. For type `uploaded` Certificates the `action` is always null.\n      requestBody:\n        content:\n          application/json:\n            examples:\n              managed:\n                summary: Creating a type `managed` Certificate\n                value:\n                  domain_names:\n                    - example.com\n                    - webmail.example.com\n                    - www.example.com\n                  name: my website cert\n                  type: managed\n              uploaded:\n                summary: Creating a type `uploaded` Certificate\n                value:\n                  certificate: |-\n                    -----BEGIN CERTIFICATE-----\n                    ...\n                  name: my website cert\n                  private_key: |-\n                    -----BEGIN PRIVATE KEY-----\n                    ...\n                  type: uploaded\n            schema:\n              properties:\n                certificate:\n                  description: Certificate and chain in PEM format, in order so that each record directly certifies the one preceding. Required for type `uploaded` Certificates.\n                  example: |-\n                    -----BEGIN CERTIFICATE-----\n                    ...\n                  type: string\n                domain_names:\n                  description: Domains and subdomains that should be contained in the Certificate issued by *Let's Encrypt*. Required for type `managed` Certificates.\n                  example: null\n                  items:\n                    type: string\n                  type: array\n                labels:\n                  description: User-defined labels (key-value pairs)\n                  type: object\n                name:\n                  description: Name of the Certificate\n                  example: my website cert\n                  type: string\n                private_key:\n                  description: Certificate key in PEM format. Required for type `uploaded` Certificates.\n                  example: |-\n                    -----BEGIN PRIVATE KEY-----\n                    ...\n                  type: string\n                type:\n                  description: Choose between uploading a Certificate in PEM format or requesting a managed *Let's Encrypt* Certificate. If omitted defaults to `uploaded`.\n                  enum:\n                    - uploaded\n                    - managed\n                  example: uploaded\n                  type: string\n              required:\n                - name\n              title: CreateCertificateRequest\n              type: object\n      responses:\n        \"201\":\n          content:\n            application/json:\n              examples:\n                managed:\n                  summary: Response when creating a type `managed` Certificate\n                  value:\n                    action:\n                      command: create_certificate\n                      error:\n                        code: action_failed\n                        message: Action failed\n                      finished: null\n                      id: 13\n                      progress: 0\n                      resources:\n                        - id: 879\n                          type: certificate\n                      started: 2019-01-08T12:10:00+00:00\n                      status: running\n                    certificate:\n                      certificate: null\n                      created: 2019-01-08T12:10:00+00:00\n                      domain_names:\n                        - example.com\n                        - webmail.example.com\n                        - www.example.com\n                      fingerprint: null\n                      id: 897\n                      labels:\n                        env: dev\n                      name: my website cert\n                      not_valid_after: null\n                      not_valid_before: null\n                      status:\n                        error: null\n                        issuance: pending\n                        renewal: unavailable\n                      type: managed\n                      used_by:\n                        - id: 4711\n                          type: load_balancer\n                uploaded:\n                  summary: Response when creating a type `uploaded` Certificate\n                  value:\n                    action: null\n                    certificate:\n                      certificate: |-\n                        -----BEGIN CERTIFICATE-----\n                        ...\n                      created: 2019-01-08T12:10:00+00:00\n                      domain_names:\n                        - example.com\n                        - webmail.example.com\n                        - www.example.com\n                      fingerprint: 03:c7:55:9b:2a:d1:04:17:09:f6:d0:7f:18:34:63:d4:3e:5f\n                      id: 897\n                      labels:\n                        env: dev\n                      name: my website cert\n                      not_valid_after: 2019-07-08T09:59:59+00:00\n                      not_valid_before: 2019-01-08T10:00:00+00:00\n                      status: null\n                      type: uploaded\n                      used_by:\n                        - id: 4711\n                          type: load_balancer\n              schema:\n                properties:\n                  action:\n                    nullable: true\n                    properties:\n                      command:\n                        description: Command executed in the Action\n                        example: start_server\n                        type: string\n                      error:\n                        description: Error message for the Action if error occurred, otherwise null\n                        nullable: true\n                        properties:\n                          code:\n                            description: Fixed machine readable code\n                            example: action_failed\n                            type: string\n                          message:\n                            description: Humanized error message\n                            example: Action failed\n                            type: string\n                        required:\n                          - code\n                          - message\n                        type: object\n                      finished:\n                        description: Point in time when the Action was finished (in ISO-8601 format). Only set if the Action is finished otherwise null.\n                        example: 2016-01-30T23:55:00+00:00\n                        nullable: true\n                        type: string\n                      id:\n                        description: ID of the Resource\n                        example: 42\n                        type: integer\n                      progress:\n                        description: Progress of Action in percent\n                        example: 100\n                        type: number\n                      resources:\n                        description: Resources the Action relates to\n                        items:\n                          properties:\n                            id:\n                              description: ID of the Resource\n                              example: 42\n                              type: integer\n                            type:\n                              description: Type of resource referenced\n                              example: server\n                              type: string\n                          required:\n                            - id\n                            - type\n                          type: object\n                        type: array\n                      started:\n                        description: Point in time when the Action was started (in ISO-8601 format)\n                        example: 2016-01-30T23:55:00+00:00\n                        type: string\n                      status:\n                        description: Status of the Action\n                        enum:\n                          - success\n                          - running\n                          - error\n                        type: string\n                    required:\n                      - id\n                      - command\n                      - status\n                      - progress\n                      - started\n                      - finished\n                      - resources\n                      - error\n                    title: NullableAction\n                    type: object\n                  certificate:\n                    properties:\n                      certificate:\n                        description: Certificate and chain in PEM format, in order so that each record directly certifies the one preceding\n                        example: |-\n                          -----BEGIN CERTIFICATE-----\n                          ...\n                        nullable: true\n                        type: string\n                      created:\n                        description: Point in time when the Resource was created (in ISO-8601 format)\n                        example: 2016-01-30T23:55:00+00:00\n                        type: string\n                      domain_names:\n                        description: Domains and subdomains covered by the Certificate\n                        example:\n                          - example.com\n                          - webmail.example.com\n                          - www.example.com\n                        items:\n                          type: string\n                        type: array\n                      fingerprint:\n                        description: SHA256 fingerprint of the Certificate\n                        example: 03:c7:55:9b:2a:d1:04:17:09:f6:d0:7f:18:34:63:d4:3e:5f\n                        nullable: true\n                        type: string\n                      id:\n                        description: ID of the Resource\n                        example: 42\n                        type: integer\n                      labels:\n                        additionalProperties:\n                          type: string\n                        description: User-defined labels (key-value pairs)\n                        type: object\n                      name:\n                        description: Name of the Resource. Must be unique per Project.\n                        example: my-resource\n                        type: string\n                      not_valid_after:\n                        description: Point in time when the Certificate stops being valid (in ISO-8601 format)\n                        example: 2019-07-08T09:59:59+00:00\n                        nullable: true\n                        type: string\n                      not_valid_before:\n                        description: Point in time when the Certificate becomes valid (in ISO-8601 format)\n                        example: 2019-01-08T10:00:00+00:00\n                        nullable: true\n                        type: string\n                      status:\n                        description: Current status of a type `managed` Certificate, always *null* for type `uploaded` Certificates\n                        nullable: true\n                        properties:\n                          error:\n                            description: If issuance or renewal reports `failed`, this property contains information about what happened\n                            example: null\n                            nullable: true\n                            properties:\n                              code:\n                                type: string\n                              message:\n                                type: string\n                            type: object\n                          issuance:\n                            description: Status of the issuance process of the Certificate\n                            enum:\n                              - pending\n                              - completed\n                              - failed\n                            example: valid\n                            type: string\n                          renewal:\n                            description: Status of the renewal process of the Certificate.\n                            enum:\n                              - scheduled\n                              - pending\n                              - failed\n                              - unavailable\n                            example: scheduled\n                            type: string\n                        type: object\n                      type:\n                        description: Type of the Certificate\n                        enum:\n                          - uploaded\n                          - managed\n                        example: uploaded\n                        type: string\n                      used_by:\n                        description: Resources currently using the Certificate\n                        items:\n                          properties:\n                            id:\n                              description: ID of resource referenced\n                              example: 4711\n                              type: integer\n                            type:\n                              description: Type of resource referenced\n                              example: load_balancer\n                              type: string\n                          required:\n                            - id\n                            - type\n                          type: object\n                        type: array\n                    required:\n                      - id\n                      - name\n                      - labels\n                      - certificate\n                      - created\n                      - not_valid_before\n                      - not_valid_after\n                      - domain_names\n                      - fingerprint\n                      - used_by\n                    title: Certificate\n                    type: object\n                required:\n                  - certificate\n                title: CreateCertificateResponse\n                type: object\n          description: The `certificate` key contains the Certificate that was just created. For type `managed` Certificates the `action` key contains the Action that allows for tracking the issuance process. For type `uploaded` Certificates the `action` is always null.\n      summary: Create a Certificate\n      tags:\n        - Certificates\n  \"/certificates/{id}\":\n    delete:\n      description: Deletes a Certificate.\n      parameters:\n        - description: ID of the resource\n          in: path\n          name: id\n          required: true\n          schema:\n            type: integer\n      responses:\n        \"204\":\n          description: Certificate deleted\n      summary: Delete a Certificate\n      tags:\n        - Certificates\n    get:\n      description: Gets a specific Certificate object.\n      parameters:\n        - description: ID of the resource\n          in: path\n          name: id\n          required: true\n          schema:\n            type: integer\n      responses:\n        \"200\":\n          content:\n            application/json:\n              example:\n                certificate:\n                  certificate: |-\n                    -----BEGIN CERTIFICATE-----\n                    ...\n                  created: 2019-01-08T12:10:00+00:00\n                  domain_names:\n                    - example.com\n                    - webmail.example.com\n                    - www.example.com\n                  fingerprint: 03:c7:55:9b:2a:d1:04:17:09:f6:d0:7f:18:34:63:d4:3e:5f\n                  id: 897\n                  labels:\n                    env: dev\n                  name: my website cert\n                  not_valid_after: 2019-07-08T09:59:59+00:00\n                  not_valid_before: 2019-01-08T10:00:00+00:00\n                  status: null\n                  type: uploaded\n                  used_by:\n                    - id: 4711\n                      type: load_balancer\n              schema:\n                properties:\n                  certificate:\n                    properties:\n                      certificate:\n                        description: Certificate and chain in PEM format, in order so that each record directly certifies the one preceding\n                        example: |-\n                          -----BEGIN CERTIFICATE-----\n                          ...\n                        nullable: true\n                        type: string\n                      created:\n                        description: Point in time when the Resource was created (in ISO-8601 format)\n                        example: 2016-01-30T23:55:00+00:00\n                        type: string\n                      domain_names:\n                        description: Domains and subdomains covered by the Certificate\n                        example:\n                          - example.com\n                          - webmail.example.com\n                          - www.example.com\n                        items:\n                          type: string\n                        type: array\n                      fingerprint:\n                        description: SHA256 fingerprint of the Certificate\n                        example: 03:c7:55:9b:2a:d1:04:17:09:f6:d0:7f:18:34:63:d4:3e:5f\n                        nullable: true\n                        type: string\n                      id:\n                        description: ID of the Resource\n                        example: 42\n                        type: integer\n                      labels:\n                        additionalProperties:\n                          type: string\n                        description: User-defined labels (key-value pairs)\n                        type: object\n                      name:\n                        description: Name of the Resource. Must be unique per Project.\n                        example: my-resource\n                        type: string\n                      not_valid_after:\n                        description: Point in time when the Certificate stops being valid (in ISO-8601 format)\n                        example: 2019-07-08T09:59:59+00:00\n                        nullable: true\n                        type: string\n                      not_valid_before:\n                        description: Point in time when the Certificate becomes valid (in ISO-8601 format)\n                        example: 2019-01-08T10:00:00+00:00\n                        nullable: true\n                        type: string\n                      status:\n                        description: Current status of a type `managed` Certificate, always *null* for type `uploaded` Certificates\n                        nullable: true\n                        properties:\n                          error:\n                            description: If issuance or renewal reports `failed`, this property contains information about what happened\n                            example: null\n                            nullable: true\n                            properties:\n                              code:\n                                type: string\n                              message:\n                                type: string\n                            type: object\n                          issuance:\n                            description: Status of the issuance process of the Certificate\n                            enum:\n                              - pending\n                              - completed\n                              - failed\n                            example: valid\n                            type: string\n                          renewal:\n                            description: Status of the renewal process of the Certificate.\n                            enum:\n                              - scheduled\n                              - pending\n                              - failed\n                              - unavailable\n                            example: scheduled\n                            type: string\n                        type: object\n                      type:\n                        description: Type of the Certificate\n                        enum:\n                          - uploaded\n                          - managed\n                        example: uploaded\n                        type: string\n                      used_by:\n                        description: Resources currently using the Certificate\n                        items:\n                          properties:\n                            id:\n                              description: ID of resource referenced\n                              example: 4711\n                              type: integer\n                            type:\n                              description: Type of resource referenced\n                              example: load_balancer\n                              type: string\n                          required:\n                            - id\n                            - type\n                          type: object\n                        type: array\n                    required:\n                      - id\n                      - name\n                      - labels\n                      - certificate\n                      - created\n                      - not_valid_before\n                      - not_valid_after\n                      - domain_names\n                      - fingerprint\n                      - used_by\n                    title: Certificate\n                    type: object\n                required:\n                  - certificate\n                title: CertificateResponse\n                type: object\n          description: The `certificate` key contains a Certificate object\n      summary: Get a Certificate\n      tags:\n        - Certificates\n    put:\n      description: |\n        Updates the Certificate properties.\n\n        Note that when updating labels, the Certificate’s current set of labels will be replaced with the labels provided in the request body. So, for example, if you want to add a new label, you have to provide all existing labels plus the new label in the request body.\n\n        Note: if the Certificate object changes during the request, the response will be a “conflict” error.\n      parameters:\n        - description: ID of the resource\n          in: path\n          name: id\n          required: true\n          schema:\n            type: integer\n      requestBody:\n        content:\n          application/json:\n            schema:\n              properties:\n                labels:\n                  description: User-defined labels (key-value pairs)\n                  example:\n                    labelkey: value\n                  type: object\n                name:\n                  description: New Certificate name\n                  example: my website cert\n                  type: string\n              title: UpdateCertificateRequest\n              type: object\n      responses:\n        \"200\":\n          content:\n            application/json:\n              example:\n                certificate:\n                  certificate: |-\n                    -----BEGIN CERTIFICATE-----\n                    ...\n                  created: 2019-01-08T12:10:00+00:00\n                  domain_names:\n                    - example.com\n                    - webmail.example.com\n                    - www.example.com\n                  fingerprint: 03:c7:55:9b:2a:d1:04:17:09:f6:d0:7f:18:34:63:d4:3e:5f\n                  id: 897\n                  labels:\n                    labelkey: value\n                  name: my website cert\n                  not_valid_after: 2019-07-08T09:59:59+00:00\n                  not_valid_before: 2019-01-08T10:00:00+00:00\n                  status: null\n                  type: uploaded\n                  used_by:\n                    - id: 4711\n                      type: load_balancer\n              schema:\n                properties:\n                  certificate:\n                    properties:\n                      certificate:\n                        description: Certificate and chain in PEM format, in order so that each record directly certifies the one preceding\n                        example: |-\n                          -----BEGIN CERTIFICATE-----\n                          ...\n                        nullable: true\n                        type: string\n                      created:\n                        description: Point in time when the Resource was created (in ISO-8601 format)\n                        example: 2016-01-30T23:55:00+00:00\n                        type: string\n                      domain_names:\n                        description: Domains and subdomains covered by the Certificate\n                        example:\n                          - example.com\n                          - webmail.example.com\n                          - www.example.com\n                        items:\n                          type: string\n                        type: array\n                      fingerprint:\n                        description: SHA256 fingerprint of the Certificate\n                        example: 03:c7:55:9b:2a:d1:04:17:09:f6:d0:7f:18:34:63:d4:3e:5f\n                        nullable: true\n                        type: string\n                      id:\n                        description: ID of the Resource\n                        example: 42\n                        type: integer\n                      labels:\n                        additionalProperties:\n                          type: string\n                        description: User-defined labels (key-value pairs)\n                        type: object\n                      name:\n                        description: Name of the Resource. Must be unique per Project.\n                        example: my-resource\n                        type: string\n                      not_valid_after:\n                        description: Point in time when the Certificate stops being valid (in ISO-8601 format)\n                        example: 2019-07-08T09:59:59+00:00\n                        nullable: true\n                        type: string\n                      not_valid_before:\n                        description: Point in time when the Certificate becomes valid (in ISO-8601 format)\n                        example: 2019-01-08T10:00:00+00:00\n                        nullable: true\n                        type: string\n                      status:\n                        description: Current status of a type `managed` Certificate, always *null* for type `uploaded` Certificates\n                        nullable: true\n                        properties:\n                          error:\n                            description: If issuance or renewal reports `failed`, this property contains information about what happened\n                            example: null\n                            nullable: true\n                            properties:\n                              code:\n                                type: string\n                              message:\n                                type: string\n                            type: object\n                          issuance:\n                            description: Status of the issuance process of the Certificate\n                            enum:\n                              - pending\n                              - completed\n                              - failed\n                            example: valid\n                            type: string\n                          renewal:\n                            description: Status of the renewal process of the Certificate.\n                            enum:\n                              - scheduled\n                              - pending\n                              - failed\n                              - unavailable\n                            example: scheduled\n                            type: string\n                        type: object\n                      type:\n                        description: Type of the Certificate\n                        enum:\n                          - uploaded\n                          - managed\n                        example: uploaded\n                        type: string\n                      used_by:\n                        description: Resources currently using the Certificate\n                        items:\n                          properties:\n                            id:\n                              description: ID of resource referenced\n                              example: 4711\n                              type: integer\n                            type:\n                              description: Type of resource referenced\n                              example: load_balancer\n                              type: string\n                          required:\n                            - id\n                            - type\n                          type: object\n                        type: array\n                    required:\n                      - id\n                      - name\n                      - labels\n                      - certificate\n                      - created\n                      - not_valid_before\n                      - not_valid_after\n                      - domain_names\n                      - fingerprint\n                      - used_by\n                    title: Certificate\n                    type: object\n                required:\n                  - certificate\n                title: CertificateResponse\n                type: object\n          description: The `certificate` key contains the Certificate that was just updated\n      summary: Update a Certificate\n      tags:\n        - Certificates\n  \"/certificates/{id}/actions\":\n    get:\n      description: |\n        Returns all Action objects for a Certificate. You can sort the results by using the `sort` URI parameter, and filter them with the `status` parameter.\n\n        Only type `managed` Certificates can have Actions. For type `uploaded` Certificates the `actions` key will always contain an empty array.\n      parameters:\n        - description: ID of the Resource\n          in: path\n          name: id\n          required: true\n          schema:\n            type: integer\n        - description: Can be used multiple times.\n          in: query\n          name: sort\n          required: false\n          schema:\n            enum:\n              - id\n              - id:asc\n              - id:desc\n              - command\n              - command:asc\n              - command:desc\n              - status\n              - status:asc\n              - status:desc\n              - progress\n              - progress:asc\n              - progress:desc\n              - started\n              - started:asc\n              - started:desc\n              - finished\n              - finished:asc\n              - finished:desc\n            title: ParameterSort\n            type: string\n        - description: Can be used multiple times, the response will contain only Actions with specified statuses\n          in: query\n          name: status\n          required: false\n          schema:\n            enum:\n              - running\n              - success\n              - error\n            title: ParameterStatus\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              example:\n                actions:\n                  - command: issue_certificate\n                    error:\n                      code: action_failed\n                      message: Action failed\n                    finished: 2021-01-30T23:57:00+00:00\n                    id: 14\n                    progress: 100\n                    resources:\n                      - id: 896\n                        type: certificate\n                    started: 2021-01-30T23:55:00+00:00\n                    status: success\n              schema:\n                properties:\n                  actions:\n                    items:\n                      properties:\n                        command:\n                          description: Command executed in the Action\n                          example: start_server\n                          type: string\n                        error:\n                          description: Error message for the Action if error occurred, otherwise null\n                          nullable: true\n                          properties:\n                            code:\n                              description: Fixed machine readable code\n                              example: action_failed\n                              type: string\n                            message:\n                              description: Humanized error message\n                              example: Action failed\n                              type: string\n                          required:\n                            - code\n                            - message\n                          type: object\n                        finished:\n                          description: Point in time when the Action was finished (in ISO-8601 format). Only set if the Action is finished otherwise null.\n                          example: 2016-01-30T23:55:00+00:00\n                          nullable: true\n                          type: string\n                        id:\n                          description: ID of the Resource\n                          example: 42\n                          type: integer\n                        progress:\n                          description: Progress of Action in percent\n                          example: 100\n                          type: number\n                        resources:\n                          description: Resources the Action relates to\n                          items:\n                            properties:\n                              id:\n                                description: ID of the Resource\n                                example: 42\n                                type: integer\n                              type:\n                                description: Type of resource referenced\n                                example: server\n                                type: string\n                            required:\n                              - id\n                              - type\n                            type: object\n                          type: array\n                        started:\n                          description: Point in time when the Action was started (in ISO-8601 format)\n                          example: 2016-01-30T23:55:00+00:00\n                          type: string\n                        status:\n                          description: Status of the Action\n                          enum:\n                            - success\n                            - running\n                            - error\n                          type: string\n                      required:\n                        - id\n                        - command\n                        - status\n                        - progress\n                        - started\n                        - finished\n                        - resources\n                        - error\n                      title: Action\n                      type: object\n                    type: array\n                  meta:\n                    properties:\n                      pagination:\n                        properties:\n                          last_page:\n                            description: ID of the last page available. Can be null if the current page is the last one.\n                            example: 4\n                            nullable: true\n                            type: number\n                          next_page:\n                            description: ID of the next page. Can be null if the current page is the last one.\n                            example: 4\n                            nullable: true\n                            type: number\n                          page:\n                            description: Current page number\n                            example: 3\n                            type: number\n                          per_page:\n                            description: Maximum number of items shown per page in the response\n                            example: 25\n                            type: number\n                          previous_page:\n                            description: ID of the previous page. Can be null if the current page is the first one.\n                            example: 2\n                            nullable: true\n                            type: number\n                          total_entries:\n                            description: The total number of entries that exist in the database for this query. Nullable if unknown.\n                            example: 100\n                            nullable: true\n                            type: number\n                        required:\n                          - page\n                          - per_page\n                          - previous_page\n                          - next_page\n                          - last_page\n                          - total_entries\n                        type: object\n                    required:\n                      - pagination\n                    type: object\n                required:\n                  - actions\n                title: ActionsResponse\n                type: object\n          description: The `actions` key contains a list of Actions\n      summary: Get all Actions for a Certificate\n      tags:\n        - Certificate Actions\n  \"/certificates/{id}/actions/retry\":\n    post:\n      description: |\n        Retry a failed Certificate issuance or renewal.\n\n        Only applicable if the type of the Certificate is `managed` and the issuance or renewal status is `failed`.\n\n        #### Call specific error codes\n\n        | Code                                                    | Description                                                               |\n        |---------------------------------------------------------|---------------------------------------------------------------------------|\n        | `caa_record_does_not_allow_ca`                          | CAA record does not allow certificate authority                           |\n        | `ca_dns_validation_failed`                              | Certificate Authority: DNS validation failed                              |\n        | `ca_too_many_authorizations_failed_recently`            | Certificate Authority: Too many authorizations failed recently            |\n        | `ca_too_many_certificates_issued_for_registered_domain` | Certificate Authority: Too many certificates issued for registered domain |\n        | `ca_too_many_duplicate_certificates`                    | Certificate Authority: Too many duplicate certificates                    |\n        | `could_not_verify_domain_delegated_to_zone`             | Could not verify domain delegated to zone                                 |\n        | `dns_zone_not_found`                                    | DNS zone not found                                                        |\n        | `dns_zone_is_secondary_zone`                            | DNS zone is a secondary zone                                              |\n      parameters:\n        - description: ID of the Certificate\n          in: path\n          name: id\n          required: true\n          schema:\n            type: integer\n      responses:\n        \"201\":\n          content:\n            application/json:\n              example:\n                action:\n                  command: issue_certificate\n                  error:\n                    code: action_failed\n                    message: Action failed\n                  finished: 2021-01-30T23:57:00+00:00\n                  id: 14\n                  progress: 100\n                  resources:\n                    - id: 896\n                      type: certificate\n                  started: 2021-01-30T23:55:00+00:00\n                  status: success\n              schema:\n                properties:\n                  action:\n                    properties:\n                      command:\n                        description: Command executed in the Action\n                        example: start_server\n                        type: string\n                      error:\n                        description: Error message for the Action if error occurred, otherwise null\n                        nullable: true\n                        properties:\n                          code:\n                            description: Fixed machine readable code\n                            example: action_failed\n                            type: string\n                          message:\n                            description: Humanized error message\n                            example: Action failed\n                            type: string\n                        required:\n                          - code\n                          - message\n                        type: object\n                      finished:\n                        description: Point in time when the Action was finished (in ISO-8601 format). Only set if the Action is finished otherwise null.\n                        example: 2016-01-30T23:55:00+00:00\n                        nullable: true\n                        type: string\n                      id:\n                        description: ID of the Resource\n                        example: 42\n                        type: integer\n                      progress:\n                        description: Progress of Action in percent\n                        example: 100\n                        type: number\n                      resources:\n                        description: Resources the Action relates to\n                        items:\n                          properties:\n                            id:\n                              description: ID of the Resource\n                              example: 42\n                              type: integer\n                            type:\n                              description: Type of resource referenced\n                              example: server\n                              type: string\n                          required:\n                            - id\n                            - type\n                          type: object\n                        type: array\n                      started:\n                        description: Point in time when the Action was started (in ISO-8601 format)\n                        example: 2016-01-30T23:55:00+00:00\n                        type: string\n                      status:\n                        description: Status of the Action\n                        enum:\n                          - success\n                          - running\n                          - error\n                        type: string\n                    required:\n                      - id\n                      - command\n                      - status\n                      - progress\n                      - started\n                      - finished\n                      - resources\n                      - error\n                    title: Action\n                    type: object\n                required:\n                  - action\n                title: ActionResponse\n                type: object\n          description: The `action` key contains the resulting Action\n      summary: Retry Issuance or Renewal\n      tags:\n        - Certificate Actions\n  \"/certificates/{id}/actions/{action_id}\":\n    get:\n      description: Returns a specific Action for a Certificate. Only type `managed` Certificates have Actions.\n      parameters:\n        - description: ID of the Certificate\n          in: path\n          name: id\n          required: true\n          schema:\n            type: integer\n        - description: ID of the Action\n          in: path\n          name: action_id\n          required: true\n          schema:\n            type: integer\n      responses:\n        \"200\":\n          content:\n            application/json:\n              example:\n                action:\n                  command: issue_certificate\n                  error:\n                    code: action_failed\n                    message: Action failed\n                  finished: 2021-01-30T23:57:00+00:00\n                  id: 14\n                  progress: 100\n                  resources:\n                    - id: 896\n                      type: certificate\n                  started: 2021-01-30T23:55:00+00:00\n                  status: success\n              schema:\n                properties:\n                  action:\n                    properties:\n                      command:\n                        description: Command executed in the Action\n                        example: start_server\n                        type: string\n                      error:\n                        description: Error message for the Action if error occurred, otherwise null\n                        nullable: true\n                        properties:\n                          code:\n                            description: Fixed machine readable code\n                            example: action_failed\n                            type: string\n                          message:\n                            description: Humanized error message\n                            example: Action failed\n                            type: string\n                        required:\n                          - code\n                          - message\n                        type: object\n                      finished:\n                        description: Point in time when the Action was finished (in ISO-8601 format). Only set if the Action is finished otherwise null.\n                        example: 2016-01-30T23:55:00+00:00\n                        nullable: true\n                        type: string\n                      id:\n                        description: ID of the Resource\n                        example: 42\n                        type: integer\n                      progress:\n                        description: Progress of Action in percent\n                        example: 100\n                        type: number\n                      resources:\n                        description: Resources the Action relates to\n                        items:\n                          properties:\n                            id:\n                              description: ID of the Resource\n                              example: 42\n                              type: integer\n                            type:\n                              description: Type of resource referenced\n                              example: server\n                              type: string\n                          required:\n                            - id\n                            - type\n                          type: object\n                        type: array\n                      started:\n                        description: Point in time when the Action was started (in ISO-8601 format)\n                        example: 2016-01-30T23:55:00+00:00\n                        type: string\n                      status:\n                        description: Status of the Action\n                        enum:\n                          - success\n                          - running\n                          - error\n                        type: string\n                    required:\n                      - id\n                      - command\n                      - status\n                      - progress\n                      - started\n                      - finished\n                      - resources\n                      - error\n                    title: Action\n                    type: object\n                required:\n                  - action\n                title: ActionResponse\n                type: object\n          description: The `action` key contains the Certificate Action\n      summary: Get an Action for a Certificate\n      tags:\n        - Certificate Actions\n  /datacenters:\n    get:\n      description: Returns all Datacenter objects.\n      parameters:\n        - description: Can be used to filter Datacenters by their name. The response will only contain the Datacenter matching the specified name. When the name does not match the Datacenter name format, an `invalid_input` error is returned.\n          in: query\n          name: name\n          required: false\n          schema:\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                properties:\n                  datacenters:\n                    items:\n                      properties:\n                        description:\n                          description: Description of the Datacenter\n                          example: Falkenstein DC Park 8\n                          type: string\n                        id:\n                          description: ID of the Resource\n                          example: 42\n                          type: integer\n                        location:\n                          properties:\n                            city:\n                              description: City the Location is closest to\n                              example: Falkenstein\n                              type: string\n                            country:\n                              description: ISO 3166-1 alpha-2 code of the country the Location resides in\n                              example: DE\n                              type: string\n                            description:\n                              description: Description of the Location\n                              example: Falkenstein DC Park 1\n                              type: string\n                            id:\n                              description: ID of the Location\n                              example: 1\n                              type: number\n                            latitude:\n                              description: Latitude of the city closest to the Location\n                              example: 50.47612\n                              type: number\n                            longitude:\n                              description: Longitude of the city closest to the Location\n                              example: 12.370071\n                              type: number\n                            name:\n                              description: Unique identifier of the Location\n                              example: fsn1\n                              type: string\n                            network_zone:\n                              description: Name of network zone this Location resides in\n                              example: eu-central\n                              type: string\n                          required:\n                            - id\n                            - name\n                            - description\n                            - country\n                            - city\n                            - latitude\n                            - longitude\n                            - network_zone\n                          type: object\n                        name:\n                          description: Unique identifier of the Datacenter\n                          example: fsn1-dc8\n                          type: string\n                        server_types:\n                          description: The Server types the Datacenter can handle\n                          properties:\n                            available:\n                              description: IDs of Server types that are supported and for which the Datacenter has enough resources left\n                              example:\n                                - 1\n                                - 2\n                                - 3\n                              items:\n                                type: number\n                              type: array\n                            available_for_migration:\n                              description: IDs of Server types that are supported and for which the Datacenter has enough resources left\n                              example:\n                                - 1\n                                - 2\n                                - 3\n                              items:\n                                type: number\n                              type: array\n                            supported:\n                              description: IDs of Server types that are supported in the Datacenter\n                              example:\n                                - 1\n                                - 2\n                                - 3\n                              items:\n                                type: number\n                              type: array\n                          required:\n                            - supported\n                            - available\n                            - available_for_migration\n                          type: object\n                      required:\n                        - id\n                        - name\n                        - description\n                        - location\n                        - server_types\n                      type: object\n                    type: array\n                  recommendation:\n                    description: The Datacenter which is recommended to be used to create new Servers.\n                    example: 1\n                    type: number\n                required:\n                  - datacenters\n                  - recommendation\n                type: object\n          description: The reply contains the `datacenters` and `recommendation` keys\n      summary: Get all Datacenters\n      tags:\n        - Datacenters\n  \"/datacenters/{id}\":\n    get:\n      description: Returns a specific Datacenter object.\n      parameters:\n        - description: ID of Datacenter\n          in: path\n          name: id\n          required: true\n          schema:\n            type: integer\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                properties:\n                  datacenter:\n                    properties:\n                      description:\n                        description: Description of the Datacenter\n                        example: Falkenstein DC Park 8\n                        type: string\n                      id:\n                        description: ID of the Resource\n                        example: 42\n                        type: integer\n                      location:\n                        properties:\n                          city:\n                            description: City the Location is closest to\n                            example: Falkenstein\n                            type: string\n                          country:\n                            description: ISO 3166-1 alpha-2 code of the country the Location resides in\n                            example: DE\n                            type: string\n                          description:\n                            description: Description of the Location\n                            example: Falkenstein DC Park 1\n                            type: string\n                          id:\n                            description: ID of the Location\n                            example: 1\n                            type: number\n                          latitude:\n                            description: Latitude of the city closest to the Location\n                            example: 50.47612\n                            type: number\n                          longitude:\n                            description: Longitude of the city closest to the Location\n                            example: 12.370071\n                            type: number\n                          name:\n                            description: Unique identifier of the Location\n                            example: fsn1\n                            type: string\n                          network_zone:\n                            description: Name of network zone this Location resides in\n                            example: eu-central\n                            type: string\n                        required:\n                          - id\n                          - name\n                          - description\n                          - country\n                          - city\n                          - latitude\n                          - longitude\n                          - network_zone\n                        type: object\n                      name:\n                        description: Unique identifier of the Datacenter\n                        example: fsn1-dc8\n                        type: string\n                      server_types:\n                        description: The Server types the Datacenter can handle\n                        properties:\n                          available:\n                            description: IDs of Server types that are supported and for which the Datacenter has enough resources left\n                            example:\n                              - 1\n                              - 2\n                              - 3\n                            items:\n                              type: number\n                            type: array\n                          available_for_migration:\n                            description: IDs of Server types that are supported and for which the Datacenter has enough resources left\n                            example:\n                              - 1\n                              - 2\n                              - 3\n                            items:\n                              type: number\n                            type: array\n                          supported:\n                            description: IDs of Server types that are supported in the Datacenter\n                            example:\n                              - 1\n                              - 2\n                              - 3\n                            items:\n                              type: number\n                            type: array\n                        required:\n                          - supported\n                          - available\n                          - available_for_migration\n                        type: object\n                    required:\n                      - id\n                      - name\n                      - description\n                      - location\n                      - server_types\n                    type: object\n                required:\n                  - datacenter\n                type: object\n          description: The `datacenter` key in the reply contains a Datacenter object with this structure\n      summary: Get a Datacenter\n      tags:\n        - Datacenters\n  /firewalls:\n    get:\n      description: Returns all Firewall objects.\n      parameters:\n        - description: Can be used multiple times.\n          in: query\n          name: sort\n          required: false\n          schema:\n            enum:\n              - id\n              - id:asc\n              - id:desc\n              - name\n              - name:asc\n              - name:desc\n              - created\n              - created:asc\n              - created:desc\n            type: string\n        - description: Can be used to filter resources by their name. The response will only contain the resources matching the specified name\n          in: query\n          name: name\n          required: false\n          schema:\n            type: string\n        - description: Can be used to filter resources by labels. The response will only contain resources matching the label selector.\n          in: query\n          name: label_selector\n          required: false\n          schema:\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                properties:\n                  firewalls:\n                    items:\n                      properties:\n                        applied_to:\n                          items:\n                            properties:\n                              applied_to_resources:\n                                items:\n                                  properties:\n                                    server:\n                                      properties:\n                                        id:\n                                          description: ID of the Resource\n                                          example: 42\n                                          type: integer\n                                      required:\n                                        - id\n                                      type: object\n                                    type:\n                                      description: Type of resource referenced\n                                      enum:\n                                        - server\n                                      example: server\n                                      type: string\n                                  type: object\n                                type: array\n                              label_selector:\n                                properties:\n                                  selector:\n                                    description: Label selector\n                                    example: env=prod\n                                    type: string\n                                required:\n                                  - selector\n                                type: object\n                              server:\n                                properties:\n                                  id:\n                                    description: ID of the Resource\n                                    example: 42\n                                    type: integer\n                                required:\n                                  - id\n                                type: object\n                              type:\n                                description: Type of resource referenced\n                                enum:\n                                  - server\n                                  - label_selector\n                                example: server\n                                type: string\n                            required:\n                              - type\n                            type: object\n                          type: array\n                        created:\n                          description: Point in time when the Resource was created (in ISO-8601 format)\n                          example: 2016-01-30T23:55:00+00:00\n                          type: string\n                        id:\n                          description: ID of the Resource\n                          example: 42\n                          type: integer\n                        labels:\n                          additionalProperties:\n                            type: string\n                          description: User-defined labels (key-value pairs)\n                          type: object\n                        name:\n                          description: Name of the Resource. Must be unique per Project.\n                          example: my-resource\n                          type: string\n                        rules:\n                          items:\n                            properties:\n                              description:\n                                description: Description of the Rule\n                                maxLength: 255\n                                nullable: true\n                                type: string\n                              destination_ips:\n                                description: List of permitted IPv4/IPv6 addresses in CIDR notation. Use `0.0.0.0/0` to allow all IPv4 addresses and `::/0` to allow all IPv6 addresses. You can specify 100 CIDRs at most.\n                                example:\n                                  - 28.239.13.1/32\n                                  - 28.239.14.0/24\n                                  - ff21:1eac:9a3b:ee58:5ca:990c:8bc9:c03b/128\n                                items:\n                                  type: string\n                                type: array\n                              direction:\n                                description: Select traffic direction on which rule should be applied. Use `source_ips` for direction `in` and `destination_ips` for direction `out`.\n                                enum:\n                                  - in\n                                  - out\n                                type: string\n                              port:\n                                description: Port or port range to which traffic will be allowed, only applicable for protocols TCP and UDP. A port range can be specified by separating two ports with a dash, e.g `1024-5000`.\n                                example: \"80\"\n                                type: string\n                              protocol:\n                                description: Type of traffic to allow\n                                enum:\n                                  - tcp\n                                  - udp\n                                  - icmp\n                                  - esp\n                                  - gre\n                                type: string\n                              source_ips:\n                                description: List of permitted IPv4/IPv6 addresses in CIDR notation. Use `0.0.0.0/0` to allow all IPv4 addresses and `::/0` to allow all IPv6 addresses. You can specify 100 CIDRs at most.\n                                example:\n                                  - 28.239.13.1/32\n                                  - 28.239.14.0/24\n                                  - ff21:1eac:9a3b:ee58:5ca:990c:8bc9:c03b/128\n                                items:\n                                  type: string\n                                type: array\n                            required:\n                              - direction\n                              - protocol\n                            title: Rule\n                            type: object\n                          type: array\n                      required:\n                        - id\n                        - name\n                        - created\n                        - rules\n                        - applied_to\n                      title: Firewall\n                      type: object\n                    type: array\n                  meta:\n                    properties:\n                      pagination:\n                        properties:\n                          last_page:\n                            description: ID of the last page available. Can be null if the current page is the last one.\n                            example: 4\n                            nullable: true\n                            type: number\n                          next_page:\n                            description: ID of the next page. Can be null if the current page is the last one.\n                            example: 4\n                            nullable: true\n                            type: number\n                          page:\n                            description: Current page number\n                            example: 3\n                            type: number\n                          per_page:\n                            description: Maximum number of items shown per page in the response\n                            example: 25\n                            type: number\n                          previous_page:\n                            description: ID of the previous page. Can be null if the current page is the first one.\n                            example: 2\n                            nullable: true\n                            type: number\n                          total_entries:\n                            description: The total number of entries that exist in the database for this query. Nullable if unknown.\n                            example: 100\n                            nullable: true\n                            type: number\n                        required:\n                          - page\n                          - per_page\n                          - previous_page\n                          - next_page\n                          - last_page\n                          - total_entries\n                        type: object\n                    required:\n                      - pagination\n                    type: object\n                required:\n                  - firewalls\n                title: FirewallsResponse\n                type: object\n          description: The `firewalls` key contains an array of Firewall objects\n      summary: Get all Firewalls\n      tags:\n        - Firewalls\n    post:\n      description: |\n        Creates a new Firewall.\n\n        #### Call specific error codes\n\n        | Code                        | Description                                             |\n        |-----------------------------|---------------------------------------------------------|\n        | `server_already_added`      | Server added more than one time to resource             |\n        | `incompatible_network_type` | The Network type is incompatible for the given resource |\n      requestBody:\n        content:\n          application/json:\n            examples:\n              request:\n                value:\n                  apply_to:\n                    - server:\n                        id: 42\n                      type: server\n                  labels:\n                    env: dev\n                  name: Corporate Intranet Protection\n                  rules:\n                    - description: Allow port 80\n                      direction: in\n                      port: \"80\"\n                      protocol: tcp\n                      source_ips:\n                        - 28.239.13.1/32\n                        - 28.239.14.0/24\n                        - ff21:1eac:9a3b:ee58:5ca:990c:8bc9:c03b/128\n            schema:\n              properties:\n                apply_to:\n                  description: Resources the Firewall should be applied to after creation\n                  items:\n                    properties:\n                      label_selector:\n                        description: Configuration for type LabelSelector, required if type is `label_selector`\n                        properties:\n                          selector:\n                            description: Label selector\n                            type: string\n                        required:\n                          - selector\n                        type: object\n                      server:\n                        description: Configuration for type Server, required if type is `server`\n                        properties:\n                          id:\n                            description: ID of the Server\n                            type: integer\n                        required:\n                          - id\n                        type: object\n                      type:\n                        description: Type of the resource\n                        enum:\n                          - server\n                          - label_selector\n                        type: string\n                    required:\n                      - type\n                    type: object\n                  type: array\n                labels:\n                  description: User-defined labels (key-value pairs)\n                  type: object\n                name:\n                  description: Name of the Firewall\n                  example: Corporate Intranet Protection\n                  type: string\n                rules:\n                  description: Array of rules\n                  example:\n                    - direction: in\n                      port: \"80\"\n                      protocol: tcp\n                      source_ips:\n                        - 28.239.13.1/32\n                        - 28.239.14.0/24\n                        - ff21:1eac:9a3b:ee58:5ca:990c:8bc9:c03b/128\n                  items:\n                    properties:\n                      description:\n                        description: Description of the Rule\n                        maxLength: 255\n                        nullable: true\n                        type: string\n                      destination_ips:\n                        description: List of permitted IPv4/IPv6 addresses in CIDR notation. Use `0.0.0.0/0` to allow all IPv4 addresses and `::/0` to allow all IPv6 addresses. You can specify 100 CIDRs at most.\n                        example:\n                          - 28.239.13.1/32\n                          - 28.239.14.0/24\n                          - ff21:1eac:9a3b:ee58:5ca:990c:8bc9:c03b/128\n                        items:\n                          type: string\n                        type: array\n                      direction:\n                        description: Select traffic direction on which rule should be applied. Use `source_ips` for direction `in` and `destination_ips` for direction `out`.\n                        enum:\n                          - in\n                          - out\n                        type: string\n                      port:\n                        description: Port or port range to which traffic will be allowed, only applicable for protocols TCP and UDP. A port range can be specified by separating two ports with a dash, e.g `1024-5000`.\n                        example: \"80\"\n                        type: string\n                      protocol:\n                        description: Type of traffic to allow\n                        enum:\n                          - tcp\n                          - udp\n                          - icmp\n                          - esp\n                          - gre\n                        type: string\n                      source_ips:\n                        description: List of permitted IPv4/IPv6 addresses in CIDR notation. Use `0.0.0.0/0` to allow all IPv4 addresses and `::/0` to allow all IPv6 addresses. You can specify 100 CIDRs at most.\n                        example:\n                          - 28.239.13.1/32\n                          - 28.239.14.0/24\n                          - ff21:1eac:9a3b:ee58:5ca:990c:8bc9:c03b/128\n                        items:\n                          type: string\n                        type: array\n                    required:\n                      - direction\n                      - protocol\n                    title: Rule\n                    type: object\n                  type: array\n              required:\n                - name\n              title: CreateFirewallRequest\n              type: object\n      responses:\n        \"201\":\n          content:\n            application/json:\n              schema:\n                properties:\n                  actions:\n                    example:\n                      - command: set_firewall_rules\n                        error:\n                          code: action_failed\n                          message: Action failed\n                        finished: 2016-01-30T23:56:00+00:00\n                        id: 13\n                        progress: 100\n                        resources:\n                          - id: 38\n                            type: firewall\n                        started: 2016-01-30T23:55:00+00:00\n                        status: success\n                      - command: apply_firewall\n                        error:\n                          code: action_failed\n                          message: Action failed\n                        finished: 2016-01-30T23:56:00+00:00\n                        id: 14\n                        progress: 100\n                        resources:\n                          - id: 42\n                            type: server\n                          - id: 38\n                            type: firewall\n                        started: 2016-01-30T23:55:00+00:00\n                        status: success\n                    items:\n                      properties:\n                        command:\n                          description: Command executed in the Action\n                          example: start_server\n                          type: string\n                        error:\n                          description: Error message for the Action if error occurred, otherwise null\n                          nullable: true\n                          properties:\n                            code:\n                              description: Fixed machine readable code\n                              example: action_failed\n                              type: string\n                            message:\n                              description: Humanized error message\n                              example: Action failed\n                              type: string\n                          required:\n                            - code\n                            - message\n                          type: object\n                        finished:\n                          description: Point in time when the Action was finished (in ISO-8601 format). Only set if the Action is finished otherwise null.\n                          example: 2016-01-30T23:55:00+00:00\n                          nullable: true\n                          type: string\n                        id:\n                          description: ID of the Resource\n                          example: 42\n                          type: integer\n                        progress:\n                          description: Progress of Action in percent\n                          example: 100\n                          type: number\n                        resources:\n                          description: Resources the Action relates to\n                          items:\n                            properties:\n                              id:\n                                description: ID of the Resource\n                                example: 42\n                                type: integer\n                              type:\n                                description: Type of resource referenced\n                                example: server\n                                type: string\n                            required:\n                              - id\n                              - type\n                            type: object\n                          type: array\n                        started:\n                          description: Point in time when the Action was started (in ISO-8601 format)\n                          example: 2016-01-30T23:55:00+00:00\n                          type: string\n                        status:\n                          description: Status of the Action\n                          enum:\n                            - success\n                            - running\n                            - error\n                          type: string\n                      required:\n                        - id\n                        - command\n                        - status\n                        - progress\n                        - started\n                        - finished\n                        - resources\n                        - error\n                      title: Action\n                      type: object\n                    type: array\n                  firewall:\n                    properties:\n                      applied_to:\n                        items:\n                          properties:\n                            applied_to_resources:\n                              items:\n                                properties:\n                                  server:\n                                    properties:\n                                      id:\n                                        description: ID of the Resource\n                                        example: 42\n                                        type: integer\n                                    required:\n                                      - id\n                                    type: object\n                                  type:\n                                    description: Type of resource referenced\n                                    enum:\n                                      - server\n                                    example: server\n                                    type: string\n                                type: object\n                              type: array\n                            label_selector:\n                              properties:\n                                selector:\n                                  description: Label selector\n                                  example: env=prod\n                                  type: string\n                              required:\n                                - selector\n                              type: object\n                            server:\n                              properties:\n                                id:\n                                  description: ID of the Resource\n                                  example: 42\n                                  type: integer\n                              required:\n                                - id\n                              type: object\n                            type:\n                              description: Type of resource referenced\n                              enum:\n                                - server\n                                - label_selector\n                              example: server\n                              type: string\n                          required:\n                            - type\n                          type: object\n                        type: array\n                      created:\n                        description: Point in time when the Resource was created (in ISO-8601 format)\n                        example: 2016-01-30T23:55:00+00:00\n                        type: string\n                      id:\n                        description: ID of the Resource\n                        example: 42\n                        type: integer\n                      labels:\n                        additionalProperties:\n                          type: string\n                        description: User-defined labels (key-value pairs)\n                        type: object\n                      name:\n                        description: Name of the Resource. Must be unique per Project.\n                        example: my-resource\n                        type: string\n                      rules:\n                        items:\n                          properties:\n                            description:\n                              description: Description of the Rule\n                              maxLength: 255\n                              nullable: true\n                              type: string\n                            destination_ips:\n                              description: List of permitted IPv4/IPv6 addresses in CIDR notation. Use `0.0.0.0/0` to allow all IPv4 addresses and `::/0` to allow all IPv6 addresses. You can specify 100 CIDRs at most.\n                              example:\n                                - 28.239.13.1/32\n                                - 28.239.14.0/24\n                                - ff21:1eac:9a3b:ee58:5ca:990c:8bc9:c03b/128\n                              items:\n                                type: string\n                              type: array\n                            direction:\n                              description: Select traffic direction on which rule should be applied. Use `source_ips` for direction `in` and `destination_ips` for direction `out`.\n                              enum:\n                                - in\n                                - out\n                              type: string\n                            port:\n                              description: Port or port range to which traffic will be allowed, only applicable for protocols TCP and UDP. A port range can be specified by separating two ports with a dash, e.g `1024-5000`.\n                              example: \"80\"\n                              type: string\n                            protocol:\n                              description: Type of traffic to allow\n                              enum:\n                                - tcp\n                                - udp\n                                - icmp\n                                - esp\n                                - gre\n                              type: string\n                            source_ips:\n                              description: List of permitted IPv4/IPv6 addresses in CIDR notation. Use `0.0.0.0/0` to allow all IPv4 addresses and `::/0` to allow all IPv6 addresses. You can specify 100 CIDRs at most.\n                              example:\n                                - 28.239.13.1/32\n                                - 28.239.14.0/24\n                                - ff21:1eac:9a3b:ee58:5ca:990c:8bc9:c03b/128\n                              items:\n                                type: string\n                              type: array\n                          required:\n                            - direction\n                            - protocol\n                          title: Rule\n                          type: object\n                        type: array\n                    required:\n                      - id\n                      - name\n                      - created\n                      - rules\n                      - applied_to\n                    title: Firewall\n                    type: object\n                title: CreateFirewallResponse\n                type: object\n          description: The `firewall` key contains the Firewall that was just created\n      summary: Create a Firewall\n      tags:\n        - Firewalls\n  \"/firewalls/{id}\":\n    delete:\n      description: |\n        Deletes a Firewall.\n\n        #### Call specific error codes\n\n        | Code              | Description                               |\n        |-------------------|-------------------------------------------|\n        | `resource_in_use` | Firewall must not be in use to be deleted |\n      parameters:\n        - description: ID of the resource\n          in: path\n          name: id\n          required: true\n          schema:\n            type: integer\n      responses:\n        \"204\":\n          description: Firewall deleted\n      summary: Delete a Firewall\n      tags:\n        - Firewalls\n    get:\n      description: Gets a specific Firewall object.\n      parameters:\n        - description: ID of the resource\n          in: path\n          name: id\n          required: true\n          schema:\n            type: integer\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                properties:\n                  firewall:\n                    properties:\n                      applied_to:\n                        items:\n                          properties:\n                            applied_to_resources:\n                              items:\n                                properties:\n                                  server:\n                                    properties:\n                                      id:\n                                        description: ID of the Resource\n                                        example: 42\n                                        type: integer\n                                    required:\n                                      - id\n                                    type: object\n                                  type:\n                                    description: Type of resource referenced\n                                    enum:\n                                      - server\n                                    example: server\n                                    type: string\n                                type: object\n                              type: array\n                            label_selector:\n                              properties:\n                                selector:\n                                  description: Label selector\n                                  example: env=prod\n                                  type: string\n                              required:\n                                - selector\n                              type: object\n                            server:\n                              properties:\n                                id:\n                                  description: ID of the Resource\n                                  example: 42\n                                  type: integer\n                              required:\n                                - id\n                              type: object\n                            type:\n                              description: Type of resource referenced\n                              enum:\n                                - server\n                                - label_selector\n                              example: server\n                              type: string\n                          required:\n                            - type\n                          type: object\n                        type: array\n                      created:\n                        description: Point in time when the Resource was created (in ISO-8601 format)\n                        example: 2016-01-30T23:55:00+00:00\n                        type: string\n                      id:\n                        description: ID of the Resource\n                        example: 42\n                        type: integer\n                      labels:\n                        additionalProperties:\n                          type: string\n                        description: User-defined labels (key-value pairs)\n                        type: object\n                      name:\n                        description: Name of the Resource. Must be unique per Project.\n                        example: my-resource\n                        type: string\n                      rules:\n                        items:\n                          properties:\n                            description:\n                              description: Description of the Rule\n                              maxLength: 255\n                              nullable: true\n                              type: string\n                            destination_ips:\n                              description: List of permitted IPv4/IPv6 addresses in CIDR notation. Use `0.0.0.0/0` to allow all IPv4 addresses and `::/0` to allow all IPv6 addresses. You can specify 100 CIDRs at most.\n                              example:\n                                - 28.239.13.1/32\n                                - 28.239.14.0/24\n                                - ff21:1eac:9a3b:ee58:5ca:990c:8bc9:c03b/128\n                              items:\n                                type: string\n                              type: array\n                            direction:\n                              description: Select traffic direction on which rule should be applied. Use `source_ips` for direction `in` and `destination_ips` for direction `out`.\n                              enum:\n                                - in\n                                - out\n                              type: string\n                            port:\n                              description: Port or port range to which traffic will be allowed, only applicable for protocols TCP and UDP. A port range can be specified by separating two ports with a dash, e.g `1024-5000`.\n                              example: \"80\"\n                              type: string\n                            protocol:\n                              description: Type of traffic to allow\n                              enum:\n                                - tcp\n                                - udp\n                                - icmp\n                                - esp\n                                - gre\n                              type: string\n                            source_ips:\n                              description: List of permitted IPv4/IPv6 addresses in CIDR notation. Use `0.0.0.0/0` to allow all IPv4 addresses and `::/0` to allow all IPv6 addresses. You can specify 100 CIDRs at most.\n                              example:\n                                - 28.239.13.1/32\n                                - 28.239.14.0/24\n                                - ff21:1eac:9a3b:ee58:5ca:990c:8bc9:c03b/128\n                              items:\n                                type: string\n                              type: array\n                          required:\n                            - direction\n                            - protocol\n                          title: Rule\n                          type: object\n                        type: array\n                    required:\n                      - id\n                      - name\n                      - created\n                      - rules\n                      - applied_to\n                    title: Firewall\n                    type: object\n                required:\n                  - firewall\n                title: FirewallResponse\n                type: object\n          description: The `firewall` key contains a Firewall object\n      summary: Get a Firewall\n      tags:\n        - Firewalls\n    put:\n      description: |\n        Updates the Firewall.\n\n        Note that when updating labels, the Firewall's current set of labels will be replaced with the labels provided in the request body. So, for example, if you want to add a new label, you have to provide all existing labels plus the new label in the request body.\n\n        Note: if the Firewall object changes during the request, the response will be a “conflict” error.\n      parameters:\n        - description: ID of the resource\n          in: path\n          name: id\n          required: true\n          schema:\n            type: integer\n      requestBody:\n        content:\n          application/json:\n            schema:\n              properties:\n                labels:\n                  description: User-defined labels (key-value pairs)\n                  example:\n                    labelkey: value\n                  type: object\n                name:\n                  description: New Firewall name\n                  example: new-name\n                  type: string\n              title: UpdateFirewallRequest\n              type: object\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                properties:\n                  firewall:\n                    properties:\n                      applied_to:\n                        items:\n                          properties:\n                            applied_to_resources:\n                              items:\n                                properties:\n                                  server:\n                                    properties:\n                                      id:\n                                        description: ID of the Resource\n                                        example: 42\n                                        type: integer\n                                    required:\n                                      - id\n                                    type: object\n                                  type:\n                                    description: Type of resource referenced\n                                    enum:\n                                      - server\n                                    example: server\n                                    type: string\n                                type: object\n                              type: array\n                            label_selector:\n                              properties:\n                                selector:\n                                  description: Label selector\n                                  example: env=prod\n                                  type: string\n                              required:\n                                - selector\n                              type: object\n                            server:\n                              properties:\n                                id:\n                                  description: ID of the Resource\n                                  example: 42\n                                  type: integer\n                              required:\n                                - id\n                              type: object\n                            type:\n                              description: Type of resource referenced\n                              enum:\n                                - server\n                                - label_selector\n                              example: server\n                              type: string\n                          required:\n                            - type\n                          type: object\n                        type: array\n                      created:\n                        description: Point in time when the Resource was created (in ISO-8601 format)\n                        example: 2016-01-30T23:55:00+00:00\n                        type: string\n                      id:\n                        description: ID of the Resource\n                        example: 42\n                        type: integer\n                      labels:\n                        additionalProperties:\n                          type: string\n                        description: User-defined labels (key-value pairs)\n                        type: object\n                      name:\n                        description: Name of the Resource. Must be unique per Project.\n                        example: my-resource\n                        type: string\n                      rules:\n                        items:\n                          properties:\n                            description:\n                              description: Description of the Rule\n                              maxLength: 255\n                              nullable: true\n                              type: string\n                            destination_ips:\n                              description: List of permitted IPv4/IPv6 addresses in CIDR notation. Use `0.0.0.0/0` to allow all IPv4 addresses and `::/0` to allow all IPv6 addresses. You can specify 100 CIDRs at most.\n                              example:\n                                - 28.239.13.1/32\n                                - 28.239.14.0/24\n                                - ff21:1eac:9a3b:ee58:5ca:990c:8bc9:c03b/128\n                              items:\n                                type: string\n                              type: array\n                            direction:\n                              description: Select traffic direction on which rule should be applied. Use `source_ips` for direction `in` and `destination_ips` for direction `out`.\n                              enum:\n                                - in\n                                - out\n                              type: string\n                            port:\n                              description: Port or port range to which traffic will be allowed, only applicable for protocols TCP and UDP. A port range can be specified by separating two ports with a dash, e.g `1024-5000`.\n                              example: \"80\"\n                              type: string\n                            protocol:\n                              description: Type of traffic to allow\n                              enum:\n                                - tcp\n                                - udp\n                                - icmp\n                                - esp\n                                - gre\n                              type: string\n                            source_ips:\n                              description: List of permitted IPv4/IPv6 addresses in CIDR notation. Use `0.0.0.0/0` to allow all IPv4 addresses and `::/0` to allow all IPv6 addresses. You can specify 100 CIDRs at most.\n                              example:\n                                - 28.239.13.1/32\n                                - 28.239.14.0/24\n                                - ff21:1eac:9a3b:ee58:5ca:990c:8bc9:c03b/128\n                              items:\n                                type: string\n                              type: array\n                          required:\n                            - direction\n                            - protocol\n                          title: Rule\n                          type: object\n                        type: array\n                    required:\n                      - id\n                      - name\n                      - created\n                      - rules\n                      - applied_to\n                    title: Firewall\n                    type: object\n                required:\n                  - firewall\n                title: FirewallResponse\n                type: object\n          description: The `firewall` key contains the Firewall that was just updated\n      summary: Update a Firewall\n      tags:\n        - Firewalls\n  \"/firewalls/{id}/actions\":\n    get:\n      description: Returns all Action objects for a Firewall. You can sort the results by using the `sort` URI parameter, and filter them with the `status` parameter.\n      parameters:\n        - description: ID of the Resource\n          in: path\n          name: id\n          required: true\n          schema:\n            type: integer\n        - description: Can be used multiple times.\n          in: query\n          name: sort\n          required: false\n          schema:\n            enum:\n              - id\n              - id:asc\n              - id:desc\n              - command\n              - command:asc\n              - command:desc\n              - status\n              - status:asc\n              - status:desc\n              - progress\n              - progress:asc\n              - progress:desc\n              - started\n              - started:asc\n              - started:desc\n              - finished\n              - finished:asc\n              - finished:desc\n            title: ParameterSort\n            type: string\n        - description: Can be used multiple times, the response will contain only Actions with specified statuses\n          in: query\n          name: status\n          required: false\n          schema:\n            enum:\n              - running\n              - success\n              - error\n            title: ParameterStatus\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              example:\n                actions:\n                  - command: set_firewall_rules\n                    error:\n                      code: action_failed\n                      message: Action failed\n                    finished: 2016-01-30T23:56:00+00:00\n                    id: 13\n                    progress: 100\n                    resources:\n                      - id: 38\n                        type: firewall\n                    started: 2016-01-30T23:55:00+00:00\n                    status: success\n              schema:\n                properties:\n                  actions:\n                    items:\n                      properties:\n                        command:\n                          description: Command executed in the Action\n                          example: start_server\n                          type: string\n                        error:\n                          description: Error message for the Action if error occurred, otherwise null\n                          nullable: true\n                          properties:\n                            code:\n                              description: Fixed machine readable code\n                              example: action_failed\n                              type: string\n                            message:\n                              description: Humanized error message\n                              example: Action failed\n                              type: string\n                          required:\n                            - code\n                            - message\n                          type: object\n                        finished:\n                          description: Point in time when the Action was finished (in ISO-8601 format). Only set if the Action is finished otherwise null.\n                          example: 2016-01-30T23:55:00+00:00\n                          nullable: true\n                          type: string\n                        id:\n                          description: ID of the Resource\n                          example: 42\n                          type: integer\n                        progress:\n                          description: Progress of Action in percent\n                          example: 100\n                          type: number\n                        resources:\n                          description: Resources the Action relates to\n                          items:\n                            properties:\n                              id:\n                                description: ID of the Resource\n                                example: 42\n                                type: integer\n                              type:\n                                description: Type of resource referenced\n                                example: server\n                                type: string\n                            required:\n                              - id\n                              - type\n                            type: object\n                          type: array\n                        started:\n                          description: Point in time when the Action was started (in ISO-8601 format)\n                          example: 2016-01-30T23:55:00+00:00\n                          type: string\n                        status:\n                          description: Status of the Action\n                          enum:\n                            - success\n                            - running\n                            - error\n                          type: string\n                      required:\n                        - id\n                        - command\n                        - status\n                        - progress\n                        - started\n                        - finished\n                        - resources\n                        - error\n                      title: Action\n                      type: object\n                    type: array\n                  meta:\n                    properties:\n                      pagination:\n                        properties:\n                          last_page:\n                            description: ID of the last page available. Can be null if the current page is the last one.\n                            example: 4\n                            nullable: true\n                            type: number\n                          next_page:\n                            description: ID of the next page. Can be null if the current page is the last one.\n                            example: 4\n                            nullable: true\n                            type: number\n                          page:\n                            description: Current page number\n                            example: 3\n                            type: number\n                          per_page:\n                            description: Maximum number of items shown per page in the response\n                            example: 25\n                            type: number\n                          previous_page:\n                            description: ID of the previous page. Can be null if the current page is the first one.\n                            example: 2\n                            nullable: true\n                            type: number\n                          total_entries:\n                            description: The total number of entries that exist in the database for this query. Nullable if unknown.\n                            example: 100\n                            nullable: true\n                            type: number\n                        required:\n                          - page\n                          - per_page\n                          - previous_page\n                          - next_page\n                          - last_page\n                          - total_entries\n                        type: object\n                    required:\n                      - pagination\n                    type: object\n                required:\n                  - actions\n                title: ActionsResponse\n                type: object\n          description: The `actions` key contains a list of Actions\n      summary: Get all Actions for a Firewall\n      tags:\n        - Firewall Actions\n  \"/firewalls/{id}/actions/apply_to_resources\":\n    post:\n      description: |\n        Applies one Firewall to multiple resources.\n\n        Currently servers (public network interface) and label selectors are supported.\n\n        #### Call specific error codes\n\n        | Code                        | Description                                             |\n        |-----------------------------|---------------------------------------------------------|\n        | `firewall_already_applied`  | Firewall was already applied on resource                |\n        | `incompatible_network_type` | The Network type is incompatible for the given resource |\n      parameters:\n        - description: ID of the Firewall\n          in: path\n          name: id\n          required: true\n          schema:\n            type: integer\n      requestBody:\n        content:\n          application/json:\n            example:\n              apply_to:\n                - server:\n                    id: 42\n                  type: server\n            schema:\n              properties:\n                apply_to:\n                  description: Resources the Firewall should be applied to\n                  items:\n                    properties:\n                      label_selector:\n                        description: Configuration for type label_selector, required if type is `label_selector`\n                        properties:\n                          selector:\n                            description: Label selector\n                            example: env=prod\n                            type: string\n                        required:\n                          - selector\n                        type: object\n                      server:\n                        description: Configuration for type server, required if type is `server`\n                        properties:\n                          id:\n                            description: ID of the Server\n                            type: integer\n                        required:\n                          - id\n                        type: object\n                      type:\n                        description: Type of the resource\n                        enum:\n                          - server\n                          - label_selector\n                        type: string\n                    title: FirewallApplyToResources\n                    type: object\n                  type: array\n              required:\n                - apply_to\n              title: ApplyToResourcesRequest\n              type: object\n      responses:\n        \"201\":\n          content:\n            application/json:\n              example:\n                actions:\n                  - command: apply_firewall\n                    error:\n                      code: action_failed\n                      message: Action failed\n                    finished: 2016-01-30T23:56:00+00:00\n                    id: 14\n                    progress: 100\n                    resources:\n                      - id: 42\n                        type: server\n                      - id: 38\n                        type: firewall\n                    started: 2016-01-30T23:55:00+00:00\n                    status: success\n              schema:\n                properties:\n                  actions:\n                    items:\n                      properties:\n                        command:\n                          description: Command executed in the Action\n                          example: start_server\n                          type: string\n                        error:\n                          description: Error message for the Action if error occurred, otherwise null\n                          nullable: true\n                          properties:\n                            code:\n                              description: Fixed machine readable code\n                              example: action_failed\n                              type: string\n                            message:\n                              description: Humanized error message\n                              example: Action failed\n                              type: string\n                          required:\n                            - code\n                            - message\n                          type: object\n                        finished:\n                          description: Point in time when the Action was finished (in ISO-8601 format). Only set if the Action is finished otherwise null.\n                          example: 2016-01-30T23:55:00+00:00\n                          nullable: true\n                          type: string\n                        id:\n                          description: ID of the Resource\n                          example: 42\n                          type: integer\n                        progress:\n                          description: Progress of Action in percent\n                          example: 100\n                          type: number\n                        resources:\n                          description: Resources the Action relates to\n                          items:\n                            properties:\n                              id:\n                                description: ID of the Resource\n                                example: 42\n                                type: integer\n                              type:\n                                description: Type of resource referenced\n                                example: server\n                                type: string\n                            required:\n                              - id\n                              - type\n                            type: object\n                          type: array\n                        started:\n                          description: Point in time when the Action was started (in ISO-8601 format)\n                          example: 2016-01-30T23:55:00+00:00\n                          type: string\n                        status:\n                          description: Status of the Action\n                          enum:\n                            - success\n                            - running\n                            - error\n                          type: string\n                      required:\n                        - id\n                        - command\n                        - status\n                        - progress\n                        - started\n                        - finished\n                        - resources\n                        - error\n                      title: Action\n                      type: object\n                    type: array\n                  meta:\n                    properties:\n                      pagination:\n                        properties:\n                          last_page:\n                            description: ID of the last page available. Can be null if the current page is the last one.\n                            example: 4\n                            nullable: true\n                            type: number\n                          next_page:\n                            description: ID of the next page. Can be null if the current page is the last one.\n                            example: 4\n                            nullable: true\n                            type: number\n                          page:\n                            description: Current page number\n                            example: 3\n                            type: number\n                          per_page:\n                            description: Maximum number of items shown per page in the response\n                            example: 25\n                            type: number\n                          previous_page:\n                            description: ID of the previous page. Can be null if the current page is the first one.\n                            example: 2\n                            nullable: true\n                            type: number\n                          total_entries:\n                            description: The total number of entries that exist in the database for this query. Nullable if unknown.\n                            example: 100\n                            nullable: true\n                            type: number\n                        required:\n                          - page\n                          - per_page\n                          - previous_page\n                          - next_page\n                          - last_page\n                          - total_entries\n                        type: object\n                    required:\n                      - pagination\n                    type: object\n                required:\n                  - actions\n                title: ActionsResponse\n                type: object\n          description: The `actions` key contains multiple `apply_firewall` Actions\n      summary: Apply to Resources\n      tags:\n        - Firewall Actions\n  \"/firewalls/{id}/actions/remove_from_resources\":\n    post:\n      description: |\n        Removes one Firewall from multiple resources.\n\n        Currently only Servers (and their public network interfaces) are supported.\n\n        #### Call specific error codes\n\n        | Code                       | Description                                    |\n        |----------------------------|------------------------------------------------|\n        | `firewall_already_removed` | Firewall was already removed from the resource |\n      parameters:\n        - description: ID of the Firewall\n          in: path\n          name: id\n          required: true\n          schema:\n            type: integer\n      requestBody:\n        content:\n          application/json:\n            example:\n              remove_from:\n                - server:\n                    id: 42\n                  type: server\n            schema:\n              properties:\n                remove_from:\n                  description: Resources the Firewall should be removed from\n                  items:\n                    properties:\n                      label_selector:\n                        description: Configuration for type label_selector, required if type is `label_selector`\n                        properties:\n                          selector:\n                            description: Label selector\n                            example: env=prod\n                            type: string\n                        required:\n                          - selector\n                        type: object\n                      server:\n                        description: Configuration for type server, required if type is `server`\n                        properties:\n                          id:\n                            description: ID of the Server\n                            type: integer\n                        required:\n                          - id\n                        type: object\n                      type:\n                        description: Type of the resource\n                        enum:\n                          - server\n                          - label_selector\n                        type: string\n                    title: FirewallRemoveFromResources\n                    type: object\n                  type: array\n              required:\n                - remove_from\n              title: RemoveFromResourcesRequest\n              type: object\n      responses:\n        \"201\":\n          content:\n            application/json:\n              example:\n                actions:\n                  - command: remove_firewall\n                    error:\n                      code: action_failed\n                      message: Action failed\n                    finished: 2016-01-30T23:56:00+00:00\n                    id: 14\n                    progress: 100\n                    resources:\n                      - id: 42\n                        type: server\n                      - id: 38\n                        type: firewall\n                    started: 2016-01-30T23:55:00+00:00\n                    status: success\n              schema:\n                properties:\n                  actions:\n                    items:\n                      properties:\n                        command:\n                          description: Command executed in the Action\n                          example: start_server\n                          type: string\n                        error:\n                          description: Error message for the Action if error occurred, otherwise null\n                          nullable: true\n                          properties:\n                            code:\n                              description: Fixed machine readable code\n                              example: action_failed\n                              type: string\n                            message:\n                              description: Humanized error message\n                              example: Action failed\n                              type: string\n                          required:\n                            - code\n                            - message\n                          type: object\n                        finished:\n                          description: Point in time when the Action was finished (in ISO-8601 format). Only set if the Action is finished otherwise null.\n                          example: 2016-01-30T23:55:00+00:00\n                          nullable: true\n                          type: string\n                        id:\n                          description: ID of the Resource\n                          example: 42\n                          type: integer\n                        progress:\n                          description: Progress of Action in percent\n                          example: 100\n                          type: number\n                        resources:\n                          description: Resources the Action relates to\n                          items:\n                            properties:\n                              id:\n                                description: ID of the Resource\n                                example: 42\n                                type: integer\n                              type:\n                                description: Type of resource referenced\n                                example: server\n                                type: string\n                            required:\n                              - id\n                              - type\n                            type: object\n                          type: array\n                        started:\n                          description: Point in time when the Action was started (in ISO-8601 format)\n                          example: 2016-01-30T23:55:00+00:00\n                          type: string\n                        status:\n                          description: Status of the Action\n                          enum:\n                            - success\n                            - running\n                            - error\n                          type: string\n                      required:\n                        - id\n                        - command\n                        - status\n                        - progress\n                        - started\n                        - finished\n                        - resources\n                        - error\n                      title: Action\n                      type: object\n                    type: array\n                  meta:\n                    properties:\n                      pagination:\n                        properties:\n                          last_page:\n                            description: ID of the last page available. Can be null if the current page is the last one.\n                            example: 4\n                            nullable: true\n                            type: number\n                          next_page:\n                            description: ID of the next page. Can be null if the current page is the last one.\n                            example: 4\n                            nullable: true\n                            type: number\n                          page:\n                            description: Current page number\n                            example: 3\n                            type: number\n                          per_page:\n                            description: Maximum number of items shown per page in the response\n                            example: 25\n                            type: number\n                          previous_page:\n                            description: ID of the previous page. Can be null if the current page is the first one.\n                            example: 2\n                            nullable: true\n                            type: number\n                          total_entries:\n                            description: The total number of entries that exist in the database for this query. Nullable if unknown.\n                            example: 100\n                            nullable: true\n                            type: number\n                        required:\n                          - page\n                          - per_page\n                          - previous_page\n                          - next_page\n                          - last_page\n                          - total_entries\n                        type: object\n                    required:\n                      - pagination\n                    type: object\n                required:\n                  - actions\n                title: ActionsResponse\n                type: object\n          description: The `actions` key contains multiple `remove_firewall` Actions\n      summary: Remove from Resources\n      tags:\n        - Firewall Actions\n  \"/firewalls/{id}/actions/set_rules\":\n    post:\n      description: |\n        Sets the rules of a Firewall.\n\n        All existing rules will be overwritten. Pass an empty `rules` array to remove all rules.\n      parameters:\n        - description: ID of the Firewall\n          in: path\n          name: id\n          required: true\n          schema:\n            type: integer\n      requestBody:\n        content:\n          application/json:\n            examples:\n              rules:\n                value:\n                  rules:\n                    - description: Allow port 80\n                      direction: in\n                      port: \"80\"\n                      protocol: tcp\n                      source_ips:\n                        - 28.239.13.1/32\n                        - 28.239.14.0/24\n                        - ff21:1eac:9a3b:ee58:5ca:990c:8bc9:c03b/128\n            schema:\n              properties:\n                rules:\n                  description: Array of rules\n                  items:\n                    properties:\n                      description:\n                        description: Description of the Rule\n                        maxLength: 255\n                        nullable: true\n                        type: string\n                      destination_ips:\n                        description: List of permitted IPv4/IPv6 addresses in CIDR notation. Use `0.0.0.0/0` to allow all IPv4 addresses and `::/0` to allow all IPv6 addresses. You can specify 100 CIDRs at most.\n                        example:\n                          - 28.239.13.1/32\n                          - 28.239.14.0/24\n                          - ff21:1eac:9a3b:ee58:5ca:990c:8bc9:c03b/128\n                        items:\n                          type: string\n                        type: array\n                      direction:\n                        description: Select traffic direction on which rule should be applied. Use `source_ips` for direction `in` and `destination_ips` for direction `out`.\n                        enum:\n                          - in\n                          - out\n                        type: string\n                      port:\n                        description: Port or port range to which traffic will be allowed, only applicable for protocols TCP and UDP. A port range can be specified by separating two ports with a dash, e.g `1024-5000`.\n                        example: \"80\"\n                        type: string\n                      protocol:\n                        description: Type of traffic to allow\n                        enum:\n                          - tcp\n                          - udp\n                          - icmp\n                          - esp\n                          - gre\n                        type: string\n                      source_ips:\n                        description: List of permitted IPv4/IPv6 addresses in CIDR notation. Use `0.0.0.0/0` to allow all IPv4 addresses and `::/0` to allow all IPv6 addresses. You can specify 100 CIDRs at most.\n                        example:\n                          - 28.239.13.1/32\n                          - 28.239.14.0/24\n                          - ff21:1eac:9a3b:ee58:5ca:990c:8bc9:c03b/128\n                        items:\n                          type: string\n                        type: array\n                    required:\n                      - direction\n                      - protocol\n                    title: Rule\n                    type: object\n                  type: array\n              required:\n                - rules\n              title: SetRulesRequest\n              type: object\n      responses:\n        \"201\":\n          content:\n            application/json:\n              example:\n                actions:\n                  - command: set_firewall_rules\n                    error:\n                      code: action_failed\n                      message: Action failed\n                    finished: 2016-01-30T23:56:00+00:00\n                    id: 13\n                    progress: 100\n                    resources:\n                      - id: 38\n                        type: firewall\n                    started: 2016-01-30T23:55:00+00:00\n                    status: success\n                  - command: apply_firewall\n                    error:\n                      code: action_failed\n                      message: Action failed\n                    finished: 2016-01-30T23:56:00+00:00\n                    id: 14\n                    progress: 100\n                    resources:\n                      - id: 38\n                        type: firewall\n                      - id: 42\n                        type: server\n                    started: 2016-01-30T23:55:00+00:00\n                    status: success\n              schema:\n                properties:\n                  actions:\n                    items:\n                      properties:\n                        command:\n                          description: Command executed in the Action\n                          example: start_server\n                          type: string\n                        error:\n                          description: Error message for the Action if error occurred, otherwise null\n                          nullable: true\n                          properties:\n                            code:\n                              description: Fixed machine readable code\n                              example: action_failed\n                              type: string\n                            message:\n                              description: Humanized error message\n                              example: Action failed\n                              type: string\n                          required:\n                            - code\n                            - message\n                          type: object\n                        finished:\n                          description: Point in time when the Action was finished (in ISO-8601 format). Only set if the Action is finished otherwise null.\n                          example: 2016-01-30T23:55:00+00:00\n                          nullable: true\n                          type: string\n                        id:\n                          description: ID of the Resource\n                          example: 42\n                          type: integer\n                        progress:\n                          description: Progress of Action in percent\n                          example: 100\n                          type: number\n                        resources:\n                          description: Resources the Action relates to\n                          items:\n                            properties:\n                              id:\n                                description: ID of the Resource\n                                example: 42\n                                type: integer\n                              type:\n                                description: Type of resource referenced\n                                example: server\n                                type: string\n                            required:\n                              - id\n                              - type\n                            type: object\n                          type: array\n                        started:\n                          description: Point in time when the Action was started (in ISO-8601 format)\n                          example: 2016-01-30T23:55:00+00:00\n                          type: string\n                        status:\n                          description: Status of the Action\n                          enum:\n                            - success\n                            - running\n                            - error\n                          type: string\n                      required:\n                        - id\n                        - command\n                        - status\n                        - progress\n                        - started\n                        - finished\n                        - resources\n                        - error\n                      title: Action\n                      type: object\n                    type: array\n                  meta:\n                    properties:\n                      pagination:\n                        properties:\n                          last_page:\n                            description: ID of the last page available. Can be null if the current page is the last one.\n                            example: 4\n                            nullable: true\n                            type: number\n                          next_page:\n                            description: ID of the next page. Can be null if the current page is the last one.\n                            example: 4\n                            nullable: true\n                            type: number\n                          page:\n                            description: Current page number\n                            example: 3\n                            type: number\n                          per_page:\n                            description: Maximum number of items shown per page in the response\n                            example: 25\n                            type: number\n                          previous_page:\n                            description: ID of the previous page. Can be null if the current page is the first one.\n                            example: 2\n                            nullable: true\n                            type: number\n                          total_entries:\n                            description: The total number of entries that exist in the database for this query. Nullable if unknown.\n                            example: 100\n                            nullable: true\n                            type: number\n                        required:\n                          - page\n                          - per_page\n                          - previous_page\n                          - next_page\n                          - last_page\n                          - total_entries\n                        type: object\n                    required:\n                      - pagination\n                    type: object\n                required:\n                  - actions\n                title: ActionsResponse\n                type: object\n          description: The `action` key contains one `set_firewall_rules` Action plus one `apply_firewall` Action per resource where the Firewall is active\n      summary: Set Rules\n      tags:\n        - Firewall Actions\n  \"/firewalls/{id}/actions/{action_id}\":\n    get:\n      description: Returns a specific Action for a Firewall.\n      parameters:\n        - description: ID of the Firewall\n          in: path\n          name: id\n          required: true\n          schema:\n            type: integer\n        - description: ID of the Action\n          in: path\n          name: action_id\n          required: true\n          schema:\n            type: integer\n      responses:\n        \"200\":\n          content:\n            application/json:\n              example:\n                action:\n                  command: set_firewall_rules\n                  error:\n                    code: action_failed\n                    message: Action failed\n                  finished: 2016-01-30T23:56:00+00:00\n                  id: 13\n                  progress: 100\n                  resources:\n                    - id: 38\n                      type: firewall\n                  started: 2016-01-30T23:55:00+00:00\n                  status: success\n              schema:\n                properties:\n                  action:\n                    properties:\n                      command:\n                        description: Command executed in the Action\n                        example: start_server\n                        type: string\n                      error:\n                        description: Error message for the Action if error occurred, otherwise null\n                        nullable: true\n                        properties:\n                          code:\n                            description: Fixed machine readable code\n                            example: action_failed\n                            type: string\n                          message:\n                            description: Humanized error message\n                            example: Action failed\n                            type: string\n                        required:\n                          - code\n                          - message\n                        type: object\n                      finished:\n                        description: Point in time when the Action was finished (in ISO-8601 format). Only set if the Action is finished otherwise null.\n                        example: 2016-01-30T23:55:00+00:00\n                        nullable: true\n                        type: string\n                      id:\n                        description: ID of the Resource\n                        example: 42\n                        type: integer\n                      progress:\n                        description: Progress of Action in percent\n                        example: 100\n                        type: number\n                      resources:\n                        description: Resources the Action relates to\n                        items:\n                          properties:\n                            id:\n                              description: ID of the Resource\n                              example: 42\n                              type: integer\n                            type:\n                              description: Type of resource referenced\n                              example: server\n                              type: string\n                          required:\n                            - id\n                            - type\n                          type: object\n                        type: array\n                      started:\n                        description: Point in time when the Action was started (in ISO-8601 format)\n                        example: 2016-01-30T23:55:00+00:00\n                        type: string\n                      status:\n                        description: Status of the Action\n                        enum:\n                          - success\n                          - running\n                          - error\n                        type: string\n                    required:\n                      - id\n                      - command\n                      - status\n                      - progress\n                      - started\n                      - finished\n                      - resources\n                      - error\n                    title: Action\n                    type: object\n                required:\n                  - action\n                title: ActionResponse\n                type: object\n          description: The `action` key contains the Firewall Action\n      summary: Get an Action for a Firewall\n      tags:\n        - Firewall Actions\n  /floating_ips:\n    get:\n      description: Returns all Floating IP objects.\n      parameters:\n        - description: Can be used to filter Floating IPs by their name. The response will only contain the Floating IP matching the specified name.\n          in: query\n          name: name\n          required: false\n          schema:\n            type: string\n        - description: Can be used to filter Floating IPs by labels. The response will only contain Floating IPs matching the label selector.\n          in: query\n          name: label_selector\n          required: false\n          schema:\n            type: string\n        - description: Can be used multiple times. Choices id id:asc id:desc created created:asc created:desc\n          in: query\n          name: sort\n          required: false\n          schema:\n            enum:\n              - id\n              - id:asc\n              - id:desc\n              - created\n              - created:asc\n              - created:desc\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                properties:\n                  floating_ips:\n                    items:\n                      properties:\n                        blocked:\n                          description: Whether the IP is blocked\n                          example: false\n                          type: boolean\n                        created:\n                          description: Point in time when the Resource was created (in ISO-8601 format)\n                          example: 2016-01-30T23:55:00+00:00\n                          type: string\n                        description:\n                          description: Description of the Resource\n                          example: this describes my resource\n                          nullable: true\n                          type: string\n                        dns_ptr:\n                          description: Array of reverse DNS entries\n                          items:\n                            properties:\n                              dns_ptr:\n                                description: DNS pointer for the specific IP address\n                                example: server.example.com\n                                type: string\n                              ip:\n                                description: Single IPv4 or IPv6 address\n                                example: 2001:db8::1\n                                type: string\n                            required:\n                              - ip\n                              - dns_ptr\n                            type: object\n                          type: array\n                        home_location:\n                          description: Location the Floating IP was created in. Routing is optimized for this Location.\n                          properties:\n                            city:\n                              description: City the Location is closest to\n                              example: Falkenstein\n                              type: string\n                            country:\n                              description: ISO 3166-1 alpha-2 code of the country the Location resides in\n                              example: DE\n                              type: string\n                            description:\n                              description: Description of the Location\n                              example: Falkenstein DC Park 1\n                              type: string\n                            id:\n                              description: ID of the Location\n                              example: 1\n                              type: number\n                            latitude:\n                              description: Latitude of the city closest to the Location\n                              example: 50.47612\n                              type: number\n                            longitude:\n                              description: Longitude of the city closest to the Location\n                              example: 12.370071\n                              type: number\n                            name:\n                              description: Unique identifier of the Location\n                              example: fsn1\n                              type: string\n                            network_zone:\n                              description: Name of network zone this Location resides in\n                              example: eu-central\n                              type: string\n                          required:\n                            - id\n                            - name\n                            - description\n                            - country\n                            - city\n                            - latitude\n                            - longitude\n                            - network_zone\n                          type: object\n                        id:\n                          description: ID of the Resource\n                          example: 42\n                          type: integer\n                        ip:\n                          description: IP address\n                          example: 131.232.99.1\n                          type: string\n                        labels:\n                          additionalProperties:\n                            type: string\n                          description: User-defined labels (key-value pairs)\n                          type: object\n                        name:\n                          description: Name of the Resource. Must be unique per Project.\n                          example: my-resource\n                          type: string\n                        protection:\n                          description: Protection configuration for the Resource\n                          properties:\n                            delete:\n                              description: If true, prevents the Resource from being deleted\n                              example: false\n                              type: boolean\n                          required:\n                            - delete\n                          type: object\n                        server:\n                          description: ID of the Server the Floating IP is assigned to, null if it is not assigned at all\n                          example: 42\n                          nullable: true\n                          type: integer\n                        type:\n                          description: Type of the Floating IP\n                          enum:\n                            - ipv4\n                            - ipv6\n                          type: string\n                      required:\n                        - id\n                        - name\n                        - description\n                        - ip\n                        - type\n                        - server\n                        - dns_ptr\n                        - home_location\n                        - blocked\n                        - protection\n                        - labels\n                        - created\n                      type: object\n                    type: array\n                  meta:\n                    properties:\n                      pagination:\n                        properties:\n                          last_page:\n                            description: ID of the last page available. Can be null if the current page is the last one.\n                            example: 4\n                            nullable: true\n                            type: number\n                          next_page:\n                            description: ID of the next page. Can be null if the current page is the last one.\n                            example: 4\n                            nullable: true\n                            type: number\n                          page:\n                            description: Current page number\n                            example: 3\n                            type: number\n                          per_page:\n                            description: Maximum number of items shown per page in the response\n                            example: 25\n                            type: number\n                          previous_page:\n                            description: ID of the previous page. Can be null if the current page is the first one.\n                            example: 2\n                            nullable: true\n                            type: number\n                          total_entries:\n                            description: The total number of entries that exist in the database for this query. Nullable if unknown.\n                            example: 100\n                            nullable: true\n                            type: number\n                        required:\n                          - page\n                          - per_page\n                          - previous_page\n                          - next_page\n                          - last_page\n                          - total_entries\n                        type: object\n                    required:\n                      - pagination\n                    type: object\n                required:\n                  - floating_ips\n                type: object\n          description: The `floating_ips` key in the reply contains an array of Floating IP objects with this structure\n      summary: Get all Floating IPs\n      tags:\n        - Floating IPs\n    post:\n      description: Creates a new Floating IP assigned to a Server. If you want to create a Floating IP that is not bound to a Server, you need to provide the `home_location` key instead of `server`. This can be either the ID or the name of the Location this IP shall be created in. Note that a Floating IP can be assigned to a Server in any Location later on. For optimal routing it is advised to use the Floating IP in the same Location it was created in.\n      requestBody:\n        content:\n          application/json:\n            schema:\n              properties:\n                description:\n                  example: Web Frontend\n                  type: string\n                home_location:\n                  description: Home Location (routing is optimized for that Location). Only optional if Server argument is passed.\n                  example: fsn1\n                  type: string\n                labels:\n                  description: User-defined labels (key-value pairs)\n                  example:\n                    labelkey: value\n                  type: object\n                name:\n                  example: Web Frontend\n                  type: string\n                server:\n                  description: Server to assign the Floating IP to\n                  example: 42\n                  type: integer\n                type:\n                  description: Floating IP type\n                  enum:\n                    - ipv4\n                    - ipv6\n                  type: string\n              required:\n                - type\n              title: CreateFloatingIPRequest\n              type: object\n        description: The `type` argument is required while `home_location` and `server` are mutually exclusive.\n      responses:\n        \"201\":\n          content:\n            application/json:\n              example:\n                action:\n                  command: create_floating_ip\n                  error:\n                    code: action_failed\n                    message: Action failed\n                  finished: null\n                  id: 13\n                  progress: 0\n                  resources:\n                    - id: 42\n                      type: server\n                  started: 2016-01-30T23:50:00+00:00\n                  status: running\n                floating_ip:\n                  blocked: false\n                  created: 2016-01-30T23:50:00+00:00\n                  description: Web Frontend\n                  dns_ptr:\n                    - dns_ptr: server.example.com\n                      ip: 2001:db8::1\n                  home_location:\n                    city: Falkenstein\n                    country: DE\n                    description: Falkenstein DC Park 1\n                    id: 1\n                    latitude: 50.47612\n                    longitude: 12.370071\n                    name: fsn1\n                    network_zone: eu-central\n                  id: 4711\n                  ip: 131.232.99.1\n                  labels:\n                    env: dev\n                  name: Web Frontend\n                  protection:\n                    delete: false\n                  server: 42\n                  type: ipv4\n              schema:\n                properties:\n                  action:\n                    properties:\n                      command:\n                        description: Command executed in the Action\n                        example: start_server\n                        type: string\n                      error:\n                        description: Error message for the Action if error occurred, otherwise null\n                        nullable: true\n                        properties:\n                          code:\n                            description: Fixed machine readable code\n                            example: action_failed\n                            type: string\n                          message:\n                            description: Humanized error message\n                            example: Action failed\n                            type: string\n                        required:\n                          - code\n                          - message\n                        type: object\n                      finished:\n                        description: Point in time when the Action was finished (in ISO-8601 format). Only set if the Action is finished otherwise null.\n                        example: 2016-01-30T23:55:00+00:00\n                        nullable: true\n                        type: string\n                      id:\n                        description: ID of the Resource\n                        example: 42\n                        type: integer\n                      progress:\n                        description: Progress of Action in percent\n                        example: 100\n                        type: number\n                      resources:\n                        description: Resources the Action relates to\n                        items:\n                          properties:\n                            id:\n                              description: ID of the Resource\n                              example: 42\n                              type: integer\n                            type:\n                              description: Type of resource referenced\n                              example: server\n                              type: string\n                          required:\n                            - id\n                            - type\n                          type: object\n                        type: array\n                      started:\n                        description: Point in time when the Action was started (in ISO-8601 format)\n                        example: 2016-01-30T23:55:00+00:00\n                        type: string\n                      status:\n                        description: Status of the Action\n                        enum:\n                          - success\n                          - running\n                          - error\n                        type: string\n                    required:\n                      - id\n                      - command\n                      - status\n                      - progress\n                      - started\n                      - finished\n                      - resources\n                      - error\n                    title: Action\n                    type: object\n                  floating_ip:\n                    properties:\n                      blocked:\n                        description: Whether the IP is blocked\n                        example: false\n                        type: boolean\n                      created:\n                        description: Point in time when the Resource was created (in ISO-8601 format)\n                        example: 2016-01-30T23:55:00+00:00\n                        type: string\n                      description:\n                        description: Description of the Resource\n                        example: this describes my resource\n                        nullable: true\n                        type: string\n                      dns_ptr:\n                        description: Array of reverse DNS entries\n                        items:\n                          properties:\n                            dns_ptr:\n                              description: DNS pointer for the specific IP address\n                              example: server.example.com\n                              type: string\n                            ip:\n                              description: Single IPv4 or IPv6 address\n                              example: 2001:db8::1\n                              type: string\n                          required:\n                            - ip\n                            - dns_ptr\n                          type: object\n                        type: array\n                      home_location:\n                        description: Location the Floating IP was created in. Routing is optimized for this Location.\n                        properties:\n                          city:\n                            description: City the Location is closest to\n                            example: Falkenstein\n                            type: string\n                          country:\n                            description: ISO 3166-1 alpha-2 code of the country the Location resides in\n                            example: DE\n                            type: string\n                          description:\n                            description: Description of the Location\n                            example: Falkenstein DC Park 1\n                            type: string\n                          id:\n                            description: ID of the Location\n                            example: 1\n                            type: number\n                          latitude:\n                            description: Latitude of the city closest to the Location\n                            example: 50.47612\n                            type: number\n                          longitude:\n                            description: Longitude of the city closest to the Location\n                            example: 12.370071\n                            type: number\n                          name:\n                            description: Unique identifier of the Location\n                            example: fsn1\n                            type: string\n                          network_zone:\n                            description: Name of network zone this Location resides in\n                            example: eu-central\n                            type: string\n                        required:\n                          - id\n                          - name\n                          - description\n                          - country\n                          - city\n                          - latitude\n                          - longitude\n                          - network_zone\n                        type: object\n                      id:\n                        description: ID of the Resource\n                        example: 42\n                        type: integer\n                      ip:\n                        description: IP address\n                        example: 131.232.99.1\n                        type: string\n                      labels:\n                        additionalProperties:\n                          type: string\n                        description: User-defined labels (key-value pairs)\n                        type: object\n                      name:\n                        description: Name of the Resource. Must be unique per Project.\n                        example: my-resource\n                        type: string\n                      protection:\n                        description: Protection configuration for the Resource\n                        properties:\n                          delete:\n                            description: If true, prevents the Resource from being deleted\n                            example: false\n                            type: boolean\n                        required:\n                          - delete\n                        type: object\n                      server:\n                        description: ID of the Server the Floating IP is assigned to, null if it is not assigned at all\n                        example: 42\n                        nullable: true\n                        type: integer\n                      type:\n                        description: Type of the Floating IP\n                        enum:\n                          - ipv4\n                          - ipv6\n                        type: string\n                    required:\n                      - id\n                      - name\n                      - description\n                      - ip\n                      - type\n                      - server\n                      - dns_ptr\n                      - home_location\n                      - blocked\n                      - protection\n                      - labels\n                      - created\n                    type: object\n                required:\n                  - floating_ip\n                type: object\n          description: The `floating_ip` key in the reply contains the object that was just created\n      summary: Create a Floating IP\n      tags:\n        - Floating IPs\n  \"/floating_ips/{id}\":\n    delete:\n      description: Deletes a Floating IP. If it is currently assigned to a Server it will automatically get unassigned.\n      parameters:\n        - description: ID of the Floating IP\n          in: path\n          name: id\n          required: true\n          schema:\n            type: integer\n      responses:\n        \"204\":\n          description: Floating IP deleted\n      summary: Delete a Floating IP\n      tags:\n        - Floating IPs\n    get:\n      description: Returns a specific Floating IP object.\n      parameters:\n        - description: ID of the Floating IP\n          in: path\n          name: id\n          required: true\n          schema:\n            type: integer\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                properties:\n                  floating_ip:\n                    properties:\n                      blocked:\n                        description: Whether the IP is blocked\n                        example: false\n                        type: boolean\n                      created:\n                        description: Point in time when the Resource was created (in ISO-8601 format)\n                        example: 2016-01-30T23:55:00+00:00\n                        type: string\n                      description:\n                        description: Description of the Resource\n                        example: this describes my resource\n                        nullable: true\n                        type: string\n                      dns_ptr:\n                        description: Array of reverse DNS entries\n                        items:\n                          properties:\n                            dns_ptr:\n                              description: DNS pointer for the specific IP address\n                              example: server.example.com\n                              type: string\n                            ip:\n                              description: Single IPv4 or IPv6 address\n                              example: 2001:db8::1\n                              type: string\n                          required:\n                            - ip\n                            - dns_ptr\n                          type: object\n                        type: array\n                      home_location:\n                        description: Location the Floating IP was created in. Routing is optimized for this Location.\n                        properties:\n                          city:\n                            description: City the Location is closest to\n                            example: Falkenstein\n                            type: string\n                          country:\n                            description: ISO 3166-1 alpha-2 code of the country the Location resides in\n                            example: DE\n                            type: string\n                          description:\n                            description: Description of the Location\n                            example: Falkenstein DC Park 1\n                            type: string\n                          id:\n                            description: ID of the Location\n                            example: 1\n                            type: number\n                          latitude:\n                            description: Latitude of the city closest to the Location\n                            example: 50.47612\n                            type: number\n                          longitude:\n                            description: Longitude of the city closest to the Location\n                            example: 12.370071\n                            type: number\n                          name:\n                            description: Unique identifier of the Location\n                            example: fsn1\n                            type: string\n                          network_zone:\n                            description: Name of network zone this Location resides in\n                            example: eu-central\n                            type: string\n                        required:\n                          - id\n                          - name\n                          - description\n                          - country\n                          - city\n                          - latitude\n                          - longitude\n                          - network_zone\n                        type: object\n                      id:\n                        description: ID of the Resource\n                        example: 42\n                        type: integer\n                      ip:\n                        description: IP address\n                        example: 131.232.99.1\n                        type: string\n                      labels:\n                        additionalProperties:\n                          type: string\n                        description: User-defined labels (key-value pairs)\n                        type: object\n                      name:\n                        description: Name of the Resource. Must be unique per Project.\n                        example: my-resource\n                        type: string\n                      protection:\n                        description: Protection configuration for the Resource\n                        properties:\n                          delete:\n                            description: If true, prevents the Resource from being deleted\n                            example: false\n                            type: boolean\n                        required:\n                          - delete\n                        type: object\n                      server:\n                        description: ID of the Server the Floating IP is assigned to, null if it is not assigned at all\n                        example: 42\n                        nullable: true\n                        type: integer\n                      type:\n                        description: Type of the Floating IP\n                        enum:\n                          - ipv4\n                          - ipv6\n                        type: string\n                    required:\n                      - id\n                      - name\n                      - description\n                      - ip\n                      - type\n                      - server\n                      - dns_ptr\n                      - home_location\n                      - blocked\n                      - protection\n                      - labels\n                      - created\n                    type: object\n                required:\n                  - floating_ip\n                type: object\n          description: The `floating_ip` key in the reply contains a Floating IP object with this structure\n      summary: Get a Floating IP\n      tags:\n        - Floating IPs\n    put:\n      description: |-\n        Updates the description or labels of a Floating IP.\n        Also note that when updating labels, the Floating IP’s current set of labels will be replaced with the labels provided in the request body. So, for example, if you want to add a new label, you have to provide all existing labels plus the new label in the request body.\n      parameters:\n        - description: ID of the Floating IP\n          in: path\n          name: id\n          required: true\n          schema:\n            type: integer\n      requestBody:\n        content:\n          application/json:\n            schema:\n              properties:\n                description:\n                  description: New Description to set\n                  example: Web Frontend\n                  type: string\n                labels:\n                  description: User-defined labels (key-value pairs)\n                  example:\n                    labelkey: value\n                  type: object\n                name:\n                  description: New unique name to set\n                  example: Web Frontend\n                  type: string\n              title: UpdateFloatingIPRequest\n              type: object\n      responses:\n        \"200\":\n          content:\n            application/json:\n              example:\n                floating_ip:\n                  blocked: false\n                  created: 2016-01-30T23:50:00+00:00\n                  description: Web Frontend\n                  dns_ptr:\n                    - dns_ptr: server.example.com\n                      ip: 2001:db8::1\n                  home_location:\n                    city: Falkenstein\n                    country: DE\n                    description: Falkenstein DC Park 1\n                    id: 1\n                    latitude: 50.47612\n                    longitude: 12.370071\n                    name: fsn1\n                    network_zone: eu-central\n                  id: 4711\n                  ip: 131.232.99.1\n                  labels:\n                    labelkey: value\n                  name: Web Frontend\n                  protection:\n                    delete: false\n                  server: 42\n                  type: ipv4\n              schema:\n                properties:\n                  floating_ip:\n                    properties:\n                      blocked:\n                        description: Whether the IP is blocked\n                        example: false\n                        type: boolean\n                      created:\n                        description: Point in time when the Resource was created (in ISO-8601 format)\n                        example: 2016-01-30T23:55:00+00:00\n                        type: string\n                      description:\n                        description: Description of the Resource\n                        example: this describes my resource\n                        nullable: true\n                        type: string\n                      dns_ptr:\n                        description: Array of reverse DNS entries\n                        items:\n                          properties:\n                            dns_ptr:\n                              description: DNS pointer for the specific IP address\n                              example: server.example.com\n                              type: string\n                            ip:\n                              description: Single IPv4 or IPv6 address\n                              example: 2001:db8::1\n                              type: string\n                          required:\n                            - ip\n                            - dns_ptr\n                          type: object\n                        type: array\n                      home_location:\n                        description: Location the Floating IP was created in. Routing is optimized for this Location.\n                        properties:\n                          city:\n                            description: City the Location is closest to\n                            example: Falkenstein\n                            type: string\n                          country:\n                            description: ISO 3166-1 alpha-2 code of the country the Location resides in\n                            example: DE\n                            type: string\n                          description:\n                            description: Description of the Location\n                            example: Falkenstein DC Park 1\n                            type: string\n                          id:\n                            description: ID of the Location\n                            example: 1\n                            type: number\n                          latitude:\n                            description: Latitude of the city closest to the Location\n                            example: 50.47612\n                            type: number\n                          longitude:\n                            description: Longitude of the city closest to the Location\n                            example: 12.370071\n                            type: number\n                          name:\n                            description: Unique identifier of the Location\n                            example: fsn1\n                            type: string\n                          network_zone:\n                            description: Name of network zone this Location resides in\n                            example: eu-central\n                            type: string\n                        required:\n                          - id\n                          - name\n                          - description\n                          - country\n                          - city\n                          - latitude\n                          - longitude\n                          - network_zone\n                        type: object\n                      id:\n                        description: ID of the Resource\n                        example: 42\n                        type: integer\n                      ip:\n                        description: IP address\n                        example: 131.232.99.1\n                        type: string\n                      labels:\n                        additionalProperties:\n                          type: string\n                        description: User-defined labels (key-value pairs)\n                        type: object\n                      name:\n                        description: Name of the Resource. Must be unique per Project.\n                        example: my-resource\n                        type: string\n                      protection:\n                        description: Protection configuration for the Resource\n                        properties:\n                          delete:\n                            description: If true, prevents the Resource from being deleted\n                            example: false\n                            type: boolean\n                        required:\n                          - delete\n                        type: object\n                      server:\n                        description: ID of the Server the Floating IP is assigned to, null if it is not assigned at all\n                        example: 42\n                        nullable: true\n                        type: integer\n                      type:\n                        description: Type of the Floating IP\n                        enum:\n                          - ipv4\n                          - ipv6\n                        type: string\n                    required:\n                      - id\n                      - name\n                      - description\n                      - ip\n                      - type\n                      - server\n                      - dns_ptr\n                      - home_location\n                      - blocked\n                      - protection\n                      - labels\n                      - created\n                    type: object\n                required:\n                  - floating_ip\n                type: object\n          description: The `floating_ip` key in the reply contains the modified Floating IP object with the new description\n      summary: Update a Floating IP\n      tags:\n        - Floating IPs\n  \"/floating_ips/{id}/actions\":\n    get:\n      description: Returns all Action objects for a Floating IP. You can sort the results by using the `sort` URI parameter, and filter them with the `status` parameter.\n      parameters:\n        - description: ID of the Floating IP\n          in: path\n          name: id\n          required: true\n          schema:\n            type: integer\n        - description: Can be used multiple times.\n          in: query\n          name: sort\n          required: false\n          schema:\n            enum:\n              - id\n              - id:asc\n              - id:desc\n              - command\n              - command:asc\n              - command:desc\n              - status\n              - status:asc\n              - status:desc\n              - progress\n              - progress:asc\n              - progress:desc\n              - started\n              - started:asc\n              - started:desc\n              - finished\n              - finished:asc\n              - finished:desc\n            title: ParameterSort\n            type: string\n        - description: Can be used multiple times, the response will contain only Actions with specified statuses\n          in: query\n          name: status\n          required: false\n          schema:\n            enum:\n              - running\n              - success\n              - error\n            title: ParameterStatus\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              example:\n                actions:\n                  - command: assign_floating_ip\n                    error:\n                      code: action_failed\n                      message: Action failed\n                    finished: 2016-01-30T23:56:00+00:00\n                    id: 13\n                    progress: 100\n                    resources:\n                      - id: 4711\n                        type: server\n                      - id: 4712\n                        type: floating_ip\n                    started: 2016-01-30T23:55:00+00:00\n                    status: success\n              schema:\n                properties:\n                  actions:\n                    items:\n                      properties:\n                        command:\n                          description: Command executed in the Action\n                          example: start_server\n                          type: string\n                        error:\n                          description: Error message for the Action if error occurred, otherwise null\n                          nullable: true\n                          properties:\n                            code:\n                              description: Fixed machine readable code\n                              example: action_failed\n                              type: string\n                            message:\n                              description: Humanized error message\n                              example: Action failed\n                              type: string\n                          required:\n                            - code\n                            - message\n                          type: object\n                        finished:\n                          description: Point in time when the Action was finished (in ISO-8601 format). Only set if the Action is finished otherwise null.\n                          example: 2016-01-30T23:55:00+00:00\n                          nullable: true\n                          type: string\n                        id:\n                          description: ID of the Resource\n                          example: 42\n                          type: integer\n                        progress:\n                          description: Progress of Action in percent\n                          example: 100\n                          type: number\n                        resources:\n                          description: Resources the Action relates to\n                          items:\n                            properties:\n                              id:\n                                description: ID of the Resource\n                                example: 42\n                                type: integer\n                              type:\n                                description: Type of resource referenced\n                                example: server\n                                type: string\n                            required:\n                              - id\n                              - type\n                            type: object\n                          type: array\n                        started:\n                          description: Point in time when the Action was started (in ISO-8601 format)\n                          example: 2016-01-30T23:55:00+00:00\n                          type: string\n                        status:\n                          description: Status of the Action\n                          enum:\n                            - success\n                            - running\n                            - error\n                          type: string\n                      required:\n                        - id\n                        - command\n                        - status\n                        - progress\n                        - started\n                        - finished\n                        - resources\n                        - error\n                      title: Action\n                      type: object\n                    type: array\n                required:\n                  - actions\n                type: object\n          description: The `actions` key contains a list of Actions\n      summary: Get all Actions for a Floating IP\n      tags:\n        - Floating IP Actions\n  \"/floating_ips/{id}/actions/assign\":\n    post:\n      description: Assigns a Floating IP to a Server.\n      parameters:\n        - description: ID of the Floating IP\n          in: path\n          name: id\n          required: true\n          schema:\n            type: integer\n      requestBody:\n        content:\n          application/json:\n            schema:\n              properties:\n                server:\n                  description: ID of the Server the Floating IP shall be assigned to\n                  example: 42\n                  type: integer\n              required:\n                - server\n              title: AssignFloatingIPRequest\n              type: object\n      responses:\n        \"201\":\n          content:\n            application/json:\n              example:\n                action:\n                  command: assign_floating_ip\n                  error:\n                    code: action_failed\n                    message: Action failed\n                  finished: 2016-01-30T23:56:00+00:00\n                  id: 13\n                  progress: 100\n                  resources:\n                    - id: 42\n                      type: server\n                    - id: 4711\n                      type: floating_ip\n                  started: 2016-01-30T23:55:00+00:00\n                  status: success\n              schema:\n                properties:\n                  action:\n                    properties:\n                      command:\n                        description: Command executed in the Action\n                        example: start_server\n                        type: string\n                      error:\n                        description: Error message for the Action if error occurred, otherwise null\n                        nullable: true\n                        properties:\n                          code:\n                            description: Fixed machine readable code\n                            example: action_failed\n                            type: string\n                          message:\n                            description: Humanized error message\n                            example: Action failed\n                            type: string\n                        required:\n                          - code\n                          - message\n                        type: object\n                      finished:\n                        description: Point in time when the Action was finished (in ISO-8601 format). Only set if the Action is finished otherwise null.\n                        example: 2016-01-30T23:55:00+00:00\n                        nullable: true\n                        type: string\n                      id:\n                        description: ID of the Resource\n                        example: 42\n                        type: integer\n                      progress:\n                        description: Progress of Action in percent\n                        example: 100\n                        type: number\n                      resources:\n                        description: Resources the Action relates to\n                        items:\n                          properties:\n                            id:\n                              description: ID of the Resource\n                              example: 42\n                              type: integer\n                            type:\n                              description: Type of resource referenced\n                              example: server\n                              type: string\n                          required:\n                            - id\n                            - type\n                          type: object\n                        type: array\n                      started:\n                        description: Point in time when the Action was started (in ISO-8601 format)\n                        example: 2016-01-30T23:55:00+00:00\n                        type: string\n                      status:\n                        description: Status of the Action\n                        enum:\n                          - success\n                          - running\n                          - error\n                        type: string\n                    required:\n                      - id\n                      - command\n                      - status\n                      - progress\n                      - started\n                      - finished\n                      - resources\n                      - error\n                    title: Action\n                    type: object\n                required:\n                  - action\n                title: ActionResponse\n                type: object\n          description: The `action` key contains the `assign` Action\n      summary: Assign a Floating IP to a Server\n      tags:\n        - Floating IP Actions\n  \"/floating_ips/{id}/actions/change_dns_ptr\":\n    post:\n      description: Changes the hostname that will appear when getting the hostname belonging to this Floating IP.\n      parameters:\n        - description: ID of the Floating IP\n          in: path\n          name: id\n          required: true\n          schema:\n            type: integer\n      requestBody:\n        content:\n          application/json:\n            schema:\n              properties:\n                dns_ptr:\n                  description: Hostname to set as a reverse DNS PTR entry, will reset to original default value if `null`\n                  example: server02.example.com\n                  nullable: true\n                  type: string\n                ip:\n                  description: IP address for which to set the reverse DNS entry\n                  example: 1.2.3.4\n                  type: string\n              required:\n                - ip\n                - dns_ptr\n              title: ChangeDNSPTRRequest\n              type: object\n        description: |\n          Select the IP address for which to change the DNS entry by passing `ip`. For a Floating IP of type `ipv4` this must exactly match the IP address of the Floating IP. For a Floating IP of type `ipv6` this must be a single IP within the IPv6 /64 range that belongs to this Floating IP.\n\n          The target hostname is set by passing `dns_ptr`.\n      responses:\n        \"201\":\n          content:\n            application/json:\n              example:\n                action:\n                  command: change_dns_ptr\n                  error:\n                    code: action_failed\n                    message: Action failed\n                  finished: 2016-01-30T23:56:00+00:00\n                  id: 13\n                  progress: 100\n                  resources:\n                    - id: 4711\n                      type: floating_ip\n                  started: 2016-01-30T23:55:00+00:00\n                  status: success\n              schema:\n                properties:\n                  action:\n                    properties:\n                      command:\n                        description: Command executed in the Action\n                        example: start_server\n                        type: string\n                      error:\n                        description: Error message for the Action if error occurred, otherwise null\n                        nullable: true\n                        properties:\n                          code:\n                            description: Fixed machine readable code\n                            example: action_failed\n                            type: string\n                          message:\n                            description: Humanized error message\n                            example: Action failed\n                            type: string\n                        required:\n                          - code\n                          - message\n                        type: object\n                      finished:\n                        description: Point in time when the Action was finished (in ISO-8601 format). Only set if the Action is finished otherwise null.\n                        example: 2016-01-30T23:55:00+00:00\n                        nullable: true\n                        type: string\n                      id:\n                        description: ID of the Resource\n                        example: 42\n                        type: integer\n                      progress:\n                        description: Progress of Action in percent\n                        example: 100\n                        type: number\n                      resources:\n                        description: Resources the Action relates to\n                        items:\n                          properties:\n                            id:\n                              description: ID of the Resource\n                              example: 42\n                              type: integer\n                            type:\n                              description: Type of resource referenced\n                              example: server\n                              type: string\n                          required:\n                            - id\n                            - type\n                          type: object\n                        type: array\n                      started:\n                        description: Point in time when the Action was started (in ISO-8601 format)\n                        example: 2016-01-30T23:55:00+00:00\n                        type: string\n                      status:\n                        description: Status of the Action\n                        enum:\n                          - success\n                          - running\n                          - error\n                        type: string\n                    required:\n                      - id\n                      - command\n                      - status\n                      - progress\n                      - started\n                      - finished\n                      - resources\n                      - error\n                    title: Action\n                    type: object\n                required:\n                  - action\n                title: ActionResponse\n                type: object\n          description: The `action` key contains the `change_dns_ptr` Action\n      summary: Change reverse DNS entry for a Floating IP\n      tags:\n        - Floating IP Actions\n  \"/floating_ips/{id}/actions/change_protection\":\n    post:\n      description: Changes the protection configuration of the Floating IP.\n      parameters:\n        - description: ID of the Floating IP\n          in: path\n          name: id\n          required: true\n          schema:\n            type: integer\n      requestBody:\n        content:\n          application/json:\n            schema:\n              properties:\n                delete:\n                  description: If true, prevents the Floating IP from being deleted\n                  example: true\n                  type: boolean\n              title: ChangeProtectionRequest\n              type: object\n      responses:\n        \"201\":\n          content:\n            application/json:\n              example:\n                action:\n                  command: change_protection\n                  error:\n                    code: action_failed\n                    message: Action failed\n                  finished: 2016-01-30T23:56:00+00:00\n                  id: 13\n                  progress: 100\n                  resources:\n                    - id: 4711\n                      type: floating_ip\n                  started: 2016-01-30T23:55:00+00:00\n                  status: success\n              schema:\n                properties:\n                  action:\n                    properties:\n                      command:\n                        description: Command executed in the Action\n                        example: start_server\n                        type: string\n                      error:\n                        description: Error message for the Action if error occurred, otherwise null\n                        nullable: true\n                        properties:\n                          code:\n                            description: Fixed machine readable code\n                            example: action_failed\n                            type: string\n                          message:\n                            description: Humanized error message\n                            example: Action failed\n                            type: string\n                        required:\n                          - code\n                          - message\n                        type: object\n                      finished:\n                        description: Point in time when the Action was finished (in ISO-8601 format). Only set if the Action is finished otherwise null.\n                        example: 2016-01-30T23:55:00+00:00\n                        nullable: true\n                        type: string\n                      id:\n                        description: ID of the Resource\n                        example: 42\n                        type: integer\n                      progress:\n                        description: Progress of Action in percent\n                        example: 100\n                        type: number\n                      resources:\n                        description: Resources the Action relates to\n                        items:\n                          properties:\n                            id:\n                              description: ID of the Resource\n                              example: 42\n                              type: integer\n                            type:\n                              description: Type of resource referenced\n                              example: server\n                              type: string\n                          required:\n                            - id\n                            - type\n                          type: object\n                        type: array\n                      started:\n                        description: Point in time when the Action was started (in ISO-8601 format)\n                        example: 2016-01-30T23:55:00+00:00\n                        type: string\n                      status:\n                        description: Status of the Action\n                        enum:\n                          - success\n                          - running\n                          - error\n                        type: string\n                    required:\n                      - id\n                      - command\n                      - status\n                      - progress\n                      - started\n                      - finished\n                      - resources\n                      - error\n                    title: Action\n                    type: object\n                required:\n                  - action\n                title: ActionResponse\n                type: object\n          description: The `action` key contains the `change_protection` Action\n      summary: Change Floating IP Protection\n      tags:\n        - Floating IP Actions\n  \"/floating_ips/{id}/actions/unassign\":\n    post:\n      description: Unassigns a Floating IP, resulting in it being unreachable. You may assign it to a Server again at a later time.\n      parameters:\n        - description: ID of the Floating IP\n          in: path\n          name: id\n          required: true\n          schema:\n            type: integer\n      responses:\n        \"201\":\n          content:\n            application/json:\n              example:\n                action:\n                  command: unassign_floating_ip\n                  error:\n                    code: action_failed\n                    message: Action failed\n                  finished: 2016-01-30T23:56:00+00:00\n                  id: 13\n                  progress: 100\n                  resources:\n                    - id: 42\n                      type: server\n                    - id: 4711\n                      type: floating_ip\n                  started: 2016-01-30T23:55:00+00:00\n                  status: success\n              schema:\n                properties:\n                  action:\n                    properties:\n                      command:\n                        description: Command executed in the Action\n                        example: start_server\n                        type: string\n                      error:\n                        description: Error message for the Action if error occurred, otherwise null\n                        nullable: true\n                        properties:\n                          code:\n                            description: Fixed machine readable code\n                            example: action_failed\n                            type: string\n                          message:\n                            description: Humanized error message\n                            example: Action failed\n                            type: string\n                        required:\n                          - code\n                          - message\n                        type: object\n                      finished:\n                        description: Point in time when the Action was finished (in ISO-8601 format). Only set if the Action is finished otherwise null.\n                        example: 2016-01-30T23:55:00+00:00\n                        nullable: true\n                        type: string\n                      id:\n                        description: ID of the Resource\n                        example: 42\n                        type: integer\n                      progress:\n                        description: Progress of Action in percent\n                        example: 100\n                        type: number\n                      resources:\n                        description: Resources the Action relates to\n                        items:\n                          properties:\n                            id:\n                              description: ID of the Resource\n                              example: 42\n                              type: integer\n                            type:\n                              description: Type of resource referenced\n                              example: server\n                              type: string\n                          required:\n                            - id\n                            - type\n                          type: object\n                        type: array\n                      started:\n                        description: Point in time when the Action was started (in ISO-8601 format)\n                        example: 2016-01-30T23:55:00+00:00\n                        type: string\n                      status:\n                        description: Status of the Action\n                        enum:\n                          - success\n                          - running\n                          - error\n                        type: string\n                    required:\n                      - id\n                      - command\n                      - status\n                      - progress\n                      - started\n                      - finished\n                      - resources\n                      - error\n                    title: Action\n                    type: object\n                required:\n                  - action\n                title: ActionResponse\n                type: object\n          description: The `action` key contains the `unassign` Action\n      summary: Unassign a Floating IP\n      tags:\n        - Floating IP Actions\n  \"/floating_ips/{id}/actions/{action_id}\":\n    get:\n      description: Returns a specific Action object for a Floating IP.\n      parameters:\n        - description: ID of the Floating IP\n          in: path\n          name: id\n          required: true\n          schema:\n            type: integer\n        - description: ID of the Action\n          in: path\n          name: action_id\n          required: true\n          schema:\n            type: integer\n      responses:\n        \"200\":\n          content:\n            application/json:\n              example:\n                action:\n                  command: assign_floating_ip\n                  error:\n                    code: action_failed\n                    message: Action failed\n                  finished: 2016-01-30T23:56:00+00:00\n                  id: 13\n                  progress: 100\n                  resources:\n                    - id: 42\n                      type: server\n                    - id: 4711\n                      type: floating_ip\n                  started: 2016-01-30T23:55:00+00:00\n                  status: success\n              schema:\n                properties:\n                  action:\n                    properties:\n                      command:\n                        description: Command executed in the Action\n                        example: start_server\n                        type: string\n                      error:\n                        description: Error message for the Action if error occurred, otherwise null\n                        nullable: true\n                        properties:\n                          code:\n                            description: Fixed machine readable code\n                            example: action_failed\n                            type: string\n                          message:\n                            description: Humanized error message\n                            example: Action failed\n                            type: string\n                        required:\n                          - code\n                          - message\n                        type: object\n                      finished:\n                        description: Point in time when the Action was finished (in ISO-8601 format). Only set if the Action is finished otherwise null.\n                        example: 2016-01-30T23:55:00+00:00\n                        nullable: true\n                        type: string\n                      id:\n                        description: ID of the Resource\n                        example: 42\n                        type: integer\n                      progress:\n                        description: Progress of Action in percent\n                        example: 100\n                        type: number\n                      resources:\n                        description: Resources the Action relates to\n                        items:\n                          properties:\n                            id:\n                              description: ID of the Resource\n                              example: 42\n                              type: integer\n                            type:\n                              description: Type of resource referenced\n                              example: server\n                              type: string\n                          required:\n                            - id\n                            - type\n                          type: object\n                        type: array\n                      started:\n                        description: Point in time when the Action was started (in ISO-8601 format)\n                        example: 2016-01-30T23:55:00+00:00\n                        type: string\n                      status:\n                        description: Status of the Action\n                        enum:\n                          - success\n                          - running\n                          - error\n                        type: string\n                    required:\n                      - id\n                      - command\n                      - status\n                      - progress\n                      - started\n                      - finished\n                      - resources\n                      - error\n                    title: Action\n                    type: object\n                required:\n                  - action\n                title: ActionResponse\n                type: object\n          description: The `action` key in the reply has this structure\n      summary: Get an Action for a Floating IP\n      tags:\n        - Floating IP Actions\n  /images:\n    get:\n      description: Returns all Image objects. You can select specific Image types only and sort the results by using URI parameters.\n      parameters:\n        - description: Can be used multiple times.\n          in: query\n          name: sort\n          required: false\n          schema:\n            enum:\n              - id\n              - id:asc\n              - id:desc\n              - name\n              - name:asc\n              - name:desc\n              - created\n              - created:asc\n              - created:desc\n            type: string\n        - description: Can be used multiple times.\n          in: query\n          name: type\n          required: false\n          schema:\n            enum:\n              - system\n              - snapshot\n              - backup\n              - app\n            type: string\n        - description: Can be used multiple times. The response will only contain Images matching the status.\n          in: query\n          name: status\n          required: false\n          schema:\n            enum:\n              - available\n              - creating\n            type: string\n        - description: Can be used multiple times. Server ID linked to the Image. Only available for Images of type `backup`\n          in: query\n          name: bound_to\n          required: false\n          schema:\n            type: string\n        - description: Can be used multiple times.\n          in: query\n          name: include_deprecated\n          required: false\n          schema:\n            type: boolean\n        - description: Can be used to filter resources by their name. The response will only contain the resources matching the specified name\n          in: query\n          name: name\n          required: false\n          schema:\n            type: string\n        - description: Can be used to filter resources by labels. The response will only contain resources matching the label selector.\n          in: query\n          name: label_selector\n          required: false\n          schema:\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                properties:\n                  images:\n                    items:\n                      properties:\n                        bound_to:\n                          description: ID of Server the Image is bound to. Only set for Images of type `backup`.\n                          example: null\n                          nullable: true\n                          type: integer\n                        build_id:\n                          description: Build ID of the Image\n                          example: c313fe40383af26094a5a92026054320ab55abc7\n                          nullable: true\n                          type: string\n                        created:\n                          description: Point in time when the Resource was created (in ISO-8601 format)\n                          example: 2016-01-30T23:55:00+00:00\n                          type: string\n                        created_from:\n                          description: Information about the Server the Image was created from\n                          nullable: true\n                          properties:\n                            id:\n                              description: ID of the Server the Image was created from\n                              example: 1\n                              type: integer\n                            name:\n                              description: Server name at the time the Image was created\n                              example: Server\n                              type: string\n                          required:\n                            - id\n                            - name\n                          type: object\n                        deleted:\n                          description: Point in time where the Image was deleted (in ISO-8601 format)\n                          example: null\n                          nullable: true\n                          type: string\n                        deprecated:\n                          description: Point in time when the Image is considered to be deprecated (in ISO-8601 format)\n                          example: 2018-02-28T00:00:00+00:00\n                          nullable: true\n                          type: string\n                        description:\n                          description: Description of the Image\n                          example: Ubuntu 20.04 Standard 64 bit\n                          type: string\n                        disk_size:\n                          description: Size of the disk contained in the Image in GB\n                          example: 10\n                          type: number\n                        id:\n                          description: ID of the Resource\n                          example: 42\n                          type: integer\n                        image_size:\n                          description: Size of the Image file in our storage in GB. For snapshot Images this is the value relevant for calculating costs for the Image.\n                          example: 2.3\n                          nullable: true\n                          type: number\n                        labels:\n                          additionalProperties:\n                            type: string\n                          description: User-defined labels (key-value pairs)\n                          type: object\n                        name:\n                          description: Unique identifier of the Image. This value is only set for system Images.\n                          example: ubuntu-20.04\n                          nullable: true\n                          type: string\n                        os_flavor:\n                          description: Flavor of operating system contained in the Image\n                          enum:\n                            - ubuntu\n                            - centos\n                            - debian\n                            - fedora\n                            - unknown\n                          example: ubuntu\n                          type: string\n                        os_version:\n                          description: Operating system version\n                          example: \"20.04\"\n                          nullable: true\n                          type: string\n                        protection:\n                          description: Protection configuration for the Resource\n                          properties:\n                            delete:\n                              description: If true, prevents the Resource from being deleted\n                              example: false\n                              type: boolean\n                          required:\n                            - delete\n                          type: object\n                        rapid_deploy:\n                          description: Indicates that rapid deploy of the Image is available\n                          example: false\n                          type: boolean\n                        status:\n                          description: Whether the Image can be used or if it's still being created or unavailable\n                          enum:\n                            - available\n                            - creating\n                            - unavailable\n                          type: string\n                        type:\n                          description: Type of the Image\n                          enum:\n                            - system\n                            - app\n                            - snapshot\n                            - backup\n                            - temporary\n                          example: snapshot\n                          type: string\n                      required:\n                        - id\n                        - type\n                        - status\n                        - name\n                        - description\n                        - image_size\n                        - disk_size\n                        - created\n                        - created_from\n                        - bound_to\n                        - os_flavor\n                        - os_version\n                        - protection\n                        - deprecated\n                        - deleted\n                        - labels\n                      type: object\n                    type: array\n                  meta:\n                    properties:\n                      pagination:\n                        properties:\n                          last_page:\n                            description: ID of the last page available. Can be null if the current page is the last one.\n                            example: 4\n                            nullable: true\n                            type: number\n                          next_page:\n                            description: ID of the next page. Can be null if the current page is the last one.\n                            example: 4\n                            nullable: true\n                            type: number\n                          page:\n                            description: Current page number\n                            example: 3\n                            type: number\n                          per_page:\n                            description: Maximum number of items shown per page in the response\n                            example: 25\n                            type: number\n                          previous_page:\n                            description: ID of the previous page. Can be null if the current page is the first one.\n                            example: 2\n                            nullable: true\n                            type: number\n                          total_entries:\n                            description: The total number of entries that exist in the database for this query. Nullable if unknown.\n                            example: 100\n                            nullable: true\n                            type: number\n                        required:\n                          - page\n                          - per_page\n                          - previous_page\n                          - next_page\n                          - last_page\n                          - total_entries\n                        type: object\n                    required:\n                      - pagination\n                    type: object\n                required:\n                  - images\n                type: object\n          description: The `images` key in the reply contains an array of Image objects with this structure\n      summary: Get all Images\n      tags:\n        - Images\n  \"/images/{id}\":\n    delete:\n      description: Deletes an Image. Only Images of type `snapshot` and `backup` can be deleted.\n      parameters:\n        - description: ID of the Image\n          in: path\n          name: id\n          required: true\n          schema:\n            type: integer\n      responses:\n        \"204\":\n          description: Image deleted\n      summary: Delete an Image\n      tags:\n        - Images\n    get:\n      description: Returns a specific Image object.\n      parameters:\n        - description: ID of the Image\n          in: path\n          name: id\n          required: true\n          schema:\n            type: integer\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                properties:\n                  image:\n                    properties:\n                      bound_to:\n                        description: ID of Server the Image is bound to. Only set for Images of type `backup`.\n                        example: null\n                        nullable: true\n                        type: integer\n                      build_id:\n                        description: Build ID of the Image\n                        example: c313fe40383af26094a5a92026054320ab55abc7\n                        nullable: true\n                        type: string\n                      created:\n                        description: Point in time when the Resource was created (in ISO-8601 format)\n                        example: 2016-01-30T23:55:00+00:00\n                        type: string\n                      created_from:\n                        description: Information about the Server the Image was created from\n                        nullable: true\n                        properties:\n                          id:\n                            description: ID of the Server the Image was created from\n                            example: 1\n                            type: integer\n                          name:\n                            description: Server name at the time the Image was created\n                            example: Server\n                            type: string\n                        required:\n                          - id\n                          - name\n                        type: object\n                      deleted:\n                        description: Point in time where the Image was deleted (in ISO-8601 format)\n                        example: null\n                        nullable: true\n                        type: string\n                      deprecated:\n                        description: Point in time when the Image is considered to be deprecated (in ISO-8601 format)\n                        example: 2018-02-28T00:00:00+00:00\n                        nullable: true\n                        type: string\n                      description:\n                        description: Description of the Image\n                        example: Ubuntu 20.04 Standard 64 bit\n                        type: string\n                      disk_size:\n                        description: Size of the disk contained in the Image in GB\n                        example: 10\n                        type: number\n                      id:\n                        description: ID of the Resource\n                        example: 42\n                        type: integer\n                      image_size:\n                        description: Size of the Image file in our storage in GB. For snapshot Images this is the value relevant for calculating costs for the Image.\n                        example: 2.3\n                        nullable: true\n                        type: number\n                      labels:\n                        additionalProperties:\n                          type: string\n                        description: User-defined labels (key-value pairs)\n                        type: object\n                      name:\n                        description: Unique identifier of the Image. This value is only set for system Images.\n                        example: ubuntu-20.04\n                        nullable: true\n                        type: string\n                      os_flavor:\n                        description: Flavor of operating system contained in the Image\n                        enum:\n                          - ubuntu\n                          - centos\n                          - debian\n                          - fedora\n                          - unknown\n                        example: ubuntu\n                        type: string\n                      os_version:\n                        description: Operating system version\n                        example: \"20.04\"\n                        nullable: true\n                        type: string\n                      protection:\n                        description: Protection configuration for the Resource\n                        properties:\n                          delete:\n                            description: If true, prevents the Resource from being deleted\n                            example: false\n                            type: boolean\n                        required:\n                          - delete\n                        type: object\n                      rapid_deploy:\n                        description: Indicates that rapid deploy of the Image is available\n                        example: false\n                        type: boolean\n                      status:\n                        description: Whether the Image can be used or if it's still being created or unavailable\n                        enum:\n                          - available\n                          - creating\n                          - unavailable\n                        type: string\n                      type:\n                        description: Type of the Image\n                        enum:\n                          - system\n                          - app\n                          - snapshot\n                          - backup\n                          - temporary\n                        example: snapshot\n                        type: string\n                    required:\n                      - id\n                      - type\n                      - status\n                      - name\n                      - description\n                      - image_size\n                      - disk_size\n                      - created\n                      - created_from\n                      - bound_to\n                      - os_flavor\n                      - os_version\n                      - protection\n                      - deprecated\n                      - deleted\n                      - labels\n                    type: object\n                type: object\n          description: The `image` key in the reply contains an Image object with this structure\n      summary: Get an Image\n      tags:\n        - Images\n    put:\n      description: |\n        Updates the Image. You may change the description, convert a Backup Image to a Snapshot Image or change the Image labels. Only Images of type `snapshot` and `backup` can be updated.\n\n        Note that when updating labels, the current set of labels will be replaced with the labels provided in the request body. So, for example, if you want to add a new label, you have to provide all existing labels plus the new label in the request body.\n      parameters:\n        - description: ID of the Image\n          in: path\n          name: id\n          required: true\n          schema:\n            type: integer\n      requestBody:\n        content:\n          application/json:\n            schema:\n              properties:\n                description:\n                  description: New description of Image\n                  example: My new Image description\n                  type: string\n                labels:\n                  description: User-defined labels (key-value pairs)\n                  example:\n                    labelkey: value\n                  type: object\n                type:\n                  description: Destination Image type to convert to\n                  enum:\n                    - snapshot\n                  type: string\n              title: UpdateImageRequest\n              type: object\n      responses:\n        \"200\":\n          content:\n            application/json:\n              example:\n                image:\n                  bound_to: null\n                  build_id: c313fe40383af26094a5a92026054320ab55abc7\n                  created: 2016-01-30T23:50:00+00:00\n                  created_from:\n                    id: 1\n                    name: Server\n                  deleted: null\n                  deprecated: 2018-02-28T00:00:00+00:00\n                  description: My new Image description\n                  disk_size: 10\n                  id: 4711\n                  image_size: 2.3\n                  labels:\n                    labelkey: value\n                  name: null\n                  os_flavor: ubuntu\n                  os_version: \"20.04\"\n                  protection:\n                    delete: false\n                  rapid_deploy: false\n                  status: available\n                  type: snapshot\n              schema:\n                properties:\n                  image:\n                    properties:\n                      bound_to:\n                        description: ID of Server the Image is bound to. Only set for Images of type `backup`.\n                        example: null\n                        nullable: true\n                        type: integer\n                      build_id:\n                        description: Build ID of the Image\n                        example: c313fe40383af26094a5a92026054320ab55abc7\n                        nullable: true\n                        type: string\n                      created:\n                        description: Point in time when the Resource was created (in ISO-8601 format)\n                        example: 2016-01-30T23:55:00+00:00\n                        type: string\n                      created_from:\n                        description: Information about the Server the Image was created from\n                        nullable: true\n                        properties:\n                          id:\n                            description: ID of the Server the Image was created from\n                            example: 1\n                            type: integer\n                          name:\n                            description: Server name at the time the Image was created\n                            example: Server\n                            type: string\n                        required:\n                          - id\n                          - name\n                        type: object\n                      deleted:\n                        description: Point in time where the Image was deleted (in ISO-8601 format)\n                        example: null\n                        nullable: true\n                        type: string\n                      deprecated:\n                        description: Point in time when the Image is considered to be deprecated (in ISO-8601 format)\n                        example: 2018-02-28T00:00:00+00:00\n                        nullable: true\n                        type: string\n                      description:\n                        description: Description of the Image\n                        example: Ubuntu 20.04 Standard 64 bit\n                        type: string\n                      disk_size:\n                        description: Size of the disk contained in the Image in GB\n                        example: 10\n                        type: number\n                      id:\n                        description: ID of the Resource\n                        example: 42\n                        type: integer\n                      image_size:\n                        description: Size of the Image file in our storage in GB. For snapshot Images this is the value relevant for calculating costs for the Image.\n                        example: 2.3\n                        nullable: true\n                        type: number\n                      labels:\n                        additionalProperties:\n                          type: string\n                        description: User-defined labels (key-value pairs)\n                        type: object\n                      name:\n                        description: Unique identifier of the Image. This value is only set for system Images.\n                        example: ubuntu-20.04\n                        nullable: true\n                        type: string\n                      os_flavor:\n                        description: Flavor of operating system contained in the Image\n                        enum:\n                          - ubuntu\n                          - centos\n                          - debian\n                          - fedora\n                          - unknown\n                        example: ubuntu\n                        type: string\n                      os_version:\n                        description: Operating system version\n                        example: \"20.04\"\n                        nullable: true\n                        type: string\n                      protection:\n                        description: Protection configuration for the Resource\n                        properties:\n                          delete:\n                            description: If true, prevents the Resource from being deleted\n                            example: false\n                            type: boolean\n                        required:\n                          - delete\n                        type: object\n                      rapid_deploy:\n                        description: Indicates that rapid deploy of the Image is available\n                        example: false\n                        type: boolean\n                      status:\n                        description: Whether the Image can be used or if it's still being created or unavailable\n                        enum:\n                          - available\n                          - creating\n                          - unavailable\n                        type: string\n                      type:\n                        description: Type of the Image\n                        enum:\n                          - system\n                          - app\n                          - snapshot\n                          - backup\n                          - temporary\n                        example: snapshot\n                        type: string\n                    required:\n                      - id\n                      - type\n                      - status\n                      - name\n                      - description\n                      - image_size\n                      - disk_size\n                      - created\n                      - created_from\n                      - bound_to\n                      - os_flavor\n                      - os_version\n                      - protection\n                      - deprecated\n                      - deleted\n                      - labels\n                    type: object\n                type: object\n          description: The image key in the reply contains the modified Image object\n      summary: Update an Image\n      tags:\n        - Images\n  \"/images/{id}/actions\":\n    get:\n      description: Returns all Action objects for an Image. You can sort the results by using the `sort` URI parameter, and filter them with the `status` parameter.\n      parameters:\n        - description: ID of the Image\n          in: path\n          name: id\n          required: true\n          schema:\n            type: integer\n        - description: Can be used multiple times.\n          in: query\n          name: sort\n          required: false\n          schema:\n            enum:\n              - id\n              - id:asc\n              - id:desc\n              - command\n              - command:asc\n              - command:desc\n              - status\n              - status:asc\n              - status:desc\n              - progress\n              - progress:asc\n              - progress:desc\n              - started\n              - started:asc\n              - started:desc\n              - finished\n              - finished:asc\n              - finished:desc\n            title: ParameterSort\n            type: string\n        - description: Can be used multiple times, the response will contain only Actions with specified statuses\n          in: query\n          name: status\n          required: false\n          schema:\n            enum:\n              - running\n              - success\n              - error\n            title: ParameterStatus\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              example:\n                actions:\n                  - command: change_protection\n                    error:\n                      code: action_failed\n                      message: Action failed\n                    finished: 2016-01-30T23:56:00+00:00\n                    id: 13\n                    progress: 100\n                    resources:\n                      - id: 4711\n                        type: image\n                    started: 2016-01-30T23:55:00+00:00\n                    status: success\n              schema:\n                properties:\n                  actions:\n                    items:\n                      properties:\n                        command:\n                          description: Command executed in the Action\n                          example: start_server\n                          type: string\n                        error:\n                          description: Error message for the Action if error occurred, otherwise null\n                          nullable: true\n                          properties:\n                            code:\n                              description: Fixed machine readable code\n                              example: action_failed\n                              type: string\n                            message:\n                              description: Humanized error message\n                              example: Action failed\n                              type: string\n                          required:\n                            - code\n                            - message\n                          type: object\n                        finished:\n                          description: Point in time when the Action was finished (in ISO-8601 format). Only set if the Action is finished otherwise null.\n                          example: 2016-01-30T23:55:00+00:00\n                          nullable: true\n                          type: string\n                        id:\n                          description: ID of the Resource\n                          example: 42\n                          type: integer\n                        progress:\n                          description: Progress of Action in percent\n                          example: 100\n                          type: number\n                        resources:\n                          description: Resources the Action relates to\n                          items:\n                            properties:\n                              id:\n                                description: ID of the Resource\n                                example: 42\n                                type: integer\n                              type:\n                                description: Type of resource referenced\n                                example: server\n                                type: string\n                            required:\n                              - id\n                              - type\n                            type: object\n                          type: array\n                        started:\n                          description: Point in time when the Action was started (in ISO-8601 format)\n                          example: 2016-01-30T23:55:00+00:00\n                          type: string\n                        status:\n                          description: Status of the Action\n                          enum:\n                            - success\n                            - running\n                            - error\n                          type: string\n                      required:\n                        - id\n                        - command\n                        - status\n                        - progress\n                        - started\n                        - finished\n                        - resources\n                        - error\n                      title: Action\n                      type: object\n                    type: array\n                  meta:\n                    properties:\n                      pagination:\n                        properties:\n                          last_page:\n                            description: ID of the last page available. Can be null if the current page is the last one.\n                            example: 4\n                            nullable: true\n                            type: number\n                          next_page:\n                            description: ID of the next page. Can be null if the current page is the last one.\n                            example: 4\n                            nullable: true\n                            type: number\n                          page:\n                            description: Current page number\n                            example: 3\n                            type: number\n                          per_page:\n                            description: Maximum number of items shown per page in the response\n                            example: 25\n                            type: number\n                          previous_page:\n                            description: ID of the previous page. Can be null if the current page is the first one.\n                            example: 2\n                            nullable: true\n                            type: number\n                          total_entries:\n                            description: The total number of entries that exist in the database for this query. Nullable if unknown.\n                            example: 100\n                            nullable: true\n                            type: number\n                        required:\n                          - page\n                          - per_page\n                          - previous_page\n                          - next_page\n                          - last_page\n                          - total_entries\n                        type: object\n                    required:\n                      - pagination\n                    type: object\n                required:\n                  - actions\n                title: ActionsResponse\n                type: object\n          description: The `actions` key contains a list of Actions\n      summary: Get all Actions for an Image\n      tags:\n        - Image Actions\n  \"/images/{id}/actions/change_protection\":\n    post:\n      description: Changes the protection configuration of the Image. Can only be used on snapshots.\n      parameters:\n        - description: ID of the Image\n          in: path\n          name: id\n          required: true\n          schema:\n            type: integer\n      requestBody:\n        content:\n          application/json:\n            schema:\n              properties:\n                delete:\n                  description: If true, prevents the snapshot from being deleted\n                  example: true\n                  type: boolean\n              type: object\n      responses:\n        \"201\":\n          content:\n            application/json:\n              example:\n                action:\n                  command: change_protection\n                  error:\n                    code: action_failed\n                    message: Action failed\n                  finished: 2016-01-30T23:56:00+00:00\n                  id: 13\n                  progress: 100\n                  resources:\n                    - id: 4711\n                      type: image\n                  started: 2016-01-30T23:55:00+00:00\n                  status: success\n              schema:\n                properties:\n                  action:\n                    properties:\n                      command:\n                        description: Command executed in the Action\n                        example: start_server\n                        type: string\n                      error:\n                        description: Error message for the Action if error occurred, otherwise null\n                        nullable: true\n                        properties:\n                          code:\n                            description: Fixed machine readable code\n                            example: action_failed\n                            type: string\n                          message:\n                            description: Humanized error message\n                            example: Action failed\n                            type: string\n                        required:\n                          - code\n                          - message\n                        type: object\n                      finished:\n                        description: Point in time when the Action was finished (in ISO-8601 format). Only set if the Action is finished otherwise null.\n                        example: 2016-01-30T23:55:00+00:00\n                        nullable: true\n                        type: string\n                      id:\n                        description: ID of the Resource\n                        example: 42\n                        type: integer\n                      progress:\n                        description: Progress of Action in percent\n                        example: 100\n                        type: number\n                      resources:\n                        description: Resources the Action relates to\n                        items:\n                          properties:\n                            id:\n                              description: ID of the Resource\n                              example: 42\n                              type: integer\n                            type:\n                              description: Type of resource referenced\n                              example: server\n                              type: string\n                          required:\n                            - id\n                            - type\n                          type: object\n                        type: array\n                      started:\n                        description: Point in time when the Action was started (in ISO-8601 format)\n                        example: 2016-01-30T23:55:00+00:00\n                        type: string\n                      status:\n                        description: Status of the Action\n                        enum:\n                          - success\n                          - running\n                          - error\n                        type: string\n                    required:\n                      - id\n                      - command\n                      - status\n                      - progress\n                      - started\n                      - finished\n                      - resources\n                      - error\n                    title: Action\n                    type: object\n                required:\n                  - action\n                title: ActionResponse\n                type: object\n          description: The `action` key contains the `change_protection` Action\n      summary: Change Image Protection\n      tags:\n        - Image Actions\n  \"/images/{id}/actions/{action_id}\":\n    get:\n      description: Returns a specific Action for an Image.\n      parameters:\n        - description: ID of the Image\n          in: path\n          name: id\n          required: true\n          schema:\n            type: integer\n        - description: ID of the Action\n          in: path\n          name: action_id\n          required: true\n          schema:\n            type: integer\n      responses:\n        \"200\":\n          content:\n            application/json:\n              example:\n                action:\n                  command: change_protection\n                  error:\n                    code: action_failed\n                    message: Action failed\n                  finished: 2016-01-30T23:56:00+00:00\n                  id: 13\n                  progress: 100\n                  resources:\n                    - id: 4711\n                      type: image\n                  started: 2016-01-30T23:55:00+00:00\n                  status: success\n              schema:\n                properties:\n                  action:\n                    properties:\n                      command:\n                        description: Command executed in the Action\n                        example: start_server\n                        type: string\n                      error:\n                        description: Error message for the Action if error occurred, otherwise null\n                        nullable: true\n                        properties:\n                          code:\n                            description: Fixed machine readable code\n                            example: action_failed\n                            type: string\n                          message:\n                            description: Humanized error message\n                            example: Action failed\n                            type: string\n                        required:\n                          - code\n                          - message\n                        type: object\n                      finished:\n                        description: Point in time when the Action was finished (in ISO-8601 format). Only set if the Action is finished otherwise null.\n                        example: 2016-01-30T23:55:00+00:00\n                        nullable: true\n                        type: string\n                      id:\n                        description: ID of the Resource\n                        example: 42\n                        type: integer\n                      progress:\n                        description: Progress of Action in percent\n                        example: 100\n                        type: number\n                      resources:\n                        description: Resources the Action relates to\n                        items:\n                          properties:\n                            id:\n                              description: ID of the Resource\n                              example: 42\n                              type: integer\n                            type:\n                              description: Type of resource referenced\n                              example: server\n                              type: string\n                          required:\n                            - id\n                            - type\n                          type: object\n                        type: array\n                      started:\n                        description: Point in time when the Action was started (in ISO-8601 format)\n                        example: 2016-01-30T23:55:00+00:00\n                        type: string\n                      status:\n                        description: Status of the Action\n                        enum:\n                          - success\n                          - running\n                          - error\n                        type: string\n                    required:\n                      - id\n                      - command\n                      - status\n                      - progress\n                      - started\n                      - finished\n                      - resources\n                      - error\n                    title: Action\n                    type: object\n                required:\n                  - action\n                title: ActionResponse\n                type: object\n          description: The `action` key contains the Image Action\n      summary: Get an Action for an Image\n      tags:\n        - Image Actions\n  /isos:\n    get:\n      description: Returns all available ISO objects.\n      parameters:\n        - description: Can be used to filter ISOs by their name. The response will only contain the ISO matching the specified name.\n          in: query\n          name: name\n          required: false\n          schema:\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                properties:\n                  isos:\n                    items:\n                      properties:\n                        deprecated:\n                          description: ISO 8601 timestamp of deprecation, null if ISO is still available. After the deprecation time it will no longer be possible to attach the ISO to Servers.\n                          example: 2018-02-28T00:00:00+00:00\n                          nullable: true\n                          type: string\n                        description:\n                          description: Description of the ISO\n                          example: FreeBSD 11.0 x64\n                          type: string\n                        id:\n                          description: ID of the Resource\n                          example: 42\n                          type: integer\n                        name:\n                          description: Unique identifier of the ISO. Only set for public ISOs\n                          example: FreeBSD-11.0-RELEASE-amd64-dvd1\n                          nullable: true\n                          type: string\n                        type:\n                          description: Type of the ISO\n                          enum:\n                            - public\n                            - private\n                          type: string\n                      required:\n                        - id\n                        - name\n                        - description\n                        - type\n                        - deprecated\n                      type: object\n                    type: array\n                  meta:\n                    properties:\n                      pagination:\n                        properties:\n                          last_page:\n                            description: ID of the last page available. Can be null if the current page is the last one.\n                            example: 4\n                            nullable: true\n                            type: number\n                          next_page:\n                            description: ID of the next page. Can be null if the current page is the last one.\n                            example: 4\n                            nullable: true\n                            type: number\n                          page:\n                            description: Current page number\n                            example: 3\n                            type: number\n                          per_page:\n                            description: Maximum number of items shown per page in the response\n                            example: 25\n                            type: number\n                          previous_page:\n                            description: ID of the previous page. Can be null if the current page is the first one.\n                            example: 2\n                            nullable: true\n                            type: number\n                          total_entries:\n                            description: The total number of entries that exist in the database for this query. Nullable if unknown.\n                            example: 100\n                            nullable: true\n                            type: number\n                        required:\n                          - page\n                          - per_page\n                          - previous_page\n                          - next_page\n                          - last_page\n                          - total_entries\n                        type: object\n                    required:\n                      - pagination\n                    type: object\n                required:\n                  - isos\n                type: object\n          description: The `isos` key in the reply contains an array of iso objects with this structure\n      summary: Get all ISOs\n      tags:\n        - ISOs\n  \"/isos/{id}\":\n    get:\n      description: Returns a specific ISO object.\n      parameters:\n        - description: ID of the ISO\n          in: path\n          name: id\n          required: true\n          schema:\n            type: integer\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                properties:\n                  iso:\n                    properties:\n                      deprecated:\n                        description: ISO 8601 timestamp of deprecation, null if ISO is still available. After the deprecation time it will no longer be possible to attach the ISO to Servers.\n                        example: 2018-02-28T00:00:00+00:00\n                        nullable: true\n                        type: string\n                      description:\n                        description: Description of the ISO\n                        example: FreeBSD 11.0 x64\n                        type: string\n                      id:\n                        description: ID of the Resource\n                        example: 42\n                        type: integer\n                      name:\n                        description: Unique identifier of the ISO. Only set for public ISOs\n                        example: FreeBSD-11.0-RELEASE-amd64-dvd1\n                        nullable: true\n                        type: string\n                      type:\n                        description: Type of the ISO\n                        enum:\n                          - public\n                          - private\n                        type: string\n                    required:\n                      - id\n                      - name\n                      - description\n                      - type\n                      - deprecated\n                    type: object\n                required:\n                  - iso\n                type: object\n          description: The `iso` key in the reply contains an array of ISO objects with this structure\n      summary: Get an ISO\n      tags:\n        - ISOs\n  /load_balancer_types:\n    get:\n      description: Gets all Load Balancer type objects.\n      parameters:\n        - description: Can be used to filter Load Balancer types by their name. The response will only contain the Load Balancer type matching the specified name.\n          in: query\n          name: name\n          required: false\n          schema:\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                properties:\n                  load_balancer_types:\n                    items:\n                      properties:\n                        deprecated:\n                          description: Point in time when the Load Balancer type is deprecated (in ISO-8601 format)\n                          example: 2016-01-30T23:50:00+00:00\n                          nullable: true\n                          type: string\n                        description:\n                          description: Description of the Load Balancer type\n                          example: LB11\n                          type: string\n                        id:\n                          description: ID of the Load Balancer type\n                          example: 1\n                          type: number\n                        max_assigned_certificates:\n                          description: Number of SSL Certificates that can be assigned to a single Load Balancer\n                          example: 10\n                          type: number\n                        max_connections:\n                          description: Number of maximum simultaneous open connections\n                          example: 20000\n                          type: number\n                        max_services:\n                          description: Number of services a Load Balancer of this type can have\n                          example: 5\n                          type: number\n                        max_targets:\n                          description: Number of targets a single Load Balancer can have\n                          example: 25\n                          type: number\n                        name:\n                          description: Unique identifier of the Load Balancer type\n                          example: lb11\n                          type: string\n                        prices:\n                          description: Prices in different network zones\n                          items:\n                            properties:\n                              location:\n                                description: Name of the Location the price is for\n                                example: fsn1\n                                type: string\n                              price_hourly:\n                                description: Hourly costs for a Resource in this Location\n                                properties:\n                                  gross:\n                                    description: Price with VAT added\n                                    example: \"1.1900000000000000\"\n                                    type: string\n                                  net:\n                                    description: Price without VAT\n                                    example: \"1.0000000000\"\n                                    type: string\n                                required:\n                                  - net\n                                  - gross\n                                type: object\n                              price_monthly:\n                                description: Monthly costs for a Resource in this Location\n                                properties:\n                                  gross:\n                                    description: Price with VAT added\n                                    example: \"1.1900000000000000\"\n                                    type: string\n                                  net:\n                                    description: Price without VAT\n                                    example: \"1.0000000000\"\n                                    type: string\n                                required:\n                                  - net\n                                  - gross\n                                type: object\n                            required:\n                              - location\n                              - price_hourly\n                              - price_monthly\n                            type: object\n                          type: array\n                      required:\n                        - id\n                        - name\n                        - description\n                        - max_connections\n                        - max_services\n                        - max_targets\n                        - max_assigned_certificates\n                        - deprecated\n                        - prices\n                      type: object\n                    type: array\n                required:\n                  - load_balancer_types\n                type: object\n          description: The `load_balancer_types` key in the reply contains an array of Load Balancer type objects with this structure\n      summary: Get all Load Balancer Types\n      tags:\n        - Load Balancer Types\n  \"/load_balancer_types/{id}\":\n    get:\n      description: Gets a specific Load Balancer type object.\n      parameters:\n        - description: ID of Load Balancer type\n          in: path\n          name: id\n          required: true\n          schema:\n            type: integer\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                properties:\n                  load_balancer_type:\n                    properties:\n                      deprecated:\n                        description: Point in time when the Load Balancer type is deprecated (in ISO-8601 format)\n                        example: 2016-01-30T23:50:00+00:00\n                        nullable: true\n                        type: string\n                      description:\n                        description: Description of the Load Balancer type\n                        example: LB11\n                        type: string\n                      id:\n                        description: ID of the Load Balancer type\n                        example: 1\n                        type: number\n                      max_assigned_certificates:\n                        description: Number of SSL Certificates that can be assigned to a single Load Balancer\n                        example: 10\n                        type: number\n                      max_connections:\n                        description: Number of maximum simultaneous open connections\n                        example: 20000\n                        type: number\n                      max_services:\n                        description: Number of services a Load Balancer of this type can have\n                        example: 5\n                        type: number\n                      max_targets:\n                        description: Number of targets a single Load Balancer can have\n                        example: 25\n                        type: number\n                      name:\n                        description: Unique identifier of the Load Balancer type\n                        example: lb11\n                        type: string\n                      prices:\n                        description: Prices in different network zones\n                        items:\n                          properties:\n                            location:\n                              description: Name of the Location the price is for\n                              example: fsn1\n                              type: string\n                            price_hourly:\n                              description: Hourly costs for a Resource in this Location\n                              properties:\n                                gross:\n                                  description: Price with VAT added\n                                  example: \"1.1900000000000000\"\n                                  type: string\n                                net:\n                                  description: Price without VAT\n                                  example: \"1.0000000000\"\n                                  type: string\n                              required:\n                                - net\n                                - gross\n                              type: object\n                            price_monthly:\n                              description: Monthly costs for a Resource in this Location\n                              properties:\n                                gross:\n                                  description: Price with VAT added\n                                  example: \"1.1900000000000000\"\n                                  type: string\n                                net:\n                                  description: Price without VAT\n                                  example: \"1.0000000000\"\n                                  type: string\n                              required:\n                                - net\n                                - gross\n                              type: object\n                          required:\n                            - location\n                            - price_hourly\n                            - price_monthly\n                          type: object\n                        type: array\n                    required:\n                      - id\n                      - name\n                      - description\n                      - max_connections\n                      - max_services\n                      - max_targets\n                      - max_assigned_certificates\n                      - deprecated\n                      - prices\n                    type: object\n                type: object\n          description: The `load_balancer_type` key in the reply contains a Load Balancer type object with this structure\n      summary: Get a Load Balancer Type\n      tags:\n        - Load Balancer Types\n  /load_balancers:\n    get:\n      description: Gets all existing Load Balancers that you have available.\n      parameters:\n        - description: Can be used multiple times.\n          in: query\n          name: sort\n          required: false\n          schema:\n            enum:\n              - id\n              - id:asc\n              - id:desc\n              - name\n              - name:asc\n              - name:desc\n              - created\n              - created:asc\n              - created:desc\n            type: string\n        - description: Can be used to filter resources by their name. The response will only contain the resources matching the specified name\n          in: query\n          name: name\n          required: false\n          schema:\n            type: string\n        - description: Can be used to filter resources by labels. The response will only contain resources matching the label selector.\n          in: query\n          name: label_selector\n          required: false\n          schema:\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                properties:\n                  load_balancers:\n                    items:\n                      properties:\n                        algorithm:\n                          description: Algorithm of the Load Balancer\n                          properties:\n                            type:\n                              description: Type of the algorithm\n                              enum:\n                                - round_robin\n                                - least_connections\n                              type: string\n                          required:\n                            - type\n                          type: object\n                        created:\n                          description: Point in time when the Resource was created (in ISO-8601 format)\n                          example: 2016-01-30T23:55:00+00:00\n                          type: string\n                        id:\n                          description: ID of the Resource\n                          example: 42\n                          type: integer\n                        included_traffic:\n                          description: Free Traffic for the current billing period in bytes\n                          example: 10000\n                          type: integer\n                        ingoing_traffic:\n                          description: Inbound Traffic for the current billing period in bytes\n                          nullable: true\n                          type: integer\n                        labels:\n                          additionalProperties:\n                            type: string\n                          description: User-defined labels (key-value pairs)\n                          type: object\n                        load_balancer_type:\n                          properties:\n                            deprecated:\n                              description: Point in time when the Load Balancer type is deprecated (in ISO-8601 format)\n                              example: 2016-01-30T23:50:00+00:00\n                              nullable: true\n                              type: string\n                            description:\n                              description: Description of the Load Balancer type\n                              example: LB11\n                              type: string\n                            id:\n                              description: ID of the Load Balancer type\n                              example: 1\n                              type: number\n                            max_assigned_certificates:\n                              description: Number of SSL Certificates that can be assigned to a single Load Balancer\n                              example: 10\n                              type: number\n                            max_connections:\n                              description: Number of maximum simultaneous open connections\n                              example: 20000\n                              type: number\n                            max_services:\n                              description: Number of services a Load Balancer of this type can have\n                              example: 5\n                              type: number\n                            max_targets:\n                              description: Number of targets a single Load Balancer can have\n                              example: 25\n                              type: number\n                            name:\n                              description: Unique identifier of the Load Balancer type\n                              example: lb11\n                              type: string\n                            prices:\n                              description: Prices in different network zones\n                              items:\n                                properties:\n                                  location:\n                                    description: Name of the Location the price is for\n                                    example: fsn1\n                                    type: string\n                                  price_hourly:\n                                    description: Hourly costs for a Resource in this Location\n                                    properties:\n                                      gross:\n                                        description: Price with VAT added\n                                        example: \"1.1900000000000000\"\n                                        type: string\n                                      net:\n                                        description: Price without VAT\n                                        example: \"1.0000000000\"\n                                        type: string\n                                    required:\n                                      - net\n                                      - gross\n                                    type: object\n                                  price_monthly:\n                                    description: Monthly costs for a Resource in this Location\n                                    properties:\n                                      gross:\n                                        description: Price with VAT added\n                                        example: \"1.1900000000000000\"\n                                        type: string\n                                      net:\n                                        description: Price without VAT\n                                        example: \"1.0000000000\"\n                                        type: string\n                                    required:\n                                      - net\n                                      - gross\n                                    type: object\n                                required:\n                                  - location\n                                  - price_hourly\n                                  - price_monthly\n                                type: object\n                              type: array\n                          required:\n                            - id\n                            - name\n                            - description\n                            - max_connections\n                            - max_services\n                            - max_targets\n                            - max_assigned_certificates\n                            - deprecated\n                            - prices\n                          type: object\n                        location:\n                          properties:\n                            city:\n                              description: City the Location is closest to\n                              example: Falkenstein\n                              type: string\n                            country:\n                              description: ISO 3166-1 alpha-2 code of the country the Location resides in\n                              example: DE\n                              type: string\n                            description:\n                              description: Description of the Location\n                              example: Falkenstein DC Park 1\n                              type: string\n                            id:\n                              description: ID of the Location\n                              example: 1\n                              type: number\n                            latitude:\n                              description: Latitude of the city closest to the Location\n                              example: 50.47612\n                              type: number\n                            longitude:\n                              description: Longitude of the city closest to the Location\n                              example: 12.370071\n                              type: number\n                            name:\n                              description: Unique identifier of the Location\n                              example: fsn1\n                              type: string\n                            network_zone:\n                              description: Name of network zone this Location resides in\n                              example: eu-central\n                              type: string\n                          required:\n                            - id\n                            - name\n                            - description\n                            - country\n                            - city\n                            - latitude\n                            - longitude\n                            - network_zone\n                          type: object\n                        name:\n                          description: Name of the Resource. Must be unique per Project.\n                          example: my-resource\n                          type: string\n                        outgoing_traffic:\n                          description: Outbound Traffic for the current billing period in bytes\n                          nullable: true\n                          type: integer\n                        private_net:\n                          description: Private networks information\n                          items:\n                            properties:\n                              ip:\n                                example: 10.0.0.2\n                                type: string\n                              network:\n                                example: 4711\n                                type: integer\n                            type: object\n                          type: array\n                        protection:\n                          description: Protection configuration for the Resource\n                          properties:\n                            delete:\n                              description: If true, prevents the Resource from being deleted\n                              example: false\n                              type: boolean\n                          required:\n                            - delete\n                          type: object\n                        public_net:\n                          description: Public network information\n                          properties:\n                            enabled:\n                              description: Public Interface enabled or not\n                              type: boolean\n                            ipv4:\n                              description: IP address (v4)\n                              properties:\n                                dns_ptr:\n                                  description: Reverse DNS PTR entry for the IPv4 address of this Load Balancer\n                                  example: lb1.example.com\n                                  nullable: true\n                                  type: string\n                                ip:\n                                  description: IP address (v4) of this Load Balancer\n                                  example: 1.2.3.4\n                                  nullable: true\n                                  type: string\n                              type: object\n                            ipv6:\n                              description: IP address (v6)\n                              properties:\n                                dns_ptr:\n                                  description: Reverse DNS PTR entry for the IPv6 address of this Load Balancer\n                                  example: lb1.example.com\n                                  nullable: true\n                                  type: string\n                                ip:\n                                  description: IP address (v6) of this Load Balancer\n                                  example: 2001:db8::1\n                                  nullable: true\n                                  type: string\n                              type: object\n                          required:\n                            - enabled\n                            - ipv4\n                            - ipv6\n                          type: object\n                        services:\n                          description: List of services that belong to this Load Balancer\n                          items:\n                            properties:\n                              destination_port:\n                                description: Port the Load Balancer will balance to\n                                example: 80\n                                type: integer\n                              health_check:\n                                additionalProperties: false\n                                description: Service health check\n                                properties:\n                                  http:\n                                    additionalProperties: false\n                                    description: Additional configuration for protocol http\n                                    properties:\n                                      domain:\n                                        description: Host header to send in the HTTP request. May not contain spaces, percent or backslash symbols. Can be null, in that case no host header is sent.\n                                        example: example.com\n                                        nullable: true\n                                        type: string\n                                      path:\n                                        description: HTTP path to use for health checks\n                                        example: /\n                                        type: string\n                                      response:\n                                        description: String that must be contained in HTTP response in order to pass the health check\n                                        example: '{\"status\": \"ok\"}'\n                                        type: string\n                                      status_codes:\n                                        description: List of returned HTTP status codes in order to pass the health check. Supports the wildcards `?` for exactly one character and `*` for multiple ones. The default is to pass the health check for any status code between 2?? and 3??.\n                                        example:\n                                          - 2??\n                                          - 3??\n                                        items:\n                                          type: string\n                                        type: array\n                                      tls:\n                                        description: Use HTTPS for health check\n                                        example: false\n                                        type: boolean\n                                    required:\n                                      - domain\n                                      - path\n                                    type: object\n                                  interval:\n                                    description: Time interval in seconds health checks are performed\n                                    example: 15\n                                    type: integer\n                                  port:\n                                    description: Port the health check will be performed on\n                                    example: 4711\n                                    type: integer\n                                  protocol:\n                                    description: Type of the health check\n                                    enum:\n                                      - tcp\n                                      - http\n                                    example: http\n                                    type: string\n                                  retries:\n                                    description: Unsuccessful retries needed until a target is considered unhealthy; an unhealthy target needs the same number of successful retries to become healthy again\n                                    example: 3\n                                    type: integer\n                                  timeout:\n                                    description: Time in seconds after an attempt is considered a timeout\n                                    example: 10\n                                    type: integer\n                                required:\n                                  - protocol\n                                  - port\n                                  - interval\n                                  - timeout\n                                  - retries\n                                title: LoadBalancerServiceHealthCheck\n                                type: object\n                              http:\n                                description: Configuration option for protocols http and https\n                                properties:\n                                  certificates:\n                                    description: IDs of the Certificates to use for TLS/SSL termination by the Load Balancer; empty for TLS/SSL passthrough or if `protocol` is \"http\"\n                                    example:\n                                      - 897\n                                    items:\n                                      type: integer\n                                    type: array\n                                  cookie_lifetime:\n                                    description: Lifetime of the cookie used for sticky sessions\n                                    example: 300\n                                    type: integer\n                                  cookie_name:\n                                    description: Name of the cookie used for sticky sessions\n                                    example: HCLBSTICKY\n                                    type: string\n                                  redirect_http:\n                                    description: Redirect HTTP requests to HTTPS. Only available if protocol is \"https\". Default `false`\n                                    example: true\n                                    type: boolean\n                                  sticky_sessions:\n                                    description: Use sticky sessions. Only available if protocol is \"http\" or \"https\". Default `false`\n                                    example: true\n                                    type: boolean\n                                required:\n                                  - cookie_name\n                                  - cookie_lifetime\n                                type: object\n                              listen_port:\n                                description: Port the Load Balancer listens on\n                                example: 443\n                                type: integer\n                              protocol:\n                                description: Protocol of the Load Balancer\n                                enum:\n                                  - tcp\n                                  - http\n                                  - https\n                                example: https\n                                type: string\n                              proxyprotocol:\n                                description: Is Proxyprotocol enabled or not\n                                example: false\n                                type: boolean\n                            required:\n                              - protocol\n                              - listen_port\n                              - destination_port\n                              - proxyprotocol\n                              - health_check\n                            title: LoadBalancerService\n                            type: object\n                          type: array\n                        targets:\n                          description: List of targets that belong to this Load Balancer\n                          items:\n                            properties:\n                              health_status:\n                                description: List of health statuses of the services on this target\n                                items:\n                                  properties:\n                                    listen_port:\n                                      example: 443\n                                      type: integer\n                                    status:\n                                      example: healthy\n                                      type: string\n                                  type: object\n                                type: array\n                              ip:\n                                description: IP targets where the traffic should be routed through. It is only possible to use the (Public or vSwitch) IPs of Hetzner Online Root Servers belonging to the project owner. IPs belonging to other users are blocked. Additionally IPs belonging to services provided by Hetzner Cloud (Servers, Load Balancers, ...) are blocked as well.\n                                properties:\n                                  ip:\n                                    description: IP of a server that belongs to the same customer (public IPv4/IPv6) or private IP in a Subnetwork type vswitch.\n                                    example: 203.0.113.1\n                                    type: string\n                                required:\n                                  - ip\n                                type: object\n                              label_selector:\n                                description: Label selector and a list of selected targets\n                                properties:\n                                  selector:\n                                    description: Label selector\n                                    example: env=prod\n                                    type: string\n                                required:\n                                  - selector\n                                type: object\n                              server:\n                                description: Server where the traffic should be routed through\n                                properties:\n                                  id:\n                                    description: ID of the Server\n                                    example: 80\n                                    type: integer\n                                required:\n                                  - id\n                                title: LoadBalancerTargetServer\n                                type: object\n                              targets:\n                                description: List of selected targets\n                                items:\n                                  properties:\n                                    health_status:\n                                      items:\n                                        properties:\n                                          listen_port:\n                                            example: 443\n                                            type: integer\n                                          status:\n                                            example: healthy\n                                            type: string\n                                        type: object\n                                      type: array\n                                    server:\n                                      properties:\n                                        id:\n                                          description: ID of the Server\n                                          example: 85\n                                          type: integer\n                                      required:\n                                        - id\n                                      type: object\n                                    type:\n                                      example: server\n                                      type: string\n                                    use_private_ip:\n                                      example: false\n                                      type: boolean\n                                  type: object\n                                type: array\n                              type:\n                                description: Type of the resource\n                                enum:\n                                  - server\n                                  - label_selector\n                                  - ip\n                                type: string\n                              use_private_ip:\n                                description: Use the private network IP instead of the public IP. Default value is false.\n                                type: boolean\n                            required:\n                              - type\n                            title: LoadBalancerTarget\n                            type: object\n                          type: array\n                      required:\n                        - id\n                        - name\n                        - public_net\n                        - private_net\n                        - location\n                        - load_balancer_type\n                        - protection\n                        - labels\n                        - created\n                        - services\n                        - targets\n                        - algorithm\n                        - outgoing_traffic\n                        - ingoing_traffic\n                        - included_traffic\n                      type: object\n                    type: array\n                  meta:\n                    properties:\n                      pagination:\n                        properties:\n                          last_page:\n                            description: ID of the last page available. Can be null if the current page is the last one.\n                            example: 4\n                            nullable: true\n                            type: number\n                          next_page:\n                            description: ID of the next page. Can be null if the current page is the last one.\n                            example: 4\n                            nullable: true\n                            type: number\n                          page:\n                            description: Current page number\n                            example: 3\n                            type: number\n                          per_page:\n                            description: Maximum number of items shown per page in the response\n                            example: 25\n                            type: number\n                          previous_page:\n                            description: ID of the previous page. Can be null if the current page is the first one.\n                            example: 2\n                            nullable: true\n                            type: number\n                          total_entries:\n                            description: The total number of entries that exist in the database for this query. Nullable if unknown.\n                            example: 100\n                            nullable: true\n                            type: number\n                        required:\n                          - page\n                          - per_page\n                          - previous_page\n                          - next_page\n                          - last_page\n                          - total_entries\n                        type: object\n                    required:\n                      - pagination\n                    type: object\n                required:\n                  - load_balancers\n                type: object\n          description: The `load_balancers` key contains a list of Load Balancers\n      summary: Get all Load Balancers\n      tags:\n        - Load Balancers\n    post:\n      description: |\n        Creates a Load Balancer.\n\n        #### Call specific error codes\n\n        | Code                                    | Description                                                                                           |\n        |-----------------------------------------|-------------------------------------------------------------------------------------------------------|\n        | `cloud_resource_ip_not_allowed`         | The IP you are trying to add as a target belongs to a Hetzner Cloud resource                          |\n        | `ip_not_owned`                          | The IP is not owned by the owner of the project of the Load Balancer                                  |\n        | `load_balancer_not_attached_to_network` | The Load Balancer is not attached to a network                                                        |\n        | `robot_unavailable`                     | Robot was not available. The caller may retry the operation after a short delay.                      |\n        | `server_not_attached_to_network`        | The server you are trying to add as a target is not attached to the same network as the Load Balancer |\n        | `source_port_already_used`              | The source port you are trying to add is already in use                                               |\n        | `target_already_defined`                | The Load Balancer target you are trying to define is already defined                                  |\n      requestBody:\n        content:\n          application/json:\n            schema:\n              properties:\n                algorithm:\n                  description: Algorithm of the Load Balancer\n                  properties:\n                    type:\n                      description: Type of the algorithm\n                      enum:\n                        - round_robin\n                        - least_connections\n                      type: string\n                  required:\n                    - type\n                  title: LoadBalancerAlgorithm\n                  type: object\n                labels:\n                  description: User-defined labels (key-value pairs)\n                  properties:\n                    labelkey:\n                      description: New label\n                      example: value\n                      type: string\n                  type: object\n                load_balancer_type:\n                  description: ID or name of the Load Balancer type this Load Balancer should be created with\n                  example: lb11\n                  type: string\n                location:\n                  description: ID or name of Location to create Load Balancer in\n                  type: string\n                name:\n                  description: Name of the Load Balancer\n                  example: Web Frontend\n                  type: string\n                network:\n                  description: ID of the network the Load Balancer should be attached to on creation\n                  example: 123\n                  type: integer\n                network_zone:\n                  description: Name of network zone\n                  example: eu-central\n                  type: string\n                public_interface:\n                  description: Enable or disable the public interface of the Load Balancer\n                  example: true\n                  type: boolean\n                services:\n                  description: Array of services\n                  items:\n                    properties:\n                      destination_port:\n                        description: Port the Load Balancer will balance to\n                        example: 80\n                        type: integer\n                      health_check:\n                        additionalProperties: false\n                        description: Service health check\n                        properties:\n                          http:\n                            additionalProperties: false\n                            description: Additional configuration for protocol http\n                            properties:\n                              domain:\n                                description: Host header to send in the HTTP request. May not contain spaces, percent or backslash symbols. Can be null, in that case no host header is sent.\n                                example: example.com\n                                nullable: true\n                                type: string\n                              path:\n                                description: HTTP path to use for health checks\n                                example: /\n                                type: string\n                              response:\n                                description: String that must be contained in HTTP response in order to pass the health check\n                                example: '{\"status\": \"ok\"}'\n                                type: string\n                              status_codes:\n                                description: List of returned HTTP status codes in order to pass the health check. Supports the wildcards `?` for exactly one character and `*` for multiple ones. The default is to pass the health check for any status code between 2?? and 3??.\n                                example:\n                                  - 2??\n                                  - 3??\n                                items:\n                                  type: string\n                                type: array\n                              tls:\n                                description: Use HTTPS for health check\n                                example: false\n                                type: boolean\n                            required:\n                              - domain\n                              - path\n                            type: object\n                          interval:\n                            description: Time interval in seconds health checks are performed\n                            example: 15\n                            type: integer\n                          port:\n                            description: Port the health check will be performed on\n                            example: 4711\n                            type: integer\n                          protocol:\n                            description: Type of the health check\n                            enum:\n                              - tcp\n                              - http\n                            example: http\n                            type: string\n                          retries:\n                            description: Unsuccessful retries needed until a target is considered unhealthy; an unhealthy target needs the same number of successful retries to become healthy again\n                            example: 3\n                            type: integer\n                          timeout:\n                            description: Time in seconds after an attempt is considered a timeout\n                            example: 10\n                            type: integer\n                        required:\n                          - protocol\n                          - port\n                          - interval\n                          - timeout\n                          - retries\n                        title: LoadBalancerServiceHealthCheck\n                        type: object\n                      http:\n                        description: Configuration option for protocols http and https\n                        properties:\n                          certificates:\n                            description: IDs of the Certificates to use for TLS/SSL termination by the Load Balancer; empty for TLS/SSL passthrough or if `protocol` is \"http\"\n                            example:\n                              - 897\n                            items:\n                              type: integer\n                            type: array\n                          cookie_lifetime:\n                            description: Lifetime of the cookie used for sticky sessions\n                            example: 300\n                            type: integer\n                          cookie_name:\n                            description: Name of the cookie used for sticky sessions\n                            example: HCLBSTICKY\n                            type: string\n                          redirect_http:\n                            description: Redirect HTTP requests to HTTPS. Only available if protocol is \"https\". Default `false`\n                            example: true\n                            type: boolean\n                          sticky_sessions:\n                            description: Use sticky sessions. Only available if protocol is \"http\" or \"https\". Default `false`\n                            example: true\n                            type: boolean\n                        required:\n                          - cookie_name\n                          - cookie_lifetime\n                        type: object\n                      listen_port:\n                        description: Port the Load Balancer listens on\n                        example: 443\n                        type: integer\n                      protocol:\n                        description: Protocol of the Load Balancer\n                        enum:\n                          - tcp\n                          - http\n                          - https\n                        example: https\n                        type: string\n                      proxyprotocol:\n                        description: Is Proxyprotocol enabled or not\n                        example: false\n                        type: boolean\n                    required:\n                      - protocol\n                      - listen_port\n                      - destination_port\n                      - proxyprotocol\n                      - health_check\n                    title: LoadBalancerService\n                    type: object\n                  type: array\n                targets:\n                  description: Array of targets\n                  items:\n                    properties:\n                      health_status:\n                        description: List of health statuses of the services on this target\n                        items:\n                          properties:\n                            listen_port:\n                              example: 443\n                              type: integer\n                            status:\n                              example: healthy\n                              type: string\n                          type: object\n                        type: array\n                      ip:\n                        description: IP targets where the traffic should be routed through. It is only possible to use the (Public or vSwitch) IPs of Hetzner Online Root Servers belonging to the project owner. IPs belonging to other users are blocked. Additionally IPs belonging to services provided by Hetzner Cloud (Servers, Load Balancers, ...) are blocked as well.\n                        properties:\n                          ip:\n                            description: IP of a server that belongs to the same customer (public IPv4/IPv6) or private IP in a Subnetwork type vswitch.\n                            example: 203.0.113.1\n                            type: string\n                        required:\n                          - ip\n                        type: object\n                      label_selector:\n                        description: Label selector and a list of selected targets\n                        properties:\n                          selector:\n                            description: Label selector\n                            example: env=prod\n                            type: string\n                        required:\n                          - selector\n                        type: object\n                      server:\n                        description: Server where the traffic should be routed through\n                        properties:\n                          id:\n                            description: ID of the Server\n                            example: 80\n                            type: integer\n                        required:\n                          - id\n                        title: LoadBalancerTargetServer\n                        type: object\n                      targets:\n                        description: List of selected targets\n                        items:\n                          properties:\n                            health_status:\n                              items:\n                                properties:\n                                  listen_port:\n                                    example: 443\n                                    type: integer\n                                  status:\n                                    example: healthy\n                                    type: string\n                                type: object\n                              type: array\n                            server:\n                              properties:\n                                id:\n                                  description: ID of the Server\n                                  example: 85\n                                  type: integer\n                              required:\n                                - id\n                              type: object\n                            type:\n                              example: server\n                              type: string\n                            use_private_ip:\n                              example: false\n                              type: boolean\n                          type: object\n                        type: array\n                      type:\n                        description: Type of the resource\n                        enum:\n                          - server\n                          - label_selector\n                          - ip\n                        type: string\n                      use_private_ip:\n                        description: Use the private network IP instead of the public IP. Default value is false.\n                        type: boolean\n                    required:\n                      - type\n                    title: LoadBalancerTarget\n                    type: object\n                  type: array\n              required:\n                - name\n                - load_balancer_type\n                - algorithm\n              title: CreateLoadBalancerRequest\n              type: object\n      responses:\n        \"201\":\n          content:\n            application/json:\n              example:\n                action:\n                  command: create_load_balancer\n                  error:\n                    code: action_failed\n                    message: Action failed\n                  finished: 2016-01-30T23:56:00+00:00\n                  id: 13\n                  progress: 100\n                  resources:\n                    - id: 4711\n                      type: load_balancer\n                  started: 2016-01-30T23:55:00+00:00\n                  status: success\n                load_balancer:\n                  algorithm:\n                    type: round_robin\n                  created: 2016-01-30T23:50:00+00:00\n                  id: 4711\n                  included_traffic: 654321\n                  ingoing_traffic: 123456\n                  labels:\n                    env: dev\n                  load_balancer_type:\n                    deprecated: 2016-01-30T23:50:00+00:00\n                    description: LB11\n                    id: 1\n                    max_assigned_certificates: 10\n                    max_connections: 20000\n                    max_services: 5\n                    max_targets: 25\n                    name: lb11\n                    prices:\n                      - location: fsn1\n                        price_hourly:\n                          gross: \"1.1900000000000000\"\n                          net: \"1.0000000000\"\n                        price_monthly:\n                          gross: \"1.1900000000000000\"\n                          net: \"1.0000000000\"\n                  location:\n                    city: Falkenstein\n                    country: DE\n                    description: Falkenstein DC Park 1\n                    id: 1\n                    latitude: 50.47612\n                    longitude: 12.370071\n                    name: fsn1\n                    network_zone: eu-central\n                  name: Web Frontend\n                  outgoing_traffic: 123456\n                  private_net:\n                    - ip: 10.0.0.2\n                      network: 4711\n                  protection:\n                    delete: false\n                  public_net:\n                    enabled: false\n                    ipv4:\n                      ip: 1.2.3.4\n                    ipv6:\n                      ip: 2001:db8::1\n                  services:\n                    - destination_port: 80\n                      health_check:\n                        http:\n                          domain: example.com\n                          path: /\n                          response: '{\"status\": \"ok\"}'\n                          status_codes:\n                            - 2??,3??\n                          tls: false\n                        interval: 15\n                        port: 4711\n                        protocol: http\n                        retries: 3\n                        timeout: 10\n                      http:\n                        certificates:\n                          - 897\n                        cookie_lifetime: 300\n                        cookie_name: HCLBSTICKY\n                        redirect_http: true\n                        sticky_sessions: true\n                      listen_port: 443\n                      protocol: http\n                      proxyprotocol: false\n                  targets:\n                    - health_status:\n                        - listen_port: 443\n                          status: healthy\n                      server:\n                        id: 80\n                      targets:\n                        - health_status:\n                            - listen_port: 443\n                              status: healthy\n                          label_selector: null\n                          server:\n                            id: 80\n                          type: server\n                          use_private_ip: true\n                      type: server\n                      use_private_ip: true\n              schema:\n                properties:\n                  action:\n                    properties:\n                      command:\n                        description: Command executed in the Action\n                        example: start_server\n                        type: string\n                      error:\n                        description: Error message for the Action if error occurred, otherwise null\n                        nullable: true\n                        properties:\n                          code:\n                            description: Fixed machine readable code\n                            example: action_failed\n                            type: string\n                          message:\n                            description: Humanized error message\n                            example: Action failed\n                            type: string\n                        required:\n                          - code\n                          - message\n                        type: object\n                      finished:\n                        description: Point in time when the Action was finished (in ISO-8601 format). Only set if the Action is finished otherwise null.\n                        example: 2016-01-30T23:55:00+00:00\n                        nullable: true\n                        type: string\n                      id:\n                        description: ID of the Resource\n                        example: 42\n                        type: integer\n                      progress:\n                        description: Progress of Action in percent\n                        example: 100\n                        type: number\n                      resources:\n                        description: Resources the Action relates to\n                        items:\n                          properties:\n                            id:\n                              description: ID of the Resource\n                              example: 42\n                              type: integer\n                            type:\n                              description: Type of resource referenced\n                              example: server\n                              type: string\n                          required:\n                            - id\n                            - type\n                          type: object\n                        type: array\n                      started:\n                        description: Point in time when the Action was started (in ISO-8601 format)\n                        example: 2016-01-30T23:55:00+00:00\n                        type: string\n                      status:\n                        description: Status of the Action\n                        enum:\n                          - success\n                          - running\n                          - error\n                        type: string\n                    required:\n                      - id\n                      - command\n                      - status\n                      - progress\n                      - started\n                      - finished\n                      - resources\n                      - error\n                    title: Action\n                    type: object\n                  load_balancer:\n                    properties:\n                      algorithm:\n                        description: Algorithm of the Load Balancer\n                        properties:\n                          type:\n                            description: Type of the algorithm\n                            enum:\n                              - round_robin\n                              - least_connections\n                            type: string\n                        required:\n                          - type\n                        type: object\n                      created:\n                        description: Point in time when the Resource was created (in ISO-8601 format)\n                        example: 2016-01-30T23:55:00+00:00\n                        type: string\n                      id:\n                        description: ID of the Resource\n                        example: 42\n                        type: integer\n                      included_traffic:\n                        description: Free Traffic for the current billing period in bytes\n                        example: 10000\n                        type: integer\n                      ingoing_traffic:\n                        description: Inbound Traffic for the current billing period in bytes\n                        nullable: true\n                        type: integer\n                      labels:\n                        additionalProperties:\n                          type: string\n                        description: User-defined labels (key-value pairs)\n                        type: object\n                      load_balancer_type:\n                        properties:\n                          deprecated:\n                            description: Point in time when the Load Balancer type is deprecated (in ISO-8601 format)\n                            example: 2016-01-30T23:50:00+00:00\n                            nullable: true\n                            type: string\n                          description:\n                            description: Description of the Load Balancer type\n                            example: LB11\n                            type: string\n                          id:\n                            description: ID of the Load Balancer type\n                            example: 1\n                            type: number\n                          max_assigned_certificates:\n                            description: Number of SSL Certificates that can be assigned to a single Load Balancer\n                            example: 10\n                            type: number\n                          max_connections:\n                            description: Number of maximum simultaneous open connections\n                            example: 20000\n                            type: number\n                          max_services:\n                            description: Number of services a Load Balancer of this type can have\n                            example: 5\n                            type: number\n                          max_targets:\n                            description: Number of targets a single Load Balancer can have\n                            example: 25\n                            type: number\n                          name:\n                            description: Unique identifier of the Load Balancer type\n                            example: lb11\n                            type: string\n                          prices:\n                            description: Prices in different network zones\n                            items:\n                              properties:\n                                location:\n                                  description: Name of the Location the price is for\n                                  example: fsn1\n                                  type: string\n                                price_hourly:\n                                  description: Hourly costs for a Resource in this Location\n                                  properties:\n                                    gross:\n                                      description: Price with VAT added\n                                      example: \"1.1900000000000000\"\n                                      type: string\n                                    net:\n                                      description: Price without VAT\n                                      example: \"1.0000000000\"\n                                      type: string\n                                  required:\n                                    - net\n                                    - gross\n                                  type: object\n                                price_monthly:\n                                  description: Monthly costs for a Resource in this Location\n                                  properties:\n                                    gross:\n                                      description: Price with VAT added\n                                      example: \"1.1900000000000000\"\n                                      type: string\n                                    net:\n                                      description: Price without VAT\n                                      example: \"1.0000000000\"\n                                      type: string\n                                  required:\n                                    - net\n                                    - gross\n                                  type: object\n                              required:\n                                - location\n                                - price_hourly\n                                - price_monthly\n                              type: object\n                            type: array\n                        required:\n                          - id\n                          - name\n                          - description\n                          - max_connections\n                          - max_services\n                          - max_targets\n                          - max_assigned_certificates\n                          - deprecated\n                          - prices\n                        type: object\n                      location:\n                        properties:\n                          city:\n                            description: City the Location is closest to\n                            example: Falkenstein\n                            type: string\n                          country:\n                            description: ISO 3166-1 alpha-2 code of the country the Location resides in\n                            example: DE\n                            type: string\n                          description:\n                            description: Description of the Location\n                            example: Falkenstein DC Park 1\n                            type: string\n                          id:\n                            description: ID of the Location\n                            example: 1\n                            type: number\n                          latitude:\n                            description: Latitude of the city closest to the Location\n                            example: 50.47612\n                            type: number\n                          longitude:\n                            description: Longitude of the city closest to the Location\n                            example: 12.370071\n                            type: number\n                          name:\n                            description: Unique identifier of the Location\n                            example: fsn1\n                            type: string\n                          network_zone:\n                            description: Name of network zone this Location resides in\n                            example: eu-central\n                            type: string\n                        required:\n                          - id\n                          - name\n                          - description\n                          - country\n                          - city\n                          - latitude\n                          - longitude\n                          - network_zone\n                        type: object\n                      name:\n                        description: Name of the Resource. Must be unique per Project.\n                        example: my-resource\n                        type: string\n                      outgoing_traffic:\n                        description: Outbound Traffic for the current billing period in bytes\n                        nullable: true\n                        type: integer\n                      private_net:\n                        description: Private networks information\n                        items:\n                          properties:\n                            ip:\n                              example: 10.0.0.2\n                              type: string\n                            network:\n                              example: 4711\n                              type: integer\n                          type: object\n                        type: array\n                      protection:\n                        description: Protection configuration for the Resource\n                        properties:\n                          delete:\n                            description: If true, prevents the Resource from being deleted\n                            example: false\n                            type: boolean\n                        required:\n                          - delete\n                        type: object\n                      public_net:\n                        description: Public network information\n                        properties:\n                          enabled:\n                            description: Public Interface enabled or not\n                            type: boolean\n                          ipv4:\n                            description: IP address (v4)\n                            properties:\n                              dns_ptr:\n                                description: Reverse DNS PTR entry for the IPv4 address of this Load Balancer\n                                example: lb1.example.com\n                                nullable: true\n                                type: string\n                              ip:\n                                description: IP address (v4) of this Load Balancer\n                                example: 1.2.3.4\n                                nullable: true\n                                type: string\n                            type: object\n                          ipv6:\n                            description: IP address (v6)\n                            properties:\n                              dns_ptr:\n                                description: Reverse DNS PTR entry for the IPv6 address of this Load Balancer\n                                example: lb1.example.com\n                                nullable: true\n                                type: string\n                              ip:\n                                description: IP address (v6) of this Load Balancer\n                                example: 2001:db8::1\n                                nullable: true\n                                type: string\n                            type: object\n                        required:\n                          - enabled\n                          - ipv4\n                          - ipv6\n                        type: object\n                      services:\n                        description: List of services that belong to this Load Balancer\n                        items:\n                          properties:\n                            destination_port:\n                              description: Port the Load Balancer will balance to\n                              example: 80\n                              type: integer\n                            health_check:\n                              additionalProperties: false\n                              description: Service health check\n                              properties:\n                                http:\n                                  additionalProperties: false\n                                  description: Additional configuration for protocol http\n                                  properties:\n                                    domain:\n                                      description: Host header to send in the HTTP request. May not contain spaces, percent or backslash symbols. Can be null, in that case no host header is sent.\n                                      example: example.com\n                                      nullable: true\n                                      type: string\n                                    path:\n                                      description: HTTP path to use for health checks\n                                      example: /\n                                      type: string\n                                    response:\n                                      description: String that must be contained in HTTP response in order to pass the health check\n                                      example: '{\"status\": \"ok\"}'\n                                      type: string\n                                    status_codes:\n                                      description: List of returned HTTP status codes in order to pass the health check. Supports the wildcards `?` for exactly one character and `*` for multiple ones. The default is to pass the health check for any status code between 2?? and 3??.\n                                      example:\n                                        - 2??\n                                        - 3??\n                                      items:\n                                        type: string\n                                      type: array\n                                    tls:\n                                      description: Use HTTPS for health check\n                                      example: false\n                                      type: boolean\n                                  required:\n                                    - domain\n                                    - path\n                                  type: object\n                                interval:\n                                  description: Time interval in seconds health checks are performed\n                                  example: 15\n                                  type: integer\n                                port:\n                                  description: Port the health check will be performed on\n                                  example: 4711\n                                  type: integer\n                                protocol:\n                                  description: Type of the health check\n                                  enum:\n                                    - tcp\n                                    - http\n                                  example: http\n                                  type: string\n                                retries:\n                                  description: Unsuccessful retries needed until a target is considered unhealthy; an unhealthy target needs the same number of successful retries to become healthy again\n                                  example: 3\n                                  type: integer\n                                timeout:\n                                  description: Time in seconds after an attempt is considered a timeout\n                                  example: 10\n                                  type: integer\n                              required:\n                                - protocol\n                                - port\n                                - interval\n                                - timeout\n                                - retries\n                              title: LoadBalancerServiceHealthCheck\n                              type: object\n                            http:\n                              description: Configuration option for protocols http and https\n                              properties:\n                                certificates:\n                                  description: IDs of the Certificates to use for TLS/SSL termination by the Load Balancer; empty for TLS/SSL passthrough or if `protocol` is \"http\"\n                                  example:\n                                    - 897\n                                  items:\n                                    type: integer\n                                  type: array\n                                cookie_lifetime:\n                                  description: Lifetime of the cookie used for sticky sessions\n                                  example: 300\n                                  type: integer\n                                cookie_name:\n                                  description: Name of the cookie used for sticky sessions\n                                  example: HCLBSTICKY\n                                  type: string\n                                redirect_http:\n                                  description: Redirect HTTP requests to HTTPS. Only available if protocol is \"https\". Default `false`\n                                  example: true\n                                  type: boolean\n                                sticky_sessions:\n                                  description: Use sticky sessions. Only available if protocol is \"http\" or \"https\". Default `false`\n                                  example: true\n                                  type: boolean\n                              required:\n                                - cookie_name\n                                - cookie_lifetime\n                              type: object\n                            listen_port:\n                              description: Port the Load Balancer listens on\n                              example: 443\n                              type: integer\n                            protocol:\n                              description: Protocol of the Load Balancer\n                              enum:\n                                - tcp\n                                - http\n                                - https\n                              example: https\n                              type: string\n                            proxyprotocol:\n                              description: Is Proxyprotocol enabled or not\n                              example: false\n                              type: boolean\n                          required:\n                            - protocol\n                            - listen_port\n                            - destination_port\n                            - proxyprotocol\n                            - health_check\n                          title: LoadBalancerService\n                          type: object\n                        type: array\n                      targets:\n                        description: List of targets that belong to this Load Balancer\n                        items:\n                          properties:\n                            health_status:\n                              description: List of health statuses of the services on this target\n                              items:\n                                properties:\n                                  listen_port:\n                                    example: 443\n                                    type: integer\n                                  status:\n                                    example: healthy\n                                    type: string\n                                type: object\n                              type: array\n                            ip:\n                              description: IP targets where the traffic should be routed through. It is only possible to use the (Public or vSwitch) IPs of Hetzner Online Root Servers belonging to the project owner. IPs belonging to other users are blocked. Additionally IPs belonging to services provided by Hetzner Cloud (Servers, Load Balancers, ...) are blocked as well.\n                              properties:\n                                ip:\n                                  description: IP of a server that belongs to the same customer (public IPv4/IPv6) or private IP in a Subnetwork type vswitch.\n                                  example: 203.0.113.1\n                                  type: string\n                              required:\n                                - ip\n                              type: object\n                            label_selector:\n                              description: Label selector and a list of selected targets\n                              properties:\n                                selector:\n                                  description: Label selector\n                                  example: env=prod\n                                  type: string\n                              required:\n                                - selector\n                              type: object\n                            server:\n                              description: Server where the traffic should be routed through\n                              properties:\n                                id:\n                                  description: ID of the Server\n                                  example: 80\n                                  type: integer\n                              required:\n                                - id\n                              title: LoadBalancerTargetServer\n                              type: object\n                            targets:\n                              description: List of selected targets\n                              items:\n                                properties:\n                                  health_status:\n                                    items:\n                                      properties:\n                                        listen_port:\n                                          example: 443\n                                          type: integer\n                                        status:\n                                          example: healthy\n                                          type: string\n                                      type: object\n                                    type: array\n                                  server:\n                                    properties:\n                                      id:\n                                        description: ID of the Server\n                                        example: 85\n                                        type: integer\n                                    required:\n                                      - id\n                                    type: object\n                                  type:\n                                    example: server\n                                    type: string\n                                  use_private_ip:\n                                    example: false\n                                    type: boolean\n                                type: object\n                              type: array\n                            type:\n                              description: Type of the resource\n                              enum:\n                                - server\n                                - label_selector\n                                - ip\n                              type: string\n                            use_private_ip:\n                              description: Use the private network IP instead of the public IP. Default value is false.\n                              type: boolean\n                          required:\n                            - type\n                          title: LoadBalancerTarget\n                          type: object\n                        type: array\n                    required:\n                      - id\n                      - name\n                      - public_net\n                      - private_net\n                      - location\n                      - load_balancer_type\n                      - protection\n                      - labels\n                      - created\n                      - services\n                      - targets\n                      - algorithm\n                      - outgoing_traffic\n                      - ingoing_traffic\n                      - included_traffic\n                    type: object\n                required:\n                  - load_balancer\n                  - action\n                type: object\n          description: The `load_balancer` key contains the Load Balancer that was just created\n      summary: Create a Load Balancer\n      tags:\n        - Load Balancers\n  \"/load_balancers/{id}\":\n    delete:\n      description: Deletes a Load Balancer.\n      parameters:\n        - description: ID of the Load Balancer\n          in: path\n          name: id\n          required: true\n          schema:\n            type: integer\n      responses:\n        \"204\":\n          description: Load Balancer deleted\n      summary: Delete a Load Balancer\n      tags:\n        - Load Balancers\n    get:\n      description: Gets a specific Load Balancer object.\n      parameters:\n        - description: ID of the Load Balancer\n          in: path\n          name: id\n          required: true\n          schema:\n            type: integer\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                properties:\n                  load_balancer:\n                    properties:\n                      algorithm:\n                        description: Algorithm of the Load Balancer\n                        properties:\n                          type:\n                            description: Type of the algorithm\n                            enum:\n                              - round_robin\n                              - least_connections\n                            type: string\n                        required:\n                          - type\n                        type: object\n                      created:\n                        description: Point in time when the Resource was created (in ISO-8601 format)\n                        example: 2016-01-30T23:55:00+00:00\n                        type: string\n                      id:\n                        description: ID of the Resource\n                        example: 42\n                        type: integer\n                      included_traffic:\n                        description: Free Traffic for the current billing period in bytes\n                        example: 10000\n                        type: integer\n                      ingoing_traffic:\n                        description: Inbound Traffic for the current billing period in bytes\n                        nullable: true\n                        type: integer\n                      labels:\n                        additionalProperties:\n                          type: string\n                        description: User-defined labels (key-value pairs)\n                        type: object\n                      load_balancer_type:\n                        properties:\n                          deprecated:\n                            description: Point in time when the Load Balancer type is deprecated (in ISO-8601 format)\n                            example: 2016-01-30T23:50:00+00:00\n                            nullable: true\n                            type: string\n                          description:\n                            description: Description of the Load Balancer type\n                            example: LB11\n                            type: string\n                          id:\n                            description: ID of the Load Balancer type\n                            example: 1\n                            type: number\n                          max_assigned_certificates:\n                            description: Number of SSL Certificates that can be assigned to a single Load Balancer\n                            example: 10\n                            type: number\n                          max_connections:\n                            description: Number of maximum simultaneous open connections\n                            example: 20000\n                            type: number\n                          max_services:\n                            description: Number of services a Load Balancer of this type can have\n                            example: 5\n                            type: number\n                          max_targets:\n                            description: Number of targets a single Load Balancer can have\n                            example: 25\n                            type: number\n                          name:\n                            description: Unique identifier of the Load Balancer type\n                            example: lb11\n                            type: string\n                          prices:\n                            description: Prices in different network zones\n                            items:\n                              properties:\n                                location:\n                                  description: Name of the Location the price is for\n                                  example: fsn1\n                                  type: string\n                                price_hourly:\n                                  description: Hourly costs for a Resource in this Location\n                                  properties:\n                                    gross:\n                                      description: Price with VAT added\n                                      example: \"1.1900000000000000\"\n                                      type: string\n                                    net:\n                                      description: Price without VAT\n                                      example: \"1.0000000000\"\n                                      type: string\n                                  required:\n                                    - net\n                                    - gross\n                                  type: object\n                                price_monthly:\n                                  description: Monthly costs for a Resource in this Location\n                                  properties:\n                                    gross:\n                                      description: Price with VAT added\n                                      example: \"1.1900000000000000\"\n                                      type: string\n                                    net:\n                                      description: Price without VAT\n                                      example: \"1.0000000000\"\n                                      type: string\n                                  required:\n                                    - net\n                                    - gross\n                                  type: object\n                              required:\n                                - location\n                                - price_hourly\n                                - price_monthly\n                              type: object\n                            type: array\n                        required:\n                          - id\n                          - name\n                          - description\n                          - max_connections\n                          - max_services\n                          - max_targets\n                          - max_assigned_certificates\n                          - deprecated\n                          - prices\n                        type: object\n                      location:\n                        properties:\n                          city:\n                            description: City the Location is closest to\n                            example: Falkenstein\n                            type: string\n                          country:\n                            description: ISO 3166-1 alpha-2 code of the country the Location resides in\n                            example: DE\n                            type: string\n                          description:\n                            description: Description of the Location\n                            example: Falkenstein DC Park 1\n                            type: string\n                          id:\n                            description: ID of the Location\n                            example: 1\n                            type: number\n                          latitude:\n                            description: Latitude of the city closest to the Location\n                            example: 50.47612\n                            type: number\n                          longitude:\n                            description: Longitude of the city closest to the Location\n                            example: 12.370071\n                            type: number\n                          name:\n                            description: Unique identifier of the Location\n                            example: fsn1\n                            type: string\n                          network_zone:\n                            description: Name of network zone this Location resides in\n                            example: eu-central\n                            type: string\n                        required:\n                          - id\n                          - name\n                          - description\n                          - country\n                          - city\n                          - latitude\n                          - longitude\n                          - network_zone\n                        type: object\n                      name:\n                        description: Name of the Resource. Must be unique per Project.\n                        example: my-resource\n                        type: string\n                      outgoing_traffic:\n                        description: Outbound Traffic for the current billing period in bytes\n                        nullable: true\n                        type: integer\n                      private_net:\n                        description: Private networks information\n                        items:\n                          properties:\n                            ip:\n                              example: 10.0.0.2\n                              type: string\n                            network:\n                              example: 4711\n                              type: integer\n                          type: object\n                        type: array\n                      protection:\n                        description: Protection configuration for the Resource\n                        properties:\n                          delete:\n                            description: If true, prevents the Resource from being deleted\n                            example: false\n                            type: boolean\n                        required:\n                          - delete\n                        type: object\n                      public_net:\n                        description: Public network information\n                        properties:\n                          enabled:\n                            description: Public Interface enabled or not\n                            type: boolean\n                          ipv4:\n                            description: IP address (v4)\n                            properties:\n                              dns_ptr:\n                                description: Reverse DNS PTR entry for the IPv4 address of this Load Balancer\n                                example: lb1.example.com\n                                nullable: true\n                                type: string\n                              ip:\n                                description: IP address (v4) of this Load Balancer\n                                example: 1.2.3.4\n                                nullable: true\n                                type: string\n                            type: object\n                          ipv6:\n                            description: IP address (v6)\n                            properties:\n                              dns_ptr:\n                                description: Reverse DNS PTR entry for the IPv6 address of this Load Balancer\n                                example: lb1.example.com\n                                nullable: true\n                                type: string\n                              ip:\n                                description: IP address (v6) of this Load Balancer\n                                example: 2001:db8::1\n                                nullable: true\n                                type: string\n                            type: object\n                        required:\n                          - enabled\n                          - ipv4\n                          - ipv6\n                        type: object\n                      services:\n                        description: List of services that belong to this Load Balancer\n                        items:\n                          properties:\n                            destination_port:\n                              description: Port the Load Balancer will balance to\n                              example: 80\n                              type: integer\n                            health_check:\n                              additionalProperties: false\n                              description: Service health check\n                              properties:\n                                http:\n                                  additionalProperties: false\n                                  description: Additional configuration for protocol http\n                                  properties:\n                                    domain:\n                                      description: Host header to send in the HTTP request. May not contain spaces, percent or backslash symbols. Can be null, in that case no host header is sent.\n                                      example: example.com\n                                      nullable: true\n                                      type: string\n                                    path:\n                                      description: HTTP path to use for health checks\n                                      example: /\n                                      type: string\n                                    response:\n                                      description: String that must be contained in HTTP response in order to pass the health check\n                                      example: '{\"status\": \"ok\"}'\n                                      type: string\n                                    status_codes:\n                                      description: List of returned HTTP status codes in order to pass the health check. Supports the wildcards `?` for exactly one character and `*` for multiple ones. The default is to pass the health check for any status code between 2?? and 3??.\n                                      example:\n                                        - 2??\n                                        - 3??\n                                      items:\n                                        type: string\n                                      type: array\n                                    tls:\n                                      description: Use HTTPS for health check\n                                      example: false\n                                      type: boolean\n                                  required:\n                                    - domain\n                                    - path\n                                  type: object\n                                interval:\n                                  description: Time interval in seconds health checks are performed\n                                  example: 15\n                                  type: integer\n                                port:\n                                  description: Port the health check will be performed on\n                                  example: 4711\n                                  type: integer\n                                protocol:\n                                  description: Type of the health check\n                                  enum:\n                                    - tcp\n                                    - http\n                                  example: http\n                                  type: string\n                                retries:\n                                  description: Unsuccessful retries needed until a target is considered unhealthy; an unhealthy target needs the same number of successful retries to become healthy again\n                                  example: 3\n                                  type: integer\n                                timeout:\n                                  description: Time in seconds after an attempt is considered a timeout\n                                  example: 10\n                                  type: integer\n                              required:\n                                - protocol\n                                - port\n                                - interval\n                                - timeout\n                                - retries\n                              title: LoadBalancerServiceHealthCheck\n                              type: object\n                            http:\n                              description: Configuration option for protocols http and https\n                              properties:\n                                certificates:\n                                  description: IDs of the Certificates to use for TLS/SSL termination by the Load Balancer; empty for TLS/SSL passthrough or if `protocol` is \"http\"\n                                  example:\n                                    - 897\n                                  items:\n                                    type: integer\n                                  type: array\n                                cookie_lifetime:\n                                  description: Lifetime of the cookie used for sticky sessions\n                                  example: 300\n                                  type: integer\n                                cookie_name:\n                                  description: Name of the cookie used for sticky sessions\n                                  example: HCLBSTICKY\n                                  type: string\n                                redirect_http:\n                                  description: Redirect HTTP requests to HTTPS. Only available if protocol is \"https\". Default `false`\n                                  example: true\n                                  type: boolean\n                                sticky_sessions:\n                                  description: Use sticky sessions. Only available if protocol is \"http\" or \"https\". Default `false`\n                                  example: true\n                                  type: boolean\n                              required:\n                                - cookie_name\n                                - cookie_lifetime\n                              type: object\n                            listen_port:\n                              description: Port the Load Balancer listens on\n                              example: 443\n                              type: integer\n                            protocol:\n                              description: Protocol of the Load Balancer\n                              enum:\n                                - tcp\n                                - http\n                                - https\n                              example: https\n                              type: string\n                            proxyprotocol:\n                              description: Is Proxyprotocol enabled or not\n                              example: false\n                              type: boolean\n                          required:\n                            - protocol\n                            - listen_port\n                            - destination_port\n                            - proxyprotocol\n                            - health_check\n                          title: LoadBalancerService\n                          type: object\n                        type: array\n                      targets:\n                        description: List of targets that belong to this Load Balancer\n                        items:\n                          properties:\n                            health_status:\n                              description: List of health statuses of the services on this target\n                              items:\n                                properties:\n                                  listen_port:\n                                    example: 443\n                                    type: integer\n                                  status:\n                                    example: healthy\n                                    type: string\n                                type: object\n                              type: array\n                            ip:\n                              description: IP targets where the traffic should be routed through. It is only possible to use the (Public or vSwitch) IPs of Hetzner Online Root Servers belonging to the project owner. IPs belonging to other users are blocked. Additionally IPs belonging to services provided by Hetzner Cloud (Servers, Load Balancers, ...) are blocked as well.\n                              properties:\n                                ip:\n                                  description: IP of a server that belongs to the same customer (public IPv4/IPv6) or private IP in a Subnetwork type vswitch.\n                                  example: 203.0.113.1\n                                  type: string\n                              required:\n                                - ip\n                              type: object\n                            label_selector:\n                              description: Label selector and a list of selected targets\n                              properties:\n                                selector:\n                                  description: Label selector\n                                  example: env=prod\n                                  type: string\n                              required:\n                                - selector\n                              type: object\n                            server:\n                              description: Server where the traffic should be routed through\n                              properties:\n                                id:\n                                  description: ID of the Server\n                                  example: 80\n                                  type: integer\n                              required:\n                                - id\n                              title: LoadBalancerTargetServer\n                              type: object\n                            targets:\n                              description: List of selected targets\n                              items:\n                                properties:\n                                  health_status:\n                                    items:\n                                      properties:\n                                        listen_port:\n                                          example: 443\n                                          type: integer\n                                        status:\n                                          example: healthy\n                                          type: string\n                                      type: object\n                                    type: array\n                                  server:\n                                    properties:\n                                      id:\n                                        description: ID of the Server\n                                        example: 85\n                                        type: integer\n                                    required:\n                                      - id\n                                    type: object\n                                  type:\n                                    example: server\n                                    type: string\n                                  use_private_ip:\n                                    example: false\n                                    type: boolean\n                                type: object\n                              type: array\n                            type:\n                              description: Type of the resource\n                              enum:\n                                - server\n                                - label_selector\n                                - ip\n                              type: string\n                            use_private_ip:\n                              description: Use the private network IP instead of the public IP. Default value is false.\n                              type: boolean\n                          required:\n                            - type\n                          title: LoadBalancerTarget\n                          type: object\n                        type: array\n                    required:\n                      - id\n                      - name\n                      - public_net\n                      - private_net\n                      - location\n                      - load_balancer_type\n                      - protection\n                      - labels\n                      - created\n                      - services\n                      - targets\n                      - algorithm\n                      - outgoing_traffic\n                      - ingoing_traffic\n                      - included_traffic\n                    type: object\n                required:\n                  - load_balancer\n                type: object\n          description: The `load_balancer` key contains the Load Balancer\n      summary: Get a Load Balancer\n      tags:\n        - Load Balancers\n    put:\n      description: |\n        Updates a Load Balancer. You can update a Load Balancer’s name and a Load Balancer’s labels.\n\n        Note that when updating labels, the Load Balancer’s current set of labels will be replaced with the labels provided in the request body. So, for example, if you want to add a new label, you have to provide all existing labels plus the new label in the request body.\n\n        Note: if the Load Balancer object changes during the request, the response will be a “conflict” error.\n      parameters:\n        - description: ID of the Load Balancer\n          in: path\n          name: id\n          required: true\n          schema:\n            type: integer\n      requestBody:\n        content:\n          application/json:\n            schema:\n              properties:\n                labels:\n                  description: User-defined labels (key-value pairs)\n                  example:\n                    labelkey: value\n                  type: object\n                name:\n                  description: New Load Balancer name\n                  example: new-name\n                  type: string\n              type: object\n      responses:\n        \"200\":\n          content:\n            application/json:\n              example:\n                load_balancer:\n                  algorithm:\n                    type: round_robin\n                  created: 2016-01-30T23:50:00+00:00\n                  id: 4711\n                  included_traffic: 654321\n                  ingoing_traffic: 123456\n                  labels:\n                    labelkey: value\n                  load_balancer_type:\n                    deprecated: 2016-01-30T23:50:00+00:00\n                    description: LB11\n                    id: 1\n                    max_assigned_certificates: 10\n                    max_connections: 20000\n                    max_services: 5\n                    max_targets: 25\n                    name: lb11\n                    prices:\n                      - location: fsn1\n                        price_hourly:\n                          gross: \"1.1900000000000000\"\n                          net: \"1.0000000000\"\n                        price_monthly:\n                          gross: \"1.1900000000000000\"\n                          net: \"1.0000000000\"\n                  location:\n                    city: Falkenstein\n                    country: DE\n                    description: Falkenstein DC Park 1\n                    id: 1\n                    latitude: 50.47612\n                    longitude: 12.370071\n                    name: fsn1\n                    network_zone: eu-central\n                  name: new-name\n                  outgoing_traffic: 123456\n                  private_net:\n                    - ip: 10.0.0.2\n                      network: 4711\n                  protection:\n                    delete: false\n                  public_net:\n                    enabled: false\n                    ipv4:\n                      ip: 1.2.3.4\n                    ipv6:\n                      ip: 2001:db8::1\n                  services:\n                    - destination_port: 80\n                      health_check:\n                        http:\n                          domain: example.com\n                          path: /\n                          response: '{\"status\": \"ok\"}'\n                          status_codes:\n                            - 2??,3??\n                          tls: false\n                        interval: 15\n                        port: 4711\n                        protocol: http\n                        retries: 3\n                        timeout: 10\n                      http:\n                        certificates:\n                          - 897\n                        cookie_lifetime: 300\n                        cookie_name: HCLBSTICKY\n                        redirect_http: true\n                        sticky_sessions: true\n                      listen_port: 443\n                      protocol: http\n                      proxyprotocol: false\n                  targets:\n                    - health_status:\n                        - listen_port: 443\n                          status: healthy\n                      ip:\n                        ip: 203.0.113.1\n                      label_selector:\n                        selector: env=prod\n                      server:\n                        id: 80\n                      targets:\n                        - health_status:\n                            - listen_port: 443\n                              status: healthy\n                          label_selector: null\n                          server:\n                            id: 80\n                          type: server\n                          use_private_ip: true\n                      type: server\n                      use_private_ip: true\n              schema:\n                properties:\n                  load_balancer:\n                    properties:\n                      algorithm:\n                        description: Algorithm of the Load Balancer\n                        properties:\n                          type:\n                            description: Type of the algorithm\n                            enum:\n                              - round_robin\n                              - least_connections\n                            type: string\n                        required:\n                          - type\n                        type: object\n                      created:\n                        description: Point in time when the Resource was created (in ISO-8601 format)\n                        example: 2016-01-30T23:55:00+00:00\n                        type: string\n                      id:\n                        description: ID of the Resource\n                        example: 42\n                        type: integer\n                      included_traffic:\n                        description: Free Traffic for the current billing period in bytes\n                        example: 10000\n                        type: integer\n                      ingoing_traffic:\n                        description: Inbound Traffic for the current billing period in bytes\n                        nullable: true\n                        type: integer\n                      labels:\n                        additionalProperties:\n                          type: string\n                        description: User-defined labels (key-value pairs)\n                        type: object\n                      load_balancer_type:\n                        properties:\n                          deprecated:\n                            description: Point in time when the Load Balancer type is deprecated (in ISO-8601 format)\n                            example: 2016-01-30T23:50:00+00:00\n                            nullable: true\n                            type: string\n                          description:\n                            description: Description of the Load Balancer type\n                            example: LB11\n                            type: string\n                          id:\n                            description: ID of the Load Balancer type\n                            example: 1\n                            type: number\n                          max_assigned_certificates:\n                            description: Number of SSL Certificates that can be assigned to a single Load Balancer\n                            example: 10\n                            type: number\n                          max_connections:\n                            description: Number of maximum simultaneous open connections\n                            example: 20000\n                            type: number\n                          max_services:\n                            description: Number of services a Load Balancer of this type can have\n                            example: 5\n                            type: number\n                          max_targets:\n                            description: Number of targets a single Load Balancer can have\n                            example: 25\n                            type: number\n                          name:\n                            description: Unique identifier of the Load Balancer type\n                            example: lb11\n                            type: string\n                          prices:\n                            description: Prices in different network zones\n                            items:\n                              properties:\n                                location:\n                                  description: Name of the Location the price is for\n                                  example: fsn1\n                                  type: string\n                                price_hourly:\n                                  description: Hourly costs for a Resource in this Location\n                                  properties:\n                                    gross:\n                                      description: Price with VAT added\n                                      example: \"1.1900000000000000\"\n                                      type: string\n                                    net:\n                                      description: Price without VAT\n                                      example: \"1.0000000000\"\n                                      type: string\n                                  required:\n                                    - net\n                                    - gross\n                                  type: object\n                                price_monthly:\n                                  description: Monthly costs for a Resource in this Location\n                                  properties:\n                                    gross:\n                                      description: Price with VAT added\n                                      example: \"1.1900000000000000\"\n                                      type: string\n                                    net:\n                                      description: Price without VAT\n                                      example: \"1.0000000000\"\n                                      type: string\n                                  required:\n                                    - net\n                                    - gross\n                                  type: object\n                              required:\n                                - location\n                                - price_hourly\n                                - price_monthly\n                              type: object\n                            type: array\n                        required:\n                          - id\n                          - name\n                          - description\n                          - max_connections\n                          - max_services\n                          - max_targets\n                          - max_assigned_certificates\n                          - deprecated\n                          - prices\n                        type: object\n                      location:\n                        properties:\n                          city:\n                            description: City the Location is closest to\n                            example: Falkenstein\n                            type: string\n                          country:\n                            description: ISO 3166-1 alpha-2 code of the country the Location resides in\n                            example: DE\n                            type: string\n                          description:\n                            description: Description of the Location\n                            example: Falkenstein DC Park 1\n                            type: string\n                          id:\n                            description: ID of the Location\n                            example: 1\n                            type: number\n                          latitude:\n                            description: Latitude of the city closest to the Location\n                            example: 50.47612\n                            type: number\n                          longitude:\n                            description: Longitude of the city closest to the Location\n                            example: 12.370071\n                            type: number\n                          name:\n                            description: Unique identifier of the Location\n                            example: fsn1\n                            type: string\n                          network_zone:\n                            description: Name of network zone this Location resides in\n                            example: eu-central\n                            type: string\n                        required:\n                          - id\n                          - name\n                          - description\n                          - country\n                          - city\n                          - latitude\n                          - longitude\n                          - network_zone\n                        type: object\n                      name:\n                        description: Name of the Resource. Must be unique per Project.\n                        example: my-resource\n                        type: string\n                      outgoing_traffic:\n                        description: Outbound Traffic for the current billing period in bytes\n                        nullable: true\n                        type: integer\n                      private_net:\n                        description: Private networks information\n                        items:\n                          properties:\n                            ip:\n                              example: 10.0.0.2\n                              type: string\n                            network:\n                              example: 4711\n                              type: integer\n                          type: object\n                        type: array\n                      protection:\n                        description: Protection configuration for the Resource\n                        properties:\n                          delete:\n                            description: If true, prevents the Resource from being deleted\n                            example: false\n                            type: boolean\n                        required:\n                          - delete\n                        type: object\n                      public_net:\n                        description: Public network information\n                        properties:\n                          enabled:\n                            description: Public Interface enabled or not\n                            type: boolean\n                          ipv4:\n                            description: IP address (v4)\n                            properties:\n                              dns_ptr:\n                                description: Reverse DNS PTR entry for the IPv4 address of this Load Balancer\n                                example: lb1.example.com\n                                nullable: true\n                                type: string\n                              ip:\n                                description: IP address (v4) of this Load Balancer\n                                example: 1.2.3.4\n                                nullable: true\n                                type: string\n                            type: object\n                          ipv6:\n                            description: IP address (v6)\n                            properties:\n                              dns_ptr:\n                                description: Reverse DNS PTR entry for the IPv6 address of this Load Balancer\n                                example: lb1.example.com\n                                nullable: true\n                                type: string\n                              ip:\n                                description: IP address (v6) of this Load Balancer\n                                example: 2001:db8::1\n                                nullable: true\n                                type: string\n                            type: object\n                        required:\n                          - enabled\n                          - ipv4\n                          - ipv6\n                        type: object\n                      services:\n                        description: List of services that belong to this Load Balancer\n                        items:\n                          properties:\n                            destination_port:\n                              description: Port the Load Balancer will balance to\n                              example: 80\n                              type: integer\n                            health_check:\n                              additionalProperties: false\n                              description: Service health check\n                              properties:\n                                http:\n                                  additionalProperties: false\n                                  description: Additional configuration for protocol http\n                                  properties:\n                                    domain:\n                                      description: Host header to send in the HTTP request. May not contain spaces, percent or backslash symbols. Can be null, in that case no host header is sent.\n                                      example: example.com\n                                      nullable: true\n                                      type: string\n                                    path:\n                                      description: HTTP path to use for health checks\n                                      example: /\n                                      type: string\n                                    response:\n                                      description: String that must be contained in HTTP response in order to pass the health check\n                                      example: '{\"status\": \"ok\"}'\n                                      type: string\n                                    status_codes:\n                                      description: List of returned HTTP status codes in order to pass the health check. Supports the wildcards `?` for exactly one character and `*` for multiple ones. The default is to pass the health check for any status code between 2?? and 3??.\n                                      example:\n                                        - 2??\n                                        - 3??\n                                      items:\n                                        type: string\n                                      type: array\n                                    tls:\n                                      description: Use HTTPS for health check\n                                      example: false\n                                      type: boolean\n                                  required:\n                                    - domain\n                                    - path\n                                  type: object\n                                interval:\n                                  description: Time interval in seconds health checks are performed\n                                  example: 15\n                                  type: integer\n                                port:\n                                  description: Port the health check will be performed on\n                                  example: 4711\n                                  type: integer\n                                protocol:\n                                  description: Type of the health check\n                                  enum:\n                                    - tcp\n                                    - http\n                                  example: http\n                                  type: string\n                                retries:\n                                  description: Unsuccessful retries needed until a target is considered unhealthy; an unhealthy target needs the same number of successful retries to become healthy again\n                                  example: 3\n                                  type: integer\n                                timeout:\n                                  description: Time in seconds after an attempt is considered a timeout\n                                  example: 10\n                                  type: integer\n                              required:\n                                - protocol\n                                - port\n                                - interval\n                                - timeout\n                                - retries\n                              title: LoadBalancerServiceHealthCheck\n                              type: object\n                            http:\n                              description: Configuration option for protocols http and https\n                              properties:\n                                certificates:\n                                  description: IDs of the Certificates to use for TLS/SSL termination by the Load Balancer; empty for TLS/SSL passthrough or if `protocol` is \"http\"\n                                  example:\n                                    - 897\n                                  items:\n                                    type: integer\n                                  type: array\n                                cookie_lifetime:\n                                  description: Lifetime of the cookie used for sticky sessions\n                                  example: 300\n                                  type: integer\n                                cookie_name:\n                                  description: Name of the cookie used for sticky sessions\n                                  example: HCLBSTICKY\n                                  type: string\n                                redirect_http:\n                                  description: Redirect HTTP requests to HTTPS. Only available if protocol is \"https\". Default `false`\n                                  example: true\n                                  type: boolean\n                                sticky_sessions:\n                                  description: Use sticky sessions. Only available if protocol is \"http\" or \"https\". Default `false`\n                                  example: true\n                                  type: boolean\n                              required:\n                                - cookie_name\n                                - cookie_lifetime\n                              type: object\n                            listen_port:\n                              description: Port the Load Balancer listens on\n                              example: 443\n                              type: integer\n                            protocol:\n                              description: Protocol of the Load Balancer\n                              enum:\n                                - tcp\n                                - http\n                                - https\n                              example: https\n                              type: string\n                            proxyprotocol:\n                              description: Is Proxyprotocol enabled or not\n                              example: false\n                              type: boolean\n                          required:\n                            - protocol\n                            - listen_port\n                            - destination_port\n                            - proxyprotocol\n                            - health_check\n                          title: LoadBalancerService\n                          type: object\n                        type: array\n                      targets:\n                        description: List of targets that belong to this Load Balancer\n                        items:\n                          properties:\n                            health_status:\n                              description: List of health statuses of the services on this target\n                              items:\n                                properties:\n                                  listen_port:\n                                    example: 443\n                                    type: integer\n                                  status:\n                                    example: healthy\n                                    type: string\n                                type: object\n                              type: array\n                            ip:\n                              description: IP targets where the traffic should be routed through. It is only possible to use the (Public or vSwitch) IPs of Hetzner Online Root Servers belonging to the project owner. IPs belonging to other users are blocked. Additionally IPs belonging to services provided by Hetzner Cloud (Servers, Load Balancers, ...) are blocked as well.\n                              properties:\n                                ip:\n                                  description: IP of a server that belongs to the same customer (public IPv4/IPv6) or private IP in a Subnetwork type vswitch.\n                                  example: 203.0.113.1\n                                  type: string\n                              required:\n                                - ip\n                              type: object\n                            label_selector:\n                              description: Label selector and a list of selected targets\n                              properties:\n                                selector:\n                                  description: Label selector\n                                  example: env=prod\n                                  type: string\n                              required:\n                                - selector\n                              type: object\n                            server:\n                              description: Server where the traffic should be routed through\n                              properties:\n                                id:\n                                  description: ID of the Server\n                                  example: 80\n                                  type: integer\n                              required:\n                                - id\n                              title: LoadBalancerTargetServer\n                              type: object\n                            targets:\n                              description: List of selected targets\n                              items:\n                                properties:\n                                  health_status:\n                                    items:\n                                      properties:\n                                        listen_port:\n                                          example: 443\n                                          type: integer\n                                        status:\n                                          example: healthy\n                                          type: string\n                                      type: object\n                                    type: array\n                                  server:\n                                    properties:\n                                      id:\n                                        description: ID of the Server\n                                        example: 85\n                                        type: integer\n                                    required:\n                                      - id\n                                    type: object\n                                  type:\n                                    example: server\n                                    type: string\n                                  use_private_ip:\n                                    example: false\n                                    type: boolean\n                                type: object\n                              type: array\n                            type:\n                              description: Type of the resource\n                              enum:\n                                - server\n                                - label_selector\n                                - ip\n                              type: string\n                            use_private_ip:\n                              description: Use the private network IP instead of the public IP. Default value is false.\n                              type: boolean\n                          required:\n                            - type\n                          title: LoadBalancerTarget\n                          type: object\n                        type: array\n                    required:\n                      - id\n                      - name\n                      - public_net\n                      - private_net\n                      - location\n                      - load_balancer_type\n                      - protection\n                      - labels\n                      - created\n                      - services\n                      - targets\n                      - algorithm\n                      - outgoing_traffic\n                      - ingoing_traffic\n                      - included_traffic\n                    type: object\n                required:\n                  - load_balancer\n                type: object\n          description: The `load_balancer` key contains the updated Load Balancer\n      summary: Update a Load Balancer\n      tags:\n        - Load Balancers\n  \"/load_balancers/{id}/actions\":\n    get:\n      description: Returns all Action objects for a Load Balancer. You can sort the results by using the `sort` URI parameter, and filter them with the `status` parameter.\n      parameters:\n        - description: ID of the Load Balancer\n          in: path\n          name: id\n          required: true\n          schema:\n            type: integer\n        - description: Can be used multiple times.\n          in: query\n          name: sort\n          required: false\n          schema:\n            enum:\n              - id\n              - id:asc\n              - id:desc\n              - command\n              - command:asc\n              - command:desc\n              - status\n              - status:asc\n              - status:desc\n              - progress\n              - progress:asc\n              - progress:desc\n              - started\n              - started:asc\n              - started:desc\n              - finished\n              - finished:asc\n              - finished:desc\n            title: ParameterSort\n            type: string\n        - description: Can be used multiple times, the response will contain only Actions with specified statuses\n          in: query\n          name: status\n          required: false\n          schema:\n            enum:\n              - running\n              - success\n              - error\n            title: ParameterStatus\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              example:\n                actions:\n                  - command: add_service\n                    error:\n                      code: action_failed\n                      message: Action failed\n                    finished: 2016-01-30T23:56:00+00:00\n                    id: 13\n                    progress: 100\n                    resources:\n                      - id: 4711\n                        type: load_balancer\n                    started: 2016-01-30T23:55:00+00:00\n                    status: success\n              schema:\n                properties:\n                  actions:\n                    items:\n                      properties:\n                        command:\n                          description: Command executed in the Action\n                          example: start_server\n                          type: string\n                        error:\n                          description: Error message for the Action if error occurred, otherwise null\n                          nullable: true\n                          properties:\n                            code:\n                              description: Fixed machine readable code\n                              example: action_failed\n                              type: string\n                            message:\n                              description: Humanized error message\n                              example: Action failed\n                              type: string\n                          required:\n                            - code\n                            - message\n                          type: object\n                        finished:\n                          description: Point in time when the Action was finished (in ISO-8601 format). Only set if the Action is finished otherwise null.\n                          example: 2016-01-30T23:55:00+00:00\n                          nullable: true\n                          type: string\n                        id:\n                          description: ID of the Resource\n                          example: 42\n                          type: integer\n                        progress:\n                          description: Progress of Action in percent\n                          example: 100\n                          type: number\n                        resources:\n                          description: Resources the Action relates to\n                          items:\n                            properties:\n                              id:\n                                description: ID of the Resource\n                                example: 42\n                                type: integer\n                              type:\n                                description: Type of resource referenced\n                                example: server\n                                type: string\n                            required:\n                              - id\n                              - type\n                            type: object\n                          type: array\n                        started:\n                          description: Point in time when the Action was started (in ISO-8601 format)\n                          example: 2016-01-30T23:55:00+00:00\n                          type: string\n                        status:\n                          description: Status of the Action\n                          enum:\n                            - success\n                            - running\n                            - error\n                          type: string\n                      required:\n                        - id\n                        - command\n                        - status\n                        - progress\n                        - started\n                        - finished\n                        - resources\n                        - error\n                      title: Action\n                      type: object\n                    type: array\n                  meta:\n                    properties:\n                      pagination:\n                        properties:\n                          last_page:\n                            description: ID of the last page available. Can be null if the current page is the last one.\n                            example: 4\n                            nullable: true\n                            type: number\n                          next_page:\n                            description: ID of the next page. Can be null if the current page is the last one.\n                            example: 4\n                            nullable: true\n                            type: number\n                          page:\n                            description: Current page number\n                            example: 3\n                            type: number\n                          per_page:\n                            description: Maximum number of items shown per page in the response\n                            example: 25\n                            type: number\n                          previous_page:\n                            description: ID of the previous page. Can be null if the current page is the first one.\n                            example: 2\n                            nullable: true\n                            type: number\n                          total_entries:\n                            description: The total number of entries that exist in the database for this query. Nullable if unknown.\n                            example: 100\n                            nullable: true\n                            type: number\n                        required:\n                          - page\n                          - per_page\n                          - previous_page\n                          - next_page\n                          - last_page\n                          - total_entries\n                        type: object\n                    required:\n                      - pagination\n                    type: object\n                required:\n                  - actions\n                title: ActionsResponse\n                type: object\n          description: The `actions` key contains a list of Actions\n      summary: Get all Actions for a Load Balancer\n      tags:\n        - Load Balancer Actions\n  \"/load_balancers/{id}/actions/add_service\":\n    post:\n      description: |\n        Adds a service to a Load Balancer.\n\n        #### Call specific error codes\n\n        | Code                       | Description                                             |\n        |----------------------------|---------------------------------------------------------|\n        | `source_port_already_used` | The source port you are trying to add is already in use |\n      parameters:\n        - description: ID of the Load Balancer\n          in: path\n          name: id\n          required: true\n          schema:\n            type: integer\n      requestBody:\n        content:\n          application/json:\n            schema:\n              properties:\n                destination_port:\n                  description: Port the Load Balancer will balance to\n                  example: 80\n                  type: integer\n                health_check:\n                  additionalProperties: false\n                  description: Service health check\n                  properties:\n                    http:\n                      additionalProperties: false\n                      description: Additional configuration for protocol http\n                      properties:\n                        domain:\n                          description: Host header to send in the HTTP request. May not contain spaces, percent or backslash symbols. Can be null, in that case no host header is sent.\n                          example: example.com\n                          nullable: true\n                          type: string\n                        path:\n                          description: HTTP path to use for health checks\n                          example: /\n                          type: string\n                        response:\n                          description: String that must be contained in HTTP response in order to pass the health check\n                          example: '{\"status\": \"ok\"}'\n                          type: string\n                        status_codes:\n                          description: List of returned HTTP status codes in order to pass the health check. Supports the wildcards `?` for exactly one character and `*` for multiple ones. The default is to pass the health check for any status code between 2?? and 3??.\n                          example:\n                            - 2??\n                            - 3??\n                          items:\n                            type: string\n                          type: array\n                        tls:\n                          description: Use HTTPS for health check\n                          example: false\n                          type: boolean\n                      required:\n                        - domain\n                        - path\n                      type: object\n                    interval:\n                      description: Time interval in seconds health checks are performed\n                      example: 15\n                      type: integer\n                    port:\n                      description: Port the health check will be performed on\n                      example: 4711\n                      type: integer\n                    protocol:\n                      description: Type of the health check\n                      enum:\n                        - tcp\n                        - http\n                      example: http\n                      type: string\n                    retries:\n                      description: Unsuccessful retries needed until a target is considered unhealthy; an unhealthy target needs the same number of successful retries to become healthy again\n                      example: 3\n                      type: integer\n                    timeout:\n                      description: Time in seconds after an attempt is considered a timeout\n                      example: 10\n                      type: integer\n                  required:\n                    - protocol\n                    - port\n                    - interval\n                    - timeout\n                    - retries\n                  title: LoadBalancerServiceHealthCheck\n                  type: object\n                http:\n                  description: Configuration option for protocols http and https\n                  properties:\n                    certificates:\n                      description: IDs of the Certificates to use for TLS/SSL termination by the Load Balancer; empty for TLS/SSL passthrough or if `protocol` is \"http\"\n                      example:\n                        - 897\n                      items:\n                        type: integer\n                      type: array\n                    cookie_lifetime:\n                      description: Lifetime of the cookie used for sticky sessions\n                      example: 300\n                      type: integer\n                    cookie_name:\n                      description: Name of the cookie used for sticky sessions\n                      example: HCLBSTICKY\n                      type: string\n                    redirect_http:\n                      description: Redirect HTTP requests to HTTPS. Only available if protocol is \"https\". Default `false`\n                      example: true\n                      type: boolean\n                    sticky_sessions:\n                      description: Use sticky sessions. Only available if protocol is \"http\" or \"https\". Default `false`\n                      example: true\n                      type: boolean\n                  required:\n                    - cookie_name\n                    - cookie_lifetime\n                  type: object\n                listen_port:\n                  description: Port the Load Balancer listens on\n                  example: 443\n                  type: integer\n                protocol:\n                  description: Protocol of the Load Balancer\n                  enum:\n                    - tcp\n                    - http\n                    - https\n                  example: https\n                  type: string\n                proxyprotocol:\n                  description: Is Proxyprotocol enabled or not\n                  example: false\n                  type: boolean\n              required:\n                - protocol\n                - listen_port\n                - destination_port\n                - proxyprotocol\n                - health_check\n              title: LoadBalancerService\n              type: object\n      responses:\n        \"201\":\n          content:\n            application/json:\n              example:\n                action:\n                  command: add_service\n                  error:\n                    code: action_failed\n                    message: Action failed\n                  finished: 2016-01-30T23:56:00+00:00\n                  id: 13\n                  progress: 100\n                  resources:\n                    - id: 4711\n                      type: load_balancer\n                  started: 2016-01-30T23:55:00+00:00\n                  status: success\n              schema:\n                properties:\n                  action:\n                    properties:\n                      command:\n                        description: Command executed in the Action\n                        example: start_server\n                        type: string\n                      error:\n                        description: Error message for the Action if error occurred, otherwise null\n                        nullable: true\n                        properties:\n                          code:\n                            description: Fixed machine readable code\n                            example: action_failed\n                            type: string\n                          message:\n                            description: Humanized error message\n                            example: Action failed\n                            type: string\n                        required:\n                          - code\n                          - message\n                        type: object\n                      finished:\n                        description: Point in time when the Action was finished (in ISO-8601 format). Only set if the Action is finished otherwise null.\n                        example: 2016-01-30T23:55:00+00:00\n                        nullable: true\n                        type: string\n                      id:\n                        description: ID of the Resource\n                        example: 42\n                        type: integer\n                      progress:\n                        description: Progress of Action in percent\n                        example: 100\n                        type: number\n                      resources:\n                        description: Resources the Action relates to\n                        items:\n                          properties:\n                            id:\n                              description: ID of the Resource\n                              example: 42\n                              type: integer\n                            type:\n                              description: Type of resource referenced\n                              example: server\n                              type: string\n                          required:\n                            - id\n                            - type\n                          type: object\n                        type: array\n                      started:\n                        description: Point in time when the Action was started (in ISO-8601 format)\n                        example: 2016-01-30T23:55:00+00:00\n                        type: string\n                      status:\n                        description: Status of the Action\n                        enum:\n                          - success\n                          - running\n                          - error\n                        type: string\n                    required:\n                      - id\n                      - command\n                      - status\n                      - progress\n                      - started\n                      - finished\n                      - resources\n                      - error\n                    title: Action\n                    type: object\n                required:\n                  - action\n                title: ActionResponse\n                type: object\n          description: The `action` key contains the `add_service` Action\n      summary: Add Service\n      tags:\n        - Load Balancer Actions\n  \"/load_balancers/{id}/actions/add_target\":\n    post:\n      description: |\n        Adds a target to a Load Balancer.\n\n        #### Call specific error codes\n\n        | Code                                    | Description                                                                                           |\n        |-----------------------------------------|-------------------------------------------------------------------------------------------------------|\n        | `cloud_resource_ip_not_allowed`         | The IP you are trying to add as a target belongs to a Hetzner Cloud resource                          |\n        | `ip_not_owned`                          | The IP you are trying to add as a target is not owned by the Project owner                            |\n        | `load_balancer_not_attached_to_network` | The Load Balancer is not attached to a network                                                        |\n        | `robot_unavailable`                     | Robot was not available. The caller may retry the operation after a short delay.                      |\n        | `server_not_attached_to_network`        | The server you are trying to add as a target is not attached to the same network as the Load Balancer |\n        | `target_already_defined`                | The Load Balancer target you are trying to define is already defined                                  |\n      parameters:\n        - description: ID of the Load Balancer\n          in: path\n          name: id\n          required: true\n          schema:\n            type: integer\n      requestBody:\n        content:\n          application/json:\n            schema:\n              properties:\n                ip:\n                  description: IP targets where the traffic should be routed through. It is only possible to use the (Public or vSwitch) IPs of Hetzner Online Root Servers belonging to the project owner. IPs belonging to other users are blocked. Additionally IPs belonging to services provided by Hetzner Cloud (Servers, Load Balancers, ...) are blocked as well.\n                  properties:\n                    ip:\n                      description: IP of a server that belongs to the same customer (public IPv4/IPv6) or private IP in a Subnetwork type vswitch.\n                      example: 203.0.113.1\n                      type: string\n                  required:\n                    - ip\n                  type: object\n                label_selector:\n                  description: Configuration for label selector targets, required if type is `label_selector`\n                  properties:\n                    selector:\n                      description: Label selector\n                      example: env=prod\n                      type: string\n                  required:\n                    - selector\n                  type: object\n                server:\n                  additionalProperties: false\n                  description: Configuration for type Server, required if type is `server`\n                  properties:\n                    id:\n                      description: ID of the Server\n                      example: 80\n                      type: number\n                  required:\n                    - id\n                  type: object\n                type:\n                  description: Type of the resource\n                  enum:\n                    - server\n                    - label_selector\n                    - ip\n                  type: string\n                use_private_ip:\n                  description: Use the private network IP instead of the public IP of the Server, requires the Server and Load Balancer to be in the same network. Default value is false.\n                  example: true\n                  type: boolean\n              required:\n                - type\n              title: AddTargetRequest\n              type: object\n      responses:\n        \"201\":\n          content:\n            application/json:\n              example:\n                action:\n                  command: add_target\n                  error:\n                    code: action_failed\n                    message: Action failed\n                  finished: 2016-01-30T23:56:00+00:00\n                  id: 13\n                  progress: 100\n                  resources:\n                    - id: 4711\n                      type: load_balancer\n                  started: 2016-01-30T23:55:00+00:00\n                  status: success\n              schema:\n                properties:\n                  action:\n                    properties:\n                      command:\n                        description: Command executed in the Action\n                        example: start_server\n                        type: string\n                      error:\n                        description: Error message for the Action if error occurred, otherwise null\n                        nullable: true\n                        properties:\n                          code:\n                            description: Fixed machine readable code\n                            example: action_failed\n                            type: string\n                          message:\n                            description: Humanized error message\n                            example: Action failed\n                            type: string\n                        required:\n                          - code\n                          - message\n                        type: object\n                      finished:\n                        description: Point in time when the Action was finished (in ISO-8601 format). Only set if the Action is finished otherwise null.\n                        example: 2016-01-30T23:55:00+00:00\n                        nullable: true\n                        type: string\n                      id:\n                        description: ID of the Resource\n                        example: 42\n                        type: integer\n                      progress:\n                        description: Progress of Action in percent\n                        example: 100\n                        type: number\n                      resources:\n                        description: Resources the Action relates to\n                        items:\n                          properties:\n                            id:\n                              description: ID of the Resource\n                              example: 42\n                              type: integer\n                            type:\n                              description: Type of resource referenced\n                              example: server\n                              type: string\n                          required:\n                            - id\n                            - type\n                          type: object\n                        type: array\n                      started:\n                        description: Point in time when the Action was started (in ISO-8601 format)\n                        example: 2016-01-30T23:55:00+00:00\n                        type: string\n                      status:\n                        description: Status of the Action\n                        enum:\n                          - success\n                          - running\n                          - error\n                        type: string\n                    required:\n                      - id\n                      - command\n                      - status\n                      - progress\n                      - started\n                      - finished\n                      - resources\n                      - error\n                    title: Action\n                    type: object\n                required:\n                  - action\n                title: ActionResponse\n                type: object\n          description: The `action` key contains the `add_target` Action\n      summary: Add Target\n      tags:\n        - Load Balancer Actions\n  \"/load_balancers/{id}/actions/attach_to_network\":\n    post:\n      description: |\n        Attach a Load Balancer to a Network.\n\n        **Call specific error codes**\n\n        | Code                             | Description                                                           |\n        |----------------------------------|-----------------------------------------------------------------------|\n        | `load_balancer_already_attached` | The Load Balancer is already attached to a network                    |\n        | `ip_not_available`               | The provided Network IP is not available                              |\n        | `no_subnet_available`            | No Subnet or IP is available for the Load Balancer within the network |\n      parameters:\n        - description: ID of the Load Balancer\n          in: path\n          name: id\n          required: true\n          schema:\n            type: integer\n      requestBody:\n        content:\n          application/json:\n            schema:\n              properties:\n                ip:\n                  description: IP to request to be assigned to this Load Balancer; if you do not provide this then you will be auto assigned an IP address\n                  example: 10.0.1.1\n                  type: string\n                network:\n                  description: ID of an existing network to attach the Load Balancer to\n                  example: 4711\n                  type: number\n              required:\n                - network\n              type: object\n      responses:\n        \"201\":\n          content:\n            application/json:\n              example:\n                action:\n                  command: attach_to_network\n                  error:\n                    code: action_failed\n                    message: Action failed\n                  finished: 2016-01-30T23:56:00+00:00\n                  id: 13\n                  progress: 100\n                  resources:\n                    - id: 4711\n                      type: load_balancer\n                  started: 2016-01-30T23:55:00+00:00\n                  status: success\n              schema:\n                properties:\n                  action:\n                    properties:\n                      command:\n                        description: Command executed in the Action\n                        example: start_server\n                        type: string\n                      error:\n                        description: Error message for the Action if error occurred, otherwise null\n                        nullable: true\n                        properties:\n                          code:\n                            description: Fixed machine readable code\n                            example: action_failed\n                            type: string\n                          message:\n                            description: Humanized error message\n                            example: Action failed\n                            type: string\n                        required:\n                          - code\n                          - message\n                        type: object\n                      finished:\n                        description: Point in time when the Action was finished (in ISO-8601 format). Only set if the Action is finished otherwise null.\n                        example: 2016-01-30T23:55:00+00:00\n                        nullable: true\n                        type: string\n                      id:\n                        description: ID of the Resource\n                        example: 42\n                        type: integer\n                      progress:\n                        description: Progress of Action in percent\n                        example: 100\n                        type: number\n                      resources:\n                        description: Resources the Action relates to\n                        items:\n                          properties:\n                            id:\n                              description: ID of the Resource\n                              example: 42\n                              type: integer\n                            type:\n                              description: Type of resource referenced\n                              example: server\n                              type: string\n                          required:\n                            - id\n                            - type\n                          type: object\n                        type: array\n                      started:\n                        description: Point in time when the Action was started (in ISO-8601 format)\n                        example: 2016-01-30T23:55:00+00:00\n                        type: string\n                      status:\n                        description: Status of the Action\n                        enum:\n                          - success\n                          - running\n                          - error\n                        type: string\n                    required:\n                      - id\n                      - command\n                      - status\n                      - progress\n                      - started\n                      - finished\n                      - resources\n                      - error\n                    title: Action\n                    type: object\n                required:\n                  - action\n                title: ActionResponse\n                type: object\n          description: The `action` key contains the `attach_to_network` Action\n      summary: Attach a Load Balancer to a Network\n      tags:\n        - Load Balancer Actions\n  \"/load_balancers/{id}/actions/change_algorithm\":\n    post:\n      description: Change the algorithm that determines to which target new requests are sent.\n      parameters:\n        - description: ID of the Load Balancer\n          in: path\n          name: id\n          required: true\n          schema:\n            type: integer\n      requestBody:\n        content:\n          application/json:\n            schema:\n              properties:\n                type:\n                  description: Algorithm of the Load Balancer\n                  enum:\n                    - round_robin\n                    - least_connections\n                  type: string\n              required:\n                - type\n              type: object\n      responses:\n        \"201\":\n          content:\n            application/json:\n              example:\n                action:\n                  command: change_algorithm\n                  error:\n                    code: action_failed\n                    message: Action failed\n                  finished: 2016-01-30T23:56:00+00:00\n                  id: 13\n                  progress: 100\n                  resources:\n                    - id: 4711\n                      type: load_balancer\n                  started: 2016-01-30T23:55:00+00:00\n                  status: success\n              schema:\n                properties:\n                  action:\n                    properties:\n                      command:\n                        description: Command executed in the Action\n                        example: start_server\n                        type: string\n                      error:\n                        description: Error message for the Action if error occurred, otherwise null\n                        nullable: true\n                        properties:\n                          code:\n                            description: Fixed machine readable code\n                            example: action_failed\n                            type: string\n                          message:\n                            description: Humanized error message\n                            example: Action failed\n                            type: string\n                        required:\n                          - code\n                          - message\n                        type: object\n                      finished:\n                        description: Point in time when the Action was finished (in ISO-8601 format). Only set if the Action is finished otherwise null.\n                        example: 2016-01-30T23:55:00+00:00\n                        nullable: true\n                        type: string\n                      id:\n                        description: ID of the Resource\n                        example: 42\n                        type: integer\n                      progress:\n                        description: Progress of Action in percent\n                        example: 100\n                        type: number\n                      resources:\n                        description: Resources the Action relates to\n                        items:\n                          properties:\n                            id:\n                              description: ID of the Resource\n                              example: 42\n                              type: integer\n                            type:\n                              description: Type of resource referenced\n                              example: server\n                              type: string\n                          required:\n                            - id\n                            - type\n                          type: object\n                        type: array\n                      started:\n                        description: Point in time when the Action was started (in ISO-8601 format)\n                        example: 2016-01-30T23:55:00+00:00\n                        type: string\n                      status:\n                        description: Status of the Action\n                        enum:\n                          - success\n                          - running\n                          - error\n                        type: string\n                    required:\n                      - id\n                      - command\n                      - status\n                      - progress\n                      - started\n                      - finished\n                      - resources\n                      - error\n                    title: Action\n                    type: object\n                required:\n                  - action\n                title: ActionResponse\n                type: object\n          description: The `action` key contains the `change_algorithm` Action\n      summary: Change Algorithm\n      tags:\n        - Load Balancer Actions\n  \"/load_balancers/{id}/actions/change_dns_ptr\":\n    post:\n      description: |\n        Changes the hostname that will appear when getting the hostname belonging to the public IPs (IPv4 and IPv6) of this Load Balancer.\n\n        Floating IPs assigned to the Server are not affected by this.\n      parameters:\n        - description: ID of the Load Balancer\n          in: path\n          name: id\n          required: true\n          schema:\n            type: integer\n      requestBody:\n        content:\n          application/json:\n            schema:\n              properties:\n                dns_ptr:\n                  description: Hostname to set as a reverse DNS PTR entry\n                  example: lb1.example.com\n                  nullable: true\n                  type: string\n                ip:\n                  description: Public IP address for which the reverse DNS entry should be set\n                  example: 1.2.3.4\n                  type: string\n              required:\n                - ip\n                - dns_ptr\n              title: ChangeLoadbalancerDnsPtrRequest\n              type: object\n        description: Select the IP address for which to change the DNS entry by passing `ip`. It can be either IPv4 or IPv6. The target hostname is set by passing `dns_ptr`.\n      responses:\n        \"201\":\n          content:\n            application/json:\n              example:\n                action:\n                  command: change_dns_ptr\n                  error:\n                    code: action_failed\n                    message: Action failed\n                  finished: null\n                  id: 13\n                  progress: 0\n                  resources:\n                    - id: 42\n                      type: load_balancer\n                  started: 2016-01-30T23:50:00+00:00\n                  status: running\n              schema:\n                properties:\n                  action:\n                    properties:\n                      command:\n                        description: Command executed in the Action\n                        example: start_server\n                        type: string\n                      error:\n                        description: Error message for the Action if error occurred, otherwise null\n                        nullable: true\n                        properties:\n                          code:\n                            description: Fixed machine readable code\n                            example: action_failed\n                            type: string\n                          message:\n                            description: Humanized error message\n                            example: Action failed\n                            type: string\n                        required:\n                          - code\n                          - message\n                        type: object\n                      finished:\n                        description: Point in time when the Action was finished (in ISO-8601 format). Only set if the Action is finished otherwise null.\n                        example: 2016-01-30T23:55:00+00:00\n                        nullable: true\n                        type: string\n                      id:\n                        description: ID of the Resource\n                        example: 42\n                        type: integer\n                      progress:\n                        description: Progress of Action in percent\n                        example: 100\n                        type: number\n                      resources:\n                        description: Resources the Action relates to\n                        items:\n                          properties:\n                            id:\n                              description: ID of the Resource\n                              example: 42\n                              type: integer\n                            type:\n                              description: Type of resource referenced\n                              example: server\n                              type: string\n                          required:\n                            - id\n                            - type\n                          type: object\n                        type: array\n                      started:\n                        description: Point in time when the Action was started (in ISO-8601 format)\n                        example: 2016-01-30T23:55:00+00:00\n                        type: string\n                      status:\n                        description: Status of the Action\n                        enum:\n                          - success\n                          - running\n                          - error\n                        type: string\n                    required:\n                      - id\n                      - command\n                      - status\n                      - progress\n                      - started\n                      - finished\n                      - resources\n                      - error\n                    title: Action\n                    type: object\n                required:\n                  - action\n                title: ActionResponse\n                type: object\n          description: The `action` key in the reply contains an Action object with this structure\n      summary: Change reverse DNS entry for this Load Balancer\n      tags:\n        - Load Balancer Actions\n  \"/load_balancers/{id}/actions/change_protection\":\n    post:\n      description: Changes the protection configuration of a Load Balancer.\n      parameters:\n        - description: ID of the Load Balancer\n          in: path\n          name: id\n          required: true\n          schema:\n            type: integer\n      requestBody:\n        content:\n          application/json:\n            schema:\n              properties:\n                delete:\n                  description: If true, prevents the Load Balancer from being deleted\n                  example: true\n                  type: boolean\n              type: object\n      responses:\n        \"201\":\n          content:\n            application/json:\n              example:\n                action:\n                  command: change_protection\n                  error:\n                    code: action_failed\n                    message: Action failed\n                  finished: 2016-01-30T23:56:00+00:00\n                  id: 13\n                  progress: 100\n                  resources:\n                    - id: 4711\n                      type: load_balancer\n                  started: 2016-01-30T23:55:00+00:00\n                  status: success\n              schema:\n                properties:\n                  action:\n                    properties:\n                      command:\n                        description: Command executed in the Action\n                        example: start_server\n                        type: string\n                      error:\n                        description: Error message for the Action if error occurred, otherwise null\n                        nullable: true\n                        properties:\n                          code:\n                            description: Fixed machine readable code\n                            example: action_failed\n                            type: string\n                          message:\n                            description: Humanized error message\n                            example: Action failed\n                            type: string\n                        required:\n                          - code\n                          - message\n                        type: object\n                      finished:\n                        description: Point in time when the Action was finished (in ISO-8601 format). Only set if the Action is finished otherwise null.\n                        example: 2016-01-30T23:55:00+00:00\n                        nullable: true\n                        type: string\n                      id:\n                        description: ID of the Resource\n                        example: 42\n                        type: integer\n                      progress:\n                        description: Progress of Action in percent\n                        example: 100\n                        type: number\n                      resources:\n                        description: Resources the Action relates to\n                        items:\n                          properties:\n                            id:\n                              description: ID of the Resource\n                              example: 42\n                              type: integer\n                            type:\n                              description: Type of resource referenced\n                              example: server\n                              type: string\n                          required:\n                            - id\n                            - type\n                          type: object\n                        type: array\n                      started:\n                        description: Point in time when the Action was started (in ISO-8601 format)\n                        example: 2016-01-30T23:55:00+00:00\n                        type: string\n                      status:\n                        description: Status of the Action\n                        enum:\n                          - success\n                          - running\n                          - error\n                        type: string\n                    required:\n                      - id\n                      - command\n                      - status\n                      - progress\n                      - started\n                      - finished\n                      - resources\n                      - error\n                    title: Action\n                    type: object\n                required:\n                  - action\n                title: ActionResponse\n                type: object\n          description: The `action` key contains the `change_protection` Action\n      summary: Change Load Balancer Protection\n      tags:\n        - Load Balancer Actions\n  \"/load_balancers/{id}/actions/change_type\":\n    post:\n      description: |\n        Changes the type (Max Services, Max Targets and Max Connections) of a Load Balancer.\n\n        **Call specific error codes**\n\n        | Code                         | Description                                                     |\n        |------------------------------|-----------------------------------------------------------------|\n        | `invalid_load_balancer_type` | The Load Balancer type does not fit for the given Load Balancer |\n      parameters:\n        - description: ID of the Load Balancer\n          in: path\n          name: id\n          required: true\n          schema:\n            type: integer\n      requestBody:\n        content:\n          application/json:\n            schema:\n              properties:\n                load_balancer_type:\n                  description: ID or name of Load Balancer type the Load Balancer should migrate to\n                  example: lb21\n                  type: string\n              required:\n                - load_balancer_type\n              title: ChangeTypeRequest\n              type: object\n      responses:\n        \"201\":\n          content:\n            application/json:\n              example:\n                action:\n                  command: change_load_balancer_type\n                  error:\n                    code: action_failed\n                    message: Action failed\n                  finished: null\n                  id: 13\n                  progress: 0\n                  resources:\n                    - id: 42\n                      type: server\n                  started: 2016-01-30T23:50:00+00:00\n                  status: running\n              schema:\n                properties:\n                  action:\n                    properties:\n                      command:\n                        description: Command executed in the Action\n                        example: start_server\n                        type: string\n                      error:\n                        description: Error message for the Action if error occurred, otherwise null\n                        nullable: true\n                        properties:\n                          code:\n                            description: Fixed machine readable code\n                            example: action_failed\n                            type: string\n                          message:\n                            description: Humanized error message\n                            example: Action failed\n                            type: string\n                        required:\n                          - code\n                          - message\n                        type: object\n                      finished:\n                        description: Point in time when the Action was finished (in ISO-8601 format). Only set if the Action is finished otherwise null.\n                        example: 2016-01-30T23:55:00+00:00\n                        nullable: true\n                        type: string\n                      id:\n                        description: ID of the Resource\n                        example: 42\n                        type: integer\n                      progress:\n                        description: Progress of Action in percent\n                        example: 100\n                        type: number\n                      resources:\n                        description: Resources the Action relates to\n                        items:\n                          properties:\n                            id:\n                              description: ID of the Resource\n                              example: 42\n                              type: integer\n                            type:\n                              description: Type of resource referenced\n                              example: server\n                              type: string\n                          required:\n                            - id\n                            - type\n                          type: object\n                        type: array\n                      started:\n                        description: Point in time when the Action was started (in ISO-8601 format)\n                        example: 2016-01-30T23:55:00+00:00\n                        type: string\n                      status:\n                        description: Status of the Action\n                        enum:\n                          - success\n                          - running\n                          - error\n                        type: string\n                    required:\n                      - id\n                      - command\n                      - status\n                      - progress\n                      - started\n                      - finished\n                      - resources\n                      - error\n                    title: Action\n                    type: object\n                required:\n                  - action\n                title: ActionResponse\n                type: object\n          description: The `action` key contains the `change_load_balancer_type` Action\n      summary: Change the Type of a Load Balancer\n      tags:\n        - Load Balancer Actions\n  \"/load_balancers/{id}/actions/delete_service\":\n    post:\n      description: Delete a service of a Load Balancer.\n      parameters:\n        - description: ID of the Load Balancer\n          in: path\n          name: id\n          required: true\n          schema:\n            type: integer\n      requestBody:\n        content:\n          application/json:\n            schema:\n              properties:\n                listen_port:\n                  description: The listen port of the service you want to delete\n                  example: 4711\n                  type: number\n              required:\n                - listen_port\n              type: object\n      responses:\n        \"201\":\n          content:\n            application/json:\n              example:\n                action:\n                  command: delete_service\n                  error:\n                    code: action_failed\n                    message: Action failed\n                  finished: 2016-01-30T23:56:00+00:00\n                  id: 13\n                  progress: 100\n                  resources:\n                    - id: 4711\n                      type: load_balancer\n                  started: 2016-01-30T23:55:00+00:00\n                  status: success\n              schema:\n                properties:\n                  action:\n                    properties:\n                      command:\n                        description: Command executed in the Action\n                        example: start_server\n                        type: string\n                      error:\n                        description: Error message for the Action if error occurred, otherwise null\n                        nullable: true\n                        properties:\n                          code:\n                            description: Fixed machine readable code\n                            example: action_failed\n                            type: string\n                          message:\n                            description: Humanized error message\n                            example: Action failed\n                            type: string\n                        required:\n                          - code\n                          - message\n                        type: object\n                      finished:\n                        description: Point in time when the Action was finished (in ISO-8601 format). Only set if the Action is finished otherwise null.\n                        example: 2016-01-30T23:55:00+00:00\n                        nullable: true\n                        type: string\n                      id:\n                        description: ID of the Resource\n                        example: 42\n                        type: integer\n                      progress:\n                        description: Progress of Action in percent\n                        example: 100\n                        type: number\n                      resources:\n                        description: Resources the Action relates to\n                        items:\n                          properties:\n                            id:\n                              description: ID of the Resource\n                              example: 42\n                              type: integer\n                            type:\n                              description: Type of resource referenced\n                              example: server\n                              type: string\n                          required:\n                            - id\n                            - type\n                          type: object\n                        type: array\n                      started:\n                        description: Point in time when the Action was started (in ISO-8601 format)\n                        example: 2016-01-30T23:55:00+00:00\n                        type: string\n                      status:\n                        description: Status of the Action\n                        enum:\n                          - success\n                          - running\n                          - error\n                        type: string\n                    required:\n                      - id\n                      - command\n                      - status\n                      - progress\n                      - started\n                      - finished\n                      - resources\n                      - error\n                    title: Action\n                    type: object\n                required:\n                  - action\n                title: ActionResponse\n                type: object\n          description: The `action` key contains the `delete_service` Action\n      summary: Delete Service\n      tags:\n        - Load Balancer Actions\n  \"/load_balancers/{id}/actions/detach_from_network\":\n    post:\n      description: Detaches a Load Balancer from a network.\n      parameters:\n        - description: ID of the Load Balancer\n          in: path\n          name: id\n          required: true\n          schema:\n            type: integer\n      requestBody:\n        content:\n          application/json:\n            schema:\n              properties:\n                network:\n                  description: ID of an existing network to detach the Load Balancer from\n                  example: 4711\n                  type: number\n              required:\n                - network\n              type: object\n      responses:\n        \"201\":\n          content:\n            application/json:\n              example:\n                action:\n                  command: detach_from_network\n                  error:\n                    code: action_failed\n                    message: Action failed\n                  finished: null\n                  id: 13\n                  progress: 0\n                  resources:\n                    - id: 42\n                      type: server\n                    - id: 4711\n                      type: network\n                  started: 2016-01-30T23:50:00+00:00\n                  status: running\n              schema:\n                properties:\n                  action:\n                    properties:\n                      command:\n                        description: Command executed in the Action\n                        example: start_server\n                        type: string\n                      error:\n                        description: Error message for the Action if error occurred, otherwise null\n                        nullable: true\n                        properties:\n                          code:\n                            description: Fixed machine readable code\n                            example: action_failed\n                            type: string\n                          message:\n                            description: Humanized error message\n                            example: Action failed\n                            type: string\n                        required:\n                          - code\n                          - message\n                        type: object\n                      finished:\n                        description: Point in time when the Action was finished (in ISO-8601 format). Only set if the Action is finished otherwise null.\n                        example: 2016-01-30T23:55:00+00:00\n                        nullable: true\n                        type: string\n                      id:\n                        description: ID of the Resource\n                        example: 42\n                        type: integer\n                      progress:\n                        description: Progress of Action in percent\n                        example: 100\n                        type: number\n                      resources:\n                        description: Resources the Action relates to\n                        items:\n                          properties:\n                            id:\n                              description: ID of the Resource\n                              example: 42\n                              type: integer\n                            type:\n                              description: Type of resource referenced\n                              example: server\n                              type: string\n                          required:\n                            - id\n                            - type\n                          type: object\n                        type: array\n                      started:\n                        description: Point in time when the Action was started (in ISO-8601 format)\n                        example: 2016-01-30T23:55:00+00:00\n                        type: string\n                      status:\n                        description: Status of the Action\n                        enum:\n                          - success\n                          - running\n                          - error\n                        type: string\n                    required:\n                      - id\n                      - command\n                      - status\n                      - progress\n                      - started\n                      - finished\n                      - resources\n                      - error\n                    title: Action\n                    type: object\n                required:\n                  - action\n                title: ActionResponse\n                type: object\n          description: The `action` key contains the `detach_from_network` Action\n      summary: Detach a Load Balancer from a Network\n      tags:\n        - Load Balancer Actions\n  \"/load_balancers/{id}/actions/disable_public_interface\":\n    post:\n      description: |\n        Disable the public interface of a Load Balancer. The Load Balancer will be not accessible from the internet via its public IPs.\n\n        #### Call specific error codes\n\n        | Code                                      | Description                                                                    |\n        |-------------------------------------------|--------------------------------------------------------------------------------|\n        | `load_balancer_not_attached_to_network`   |  The Load Balancer is not attached to a network                                |\n        | `targets_without_use_private_ip`          | The Load Balancer has targets that use the public IP instead of the private IP |\n      parameters:\n        - description: ID of the Load Balancer\n          in: path\n          name: id\n          required: true\n          schema:\n            type: integer\n      responses:\n        \"201\":\n          content:\n            application/json:\n              example:\n                action:\n                  command: disable_public_interface\n                  error:\n                    code: action_failed\n                    message: Action failed\n                  finished: null\n                  id: 13\n                  progress: 0\n                  resources:\n                    - id: 42\n                      type: server\n                    - id: 4711\n                      type: network\n                  started: 2016-01-30T23:50:00+00:00\n                  status: running\n              schema:\n                properties:\n                  action:\n                    properties:\n                      command:\n                        description: Command executed in the Action\n                        example: start_server\n                        type: string\n                      error:\n                        description: Error message for the Action if error occurred, otherwise null\n                        nullable: true\n                        properties:\n                          code:\n                            description: Fixed machine readable code\n                            example: action_failed\n                            type: string\n                          message:\n                            description: Humanized error message\n                            example: Action failed\n                            type: string\n                        required:\n                          - code\n                          - message\n                        type: object\n                      finished:\n                        description: Point in time when the Action was finished (in ISO-8601 format). Only set if the Action is finished otherwise null.\n                        example: 2016-01-30T23:55:00+00:00\n                        nullable: true\n                        type: string\n                      id:\n                        description: ID of the Resource\n                        example: 42\n                        type: integer\n                      progress:\n                        description: Progress of Action in percent\n                        example: 100\n                        type: number\n                      resources:\n                        description: Resources the Action relates to\n                        items:\n                          properties:\n                            id:\n                              description: ID of the Resource\n                              example: 42\n                              type: integer\n                            type:\n                              description: Type of resource referenced\n                              example: server\n                              type: string\n                          required:\n                            - id\n                            - type\n                          type: object\n                        type: array\n                      started:\n                        description: Point in time when the Action was started (in ISO-8601 format)\n                        example: 2016-01-30T23:55:00+00:00\n                        type: string\n                      status:\n                        description: Status of the Action\n                        enum:\n                          - success\n                          - running\n                          - error\n                        type: string\n                    required:\n                      - id\n                      - command\n                      - status\n                      - progress\n                      - started\n                      - finished\n                      - resources\n                      - error\n                    title: Action\n                    type: object\n                required:\n                  - action\n                title: ActionResponse\n                type: object\n          description: The `action` key contains the `disable_public_interface` Action\n      summary: Disable the public interface of a Load Balancer\n      tags:\n        - Load Balancer Actions\n  \"/load_balancers/{id}/actions/enable_public_interface\":\n    post:\n      description: Enable the public interface of a Load Balancer. The Load Balancer will be accessible from the internet via its public IPs.\n      parameters:\n        - description: ID of the Load Balancer\n          in: path\n          name: id\n          required: true\n          schema:\n            type: integer\n      responses:\n        \"201\":\n          content:\n            application/json:\n              example:\n                action:\n                  command: enable_public_interface\n                  error:\n                    code: action_failed\n                    message: Action failed\n                  finished: null\n                  id: 13\n                  progress: 0\n                  resources:\n                    - id: 42\n                      type: server\n                    - id: 4711\n                      type: network\n                  started: 2016-01-30T23:50:00+00:00\n                  status: running\n              schema:\n                properties:\n                  action:\n                    properties:\n                      command:\n                        description: Command executed in the Action\n                        example: start_server\n                        type: string\n                      error:\n                        description: Error message for the Action if error occurred, otherwise null\n                        nullable: true\n                        properties:\n                          code:\n                            description: Fixed machine readable code\n                            example: action_failed\n                            type: string\n                          message:\n                            description: Humanized error message\n                            example: Action failed\n                            type: string\n                        required:\n                          - code\n                          - message\n                        type: object\n                      finished:\n                        description: Point in time when the Action was finished (in ISO-8601 format). Only set if the Action is finished otherwise null.\n                        example: 2016-01-30T23:55:00+00:00\n                        nullable: true\n                        type: string\n                      id:\n                        description: ID of the Resource\n                        example: 42\n                        type: integer\n                      progress:\n                        description: Progress of Action in percent\n                        example: 100\n                        type: number\n                      resources:\n                        description: Resources the Action relates to\n                        items:\n                          properties:\n                            id:\n                              description: ID of the Resource\n                              example: 42\n                              type: integer\n                            type:\n                              description: Type of resource referenced\n                              example: server\n                              type: string\n                          required:\n                            - id\n                            - type\n                          type: object\n                        type: array\n                      started:\n                        description: Point in time when the Action was started (in ISO-8601 format)\n                        example: 2016-01-30T23:55:00+00:00\n                        type: string\n                      status:\n                        description: Status of the Action\n                        enum:\n                          - success\n                          - running\n                          - error\n                        type: string\n                    required:\n                      - id\n                      - command\n                      - status\n                      - progress\n                      - started\n                      - finished\n                      - resources\n                      - error\n                    title: Action\n                    type: object\n                required:\n                  - action\n                title: ActionResponse\n                type: object\n          description: The `action` key contains the `enable_public_interface` Action\n      summary: Enable the public interface of a Load Balancer\n      tags:\n        - Load Balancer Actions\n  \"/load_balancers/{id}/actions/remove_target\":\n    post:\n      description: Removes a target from a Load Balancer.\n      parameters:\n        - description: ID of the Load Balancer\n          in: path\n          name: id\n          required: true\n          schema:\n            type: integer\n      requestBody:\n        content:\n          application/json:\n            schema:\n              properties:\n                ip:\n                  description: IP targets where the traffic should be routed through. It is only possible to use the (Public or vSwitch) IPs of Hetzner Online Root Servers belonging to the project owner. IPs belonging to other users are blocked. Additionally IPs belonging to services provided by Hetzner Cloud (Servers, Load Balancers, ...) are blocked as well.\n                  properties:\n                    ip:\n                      description: IP of a server that belongs to the same customer (public IPv4/IPv6) or private IP in a Subnetwork type vswitch.\n                      example: 203.0.113.1\n                      type: string\n                  required:\n                    - ip\n                  type: object\n                label_selector:\n                  description: Configuration for label selector targets, required if type is `label_selector`\n                  properties:\n                    selector:\n                      description: Label selector\n                      example: env=prod\n                      type: string\n                  required:\n                    - selector\n                  type: object\n                server:\n                  additionalProperties: false\n                  description: Configuration for type Server, required if type is `server`\n                  properties:\n                    id:\n                      description: ID of the Server\n                      example: 80\n                      type: number\n                  required:\n                    - id\n                  type: object\n                type:\n                  description: Type of the resource\n                  enum:\n                    - server\n                    - label_selector\n                    - ip\n                  type: string\n              required:\n                - type\n              title: RemoveTargetRequest\n              type: object\n      responses:\n        \"201\":\n          content:\n            application/json:\n              example:\n                action:\n                  command: remove_target\n                  error:\n                    code: action_failed\n                    message: Action failed\n                  finished: 2016-01-30T23:56:00+00:00\n                  id: 13\n                  progress: 100\n                  resources:\n                    - id: 4711\n                      type: load_balancer\n                  started: 2016-01-30T23:55:00+00:00\n                  status: success\n              schema:\n                properties:\n                  action:\n                    properties:\n                      command:\n                        description: Command executed in the Action\n                        example: start_server\n                        type: string\n                      error:\n                        description: Error message for the Action if error occurred, otherwise null\n                        nullable: true\n                        properties:\n                          code:\n                            description: Fixed machine readable code\n                            example: action_failed\n                            type: string\n                          message:\n                            description: Humanized error message\n                            example: Action failed\n                            type: string\n                        required:\n                          - code\n                          - message\n                        type: object\n                      finished:\n                        description: Point in time when the Action was finished (in ISO-8601 format). Only set if the Action is finished otherwise null.\n                        example: 2016-01-30T23:55:00+00:00\n                        nullable: true\n                        type: string\n                      id:\n                        description: ID of the Resource\n                        example: 42\n                        type: integer\n                      progress:\n                        description: Progress of Action in percent\n                        example: 100\n                        type: number\n                      resources:\n                        description: Resources the Action relates to\n                        items:\n                          properties:\n                            id:\n                              description: ID of the Resource\n                              example: 42\n                              type: integer\n                            type:\n                              description: Type of resource referenced\n                              example: server\n                              type: string\n                          required:\n                            - id\n                            - type\n                          type: object\n                        type: array\n                      started:\n                        description: Point in time when the Action was started (in ISO-8601 format)\n                        example: 2016-01-30T23:55:00+00:00\n                        type: string\n                      status:\n                        description: Status of the Action\n                        enum:\n                          - success\n                          - running\n                          - error\n                        type: string\n                    required:\n                      - id\n                      - command\n                      - status\n                      - progress\n                      - started\n                      - finished\n                      - resources\n                      - error\n                    title: Action\n                    type: object\n                required:\n                  - action\n                title: ActionResponse\n                type: object\n          description: The `action` key contains the `remove_target` Action\n      summary: Remove Target\n      tags:\n        - Load Balancer Actions\n  \"/load_balancers/{id}/actions/update_service\":\n    post:\n      description: |\n        Updates a Load Balancer Service.\n\n        #### Call specific error codes\n\n        | Code                       | Description                                             |\n        |----------------------------|---------------------------------------------------------|\n        | `source_port_already_used` | The source port you are trying to add is already in use |\n      parameters:\n        - description: ID of the Load Balancer\n          in: path\n          name: id\n          required: true\n          schema:\n            type: integer\n      requestBody:\n        content:\n          application/json:\n            schema:\n              properties:\n                destination_port:\n                  description: Port the Load Balancer will balance to\n                  example: 80\n                  type: integer\n                health_check:\n                  additionalProperties: false\n                  description: Service health check\n                  properties:\n                    http:\n                      additionalProperties: false\n                      description: Additional configuration for protocol http\n                      properties:\n                        domain:\n                          description: Host header to send in the HTTP request. May not contain spaces, percent or backslash symbols. Can be null, in that case no host header is sent.\n                          example: example.com\n                          nullable: true\n                          type: string\n                        path:\n                          description: HTTP path to use for health checks\n                          example: /\n                          type: string\n                        response:\n                          description: String that must be contained in HTTP response in order to pass the health check\n                          example: '{\"status\": \"ok\"}'\n                          type: string\n                        status_codes:\n                          description: List of returned HTTP status codes in order to pass the health check. Supports the wildcards `?` for exactly one character and `*` for multiple ones. The default is to pass the health check for any status code between 2?? and 3??.\n                          example:\n                            - 2??\n                            - 3??\n                          items:\n                            type: string\n                          type: array\n                        tls:\n                          description: Use HTTPS for health check\n                          example: false\n                          type: boolean\n                      required:\n                        - domain\n                        - path\n                      type: object\n                    interval:\n                      description: Time interval in seconds health checks are performed\n                      example: 15\n                      type: integer\n                    port:\n                      description: Port the health check will be performed on\n                      example: 4711\n                      type: integer\n                    protocol:\n                      description: Type of the health check\n                      enum:\n                        - tcp\n                        - http\n                      example: http\n                      type: string\n                    retries:\n                      description: Unsuccessful retries needed until a target is considered unhealthy; an unhealthy target needs the same number of successful retries to become healthy again\n                      example: 3\n                      type: integer\n                    timeout:\n                      description: Time in seconds after an attempt is considered a timeout\n                      example: 10\n                      type: integer\n                  required:\n                    - protocol\n                    - port\n                    - interval\n                    - timeout\n                    - retries\n                  title: LoadBalancerServiceHealthCheck\n                  type: object\n                http:\n                  description: Configuration option for protocols http and https\n                  properties:\n                    certificates:\n                      description: IDs of the Certificates to use for TLS/SSL termination by the Load Balancer; empty for TLS/SSL passthrough or if `protocol` is \"http\"\n                      example:\n                        - 897\n                      items:\n                        type: integer\n                      type: array\n                    cookie_lifetime:\n                      description: Lifetime of the cookie used for sticky sessions\n                      example: 300\n                      type: integer\n                    cookie_name:\n                      description: Name of the cookie used for sticky sessions\n                      example: HCLBSTICKY\n                      type: string\n                    redirect_http:\n                      description: Redirect HTTP requests to HTTPS. Only available if protocol is \"https\". Default `false`\n                      example: true\n                      type: boolean\n                    sticky_sessions:\n                      description: Use sticky sessions. Only available if protocol is \"http\" or \"https\". Default `false`\n                      example: true\n                      type: boolean\n                  required:\n                    - cookie_name\n                    - cookie_lifetime\n                  type: object\n                listen_port:\n                  description: Port the Load Balancer listens on\n                  example: 443\n                  type: integer\n                protocol:\n                  description: Protocol of the Load Balancer\n                  enum:\n                    - tcp\n                    - http\n                    - https\n                  example: https\n                  type: string\n                proxyprotocol:\n                  description: Is Proxyprotocol enabled or not\n                  example: false\n                  type: boolean\n              required:\n                - protocol\n                - listen_port\n                - destination_port\n                - proxyprotocol\n                - health_check\n              title: LoadBalancerService\n              type: object\n      responses:\n        \"201\":\n          content:\n            application/json:\n              example:\n                action:\n                  command: update_service\n                  error:\n                    code: action_failed\n                    message: Action failed\n                  finished: 2016-01-30T23:56:00+00:00\n                  id: 13\n                  progress: 100\n                  resources:\n                    - id: 4711\n                      type: load_balancer\n                  started: 2016-01-30T23:55:00+00:00\n                  status: success\n              schema:\n                properties:\n                  action:\n                    properties:\n                      command:\n                        description: Command executed in the Action\n                        example: start_server\n                        type: string\n                      error:\n                        description: Error message for the Action if error occurred, otherwise null\n                        nullable: true\n                        properties:\n                          code:\n                            description: Fixed machine readable code\n                            example: action_failed\n                            type: string\n                          message:\n                            description: Humanized error message\n                            example: Action failed\n                            type: string\n                        required:\n                          - code\n                          - message\n                        type: object\n                      finished:\n                        description: Point in time when the Action was finished (in ISO-8601 format). Only set if the Action is finished otherwise null.\n                        example: 2016-01-30T23:55:00+00:00\n                        nullable: true\n                        type: string\n                      id:\n                        description: ID of the Resource\n                        example: 42\n                        type: integer\n                      progress:\n                        description: Progress of Action in percent\n                        example: 100\n                        type: number\n                      resources:\n                        description: Resources the Action relates to\n                        items:\n                          properties:\n                            id:\n                              description: ID of the Resource\n                              example: 42\n                              type: integer\n                            type:\n                              description: Type of resource referenced\n                              example: server\n                              type: string\n                          required:\n                            - id\n                            - type\n                          type: object\n                        type: array\n                      started:\n                        description: Point in time when the Action was started (in ISO-8601 format)\n                        example: 2016-01-30T23:55:00+00:00\n                        type: string\n                      status:\n                        description: Status of the Action\n                        enum:\n                          - success\n                          - running\n                          - error\n                        type: string\n                    required:\n                      - id\n                      - command\n                      - status\n                      - progress\n                      - started\n                      - finished\n                      - resources\n                      - error\n                    title: Action\n                    type: object\n                required:\n                  - action\n                title: ActionResponse\n                type: object\n          description: The `action` key contains the `update_service` Action\n      summary: Update Service\n      tags:\n        - Load Balancer Actions\n  \"/load_balancers/{id}/actions/{action_id}\":\n    get:\n      description: Returns a specific Action for a Load Balancer.\n      parameters:\n        - description: ID of the Load Balancer\n          in: path\n          name: id\n          required: true\n          schema:\n            type: integer\n        - description: ID of the Action\n          in: path\n          name: action_id\n          required: true\n          schema:\n            type: integer\n      responses:\n        \"200\":\n          content:\n            application/json:\n              example:\n                action:\n                  command: change_protection\n                  error:\n                    code: action_failed\n                    message: Action failed\n                  finished: 2016-01-30T23:56:00+00:00\n                  id: 13\n                  progress: 100\n                  resources:\n                    - id: 4711\n                      type: load_balancer\n                  started: 2016-01-30T23:55:00+00:00\n                  status: success\n              schema:\n                properties:\n                  action:\n                    properties:\n                      command:\n                        description: Command executed in the Action\n                        example: start_server\n                        type: string\n                      error:\n                        description: Error message for the Action if error occurred, otherwise null\n                        nullable: true\n                        properties:\n                          code:\n                            description: Fixed machine readable code\n                            example: action_failed\n                            type: string\n                          message:\n                            description: Humanized error message\n                            example: Action failed\n                            type: string\n                        required:\n                          - code\n                          - message\n                        type: object\n                      finished:\n                        description: Point in time when the Action was finished (in ISO-8601 format). Only set if the Action is finished otherwise null.\n                        example: 2016-01-30T23:55:00+00:00\n                        nullable: true\n                        type: string\n                      id:\n                        description: ID of the Resource\n                        example: 42\n                        type: integer\n                      progress:\n                        description: Progress of Action in percent\n                        example: 100\n                        type: number\n                      resources:\n                        description: Resources the Action relates to\n                        items:\n                          properties:\n                            id:\n                              description: ID of the Resource\n                              example: 42\n                              type: integer\n                            type:\n                              description: Type of resource referenced\n                              example: server\n                              type: string\n                          required:\n                            - id\n                            - type\n                          type: object\n                        type: array\n                      started:\n                        description: Point in time when the Action was started (in ISO-8601 format)\n                        example: 2016-01-30T23:55:00+00:00\n                        type: string\n                      status:\n                        description: Status of the Action\n                        enum:\n                          - success\n                          - running\n                          - error\n                        type: string\n                    required:\n                      - id\n                      - command\n                      - status\n                      - progress\n                      - started\n                      - finished\n                      - resources\n                      - error\n                    title: Action\n                    type: object\n                required:\n                  - action\n                title: ActionResponse\n                type: object\n          description: The `action` key contains the Load Balancer Action\n      summary: Get an Action for a Load Balancer\n      tags:\n        - Load Balancer Actions\n  \"/load_balancers/{id}/metrics\":\n    get:\n      description: |\n        You must specify the type of metric to get: `open_connections`, `connections_per_second`, `requests_per_second` or `bandwidth`. You can also specify more than one type by comma separation, e.g. `requests_per_second,bandwidth`.\n\n        Depending on the type you will get different time series data:\n\n        |Type | Timeseries | Unit | Description |\n        |---- |------------|------|-------------|\n        | open_connections | open_connections | number | Open connections |\n        | connections_per_second | connections_per_second | connections/s | Connections per second |\n        | requests_per_second | requests_per_second | requests/s | Requests per second |\n        | bandwidth | bandwidth.in | bytes/s | Ingress bandwidth |\n        || bandwidth.out | bytes/s | Egress bandwidth |\n\n        Metrics are available for the last 30 days only.\n\n        If you do not provide the step argument we will automatically adjust it so that 200 samples are returned.\n\n        We limit the number of samples to a maximum of 500 and will adjust the step parameter accordingly.\n      parameters:\n        - description: ID of the Load Balancer\n          in: path\n          name: id\n          required: true\n          schema:\n            type: integer\n        - description: Type of metrics to get\n          in: query\n          name: type\n          required: true\n          schema:\n            enum:\n              - open_connections\n              - connections_per_second\n              - requests_per_second\n              - bandwidth\n            type: string\n        - description: Start of period to get Metrics for (in ISO-8601 format)\n          in: query\n          name: start\n          required: true\n          schema:\n            type: string\n        - description: End of period to get Metrics for (in ISO-8601 format)\n          in: query\n          name: end\n          required: true\n          schema:\n            type: string\n        - description: Resolution of results in seconds\n          in: query\n          name: step\n          required: false\n          schema:\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                properties:\n                  metrics:\n                    properties:\n                      end:\n                        description: End of period of metrics reported (in ISO-8601 format)\n                        example: 2017-01-01T23:00:00+00:00\n                        type: string\n                      start:\n                        description: Start of period of metrics reported (in ISO-8601 format)\n                        example: 2017-01-01T00:00:00+00:00\n                        type: string\n                      step:\n                        description: Resolution of results in seconds.\n                        example: 60\n                        type: number\n                      time_series:\n                        additionalProperties:\n                          properties:\n                            values:\n                              description: Metrics Timestamps with values\n                              items:\n                                items:\n                                  oneOf:\n                                    - type: number\n                                    - type: string\n                                type: array\n                              type: array\n                          required:\n                            - values\n                          type: object\n                        description: Hash with timeseries information, containing the name of timeseries as key\n                        example:\n                          name_of_timeseries:\n                            values:\n                              - - 1435781470.622\n                                - \"42\"\n                              - - 1435781471.622\n                                - \"43\"\n                        type: object\n                    required:\n                      - start\n                      - end\n                      - step\n                      - time_series\n                    type: object\n                required:\n                  - metrics\n                type: object\n          description: The `metrics` key in the reply contains a metrics object with this structure\n      summary: Get Metrics for a LoadBalancer\n      tags:\n        - Load Balancers\n  /locations:\n    get:\n      description: Returns all Location objects.\n      parameters:\n        - description: Can be used to filter Locations by their name. The response will only contain the Location matching the specified name.\n          in: query\n          name: name\n          required: false\n          schema:\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                properties:\n                  locations:\n                    items:\n                      properties:\n                        city:\n                          description: City the Location is closest to\n                          example: Falkenstein\n                          type: string\n                        country:\n                          description: ISO 3166-1 alpha-2 code of the country the Location resides in\n                          example: DE\n                          type: string\n                        description:\n                          description: Description of the Location\n                          example: Falkenstein DC Park 1\n                          type: string\n                        id:\n                          description: ID of the Location\n                          example: 1\n                          type: number\n                        latitude:\n                          description: Latitude of the city closest to the Location\n                          example: 50.47612\n                          type: number\n                        longitude:\n                          description: Longitude of the city closest to the Location\n                          example: 12.370071\n                          type: number\n                        name:\n                          description: Unique identifier of the Location\n                          example: fsn1\n                          type: string\n                        network_zone:\n                          description: Name of network zone this Location resides in\n                          example: eu-central\n                          type: string\n                      required:\n                        - id\n                        - name\n                        - description\n                        - country\n                        - city\n                        - latitude\n                        - longitude\n                        - network_zone\n                      type: object\n                    type: array\n                required:\n                  - locations\n                type: object\n          description: The `locations` key in the reply contains an array of Location objects with this structure\n      summary: Get all Locations\n      tags:\n        - Locations\n  \"/locations/{id}\":\n    get:\n      description: Returns a specific Location object.\n      parameters:\n        - description: ID of Location\n          in: path\n          name: id\n          required: true\n          schema:\n            type: integer\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                properties:\n                  location:\n                    properties:\n                      city:\n                        description: City the Location is closest to\n                        example: Falkenstein\n                        type: string\n                      country:\n                        description: ISO 3166-1 alpha-2 code of the country the Location resides in\n                        example: DE\n                        type: string\n                      description:\n                        description: Description of the Location\n                        example: Falkenstein DC Park 1\n                        type: string\n                      id:\n                        description: ID of the Location\n                        example: 1\n                        type: number\n                      latitude:\n                        description: Latitude of the city closest to the Location\n                        example: 50.47612\n                        type: number\n                      longitude:\n                        description: Longitude of the city closest to the Location\n                        example: 12.370071\n                        type: number\n                      name:\n                        description: Unique identifier of the Location\n                        example: fsn1\n                        type: string\n                      network_zone:\n                        description: Name of network zone this Location resides in\n                        example: eu-central\n                        type: string\n                    required:\n                      - id\n                      - name\n                      - description\n                      - country\n                      - city\n                      - latitude\n                      - longitude\n                      - network_zone\n                    type: object\n                required:\n                  - location\n                type: object\n          description: The `location` key in the reply contains a Location object with this structure\n      summary: Get a Location\n      tags:\n        - Locations\n  /networks:\n    get:\n      description: Gets all existing networks that you have available.\n      parameters:\n        - description: Can be used to filter networks by their name. The response will only contain the networks matching the specified name.\n          in: query\n          name: name\n          required: false\n          schema:\n            type: string\n        - description: Can be used to filter networks by labels. The response will only contain networks with a matching label selector pattern.\n          in: query\n          name: label_selector\n          required: false\n          schema:\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                properties:\n                  meta:\n                    properties:\n                      pagination:\n                        properties:\n                          last_page:\n                            description: ID of the last page available. Can be null if the current page is the last one.\n                            example: 4\n                            nullable: true\n                            type: number\n                          next_page:\n                            description: ID of the next page. Can be null if the current page is the last one.\n                            example: 4\n                            nullable: true\n                            type: number\n                          page:\n                            description: Current page number\n                            example: 3\n                            type: number\n                          per_page:\n                            description: Maximum number of items shown per page in the response\n                            example: 25\n                            type: number\n                          previous_page:\n                            description: ID of the previous page. Can be null if the current page is the first one.\n                            example: 2\n                            nullable: true\n                            type: number\n                          total_entries:\n                            description: The total number of entries that exist in the database for this query. Nullable if unknown.\n                            example: 100\n                            nullable: true\n                            type: number\n                        required:\n                          - page\n                          - per_page\n                          - previous_page\n                          - next_page\n                          - last_page\n                          - total_entries\n                        type: object\n                    required:\n                      - pagination\n                    type: object\n                  networks:\n                    items:\n                      properties:\n                        created:\n                          description: Point in time when the Network was created (in ISO-8601 format)\n                          example: 2016-01-30T23:50:00+00:00\n                          type: string\n                        id:\n                          description: ID of the Network\n                          example: 4711\n                          type: integer\n                        ip_range:\n                          description: IPv4 prefix of the whole Network\n                          example: 10.0.0.0/16\n                          type: string\n                        labels:\n                          description: User-defined labels (key-value pairs)\n                          type: object\n                        load_balancers:\n                          description: Array of IDs of Load Balancers attached to this Network\n                          example:\n                            - 42\n                          items:\n                            type: integer\n                          type: array\n                        name:\n                          description: Name of the Network\n                          example: mynet\n                          type: string\n                        protection:\n                          description: Protection configuration for the Network\n                          properties:\n                            delete:\n                              description: If true, prevents the Network from being deleted\n                              example: false\n                              type: boolean\n                          required:\n                            - delete\n                          type: object\n                        routes:\n                          description: Array of routes set in this Network\n                          items:\n                            properties:\n                              destination:\n                                description: Destination network or host of this route. Must not overlap with an existing ip_range in any subnets or with any destinations in other routes or with the first IP of the networks ip_range or with 172.31.1.1. Must be one of the private IPv4 ranges of RFC1918.\n                                example: 10.100.1.0/24\n                                type: string\n                              gateway:\n                                description: Gateway for the route. Cannot be the first IP of the networks ip_range and also cannot be 172.31.1.1 as this IP is being used as a gateway for the public network interface of Servers.\n                                example: 10.0.1.1\n                                type: string\n                            required:\n                              - destination\n                              - gateway\n                            type: object\n                          type: array\n                        servers:\n                          description: Array of IDs of Servers attached to this Network\n                          example:\n                            - 42\n                          items:\n                            type: integer\n                          type: array\n                        subnets:\n                          description: Array subnets allocated in this Network\n                          items:\n                            properties:\n                              gateway:\n                                description: Gateway for Servers attached to this subnet. For subnets of type Server this is always the first IP of the network IP range.\n                                example: 10.0.0.1\n                                type: string\n                              ip_range:\n                                description: Range to allocate IPs from. Must be a Subnet of the ip_range of the parent network object and must not overlap with any other subnets or with any destinations in routes. Minimum Network size is /30. We suggest that you pick a bigger Network with a /24 netmask.\n                                example: 10.0.1.0/24\n                                type: string\n                              network_zone:\n                                description: Name of Network zone. Currently eu-central is the only available zone.\n                                example: eu-central\n                                type: string\n                              type:\n                                description: Type of Subnetwork\n                                enum:\n                                  - cloud\n                                  - server\n                                  - vswitch\n                                type: string\n                            required:\n                              - type\n                              - network_zone\n                              - gateway\n                            type: object\n                          type: array\n                      required:\n                        - id\n                        - name\n                        - ip_range\n                        - subnets\n                        - routes\n                        - servers\n                        - protection\n                        - labels\n                        - created\n                      type: object\n                    type: array\n                required:\n                  - networks\n                type: object\n          description: The `networks` key contains a list of networks\n      summary: Get all Networks\n      tags:\n        - Networks\n    post:\n      description: |\n        Creates a network with the specified `ip_range`.\n\n        You may specify one or more `subnets`. You can also add more Subnets later by using the [add subnet action](https://docs.hetzner.cloud/#network-actions-add-a-subnet-to-a-network). If you do not specify an `ip_range` in the subnet we will automatically pick the first available /24 range for you.\n\n        You may specify one or more routes in `routes`. You can also add more routes later by using the [add route action](https://docs.hetzner.cloud/#network-actions-add-a-route-to-a-network).\n      requestBody:\n        content:\n          application/json:\n            schema:\n              properties:\n                ip_range:\n                  description: IP range of the whole network which must span all included subnets. Must be one of the private IPv4 ranges of RFC1918. Minimum network size is /24. We highly recommend that you pick a larger network with a /16 netmask.\n                  example: 10.0.0.0/16\n                  type: string\n                labels:\n                  description: User-defined labels (key-value pairs)\n                  properties:\n                    labelkey:\n                      description: New label\n                      example: value\n                      type: string\n                  type: object\n                name:\n                  description: Name of the network\n                  example: mynet\n                  type: string\n                routes:\n                  description: Array of routes set in this network. The destination of the route must be one of the private IPv4 ranges of RFC1918. The gateway must be a subnet/IP of the ip_range of the network object. The destination must not overlap with an existing ip_range in any subnets or with any destinations in other routes or with the first IP of the networks ip_range or with 172.31.1.1. The gateway cannot be the first IP of the networks ip_range and also cannot be 172.31.1.1.\n                  items:\n                    properties:\n                      destination:\n                        description: Destination network or host of this route. Must not overlap with an existing ip_range in any subnets or with any destinations in other routes or with the first IP of the networks ip_range or with 172.31.1.1. Must be one of the private IPv4 ranges of RFC1918.\n                        example: 10.100.1.0/24\n                        type: string\n                      gateway:\n                        description: Gateway for the route. Cannot be the first IP of the networks ip_range and also cannot be 172.31.1.1 as this IP is being used as a gateway for the public network interface of Servers.\n                        example: 10.0.1.1\n                        type: string\n                    required:\n                      - destination\n                      - gateway\n                    type: object\n                  type: array\n                subnets:\n                  description: Array of subnets allocated.\n                  items:\n                    properties:\n                      ip_range:\n                        description: Range to allocate IPs from. Must be a Subnet of the ip_range of the parent network object and must not overlap with any other subnets or with any destinations in routes. Minimum Network size is /30. We suggest that you pick a bigger Network with a /24 netmask.\n                        example: 10.0.1.0/24\n                        type: string\n                      network_zone:\n                        description: Name of Network zone. Currently eu-central is the only available zone.\n                        example: eu-central\n                        type: string\n                      type:\n                        description: Type of Subnetwork\n                        enum:\n                          - cloud\n                          - server\n                          - vswitch\n                        type: string\n                    required:\n                      - type\n                      - network_zone\n                    type: object\n                  type: array\n              required:\n                - name\n                - ip_range\n              title: CreateNetworkRequest\n              type: object\n      responses:\n        \"201\":\n          content:\n            application/json:\n              schema:\n                properties:\n                  network:\n                    properties:\n                      created:\n                        description: Point in time when the Network was created (in ISO-8601 format)\n                        example: 2016-01-30T23:50:00+00:00\n                        type: string\n                      id:\n                        description: ID of the Network\n                        example: 4711\n                        type: integer\n                      ip_range:\n                        description: IPv4 prefix of the whole Network\n                        example: 10.0.0.0/16\n                        type: string\n                      labels:\n                        description: User-defined labels (key-value pairs)\n                        type: object\n                      load_balancers:\n                        description: Array of IDs of Load Balancers attached to this Network\n                        example:\n                          - 42\n                        items:\n                          type: integer\n                        type: array\n                      name:\n                        description: Name of the Network\n                        example: mynet\n                        type: string\n                      protection:\n                        description: Protection configuration for the Network\n                        properties:\n                          delete:\n                            description: If true, prevents the Network from being deleted\n                            example: false\n                            type: boolean\n                        required:\n                          - delete\n                        type: object\n                      routes:\n                        description: Array of routes set in this Network\n                        items:\n                          properties:\n                            destination:\n                              description: Destination network or host of this route. Must not overlap with an existing ip_range in any subnets or with any destinations in other routes or with the first IP of the networks ip_range or with 172.31.1.1. Must be one of the private IPv4 ranges of RFC1918.\n                              example: 10.100.1.0/24\n                              type: string\n                            gateway:\n                              description: Gateway for the route. Cannot be the first IP of the networks ip_range and also cannot be 172.31.1.1 as this IP is being used as a gateway for the public network interface of Servers.\n                              example: 10.0.1.1\n                              type: string\n                          required:\n                            - destination\n                            - gateway\n                          type: object\n                        type: array\n                      servers:\n                        description: Array of IDs of Servers attached to this Network\n                        example:\n                          - 42\n                        items:\n                          type: integer\n                        type: array\n                      subnets:\n                        description: Array subnets allocated in this Network\n                        items:\n                          properties:\n                            gateway:\n                              description: Gateway for Servers attached to this subnet. For subnets of type Server this is always the first IP of the network IP range.\n                              example: 10.0.0.1\n                              type: string\n                            ip_range:\n                              description: Range to allocate IPs from. Must be a Subnet of the ip_range of the parent network object and must not overlap with any other subnets or with any destinations in routes. Minimum Network size is /30. We suggest that you pick a bigger Network with a /24 netmask.\n                              example: 10.0.1.0/24\n                              type: string\n                            network_zone:\n                              description: Name of Network zone. Currently eu-central is the only available zone.\n                              example: eu-central\n                              type: string\n                            type:\n                              description: Type of Subnetwork\n                              enum:\n                                - cloud\n                                - server\n                                - vswitch\n                              type: string\n                          required:\n                            - type\n                            - network_zone\n                            - gateway\n                          type: object\n                        type: array\n                    required:\n                      - id\n                      - name\n                      - ip_range\n                      - subnets\n                      - routes\n                      - servers\n                      - protection\n                      - labels\n                      - created\n                    type: object\n                type: object\n          description: The `network` key contains the network that was just created\n      summary: Create a Network\n      tags:\n        - Networks\n  \"/networks/{id}\":\n    delete:\n      description: |\n        Deletes a network. If there are Servers attached they will be detached in the background.\n\n        Note: if the network object changes during the request, the response will be a “conflict” error.\n      parameters:\n        - description: ID of the network\n          in: path\n          name: id\n          required: true\n          schema:\n            type: integer\n      responses:\n        \"204\":\n          description: Network deleted\n      summary: Delete a Network\n      tags:\n        - Networks\n    get:\n      description: Gets a specific network object.\n      parameters:\n        - description: ID of the network\n          in: path\n          name: id\n          required: true\n          schema:\n            type: integer\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                properties:\n                  network:\n                    properties:\n                      created:\n                        description: Point in time when the Network was created (in ISO-8601 format)\n                        example: 2016-01-30T23:50:00+00:00\n                        type: string\n                      id:\n                        description: ID of the Network\n                        example: 4711\n                        type: integer\n                      ip_range:\n                        description: IPv4 prefix of the whole Network\n                        example: 10.0.0.0/16\n                        type: string\n                      labels:\n                        description: User-defined labels (key-value pairs)\n                        type: object\n                      load_balancers:\n                        description: Array of IDs of Load Balancers attached to this Network\n                        example:\n                          - 42\n                        items:\n                          type: integer\n                        type: array\n                      name:\n                        description: Name of the Network\n                        example: mynet\n                        type: string\n                      protection:\n                        description: Protection configuration for the Network\n                        properties:\n                          delete:\n                            description: If true, prevents the Network from being deleted\n                            example: false\n                            type: boolean\n                        required:\n                          - delete\n                        type: object\n                      routes:\n                        description: Array of routes set in this Network\n                        items:\n                          properties:\n                            destination:\n                              description: Destination network or host of this route. Must not overlap with an existing ip_range in any subnets or with any destinations in other routes or with the first IP of the networks ip_range or with 172.31.1.1. Must be one of the private IPv4 ranges of RFC1918.\n                              example: 10.100.1.0/24\n                              type: string\n                            gateway:\n                              description: Gateway for the route. Cannot be the first IP of the networks ip_range and also cannot be 172.31.1.1 as this IP is being used as a gateway for the public network interface of Servers.\n                              example: 10.0.1.1\n                              type: string\n                          required:\n                            - destination\n                            - gateway\n                          type: object\n                        type: array\n                      servers:\n                        description: Array of IDs of Servers attached to this Network\n                        example:\n                          - 42\n                        items:\n                          type: integer\n                        type: array\n                      subnets:\n                        description: Array subnets allocated in this Network\n                        items:\n                          properties:\n                            gateway:\n                              description: Gateway for Servers attached to this subnet. For subnets of type Server this is always the first IP of the network IP range.\n                              example: 10.0.0.1\n                              type: string\n                            ip_range:\n                              description: Range to allocate IPs from. Must be a Subnet of the ip_range of the parent network object and must not overlap with any other subnets or with any destinations in routes. Minimum Network size is /30. We suggest that you pick a bigger Network with a /24 netmask.\n                              example: 10.0.1.0/24\n                              type: string\n                            network_zone:\n                              description: Name of Network zone. Currently eu-central is the only available zone.\n                              example: eu-central\n                              type: string\n                            type:\n                              description: Type of Subnetwork\n                              enum:\n                                - cloud\n                                - server\n                                - vswitch\n                              type: string\n                          required:\n                            - type\n                            - network_zone\n                            - gateway\n                          type: object\n                        type: array\n                    required:\n                      - id\n                      - name\n                      - ip_range\n                      - subnets\n                      - routes\n                      - servers\n                      - protection\n                      - labels\n                      - created\n                    type: object\n                type: object\n          description: The `network` key contains the network\n      summary: Get a Network\n      tags:\n        - Networks\n    put:\n      description: |\n        Updates the network properties.\n\n        Note that when updating labels, the network’s current set of labels will be replaced with the labels provided in the request body. So, for example, if you want to add a new label, you have to provide all existing labels plus the new label in the request body.\n\n        Note: if the network object changes during the request, the response will be a “conflict” error.\n      parameters:\n        - description: ID of the network\n          in: path\n          name: id\n          required: true\n          schema:\n            type: integer\n      requestBody:\n        content:\n          application/json:\n            schema:\n              properties:\n                labels:\n                  description: User-defined labels (key-value pairs)\n                  properties:\n                    labelkey:\n                      example: value\n                      type: string\n                  type: object\n                name:\n                  description: New network name\n                  example: new-name\n                  type: string\n              title: UpdateNetworkRequest\n              type: object\n      responses:\n        \"200\":\n          content:\n            application/json:\n              example:\n                network:\n                  created: 2016-01-30T23:50:00+00:00\n                  id: 4711\n                  ip_range: 10.0.0.0/16\n                  labels:\n                    labelkey: value\n                  load_balancers:\n                    - 42\n                  name: new-name\n                  protection:\n                    delete: false\n                  routes:\n                    - destination: 10.100.1.0/24\n                      gateway: 10.0.1.1\n                  servers:\n                    - 42\n                  subnets:\n                    - gateway: 10.0.0.1\n                      ip_range: 10.0.1.0/24\n                      network_zone: eu-central\n                      type: cloud\n              schema:\n                properties:\n                  network:\n                    properties:\n                      created:\n                        description: Point in time when the Network was created (in ISO-8601 format)\n                        example: 2016-01-30T23:50:00+00:00\n                        type: string\n                      id:\n                        description: ID of the Network\n                        example: 4711\n                        type: integer\n                      ip_range:\n                        description: IPv4 prefix of the whole Network\n                        example: 10.0.0.0/16\n                        type: string\n                      labels:\n                        description: User-defined labels (key-value pairs)\n                        type: object\n                      load_balancers:\n                        description: Array of IDs of Load Balancers attached to this Network\n                        example:\n                          - 42\n                        items:\n                          type: integer\n                        type: array\n                      name:\n                        description: Name of the Network\n                        example: mynet\n                        type: string\n                      protection:\n                        description: Protection configuration for the Network\n                        properties:\n                          delete:\n                            description: If true, prevents the Network from being deleted\n                            example: false\n                            type: boolean\n                        required:\n                          - delete\n                        type: object\n                      routes:\n                        description: Array of routes set in this Network\n                        items:\n                          properties:\n                            destination:\n                              description: Destination network or host of this route. Must not overlap with an existing ip_range in any subnets or with any destinations in other routes or with the first IP of the networks ip_range or with 172.31.1.1. Must be one of the private IPv4 ranges of RFC1918.\n                              example: 10.100.1.0/24\n                              type: string\n                            gateway:\n                              description: Gateway for the route. Cannot be the first IP of the networks ip_range and also cannot be 172.31.1.1 as this IP is being used as a gateway for the public network interface of Servers.\n                              example: 10.0.1.1\n                              type: string\n                          required:\n                            - destination\n                            - gateway\n                          type: object\n                        type: array\n                      servers:\n                        description: Array of IDs of Servers attached to this Network\n                        example:\n                          - 42\n                        items:\n                          type: integer\n                        type: array\n                      subnets:\n                        description: Array subnets allocated in this Network\n                        items:\n                          properties:\n                            gateway:\n                              description: Gateway for Servers attached to this subnet. For subnets of type Server this is always the first IP of the network IP range.\n                              example: 10.0.0.1\n                              type: string\n                            ip_range:\n                              description: Range to allocate IPs from. Must be a Subnet of the ip_range of the parent network object and must not overlap with any other subnets or with any destinations in routes. Minimum Network size is /30. We suggest that you pick a bigger Network with a /24 netmask.\n                              example: 10.0.1.0/24\n                              type: string\n                            network_zone:\n                              description: Name of Network zone. Currently eu-central is the only available zone.\n                              example: eu-central\n                              type: string\n                            type:\n                              description: Type of Subnetwork\n                              enum:\n                                - cloud\n                                - server\n                                - vswitch\n                              type: string\n                          required:\n                            - type\n                            - network_zone\n                            - gateway\n                          type: object\n                        type: array\n                    required:\n                      - id\n                      - name\n                      - ip_range\n                      - subnets\n                      - routes\n                      - servers\n                      - protection\n                      - labels\n                      - created\n                    type: object\n                type: object\n          description: The `network` key contains the updated network\n      summary: Update a Network\n      tags:\n        - Networks\n  \"/networks/{id}/actions\":\n    get:\n      description: Returns all Action objects for a Network. You can sort the results by using the `sort` URI parameter, and filter them with the `status` parameter.\n      parameters:\n        - description: ID of the Network\n          in: path\n          name: id\n          required: true\n          schema:\n            type: integer\n        - description: Can be used multiple times.\n          in: query\n          name: sort\n          required: false\n          schema:\n            enum:\n              - id\n              - id:asc\n              - id:desc\n              - command\n              - command:asc\n              - command:desc\n              - status\n              - status:asc\n              - status:desc\n              - progress\n              - progress:asc\n              - progress:desc\n              - started\n              - started:asc\n              - started:desc\n              - finished\n              - finished:asc\n              - finished:desc\n            title: ParameterSort\n            type: string\n        - description: Can be used multiple times, the response will contain only Actions with specified statuses\n          in: query\n          name: status\n          required: false\n          schema:\n            enum:\n              - running\n              - success\n              - error\n            title: ParameterStatus\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              example:\n                actions:\n                  - command: add_subnet\n                    error:\n                      code: action_failed\n                      message: Action failed\n                    finished: 2016-01-30T23:56:00+00:00\n                    id: 13\n                    progress: 100\n                    resources:\n                      - id: 42\n                        type: server\n                    started: 2016-01-30T23:55:00+00:00\n                    status: success\n              schema:\n                properties:\n                  actions:\n                    items:\n                      properties:\n                        command:\n                          description: Command executed in the Action\n                          example: start_server\n                          type: string\n                        error:\n                          description: Error message for the Action if error occurred, otherwise null\n                          nullable: true\n                          properties:\n                            code:\n                              description: Fixed machine readable code\n                              example: action_failed\n                              type: string\n                            message:\n                              description: Humanized error message\n                              example: Action failed\n                              type: string\n                          required:\n                            - code\n                            - message\n                          type: object\n                        finished:\n                          description: Point in time when the Action was finished (in ISO-8601 format). Only set if the Action is finished otherwise null.\n                          example: 2016-01-30T23:55:00+00:00\n                          nullable: true\n                          type: string\n                        id:\n                          description: ID of the Resource\n                          example: 42\n                          type: integer\n                        progress:\n                          description: Progress of Action in percent\n                          example: 100\n                          type: number\n                        resources:\n                          description: Resources the Action relates to\n                          items:\n                            properties:\n                              id:\n                                description: ID of the Resource\n                                example: 42\n                                type: integer\n                              type:\n                                description: Type of resource referenced\n                                example: server\n                                type: string\n                            required:\n                              - id\n                              - type\n                            type: object\n                          type: array\n                        started:\n                          description: Point in time when the Action was started (in ISO-8601 format)\n                          example: 2016-01-30T23:55:00+00:00\n                          type: string\n                        status:\n                          description: Status of the Action\n                          enum:\n                            - success\n                            - running\n                            - error\n                          type: string\n                      required:\n                        - id\n                        - command\n                        - status\n                        - progress\n                        - started\n                        - finished\n                        - resources\n                        - error\n                      title: Action\n                      type: object\n                    type: array\n                  meta:\n                    properties:\n                      pagination:\n                        properties:\n                          last_page:\n                            description: ID of the last page available. Can be null if the current page is the last one.\n                            example: 4\n                            nullable: true\n                            type: number\n                          next_page:\n                            description: ID of the next page. Can be null if the current page is the last one.\n                            example: 4\n                            nullable: true\n                            type: number\n                          page:\n                            description: Current page number\n                            example: 3\n                            type: number\n                          per_page:\n                            description: Maximum number of items shown per page in the response\n                            example: 25\n                            type: number\n                          previous_page:\n                            description: ID of the previous page. Can be null if the current page is the first one.\n                            example: 2\n                            nullable: true\n                            type: number\n                          total_entries:\n                            description: The total number of entries that exist in the database for this query. Nullable if unknown.\n                            example: 100\n                            nullable: true\n                            type: number\n                        required:\n                          - page\n                          - per_page\n                          - previous_page\n                          - next_page\n                          - last_page\n                          - total_entries\n                        type: object\n                    required:\n                      - pagination\n                    type: object\n                required:\n                  - actions\n                title: ActionsResponse\n                type: object\n          description: The `actions` key contains a list of Actions\n      summary: Get all Actions for a Network\n      tags:\n        - Network Actions\n  \"/networks/{id}/actions/add_route\":\n    post:\n      description: |\n        Adds a route entry to a Network.\n\n        Note: if the Network object changes during the request, the response will be a “conflict” error.\n      parameters:\n        - description: ID of the Network\n          in: path\n          name: id\n          required: true\n          schema:\n            type: integer\n      requestBody:\n        content:\n          application/json:\n            schema:\n              properties:\n                destination:\n                  description: Destination network or host of this route. Must not overlap with an existing ip_range in any subnets or with any destinations in other routes or with the first IP of the networks ip_range or with 172.31.1.1. Must be one of the private IPv4 ranges of RFC1918.\n                  example: 10.100.1.0/24\n                  type: string\n                gateway:\n                  description: Gateway for the route. Cannot be the first IP of the networks ip_range, an IP behind a vSwitch or 172.31.1.1, as this IP is being used as a gateway for the public network interface of Servers.\n                  example: 10.0.1.1\n                  type: string\n              required:\n                - destination\n                - gateway\n              title: AddDeleteRouteRequest\n              type: object\n      responses:\n        \"201\":\n          content:\n            application/json:\n              example:\n                action:\n                  command: add_route\n                  error:\n                    code: action_failed\n                    message: Action failed\n                  finished: null\n                  id: 13\n                  progress: 0\n                  resources:\n                    - id: 4711\n                      type: network\n                  started: 2016-01-30T23:50:00+00:00\n                  status: running\n              schema:\n                properties:\n                  action:\n                    properties:\n                      command:\n                        description: Command executed in the Action\n                        example: start_server\n                        type: string\n                      error:\n                        description: Error message for the Action if error occurred, otherwise null\n                        nullable: true\n                        properties:\n                          code:\n                            description: Fixed machine readable code\n                            example: action_failed\n                            type: string\n                          message:\n                            description: Humanized error message\n                            example: Action failed\n                            type: string\n                        required:\n                          - code\n                          - message\n                        type: object\n                      finished:\n                        description: Point in time when the Action was finished (in ISO-8601 format). Only set if the Action is finished otherwise null.\n                        example: 2016-01-30T23:55:00+00:00\n                        nullable: true\n                        type: string\n                      id:\n                        description: ID of the Resource\n                        example: 42\n                        type: integer\n                      progress:\n                        description: Progress of Action in percent\n                        example: 100\n                        type: number\n                      resources:\n                        description: Resources the Action relates to\n                        items:\n                          properties:\n                            id:\n                              description: ID of the Resource\n                              example: 42\n                              type: integer\n                            type:\n                              description: Type of resource referenced\n                              example: server\n                              type: string\n                          required:\n                            - id\n                            - type\n                          type: object\n                        type: array\n                      started:\n                        description: Point in time when the Action was started (in ISO-8601 format)\n                        example: 2016-01-30T23:55:00+00:00\n                        type: string\n                      status:\n                        description: Status of the Action\n                        enum:\n                          - success\n                          - running\n                          - error\n                        type: string\n                    required:\n                      - id\n                      - command\n                      - status\n                      - progress\n                      - started\n                      - finished\n                      - resources\n                      - error\n                    title: Action\n                    type: object\n                required:\n                  - action\n                title: ActionResponse\n                type: object\n          description: The `action` key contains the `add_route` Action\n      summary: Add a route to a Network\n      tags:\n        - Network Actions\n  \"/networks/{id}/actions/add_subnet\":\n    post:\n      description: |\n        Adds a new subnet object to the Network. If you do not specify an `ip_range` for the subnet we will automatically pick the first available /24 range for you if possible.\n\n        Note: if the parent Network object changes during the request, the response will be a “conflict” error.\n      parameters:\n        - description: ID of the Network\n          in: path\n          name: id\n          required: true\n          schema:\n            type: integer\n      requestBody:\n        content:\n          application/json:\n            schema:\n              properties:\n                ip_range:\n                  description: Range to allocate IPs from. Must be a Subnet of the ip_range of the parent network object and must not overlap with any other subnets or with any destinations in routes. If the Subnet is of type vSwitch, it also can not overlap with any gateway in routes. Minimum Network size is /30. We suggest that you pick a bigger Network with a /24 netmask.\n                  example: 10.0.1.0/24\n                  type: string\n                network_zone:\n                  description: Name of Network zone. Currently eu-central is the only available zone.\n                  example: eu-central\n                  type: string\n                type:\n                  description: Type of Subnetwork\n                  enum:\n                    - cloud\n                    - server\n                    - vswitch\n                  type: string\n                vswitch_id:\n                  description: ID of the robot vSwitch. Must be supplied if the subnet is of type vswitch.\n                  example: 1000\n                  type: integer\n              required:\n                - type\n                - network_zone\n              title: AddSubnetRequest\n              type: object\n      responses:\n        \"201\":\n          content:\n            application/json:\n              example:\n                action:\n                  command: add_subnet\n                  error:\n                    code: action_failed\n                    message: Action failed\n                  finished: null\n                  id: 13\n                  progress: 0\n                  resources:\n                    - id: 4711\n                      type: network\n                  started: 2016-01-30T23:50:00+00:00\n                  status: running\n              schema:\n                properties:\n                  action:\n                    properties:\n                      command:\n                        description: Command executed in the Action\n                        example: start_server\n                        type: string\n                      error:\n                        description: Error message for the Action if error occurred, otherwise null\n                        nullable: true\n                        properties:\n                          code:\n                            description: Fixed machine readable code\n                            example: action_failed\n                            type: string\n                          message:\n                            description: Humanized error message\n                            example: Action failed\n                            type: string\n                        required:\n                          - code\n                          - message\n                        type: object\n                      finished:\n                        description: Point in time when the Action was finished (in ISO-8601 format). Only set if the Action is finished otherwise null.\n                        example: 2016-01-30T23:55:00+00:00\n                        nullable: true\n                        type: string\n                      id:\n                        description: ID of the Resource\n                        example: 42\n                        type: integer\n                      progress:\n                        description: Progress of Action in percent\n                        example: 100\n                        type: number\n                      resources:\n                        description: Resources the Action relates to\n                        items:\n                          properties:\n                            id:\n                              description: ID of the Resource\n                              example: 42\n                              type: integer\n                            type:\n                              description: Type of resource referenced\n                              example: server\n                              type: string\n                          required:\n                            - id\n                            - type\n                          type: object\n                        type: array\n                      started:\n                        description: Point in time when the Action was started (in ISO-8601 format)\n                        example: 2016-01-30T23:55:00+00:00\n                        type: string\n                      status:\n                        description: Status of the Action\n                        enum:\n                          - success\n                          - running\n                          - error\n                        type: string\n                    required:\n                      - id\n                      - command\n                      - status\n                      - progress\n                      - started\n                      - finished\n                      - resources\n                      - error\n                    title: Action\n                    type: object\n                required:\n                  - action\n                title: ActionResponse\n                type: object\n          description: The `action` key contains the `add_subnet` Action\n      summary: Add a subnet to a Network\n      tags:\n        - Network Actions\n  \"/networks/{id}/actions/change_ip_range\":\n    post:\n      description: |\n        Changes the IP range of a Network. IP ranges can only be extended and never shrunk. You can only add IPs at the end of an existing IP range. This means that the IP part of your existing range must stay the same and you can only change its netmask.\n\n        For example if you have a range `10.0.0.0/16` you want to extend then your new range must also start with the IP `10.0.0.0`. Your CIDR netmask `/16` may change to a number that is smaller than `16` thereby increasing the IP range. So valid entries would be `10.0.0.0/15`, `10.0.0.0/14`, `10.0.0.0/13` and so on.\n\n        After changing the IP range you will have to adjust the routes on your connected Servers by either rebooting them or manually changing the routes to your private Network interface.\n\n        Note: if the Network object changes during the request, the response will be a “conflict” error.\n      parameters:\n        - description: ID of the Network\n          in: path\n          name: id\n          required: true\n          schema:\n            type: integer\n      requestBody:\n        content:\n          application/json:\n            schema:\n              properties:\n                ip_range:\n                  description: The new prefix for the whole Network\n                  example: 10.0.0.0/12\n                  type: string\n              required:\n                - ip_range\n              title: ChangeIPRangeRequest\n              type: object\n      responses:\n        \"201\":\n          content:\n            application/json:\n              example:\n                action:\n                  command: change_ip_range\n                  error:\n                    code: action_failed\n                    message: Action failed\n                  finished: 2016-01-30T23:56:00+00:00\n                  id: 13\n                  progress: 100\n                  resources:\n                    - id: 4711\n                      type: network\n                  started: 2016-01-30T23:55:00+00:00\n                  status: success\n              schema:\n                properties:\n                  action:\n                    properties:\n                      command:\n                        description: Command executed in the Action\n                        example: start_server\n                        type: string\n                      error:\n                        description: Error message for the Action if error occurred, otherwise null\n                        nullable: true\n                        properties:\n                          code:\n                            description: Fixed machine readable code\n                            example: action_failed\n                            type: string\n                          message:\n                            description: Humanized error message\n                            example: Action failed\n                            type: string\n                        required:\n                          - code\n                          - message\n                        type: object\n                      finished:\n                        description: Point in time when the Action was finished (in ISO-8601 format). Only set if the Action is finished otherwise null.\n                        example: 2016-01-30T23:55:00+00:00\n                        nullable: true\n                        type: string\n                      id:\n                        description: ID of the Resource\n                        example: 42\n                        type: integer\n                      progress:\n                        description: Progress of Action in percent\n                        example: 100\n                        type: number\n                      resources:\n                        description: Resources the Action relates to\n                        items:\n                          properties:\n                            id:\n                              description: ID of the Resource\n                              example: 42\n                              type: integer\n                            type:\n                              description: Type of resource referenced\n                              example: server\n                              type: string\n                          required:\n                            - id\n                            - type\n                          type: object\n                        type: array\n                      started:\n                        description: Point in time when the Action was started (in ISO-8601 format)\n                        example: 2016-01-30T23:55:00+00:00\n                        type: string\n                      status:\n                        description: Status of the Action\n                        enum:\n                          - success\n                          - running\n                          - error\n                        type: string\n                    required:\n                      - id\n                      - command\n                      - status\n                      - progress\n                      - started\n                      - finished\n                      - resources\n                      - error\n                    title: Action\n                    type: object\n                required:\n                  - action\n                title: ActionResponse\n                type: object\n          description: The `action` key contains the `change_ip_range` Action\n      summary: Change IP range of a Network\n      tags:\n        - Network Actions\n  \"/networks/{id}/actions/change_protection\":\n    post:\n      description: |\n        Changes the protection configuration of a Network.\n\n        Note: if the Network object changes during the request, the response will be a “conflict” error.\n      parameters:\n        - description: ID of the Network\n          in: path\n          name: id\n          required: true\n          schema:\n            type: integer\n      requestBody:\n        content:\n          application/json:\n            schema:\n              properties:\n                delete:\n                  description: If true, prevents the Network from being deleted\n                  example: true\n                  type: boolean\n              title: ChangeProtectionRequest\n              type: object\n      responses:\n        \"201\":\n          content:\n            application/json:\n              example:\n                action:\n                  command: change_protection\n                  error:\n                    code: action_failed\n                    message: Action failed\n                  finished: 2016-01-30T23:56:00+00:00\n                  id: 13\n                  progress: 100\n                  resources:\n                    - id: 4711\n                      type: network\n                  started: 2016-01-30T23:55:00+00:00\n                  status: success\n              schema:\n                properties:\n                  action:\n                    properties:\n                      command:\n                        description: Command executed in the Action\n                        example: start_server\n                        type: string\n                      error:\n                        description: Error message for the Action if error occurred, otherwise null\n                        nullable: true\n                        properties:\n                          code:\n                            description: Fixed machine readable code\n                            example: action_failed\n                            type: string\n                          message:\n                            description: Humanized error message\n                            example: Action failed\n                            type: string\n                        required:\n                          - code\n                          - message\n                        type: object\n                      finished:\n                        description: Point in time when the Action was finished (in ISO-8601 format). Only set if the Action is finished otherwise null.\n                        example: 2016-01-30T23:55:00+00:00\n                        nullable: true\n                        type: string\n                      id:\n                        description: ID of the Resource\n                        example: 42\n                        type: integer\n                      progress:\n                        description: Progress of Action in percent\n                        example: 100\n                        type: number\n                      resources:\n                        description: Resources the Action relates to\n                        items:\n                          properties:\n                            id:\n                              description: ID of the Resource\n                              example: 42\n                              type: integer\n                            type:\n                              description: Type of resource referenced\n                              example: server\n                              type: string\n                          required:\n                            - id\n                            - type\n                          type: object\n                        type: array\n                      started:\n                        description: Point in time when the Action was started (in ISO-8601 format)\n                        example: 2016-01-30T23:55:00+00:00\n                        type: string\n                      status:\n                        description: Status of the Action\n                        enum:\n                          - success\n                          - running\n                          - error\n                        type: string\n                    required:\n                      - id\n                      - command\n                      - status\n                      - progress\n                      - started\n                      - finished\n                      - resources\n                      - error\n                    title: Action\n                    type: object\n                required:\n                  - action\n                title: ActionResponse\n                type: object\n          description: The `action` key contains the `change_protection` Action\n      summary: Change Network Protection\n      tags:\n        - Network Actions\n  \"/networks/{id}/actions/delete_route\":\n    post:\n      description: |\n        Delete a route entry from a Network.\n\n        Note: if the Network object changes during the request, the response will be a “conflict” error.\n      parameters:\n        - description: ID of the Network\n          in: path\n          name: id\n          required: true\n          schema:\n            type: integer\n      requestBody:\n        content:\n          application/json:\n            schema:\n              properties:\n                destination:\n                  description: Destination network or host of this route. Must not overlap with an existing ip_range in any subnets or with any destinations in other routes or with the first IP of the networks ip_range or with 172.31.1.1. Must be one of the private IPv4 ranges of RFC1918.\n                  example: 10.100.1.0/24\n                  type: string\n                gateway:\n                  description: Gateway for the route. Cannot be the first IP of the networks ip_range, an IP behind a vSwitch or 172.31.1.1, as this IP is being used as a gateway for the public network interface of Servers.\n                  example: 10.0.1.1\n                  type: string\n              required:\n                - destination\n                - gateway\n              title: AddDeleteRouteRequest\n              type: object\n      responses:\n        \"201\":\n          content:\n            application/json:\n              example:\n                action:\n                  command: delete_route\n                  error:\n                    code: action_failed\n                    message: Action failed\n                  finished: null\n                  id: 13\n                  progress: 0\n                  resources:\n                    - id: 4711\n                      type: network\n                  started: 2016-01-30T23:50:00+00:00\n                  status: running\n              schema:\n                properties:\n                  action:\n                    properties:\n                      command:\n                        description: Command executed in the Action\n                        example: start_server\n                        type: string\n                      error:\n                        description: Error message for the Action if error occurred, otherwise null\n                        nullable: true\n                        properties:\n                          code:\n                            description: Fixed machine readable code\n                            example: action_failed\n                            type: string\n                          message:\n                            description: Humanized error message\n                            example: Action failed\n                            type: string\n                        required:\n                          - code\n                          - message\n                        type: object\n                      finished:\n                        description: Point in time when the Action was finished (in ISO-8601 format). Only set if the Action is finished otherwise null.\n                        example: 2016-01-30T23:55:00+00:00\n                        nullable: true\n                        type: string\n                      id:\n                        description: ID of the Resource\n                        example: 42\n                        type: integer\n                      progress:\n                        description: Progress of Action in percent\n                        example: 100\n                        type: number\n                      resources:\n                        description: Resources the Action relates to\n                        items:\n                          properties:\n                            id:\n                              description: ID of the Resource\n                              example: 42\n                              type: integer\n                            type:\n                              description: Type of resource referenced\n                              example: server\n                              type: string\n                          required:\n                            - id\n                            - type\n                          type: object\n                        type: array\n                      started:\n                        description: Point in time when the Action was started (in ISO-8601 format)\n                        example: 2016-01-30T23:55:00+00:00\n                        type: string\n                      status:\n                        description: Status of the Action\n                        enum:\n                          - success\n                          - running\n                          - error\n                        type: string\n                    required:\n                      - id\n                      - command\n                      - status\n                      - progress\n                      - started\n                      - finished\n                      - resources\n                      - error\n                    title: Action\n                    type: object\n                required:\n                  - action\n                title: ActionResponse\n                type: object\n          description: The `action` key contains the `delete_route` Action\n      summary: Delete a route from a Network\n      tags:\n        - Network Actions\n  \"/networks/{id}/actions/delete_subnet\":\n    post:\n      description: |\n        Deletes a single subnet entry from a Network. You cannot delete subnets which still have Servers attached. If you have Servers attached you first need to detach all Servers that use IPs from this subnet before you can delete the subnet.\n\n        Note: if the Network object changes during the request, the response will be a “conflict” error.\n      parameters:\n        - description: ID of the Network\n          in: path\n          name: id\n          required: true\n          schema:\n            type: integer\n      requestBody:\n        content:\n          application/json:\n            schema:\n              properties:\n                ip_range:\n                  description: IP range of subnet to delete\n                  example: 10.0.1.0/24\n                  type: string\n              required:\n                - ip_range\n              title: DeleteSubnetRequest\n              type: object\n      responses:\n        \"201\":\n          content:\n            application/json:\n              example:\n                action:\n                  command: delete_subnet\n                  error:\n                    code: action_failed\n                    message: Action failed\n                  finished: null\n                  id: 13\n                  progress: 0\n                  resources:\n                    - id: 4711\n                      type: network\n                  started: 2016-01-30T23:50:00+00:00\n                  status: running\n              schema:\n                properties:\n                  action:\n                    properties:\n                      command:\n                        description: Command executed in the Action\n                        example: start_server\n                        type: string\n                      error:\n                        description: Error message for the Action if error occurred, otherwise null\n                        nullable: true\n                        properties:\n                          code:\n                            description: Fixed machine readable code\n                            example: action_failed\n                            type: string\n                          message:\n                            description: Humanized error message\n                            example: Action failed\n                            type: string\n                        required:\n                          - code\n                          - message\n                        type: object\n                      finished:\n                        description: Point in time when the Action was finished (in ISO-8601 format). Only set if the Action is finished otherwise null.\n                        example: 2016-01-30T23:55:00+00:00\n                        nullable: true\n                        type: string\n                      id:\n                        description: ID of the Resource\n                        example: 42\n                        type: integer\n                      progress:\n                        description: Progress of Action in percent\n                        example: 100\n                        type: number\n                      resources:\n                        description: Resources the Action relates to\n                        items:\n                          properties:\n                            id:\n                              description: ID of the Resource\n                              example: 42\n                              type: integer\n                            type:\n                              description: Type of resource referenced\n                              example: server\n                              type: string\n                          required:\n                            - id\n                            - type\n                          type: object\n                        type: array\n                      started:\n                        description: Point in time when the Action was started (in ISO-8601 format)\n                        example: 2016-01-30T23:55:00+00:00\n                        type: string\n                      status:\n                        description: Status of the Action\n                        enum:\n                          - success\n                          - running\n                          - error\n                        type: string\n                    required:\n                      - id\n                      - command\n                      - status\n                      - progress\n                      - started\n                      - finished\n                      - resources\n                      - error\n                    title: Action\n                    type: object\n                required:\n                  - action\n                title: ActionResponse\n                type: object\n          description: The `action` key contains the `delete_subnet` Action\n      summary: Delete a subnet from a Network\n      tags:\n        - Network Actions\n  \"/networks/{id}/actions/{action_id}\":\n    get:\n      description: Returns a specific Action for a Network.\n      parameters:\n        - description: ID of the Network\n          in: path\n          name: id\n          required: true\n          schema:\n            type: integer\n        - description: ID of the Action\n          in: path\n          name: action_id\n          required: true\n          schema:\n            type: integer\n      responses:\n        \"200\":\n          content:\n            application/json:\n              example:\n                action:\n                  command: add_subnet\n                  error:\n                    code: action_failed\n                    message: Action failed\n                  finished: 2016-01-30T23:56:00+00:00\n                  id: 13\n                  progress: 100\n                  resources:\n                    - id: 4711\n                      type: network\n                  started: 2016-01-30T23:55:00+00:00\n                  status: success\n              schema:\n                properties:\n                  action:\n                    properties:\n                      command:\n                        description: Command executed in the Action\n                        example: start_server\n                        type: string\n                      error:\n                        description: Error message for the Action if error occurred, otherwise null\n                        nullable: true\n                        properties:\n                          code:\n                            description: Fixed machine readable code\n                            example: action_failed\n                            type: string\n                          message:\n                            description: Humanized error message\n                            example: Action failed\n                            type: string\n                        required:\n                          - code\n                          - message\n                        type: object\n                      finished:\n                        description: Point in time when the Action was finished (in ISO-8601 format). Only set if the Action is finished otherwise null.\n                        example: 2016-01-30T23:55:00+00:00\n                        nullable: true\n                        type: string\n                      id:\n                        description: ID of the Resource\n                        example: 42\n                        type: integer\n                      progress:\n                        description: Progress of Action in percent\n                        example: 100\n                        type: number\n                      resources:\n                        description: Resources the Action relates to\n                        items:\n                          properties:\n                            id:\n                              description: ID of the Resource\n                              example: 42\n                              type: integer\n                            type:\n                              description: Type of resource referenced\n                              example: server\n                              type: string\n                          required:\n                            - id\n                            - type\n                          type: object\n                        type: array\n                      started:\n                        description: Point in time when the Action was started (in ISO-8601 format)\n                        example: 2016-01-30T23:55:00+00:00\n                        type: string\n                      status:\n                        description: Status of the Action\n                        enum:\n                          - success\n                          - running\n                          - error\n                        type: string\n                    required:\n                      - id\n                      - command\n                      - status\n                      - progress\n                      - started\n                      - finished\n                      - resources\n                      - error\n                    title: Action\n                    type: object\n                required:\n                  - action\n                title: ActionResponse\n                type: object\n          description: The `action` key contains the Network Action\n      summary: Get an Action for a Network\n      tags:\n        - Network Actions\n  /placement_groups:\n    get:\n      description: Returns all PlacementGroup objects.\n      parameters:\n        - description: Can be used multiple times.\n          in: query\n          name: sort\n          required: false\n          schema:\n            enum:\n              - id\n              - id:asc\n              - id:desc\n              - name\n              - name:asc\n              - name:desc\n              - created\n              - created:asc\n              - created:desc\n            type: string\n        - description: Can be used to filter resources by their name. The response will only contain the resources matching the specified name\n          in: query\n          name: name\n          required: false\n          schema:\n            type: string\n        - description: Can be used to filter resources by labels. The response will only contain resources matching the label selector.\n          in: query\n          name: label_selector\n          required: false\n          schema:\n            type: string\n        - description: Can be used multiple times. The response will only contain PlacementGroups matching the type.\n          in: query\n          name: type\n          required: false\n          schema:\n            enum:\n              - spread\n            title: ParameterType\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              example:\n                placement_groups:\n                  - created: 2019-01-08T12:10:00+00:00\n                    id: 897\n                    labels:\n                      key: value\n                    name: my Placement Group\n                    servers:\n                      - 4711\n                      - 4712\n                    type: spread\n              schema:\n                properties:\n                  meta:\n                    properties:\n                      pagination:\n                        properties:\n                          last_page:\n                            description: ID of the last page available. Can be null if the current page is the last one.\n                            example: 4\n                            nullable: true\n                            type: number\n                          next_page:\n                            description: ID of the next page. Can be null if the current page is the last one.\n                            example: 4\n                            nullable: true\n                            type: number\n                          page:\n                            description: Current page number\n                            example: 3\n                            type: number\n                          per_page:\n                            description: Maximum number of items shown per page in the response\n                            example: 25\n                            type: number\n                          previous_page:\n                            description: ID of the previous page. Can be null if the current page is the first one.\n                            example: 2\n                            nullable: true\n                            type: number\n                          total_entries:\n                            description: The total number of entries that exist in the database for this query. Nullable if unknown.\n                            example: 100\n                            nullable: true\n                            type: number\n                        required:\n                          - page\n                          - per_page\n                          - previous_page\n                          - next_page\n                          - last_page\n                          - total_entries\n                        type: object\n                    required:\n                      - pagination\n                    type: object\n                  placement_groups:\n                    items:\n                      properties:\n                        created:\n                          description: Point in time when the Resource was created (in ISO-8601 format)\n                          example: 2016-01-30T23:55:00+00:00\n                          type: string\n                        id:\n                          description: ID of the Resource\n                          example: 42\n                          type: integer\n                        labels:\n                          additionalProperties:\n                            type: string\n                          description: User-defined labels (key-value pairs)\n                          type: object\n                        name:\n                          description: Name of the Resource. Must be unique per Project.\n                          example: my-resource\n                          type: string\n                        servers:\n                          description: Array of IDs of Servers that are part of this Placement Group\n                          example:\n                            - 42\n                          items:\n                            type: integer\n                          type: array\n                        type:\n                          description: Type of the Placement Group\n                          enum:\n                            - spread\n                          example: spread\n                          type: string\n                      required:\n                        - id\n                        - name\n                        - labels\n                        - type\n                        - created\n                        - servers\n                      title: PlacementGroup\n                      type: object\n                    type: array\n                required:\n                  - placement_groups\n                title: PlacementGroupsResponse\n                type: object\n          description: The `placement_groups` key contains an array of PlacementGroup objects\n      summary: Get all PlacementGroups\n      tags:\n        - Placement Groups\n    post:\n      description: |\n        Creates a new PlacementGroup.\n      requestBody:\n        content:\n          application/json:\n            examples:\n              spread:\n                summary: Creating a type `spread` Placement Group\n                value:\n                  name: my Placement Group\n                  type: spread\n            schema:\n              properties:\n                labels:\n                  description: User-defined labels (key-value pairs)\n                  type: object\n                name:\n                  description: Name of the PlacementGroup\n                  example: my Placement Group\n                  type: string\n                type:\n                  description: Define the Placement Group Type.\n                  enum:\n                    - spread\n                  example: spread\n                  type: string\n              required:\n                - name\n                - type\n              title: CreatePlacementGroupRequest\n              type: object\n      responses:\n        \"201\":\n          content:\n            application/json:\n              examples:\n                spread:\n                  summary: Response when creating a type `spread` PlacementGroup\n                  value:\n                    placement_group:\n                      created: 2019-01-08T12:10:00+00:00\n                      id: 897\n                      labels:\n                        key: value\n                      name: my Placement Group\n                      servers: []\n                      type: spread\n              schema:\n                properties:\n                  action:\n                    nullable: true\n                    properties:\n                      command:\n                        description: Command executed in the Action\n                        example: start_server\n                        type: string\n                      error:\n                        description: Error message for the Action if error occurred, otherwise null\n                        nullable: true\n                        properties:\n                          code:\n                            description: Fixed machine readable code\n                            example: action_failed\n                            type: string\n                          message:\n                            description: Humanized error message\n                            example: Action failed\n                            type: string\n                        required:\n                          - code\n                          - message\n                        type: object\n                      finished:\n                        description: Point in time when the Action was finished (in ISO-8601 format). Only set if the Action is finished otherwise null.\n                        example: 2016-01-30T23:55:00+00:00\n                        nullable: true\n                        type: string\n                      id:\n                        description: ID of the Resource\n                        example: 42\n                        type: integer\n                      progress:\n                        description: Progress of Action in percent\n                        example: 100\n                        type: number\n                      resources:\n                        description: Resources the Action relates to\n                        items:\n                          properties:\n                            id:\n                              description: ID of the Resource\n                              example: 42\n                              type: integer\n                            type:\n                              description: Type of resource referenced\n                              example: server\n                              type: string\n                          required:\n                            - id\n                            - type\n                          type: object\n                        type: array\n                      started:\n                        description: Point in time when the Action was started (in ISO-8601 format)\n                        example: 2016-01-30T23:55:00+00:00\n                        type: string\n                      status:\n                        description: Status of the Action\n                        enum:\n                          - success\n                          - running\n                          - error\n                        type: string\n                    required:\n                      - id\n                      - command\n                      - status\n                      - progress\n                      - started\n                      - finished\n                      - resources\n                      - error\n                    title: NullableAction\n                    type: object\n                  placement_group:\n                    properties:\n                      created:\n                        description: Point in time when the Resource was created (in ISO-8601 format)\n                        example: 2016-01-30T23:55:00+00:00\n                        type: string\n                      id:\n                        description: ID of the Resource\n                        example: 42\n                        type: integer\n                      labels:\n                        additionalProperties:\n                          type: string\n                        description: User-defined labels (key-value pairs)\n                        type: object\n                      name:\n                        description: Name of the Resource. Must be unique per Project.\n                        example: my-resource\n                        type: string\n                      servers:\n                        description: Array of IDs of Servers that are part of this Placement Group\n                        example:\n                          - 42\n                        items:\n                          type: integer\n                        type: array\n                      type:\n                        description: Type of the Placement Group\n                        enum:\n                          - spread\n                        example: spread\n                        type: string\n                    required:\n                      - id\n                      - name\n                      - labels\n                      - type\n                      - created\n                      - servers\n                    title: PlacementGroup\n                    type: object\n                required:\n                  - placement_group\n                title: CreatePlacementGroupResponse\n                type: object\n          description: The `PlacementGroup` key contains the PlacementGroup that was just created.\n      summary: Create a PlacementGroup\n      tags:\n        - Placement Groups\n  \"/placement_groups/{id}\":\n    delete:\n      description: Deletes a PlacementGroup.\n      parameters:\n        - description: ID of the resource\n          in: path\n          name: id\n          required: true\n          schema:\n            type: integer\n      responses:\n        \"204\":\n          description: PlacementGroup deleted\n      summary: Delete a PlacementGroup\n      tags:\n        - Placement Groups\n    get:\n      description: Gets a specific PlacementGroup object.\n      parameters:\n        - description: ID of the resource\n          in: path\n          name: id\n          required: true\n          schema:\n            type: integer\n      responses:\n        \"200\":\n          content:\n            application/json:\n              example:\n                placement_group:\n                  created: 2019-01-08T12:10:00+00:00\n                  id: 897\n                  labels:\n                    key: value\n                  name: my Placement Group\n                  servers:\n                    - 4711\n                    - 4712\n                  type: spread\n              schema:\n                properties:\n                  placement_group:\n                    properties:\n                      created:\n                        description: Point in time when the Resource was created (in ISO-8601 format)\n                        example: 2016-01-30T23:55:00+00:00\n                        type: string\n                      id:\n                        description: ID of the Resource\n                        example: 42\n                        type: integer\n                      labels:\n                        additionalProperties:\n                          type: string\n                        description: User-defined labels (key-value pairs)\n                        type: object\n                      name:\n                        description: Name of the Resource. Must be unique per Project.\n                        example: my-resource\n                        type: string\n                      servers:\n                        description: Array of IDs of Servers that are part of this Placement Group\n                        example:\n                          - 42\n                        items:\n                          type: integer\n                        type: array\n                      type:\n                        description: Type of the Placement Group\n                        enum:\n                          - spread\n                        example: spread\n                        type: string\n                    required:\n                      - id\n                      - name\n                      - labels\n                      - type\n                      - created\n                      - servers\n                    title: PlacementGroup\n                    type: object\n                required:\n                  - placement_group\n                title: PlacementGroupResponse\n                type: object\n          description: The `placement_group` key contains a PlacementGroup object\n      summary: Get a PlacementGroup\n      tags:\n        - Placement Groups\n    put:\n      description: |\n        Updates the PlacementGroup properties.\n\n        Note that when updating labels, the PlacementGroup’s current set of labels will be replaced with the labels provided in the request body. So, for example, if you want to add a new label, you have to provide all existing labels plus the new label in the request body.\n\n        Note: if the PlacementGroup object changes during the request, the response will be a “conflict” error.\n      parameters:\n        - description: ID of the resource\n          in: path\n          name: id\n          required: true\n          schema:\n            type: integer\n      requestBody:\n        content:\n          application/json:\n            schema:\n              properties:\n                labels:\n                  description: User-defined labels (key-value pairs)\n                  example:\n                    labelkey: value\n                  type: object\n                name:\n                  description: New PlacementGroup name\n                  example: my Placement Group\n                  type: string\n              title: UpdatePlacementGroupRequest\n              type: object\n      responses:\n        \"200\":\n          content:\n            application/json:\n              example:\n                placement_group:\n                  created: 2019-01-08T12:10:00+00:00\n                  id: 897\n                  labels:\n                    key: value\n                  name: my Placement Group\n                  servers:\n                    - 4711\n                    - 4712\n                  type: spread\n              schema:\n                properties:\n                  placement_group:\n                    properties:\n                      created:\n                        description: Point in time when the Resource was created (in ISO-8601 format)\n                        example: 2016-01-30T23:55:00+00:00\n                        type: string\n                      id:\n                        description: ID of the Resource\n                        example: 42\n                        type: integer\n                      labels:\n                        additionalProperties:\n                          type: string\n                        description: User-defined labels (key-value pairs)\n                        type: object\n                      name:\n                        description: Name of the Resource. Must be unique per Project.\n                        example: my-resource\n                        type: string\n                      servers:\n                        description: Array of IDs of Servers that are part of this Placement Group\n                        example:\n                          - 42\n                        items:\n                          type: integer\n                        type: array\n                      type:\n                        description: Type of the Placement Group\n                        enum:\n                          - spread\n                        example: spread\n                        type: string\n                    required:\n                      - id\n                      - name\n                      - labels\n                      - type\n                      - created\n                      - servers\n                    title: PlacementGroup\n                    type: object\n                required:\n                  - placement_group\n                title: PlacementGroupResponse\n                type: object\n          description: The `certificate` key contains the PlacementGroup that was just updated\n      summary: Update a PlacementGroup\n      tags:\n        - Placement Groups\n  /pricing:\n    get:\n      description: |\n        Returns prices for all resources available on the platform. VAT and currency of the Project owner are used for calculations.\n\n        Both net and gross prices are included in the response.\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                properties:\n                  pricing:\n                    additionalProperties: false\n                    properties:\n                      currency:\n                        description: Currency the returned prices are expressed in, coded according to ISO 4217\n                        example: EUR\n                        type: string\n                      floating_ip:\n                        description: The cost of one Floating IP per month\n                        properties:\n                          price_monthly:\n                            properties:\n                              gross:\n                                description: Price with VAT added\n                                example: \"1.1900000000000000\"\n                                type: string\n                              net:\n                                description: Price without VAT\n                                example: \"1.0000000000\"\n                                type: string\n                            required:\n                              - net\n                              - gross\n                            type: object\n                        required:\n                          - price_monthly\n                        type: object\n                      floating_ips:\n                        description: Costs of Floating IPs types per Location and type\n                        items:\n                          properties:\n                            prices:\n                              description: Floating IP type costs per Location\n                              items:\n                                properties:\n                                  location:\n                                    description: Name of the Location the price is for\n                                    example: fsn1\n                                    type: string\n                                  price_monthly:\n                                    description: Monthly costs for a Floating IP type in this Location\n                                    properties:\n                                      gross:\n                                        description: Price with VAT added\n                                        example: \"1.1900000000000000\"\n                                        type: string\n                                      net:\n                                        description: Price without VAT\n                                        example: \"1.0000000000\"\n                                        type: string\n                                    required:\n                                      - net\n                                      - gross\n                                    type: object\n                                required:\n                                  - location\n                                  - price_monthly\n                                type: object\n                              type: array\n                            type:\n                              description: The type of the Floating IP\n                              enum:\n                                - ipv4\n                                - ipv6\n                              example: ipv4\n                              type: string\n                          required:\n                            - type\n                            - prices\n                          type: object\n                        type: array\n                      image:\n                        description: The cost of Image per GB/month\n                        properties:\n                          price_per_gb_month:\n                            properties:\n                              gross:\n                                description: Price with VAT added\n                                example: \"1.1900000000000000\"\n                                type: string\n                              net:\n                                description: Price without VAT\n                                example: \"1.0000000000\"\n                                type: string\n                            required:\n                              - net\n                              - gross\n                            type: object\n                        required:\n                          - price_per_gb_month\n                        type: object\n                      load_balancer_types:\n                        description: Costs of Load Balancer types per Location and type\n                        items:\n                          properties:\n                            id:\n                              description: ID of the Load Balancer type the price is for\n                              example: 1\n                              type: number\n                            name:\n                              description: Name of the Load Balancer type the price is for\n                              example: lb11\n                              type: string\n                            prices:\n                              description: Load Balancer type costs per Location\n                              items:\n                                properties:\n                                  location:\n                                    description: Name of the Location the price is for\n                                    example: fsn1\n                                    type: string\n                                  price_hourly:\n                                    description: Hourly costs for a Load Balancer type in this network zone\n                                    properties:\n                                      gross:\n                                        description: Price with VAT added\n                                        example: \"1.1900000000000000\"\n                                        type: string\n                                      net:\n                                        description: Price without VAT\n                                        example: \"1.0000000000\"\n                                        type: string\n                                    required:\n                                      - net\n                                      - gross\n                                    type: object\n                                  price_monthly:\n                                    description: Monthly costs for a Load Balancer type in this network zone\n                                    properties:\n                                      gross:\n                                        description: Price with VAT added\n                                        example: \"1.1900000000000000\"\n                                        type: string\n                                      net:\n                                        description: Price without VAT\n                                        example: \"1.0000000000\"\n                                        type: string\n                                    required:\n                                      - net\n                                      - gross\n                                    type: object\n                                required:\n                                  - location\n                                  - price_hourly\n                                  - price_monthly\n                                type: object\n                              type: array\n                          required:\n                            - id\n                            - name\n                            - prices\n                          type: object\n                        type: array\n                      server_backup:\n                        description: Will increase base Server costs by specific percentage\n                        properties:\n                          percentage:\n                            description: Percentage by how much the base price will increase\n                            example: \"20.0000000000\"\n                            type: string\n                        required:\n                          - percentage\n                        type: object\n                      server_types:\n                        description: Costs of Server types per Location and type\n                        items:\n                          properties:\n                            id:\n                              description: ID of the Server type the price is for\n                              example: 4\n                              type: number\n                            name:\n                              description: Name of the Server type the price is for\n                              example: cx11\n                              type: string\n                            prices:\n                              description: Server type costs per Location\n                              items:\n                                properties:\n                                  location:\n                                    description: Name of the Location the price is for\n                                    example: fsn1\n                                    type: string\n                                  price_hourly:\n                                    description: Hourly costs for a Server type in this Location\n                                    properties:\n                                      gross:\n                                        description: Price with VAT added\n                                        example: \"1.1900000000000000\"\n                                        type: string\n                                      net:\n                                        description: Price without VAT\n                                        example: \"1.0000000000\"\n                                        type: string\n                                    required:\n                                      - net\n                                      - gross\n                                    type: object\n                                  price_monthly:\n                                    description: Monthly costs for a Server type in this Location\n                                    properties:\n                                      gross:\n                                        description: Price with VAT added\n                                        example: \"1.1900000000000000\"\n                                        type: string\n                                      net:\n                                        description: Price without VAT\n                                        example: \"1.0000000000\"\n                                        type: string\n                                    required:\n                                      - net\n                                      - gross\n                                    type: object\n                                required:\n                                  - location\n                                  - price_hourly\n                                  - price_monthly\n                                type: object\n                              type: array\n                          required:\n                            - id\n                            - name\n                            - prices\n                          type: object\n                        type: array\n                      traffic:\n                        description: The cost of additional traffic per TB\n                        properties:\n                          price_per_tb:\n                            properties:\n                              gross:\n                                description: Price with VAT added\n                                example: \"1.1900000000000000\"\n                                type: string\n                              net:\n                                description: Price without VAT\n                                example: \"1.0000000000\"\n                                type: string\n                            required:\n                              - net\n                              - gross\n                            type: object\n                        required:\n                          - price_per_tb\n                        type: object\n                      vat_rate:\n                        description: The VAT rate used for calculating prices with VAT\n                        example: \"19.000000\"\n                        type: string\n                      volume:\n                        description: The cost of Volume per GB/month\n                        properties:\n                          price_per_gb_month:\n                            properties:\n                              gross:\n                                description: Price with VAT added\n                                example: \"1.1900000000000000\"\n                                type: string\n                              net:\n                                description: Price without VAT\n                                example: \"1.0000000000\"\n                                type: string\n                            required:\n                              - net\n                              - gross\n                            type: object\n                        required:\n                          - price_per_gb_month\n                        type: object\n                    required:\n                      - currency\n                      - vat_rate\n                      - image\n                      - floating_ip\n                      - floating_ips\n                      - traffic\n                      - server_backup\n                      - volume\n                      - server_types\n                      - load_balancer_types\n                    type: object\n                required:\n                  - pricing\n                type: object\n          description: The `pricing` key in the reply contains an pricing object with this structure\n      summary: Get all prices\n      tags:\n        - Pricing\n  /server_types:\n    get:\n      description: Gets all Server type objects.\n      parameters:\n        - description: Can be used to filter Server types by their name. The response will only contain the Server type matching the specified name.\n          in: query\n          name: name\n          required: false\n          schema:\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                properties:\n                  server_types:\n                    items:\n                      properties:\n                        cores:\n                          description: Number of cpu cores a Server of this type will have\n                          example: 1\n                          type: number\n                        cpu_type:\n                          description: Type of cpu\n                          enum:\n                            - shared\n                            - dedicated\n                          type: string\n                        deprecated:\n                          description: True if Server type is deprecated\n                          example: false\n                          type: boolean\n                        description:\n                          description: Description of the Server type\n                          example: CX11\n                          type: string\n                        disk:\n                          description: Disk size a Server of this type will have in GB\n                          example: 24\n                          type: number\n                        id:\n                          description: ID of the Server type\n                          example: 1\n                          type: number\n                        memory:\n                          description: Memory a Server of this type will have in GB\n                          example: 1\n                          type: number\n                        name:\n                          description: Unique identifier of the Server type\n                          example: cx11\n                          type: string\n                        prices:\n                          description: Prices in different Locations\n                          items:\n                            properties:\n                              location:\n                                description: Name of the Location the price is for\n                                example: fsn1\n                                type: string\n                              price_hourly:\n                                description: Hourly costs for a Server type in this Location\n                                properties:\n                                  gross:\n                                    description: Price with VAT added\n                                    example: \"1.1900000000000000\"\n                                    type: string\n                                  net:\n                                    description: Price without VAT\n                                    example: \"1.0000000000\"\n                                    type: string\n                                required:\n                                  - net\n                                  - gross\n                                type: object\n                              price_monthly:\n                                description: Monthly costs for a Server type in this Location\n                                properties:\n                                  gross:\n                                    description: Price with VAT added\n                                    example: \"1.1900000000000000\"\n                                    type: string\n                                  net:\n                                    description: Price without VAT\n                                    example: \"1.0000000000\"\n                                    type: string\n                                required:\n                                  - net\n                                  - gross\n                                type: object\n                            required:\n                              - location\n                              - price_hourly\n                              - price_monthly\n                            type: object\n                          type: array\n                        storage_type:\n                          description: Type of Server boot drive. Local has higher speed. Network has better availability.\n                          enum:\n                            - local\n                            - network\n                          type: string\n                      required:\n                        - id\n                        - name\n                        - description\n                        - cores\n                        - memory\n                        - disk\n                        - deprecated\n                        - prices\n                        - storage_type\n                        - cpu_type\n                      type: object\n                    type: array\n                required:\n                  - server_types\n                type: object\n          description: The `server_types` key in the reply contains an array of Server type objects with this structure\n      summary: Get all Server Types\n      tags:\n        - Server Types\n  \"/server_types/{id}\":\n    get:\n      description: Gets a specific Server type object.\n      parameters:\n        - description: ID of Server Type\n          in: path\n          name: id\n          required: true\n          schema:\n            type: integer\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                properties:\n                  server_type:\n                    properties:\n                      cores:\n                        description: Number of cpu cores a Server of this type will have\n                        example: 1\n                        type: number\n                      cpu_type:\n                        description: Type of cpu\n                        enum:\n                          - shared\n                          - dedicated\n                        type: string\n                      deprecated:\n                        description: True if Server type is deprecated\n                        example: false\n                        type: boolean\n                      description:\n                        description: Description of the Server type\n                        example: CX11\n                        type: string\n                      disk:\n                        description: Disk size a Server of this type will have in GB\n                        example: 24\n                        type: number\n                      id:\n                        description: ID of the Server type\n                        example: 1\n                        type: number\n                      memory:\n                        description: Memory a Server of this type will have in GB\n                        example: 1\n                        type: number\n                      name:\n                        description: Unique identifier of the Server type\n                        example: cx11\n                        type: string\n                      prices:\n                        description: Prices in different Locations\n                        items:\n                          properties:\n                            location:\n                              description: Name of the Location the price is for\n                              example: fsn1\n                              type: string\n                            price_hourly:\n                              description: Hourly costs for a Server type in this Location\n                              properties:\n                                gross:\n                                  description: Price with VAT added\n                                  example: \"1.1900000000000000\"\n                                  type: string\n                                net:\n                                  description: Price without VAT\n                                  example: \"1.0000000000\"\n                                  type: string\n                              required:\n                                - net\n                                - gross\n                              type: object\n                            price_monthly:\n                              description: Monthly costs for a Server type in this Location\n                              properties:\n                                gross:\n                                  description: Price with VAT added\n                                  example: \"1.1900000000000000\"\n                                  type: string\n                                net:\n                                  description: Price without VAT\n                                  example: \"1.0000000000\"\n                                  type: string\n                              required:\n                                - net\n                                - gross\n                              type: object\n                          required:\n                            - location\n                            - price_hourly\n                            - price_monthly\n                          type: object\n                        type: array\n                      storage_type:\n                        description: Type of Server boot drive. Local has higher speed. Network has better availability.\n                        enum:\n                          - local\n                          - network\n                        type: string\n                    required:\n                      - id\n                      - name\n                      - description\n                      - cores\n                      - memory\n                      - disk\n                      - deprecated\n                      - prices\n                      - storage_type\n                      - cpu_type\n                    type: object\n                required:\n                  - server_type\n                type: object\n          description: The `server_type` key in the reply contains a Server type object with this structure\n      summary: Get a Server Type\n      tags:\n        - Server Types\n  /servers:\n    get:\n      description: Returns all existing Server objects\n      parameters:\n        - description: Can be used to filter resources by their name. The response will only contain the resources matching the specified name\n          in: query\n          name: name\n          required: false\n          schema:\n            type: string\n        - description: Can be used to filter resources by labels. The response will only contain resources matching the label selector.\n          in: query\n          name: label_selector\n          required: false\n          schema:\n            type: string\n        - description: Can be used multiple times.\n          in: query\n          name: sort\n          required: false\n          schema:\n            enum:\n              - id\n              - id:asc\n              - id:desc\n              - name\n              - name:asc\n              - name:desc\n              - created\n              - created:asc\n              - created:desc\n            type: string\n        - description: Can be used multiple times. The response will only contain Server matching the status\n          in: query\n          name: status\n          required: false\n          schema:\n            enum:\n              - initializing\n              - starting\n              - running\n              - stopping\n              - off\n              - deleting\n              - rebuilding\n              - migrating\n              - unknown\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                properties:\n                  meta:\n                    properties:\n                      pagination:\n                        properties:\n                          last_page:\n                            description: ID of the last page available. Can be null if the current page is the last one.\n                            example: 4\n                            nullable: true\n                            type: number\n                          next_page:\n                            description: ID of the next page. Can be null if the current page is the last one.\n                            example: 4\n                            nullable: true\n                            type: number\n                          page:\n                            description: Current page number\n                            example: 3\n                            type: number\n                          per_page:\n                            description: Maximum number of items shown per page in the response\n                            example: 25\n                            type: number\n                          previous_page:\n                            description: ID of the previous page. Can be null if the current page is the first one.\n                            example: 2\n                            nullable: true\n                            type: number\n                          total_entries:\n                            description: The total number of entries that exist in the database for this query. Nullable if unknown.\n                            example: 100\n                            nullable: true\n                            type: number\n                        required:\n                          - page\n                          - per_page\n                          - previous_page\n                          - next_page\n                          - last_page\n                          - total_entries\n                        type: object\n                    required:\n                      - pagination\n                    type: object\n                  servers:\n                    items:\n                      properties:\n                        backup_window:\n                          description: Time window (UTC) in which the backup will run, or null if the backups are not enabled\n                          example: 22-02\n                          nullable: true\n                          type: string\n                        created:\n                          description: Point in time when the Resource was created (in ISO-8601 format)\n                          example: 2016-01-30T23:55:00+00:00\n                          type: string\n                        datacenter:\n                          description: Datacenter this Resource is located at\n                          properties:\n                            description:\n                              description: Description of the Datacenter\n                              example: Falkenstein DC Park 8\n                              type: string\n                            id:\n                              description: ID of the Resource\n                              example: 42\n                              type: integer\n                            location:\n                              properties:\n                                city:\n                                  description: City the Location is closest to\n                                  example: Falkenstein\n                                  type: string\n                                country:\n                                  description: ISO 3166-1 alpha-2 code of the country the Location resides in\n                                  example: DE\n                                  type: string\n                                description:\n                                  description: Description of the Location\n                                  example: Falkenstein DC Park 1\n                                  type: string\n                                id:\n                                  description: ID of the Location\n                                  example: 1\n                                  type: number\n                                latitude:\n                                  description: Latitude of the city closest to the Location\n                                  example: 50.47612\n                                  type: number\n                                longitude:\n                                  description: Longitude of the city closest to the Location\n                                  example: 12.370071\n                                  type: number\n                                name:\n                                  description: Unique identifier of the Location\n                                  example: fsn1\n                                  type: string\n                                network_zone:\n                                  description: Name of network zone this Location resides in\n                                  example: eu-central\n                                  type: string\n                              required:\n                                - id\n                                - name\n                                - description\n                                - country\n                                - city\n                                - latitude\n                                - longitude\n                                - network_zone\n                              type: object\n                            name:\n                              description: Unique identifier of the Datacenter\n                              example: fsn1-dc8\n                              type: string\n                            server_types:\n                              description: The Server types the Datacenter can handle\n                              properties:\n                                available:\n                                  description: IDs of Server types that are supported and for which the Datacenter has enough resources left\n                                  example:\n                                    - 1\n                                    - 2\n                                    - 3\n                                  items:\n                                    type: number\n                                  type: array\n                                available_for_migration:\n                                  description: IDs of Server types that are supported and for which the Datacenter has enough resources left\n                                  example:\n                                    - 1\n                                    - 2\n                                    - 3\n                                  items:\n                                    type: number\n                                  type: array\n                                supported:\n                                  description: IDs of Server types that are supported in the Datacenter\n                                  example:\n                                    - 1\n                                    - 2\n                                    - 3\n                                  items:\n                                    type: number\n                                  type: array\n                              required:\n                                - supported\n                                - available\n                                - available_for_migration\n                              type: object\n                          required:\n                            - id\n                            - name\n                            - description\n                            - location\n                            - server_types\n                          type: object\n                        id:\n                          description: ID of the Resource\n                          example: 42\n                          type: integer\n                        image:\n                          nullable: true\n                          properties:\n                            bound_to:\n                              description: ID of Server the Image is bound to. Only set for Images of type `backup`.\n                              example: null\n                              nullable: true\n                              type: integer\n                            build_id:\n                              description: Build ID of the Image\n                              example: c313fe40383af26094a5a92026054320ab55abc7\n                              nullable: true\n                              type: string\n                            created:\n                              description: Point in time when the Resource was created (in ISO-8601 format)\n                              example: 2016-01-30T23:55:00+00:00\n                              type: string\n                            created_from:\n                              description: Information about the Server the Image was created from\n                              nullable: true\n                              properties:\n                                id:\n                                  description: ID of the Server the Image was created from\n                                  example: 1\n                                  type: integer\n                                name:\n                                  description: Server name at the time the Image was created\n                                  example: Server\n                                  type: string\n                              required:\n                                - id\n                                - name\n                              type: object\n                            deleted:\n                              description: Point in time where the Image was deleted (in ISO-8601 format)\n                              example: null\n                              nullable: true\n                              type: string\n                            deprecated:\n                              description: Point in time when the Image is considered to be deprecated (in ISO-8601 format)\n                              example: 2018-02-28T00:00:00+00:00\n                              nullable: true\n                              type: string\n                            description:\n                              description: Description of the Image\n                              example: Ubuntu 20.04 Standard 64 bit\n                              type: string\n                            disk_size:\n                              description: Size of the disk contained in the Image in GB\n                              example: 10\n                              type: number\n                            id:\n                              description: ID of the Resource\n                              example: 42\n                              type: integer\n                            image_size:\n                              description: Size of the Image file in our storage in GB. For snapshot Images this is the value relevant for calculating costs for the Image.\n                              example: 2.3\n                              nullable: true\n                              type: number\n                            labels:\n                              additionalProperties:\n                                type: string\n                              description: User-defined labels (key-value pairs)\n                              type: object\n                            name:\n                              description: Unique identifier of the Image. This value is only set for system Images.\n                              example: ubuntu-20.04\n                              nullable: true\n                              type: string\n                            os_flavor:\n                              description: Flavor of operating system contained in the Image\n                              enum:\n                                - ubuntu\n                                - centos\n                                - debian\n                                - fedora\n                                - unknown\n                              example: ubuntu\n                              type: string\n                            os_version:\n                              description: Operating system version\n                              example: \"20.04\"\n                              nullable: true\n                              type: string\n                            protection:\n                              description: Protection configuration for the Resource\n                              properties:\n                                delete:\n                                  description: If true, prevents the Resource from being deleted\n                                  example: false\n                                  type: boolean\n                              required:\n                                - delete\n                              type: object\n                            rapid_deploy:\n                              description: Indicates that rapid deploy of the Image is available\n                              example: false\n                              type: boolean\n                            status:\n                              description: Whether the Image can be used or if it's still being created or unavailable\n                              enum:\n                                - available\n                                - creating\n                                - unavailable\n                              type: string\n                            type:\n                              description: Type of the Image\n                              enum:\n                                - system\n                                - app\n                                - snapshot\n                                - backup\n                                - temporary\n                              example: snapshot\n                              type: string\n                          required:\n                            - id\n                            - type\n                            - status\n                            - name\n                            - description\n                            - image_size\n                            - disk_size\n                            - created\n                            - created_from\n                            - bound_to\n                            - os_flavor\n                            - os_version\n                            - protection\n                            - deprecated\n                            - deleted\n                            - labels\n                          type: object\n                        included_traffic:\n                          description: Free Traffic for the current billing period in bytes\n                          example: 654321\n                          nullable: true\n                          type: number\n                        ingoing_traffic:\n                          description: Inbound Traffic for the current billing period in bytes\n                          example: 123456\n                          nullable: true\n                          type: number\n                        iso:\n                          description: ISO Image that is attached to this Server. Null if no ISO is attached.\n                          nullable: true\n                          properties:\n                            deprecated:\n                              description: ISO 8601 timestamp of deprecation, null if ISO is still available. After the deprecation time it will no longer be possible to attach the ISO to Servers.\n                              example: 2018-02-28T00:00:00+00:00\n                              nullable: true\n                              type: string\n                            description:\n                              description: Description of the ISO\n                              example: FreeBSD 11.0 x64\n                              type: string\n                            id:\n                              description: ID of the Resource\n                              example: 42\n                              type: integer\n                            name:\n                              description: Unique identifier of the ISO. Only set for public ISOs\n                              example: FreeBSD-11.0-RELEASE-amd64-dvd1\n                              nullable: true\n                              type: string\n                            type:\n                              description: Type of the ISO\n                              enum:\n                                - public\n                                - private\n                              type: string\n                          required:\n                            - id\n                            - name\n                            - description\n                            - type\n                            - deprecated\n                          type: object\n                        labels:\n                          additionalProperties:\n                            type: string\n                          description: User-defined labels (key-value pairs)\n                          type: object\n                        load_balancers:\n                          items:\n                            type: integer\n                          type: array\n                        locked:\n                          description: True if Server has been locked and is not available to user\n                          example: false\n                          type: boolean\n                        name:\n                          description: Name of the Resource. Must be unique per Project.\n                          example: my-resource\n                          type: string\n                        outgoing_traffic:\n                          description: Outbound Traffic for the current billing period in bytes\n                          example: 123456\n                          nullable: true\n                          type: number\n                        placement_group:\n                          nullable: true\n                          properties:\n                            created:\n                              description: Point in time when the Resource was created (in ISO-8601 format)\n                              example: 2016-01-30T23:55:00+00:00\n                              type: string\n                            id:\n                              description: ID of the Resource\n                              example: 42\n                              type: integer\n                            labels:\n                              additionalProperties:\n                                type: string\n                              description: User-defined labels (key-value pairs)\n                              type: object\n                            name:\n                              description: Name of the Resource. Must be unique per Project.\n                              example: my-resource\n                              type: string\n                            servers:\n                              description: Array of IDs of Servers that are part of this Placement Group\n                              example:\n                                - 42\n                              items:\n                                type: integer\n                              type: array\n                            type:\n                              description: Type of the Placement Group\n                              enum:\n                                - spread\n                              example: spread\n                              type: string\n                          required:\n                            - id\n                            - name\n                            - labels\n                            - type\n                            - created\n                            - servers\n                          title: PlacementGroupNullable\n                          type: object\n                        primary_disk_size:\n                          description: Size of the primary Disk\n                          example: 50\n                          type: number\n                        private_net:\n                          description: Private networks information\n                          items:\n                            properties:\n                              alias_ips:\n                                items:\n                                  type: string\n                                type: array\n                              ip:\n                                example: 10.0.0.2\n                                type: string\n                              mac_address:\n                                example: 86:00:ff:2a:7d:e1\n                                type: string\n                              network:\n                                example: 4711\n                                type: integer\n                            type: object\n                          type: array\n                        protection:\n                          description: Protection configuration for the Server\n                          properties:\n                            delete:\n                              description: If true, prevents the Server from being deleted\n                              example: false\n                              type: boolean\n                            rebuild:\n                              description: If true, prevents the Server from being rebuilt\n                              example: false\n                              type: boolean\n                          required:\n                            - delete\n                            - rebuild\n                          type: object\n                        public_net:\n                          description: Public network information. The Server's IPv4 address can be found in `public_net-\u003eipv4-\u003eip`\n                          properties:\n                            firewalls:\n                              description: Firewalls applied to the public network interface of this Server\n                              items:\n                                properties:\n                                  id:\n                                    description: ID of the Resource\n                                    example: 42\n                                    type: integer\n                                  status:\n                                    description: Status of the Firewall on the Server\n                                    enum:\n                                      - applied\n                                      - pending\n                                    example: applied\n                                    type: string\n                                title: ServerPublicNetFirewall\n                                type: object\n                              type: array\n                            floating_ips:\n                              description: IDs of Floating IPs assigned to this Server\n                              example:\n                                - 478\n                              items:\n                                type: integer\n                              type: array\n                            ipv4:\n                              description: IP address (v4) and its reverse DNS entry of this Server\n                              properties:\n                                blocked:\n                                  description: If the IP is blocked by our anti abuse dept\n                                  example: false\n                                  type: boolean\n                                dns_ptr:\n                                  description: Reverse DNS PTR entry for the IPv4 addresses of this Server\n                                  example: server01.example.com\n                                  type: string\n                                ip:\n                                  description: IP address (v4) of this Server\n                                  example: 1.2.3.4\n                                  type: string\n                              required:\n                                - ip\n                                - blocked\n                                - dns_ptr\n                              type: object\n                            ipv6:\n                              description: IPv6 network assigned to this Server and its reverse DNS entry\n                              properties:\n                                blocked:\n                                  description: If the IP is blocked by our anti abuse dept\n                                  example: false\n                                  type: boolean\n                                dns_ptr:\n                                  description: Reverse DNS PTR entries for the IPv6 addresses of this Server, `null` by default\n                                  items:\n                                    properties:\n                                      dns_ptr:\n                                        description: DNS pointer for the specific IP address\n                                        example: server.example.com\n                                        type: string\n                                      ip:\n                                        description: Single IPv6 address of this Server for which the reverse DNS entry has been set up\n                                        example: 2001:db8::1\n                                        type: string\n                                    required:\n                                      - ip\n                                      - dns_ptr\n                                    type: object\n                                  nullable: true\n                                  type: array\n                                ip:\n                                  description: IP address (v4) of this Server\n                                  example: 2001:db8::/64\n                                  type: string\n                              required:\n                                - ip\n                                - blocked\n                                - dns_ptr\n                              type: object\n                          required:\n                            - ipv4\n                            - ipv6\n                            - floating_ips\n                          type: object\n                        rescue_enabled:\n                          description: True if rescue mode is enabled. Server will then boot into rescue system on next reboot\n                          example: false\n                          type: boolean\n                        server_type:\n                          description: Type of Server - determines how much ram, disk and cpu a Server has\n                          properties:\n                            cores:\n                              description: Number of cpu cores a Server of this type will have\n                              example: 1\n                              type: number\n                            cpu_type:\n                              description: Type of cpu\n                              enum:\n                                - shared\n                                - dedicated\n                              type: string\n                            deprecated:\n                              description: True if Server type is deprecated\n                              example: false\n                              type: boolean\n                            description:\n                              description: Description of the Server type\n                              example: CX11\n                              type: string\n                            disk:\n                              description: Disk size a Server of this type will have in GB\n                              example: 25\n                              type: number\n                            id:\n                              description: ID of the Server type\n                              example: 1\n                              type: integer\n                            memory:\n                              description: Memory a Server of this type will have in GB\n                              example: 1\n                              type: number\n                            name:\n                              description: Unique identifier of the Server type\n                              example: cx11\n                              type: string\n                            prices:\n                              description: Prices in different Locations\n                              items:\n                                properties:\n                                  location:\n                                    description: Name of the Location the price is for\n                                    example: fsn1\n                                    type: string\n                                  price_hourly:\n                                    description: Hourly costs for a Server type in this Location\n                                    properties:\n                                      gross:\n                                        description: Price with VAT added\n                                        example: \"1.1900000000000000\"\n                                        type: string\n                                      net:\n                                        description: Price without VAT\n                                        example: \"1.0000000000\"\n                                        type: string\n                                    required:\n                                      - net\n                                      - gross\n                                    type: object\n                                  price_monthly:\n                                    description: Monthly costs for a Server type in this Location\n                                    properties:\n                                      gross:\n                                        description: Price with VAT added\n                                        example: \"1.1900000000000000\"\n                                        type: string\n                                      net:\n                                        description: Price without VAT\n                                        example: \"1.0000000000\"\n                                        type: string\n                                    required:\n                                      - net\n                                      - gross\n                                    type: object\n                                required:\n                                  - location\n                                  - price_hourly\n                                  - price_monthly\n                                type: object\n                              type: array\n                            storage_type:\n                              description: Type of Server boot drive. Local has higher speed. Network has better availability.\n                              enum:\n                                - local\n                                - network\n                              type: string\n                          required:\n                            - id\n                            - name\n                            - description\n                            - cores\n                            - memory\n                            - disk\n                            - deprecated\n                            - prices\n                            - storage_type\n                            - cpu_type\n                          type: object\n                        status:\n                          description: Status of the Server\n                          enum:\n                            - running\n                            - initializing\n                            - starting\n                            - stopping\n                            - off\n                            - deleting\n                            - migrating\n                            - rebuilding\n                            - unknown\n                          type: string\n                        volumes:\n                          description: IDs of Volumes assigned to this Server\n                          items:\n                            type: integer\n                          type: array\n                      required:\n                        - id\n                        - name\n                        - status\n                        - created\n                        - public_net\n                        - private_net\n                        - server_type\n                        - datacenter\n                        - image\n                        - iso\n                        - rescue_enabled\n                        - locked\n                        - backup_window\n                        - outgoing_traffic\n                        - ingoing_traffic\n                        - included_traffic\n                        - protection\n                        - labels\n                        - primary_disk_size\n                      type: object\n                    type: array\n                required:\n                  - servers\n                type: object\n          description: A paged array of servers\n          headers:\n            x-next:\n              description: A link to the next page of responses\n              schema:\n                type: string\n      summary: Get all Servers\n      tags:\n        - Servers\n    post:\n      description: Creates a new Server. Returns preliminary information about the Server as well as an Action that covers progress of creation.\n      requestBody:\n        content:\n          application/json:\n            schema:\n              properties:\n                automount:\n                  description: Auto-mount Volumes after attach\n                  example: false\n                  type: boolean\n                datacenter:\n                  description: ID or name of Datacenter to create Server in (must not be used together with location)\n                  example: nbg1-dc3\n                  type: string\n                firewalls:\n                  description: Firewalls which should be applied on the Server's public network interface at creation time\n                  example:\n                    - firewall: 38\n                  items:\n                    properties:\n                      firewall:\n                        description: ID of the Firewall\n                        type: integer\n                    type: object\n                  type: array\n                image:\n                  description: ID or name of the Image the Server is created from\n                  example: ubuntu-20.04\n                  type: string\n                labels:\n                  description: User-defined labels (key-value pairs)\n                  type: object\n                location:\n                  description: ID or name of Location to create Server in (must not be used together with datacenter)\n                  example: nbg1\n                  type: string\n                name:\n                  description: Name of the Server to create (must be unique per Project and a valid hostname as per RFC 1123)\n                  example: my-server\n                  type: string\n                networks:\n                  description: Network IDs which should be attached to the Server private network interface at the creation time\n                  example:\n                    - 456\n                  items:\n                    type: integer\n                  type: array\n                server_type:\n                  description: ID or name of the Server type this Server should be created with\n                  example: cx11\n                  type: string\n                ssh_keys:\n                  description: SSH key IDs (`integer`) or names (`string`) which should be injected into the Server at creation time\n                  example:\n                    - my-ssh-key\n                  items:\n                    type: string\n                  type: array\n                start_after_create:\n                  description: Start Server right after creation. Defaults to true.\n                  example: true\n                  type: boolean\n                user_data:\n                  description: Cloud-Init user data to use during Server creation. This field is limited to 32KiB.\n                  example: |\n                    #cloud-config\n                    runcmd:\n                    - [touch, /root/cloud-init-worked]\n                  type: string\n                volumes:\n                  description: Volume IDs which should be attached to the Server at the creation time. Volumes must be in the same Location.\n                  example:\n                    - 123\n                  items:\n                    type: integer\n                  type: array\n              required:\n                - name\n                - server_type\n                - image\n              title: CreateServerRequest\n              type: object\n        description: |\n          Please note that Server names must be unique per Project and valid hostnames as per RFC 1123 (i.e. may only contain letters, digits, periods, and dashes).\n\n          For `server_type` you can either use the ID as listed in `/server_types` or its name.\n\n          For `image` you can either use the ID as listed in `/images` or its name.\n\n          If you want to create the Server in a Location, you must set `location` to the ID or name as listed in `/locations`. This is the recommended way. You can be even more specific by setting `datacenter` to the ID or name as listed in `/datacenters`. However directly specifying the Datacenter is discouraged since supply availability in Datacenters varies greatly and Datacenters may be out of stock for extended periods of time or not serve certain Server types at all.\n\n          Some properties like `start_after_create` or `automount` will trigger Actions after the Server is created. Those Actions are listed in the `next_actions` field in the response.\n\n          For accessing your Server we strongly recommend to use SSH keys by passing the respective key IDs in `ssh_keys`. If you do not specify any `ssh_keys` we will generate a root password for you and return it in the response.\n\n          Please note that provided user-data is stored in our systems. While we take measures to protect it we highly recommend that you don’t use it to store passwords or other sensitive information.\n\n          #### Call specific error codes\n\n          | Code                          | Description                              |\n          |-------------------------------|------------------------------------------|\n          | `placement_error`             | An error during the placement occurred   |\n      responses:\n        \"201\":\n          content:\n            application/json:\n              example:\n                action:\n                  command: create_server\n                  error:\n                    code: action_failed\n                    message: Action failed\n                  finished: null\n                  id: 1\n                  progress: 0\n                  resources:\n                    - id: 42\n                      type: server\n                  started: 2016-01-30T23:50:00+00:00\n                  status: running\n                next_actions:\n                  - command: start_server\n                    error:\n                      code: action_failed\n                      message: Action failed\n                    finished: null\n                    id: 13\n                    progress: 0\n                    resources:\n                      - id: 42\n                        type: server\n                    started: 2016-01-30T23:50:00+00:00\n                    status: running\n                root_password: YItygq1v3GYjjMomLaKc\n                server:\n                  backup_window: 22-02\n                  created: 2016-01-30T23:50:00+00:00\n                  datacenter:\n                    description: Falkenstein 1 DC 8\n                    id: 1\n                    location:\n                      city: Falkenstein\n                      country: DE\n                      description: Falkenstein DC Park 1\n                      id: 1\n                      latitude: 50.47612\n                      longitude: 12.370071\n                      name: fsn1\n                      network_zone: eu-central\n                    name: fsn1-dc8\n                    server_types:\n                      available:\n                        - 1\n                        - 2\n                        - 3\n                      available_for_migration:\n                        - 1\n                        - 2\n                        - 3\n                      supported:\n                        - 1\n                        - 2\n                        - 3\n                  id: 42\n                  image:\n                    bound_to: null\n                    created: 2016-01-30T23:50:00+00:00\n                    created_from:\n                      id: 1\n                      name: Server\n                    deleted: null\n                    deprecated: 2018-02-28T00:00:00+00:00\n                    description: Ubuntu 20.04 Standard 64 bit\n                    disk_size: 10\n                    id: 4711\n                    image_size: 2.3\n                    labels:\n                      env: dev\n                    name: ubuntu-20.04\n                    os_flavor: ubuntu\n                    os_version: \"20.04\"\n                    protection:\n                      delete: false\n                    rapid_deploy: false\n                    status: available\n                    type: snapshot\n                  included_traffic: 654321\n                  ingoing_traffic: 123456\n                  iso:\n                    deprecated: 2018-02-28T00:00:00+00:00\n                    description: FreeBSD 11.0 x64\n                    id: 4711\n                    name: FreeBSD-11.0-RELEASE-amd64-dvd1\n                    type: public\n                  labels:\n                    env: dev\n                  load_balancers: []\n                  locked: false\n                  name: my-server\n                  outgoing_traffic: 123456\n                  primary_disk_size: 50\n                  private_net:\n                    - alias_ips: []\n                      ip: 10.0.0.2\n                      mac_address: 86:00:ff:2a:7d:e1\n                      network: 4711\n                  protection:\n                    delete: false\n                    rebuild: false\n                  public_net:\n                    firewalls:\n                      - id: 38\n                        status: applied\n                    floating_ips:\n                      - 478\n                    ipv4:\n                      blocked: false\n                      dns_ptr: server01.example.com\n                      ip: 1.2.3.4\n                    ipv6:\n                      blocked: false\n                      dns_ptr:\n                        - dns_ptr: server.example.com\n                          ip: 2001:db8::1\n                      ip: 2001:db8::/64\n                  rescue_enabled: false\n                  server_type:\n                    cores: 1\n                    cpu_type: shared\n                    deprecated: true\n                    description: CX11\n                    disk: 25\n                    id: 1\n                    memory: 1\n                    name: cx11\n                    prices:\n                      - location: fsn1\n                        price_hourly:\n                          gross: \"1.1900000000000000\"\n                          net: \"1.0000000000\"\n                        price_monthly:\n                          gross: \"1.1900000000000000\"\n                          net: \"1.0000000000\"\n                    storage_type: local\n                  status: initializing\n                  volumes: []\n              schema:\n                properties:\n                  action:\n                    properties:\n                      command:\n                        description: Command executed in the Action\n                        example: start_server\n                        type: string\n                      error:\n                        description: Error message for the Action if error occurred, otherwise null\n                        nullable: true\n                        properties:\n                          code:\n                            description: Fixed machine readable code\n                            example: action_failed\n                            type: string\n                          message:\n                            description: Humanized error message\n                            example: Action failed\n                            type: string\n                        required:\n                          - code\n                          - message\n                        type: object\n                      finished:\n                        description: Point in time when the Action was finished (in ISO-8601 format). Only set if the Action is finished otherwise null.\n                        example: 2016-01-30T23:55:00+00:00\n                        nullable: true\n                        type: string\n                      id:\n                        description: ID of the Resource\n                        example: 42\n                        type: integer\n                      progress:\n                        description: Progress of Action in percent\n                        example: 100\n                        type: number\n                      resources:\n                        description: Resources the Action relates to\n                        items:\n                          properties:\n                            id:\n                              description: ID of the Resource\n                              example: 42\n                              type: integer\n                            type:\n                              description: Type of resource referenced\n                              example: server\n                              type: string\n                          required:\n                            - id\n                            - type\n                          type: object\n                        type: array\n                      started:\n                        description: Point in time when the Action was started (in ISO-8601 format)\n                        example: 2016-01-30T23:55:00+00:00\n                        type: string\n                      status:\n                        description: Status of the Action\n                        enum:\n                          - success\n                          - running\n                          - error\n                        type: string\n                    required:\n                      - id\n                      - command\n                      - status\n                      - progress\n                      - started\n                      - finished\n                      - resources\n                      - error\n                    title: Action\n                    type: object\n                  next_actions:\n                    items:\n                      properties:\n                        command:\n                          description: Command executed in the Action\n                          example: start_server\n                          type: string\n                        error:\n                          description: Error message for the Action if error occurred, otherwise null\n                          nullable: true\n                          properties:\n                            code:\n                              description: Fixed machine readable code\n                              example: action_failed\n                              type: string\n                            message:\n                              description: Humanized error message\n                              example: Action failed\n                              type: string\n                          required:\n                            - code\n                            - message\n                          type: object\n                        finished:\n                          description: Point in time when the Action was finished (in ISO-8601 format). Only set if the Action is finished otherwise null.\n                          example: 2016-01-30T23:55:00+00:00\n                          nullable: true\n                          type: string\n                        id:\n                          description: ID of the Resource\n                          example: 42\n                          type: integer\n                        progress:\n                          description: Progress of Action in percent\n                          example: 100\n                          type: number\n                        resources:\n                          description: Resources the Action relates to\n                          items:\n                            properties:\n                              id:\n                                description: ID of the Resource\n                                example: 42\n                                type: integer\n                              type:\n                                description: Type of resource referenced\n                                example: server\n                                type: string\n                            required:\n                              - id\n                              - type\n                            type: object\n                          type: array\n                        started:\n                          description: Point in time when the Action was started (in ISO-8601 format)\n                          example: 2016-01-30T23:55:00+00:00\n                          type: string\n                        status:\n                          description: Status of the Action\n                          enum:\n                            - success\n                            - running\n                            - error\n                          type: string\n                      required:\n                        - id\n                        - command\n                        - status\n                        - progress\n                        - started\n                        - finished\n                        - resources\n                        - error\n                      title: Action\n                      type: object\n                    type: array\n                  root_password:\n                    description: Root password when no SSH keys have been specified\n                    example: YItygq1v3GYjjMomLaKc\n                    nullable: true\n                    type: string\n                  server:\n                    properties:\n                      backup_window:\n                        description: Time window (UTC) in which the backup will run, or null if the backups are not enabled\n                        example: 22-02\n                        nullable: true\n                        type: string\n                      created:\n                        description: Point in time when the Resource was created (in ISO-8601 format)\n                        example: 2016-01-30T23:55:00+00:00\n                        type: string\n                      datacenter:\n                        description: Datacenter this Resource is located at\n                        properties:\n                          description:\n                            description: Description of the Datacenter\n                            example: Falkenstein DC Park 8\n                            type: string\n                          id:\n                            description: ID of the Resource\n                            example: 42\n                            type: integer\n                          location:\n                            properties:\n                              city:\n                                description: City the Location is closest to\n                                example: Falkenstein\n                                type: string\n                              country:\n                                description: ISO 3166-1 alpha-2 code of the country the Location resides in\n                                example: DE\n                                type: string\n                              description:\n                                description: Description of the Location\n                                example: Falkenstein DC Park 1\n                                type: string\n                              id:\n                                description: ID of the Location\n                                example: 1\n                                type: number\n                              latitude:\n                                description: Latitude of the city closest to the Location\n                                example: 50.47612\n                                type: number\n                              longitude:\n                                description: Longitude of the city closest to the Location\n                                example: 12.370071\n                                type: number\n                              name:\n                                description: Unique identifier of the Location\n                                example: fsn1\n                                type: string\n                              network_zone:\n                                description: Name of network zone this Location resides in\n                                example: eu-central\n                                type: string\n                            required:\n                              - id\n                              - name\n                              - description\n                              - country\n                              - city\n                              - latitude\n                              - longitude\n                              - network_zone\n                            type: object\n                          name:\n                            description: Unique identifier of the Datacenter\n                            example: fsn1-dc8\n                            type: string\n                          server_types:\n                            description: The Server types the Datacenter can handle\n                            properties:\n                              available:\n                                description: IDs of Server types that are supported and for which the Datacenter has enough resources left\n                                example:\n                                  - 1\n                                  - 2\n                                  - 3\n                                items:\n                                  type: number\n                                type: array\n                              available_for_migration:\n                                description: IDs of Server types that are supported and for which the Datacenter has enough resources left\n                                example:\n                                  - 1\n                                  - 2\n                                  - 3\n                                items:\n                                  type: number\n                                type: array\n                              supported:\n                                description: IDs of Server types that are supported in the Datacenter\n                                example:\n                                  - 1\n                                  - 2\n                                  - 3\n                                items:\n                                  type: number\n                                type: array\n                            required:\n                              - supported\n                              - available\n                              - available_for_migration\n                            type: object\n                        required:\n                          - id\n                          - name\n                          - description\n                          - location\n                          - server_types\n                        type: object\n                      id:\n                        description: ID of the Resource\n                        example: 42\n                        type: integer\n                      image:\n                        nullable: true\n                        properties:\n                          bound_to:\n                            description: ID of Server the Image is bound to. Only set for Images of type `backup`.\n                            example: null\n                            nullable: true\n                            type: integer\n                          build_id:\n                            description: Build ID of the Image\n                            example: c313fe40383af26094a5a92026054320ab55abc7\n                            nullable: true\n                            type: string\n                          created:\n                            description: Point in time when the Resource was created (in ISO-8601 format)\n                            example: 2016-01-30T23:55:00+00:00\n                            type: string\n                          created_from:\n                            description: Information about the Server the Image was created from\n                            nullable: true\n                            properties:\n                              id:\n                                description: ID of the Server the Image was created from\n                                example: 1\n                                type: integer\n                              name:\n                                description: Server name at the time the Image was created\n                                example: Server\n                                type: string\n                            required:\n                              - id\n                              - name\n                            type: object\n                          deleted:\n                            description: Point in time where the Image was deleted (in ISO-8601 format)\n                            example: null\n                            nullable: true\n                            type: string\n                          deprecated:\n                            description: Point in time when the Image is considered to be deprecated (in ISO-8601 format)\n                            example: 2018-02-28T00:00:00+00:00\n                            nullable: true\n                            type: string\n                          description:\n                            description: Description of the Image\n                            example: Ubuntu 20.04 Standard 64 bit\n                            type: string\n                          disk_size:\n                            description: Size of the disk contained in the Image in GB\n                            example: 10\n                            type: number\n                          id:\n                            description: ID of the Resource\n                            example: 42\n                            type: integer\n                          image_size:\n                            description: Size of the Image file in our storage in GB. For snapshot Images this is the value relevant for calculating costs for the Image.\n                            example: 2.3\n                            nullable: true\n                            type: number\n                          labels:\n                            additionalProperties:\n                              type: string\n                            description: User-defined labels (key-value pairs)\n                            type: object\n                          name:\n                            description: Unique identifier of the Image. This value is only set for system Images.\n                            example: ubuntu-20.04\n                            nullable: true\n                            type: string\n                          os_flavor:\n                            description: Flavor of operating system contained in the Image\n                            enum:\n                              - ubuntu\n                              - centos\n                              - debian\n                              - fedora\n                              - unknown\n                            example: ubuntu\n                            type: string\n                          os_version:\n                            description: Operating system version\n                            example: \"20.04\"\n                            nullable: true\n                            type: string\n                          protection:\n                            description: Protection configuration for the Resource\n                            properties:\n                              delete:\n                                description: If true, prevents the Resource from being deleted\n                                example: false\n                                type: boolean\n                            required:\n                              - delete\n                            type: object\n                          rapid_deploy:\n                            description: Indicates that rapid deploy of the Image is available\n                            example: false\n                            type: boolean\n                          status:\n                            description: Whether the Image can be used or if it's still being created or unavailable\n                            enum:\n                              - available\n                              - creating\n                              - unavailable\n                            type: string\n                          type:\n                            description: Type of the Image\n                            enum:\n                              - system\n                              - app\n                              - snapshot\n                              - backup\n                              - temporary\n                            example: snapshot\n                            type: string\n                        required:\n                          - id\n                          - type\n                          - status\n                          - name\n                          - description\n                          - image_size\n                          - disk_size\n                          - created\n                          - created_from\n                          - bound_to\n                          - os_flavor\n                          - os_version\n                          - protection\n                          - deprecated\n                          - deleted\n                          - labels\n                        type: object\n                      included_traffic:\n                        description: Free Traffic for the current billing period in bytes\n                        example: 654321\n                        nullable: true\n                        type: number\n                      ingoing_traffic:\n                        description: Inbound Traffic for the current billing period in bytes\n                        example: 123456\n                        nullable: true\n                        type: number\n                      iso:\n                        description: ISO Image that is attached to this Server. Null if no ISO is attached.\n                        nullable: true\n                        properties:\n                          deprecated:\n                            description: ISO 8601 timestamp of deprecation, null if ISO is still available. After the deprecation time it will no longer be possible to attach the ISO to Servers.\n                            example: 2018-02-28T00:00:00+00:00\n                            nullable: true\n                            type: string\n                          description:\n                            description: Description of the ISO\n                            example: FreeBSD 11.0 x64\n                            type: string\n                          id:\n                            description: ID of the Resource\n                            example: 42\n                            type: integer\n                          name:\n                            description: Unique identifier of the ISO. Only set for public ISOs\n                            example: FreeBSD-11.0-RELEASE-amd64-dvd1\n                            nullable: true\n                            type: string\n                          type:\n                            description: Type of the ISO\n                            enum:\n                              - public\n                              - private\n                            type: string\n                        required:\n                          - id\n                          - name\n                          - description\n                          - type\n                          - deprecated\n                        type: object\n                      labels:\n                        additionalProperties:\n                          type: string\n                        description: User-defined labels (key-value pairs)\n                        type: object\n                      load_balancers:\n                        items:\n                          type: integer\n                        type: array\n                      locked:\n                        description: True if Server has been locked and is not available to user\n                        example: false\n                        type: boolean\n                      name:\n                        description: Name of the Resource. Must be unique per Project.\n                        example: my-resource\n                        type: string\n                      outgoing_traffic:\n                        description: Outbound Traffic for the current billing period in bytes\n                        example: 123456\n                        nullable: true\n                        type: number\n                      placement_group:\n                        nullable: true\n                        properties:\n                          created:\n                            description: Point in time when the Resource was created (in ISO-8601 format)\n                            example: 2016-01-30T23:55:00+00:00\n                            type: string\n                          id:\n                            description: ID of the Resource\n                            example: 42\n                            type: integer\n                          labels:\n                            additionalProperties:\n                              type: string\n                            description: User-defined labels (key-value pairs)\n                            type: object\n                          name:\n                            description: Name of the Resource. Must be unique per Project.\n                            example: my-resource\n                            type: string\n                          servers:\n                            description: Array of IDs of Servers that are part of this Placement Group\n                            example:\n                              - 42\n                            items:\n                              type: integer\n                            type: array\n                          type:\n                            description: Type of the Placement Group\n                            enum:\n                              - spread\n                            example: spread\n                            type: string\n                        required:\n                          - id\n                          - name\n                          - labels\n                          - type\n                          - created\n                          - servers\n                        title: PlacementGroupNullable\n                        type: object\n                      primary_disk_size:\n                        description: Size of the primary Disk\n                        example: 50\n                        type: number\n                      private_net:\n                        description: Private networks information\n                        items:\n                          properties:\n                            alias_ips:\n                              items:\n                                type: string\n                              type: array\n                            ip:\n                              example: 10.0.0.2\n                              type: string\n                            mac_address:\n                              example: 86:00:ff:2a:7d:e1\n                              type: string\n                            network:\n                              example: 4711\n                              type: integer\n                          type: object\n                        type: array\n                      protection:\n                        description: Protection configuration for the Server\n                        properties:\n                          delete:\n                            description: If true, prevents the Server from being deleted\n                            example: false\n                            type: boolean\n                          rebuild:\n                            description: If true, prevents the Server from being rebuilt\n                            example: false\n                            type: boolean\n                        required:\n                          - delete\n                          - rebuild\n                        type: object\n                      public_net:\n                        description: Public network information. The Server's IPv4 address can be found in `public_net-\u003eipv4-\u003eip`\n                        properties:\n                          firewalls:\n                            description: Firewalls applied to the public network interface of this Server\n                            items:\n                              properties:\n                                id:\n                                  description: ID of the Resource\n                                  example: 42\n                                  type: integer\n                                status:\n                                  description: Status of the Firewall on the Server\n                                  enum:\n                                    - applied\n                                    - pending\n                                  example: applied\n                                  type: string\n                              title: ServerPublicNetFirewall\n                              type: object\n                            type: array\n                          floating_ips:\n                            description: IDs of Floating IPs assigned to this Server\n                            example:\n                              - 478\n                            items:\n                              type: integer\n                            type: array\n                          ipv4:\n                            description: IP address (v4) and its reverse DNS entry of this Server\n                            properties:\n                              blocked:\n                                description: If the IP is blocked by our anti abuse dept\n                                example: false\n                                type: boolean\n                              dns_ptr:\n                                description: Reverse DNS PTR entry for the IPv4 addresses of this Server\n                                example: server01.example.com\n                                type: string\n                              ip:\n                                description: IP address (v4) of this Server\n                                example: 1.2.3.4\n                                type: string\n                            required:\n                              - ip\n                              - blocked\n                              - dns_ptr\n                            type: object\n                          ipv6:\n                            description: IPv6 network assigned to this Server and its reverse DNS entry\n                            properties:\n                              blocked:\n                                description: If the IP is blocked by our anti abuse dept\n                                example: false\n                                type: boolean\n                              dns_ptr:\n                                description: Reverse DNS PTR entries for the IPv6 addresses of this Server, `null` by default\n                                items:\n                                  properties:\n                                    dns_ptr:\n                                      description: DNS pointer for the specific IP address\n                                      example: server.example.com\n                                      type: string\n                                    ip:\n                                      description: Single IPv6 address of this Server for which the reverse DNS entry has been set up\n                                      example: 2001:db8::1\n                                      type: string\n                                  required:\n                                    - ip\n                                    - dns_ptr\n                                  type: object\n                                nullable: true\n                                type: array\n                              ip:\n                                description: IP address (v4) of this Server\n                                example: 2001:db8::/64\n                                type: string\n                            required:\n                              - ip\n                              - blocked\n                              - dns_ptr\n                            type: object\n                        required:\n                          - ipv4\n                          - ipv6\n                          - floating_ips\n                        type: object\n                      rescue_enabled:\n                        description: True if rescue mode is enabled. Server will then boot into rescue system on next reboot\n                        example: false\n                        type: boolean\n                      server_type:\n                        description: Type of Server - determines how much ram, disk and cpu a Server has\n                        properties:\n                          cores:\n                            description: Number of cpu cores a Server of this type will have\n                            example: 1\n                            type: number\n                          cpu_type:\n                            description: Type of cpu\n                            enum:\n                              - shared\n                              - dedicated\n                            type: string\n                          deprecated:\n                            description: True if Server type is deprecated\n                            example: false\n                            type: boolean\n                          description:\n                            description: Description of the Server type\n                            example: CX11\n                            type: string\n                          disk:\n                            description: Disk size a Server of this type will have in GB\n                            example: 25\n                            type: number\n                          id:\n                            description: ID of the Server type\n                            example: 1\n                            type: integer\n                          memory:\n                            description: Memory a Server of this type will have in GB\n                            example: 1\n                            type: number\n                          name:\n                            description: Unique identifier of the Server type\n                            example: cx11\n                            type: string\n                          prices:\n                            description: Prices in different Locations\n                            items:\n                              properties:\n                                location:\n                                  description: Name of the Location the price is for\n                                  example: fsn1\n                                  type: string\n                                price_hourly:\n                                  description: Hourly costs for a Server type in this Location\n                                  properties:\n                                    gross:\n                                      description: Price with VAT added\n                                      example: \"1.1900000000000000\"\n                                      type: string\n                                    net:\n                                      description: Price without VAT\n                                      example: \"1.0000000000\"\n                                      type: string\n                                  required:\n                                    - net\n                                    - gross\n                                  type: object\n                                price_monthly:\n                                  description: Monthly costs for a Server type in this Location\n                                  properties:\n                                    gross:\n                                      description: Price with VAT added\n                                      example: \"1.1900000000000000\"\n                                      type: string\n                                    net:\n                                      description: Price without VAT\n                                      example: \"1.0000000000\"\n                                      type: string\n                                  required:\n                                    - net\n                                    - gross\n                                  type: object\n                              required:\n                                - location\n                                - price_hourly\n                                - price_monthly\n                              type: object\n                            type: array\n                          storage_type:\n                            description: Type of Server boot drive. Local has higher speed. Network has better availability.\n                            enum:\n                              - local\n                              - network\n                            type: string\n                        required:\n                          - id\n                          - name\n                          - description\n                          - cores\n                          - memory\n                          - disk\n                          - deprecated\n                          - prices\n                          - storage_type\n                          - cpu_type\n                        type: object\n                      status:\n                        description: Status of the Server\n                        enum:\n                          - running\n                          - initializing\n                          - starting\n                          - stopping\n                          - off\n                          - deleting\n                          - migrating\n                          - rebuilding\n                          - unknown\n                        type: string\n                      volumes:\n                        description: IDs of Volumes assigned to this Server\n                        items:\n                          type: integer\n                        type: array\n                    required:\n                      - id\n                      - name\n                      - status\n                      - created\n                      - public_net\n                      - private_net\n                      - server_type\n                      - datacenter\n                      - image\n                      - iso\n                      - rescue_enabled\n                      - locked\n                      - backup_window\n                      - outgoing_traffic\n                      - ingoing_traffic\n                      - included_traffic\n                      - protection\n                      - labels\n                      - primary_disk_size\n                    type: object\n                required:\n                  - server\n                  - action\n                  - next_actions\n                  - root_password\n                title: CreateServerResponse\n                type: object\n          description: The `server` key in the reply contains a Server object with this structure\n      summary: Create a Server\n      tags:\n        - Servers\n  \"/servers/{id}\":\n    delete:\n      description: Deletes a Server. This immediately removes the Server from your account, and it is no longer accessible.\n      parameters:\n        - description: ID of the Server\n          in: path\n          name: id\n          required: true\n          schema:\n            type: integer\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                properties:\n                  action:\n                    properties:\n                      command:\n                        description: Command executed in the Action\n                        example: start_server\n                        type: string\n                      error:\n                        description: Error message for the Action if error occurred, otherwise null\n                        nullable: true\n                        properties:\n                          code:\n                            description: Fixed machine readable code\n                            example: action_failed\n                            type: string\n                          message:\n                            description: Humanized error message\n                            example: Action failed\n                            type: string\n                        required:\n                          - code\n                          - message\n                        type: object\n                      finished:\n                        description: Point in time when the Action was finished (in ISO-8601 format). Only set if the Action is finished otherwise null.\n                        example: 2016-01-30T23:55:00+00:00\n                        nullable: true\n                        type: string\n                      id:\n                        description: ID of the Resource\n                        example: 42\n                        type: integer\n                      progress:\n                        description: Progress of Action in percent\n                        example: 100\n                        type: number\n                      resources:\n                        description: Resources the Action relates to\n                        items:\n                          properties:\n                            id:\n                              description: ID of the Resource\n                              example: 42\n                              type: integer\n                            type:\n                              description: Type of resource referenced\n                              example: server\n                              type: string\n                          required:\n                            - id\n                            - type\n                          type: object\n                        type: array\n                      started:\n                        description: Point in time when the Action was started (in ISO-8601 format)\n                        example: 2016-01-30T23:55:00+00:00\n                        type: string\n                      status:\n                        description: Status of the Action\n                        enum:\n                          - success\n                          - running\n                          - error\n                        type: string\n                    required:\n                      - id\n                      - command\n                      - status\n                      - progress\n                      - started\n                      - finished\n                      - resources\n                      - error\n                    title: Action\n                    type: object\n                type: object\n          description: The `action` key in the reply contains an Action object with this structure\n      summary: Delete a Server\n      tags:\n        - Servers\n    get:\n      description: Returns a specific Server object. The Server must exist inside the Project\n      parameters:\n        - description: ID of the Server\n          in: path\n          name: id\n          required: true\n          schema:\n            type: integer\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                properties:\n                  server:\n                    properties:\n                      backup_window:\n                        description: Time window (UTC) in which the backup will run, or null if the backups are not enabled\n                        example: 22-02\n                        nullable: true\n                        type: string\n                      created:\n                        description: Point in time when the Resource was created (in ISO-8601 format)\n                        example: 2016-01-30T23:55:00+00:00\n                        type: string\n                      datacenter:\n                        description: Datacenter this Resource is located at\n                        properties:\n                          description:\n                            description: Description of the Datacenter\n                            example: Falkenstein DC Park 8\n                            type: string\n                          id:\n                            description: ID of the Resource\n                            example: 42\n                            type: integer\n                          location:\n                            properties:\n                              city:\n                                description: City the Location is closest to\n                                example: Falkenstein\n                                type: string\n                              country:\n                                description: ISO 3166-1 alpha-2 code of the country the Location resides in\n                                example: DE\n                                type: string\n                              description:\n                                description: Description of the Location\n                                example: Falkenstein DC Park 1\n                                type: string\n                              id:\n                                description: ID of the Location\n                                example: 1\n                                type: number\n                              latitude:\n                                description: Latitude of the city closest to the Location\n                                example: 50.47612\n                                type: number\n                              longitude:\n                                description: Longitude of the city closest to the Location\n                                example: 12.370071\n                                type: number\n                              name:\n                                description: Unique identifier of the Location\n                                example: fsn1\n                                type: string\n                              network_zone:\n                                description: Name of network zone this Location resides in\n                                example: eu-central\n                                type: string\n                            required:\n                              - id\n                              - name\n                              - description\n                              - country\n                              - city\n                              - latitude\n                              - longitude\n                              - network_zone\n                            type: object\n                          name:\n                            description: Unique identifier of the Datacenter\n                            example: fsn1-dc8\n                            type: string\n                          server_types:\n                            description: The Server types the Datacenter can handle\n                            properties:\n                              available:\n                                description: IDs of Server types that are supported and for which the Datacenter has enough resources left\n                                example:\n                                  - 1\n                                  - 2\n                                  - 3\n                                items:\n                                  type: number\n                                type: array\n                              available_for_migration:\n                                description: IDs of Server types that are supported and for which the Datacenter has enough resources left\n                                example:\n                                  - 1\n                                  - 2\n                                  - 3\n                                items:\n                                  type: number\n                                type: array\n                              supported:\n                                description: IDs of Server types that are supported in the Datacenter\n                                example:\n                                  - 1\n                                  - 2\n                                  - 3\n                                items:\n                                  type: number\n                                type: array\n                            required:\n                              - supported\n                              - available\n                              - available_for_migration\n                            type: object\n                        required:\n                          - id\n                          - name\n                          - description\n                          - location\n                          - server_types\n                        type: object\n                      id:\n                        description: ID of the Resource\n                        example: 42\n                        type: integer\n                      image:\n                        nullable: true\n                        properties:\n                          bound_to:\n                            description: ID of Server the Image is bound to. Only set for Images of type `backup`.\n                            example: null\n                            nullable: true\n                            type: integer\n                          build_id:\n                            description: Build ID of the Image\n                            example: c313fe40383af26094a5a92026054320ab55abc7\n                            nullable: true\n                            type: string\n                          created:\n                            description: Point in time when the Resource was created (in ISO-8601 format)\n                            example: 2016-01-30T23:55:00+00:00\n                            type: string\n                          created_from:\n                            description: Information about the Server the Image was created from\n                            nullable: true\n                            properties:\n                              id:\n                                description: ID of the Server the Image was created from\n                                example: 1\n                                type: integer\n                              name:\n                                description: Server name at the time the Image was created\n                                example: Server\n                                type: string\n                            required:\n                              - id\n                              - name\n                            type: object\n                          deleted:\n                            description: Point in time where the Image was deleted (in ISO-8601 format)\n                            example: null\n                            nullable: true\n                            type: string\n                          deprecated:\n                            description: Point in time when the Image is considered to be deprecated (in ISO-8601 format)\n                            example: 2018-02-28T00:00:00+00:00\n                            nullable: true\n                            type: string\n                          description:\n                            description: Description of the Image\n                            example: Ubuntu 20.04 Standard 64 bit\n                            type: string\n                          disk_size:\n                            description: Size of the disk contained in the Image in GB\n                            example: 10\n                            type: number\n                          id:\n                            description: ID of the Resource\n                            example: 42\n                            type: integer\n                          image_size:\n                            description: Size of the Image file in our storage in GB. For snapshot Images this is the value relevant for calculating costs for the Image.\n                            example: 2.3\n                            nullable: true\n                            type: number\n                          labels:\n                            additionalProperties:\n                              type: string\n                            description: User-defined labels (key-value pairs)\n                            type: object\n                          name:\n                            description: Unique identifier of the Image. This value is only set for system Images.\n                            example: ubuntu-20.04\n                            nullable: true\n                            type: string\n                          os_flavor:\n                            description: Flavor of operating system contained in the Image\n                            enum:\n                              - ubuntu\n                              - centos\n                              - debian\n                              - fedora\n                              - unknown\n                            example: ubuntu\n                            type: string\n                          os_version:\n                            description: Operating system version\n                            example: \"20.04\"\n                            nullable: true\n                            type: string\n                          protection:\n                            description: Protection configuration for the Resource\n                            properties:\n                              delete:\n                                description: If true, prevents the Resource from being deleted\n                                example: false\n                                type: boolean\n                            required:\n                              - delete\n                            type: object\n                          rapid_deploy:\n                            description: Indicates that rapid deploy of the Image is available\n                            example: false\n                            type: boolean\n                          status:\n                            description: Whether the Image can be used or if it's still being created or unavailable\n                            enum:\n                              - available\n                              - creating\n                              - unavailable\n                            type: string\n                          type:\n                            description: Type of the Image\n                            enum:\n                              - system\n                              - app\n                              - snapshot\n                              - backup\n                              - temporary\n                            example: snapshot\n                            type: string\n                        required:\n                          - id\n                          - type\n                          - status\n                          - name\n                          - description\n                          - image_size\n                          - disk_size\n                          - created\n                          - created_from\n                          - bound_to\n                          - os_flavor\n                          - os_version\n                          - protection\n                          - deprecated\n                          - deleted\n                          - labels\n                        type: object\n                      included_traffic:\n                        description: Free Traffic for the current billing period in bytes\n                        example: 654321\n                        nullable: true\n                        type: number\n                      ingoing_traffic:\n                        description: Inbound Traffic for the current billing period in bytes\n                        example: 123456\n                        nullable: true\n                        type: number\n                      iso:\n                        description: ISO Image that is attached to this Server. Null if no ISO is attached.\n                        nullable: true\n                        properties:\n                          deprecated:\n                            description: ISO 8601 timestamp of deprecation, null if ISO is still available. After the deprecation time it will no longer be possible to attach the ISO to Servers.\n                            example: 2018-02-28T00:00:00+00:00\n                            nullable: true\n                            type: string\n                          description:\n                            description: Description of the ISO\n                            example: FreeBSD 11.0 x64\n                            type: string\n                          id:\n                            description: ID of the Resource\n                            example: 42\n                            type: integer\n                          name:\n                            description: Unique identifier of the ISO. Only set for public ISOs\n                            example: FreeBSD-11.0-RELEASE-amd64-dvd1\n                            nullable: true\n                            type: string\n                          type:\n                            description: Type of the ISO\n                            enum:\n                              - public\n                              - private\n                            type: string\n                        required:\n                          - id\n                          - name\n                          - description\n                          - type\n                          - deprecated\n                        type: object\n                      labels:\n                        additionalProperties:\n                          type: string\n                        description: User-defined labels (key-value pairs)\n                        type: object\n                      load_balancers:\n                        items:\n                          type: integer\n                        type: array\n                      locked:\n                        description: True if Server has been locked and is not available to user\n                        example: false\n                        type: boolean\n                      name:\n                        description: Name of the Resource. Must be unique per Project.\n                        example: my-resource\n                        type: string\n                      outgoing_traffic:\n                        description: Outbound Traffic for the current billing period in bytes\n                        example: 123456\n                        nullable: true\n                        type: number\n                      placement_group:\n                        nullable: true\n                        properties:\n                          created:\n                            description: Point in time when the Resource was created (in ISO-8601 format)\n                            example: 2016-01-30T23:55:00+00:00\n                            type: string\n                          id:\n                            description: ID of the Resource\n                            example: 42\n                            type: integer\n                          labels:\n                            additionalProperties:\n                              type: string\n                            description: User-defined labels (key-value pairs)\n                            type: object\n                          name:\n                            description: Name of the Resource. Must be unique per Project.\n                            example: my-resource\n                            type: string\n                          servers:\n                            description: Array of IDs of Servers that are part of this Placement Group\n                            example:\n                              - 42\n                            items:\n                              type: integer\n                            type: array\n                          type:\n                            description: Type of the Placement Group\n                            enum:\n                              - spread\n                            example: spread\n                            type: string\n                        required:\n                          - id\n                          - name\n                          - labels\n                          - type\n                          - created\n                          - servers\n                        title: PlacementGroupNullable\n                        type: object\n                      primary_disk_size:\n                        description: Size of the primary Disk\n                        example: 50\n                        type: number\n                      private_net:\n                        description: Private networks information\n                        items:\n                          properties:\n                            alias_ips:\n                              items:\n                                type: string\n                              type: array\n                            ip:\n                              example: 10.0.0.2\n                              type: string\n                            mac_address:\n                              example: 86:00:ff:2a:7d:e1\n                              type: string\n                            network:\n                              example: 4711\n                              type: integer\n                          type: object\n                        type: array\n                      protection:\n                        description: Protection configuration for the Server\n                        properties:\n                          delete:\n                            description: If true, prevents the Server from being deleted\n                            example: false\n                            type: boolean\n                          rebuild:\n                            description: If true, prevents the Server from being rebuilt\n                            example: false\n                            type: boolean\n                        required:\n                          - delete\n                          - rebuild\n                        type: object\n                      public_net:\n                        description: Public network information. The Server's IPv4 address can be found in `public_net-\u003eipv4-\u003eip`\n                        properties:\n                          firewalls:\n                            description: Firewalls applied to the public network interface of this Server\n                            items:\n                              properties:\n                                id:\n                                  description: ID of the Resource\n                                  example: 42\n                                  type: integer\n                                status:\n                                  description: Status of the Firewall on the Server\n                                  enum:\n                                    - applied\n                                    - pending\n                                  example: applied\n                                  type: string\n                              title: ServerPublicNetFirewall\n                              type: object\n                            type: array\n                          floating_ips:\n                            description: IDs of Floating IPs assigned to this Server\n                            example:\n                              - 478\n                            items:\n                              type: integer\n                            type: array\n                          ipv4:\n                            description: IP address (v4) and its reverse DNS entry of this Server\n                            properties:\n                              blocked:\n                                description: If the IP is blocked by our anti abuse dept\n                                example: false\n                                type: boolean\n                              dns_ptr:\n                                description: Reverse DNS PTR entry for the IPv4 addresses of this Server\n                                example: server01.example.com\n                                type: string\n                              ip:\n                                description: IP address (v4) of this Server\n                                example: 1.2.3.4\n                                type: string\n                            required:\n                              - ip\n                              - blocked\n                              - dns_ptr\n                            type: object\n                          ipv6:\n                            description: IPv6 network assigned to this Server and its reverse DNS entry\n                            properties:\n                              blocked:\n                                description: If the IP is blocked by our anti abuse dept\n                                example: false\n                                type: boolean\n                              dns_ptr:\n                                description: Reverse DNS PTR entries for the IPv6 addresses of this Server, `null` by default\n                                items:\n                                  properties:\n                                    dns_ptr:\n                                      description: DNS pointer for the specific IP address\n                                      example: server.example.com\n                                      type: string\n                                    ip:\n                                      description: Single IPv6 address of this Server for which the reverse DNS entry has been set up\n                                      example: 2001:db8::1\n                                      type: string\n                                  required:\n                                    - ip\n                                    - dns_ptr\n                                  type: object\n                                nullable: true\n                                type: array\n                              ip:\n                                description: IP address (v4) of this Server\n                                example: 2001:db8::/64\n                                type: string\n                            required:\n                              - ip\n                              - blocked\n                              - dns_ptr\n                            type: object\n                        required:\n                          - ipv4\n                          - ipv6\n                          - floating_ips\n                        type: object\n                      rescue_enabled:\n                        description: True if rescue mode is enabled. Server will then boot into rescue system on next reboot\n                        example: false\n                        type: boolean\n                      server_type:\n                        description: Type of Server - determines how much ram, disk and cpu a Server has\n                        properties:\n                          cores:\n                            description: Number of cpu cores a Server of this type will have\n                            example: 1\n                            type: number\n                          cpu_type:\n                            description: Type of cpu\n                            enum:\n                              - shared\n                              - dedicated\n                            type: string\n                          deprecated:\n                            description: True if Server type is deprecated\n                            example: false\n                            type: boolean\n                          description:\n                            description: Description of the Server type\n                            example: CX11\n                            type: string\n                          disk:\n                            description: Disk size a Server of this type will have in GB\n                            example: 25\n                            type: number\n                          id:\n                            description: ID of the Server type\n                            example: 1\n                            type: integer\n                          memory:\n                            description: Memory a Server of this type will have in GB\n                            example: 1\n                            type: number\n                          name:\n                            description: Unique identifier of the Server type\n                            example: cx11\n                            type: string\n                          prices:\n                            description: Prices in different Locations\n                            items:\n                              properties:\n                                location:\n                                  description: Name of the Location the price is for\n                                  example: fsn1\n                                  type: string\n                                price_hourly:\n                                  description: Hourly costs for a Server type in this Location\n                                  properties:\n                                    gross:\n                                      description: Price with VAT added\n                                      example: \"1.1900000000000000\"\n                                      type: string\n                                    net:\n                                      description: Price without VAT\n                                      example: \"1.0000000000\"\n                                      type: string\n                                  required:\n                                    - net\n                                    - gross\n                                  type: object\n                                price_monthly:\n                                  description: Monthly costs for a Server type in this Location\n                                  properties:\n                                    gross:\n                                      description: Price with VAT added\n                                      example: \"1.1900000000000000\"\n                                      type: string\n                                    net:\n                                      description: Price without VAT\n                                      example: \"1.0000000000\"\n                                      type: string\n                                  required:\n                                    - net\n                                    - gross\n                                  type: object\n                              required:\n                                - location\n                                - price_hourly\n                                - price_monthly\n                              type: object\n                            type: array\n                          storage_type:\n                            description: Type of Server boot drive. Local has higher speed. Network has better availability.\n                            enum:\n                              - local\n                              - network\n                            type: string\n                        required:\n                          - id\n                          - name\n                          - description\n                          - cores\n                          - memory\n                          - disk\n                          - deprecated\n                          - prices\n                          - storage_type\n                          - cpu_type\n                        type: object\n                      status:\n                        description: Status of the Server\n                        enum:\n                          - running\n                          - initializing\n                          - starting\n                          - stopping\n                          - off\n                          - deleting\n                          - migrating\n                          - rebuilding\n                          - unknown\n                        type: string\n                      volumes:\n                        description: IDs of Volumes assigned to this Server\n                        items:\n                          type: integer\n                        type: array\n                    required:\n                      - id\n                      - name\n                      - status\n                      - created\n                      - public_net\n                      - private_net\n                      - server_type\n                      - datacenter\n                      - image\n                      - iso\n                      - rescue_enabled\n                      - locked\n                      - backup_window\n                      - outgoing_traffic\n                      - ingoing_traffic\n                      - included_traffic\n                      - protection\n                      - labels\n                      - primary_disk_size\n                    type: object\n                type: object\n          description: The `server` key in the reply contains a Server object with this structure\n      summary: Get a Server\n      tags:\n        - Servers\n    put:\n      description: |-\n        Updates a Server. You can update a Server’s name and a Server’s labels.\n        Please note that Server names must be unique per Project and valid hostnames as per RFC 1123 (i.e. may only contain letters, digits, periods, and dashes).\n        Also note that when updating labels, the Server’s current set of labels will be replaced with the labels provided in the request body. So, for example, if you want to add a new label, you have to provide all existing labels plus the new label in the request body.\n      parameters:\n        - description: ID of the Server\n          in: path\n          name: id\n          required: true\n          schema:\n            type: integer\n      requestBody:\n        content:\n          application/json:\n            schema:\n              properties:\n                labels:\n                  description: User-defined labels (key-value pairs)\n                  example:\n                    labelkey: value\n                  type: object\n                name:\n                  description: New name to set\n                  example: my-server\n                  type: string\n              title: UpdateServerRequest\n              type: object\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                properties:\n                  server:\n                    properties:\n                      backup_window:\n                        description: Time window (UTC) in which the backup will run, or null if the backups are not enabled\n                        example: 22-02\n                        nullable: true\n                        type: string\n                      created:\n                        description: Point in time when the Resource was created (in ISO-8601 format)\n                        example: 2016-01-30T23:55:00+00:00\n                        type: string\n                      datacenter:\n                        description: Datacenter this Resource is located at\n                        properties:\n                          description:\n                            description: Description of the Datacenter\n                            example: Falkenstein DC Park 8\n                            type: string\n                          id:\n                            description: ID of the Resource\n                            example: 42\n                            type: integer\n                          location:\n                            properties:\n                              city:\n                                description: City the Location is closest to\n                                example: Falkenstein\n                                type: string\n                              country:\n                                description: ISO 3166-1 alpha-2 code of the country the Location resides in\n                                example: DE\n                                type: string\n                              description:\n                                description: Description of the Location\n                                example: Falkenstein DC Park 1\n                                type: string\n                              id:\n                                description: ID of the Location\n                                example: 1\n                                type: number\n                              latitude:\n                                description: Latitude of the city closest to the Location\n                                example: 50.47612\n                                type: number\n                              longitude:\n                                description: Longitude of the city closest to the Location\n                                example: 12.370071\n                                type: number\n                              name:\n                                description: Unique identifier of the Location\n                                example: fsn1\n                                type: string\n                              network_zone:\n                                description: Name of network zone this Location resides in\n                                example: eu-central\n                                type: string\n                            required:\n                              - id\n                              - name\n                              - description\n                              - country\n                              - city\n                              - latitude\n                              - longitude\n                              - network_zone\n                            type: object\n                          name:\n                            description: Unique identifier of the Datacenter\n                            example: fsn1-dc8\n                            type: string\n                          server_types:\n                            description: The Server types the Datacenter can handle\n                            properties:\n                              available:\n                                description: IDs of Server types that are supported and for which the Datacenter has enough resources left\n                                example:\n                                  - 1\n                                  - 2\n                                  - 3\n                                items:\n                                  type: number\n                                type: array\n                              available_for_migration:\n                                description: IDs of Server types that are supported and for which the Datacenter has enough resources left\n                                example:\n                                  - 1\n                                  - 2\n                                  - 3\n                                items:\n                                  type: number\n                                type: array\n                              supported:\n                                description: IDs of Server types that are supported in the Datacenter\n                                example:\n                                  - 1\n                                  - 2\n                                  - 3\n                                items:\n                                  type: number\n                                type: array\n                            required:\n                              - supported\n                              - available\n                              - available_for_migration\n                            type: object\n                        required:\n                          - id\n                          - name\n                          - description\n                          - location\n                          - server_types\n                        type: object\n                      id:\n                        description: ID of the Resource\n                        example: 42\n                        type: integer\n                      image:\n                        nullable: true\n                        properties:\n                          bound_to:\n                            description: ID of Server the Image is bound to. Only set for Images of type `backup`.\n                            example: null\n                            nullable: true\n                            type: integer\n                          build_id:\n                            description: Build ID of the Image\n                            example: c313fe40383af26094a5a92026054320ab55abc7\n                            nullable: true\n                            type: string\n                          created:\n                            description: Point in time when the Resource was created (in ISO-8601 format)\n                            example: 2016-01-30T23:55:00+00:00\n                            type: string\n                          created_from:\n                            description: Information about the Server the Image was created from\n                            nullable: true\n                            properties:\n                              id:\n                                description: ID of the Server the Image was created from\n                                example: 1\n                                type: integer\n                              name:\n                                description: Server name at the time the Image was created\n                                example: Server\n                                type: string\n                            required:\n                              - id\n                              - name\n                            type: object\n                          deleted:\n                            description: Point in time where the Image was deleted (in ISO-8601 format)\n                            example: null\n                            nullable: true\n                            type: string\n                          deprecated:\n                            description: Point in time when the Image is considered to be deprecated (in ISO-8601 format)\n                            example: 2018-02-28T00:00:00+00:00\n                            nullable: true\n                            type: string\n                          description:\n                            description: Description of the Image\n                            example: Ubuntu 20.04 Standard 64 bit\n                            type: string\n                          disk_size:\n                            description: Size of the disk contained in the Image in GB\n                            example: 10\n                            type: number\n                          id:\n                            description: ID of the Resource\n                            example: 42\n                            type: integer\n                          image_size:\n                            description: Size of the Image file in our storage in GB. For snapshot Images this is the value relevant for calculating costs for the Image.\n                            example: 2.3\n                            nullable: true\n                            type: number\n                          labels:\n                            additionalProperties:\n                              type: string\n                            description: User-defined labels (key-value pairs)\n                            type: object\n                          name:\n                            description: Unique identifier of the Image. This value is only set for system Images.\n                            example: ubuntu-20.04\n                            nullable: true\n                            type: string\n                          os_flavor:\n                            description: Flavor of operating system contained in the Image\n                            enum:\n                              - ubuntu\n                              - centos\n                              - debian\n                              - fedora\n                              - unknown\n                            example: ubuntu\n                            type: string\n                          os_version:\n                            description: Operating system version\n                            example: \"20.04\"\n                            nullable: true\n                            type: string\n                          protection:\n                            description: Protection configuration for the Resource\n                            properties:\n                              delete:\n                                description: If true, prevents the Resource from being deleted\n                                example: false\n                                type: boolean\n                            required:\n                              - delete\n                            type: object\n                          rapid_deploy:\n                            description: Indicates that rapid deploy of the Image is available\n                            example: false\n                            type: boolean\n                          status:\n                            description: Whether the Image can be used or if it's still being created or unavailable\n                            enum:\n                              - available\n                              - creating\n                              - unavailable\n                            type: string\n                          type:\n                            description: Type of the Image\n                            enum:\n                              - system\n                              - app\n                              - snapshot\n                              - backup\n                              - temporary\n                            example: snapshot\n                            type: string\n                        required:\n                          - id\n                          - type\n                          - status\n                          - name\n                          - description\n                          - image_size\n                          - disk_size\n                          - created\n                          - created_from\n                          - bound_to\n                          - os_flavor\n                          - os_version\n                          - protection\n                          - deprecated\n                          - deleted\n                          - labels\n                        type: object\n                      included_traffic:\n                        description: Free Traffic for the current billing period in bytes\n                        example: 654321\n                        nullable: true\n                        type: number\n                      ingoing_traffic:\n                        description: Inbound Traffic for the current billing period in bytes\n                        example: 123456\n                        nullable: true\n                        type: number\n                      iso:\n                        description: ISO Image that is attached to this Server. Null if no ISO is attached.\n                        nullable: true\n                        properties:\n                          deprecated:\n                            description: ISO 8601 timestamp of deprecation, null if ISO is still available. After the deprecation time it will no longer be possible to attach the ISO to Servers.\n                            example: 2018-02-28T00:00:00+00:00\n                            nullable: true\n                            type: string\n                          description:\n                            description: Description of the ISO\n                            example: FreeBSD 11.0 x64\n                            type: string\n                          id:\n                            description: ID of the Resource\n                            example: 42\n                            type: integer\n                          name:\n                            description: Unique identifier of the ISO. Only set for public ISOs\n                            example: FreeBSD-11.0-RELEASE-amd64-dvd1\n                            nullable: true\n                            type: string\n                          type:\n                            description: Type of the ISO\n                            enum:\n                              - public\n                              - private\n                            type: string\n                        required:\n                          - id\n                          - name\n                          - description\n                          - type\n                          - deprecated\n                        type: object\n                      labels:\n                        additionalProperties:\n                          type: string\n                        description: User-defined labels (key-value pairs)\n                        type: object\n                      load_balancers:\n                        items:\n                          type: integer\n                        type: array\n                      locked:\n                        description: True if Server has been locked and is not available to user\n                        example: false\n                        type: boolean\n                      name:\n                        description: Name of the Resource. Must be unique per Project.\n                        example: my-resource\n                        type: string\n                      outgoing_traffic:\n                        description: Outbound Traffic for the current billing period in bytes\n                        example: 123456\n                        nullable: true\n                        type: number\n                      placement_group:\n                        nullable: true\n                        properties:\n                          created:\n                            description: Point in time when the Resource was created (in ISO-8601 format)\n                            example: 2016-01-30T23:55:00+00:00\n                            type: string\n                          id:\n                            description: ID of the Resource\n                            example: 42\n                            type: integer\n                          labels:\n                            additionalProperties:\n                              type: string\n                            description: User-defined labels (key-value pairs)\n                            type: object\n                          name:\n                            description: Name of the Resource. Must be unique per Project.\n                            example: my-resource\n                            type: string\n                          servers:\n                            description: Array of IDs of Servers that are part of this Placement Group\n                            example:\n                              - 42\n                            items:\n                              type: integer\n                            type: array\n                          type:\n                            description: Type of the Placement Group\n                            enum:\n                              - spread\n                            example: spread\n                            type: string\n                        required:\n                          - id\n                          - name\n                          - labels\n                          - type\n                          - created\n                          - servers\n                        title: PlacementGroupNullable\n                        type: object\n                      primary_disk_size:\n                        description: Size of the primary Disk\n                        example: 50\n                        type: number\n                      private_net:\n                        description: Private networks information\n                        items:\n                          properties:\n                            alias_ips:\n                              items:\n                                type: string\n                              type: array\n                            ip:\n                              example: 10.0.0.2\n                              type: string\n                            mac_address:\n                              example: 86:00:ff:2a:7d:e1\n                              type: string\n                            network:\n                              example: 4711\n                              type: integer\n                          type: object\n                        type: array\n                      protection:\n                        description: Protection configuration for the Server\n                        properties:\n                          delete:\n                            description: If true, prevents the Server from being deleted\n                            example: false\n                            type: boolean\n                          rebuild:\n                            description: If true, prevents the Server from being rebuilt\n                            example: false\n                            type: boolean\n                        required:\n                          - delete\n                          - rebuild\n                        type: object\n                      public_net:\n                        description: Public network information. The Server's IPv4 address can be found in `public_net-\u003eipv4-\u003eip`\n                        properties:\n                          firewalls:\n                            description: Firewalls applied to the public network interface of this Server\n                            items:\n                              properties:\n                                id:\n                                  description: ID of the Resource\n                                  example: 42\n                                  type: integer\n                                status:\n                                  description: Status of the Firewall on the Server\n                                  enum:\n                                    - applied\n                                    - pending\n                                  example: applied\n                                  type: string\n                              title: ServerPublicNetFirewall\n                              type: object\n                            type: array\n                          floating_ips:\n                            description: IDs of Floating IPs assigned to this Server\n                            example:\n                              - 478\n                            items:\n                              type: integer\n                            type: array\n                          ipv4:\n                            description: IP address (v4) and its reverse DNS entry of this Server\n                            properties:\n                              blocked:\n                                description: If the IP is blocked by our anti abuse dept\n                                example: false\n                                type: boolean\n                              dns_ptr:\n                                description: Reverse DNS PTR entry for the IPv4 addresses of this Server\n                                example: server01.example.com\n                                type: string\n                              ip:\n                                description: IP address (v4) of this Server\n                                example: 1.2.3.4\n                                type: string\n                            required:\n                              - ip\n                              - blocked\n                              - dns_ptr\n                            type: object\n                          ipv6:\n                            description: IPv6 network assigned to this Server and its reverse DNS entry\n                            properties:\n                              blocked:\n                                description: If the IP is blocked by our anti abuse dept\n                                example: false\n                                type: boolean\n                              dns_ptr:\n                                description: Reverse DNS PTR entries for the IPv6 addresses of this Server, `null` by default\n                                items:\n                                  properties:\n                                    dns_ptr:\n                                      description: DNS pointer for the specific IP address\n                                      example: server.example.com\n                                      type: string\n                                    ip:\n                                      description: Single IPv6 address of this Server for which the reverse DNS entry has been set up\n                                      example: 2001:db8::1\n                                      type: string\n                                  required:\n                                    - ip\n                                    - dns_ptr\n                                  type: object\n                                nullable: true\n                                type: array\n                              ip:\n                                description: IP address (v4) of this Server\n                                example: 2001:db8::/64\n                                type: string\n                            required:\n                              - ip\n                              - blocked\n                              - dns_ptr\n                            type: object\n                        required:\n                          - ipv4\n                          - ipv6\n                          - floating_ips\n                        type: object\n                      rescue_enabled:\n                        description: True if rescue mode is enabled. Server will then boot into rescue system on next reboot\n                        example: false\n                        type: boolean\n                      server_type:\n                        description: Type of Server - determines how much ram, disk and cpu a Server has\n                        properties:\n                          cores:\n                            description: Number of cpu cores a Server of this type will have\n                            example: 1\n                            type: number\n                          cpu_type:\n                            description: Type of cpu\n                            enum:\n                              - shared\n                              - dedicated\n                            type: string\n                          deprecated:\n                            description: True if Server type is deprecated\n                            example: false\n                            type: boolean\n                          description:\n                            description: Description of the Server type\n                            example: CX11\n                            type: string\n                          disk:\n                            description: Disk size a Server of this type will have in GB\n                            example: 25\n                            type: number\n                          id:\n                            description: ID of the Server type\n                            example: 1\n                            type: integer\n                          memory:\n                            description: Memory a Server of this type will have in GB\n                            example: 1\n                            type: number\n                          name:\n                            description: Unique identifier of the Server type\n                            example: cx11\n                            type: string\n                          prices:\n                            description: Prices in different Locations\n                            items:\n                              properties:\n                                location:\n                                  description: Name of the Location the price is for\n                                  example: fsn1\n                                  type: string\n                                price_hourly:\n                                  description: Hourly costs for a Server type in this Location\n                                  properties:\n                                    gross:\n                                      description: Price with VAT added\n                                      example: \"1.1900000000000000\"\n                                      type: string\n                                    net:\n                                      description: Price without VAT\n                                      example: \"1.0000000000\"\n                                      type: string\n                                  required:\n                                    - net\n                                    - gross\n                                  type: object\n                                price_monthly:\n                                  description: Monthly costs for a Server type in this Location\n                                  properties:\n                                    gross:\n                                      description: Price with VAT added\n                                      example: \"1.1900000000000000\"\n                                      type: string\n                                    net:\n                                      description: Price without VAT\n                                      example: \"1.0000000000\"\n                                      type: string\n                                  required:\n                                    - net\n                                    - gross\n                                  type: object\n                              required:\n                                - location\n                                - price_hourly\n                                - price_monthly\n                              type: object\n                            type: array\n                          storage_type:\n                            description: Type of Server boot drive. Local has higher speed. Network has better availability.\n                            enum:\n                              - local\n                              - network\n                            type: string\n                        required:\n                          - id\n                          - name\n                          - description\n                          - cores\n                          - memory\n                          - disk\n                          - deprecated\n                          - prices\n                          - storage_type\n                          - cpu_type\n                        type: object\n                      status:\n                        description: Status of the Server\n                        enum:\n                          - running\n                          - initializing\n                          - starting\n                          - stopping\n                          - off\n                          - deleting\n                          - migrating\n                          - rebuilding\n                          - unknown\n                        type: string\n                      volumes:\n                        description: IDs of Volumes assigned to this Server\n                        items:\n                          type: integer\n                        type: array\n                    required:\n                      - id\n                      - name\n                      - status\n                      - created\n                      - public_net\n                      - private_net\n                      - server_type\n                      - datacenter\n                      - image\n                      - iso\n                      - rescue_enabled\n                      - locked\n                      - backup_window\n                      - outgoing_traffic\n                      - ingoing_traffic\n                      - included_traffic\n                      - protection\n                      - labels\n                      - primary_disk_size\n                    type: object\n                type: object\n          description: The `server` key in the reply contains the updated Server\n      summary: Update a Server\n      tags:\n        - Servers\n  \"/servers/{id}/actions\":\n    get:\n      description: Returns all Action objects for a Server. You can `sort` the results by using the sort URI parameter, and filter them with the `status` parameter.\n      parameters:\n        - description: ID of the Resource\n          in: path\n          name: id\n          required: true\n          schema:\n            type: integer\n        - description: Can be used multiple times.\n          in: query\n          name: sort\n          required: false\n          schema:\n            enum:\n              - id\n              - id:asc\n              - id:desc\n              - command\n              - command:asc\n              - command:desc\n              - status\n              - status:asc\n              - status:desc\n              - progress\n              - progress:asc\n              - progress:desc\n              - started\n              - started:asc\n              - started:desc\n              - finished\n              - finished:asc\n              - finished:desc\n            title: ParameterSort\n            type: string\n        - description: Can be used multiple times, the response will contain only Actions with specified statuses\n          in: query\n          name: status\n          required: false\n          schema:\n            enum:\n              - running\n              - success\n              - error\n            title: ParameterStatus\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              example:\n                actions:\n                  - command: start_server\n                    error:\n                      code: action_failed\n                      message: Action failed\n                    finished: 2016-01-30T23:56:00+00:00\n                    id: 13\n                    progress: 100\n                    resources:\n                      - id: 42\n                        type: server\n                    started: 2016-01-30T23:55:00+00:00\n                    status: success\n              schema:\n                properties:\n                  actions:\n                    items:\n                      properties:\n                        command:\n                          description: Command executed in the Action\n                          example: start_server\n                          type: string\n                        error:\n                          description: Error message for the Action if error occurred, otherwise null\n                          nullable: true\n                          properties:\n                            code:\n                              description: Fixed machine readable code\n                              example: action_failed\n                              type: string\n                            message:\n                              description: Humanized error message\n                              example: Action failed\n                              type: string\n                          required:\n                            - code\n                            - message\n                          type: object\n                        finished:\n                          description: Point in time when the Action was finished (in ISO-8601 format). Only set if the Action is finished otherwise null.\n                          example: 2016-01-30T23:55:00+00:00\n                          nullable: true\n                          type: string\n                        id:\n                          description: ID of the Resource\n                          example: 42\n                          type: integer\n                        progress:\n                          description: Progress of Action in percent\n                          example: 100\n                          type: number\n                        resources:\n                          description: Resources the Action relates to\n                          items:\n                            properties:\n                              id:\n                                description: ID of the Resource\n                                example: 42\n                                type: integer\n                              type:\n                                description: Type of resource referenced\n                                example: server\n                                type: string\n                            required:\n                              - id\n                              - type\n                            type: object\n                          type: array\n                        started:\n                          description: Point in time when the Action was started (in ISO-8601 format)\n                          example: 2016-01-30T23:55:00+00:00\n                          type: string\n                        status:\n                          description: Status of the Action\n                          enum:\n                            - success\n                            - running\n                            - error\n                          type: string\n                      required:\n                        - id\n                        - command\n                        - status\n                        - progress\n                        - started\n                        - finished\n                        - resources\n                        - error\n                      title: Action\n                      type: object\n                    type: array\n                  meta:\n                    properties:\n                      pagination:\n                        properties:\n                          last_page:\n                            description: ID of the last page available. Can be null if the current page is the last one.\n                            example: 4\n                            nullable: true\n                            type: number\n                          next_page:\n                            description: ID of the next page. Can be null if the current page is the last one.\n                            example: 4\n                            nullable: true\n                            type: number\n                          page:\n                            description: Current page number\n                            example: 3\n                            type: number\n                          per_page:\n                            description: Maximum number of items shown per page in the response\n                            example: 25\n                            type: number\n                          previous_page:\n                            description: ID of the previous page. Can be null if the current page is the first one.\n                            example: 2\n                            nullable: true\n                            type: number\n                          total_entries:\n                            description: The total number of entries that exist in the database for this query. Nullable if unknown.\n                            example: 100\n                            nullable: true\n                            type: number\n                        required:\n                          - page\n                          - per_page\n                          - previous_page\n                          - next_page\n                          - last_page\n                          - total_entries\n                        type: object\n                    required:\n                      - pagination\n                    type: object\n                required:\n                  - actions\n                title: ActionsResponse\n                type: object\n          description: The `actions` key contains a list of Actions\n      summary: Get all Actions for a Server\n      tags:\n        - Server Actions\n  \"/servers/{id}/actions/add_to_placement_group\":\n    post:\n      description: |\n        Adds a Server to a Placement Group.\n\n        Server must be powered off for this command to succeed.\n\n        #### Call specific error codes\n\n        | Code                          | Description                                                          |\n        |-------------------------------|----------------------------------------------------------------------|\n        | `server_not_stopped`          | The action requires a stopped server                                 |\n      parameters:\n        - description: ID of the Server\n          in: path\n          name: id\n          required: true\n          schema:\n            type: integer\n      requestBody:\n        content:\n          application/json:\n            schema:\n              properties:\n                placement_group:\n                  description: ID of Placement Group the Server should be added to\n                  example: 1\n                  type: integer\n              required:\n                - placement_group\n              title: AddToPlacementGroupRequest\n              type: object\n      responses:\n        \"201\":\n          content:\n            application/json:\n              example:\n                action:\n                  command: add_to_placement_group\n                  error:\n                    code: action_failed\n                    message: Action failed\n                  finished: null\n                  id: 13\n                  progress: 0\n                  resources:\n                    - id: 42\n                      type: server\n                  started: 2016-01-30T23:50:00+00:00\n                  status: running\n              schema:\n                properties:\n                  action:\n                    properties:\n                      command:\n                        description: Command executed in the Action\n                        example: start_server\n                        type: string\n                      error:\n                        description: Error message for the Action if error occurred, otherwise null\n                        nullable: true\n                        properties:\n                          code:\n                            description: Fixed machine readable code\n                            example: action_failed\n                            type: string\n                          message:\n                            description: Humanized error message\n                            example: Action failed\n                            type: string\n                        required:\n                          - code\n                          - message\n                        type: object\n                      finished:\n                        description: Point in time when the Action was finished (in ISO-8601 format). Only set if the Action is finished otherwise null.\n                        example: 2016-01-30T23:55:00+00:00\n                        nullable: true\n                        type: string\n                      id:\n                        description: ID of the Resource\n                        example: 42\n                        type: integer\n                      progress:\n                        description: Progress of Action in percent\n                        example: 100\n                        type: number\n                      resources:\n                        description: Resources the Action relates to\n                        items:\n                          properties:\n                            id:\n                              description: ID of the Resource\n                              example: 42\n                              type: integer\n                            type:\n                              description: Type of resource referenced\n                              example: server\n                              type: string\n                          required:\n                            - id\n                            - type\n                          type: object\n                        type: array\n                      started:\n                        description: Point in time when the Action was started (in ISO-8601 format)\n                        example: 2016-01-30T23:55:00+00:00\n                        type: string\n                      status:\n                        description: Status of the Action\n                        enum:\n                          - success\n                          - running\n                          - error\n                        type: string\n                    required:\n                      - id\n                      - command\n                      - status\n                      - progress\n                      - started\n                      - finished\n                      - resources\n                      - error\n                    title: Action\n                    type: object\n                required:\n                  - action\n                title: ActionResponse\n                type: object\n          description: The `action` key in the reply contains an Action object with this structure\n      summary: Add a Server to a Placement Group\n      tags:\n        - Server Actions\n  \"/servers/{id}/actions/attach_iso\":\n    post:\n      description: |\n        Attaches an ISO to a Server. The Server will immediately see it as a new disk. An already attached ISO will automatically be detached before the new ISO is attached.\n\n        Servers with attached ISOs have a modified boot order: They will try to boot from the ISO first before falling back to hard disk.\n      parameters:\n        - description: ID of the Server\n          in: path\n          name: id\n          required: true\n          schema:\n            type: integer\n      requestBody:\n        content:\n          application/json:\n            schema:\n              properties:\n                iso:\n                  description: ID or name of ISO to attach to the Server as listed in GET `/isos`\n                  example: FreeBSD-11.0-RELEASE-amd64-dvd1\n                  type: string\n              required:\n                - iso\n              type: object\n      responses:\n        \"201\":\n          content:\n            application/json:\n              example:\n                action:\n                  command: attach_iso\n                  error:\n                    code: action_failed\n                    message: Action failed\n                  finished: null\n                  id: 13\n                  progress: 0\n                  resources:\n                    - id: 42\n                      type: server\n                  started: 2016-01-30T23:50:00+00:00\n                  status: running\n              schema:\n                properties:\n                  action:\n                    properties:\n                      command:\n                        description: Command executed in the Action\n                        example: start_server\n                        type: string\n                      error:\n                        description: Error message for the Action if error occurred, otherwise null\n                        nullable: true\n                        properties:\n                          code:\n                            description: Fixed machine readable code\n                            example: action_failed\n                            type: string\n                          message:\n                            description: Humanized error message\n                            example: Action failed\n                            type: string\n                        required:\n                          - code\n                          - message\n                        type: object\n                      finished:\n                        description: Point in time when the Action was finished (in ISO-8601 format). Only set if the Action is finished otherwise null.\n                        example: 2016-01-30T23:55:00+00:00\n                        nullable: true\n                        type: string\n                      id:\n                        description: ID of the Resource\n                        example: 42\n                        type: integer\n                      progress:\n                        description: Progress of Action in percent\n                        example: 100\n                        type: number\n                      resources:\n                        description: Resources the Action relates to\n                        items:\n                          properties:\n                            id:\n                              description: ID of the Resource\n                              example: 42\n                              type: integer\n                            type:\n                              description: Type of resource referenced\n                              example: server\n                              type: string\n                          required:\n                            - id\n                            - type\n                          type: object\n                        type: array\n                      started:\n                        description: Point in time when the Action was started (in ISO-8601 format)\n                        example: 2016-01-30T23:55:00+00:00\n                        type: string\n                      status:\n                        description: Status of the Action\n                        enum:\n                          - success\n                          - running\n                          - error\n                        type: string\n                    required:\n                      - id\n                      - command\n                      - status\n                      - progress\n                      - started\n                      - finished\n                      - resources\n                      - error\n                    title: Action\n                    type: object\n                required:\n                  - action\n                title: ActionResponse\n                type: object\n          description: The `action` key in the reply contains an Action object with this structure\n      summary: Attach an ISO to a Server\n      tags:\n        - Server Actions\n  \"/servers/{id}/actions/attach_to_network\":\n    post:\n      description: |\n        Attaches a Server to a network. This will complement the fixed public Server interface by adding an additional ethernet interface to the Server which is connected to the specified network.\n\n        The Server will get an IP auto assigned from a subnet of type `server` in the same `network_zone`.\n\n        Using the `alias_ips` attribute you can also define one or more additional IPs to the Servers. Please note that you will have to configure these IPs by hand on your Server since only the primary IP will be given out by DHCP.\n\n        **Call specific error codes**\n\n        | Code                             | Description                                                           |\n        |----------------------------------|-----------------------------------------------------------------------|\n        | `server_already_attached`        | The server is already attached to the network                         |\n        | `ip_not_available`               | The provided Network IP is not available                              |\n        | `no_subnet_available`            | No Subnet or IP is available for the Server within the network        |\n        | `networks_overlap`               | The network IP range overlaps with one of the server networks         |\n      parameters:\n        - description: ID of the Server\n          in: path\n          name: id\n          required: true\n          schema:\n            type: integer\n      requestBody:\n        content:\n          application/json:\n            schema:\n              properties:\n                alias_ips:\n                  description: Additional IPs to be assigned to this Server\n                  example:\n                    - 10.0.1.2\n                  items:\n                    type: string\n                  type: array\n                ip:\n                  description: IP to request to be assigned to this Server; if you do not provide this then you will be auto assigned an IP address\n                  example: 10.0.1.1\n                  type: string\n                network:\n                  description: ID of an existing network to attach the Server to\n                  example: 4711\n                  type: integer\n              required:\n                - network\n              title: AttachToNetworkRequest\n              type: object\n      responses:\n        \"201\":\n          content:\n            application/json:\n              example:\n                action:\n                  command: attach_to_network\n                  error:\n                    code: action_failed\n                    message: Action failed\n                  finished: null\n                  id: 13\n                  progress: 0\n                  resources:\n                    - id: 42\n                      type: server\n                    - id: 4711\n                      type: network\n                  started: 2016-01-30T23:50:00+00:00\n                  status: running\n              schema:\n                properties:\n                  action:\n                    properties:\n                      command:\n                        description: Command executed in the Action\n                        example: start_server\n                        type: string\n                      error:\n                        description: Error message for the Action if error occurred, otherwise null\n                        nullable: true\n                        properties:\n                          code:\n                            description: Fixed machine readable code\n                            example: action_failed\n                            type: string\n                          message:\n                            description: Humanized error message\n                            example: Action failed\n                            type: string\n                        required:\n                          - code\n                          - message\n                        type: object\n                      finished:\n                        description: Point in time when the Action was finished (in ISO-8601 format). Only set if the Action is finished otherwise null.\n                        example: 2016-01-30T23:55:00+00:00\n                        nullable: true\n                        type: string\n                      id:\n                        description: ID of the Resource\n                        example: 42\n                        type: integer\n                      progress:\n                        description: Progress of Action in percent\n                        example: 100\n                        type: number\n                      resources:\n                        description: Resources the Action relates to\n                        items:\n                          properties:\n                            id:\n                              description: ID of the Resource\n                              example: 42\n                              type: integer\n                            type:\n                              description: Type of resource referenced\n                              example: server\n                              type: string\n                          required:\n                            - id\n                            - type\n                          type: object\n                        type: array\n                      started:\n                        description: Point in time when the Action was started (in ISO-8601 format)\n                        example: 2016-01-30T23:55:00+00:00\n                        type: string\n                      status:\n                        description: Status of the Action\n                        enum:\n                          - success\n                          - running\n                          - error\n                        type: string\n                    required:\n                      - id\n                      - command\n                      - status\n                      - progress\n                      - started\n                      - finished\n                      - resources\n                      - error\n                    title: Action\n                    type: object\n                required:\n                  - action\n                title: ActionResponse\n                type: object\n          description: The `action` key in the reply contains an Action object with this structure\n      summary: Attach a Server to a Network\n      tags:\n        - Server Actions\n  \"/servers/{id}/actions/change_alias_ips\":\n    post:\n      description: Changes the alias IPs of an already attached Network. Note that the existing aliases for the specified Network will be replaced with these provided in the request body. So if you want to add an alias IP, you have to provide the existing ones from the Network plus the new alias IP in the request body.\n      parameters:\n        - description: ID of the Server\n          in: path\n          name: id\n          required: true\n          schema:\n            type: integer\n      requestBody:\n        content:\n          application/json:\n            schema:\n              properties:\n                alias_ips:\n                  description: New alias IPs to set for this Server\n                  example:\n                    - 10.0.1.2\n                  items:\n                    type: string\n                  type: array\n                network:\n                  description: ID of an existing Network already attached to the Server\n                  example: 4711\n                  type: integer\n              required:\n                - network\n                - alias_ips\n              type: object\n      responses:\n        \"201\":\n          content:\n            application/json:\n              example:\n                action:\n                  command: change_alias_ips\n                  error:\n                    code: action_failed\n                    message: Action failed\n                  finished: null\n                  id: 13\n                  progress: 0\n                  resources:\n                    - id: 42\n                      type: server\n                    - id: 4711\n                      type: network\n                  started: 2016-01-30T23:50:00+00:00\n                  status: running\n              schema:\n                properties:\n                  action:\n                    properties:\n                      command:\n                        description: Command executed in the Action\n                        example: start_server\n                        type: string\n                      error:\n                        description: Error message for the Action if error occurred, otherwise null\n                        nullable: true\n                        properties:\n                          code:\n                            description: Fixed machine readable code\n                            example: action_failed\n                            type: string\n                          message:\n                            description: Humanized error message\n                            example: Action failed\n                            type: string\n                        required:\n                          - code\n                          - message\n                        type: object\n                      finished:\n                        description: Point in time when the Action was finished (in ISO-8601 format). Only set if the Action is finished otherwise null.\n                        example: 2016-01-30T23:55:00+00:00\n                        nullable: true\n                        type: string\n                      id:\n                        description: ID of the Resource\n                        example: 42\n                        type: integer\n                      progress:\n                        description: Progress of Action in percent\n                        example: 100\n                        type: number\n                      resources:\n                        description: Resources the Action relates to\n                        items:\n                          properties:\n                            id:\n                              description: ID of the Resource\n                              example: 42\n                              type: integer\n                            type:\n                              description: Type of resource referenced\n                              example: server\n                              type: string\n                          required:\n                            - id\n                            - type\n                          type: object\n                        type: array\n                      started:\n                        description: Point in time when the Action was started (in ISO-8601 format)\n                        example: 2016-01-30T23:55:00+00:00\n                        type: string\n                      status:\n                        description: Status of the Action\n                        enum:\n                          - success\n                          - running\n                          - error\n                        type: string\n                    required:\n                      - id\n                      - command\n                      - status\n                      - progress\n                      - started\n                      - finished\n                      - resources\n                      - error\n                    title: Action\n                    type: object\n                required:\n                  - action\n                title: ActionResponse\n                type: object\n          description: The `action` key in the reply contains an Action object with this structure\n      summary: Change alias IPs of a Network\n      tags:\n        - Server Actions\n  \"/servers/{id}/actions/change_dns_ptr\":\n    post:\n      description: |\n        Changes the hostname that will appear when getting the hostname belonging to the primary IPs (IPv4 and IPv6) of this Server.\n\n        Floating IPs assigned to the Server are not affected by this.\n      parameters:\n        - description: ID of the Server\n          in: path\n          name: id\n          required: true\n          schema:\n            type: integer\n      requestBody:\n        content:\n          application/json:\n            schema:\n              properties:\n                dns_ptr:\n                  description: Hostname to set as a reverse DNS PTR entry, reset to original value if `null`\n                  example: server01.example.com\n                  nullable: true\n                  type: string\n                ip:\n                  description: Primary IP address for which the reverse DNS entry should be set\n                  example: 1.2.3.4\n                  type: string\n              required:\n                - ip\n                - dns_ptr\n              type: object\n        description: Select the IP address for which to change the DNS entry by passing `ip`. It can be either IPv4 or IPv6. The target hostname is set by passing `dns_ptr`.\n      responses:\n        \"201\":\n          content:\n            application/json:\n              example:\n                action:\n                  command: change_dns_ptr\n                  error:\n                    code: action_failed\n                    message: Action failed\n                  finished: null\n                  id: 13\n                  progress: 0\n                  resources:\n                    - id: 42\n                      type: server\n                  started: 2016-01-30T23:50:00+00:00\n                  status: running\n              schema:\n                properties:\n                  action:\n                    properties:\n                      command:\n                        description: Command executed in the Action\n                        example: start_server\n                        type: string\n                      error:\n                        description: Error message for the Action if error occurred, otherwise null\n                        nullable: true\n                        properties:\n                          code:\n                            description: Fixed machine readable code\n                            example: action_failed\n                            type: string\n                          message:\n                            description: Humanized error message\n                            example: Action failed\n                            type: string\n                        required:\n                          - code\n                          - message\n                        type: object\n                      finished:\n                        description: Point in time when the Action was finished (in ISO-8601 format). Only set if the Action is finished otherwise null.\n                        example: 2016-01-30T23:55:00+00:00\n                        nullable: true\n                        type: string\n                      id:\n                        description: ID of the Resource\n                        example: 42\n                        type: integer\n                      progress:\n                        description: Progress of Action in percent\n                        example: 100\n                        type: number\n                      resources:\n                        description: Resources the Action relates to\n                        items:\n                          properties:\n                            id:\n                              description: ID of the Resource\n                              example: 42\n                              type: integer\n                            type:\n                              description: Type of resource referenced\n                              example: server\n                              type: string\n                          required:\n                            - id\n                            - type\n                          type: object\n                        type: array\n                      started:\n                        description: Point in time when the Action was started (in ISO-8601 format)\n                        example: 2016-01-30T23:55:00+00:00\n                        type: string\n                      status:\n                        description: Status of the Action\n                        enum:\n                          - success\n                          - running\n                          - error\n                        type: string\n                    required:\n                      - id\n                      - command\n                      - status\n                      - progress\n                      - started\n                      - finished\n                      - resources\n                      - error\n                    title: Action\n                    type: object\n                required:\n                  - action\n                title: ActionResponse\n                type: object\n          description: The `action` key in the reply contains an Action object with this structure\n      summary: Change reverse DNS entry for this Server\n      tags:\n        - Server Actions\n  \"/servers/{id}/actions/change_protection\":\n    post:\n      description: Changes the protection configuration of the Server.\n      parameters:\n        - description: ID of the Server\n          in: path\n          name: id\n          required: true\n          schema:\n            type: integer\n      requestBody:\n        content:\n          application/json:\n            schema:\n              properties:\n                delete:\n                  description: If true, prevents the Server from being deleted (currently delete and rebuild attribute needs to have the same value)\n                  example: true\n                  type: boolean\n                rebuild:\n                  description: If true, prevents the Server from being rebuilt (currently delete and rebuild attribute needs to have the same value)\n                  example: true\n                  type: boolean\n              type: object\n      responses:\n        \"201\":\n          content:\n            application/json:\n              example:\n                action:\n                  command: change_protection\n                  error:\n                    code: action_failed\n                    message: Action failed\n                  finished: 2016-01-30T23:56:00+00:00\n                  id: 13\n                  progress: 100\n                  resources:\n                    - id: 42\n                      type: server\n                  started: 2016-01-30T23:55:00+00:00\n                  status: success\n              schema:\n                properties:\n                  action:\n                    properties:\n                      command:\n                        description: Command executed in the Action\n                        example: start_server\n                        type: string\n                      error:\n                        description: Error message for the Action if error occurred, otherwise null\n                        nullable: true\n                        properties:\n                          code:\n                            description: Fixed machine readable code\n                            example: action_failed\n                            type: string\n                          message:\n                            description: Humanized error message\n                            example: Action failed\n                            type: string\n                        required:\n                          - code\n                          - message\n                        type: object\n                      finished:\n                        description: Point in time when the Action was finished (in ISO-8601 format). Only set if the Action is finished otherwise null.\n                        example: 2016-01-30T23:55:00+00:00\n                        nullable: true\n                        type: string\n                      id:\n                        description: ID of the Resource\n                        example: 42\n                        type: integer\n                      progress:\n                        description: Progress of Action in percent\n                        example: 100\n                        type: number\n                      resources:\n                        description: Resources the Action relates to\n                        items:\n                          properties:\n                            id:\n                              description: ID of the Resource\n                              example: 42\n                              type: integer\n                            type:\n                              description: Type of resource referenced\n                              example: server\n                              type: string\n                          required:\n                            - id\n                            - type\n                          type: object\n                        type: array\n                      started:\n                        description: Point in time when the Action was started (in ISO-8601 format)\n                        example: 2016-01-30T23:55:00+00:00\n                        type: string\n                      status:\n                        description: Status of the Action\n                        enum:\n                          - success\n                          - running\n                          - error\n                        type: string\n                    required:\n                      - id\n                      - command\n                      - status\n                      - progress\n                      - started\n                      - finished\n                      - resources\n                      - error\n                    title: Action\n                    type: object\n                required:\n                  - action\n                title: ActionResponse\n                type: object\n          description: The `action` key in the reply contains an Action object with this structure\n      summary: Change Server Protection\n      tags:\n        - Server Actions\n  \"/servers/{id}/actions/change_type\":\n    post:\n      description: |\n        Changes the type (Cores, RAM and disk sizes) of a Server.\n\n        Server must be powered off for this command to succeed.\n\n        This copies the content of its disk, and starts it again.\n\n        You can only migrate to Server types with the same `storage_type` and equal or bigger disks. Shrinking disks is not possible as it might destroy data.\n\n        If the disk gets upgraded, the Server type can not be downgraded any more. If you plan to downgrade the Server type, set `upgrade_disk` to `false`.\n\n        #### Call specific error codes\n\n        | Code                          | Description                                                          |\n        |-------------------------------|----------------------------------------------------------------------|\n        | `invalid_server_type`         | The server type does not fit for the given server or is deprecated   |\n        | `server_not_stopped`          | The action requires a stopped server                                 |\n      parameters:\n        - description: ID of the Server\n          in: path\n          name: id\n          required: true\n          schema:\n            type: integer\n      requestBody:\n        content:\n          application/json:\n            schema:\n              properties:\n                server_type:\n                  description: ID or name of Server type the Server should migrate to\n                  example: cx11\n                  type: string\n                upgrade_disk:\n                  description: If false, do not upgrade the disk (this allows downgrading the Server type later)\n                  example: true\n                  type: boolean\n              required:\n                - upgrade_disk\n                - server_type\n              type: object\n      responses:\n        \"201\":\n          content:\n            application/json:\n              example:\n                action:\n                  command: change_server_type\n                  error:\n                    code: action_failed\n                    message: Action failed\n                  finished: null\n                  id: 13\n                  progress: 0\n                  resources:\n                    - id: 42\n                      type: server\n                  started: 2016-01-30T23:50:00+00:00\n                  status: running\n              schema:\n                properties:\n                  action:\n                    properties:\n                      command:\n                        description: Command executed in the Action\n                        example: start_server\n                        type: string\n                      error:\n                        description: Error message for the Action if error occurred, otherwise null\n                        nullable: true\n                        properties:\n                          code:\n                            description: Fixed machine readable code\n                            example: action_failed\n                            type: string\n                          message:\n                            description: Humanized error message\n                            example: Action failed\n                            type: string\n                        required:\n                          - code\n                          - message\n                        type: object\n                      finished:\n                        description: Point in time when the Action was finished (in ISO-8601 format). Only set if the Action is finished otherwise null.\n                        example: 2016-01-30T23:55:00+00:00\n                        nullable: true\n                        type: string\n                      id:\n                        description: ID of the Resource\n                        example: 42\n                        type: integer\n                      progress:\n                        description: Progress of Action in percent\n                        example: 100\n                        type: number\n                      resources:\n                        description: Resources the Action relates to\n                        items:\n                          properties:\n                            id:\n                              description: ID of the Resource\n                              example: 42\n                              type: integer\n                            type:\n                              description: Type of resource referenced\n                              example: server\n                              type: string\n                          required:\n                            - id\n                            - type\n                          type: object\n                        type: array\n                      started:\n                        description: Point in time when the Action was started (in ISO-8601 format)\n                        example: 2016-01-30T23:55:00+00:00\n                        type: string\n                      status:\n                        description: Status of the Action\n                        enum:\n                          - success\n                          - running\n                          - error\n                        type: string\n                    required:\n                      - id\n                      - command\n                      - status\n                      - progress\n                      - started\n                      - finished\n                      - resources\n                      - error\n                    title: Action\n                    type: object\n                required:\n                  - action\n                title: ActionResponse\n                type: object\n          description: The `action` key in the reply contains an Action object with this structure\n      summary: Change the Type of a Server\n      tags:\n        - Server Actions\n  \"/servers/{id}/actions/create_image\":\n    post:\n      description: |\n        Creates an Image (snapshot) from a Server by copying the contents of its disks. This creates a snapshot of the current state of the disk and copies it into an Image. If the Server is currently running you must make sure that its disk content is consistent. Otherwise, the created Image may not be readable.\n\n        To make sure disk content is consistent, we recommend to shut down the Server prior to creating an Image.\n\n        You can either create a `backup` Image that is bound to the Server and therefore will be deleted when the Server is deleted, or you can create an `snapshot` Image which is completely independent of the Server it was created from and will survive Server deletion. Backup Images are only available when the backup option is enabled for the Server. Snapshot Images are billed on a per GB basis.\n      parameters:\n        - description: ID of the Server\n          in: path\n          name: id\n          required: true\n          schema:\n            type: integer\n      requestBody:\n        content:\n          application/json:\n            schema:\n              properties:\n                description:\n                  description: Description of the Image, will be auto-generated if not set\n                  example: my image\n                  type: string\n                labels:\n                  description: User-defined labels (key-value pairs)\n                  properties:\n                    labelkey:\n                      description: New label\n                      example: value\n                      type: string\n                  type: object\n                type:\n                  description: \"Type of Image to create (default: `snapshot`)\"\n                  enum:\n                    - snapshot\n                    - backup\n                  example: snapshot\n                  type: string\n              title: CreateImageRequest\n              type: object\n      responses:\n        \"201\":\n          content:\n            application/json:\n              example:\n                action:\n                  command: create_image\n                  error:\n                    code: action_failed\n                    message: Action failed\n                  finished: 2016-01-30T23:56:00+00:00\n                  id: 13\n                  progress: 100\n                  resources:\n                    - id: 42\n                      type: server\n                  started: 2016-01-30T23:55:00+00:00\n                  status: success\n                image:\n                  bound_to: null\n                  created: 2016-01-30T23:50:00+00:00\n                  created_from:\n                    id: 1\n                    name: Server\n                  deleted: null\n                  deprecated: 2018-02-28T00:00:00+00:00\n                  description: my image\n                  disk_size: 10\n                  id: 4711\n                  image_size: 2.3\n                  labels:\n                    env: dev\n                  name: null\n                  os_flavor: ubuntu\n                  os_version: \"20.04\"\n                  protection:\n                    delete: false\n                  rapid_deploy: false\n                  status: creating\n                  type: snapshot\n              schema:\n                properties:\n                  action:\n                    properties:\n                      command:\n                        description: Command executed in the Action\n                        example: start_server\n                        type: string\n                      error:\n                        description: Error message for the Action if error occurred, otherwise null\n                        nullable: true\n                        properties:\n                          code:\n                            description: Fixed machine readable code\n                            example: action_failed\n                            type: string\n                          message:\n                            description: Humanized error message\n                            example: Action failed\n                            type: string\n                        required:\n                          - code\n                          - message\n                        type: object\n                      finished:\n                        description: Point in time when the Action was finished (in ISO-8601 format). Only set if the Action is finished otherwise null.\n                        example: 2016-01-30T23:55:00+00:00\n                        nullable: true\n                        type: string\n                      id:\n                        description: ID of the Resource\n                        example: 42\n                        type: integer\n                      progress:\n                        description: Progress of Action in percent\n                        example: 100\n                        type: number\n                      resources:\n                        description: Resources the Action relates to\n                        items:\n                          properties:\n                            id:\n                              description: ID of the Resource\n                              example: 42\n                              type: integer\n                            type:\n                              description: Type of resource referenced\n                              example: server\n                              type: string\n                          required:\n                            - id\n                            - type\n                          type: object\n                        type: array\n                      started:\n                        description: Point in time when the Action was started (in ISO-8601 format)\n                        example: 2016-01-30T23:55:00+00:00\n                        type: string\n                      status:\n                        description: Status of the Action\n                        enum:\n                          - success\n                          - running\n                          - error\n                        type: string\n                    required:\n                      - id\n                      - command\n                      - status\n                      - progress\n                      - started\n                      - finished\n                      - resources\n                      - error\n                    title: Action\n                    type: object\n                  image:\n                    properties:\n                      bound_to:\n                        description: ID of Server the Image is bound to. Only set for Images of type `backup`.\n                        example: null\n                        nullable: true\n                        type: integer\n                      build_id:\n                        description: Build ID of the Image\n                        example: c313fe40383af26094a5a92026054320ab55abc7\n                        nullable: true\n                        type: string\n                      created:\n                        description: Point in time when the Resource was created (in ISO-8601 format)\n                        example: 2016-01-30T23:55:00+00:00\n                        type: string\n                      created_from:\n                        description: Information about the Server the Image was created from\n                        nullable: true\n                        properties:\n                          id:\n                            description: ID of the Server the Image was created from\n                            example: 1\n                            type: integer\n                          name:\n                            description: Server name at the time the Image was created\n                            example: Server\n                            type: string\n                        required:\n                          - id\n                          - name\n                        type: object\n                      deleted:\n                        description: Point in time where the Image was deleted (in ISO-8601 format)\n                        example: null\n                        nullable: true\n                        type: string\n                      deprecated:\n                        description: Point in time when the Image is considered to be deprecated (in ISO-8601 format)\n                        example: 2018-02-28T00:00:00+00:00\n                        nullable: true\n                        type: string\n                      description:\n                        description: Description of the Image\n                        example: Ubuntu 20.04 Standard 64 bit\n                        type: string\n                      disk_size:\n                        description: Size of the disk contained in the Image in GB\n                        example: 10\n                        type: number\n                      id:\n                        description: ID of the Resource\n                        example: 42\n                        type: integer\n                      image_size:\n                        description: Size of the Image file in our storage in GB. For snapshot Images this is the value relevant for calculating costs for the Image.\n                        example: 2.3\n                        nullable: true\n                        type: number\n                      labels:\n                        additionalProperties:\n                          type: string\n                        description: User-defined labels (key-value pairs)\n                        type: object\n                      name:\n                        description: Unique identifier of the Image. This value is only set for system Images.\n                        example: ubuntu-20.04\n                        nullable: true\n                        type: string\n                      os_flavor:\n                        description: Flavor of operating system contained in the Image\n                        enum:\n                          - ubuntu\n                          - centos\n                          - debian\n                          - fedora\n                          - unknown\n                        example: ubuntu\n                        type: string\n                      os_version:\n                        description: Operating system version\n                        example: \"20.04\"\n                        nullable: true\n                        type: string\n                      protection:\n                        description: Protection configuration for the Resource\n                        properties:\n                          delete:\n                            description: If true, prevents the Resource from being deleted\n                            example: false\n                            type: boolean\n                        required:\n                          - delete\n                        type: object\n                      rapid_deploy:\n                        description: Indicates that rapid deploy of the Image is available\n                        example: false\n                        type: boolean\n                      status:\n                        description: Whether the Image can be used or if it's still being created or unavailable\n                        enum:\n                          - available\n                          - creating\n                          - unavailable\n                        type: string\n                      type:\n                        description: Type of the Image\n                        enum:\n                          - system\n                          - app\n                          - snapshot\n                          - backup\n                          - temporary\n                        example: snapshot\n                        type: string\n                    required:\n                      - id\n                      - type\n                      - status\n                      - name\n                      - description\n                      - image_size\n                      - disk_size\n                      - created\n                      - created_from\n                      - bound_to\n                      - os_flavor\n                      - os_version\n                      - protection\n                      - deprecated\n                      - deleted\n                      - labels\n                    type: object\n                type: object\n          description: |\n            The `image` key in the reply contains an the created Image, which is an object with this structure\n\n            The `action` key in the reply contains an Action object with this structure\n      summary: Create Image from a Server\n      tags:\n        - Server Actions\n  \"/servers/{id}/actions/detach_from_network\":\n    post:\n      description: Detaches a Server from a network. The interface for this network will vanish.\n      parameters:\n        - description: ID of the Server\n          in: path\n          name: id\n          required: true\n          schema:\n            type: integer\n      requestBody:\n        content:\n          application/json:\n            schema:\n              properties:\n                network:\n                  description: ID of an existing network to detach the Server from\n                  example: 4711\n                  type: integer\n              required:\n                - network\n              title: DetachFromNetworkRequest\n              type: object\n      responses:\n        \"201\":\n          content:\n            application/json:\n              example:\n                action:\n                  command: detach_from_network\n                  error:\n                    code: action_failed\n                    message: Action failed\n                  finished: null\n                  id: 13\n                  progress: 0\n                  resources:\n                    - id: 42\n                      type: server\n                    - id: 4711\n                      type: network\n                  started: 2016-01-30T23:50:00+00:00\n                  status: running\n              schema:\n                properties:\n                  action:\n                    properties:\n                      command:\n                        description: Command executed in the Action\n                        example: start_server\n                        type: string\n                      error:\n                        description: Error message for the Action if error occurred, otherwise null\n                        nullable: true\n                        properties:\n                          code:\n                            description: Fixed machine readable code\n                            example: action_failed\n                            type: string\n                          message:\n                            description: Humanized error message\n                            example: Action failed\n                            type: string\n                        required:\n                          - code\n                          - message\n                        type: object\n                      finished:\n                        description: Point in time when the Action was finished (in ISO-8601 format). Only set if the Action is finished otherwise null.\n                        example: 2016-01-30T23:55:00+00:00\n                        nullable: true\n                        type: string\n                      id:\n                        description: ID of the Resource\n                        example: 42\n                        type: integer\n                      progress:\n                        description: Progress of Action in percent\n                        example: 100\n                        type: number\n                      resources:\n                        description: Resources the Action relates to\n                        items:\n                          properties:\n                            id:\n                              description: ID of the Resource\n                              example: 42\n                              type: integer\n                            type:\n                              description: Type of resource referenced\n                              example: server\n                              type: string\n                          required:\n                            - id\n                            - type\n                          type: object\n                        type: array\n                      started:\n                        description: Point in time when the Action was started (in ISO-8601 format)\n                        example: 2016-01-30T23:55:00+00:00\n                        type: string\n                      status:\n                        description: Status of the Action\n                        enum:\n                          - success\n                          - running\n                          - error\n                        type: string\n                    required:\n                      - id\n                      - command\n                      - status\n                      - progress\n                      - started\n                      - finished\n                      - resources\n                      - error\n                    title: Action\n                    type: object\n                required:\n                  - action\n                title: ActionResponse\n                type: object\n          description: The `action` key in the reply contains an Action object with this structure\n      summary: Detach a Server from a Network\n      tags:\n        - Server Actions\n  \"/servers/{id}/actions/detach_iso\":\n    post:\n      description: Detaches an ISO from a Server. In case no ISO Image is attached to the Server, the status of the returned Action is immediately set to `success`\n      parameters:\n        - description: ID of the Server\n          in: path\n          name: id\n          required: true\n          schema:\n            type: integer\n      responses:\n        \"201\":\n          content:\n            application/json:\n              example:\n                action:\n                  command: detach_iso\n                  error:\n                    code: action_failed\n                    message: Action failed\n                  finished: null\n                  id: 13\n                  progress: 0\n                  resources:\n                    - id: 42\n                      type: server\n                  started: 2016-01-30T23:50:00+00:00\n                  status: running\n              schema:\n                properties:\n                  action:\n                    properties:\n                      command:\n                        description: Command executed in the Action\n                        example: start_server\n                        type: string\n                      error:\n                        description: Error message for the Action if error occurred, otherwise null\n                        nullable: true\n                        properties:\n                          code:\n                            description: Fixed machine readable code\n                            example: action_failed\n                            type: string\n                          message:\n                            description: Humanized error message\n                            example: Action failed\n                            type: string\n                        required:\n                          - code\n                          - message\n                        type: object\n                      finished:\n                        description: Point in time when the Action was finished (in ISO-8601 format). Only set if the Action is finished otherwise null.\n                        example: 2016-01-30T23:55:00+00:00\n                        nullable: true\n                        type: string\n                      id:\n                        description: ID of the Resource\n                        example: 42\n                        type: integer\n                      progress:\n                        description: Progress of Action in percent\n                        example: 100\n                        type: number\n                      resources:\n                        description: Resources the Action relates to\n                        items:\n                          properties:\n                            id:\n                              description: ID of the Resource\n                              example: 42\n                              type: integer\n                            type:\n                              description: Type of resource referenced\n                              example: server\n                              type: string\n                          required:\n                            - id\n                            - type\n                          type: object\n                        type: array\n                      started:\n                        description: Point in time when the Action was started (in ISO-8601 format)\n                        example: 2016-01-30T23:55:00+00:00\n                        type: string\n                      status:\n                        description: Status of the Action\n                        enum:\n                          - success\n                          - running\n                          - error\n                        type: string\n                    required:\n                      - id\n                      - command\n                      - status\n                      - progress\n                      - started\n                      - finished\n                      - resources\n                      - error\n                    title: Action\n                    type: object\n                required:\n                  - action\n                title: ActionResponse\n                type: object\n          description: The `action` key in the reply contains an Action object with this structure\n      summary: Detach an ISO from a Server\n      tags:\n        - Server Actions\n  \"/servers/{id}/actions/disable_backup\":\n    post:\n      description: |\n        Disables the automatic backup option and deletes all existing Backups for a Server. No more additional charges for backups will be made.\n\n        Caution: This immediately removes all existing backups for the Server!\n      parameters:\n        - description: ID of the Server\n          in: path\n          name: id\n          required: true\n          schema:\n            type: integer\n      responses:\n        \"201\":\n          content:\n            application/json:\n              example:\n                action:\n                  command: disable_backup\n                  error:\n                    code: action_failed\n                    message: Action failed\n                  finished: 2016-01-30T23:56:00+00:00\n                  id: 13\n                  progress: 100\n                  resources:\n                    - id: 42\n                      type: server\n                  started: 2016-01-30T23:55:00+00:00\n                  status: success\n              schema:\n                properties:\n                  action:\n                    properties:\n                      command:\n                        description: Command executed in the Action\n                        example: start_server\n                        type: string\n                      error:\n                        description: Error message for the Action if error occurred, otherwise null\n                        nullable: true\n                        properties:\n                          code:\n                            description: Fixed machine readable code\n                            example: action_failed\n                            type: string\n                          message:\n                            description: Humanized error message\n                            example: Action failed\n                            type: string\n                        required:\n                          - code\n                          - message\n                        type: object\n                      finished:\n                        description: Point in time when the Action was finished (in ISO-8601 format). Only set if the Action is finished otherwise null.\n                        example: 2016-01-30T23:55:00+00:00\n                        nullable: true\n                        type: string\n                      id:\n                        description: ID of the Resource\n                        example: 42\n                        type: integer\n                      progress:\n                        description: Progress of Action in percent\n                        example: 100\n                        type: number\n                      resources:\n                        description: Resources the Action relates to\n                        items:\n                          properties:\n                            id:\n                              description: ID of the Resource\n                              example: 42\n                              type: integer\n                            type:\n                              description: Type of resource referenced\n                              example: server\n                              type: string\n                          required:\n                            - id\n                            - type\n                          type: object\n                        type: array\n                      started:\n                        description: Point in time when the Action was started (in ISO-8601 format)\n                        example: 2016-01-30T23:55:00+00:00\n                        type: string\n                      status:\n                        description: Status of the Action\n                        enum:\n                          - success\n                          - running\n                          - error\n                        type: string\n                    required:\n                      - id\n                      - command\n                      - status\n                      - progress\n                      - started\n                      - finished\n                      - resources\n                      - error\n                    title: Action\n                    type: object\n                required:\n                  - action\n                title: ActionResponse\n                type: object\n          description: The `action` key in the reply contains an Action object with this structure\n      summary: Disable Backups for a Server\n      tags:\n        - Server Actions\n  \"/servers/{id}/actions/disable_rescue\":\n    post:\n      description: |\n        Disables the Hetzner Rescue System for a Server. This makes a Server start from its disks on next reboot.\n\n        Rescue Mode is automatically disabled when you first boot into it or if you do not use it for 60 minutes.\n\n        Disabling rescue mode will not reboot your Server — you will have to do this yourself.\n      parameters:\n        - description: ID of the Server\n          in: path\n          name: id\n          required: true\n          schema:\n            type: integer\n      responses:\n        \"201\":\n          content:\n            application/json:\n              example:\n                action:\n                  command: disable_rescue\n                  error:\n                    code: action_failed\n                    message: Action failed\n                  finished: null\n                  id: 13\n                  progress: 0\n                  resources:\n                    - id: 42\n                      type: server\n                  started: 2016-01-30T23:50:00+00:00\n                  status: running\n              schema:\n                properties:\n                  action:\n                    properties:\n                      command:\n                        description: Command executed in the Action\n                        example: start_server\n                        type: string\n                      error:\n                        description: Error message for the Action if error occurred, otherwise null\n                        nullable: true\n                        properties:\n                          code:\n                            description: Fixed machine readable code\n                            example: action_failed\n                            type: string\n                          message:\n                            description: Humanized error message\n                            example: Action failed\n                            type: string\n                        required:\n                          - code\n                          - message\n                        type: object\n                      finished:\n                        description: Point in time when the Action was finished (in ISO-8601 format). Only set if the Action is finished otherwise null.\n                        example: 2016-01-30T23:55:00+00:00\n                        nullable: true\n                        type: string\n                      id:\n                        description: ID of the Resource\n                        example: 42\n                        type: integer\n                      progress:\n                        description: Progress of Action in percent\n                        example: 100\n                        type: number\n                      resources:\n                        description: Resources the Action relates to\n                        items:\n                          properties:\n                            id:\n                              description: ID of the Resource\n                              example: 42\n                              type: integer\n                            type:\n                              description: Type of resource referenced\n                              example: server\n                              type: string\n                          required:\n                            - id\n                            - type\n                          type: object\n                        type: array\n                      started:\n                        description: Point in time when the Action was started (in ISO-8601 format)\n                        example: 2016-01-30T23:55:00+00:00\n                        type: string\n                      status:\n                        description: Status of the Action\n                        enum:\n                          - success\n                          - running\n                          - error\n                        type: string\n                    required:\n                      - id\n                      - command\n                      - status\n                      - progress\n                      - started\n                      - finished\n                      - resources\n                      - error\n                    title: Action\n                    type: object\n                required:\n                  - action\n                title: ActionResponse\n                type: object\n          description: The `action` key in the reply contains an Action object with this structure\n      summary: Disable Rescue Mode for a Server\n      tags:\n        - Server Actions\n  \"/servers/{id}/actions/enable_backup\":\n    post:\n      description: |\n        Enables and configures the automatic daily backup option for the Server. Enabling automatic backups will increase the price of the Server by 20%. In return, you will get seven slots where Images of type backup can be stored.\n\n        Backups are automatically created daily.\n      parameters:\n        - description: ID of the Server\n          in: path\n          name: id\n          required: true\n          schema:\n            type: integer\n      responses:\n        \"201\":\n          content:\n            application/json:\n              example:\n                action:\n                  command: enable_backup\n                  error:\n                    code: action_failed\n                    message: Action failed\n                  finished: 2016-01-30T23:56:00+00:00\n                  id: 13\n                  progress: 100\n                  resources:\n                    - id: 42\n                      type: server\n                  started: 2016-01-30T23:55:00+00:00\n                  status: success\n              schema:\n                properties:\n                  action:\n                    properties:\n                      command:\n                        description: Command executed in the Action\n                        example: start_server\n                        type: string\n                      error:\n                        description: Error message for the Action if error occurred, otherwise null\n                        nullable: true\n                        properties:\n                          code:\n                            description: Fixed machine readable code\n                            example: action_failed\n                            type: string\n                          message:\n                            description: Humanized error message\n                            example: Action failed\n                            type: string\n                        required:\n                          - code\n                          - message\n                        type: object\n                      finished:\n                        description: Point in time when the Action was finished (in ISO-8601 format). Only set if the Action is finished otherwise null.\n                        example: 2016-01-30T23:55:00+00:00\n                        nullable: true\n                        type: string\n                      id:\n                        description: ID of the Resource\n                        example: 42\n                        type: integer\n                      progress:\n                        description: Progress of Action in percent\n                        example: 100\n                        type: number\n                      resources:\n                        description: Resources the Action relates to\n                        items:\n                          properties:\n                            id:\n                              description: ID of the Resource\n                              example: 42\n                              type: integer\n                            type:\n                              description: Type of resource referenced\n                              example: server\n                              type: string\n                          required:\n                            - id\n                            - type\n                          type: object\n                        type: array\n                      started:\n                        description: Point in time when the Action was started (in ISO-8601 format)\n                        example: 2016-01-30T23:55:00+00:00\n                        type: string\n                      status:\n                        description: Status of the Action\n                        enum:\n                          - success\n                          - running\n                          - error\n                        type: string\n                    required:\n                      - id\n                      - command\n                      - status\n                      - progress\n                      - started\n                      - finished\n                      - resources\n                      - error\n                    title: Action\n                    type: object\n                required:\n                  - action\n                title: ActionResponse\n                type: object\n          description: The `action` key in the reply contains an Action object with this structure\n      summary: Enable and Configure Backups for a Server\n      tags:\n        - Server Actions\n  \"/servers/{id}/actions/enable_rescue\":\n    post:\n      description: |\n        Enable the Hetzner Rescue System for this Server. The next time a Server with enabled rescue mode boots it will start a special minimal Linux distribution designed for repair and reinstall.\n\n        In case a Server cannot boot on its own you can use this to access a Server’s disks.\n\n        Rescue Mode is automatically disabled when you first boot into it or if you do not use it for 60 minutes.\n\n        Enabling rescue mode will not [reboot](https://docs.hetzner.cloud/#server-actions-soft-reboot-a-server) your Server — you will have to do this yourself.\n      parameters:\n        - description: ID of the Server\n          in: path\n          name: id\n          required: true\n          schema:\n            type: integer\n      requestBody:\n        content:\n          application/json:\n            schema:\n              properties:\n                ssh_keys:\n                  description: \"Array of SSH key IDs which should be injected into the rescue system. Only available for types: `linux64` and `linux32`.\"\n                  example:\n                    - 2323\n                  items:\n                    type: integer\n                  type: array\n                type:\n                  description: \"Type of rescue system to boot (default: `linux64`)\"\n                  enum:\n                    - linux64\n                    - linux32\n                    - freebsd64\n                  type: string\n              type: object\n      responses:\n        \"201\":\n          content:\n            application/json:\n              example:\n                action:\n                  command: enable_rescue\n                  error:\n                    code: action_failed\n                    message: Action failed\n                  finished: 2016-01-30T23:56:00+00:00\n                  id: 13\n                  progress: 100\n                  resources:\n                    - id: 42\n                      type: server\n                  started: 2016-01-30T23:55:00+00:00\n                  status: success\n                root_password: zCWbFhnu950dUTko5f40\n              schema:\n                properties:\n                  action:\n                    properties:\n                      command:\n                        description: Command executed in the Action\n                        example: start_server\n                        type: string\n                      error:\n                        description: Error message for the Action if error occurred, otherwise null\n                        nullable: true\n                        properties:\n                          code:\n                            description: Fixed machine readable code\n                            example: action_failed\n                            type: string\n                          message:\n                            description: Humanized error message\n                            example: Action failed\n                            type: string\n                        required:\n                          - code\n                          - message\n                        type: object\n                      finished:\n                        description: Point in time when the Action was finished (in ISO-8601 format). Only set if the Action is finished otherwise null.\n                        example: 2016-01-30T23:55:00+00:00\n                        nullable: true\n                        type: string\n                      id:\n                        description: ID of the Resource\n                        example: 42\n                        type: integer\n                      progress:\n                        description: Progress of Action in percent\n                        example: 100\n                        type: number\n                      resources:\n                        description: Resources the Action relates to\n                        items:\n                          properties:\n                            id:\n                              description: ID of the Resource\n                              example: 42\n                              type: integer\n                            type:\n                              description: Type of resource referenced\n                              example: server\n                              type: string\n                          required:\n                            - id\n                            - type\n                          type: object\n                        type: array\n                      started:\n                        description: Point in time when the Action was started (in ISO-8601 format)\n                        example: 2016-01-30T23:55:00+00:00\n                        type: string\n                      status:\n                        description: Status of the Action\n                        enum:\n                          - success\n                          - running\n                          - error\n                        type: string\n                    required:\n                      - id\n                      - command\n                      - status\n                      - progress\n                      - started\n                      - finished\n                      - resources\n                      - error\n                    title: Action\n                    type: object\n                  root_password:\n                    description: Password that will be set for this Server once the Action succeeds\n                    example: zCWbFhnu950dUTko5f40\n                    type: string\n                type: object\n          description: |\n            The `root_password` key in the reply contains the root password that can be used to access the booted rescue system.\n\n            The `action` key in the reply contains an Action object with this structure\n      summary: Enable Rescue Mode for a Server\n      tags:\n        - Server Actions\n  \"/servers/{id}/actions/poweroff\":\n    post:\n      description: Cuts power to the Server. This forcefully stops it without giving the Server operating system time to gracefully stop. May lead to data loss, equivalent to pulling the power cord. Power off should only be used when shutdown does not work.\n      parameters:\n        - description: ID of the Server\n          in: path\n          name: id\n          required: true\n          schema:\n            type: integer\n      responses:\n        \"201\":\n          content:\n            application/json:\n              example:\n                action:\n                  command: stop_server\n                  error:\n                    code: action_failed\n                    message: Action failed\n                  finished: null\n                  id: 13\n                  progress: 0\n                  resources:\n                    - id: 42\n                      type: server\n                  started: 2016-01-30T23:50:00+00:00\n                  status: running\n              schema:\n                properties:\n                  action:\n                    properties:\n                      command:\n                        description: Command executed in the Action\n                        example: start_server\n                        type: string\n                      error:\n                        description: Error message for the Action if error occurred, otherwise null\n                        nullable: true\n                        properties:\n                          code:\n                            description: Fixed machine readable code\n                            example: action_failed\n                            type: string\n                          message:\n                            description: Humanized error message\n                            example: Action failed\n                            type: string\n                        required:\n                          - code\n                          - message\n                        type: object\n                      finished:\n                        description: Point in time when the Action was finished (in ISO-8601 format). Only set if the Action is finished otherwise null.\n                        example: 2016-01-30T23:55:00+00:00\n                        nullable: true\n                        type: string\n                      id:\n                        description: ID of the Resource\n                        example: 42\n                        type: integer\n                      progress:\n                        description: Progress of Action in percent\n                        example: 100\n                        type: number\n                      resources:\n                        description: Resources the Action relates to\n                        items:\n                          properties:\n                            id:\n                              description: ID of the Resource\n                              example: 42\n                              type: integer\n                            type:\n                              description: Type of resource referenced\n                              example: server\n                              type: string\n                          required:\n                            - id\n                            - type\n                          type: object\n                        type: array\n                      started:\n                        description: Point in time when the Action was started (in ISO-8601 format)\n                        example: 2016-01-30T23:55:00+00:00\n                        type: string\n                      status:\n                        description: Status of the Action\n                        enum:\n                          - success\n                          - running\n                          - error\n                        type: string\n                    required:\n                      - id\n                      - command\n                      - status\n                      - progress\n                      - started\n                      - finished\n                      - resources\n                      - error\n                    title: Action\n                    type: object\n                required:\n                  - action\n                title: ActionResponse\n                type: object\n          description: The `action` key in the reply contains an Action object with this structure\n      summary: Power off a Server\n      tags:\n        - Server Actions\n  \"/servers/{id}/actions/poweron\":\n    post:\n      description: Starts a Server by turning its power on.\n      parameters:\n        - description: ID of the Server\n          in: path\n          name: id\n          required: true\n          schema:\n            type: integer\n      responses:\n        \"201\":\n          content:\n            application/json:\n              example:\n                action:\n                  command: start_server\n                  error:\n                    code: action_failed\n                    message: Action failed\n                  finished: null\n                  id: 13\n                  progress: 0\n                  resources:\n                    - id: 42\n                      type: server\n                  started: 2016-01-30T23:50:00+00:00\n                  status: running\n              schema:\n                properties:\n                  action:\n                    properties:\n                      command:\n                        description: Command executed in the Action\n                        example: start_server\n                        type: string\n                      error:\n                        description: Error message for the Action if error occurred, otherwise null\n                        nullable: true\n                        properties:\n                          code:\n                            description: Fixed machine readable code\n                            example: action_failed\n                            type: string\n                          message:\n                            description: Humanized error message\n                            example: Action failed\n                            type: string\n                        required:\n                          - code\n                          - message\n                        type: object\n                      finished:\n                        description: Point in time when the Action was finished (in ISO-8601 format). Only set if the Action is finished otherwise null.\n                        example: 2016-01-30T23:55:00+00:00\n                        nullable: true\n                        type: string\n                      id:\n                        description: ID of the Resource\n                        example: 42\n                        type: integer\n                      progress:\n                        description: Progress of Action in percent\n                        example: 100\n                        type: number\n                      resources:\n                        description: Resources the Action relates to\n                        items:\n                          properties:\n                            id:\n                              description: ID of the Resource\n                              example: 42\n                              type: integer\n                            type:\n                              description: Type of resource referenced\n                              example: server\n                              type: string\n                          required:\n                            - id\n                            - type\n                          type: object\n                        type: array\n                      started:\n                        description: Point in time when the Action was started (in ISO-8601 format)\n                        example: 2016-01-30T23:55:00+00:00\n                        type: string\n                      status:\n                        description: Status of the Action\n                        enum:\n                          - success\n                          - running\n                          - error\n                        type: string\n                    required:\n                      - id\n                      - command\n                      - status\n                      - progress\n                      - started\n                      - finished\n                      - resources\n                      - error\n                    title: Action\n                    type: object\n                required:\n                  - action\n                title: ActionResponse\n                type: object\n          description: The `action` key in the reply contains an Action object with this structure\n      summary: Power on a Server\n      tags:\n        - Server Actions\n  \"/servers/{id}/actions/reboot\":\n    post:\n      description: Reboots a Server gracefully by sending an ACPI request. The Server operating system must support ACPI and react to the request, otherwise the Server will not reboot.\n      parameters:\n        - description: ID of the Server\n          in: path\n          name: id\n          required: true\n          schema:\n            type: integer\n      responses:\n        \"201\":\n          content:\n            application/json:\n              example:\n                action:\n                  command: reboot_server\n                  error:\n                    code: action_failed\n                    message: Action failed\n                  finished: null\n                  id: 13\n                  progress: 0\n                  resources:\n                    - id: 42\n                      type: server\n                  started: 2016-01-30T23:50:00+00:00\n                  status: running\n              schema:\n                properties:\n                  action:\n                    properties:\n                      command:\n                        description: Command executed in the Action\n                        example: start_server\n                        type: string\n                      error:\n                        description: Error message for the Action if error occurred, otherwise null\n                        nullable: true\n                        properties:\n                          code:\n                            description: Fixed machine readable code\n                            example: action_failed\n                            type: string\n                          message:\n                            description: Humanized error message\n                            example: Action failed\n                            type: string\n                        required:\n                          - code\n                          - message\n                        type: object\n                      finished:\n                        description: Point in time when the Action was finished (in ISO-8601 format). Only set if the Action is finished otherwise null.\n                        example: 2016-01-30T23:55:00+00:00\n                        nullable: true\n                        type: string\n                      id:\n                        description: ID of the Resource\n                        example: 42\n                        type: integer\n                      progress:\n                        description: Progress of Action in percent\n                        example: 100\n                        type: number\n                      resources:\n                        description: Resources the Action relates to\n                        items:\n                          properties:\n                            id:\n                              description: ID of the Resource\n                              example: 42\n                              type: integer\n                            type:\n                              description: Type of resource referenced\n                              example: server\n                              type: string\n                          required:\n                            - id\n                            - type\n                          type: object\n                        type: array\n                      started:\n                        description: Point in time when the Action was started (in ISO-8601 format)\n                        example: 2016-01-30T23:55:00+00:00\n                        type: string\n                      status:\n                        description: Status of the Action\n                        enum:\n                          - success\n                          - running\n                          - error\n                        type: string\n                    required:\n                      - id\n                      - command\n                      - status\n                      - progress\n                      - started\n                      - finished\n                      - resources\n                      - error\n                    title: Action\n                    type: object\n                required:\n                  - action\n                title: ActionResponse\n                type: object\n          description: The `action` key in the reply contains an Action object with this structure\n      summary: Soft-reboot a Server\n      tags:\n        - Server Actions\n  \"/servers/{id}/actions/rebuild\":\n    post:\n      description: |\n        Rebuilds a Server overwriting its disk with the content of an Image, thereby **destroying all data** on the target Server\n\n        The Image can either be one you have created earlier (`backup` or `snapshot` Image) or it can be a completely fresh `system` Image provided by us. You can get a list of all available Images with `GET /images`.\n\n        Your Server will automatically be powered off before the rebuild command executes.\n      parameters:\n        - description: ID of the Server\n          in: path\n          name: id\n          required: true\n          schema:\n            type: integer\n      requestBody:\n        content:\n          application/json:\n            schema:\n              properties:\n                image:\n                  description: ID or name of Image to rebuilt from.\n                  example: ubuntu-20.04\n                  type: string\n              required:\n                - image\n              title: RebuildServerRequest\n              type: object\n        description: To select which Image to rebuild from you can either pass an ID or a name as the `image` argument. Passing a name only works for `system` Images since the other Image types do not have a name set.\n      responses:\n        \"201\":\n          content:\n            application/json:\n              example:\n                action:\n                  command: rebuild_server\n                  error:\n                    code: action_failed\n                    message: Action failed\n                  finished: null\n                  id: 13\n                  progress: 0\n                  resources:\n                    - id: 42\n                      type: server\n                  started: 2016-01-30T23:50:00+00:00\n                  status: running\n                root_password: null\n              schema:\n                properties:\n                  action:\n                    properties:\n                      command:\n                        description: Command executed in the Action\n                        example: start_server\n                        type: string\n                      error:\n                        description: Error message for the Action if error occurred, otherwise null\n                        nullable: true\n                        properties:\n                          code:\n                            description: Fixed machine readable code\n                            example: action_failed\n                            type: string\n                          message:\n                            description: Humanized error message\n                            example: Action failed\n                            type: string\n                        required:\n                          - code\n                          - message\n                        type: object\n                      finished:\n                        description: Point in time when the Action was finished (in ISO-8601 format). Only set if the Action is finished otherwise null.\n                        example: 2016-01-30T23:55:00+00:00\n                        nullable: true\n                        type: string\n                      id:\n                        description: ID of the Resource\n                        example: 42\n                        type: integer\n                      progress:\n                        description: Progress of Action in percent\n                        example: 100\n                        type: number\n                      resources:\n                        description: Resources the Action relates to\n                        items:\n                          properties:\n                            id:\n                              description: ID of the Resource\n                              example: 42\n                              type: integer\n                            type:\n                              description: Type of resource referenced\n                              example: server\n                              type: string\n                          required:\n                            - id\n                            - type\n                          type: object\n                        type: array\n                      started:\n                        description: Point in time when the Action was started (in ISO-8601 format)\n                        example: 2016-01-30T23:55:00+00:00\n                        type: string\n                      status:\n                        description: Status of the Action\n                        enum:\n                          - success\n                          - running\n                          - error\n                        type: string\n                    required:\n                      - id\n                      - command\n                      - status\n                      - progress\n                      - started\n                      - finished\n                      - resources\n                      - error\n                    title: Action\n                    type: object\n                  root_password:\n                    description: New root password when not using SSH keys\n                    nullable: true\n                    type: string\n                type: object\n          description: The `action` key in the reply contains an Action object with this structure\n      summary: Rebuild a Server from an Image\n      tags:\n        - Server Actions\n  \"/servers/{id}/actions/remove_from_placement_group\":\n    post:\n      description: |\n        Removes a Server from a Placement Group.\n      parameters:\n        - description: ID of the Server\n          in: path\n          name: id\n          required: true\n          schema:\n            type: integer\n      responses:\n        \"201\":\n          content:\n            application/json:\n              example:\n                action:\n                  command: remove_from_placement_group\n                  error:\n                    code: action_failed\n                    message: Action failed\n                  finished: 2016-01-30T23:56:00+00:00\n                  id: 13\n                  progress: 100\n                  resources:\n                    - id: 42\n                      type: server\n                  started: 2016-01-30T23:55:00+00:00\n                  status: success\n              schema:\n                properties:\n                  action:\n                    properties:\n                      command:\n                        description: Command executed in the Action\n                        example: start_server\n                        type: string\n                      error:\n                        description: Error message for the Action if error occurred, otherwise null\n                        nullable: true\n                        properties:\n                          code:\n                            description: Fixed machine readable code\n                            example: action_failed\n                            type: string\n                          message:\n                            description: Humanized error message\n                            example: Action failed\n                            type: string\n                        required:\n                          - code\n                          - message\n                        type: object\n                      finished:\n                        description: Point in time when the Action was finished (in ISO-8601 format). Only set if the Action is finished otherwise null.\n                        example: 2016-01-30T23:55:00+00:00\n                        nullable: true\n                        type: string\n                      id:\n                        description: ID of the Resource\n                        example: 42\n                        type: integer\n                      progress:\n                        description: Progress of Action in percent\n                        example: 100\n                        type: number\n                      resources:\n                        description: Resources the Action relates to\n                        items:\n                          properties:\n                            id:\n                              description: ID of the Resource\n                              example: 42\n                              type: integer\n                            type:\n                              description: Type of resource referenced\n                              example: server\n                              type: string\n                          required:\n                            - id\n                            - type\n                          type: object\n                        type: array\n                      started:\n                        description: Point in time when the Action was started (in ISO-8601 format)\n                        example: 2016-01-30T23:55:00+00:00\n                        type: string\n                      status:\n                        description: Status of the Action\n                        enum:\n                          - success\n                          - running\n                          - error\n                        type: string\n                    required:\n                      - id\n                      - command\n                      - status\n                      - progress\n                      - started\n                      - finished\n                      - resources\n                      - error\n                    title: Action\n                    type: object\n                required:\n                  - action\n                title: ActionResponse\n                type: object\n          description: The `action` key in the reply contains an Action object with this structure\n      summary: Remove from Placement Group\n      tags:\n        - Server Actions\n  \"/servers/{id}/actions/request_console\":\n    post:\n      description: Requests credentials for remote access via VNC over websocket to keyboard, monitor, and mouse for a Server. The provided URL is valid for 1 minute, after this period a new url needs to be created to connect to the Server. How long the connection is open after the initial connect is not subject to this timeout.\n      parameters:\n        - description: ID of the Server\n          in: path\n          name: id\n          required: true\n          schema:\n            type: integer\n      responses:\n        \"201\":\n          content:\n            application/json:\n              example:\n                action:\n                  command: request_console\n                  error:\n                    code: action_failed\n                    message: Action failed\n                  finished: 2016-01-30T23:56:00+00:00\n                  id: 13\n                  progress: 100\n                  resources:\n                    - id: 42\n                      type: server\n                  started: 2016-01-30T23:55:00+00:00\n                  status: success\n                password: 9MQaTg2VAGI0FIpc10k3UpRXcHj2wQ6x\n                wss_url: wss://console.hetzner.cloud/?server_id=1\u0026token=3db32d15-af2f-459c-8bf8-dee1fd05f49c\n              schema:\n                properties:\n                  action:\n                    properties:\n                      command:\n                        description: Command executed in the Action\n                        example: start_server\n                        type: string\n                      error:\n                        description: Error message for the Action if error occurred, otherwise null\n                        nullable: true\n                        properties:\n                          code:\n                            description: Fixed machine readable code\n                            example: action_failed\n                            type: string\n                          message:\n                            description: Humanized error message\n                            example: Action failed\n                            type: string\n                        required:\n                          - code\n                          - message\n                        type: object\n                      finished:\n                        description: Point in time when the Action was finished (in ISO-8601 format). Only set if the Action is finished otherwise null.\n                        example: 2016-01-30T23:55:00+00:00\n                        nullable: true\n                        type: string\n                      id:\n                        description: ID of the Resource\n                        example: 42\n                        type: integer\n                      progress:\n                        description: Progress of Action in percent\n                        example: 100\n                        type: number\n                      resources:\n                        description: Resources the Action relates to\n                        items:\n                          properties:\n                            id:\n                              description: ID of the Resource\n                              example: 42\n                              type: integer\n                            type:\n                              description: Type of resource referenced\n                              example: server\n                              type: string\n                          required:\n                            - id\n                            - type\n                          type: object\n                        type: array\n                      started:\n                        description: Point in time when the Action was started (in ISO-8601 format)\n                        example: 2016-01-30T23:55:00+00:00\n                        type: string\n                      status:\n                        description: Status of the Action\n                        enum:\n                          - success\n                          - running\n                          - error\n                        type: string\n                    required:\n                      - id\n                      - command\n                      - status\n                      - progress\n                      - started\n                      - finished\n                      - resources\n                      - error\n                    title: Action\n                    type: object\n                  password:\n                    description: VNC password to use for this connection (this password only works in combination with a wss_url with valid token)\n                    example: 9MQaTg2VAGI0FIpc10k3UpRXcHj2wQ6x\n                    type: string\n                  wss_url:\n                    description: URL of websocket proxy to use; this includes a token which is valid for a limited time only\n                    example: wss://console.hetzner.cloud/?server_id=1\u0026token=3db32d15-af2f-459c-8bf8-dee1fd05f49c\n                    type: string\n                required:\n                  - wss_url\n                  - password\n                  - action\n                type: object\n          description: The `action` key in the reply contains an Action object with this structure\n      summary: Request Console for a Server\n      tags:\n        - Server Actions\n  \"/servers/{id}/actions/reset\":\n    post:\n      description: Cuts power to a Server and starts it again. This forcefully stops it without giving the Server operating system time to gracefully stop. This may lead to data loss, it’s equivalent to pulling the power cord and plugging it in again. Reset should only be used when reboot does not work.\n      parameters:\n        - description: ID of the Server\n          in: path\n          name: id\n          required: true\n          schema:\n            type: integer\n      responses:\n        \"201\":\n          content:\n            application/json:\n              example:\n                action:\n                  command: reset_server\n                  error:\n                    code: action_failed\n                    message: Action failed\n                  finished: null\n                  id: 13\n                  progress: 0\n                  resources:\n                    - id: 42\n                      type: server\n                  started: 2016-01-30T23:50:00+00:00\n                  status: running\n              schema:\n                properties:\n                  action:\n                    properties:\n                      command:\n                        description: Command executed in the Action\n                        example: start_server\n                        type: string\n                      error:\n                        description: Error message for the Action if error occurred, otherwise null\n                        nullable: true\n                        properties:\n                          code:\n                            description: Fixed machine readable code\n                            example: action_failed\n                            type: string\n                          message:\n                            description: Humanized error message\n                            example: Action failed\n                            type: string\n                        required:\n                          - code\n                          - message\n                        type: object\n                      finished:\n                        description: Point in time when the Action was finished (in ISO-8601 format). Only set if the Action is finished otherwise null.\n                        example: 2016-01-30T23:55:00+00:00\n                        nullable: true\n                        type: string\n                      id:\n                        description: ID of the Resource\n                        example: 42\n                        type: integer\n                      progress:\n                        description: Progress of Action in percent\n                        example: 100\n                        type: number\n                      resources:\n                        description: Resources the Action relates to\n                        items:\n                          properties:\n                            id:\n                              description: ID of the Resource\n                              example: 42\n                              type: integer\n                            type:\n                              description: Type of resource referenced\n                              example: server\n                              type: string\n                          required:\n                            - id\n                            - type\n                          type: object\n                        type: array\n                      started:\n                        description: Point in time when the Action was started (in ISO-8601 format)\n                        example: 2016-01-30T23:55:00+00:00\n                        type: string\n                      status:\n                        description: Status of the Action\n                        enum:\n                          - success\n                          - running\n                          - error\n                        type: string\n                    required:\n                      - id\n                      - command\n                      - status\n                      - progress\n                      - started\n                      - finished\n                      - resources\n                      - error\n                    title: Action\n                    type: object\n                required:\n                  - action\n                title: ActionResponse\n                type: object\n          description: The `action` key in the reply contains an Action object with this structure\n      summary: Reset a Server\n      tags:\n        - Server Actions\n  \"/servers/{id}/actions/reset_password\":\n    post:\n      description: |\n        Resets the root password. Only works for Linux systems that are running the qemu guest agent. Server must be powered on (state `on`) in order for this operation to succeed.\n\n        This will generate a new password for this Server and return it.\n\n        If this does not succeed you can use the rescue system to netboot the Server and manually change your Server password by hand.\n      parameters:\n        - description: ID of the Server\n          in: path\n          name: id\n          required: true\n          schema:\n            type: integer\n      responses:\n        \"201\":\n          content:\n            application/json:\n              example:\n                action:\n                  command: reset_password\n                  error:\n                    code: action_failed\n                    message: Action failed\n                  finished: null\n                  id: 13\n                  progress: 0\n                  resources:\n                    - id: 42\n                      type: server\n                  started: 2016-01-30T23:50:00+00:00\n                  status: running\n                root_password: zCWbFhnu950dUTko5f40\n              schema:\n                properties:\n                  action:\n                    properties:\n                      command:\n                        description: Command executed in the Action\n                        example: start_server\n                        type: string\n                      error:\n                        description: Error message for the Action if error occurred, otherwise null\n                        nullable: true\n                        properties:\n                          code:\n                            description: Fixed machine readable code\n                            example: action_failed\n                            type: string\n                          message:\n                            description: Humanized error message\n                            example: Action failed\n                            type: string\n                        required:\n                          - code\n                          - message\n                        type: object\n                      finished:\n                        description: Point in time when the Action was finished (in ISO-8601 format). Only set if the Action is finished otherwise null.\n                        example: 2016-01-30T23:55:00+00:00\n                        nullable: true\n                        type: string\n                      id:\n                        description: ID of the Resource\n                        example: 42\n                        type: integer\n                      progress:\n                        description: Progress of Action in percent\n                        example: 100\n                        type: number\n                      resources:\n                        description: Resources the Action relates to\n                        items:\n                          properties:\n                            id:\n                              description: ID of the Resource\n                              example: 42\n                              type: integer\n                            type:\n                              description: Type of resource referenced\n                              example: server\n                              type: string\n                          required:\n                            - id\n                            - type\n                          type: object\n                        type: array\n                      started:\n                        description: Point in time when the Action was started (in ISO-8601 format)\n                        example: 2016-01-30T23:55:00+00:00\n                        type: string\n                      status:\n                        description: Status of the Action\n                        enum:\n                          - success\n                          - running\n                          - error\n                        type: string\n                    required:\n                      - id\n                      - command\n                      - status\n                      - progress\n                      - started\n                      - finished\n                      - resources\n                      - error\n                    title: Action\n                    type: object\n                  root_password:\n                    description: Password that will be set for this Server once the Action succeeds\n                    example: zCWbFhnu950dUTko5f40\n                    type: string\n                type: object\n          description: |\n            The `root_password` key in the reply contains the new root password that will be active if the Action succeeds.\n\n            The `action` key in the reply contains an Action object with this structure:\n      summary: Reset root Password of a Server\n      tags:\n        - Server Actions\n  \"/servers/{id}/actions/shutdown\":\n    post:\n      description: Shuts down a Server gracefully by sending an ACPI shutdown request. The Server operating system must support ACPI and react to the request, otherwise the Server will not shut down.\n      parameters:\n        - description: ID of the Server\n          in: path\n          name: id\n          required: true\n          schema:\n            type: integer\n      responses:\n        \"201\":\n          content:\n            application/json:\n              example:\n                action:\n                  command: shutdown_server\n                  error:\n                    code: action_failed\n                    message: Action failed\n                  finished: null\n                  id: 13\n                  progress: 0\n                  resources:\n                    - id: 42\n                      type: server\n                  started: 2016-01-30T23:50:00+00:00\n                  status: running\n              schema:\n                properties:\n                  action:\n                    properties:\n                      command:\n                        description: Command executed in the Action\n                        example: start_server\n                        type: string\n                      error:\n                        description: Error message for the Action if error occurred, otherwise null\n                        nullable: true\n                        properties:\n                          code:\n                            description: Fixed machine readable code\n                            example: action_failed\n                            type: string\n                          message:\n                            description: Humanized error message\n                            example: Action failed\n                            type: string\n                        required:\n                          - code\n                          - message\n                        type: object\n                      finished:\n                        description: Point in time when the Action was finished (in ISO-8601 format). Only set if the Action is finished otherwise null.\n                        example: 2016-01-30T23:55:00+00:00\n                        nullable: true\n                        type: string\n                      id:\n                        description: ID of the Resource\n                        example: 42\n                        type: integer\n                      progress:\n                        description: Progress of Action in percent\n                        example: 100\n                        type: number\n                      resources:\n                        description: Resources the Action relates to\n                        items:\n                          properties:\n                            id:\n                              description: ID of the Resource\n                              example: 42\n                              type: integer\n                            type:\n                              description: Type of resource referenced\n                              example: server\n                              type: string\n                          required:\n                            - id\n                            - type\n                          type: object\n                        type: array\n                      started:\n                        description: Point in time when the Action was started (in ISO-8601 format)\n                        example: 2016-01-30T23:55:00+00:00\n                        type: string\n                      status:\n                        description: Status of the Action\n                        enum:\n                          - success\n                          - running\n                          - error\n                        type: string\n                    required:\n                      - id\n                      - command\n                      - status\n                      - progress\n                      - started\n                      - finished\n                      - resources\n                      - error\n                    title: Action\n                    type: object\n                required:\n                  - action\n                title: ActionResponse\n                type: object\n          description: The `action` key in the reply contains an Action object with this structure\n      summary: Shutdown a Server\n      tags:\n        - Server Actions\n  \"/servers/{id}/actions/{action_id}\":\n    get:\n      description: Returns a specific Action object for a Server.\n      parameters:\n        - description: ID of the Server\n          in: path\n          name: id\n          required: true\n          schema:\n            type: integer\n        - description: ID of the Action\n          in: path\n          name: action_id\n          required: true\n          schema:\n            type: integer\n      responses:\n        \"200\":\n          content:\n            application/json:\n              example:\n                action:\n                  command: start_server\n                  error:\n                    code: action_failed\n                    message: Action failed\n                  finished: 2016-01-30T23:56:00+00:00\n                  id: 13\n                  progress: 100\n                  resources:\n                    - id: 42\n                      type: server\n                  started: 2016-01-30T23:55:00+00:00\n                  status: success\n              schema:\n                properties:\n                  action:\n                    properties:\n                      command:\n                        description: Command executed in the Action\n                        example: start_server\n                        type: string\n                      error:\n                        description: Error message for the Action if error occurred, otherwise null\n                        nullable: true\n                        properties:\n                          code:\n                            description: Fixed machine readable code\n                            example: action_failed\n                            type: string\n                          message:\n                            description: Humanized error message\n                            example: Action failed\n                            type: string\n                        required:\n                          - code\n                          - message\n                        type: object\n                      finished:\n                        description: Point in time when the Action was finished (in ISO-8601 format). Only set if the Action is finished otherwise null.\n                        example: 2016-01-30T23:55:00+00:00\n                        nullable: true\n                        type: string\n                      id:\n                        description: ID of the Resource\n                        example: 42\n                        type: integer\n                      progress:\n                        description: Progress of Action in percent\n                        example: 100\n                        type: number\n                      resources:\n                        description: Resources the Action relates to\n                        items:\n                          properties:\n                            id:\n                              description: ID of the Resource\n                              example: 42\n                              type: integer\n                            type:\n                              description: Type of resource referenced\n                              example: server\n                              type: string\n                          required:\n                            - id\n                            - type\n                          type: object\n                        type: array\n                      started:\n                        description: Point in time when the Action was started (in ISO-8601 format)\n                        example: 2016-01-30T23:55:00+00:00\n                        type: string\n                      status:\n                        description: Status of the Action\n                        enum:\n                          - success\n                          - running\n                          - error\n                        type: string\n                    required:\n                      - id\n                      - command\n                      - status\n                      - progress\n                      - started\n                      - finished\n                      - resources\n                      - error\n                    title: Action\n                    type: object\n                required:\n                  - action\n                title: ActionResponse\n                type: object\n          description: The `action` key in the reply has this structure\n      summary: Get an Action for a Server\n      tags:\n        - Server Actions\n  \"/servers/{id}/metrics\":\n    get:\n      description: |\n        Get Metrics for specified Server.\n\n        You must specify the type of metric to get: cpu, disk or network. You can also specify more than one type by comma separation, e.g. cpu,disk.\n\n        Depending on the type you will get different time series data\n\n        | Type    | Timeseries              | Unit      | Description                                          |\n        |---------|-------------------------|-----------|------------------------------------------------------|\n        | cpu     | cpu                     | percent   | Percent CPU usage                                    |\n        | disk    | disk.0.iops.read        | iop/s     | Number of read IO operations per second              |\n        |         | disk.0.iops.write       | iop/s     | Number of write IO operations per second             |\n        |         | disk.0.bandwidth.read   | bytes/s   | Bytes read per second                                |\n        |         | disk.0.bandwidth.write  | bytes/s   | Bytes written per second                             |\n        | network | network.0.pps.in        | packets/s | Public Network interface packets per second received |\n        |         | network.0.pps.out       | packets/s | Public Network interface packets per second sent     |\n        |         | network.0.bandwidth.in  | bytes/s   | Public Network interface bytes/s received            |\n        |         | network.0.bandwidth.out | bytes/s   | Public Network interface bytes/s sent                |\n\n        Metrics are available for the last 30 days only.\n\n        If you do not provide the step argument we will automatically adjust it so that a maximum of 200 samples are returned.\n\n        We limit the number of samples returned to a maximum of 500 and will adjust the step parameter accordingly.\n      parameters:\n        - description: ID of the Server\n          in: path\n          name: id\n          required: true\n          schema:\n            type: integer\n        - description: Type of metrics to get\n          in: query\n          name: type\n          required: true\n          schema:\n            enum:\n              - cpu\n              - disk\n              - network\n            type: string\n        - description: Start of period to get Metrics for (in ISO-8601 format)\n          in: query\n          name: start\n          required: true\n          schema:\n            type: string\n        - description: End of period to get Metrics for (in ISO-8601 format)\n          in: query\n          name: end\n          required: true\n          schema:\n            type: string\n        - description: Resolution of results in seconds\n          in: query\n          name: step\n          required: false\n          schema:\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                properties:\n                  metrics:\n                    properties:\n                      end:\n                        description: End of period of metrics reported (in ISO-8601 format)\n                        example: 2017-01-01T23:00:00+00:00\n                        type: string\n                      start:\n                        description: Start of period of metrics reported (in ISO-8601 format)\n                        example: 2017-01-01T00:00:00+00:00\n                        type: string\n                      step:\n                        description: Resolution of results in seconds.\n                        example: 60\n                        type: number\n                      time_series:\n                        additionalProperties:\n                          properties:\n                            values:\n                              description: Metrics Timestamps with values\n                              items:\n                                items:\n                                  oneOf:\n                                    - type: number\n                                    - type: string\n                                type: array\n                              type: array\n                          required:\n                            - values\n                          type: object\n                        description: Hash with timeseries information, containing the name of timeseries as key\n                        example:\n                          name_of_timeseries:\n                            values:\n                              - - 1435781470.622\n                                - \"42\"\n                              - - 1435781471.622\n                                - \"43\"\n                        type: object\n                    required:\n                      - start\n                      - end\n                      - step\n                      - time_series\n                    type: object\n                required:\n                  - metrics\n                type: object\n          description: The `metrics` key in the reply contains a metrics object with this structure\n      summary: Get Metrics for a Server\n      tags:\n        - Servers\n  /ssh_keys:\n    get:\n      description: Returns all SSH key objects.\n      parameters:\n        - description: Can be used multiple times.\n          in: query\n          name: sort\n          required: false\n          schema:\n            enum:\n              - id\n              - id:asc\n              - id:desc\n              - name\n              - name:asc\n              - name:desc\n            type: string\n        - description: Can be used to filter resources by their name. The response will only contain the resources matching the specified name\n          in: query\n          name: name\n          required: false\n          schema:\n            type: string\n        - description: Can be used to filter SSH keys by their fingerprint. The response will only contain the SSH key matching the specified fingerprint.\n          in: query\n          name: fingerprint\n          required: false\n          schema:\n            type: string\n        - description: Can be used to filter resources by labels. The response will only contain resources matching the label selector.\n          in: query\n          name: label_selector\n          required: false\n          schema:\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                properties:\n                  meta:\n                    properties:\n                      pagination:\n                        properties:\n                          last_page:\n                            description: ID of the last page available. Can be null if the current page is the last one.\n                            example: 4\n                            nullable: true\n                            type: number\n                          next_page:\n                            description: ID of the next page. Can be null if the current page is the last one.\n                            example: 4\n                            nullable: true\n                            type: number\n                          page:\n                            description: Current page number\n                            example: 3\n                            type: number\n                          per_page:\n                            description: Maximum number of items shown per page in the response\n                            example: 25\n                            type: number\n                          previous_page:\n                            description: ID of the previous page. Can be null if the current page is the first one.\n                            example: 2\n                            nullable: true\n                            type: number\n                          total_entries:\n                            description: The total number of entries that exist in the database for this query. Nullable if unknown.\n                            example: 100\n                            nullable: true\n                            type: number\n                        required:\n                          - page\n                          - per_page\n                          - previous_page\n                          - next_page\n                          - last_page\n                          - total_entries\n                        type: object\n                    required:\n                      - pagination\n                    type: object\n                  ssh_keys:\n                    items:\n                      properties:\n                        created:\n                          description: Point in time when the Resource was created (in ISO-8601 format)\n                          example: 2016-01-30T23:55:00+00:00\n                          type: string\n                        fingerprint:\n                          description: Fingerprint of public key\n                          example: b7:2f:30:a0:2f:6c:58:6c:21:04:58:61:ba:06:3b:2f\n                          type: string\n                        id:\n                          description: ID of the Resource\n                          example: 42\n                          type: integer\n                        labels:\n                          additionalProperties:\n                            type: string\n                          description: User-defined labels (key-value pairs)\n                          type: object\n                        name:\n                          description: Name of the Resource. Must be unique per Project.\n                          example: my-resource\n                          type: string\n                        public_key:\n                          description: Public key\n                          example: ssh-rsa AAAjjk76kgf...Xt\n                          type: string\n                      required:\n                        - id\n                        - name\n                        - fingerprint\n                        - public_key\n                        - labels\n                        - created\n                      type: object\n                    type: array\n                required:\n                  - ssh_keys\n                type: object\n          description: The `ssh_keys` key in the reply contains an array of SSH key objects with this structure\n      summary: Get all SSH keys\n      tags:\n        - SSH Keys\n    post:\n      description: Creates a new SSH key with the given `name` and `public_key`. Once an SSH key is created, it can be used in other calls such as creating Servers.\n      requestBody:\n        content:\n          application/json:\n            schema:\n              properties:\n                labels:\n                  description: User-defined labels (key-value pairs)\n                  type: object\n                name:\n                  description: Name of the SSH key\n                  example: My ssh key\n                  type: string\n                public_key:\n                  description: Public key\n                  example: ssh-rsa AAAjjk76kgf...Xt\n                  type: string\n              required:\n                - name\n                - public_key\n              type: object\n      responses:\n        \"201\":\n          content:\n            application/json:\n              schema:\n                properties:\n                  ssh_key:\n                    properties:\n                      created:\n                        description: Point in time when the Resource was created (in ISO-8601 format)\n                        example: 2016-01-30T23:55:00+00:00\n                        type: string\n                      fingerprint:\n                        description: Fingerprint of public key\n                        example: b7:2f:30:a0:2f:6c:58:6c:21:04:58:61:ba:06:3b:2f\n                        type: string\n                      id:\n                        description: ID of the Resource\n                        example: 42\n                        type: integer\n                      labels:\n                        additionalProperties:\n                          type: string\n                        description: User-defined labels (key-value pairs)\n                        type: object\n                      name:\n                        description: Name of the Resource. Must be unique per Project.\n                        example: my-resource\n                        type: string\n                      public_key:\n                        description: Public key\n                        example: ssh-rsa AAAjjk76kgf...Xt\n                        type: string\n                    required:\n                      - id\n                      - name\n                      - fingerprint\n                      - public_key\n                      - labels\n                      - created\n                    type: object\n                required:\n                  - ssh_key\n                type: object\n          description: The `ssh_key` key in the reply contains the object that was just created\n      summary: Create an SSH key\n      tags:\n        - SSH Keys\n  \"/ssh_keys/{id}\":\n    delete:\n      description: Deletes an SSH key. It cannot be used anymore.\n      parameters:\n        - description: ID of the SSH key\n          in: path\n          name: id\n          required: true\n          schema:\n            type: string\n      responses:\n        \"204\":\n          description: SSH key deleted\n      summary: Delete an SSH key\n      tags:\n        - SSH Keys\n    get:\n      description: Returns a specific SSH key object.\n      parameters:\n        - description: ID of the SSH key\n          in: path\n          name: id\n          required: true\n          schema:\n            type: integer\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                properties:\n                  ssh_key:\n                    properties:\n                      created:\n                        description: Point in time when the Resource was created (in ISO-8601 format)\n                        example: 2016-01-30T23:55:00+00:00\n                        type: string\n                      fingerprint:\n                        description: Fingerprint of public key\n                        example: b7:2f:30:a0:2f:6c:58:6c:21:04:58:61:ba:06:3b:2f\n                        type: string\n                      id:\n                        description: ID of the Resource\n                        example: 42\n                        type: integer\n                      labels:\n                        additionalProperties:\n                          type: string\n                        description: User-defined labels (key-value pairs)\n                        type: object\n                      name:\n                        description: Name of the Resource. Must be unique per Project.\n                        example: my-resource\n                        type: string\n                      public_key:\n                        description: Public key\n                        example: ssh-rsa AAAjjk76kgf...Xt\n                        type: string\n                    required:\n                      - id\n                      - name\n                      - fingerprint\n                      - public_key\n                      - labels\n                      - created\n                    type: object\n                required:\n                  - ssh_key\n                type: object\n          description: The `ssh_key` key in the reply contains an SSH key object with this structure\n      summary: Get a SSH key\n      tags:\n        - SSH Keys\n    put:\n      description: |\n        Updates an SSH key. You can update an SSH key name and an SSH key labels.\n\n        Please note that when updating labels, the SSH key current set of labels will be replaced with the labels provided in the request body. So, for example, if you want to add a new label, you have to provide all existing labels plus the new label in the request body.\n      parameters:\n        - description: ID of the SSH key\n          in: path\n          name: id\n          required: true\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              properties:\n                labels:\n                  description: User-defined labels (key-value pairs)\n                  example:\n                    labelkey: value\n                  type: object\n                name:\n                  description: New name Name to set\n                  example: My ssh key\n                  type: string\n              type: object\n      responses:\n        \"200\":\n          content:\n            application/json:\n              example:\n                ssh_key:\n                  created: 2016-01-30T23:50:00+00:00\n                  fingerprint: b7:2f:30:a0:2f:6c:58:6c:21:04:58:61:ba:06:3b:2f\n                  id: 2323\n                  labels:\n                    labelkey: value\n                  name: My ssh key\n                  public_key: ssh-rsa AAAjjk76kgf...Xt\n              schema:\n                properties:\n                  ssh_key:\n                    properties:\n                      created:\n                        description: Point in time when the Resource was created (in ISO-8601 format)\n                        example: 2016-01-30T23:55:00+00:00\n                        type: string\n                      fingerprint:\n                        description: Fingerprint of public key\n                        example: b7:2f:30:a0:2f:6c:58:6c:21:04:58:61:ba:06:3b:2f\n                        type: string\n                      id:\n                        description: ID of the Resource\n                        example: 42\n                        type: integer\n                      labels:\n                        additionalProperties:\n                          type: string\n                        description: User-defined labels (key-value pairs)\n                        type: object\n                      name:\n                        description: Name of the Resource. Must be unique per Project.\n                        example: my-resource\n                        type: string\n                      public_key:\n                        description: Public key\n                        example: ssh-rsa AAAjjk76kgf...Xt\n                        type: string\n                    required:\n                      - id\n                      - name\n                      - fingerprint\n                      - public_key\n                      - labels\n                      - created\n                    type: object\n                required:\n                  - ssh_key\n                type: object\n          description: The `ssh_key` key in the reply contains the modified SSH key object with the new description\n      summary: Update an SSH key\n      tags:\n        - SSH Keys\n  /volumes:\n    get:\n      description: Gets all existing Volumes that you have available.\n      parameters:\n        - description: Can be used multiple times. The response will only contain Volumes matching the status.\n          in: query\n          name: status\n          required: false\n          schema:\n            enum:\n              - available\n              - creating\n            type: string\n        - description: Can be used multiple times.\n          in: query\n          name: sort\n          required: false\n          schema:\n            enum:\n              - id\n              - id:asc\n              - id:desc\n              - name\n              - name:asc\n              - name:desc\n              - created\n              - created:asc\n              - created:desc\n            type: string\n        - description: Can be used to filter resources by their name. The response will only contain the resources matching the specified name\n          in: query\n          name: name\n          required: false\n          schema:\n            type: string\n        - description: Can be used to filter resources by labels. The response will only contain resources matching the label selector.\n          in: query\n          name: label_selector\n          required: false\n          schema:\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                properties:\n                  meta:\n                    properties:\n                      pagination:\n                        properties:\n                          last_page:\n                            description: ID of the last page available. Can be null if the current page is the last one.\n                            example: 4\n                            nullable: true\n                            type: number\n                          next_page:\n                            description: ID of the next page. Can be null if the current page is the last one.\n                            example: 4\n                            nullable: true\n                            type: number\n                          page:\n                            description: Current page number\n                            example: 3\n                            type: number\n                          per_page:\n                            description: Maximum number of items shown per page in the response\n                            example: 25\n                            type: number\n                          previous_page:\n                            description: ID of the previous page. Can be null if the current page is the first one.\n                            example: 2\n                            nullable: true\n                            type: number\n                          total_entries:\n                            description: The total number of entries that exist in the database for this query. Nullable if unknown.\n                            example: 100\n                            nullable: true\n                            type: number\n                        required:\n                          - page\n                          - per_page\n                          - previous_page\n                          - next_page\n                          - last_page\n                          - total_entries\n                        type: object\n                    required:\n                      - pagination\n                    type: object\n                  volumes:\n                    items:\n                      properties:\n                        created:\n                          description: Point in time when the Resource was created (in ISO-8601 format)\n                          example: 2016-01-30T23:55:00+00:00\n                          type: string\n                        format:\n                          description: Filesystem of the Volume if formatted on creation, null if not formatted on creation\n                          example: xfs\n                          nullable: true\n                          type: string\n                        id:\n                          description: ID of the Resource\n                          example: 42\n                          type: integer\n                        labels:\n                          additionalProperties:\n                            type: string\n                          description: User-defined labels (key-value pairs)\n                          type: object\n                        linux_device:\n                          description: Device path on the file system for the Volume\n                          example: /dev/disk/by-id/scsi-0HC_Volume_4711\n                          type: string\n                        location:\n                          description: Location of the Volume. Volume can only be attached to Servers in the same Location.\n                          properties:\n                            city:\n                              description: City the Location is closest to\n                              example: Falkenstein\n                              type: string\n                            country:\n                              description: ISO 3166-1 alpha-2 code of the country the Location resides in\n                              example: DE\n                              type: string\n                            description:\n                              description: Description of the Location\n                              example: Falkenstein DC Park 1\n                              type: string\n                            id:\n                              description: ID of the Location\n                              example: 1\n                              type: number\n                            latitude:\n                              description: Latitude of the city closest to the Location\n                              example: 50.47612\n                              type: number\n                            longitude:\n                              description: Longitude of the city closest to the Location\n                              example: 12.370071\n                              type: number\n                            name:\n                              description: Unique identifier of the Location\n                              example: fsn1\n                              type: string\n                            network_zone:\n                              description: Name of network zone this Location resides in\n                              example: eu-central\n                              type: string\n                          required:\n                            - id\n                            - name\n                            - description\n                            - country\n                            - city\n                            - latitude\n                            - longitude\n                            - network_zone\n                          type: object\n                        name:\n                          description: Name of the Resource. Must be unique per Project.\n                          example: my-resource\n                          type: string\n                        protection:\n                          description: Protection configuration for the Resource\n                          properties:\n                            delete:\n                              description: If true, prevents the Resource from being deleted\n                              example: false\n                              type: boolean\n                          required:\n                            - delete\n                          type: object\n                        server:\n                          description: ID of the Server the Volume is attached to, null if it is not attached at all\n                          example: 12\n                          nullable: true\n                          type: integer\n                        size:\n                          description: Size in GB of the Volume\n                          example: 42\n                          type: number\n                        status:\n                          description: Current status of the Volume\n                          enum:\n                            - creating\n                            - available\n                          example: available\n                          type: string\n                      required:\n                        - id\n                        - created\n                        - name\n                        - server\n                        - location\n                        - size\n                        - linux_device\n                        - protection\n                        - labels\n                        - status\n                        - format\n                      type: object\n                    type: array\n                required:\n                  - volumes\n                type: object\n          description: The `volumes` key contains a list of volumes\n      summary: Get all Volumes\n      tags:\n        - Volumes\n    post:\n      description: |\n        Creates a new Volume attached to a Server. If you want to create a Volume that is not attached to a Server, you need to provide the `location` key instead of `server`. This can be either the ID or the name of the Location this Volume will be created in. Note that a Volume can be attached to a Server only in the same Location as the Volume itself.\n\n        Specifying the Server during Volume creation will automatically attach the Volume to that Server after it has been initialized. In that case, the `next_actions` key in the response is an array which contains a single `attach_volume` action.\n\n        The minimum Volume size is 10GB and the maximum size is 10TB (10240GB).\n\n        A volume’s name can consist of alphanumeric characters, dashes, underscores, and dots, but has to start and end with an alphanumeric character. The total length is limited to 64 characters. Volume names must be unique per Project.\n\n        #### Call specific error codes\n\n        | Code                                | Description                                         |\n        |-------------------------------------|-----------------------------------------------------|\n        | `no_space_left_in_location`         | There is no volume space left in the given location |\n      requestBody:\n        content:\n          application/json:\n            example:\n              automount: false\n              format: xfs\n              labels:\n                labelkey: value\n              location: nbg1\n              name: test-database\n              size: 42\n            schema:\n              properties:\n                automount:\n                  description: Auto-mount Volume after attach. `server` must be provided.\n                  example: false\n                  type: boolean\n                format:\n                  description: \"Format Volume after creation. One of: `xfs`, `ext4`\"\n                  example: xfs\n                  type: string\n                labels:\n                  description: User-defined labels (key-value pairs)\n                  example:\n                    labelkey: value\n                  type: object\n                location:\n                  description: Location to create the Volume in (can be omitted if Server is specified)\n                  example: nbg1\n                  type: string\n                name:\n                  description: Name of the volume\n                  example: databases-storage\n                  type: string\n                server:\n                  description: Server to which to attach the Volume once it's created (Volume will be created in the same Location as the server)\n                  type: integer\n                size:\n                  description: Size of the Volume in GB\n                  example: 42\n                  type: integer\n              required:\n                - size\n                - name\n              title: CreateVolumeRequest\n              type: object\n      responses:\n        \"201\":\n          content:\n            application/json:\n              example:\n                action:\n                  command: create_volume\n                  error:\n                    code: action_failed\n                    message: Action failed\n                  finished: null\n                  id: 13\n                  progress: 0\n                  resources:\n                    - id: 42\n                      type: server\n                    - id: 554\n                      type: volume\n                  started: 2016-01-30T23:50:00+00:00\n                  status: running\n                next_actions:\n                  - command: attach_volume\n                    error:\n                      code: action_failed\n                      message: Action failed\n                    finished: null\n                    id: 13\n                    progress: 0\n                    resources:\n                      - id: 42\n                        type: server\n                      - id: 554\n                        type: volume\n                    started: 2016-01-30T23:50:00+00:00\n                    status: running\n                volume:\n                  created: 2016-01-30T23:50:11+00:00\n                  format: xfs\n                  id: 4711\n                  labels:\n                    env: dev\n                  linux_device: /dev/disk/by-id/scsi-0HC_Volume_4711\n                  location:\n                    city: Falkenstein\n                    country: DE\n                    description: Falkenstein DC Park 1\n                    id: 1\n                    latitude: 50.47612\n                    longitude: 12.370071\n                    name: fsn1\n                    network_zone: eu-central\n                  name: database-storage\n                  protection:\n                    delete: false\n                  server: 12\n                  size: 42\n                  status: available\n              schema:\n                properties:\n                  action:\n                    properties:\n                      command:\n                        description: Command executed in the Action\n                        example: start_server\n                        type: string\n                      error:\n                        description: Error message for the Action if error occurred, otherwise null\n                        nullable: true\n                        properties:\n                          code:\n                            description: Fixed machine readable code\n                            example: action_failed\n                            type: string\n                          message:\n                            description: Humanized error message\n                            example: Action failed\n                            type: string\n                        required:\n                          - code\n                          - message\n                        type: object\n                      finished:\n                        description: Point in time when the Action was finished (in ISO-8601 format). Only set if the Action is finished otherwise null.\n                        example: 2016-01-30T23:55:00+00:00\n                        nullable: true\n                        type: string\n                      id:\n                        description: ID of the Resource\n                        example: 42\n                        type: integer\n                      progress:\n                        description: Progress of Action in percent\n                        example: 100\n                        type: number\n                      resources:\n                        description: Resources the Action relates to\n                        items:\n                          properties:\n                            id:\n                              description: ID of the Resource\n                              example: 42\n                              type: integer\n                            type:\n                              description: Type of resource referenced\n                              example: server\n                              type: string\n                          required:\n                            - id\n                            - type\n                          type: object\n                        type: array\n                      started:\n                        description: Point in time when the Action was started (in ISO-8601 format)\n                        example: 2016-01-30T23:55:00+00:00\n                        type: string\n                      status:\n                        description: Status of the Action\n                        enum:\n                          - success\n                          - running\n                          - error\n                        type: string\n                    required:\n                      - id\n                      - command\n                      - status\n                      - progress\n                      - started\n                      - finished\n                      - resources\n                      - error\n                    title: Action\n                    type: object\n                  next_actions:\n                    items:\n                      properties:\n                        command:\n                          description: Command executed in the Action\n                          example: start_server\n                          type: string\n                        error:\n                          description: Error message for the Action if error occurred, otherwise null\n                          nullable: true\n                          properties:\n                            code:\n                              description: Fixed machine readable code\n                              example: action_failed\n                              type: string\n                            message:\n                              description: Humanized error message\n                              example: Action failed\n                              type: string\n                          required:\n                            - code\n                            - message\n                          type: object\n                        finished:\n                          description: Point in time when the Action was finished (in ISO-8601 format). Only set if the Action is finished otherwise null.\n                          example: 2016-01-30T23:55:00+00:00\n                          nullable: true\n                          type: string\n                        id:\n                          description: ID of the Resource\n                          example: 42\n                          type: integer\n                        progress:\n                          description: Progress of Action in percent\n                          example: 100\n                          type: number\n                        resources:\n                          description: Resources the Action relates to\n                          items:\n                            properties:\n                              id:\n                                description: ID of the Resource\n                                example: 42\n                                type: integer\n                              type:\n                                description: Type of resource referenced\n                                example: server\n                                type: string\n                            required:\n                              - id\n                              - type\n                            type: object\n                          type: array\n                        started:\n                          description: Point in time when the Action was started (in ISO-8601 format)\n                          example: 2016-01-30T23:55:00+00:00\n                          type: string\n                        status:\n                          description: Status of the Action\n                          enum:\n                            - success\n                            - running\n                            - error\n                          type: string\n                      required:\n                        - id\n                        - command\n                        - status\n                        - progress\n                        - started\n                        - finished\n                        - resources\n                        - error\n                      title: Action\n                      type: object\n                    type: array\n                  volume:\n                    properties:\n                      created:\n                        description: Point in time when the Resource was created (in ISO-8601 format)\n                        example: 2016-01-30T23:55:00+00:00\n                        type: string\n                      format:\n                        description: Filesystem of the Volume if formatted on creation, null if not formatted on creation\n                        example: xfs\n                        nullable: true\n                        type: string\n                      id:\n                        description: ID of the Resource\n                        example: 42\n                        type: integer\n                      labels:\n                        additionalProperties:\n                          type: string\n                        description: User-defined labels (key-value pairs)\n                        type: object\n                      linux_device:\n                        description: Device path on the file system for the Volume\n                        example: /dev/disk/by-id/scsi-0HC_Volume_4711\n                        type: string\n                      location:\n                        description: Location of the Volume. Volume can only be attached to Servers in the same Location.\n                        properties:\n                          city:\n                            description: City the Location is closest to\n                            example: Falkenstein\n                            type: string\n                          country:\n                            description: ISO 3166-1 alpha-2 code of the country the Location resides in\n                            example: DE\n                            type: string\n                          description:\n                            description: Description of the Location\n                            example: Falkenstein DC Park 1\n                            type: string\n                          id:\n                            description: ID of the Location\n                            example: 1\n                            type: number\n                          latitude:\n                            description: Latitude of the city closest to the Location\n                            example: 50.47612\n                            type: number\n                          longitude:\n                            description: Longitude of the city closest to the Location\n                            example: 12.370071\n                            type: number\n                          name:\n                            description: Unique identifier of the Location\n                            example: fsn1\n                            type: string\n                          network_zone:\n                            description: Name of network zone this Location resides in\n                            example: eu-central\n                            type: string\n                        required:\n                          - id\n                          - name\n                          - description\n                          - country\n                          - city\n                          - latitude\n                          - longitude\n                          - network_zone\n                        type: object\n                      name:\n                        description: Name of the Resource. Must be unique per Project.\n                        example: my-resource\n                        type: string\n                      protection:\n                        description: Protection configuration for the Resource\n                        properties:\n                          delete:\n                            description: If true, prevents the Resource from being deleted\n                            example: false\n                            type: boolean\n                        required:\n                          - delete\n                        type: object\n                      server:\n                        description: ID of the Server the Volume is attached to, null if it is not attached at all\n                        example: 12\n                        nullable: true\n                        type: integer\n                      size:\n                        description: Size in GB of the Volume\n                        example: 42\n                        type: number\n                      status:\n                        description: Current status of the Volume\n                        enum:\n                          - creating\n                          - available\n                        example: available\n                        type: string\n                    required:\n                      - id\n                      - created\n                      - name\n                      - server\n                      - location\n                      - size\n                      - linux_device\n                      - protection\n                      - labels\n                      - status\n                      - format\n                    type: object\n                required:\n                  - volume\n                  - action\n                  - next_actions\n                type: object\n          description: |\n            The `volume` key contains the Volume that was just created\n\n            The `action` key contains the Action tracking Volume creation\n      summary: Create a Volume\n      tags:\n        - Volumes\n  \"/volumes/{id}\":\n    delete:\n      description: Deletes a volume. All Volume data is irreversibly destroyed. The Volume must not be attached to a Server and it must not have delete protection enabled.\n      parameters:\n        - description: ID of the Volume\n          in: path\n          name: id\n          required: true\n          schema:\n            type: string\n      responses:\n        \"204\":\n          description: Volume deleted\n      summary: Delete a Volume\n      tags:\n        - Volumes\n    get:\n      description: Gets a specific Volume object.\n      parameters:\n        - description: ID of the Volume\n          in: path\n          name: id\n          required: true\n          schema:\n            type: integer\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                properties:\n                  volume:\n                    properties:\n                      created:\n                        description: Point in time when the Resource was created (in ISO-8601 format)\n                        example: 2016-01-30T23:55:00+00:00\n                        type: string\n                      format:\n                        description: Filesystem of the Volume if formatted on creation, null if not formatted on creation\n                        example: xfs\n                        nullable: true\n                        type: string\n                      id:\n                        description: ID of the Resource\n                        example: 42\n                        type: integer\n                      labels:\n                        additionalProperties:\n                          type: string\n                        description: User-defined labels (key-value pairs)\n                        type: object\n                      linux_device:\n                        description: Device path on the file system for the Volume\n                        example: /dev/disk/by-id/scsi-0HC_Volume_4711\n                        type: string\n                      location:\n                        description: Location of the Volume. Volume can only be attached to Servers in the same Location.\n                        properties:\n                          city:\n                            description: City the Location is closest to\n                            example: Falkenstein\n                            type: string\n                          country:\n                            description: ISO 3166-1 alpha-2 code of the country the Location resides in\n                            example: DE\n                            type: string\n                          description:\n                            description: Description of the Location\n                            example: Falkenstein DC Park 1\n                            type: string\n                          id:\n                            description: ID of the Location\n                            example: 1\n                            type: number\n                          latitude:\n                            description: Latitude of the city closest to the Location\n                            example: 50.47612\n                            type: number\n                          longitude:\n                            description: Longitude of the city closest to the Location\n                            example: 12.370071\n                            type: number\n                          name:\n                            description: Unique identifier of the Location\n                            example: fsn1\n                            type: string\n                          network_zone:\n                            description: Name of network zone this Location resides in\n                            example: eu-central\n                            type: string\n                        required:\n                          - id\n                          - name\n                          - description\n                          - country\n                          - city\n                          - latitude\n                          - longitude\n                          - network_zone\n                        type: object\n                      name:\n                        description: Name of the Resource. Must be unique per Project.\n                        example: my-resource\n                        type: string\n                      protection:\n                        description: Protection configuration for the Resource\n                        properties:\n                          delete:\n                            description: If true, prevents the Resource from being deleted\n                            example: false\n                            type: boolean\n                        required:\n                          - delete\n                        type: object\n                      server:\n                        description: ID of the Server the Volume is attached to, null if it is not attached at all\n                        example: 12\n                        nullable: true\n                        type: integer\n                      size:\n                        description: Size in GB of the Volume\n                        example: 42\n                        type: number\n                      status:\n                        description: Current status of the Volume\n                        enum:\n                          - creating\n                          - available\n                        example: available\n                        type: string\n                    required:\n                      - id\n                      - created\n                      - name\n                      - server\n                      - location\n                      - size\n                      - linux_device\n                      - protection\n                      - labels\n                      - status\n                      - format\n                    type: object\n                required:\n                  - volume\n                type: object\n          description: The `volume` key contains the volume\n      summary: Get a Volume\n      tags:\n        - Volumes\n    put:\n      description: |\n        Updates the Volume properties.\n\n        Note that when updating labels, the volume’s current set of labels will be replaced with the labels provided in the request body. So, for example, if you want to add a new label, you have to provide all existing labels plus the new label in the request body.\n      parameters:\n        - description: ID of the Volume to update\n          in: path\n          name: id\n          required: true\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              properties:\n                labels:\n                  description: User-defined labels (key-value pairs)\n                  properties:\n                    labelkey:\n                      example: value\n                      type: string\n                  type: object\n                name:\n                  description: New Volume name\n                  example: database-storage\n                  type: string\n              required:\n                - name\n              title: UpdateVolumeRequest\n              type: object\n      responses:\n        \"200\":\n          content:\n            application/json:\n              example:\n                volume:\n                  created: 2016-01-30T23:50:11+00:00\n                  format: xfs\n                  id: 4711\n                  labels:\n                    labelkey: value\n                  linux_device: /dev/disk/by-id/scsi-0HC_Volume_4711\n                  location:\n                    city: Falkenstein\n                    country: DE\n                    description: Falkenstein DC Park 1\n                    id: 1\n                    latitude: 50.47612\n                    longitude: 12.370071\n                    name: fsn1\n                    network_zone: eu-central\n                  name: database-storage\n                  protection:\n                    delete: false\n                  server: 12\n                  size: 42\n                  status: available\n              schema:\n                properties:\n                  volume:\n                    properties:\n                      created:\n                        description: Point in time when the Resource was created (in ISO-8601 format)\n                        example: 2016-01-30T23:55:00+00:00\n                        type: string\n                      format:\n                        description: Filesystem of the Volume if formatted on creation, null if not formatted on creation\n                        example: xfs\n                        nullable: true\n                        type: string\n                      id:\n                        description: ID of the Resource\n                        example: 42\n                        type: integer\n                      labels:\n                        additionalProperties:\n                          type: string\n                        description: User-defined labels (key-value pairs)\n                        type: object\n                      linux_device:\n                        description: Device path on the file system for the Volume\n                        example: /dev/disk/by-id/scsi-0HC_Volume_4711\n                        type: string\n                      location:\n                        description: Location of the Volume. Volume can only be attached to Servers in the same Location.\n                        properties:\n                          city:\n                            description: City the Location is closest to\n                            example: Falkenstein\n                            type: string\n                          country:\n                            description: ISO 3166-1 alpha-2 code of the country the Location resides in\n                            example: DE\n                            type: string\n                          description:\n                            description: Description of the Location\n                            example: Falkenstein DC Park 1\n                            type: string\n                          id:\n                            description: ID of the Location\n                            example: 1\n                            type: number\n                          latitude:\n                            description: Latitude of the city closest to the Location\n                            example: 50.47612\n                            type: number\n                          longitude:\n                            description: Longitude of the city closest to the Location\n                            example: 12.370071\n                            type: number\n                          name:\n                            description: Unique identifier of the Location\n                            example: fsn1\n                            type: string\n                          network_zone:\n                            description: Name of network zone this Location resides in\n                            example: eu-central\n                            type: string\n                        required:\n                          - id\n                          - name\n                          - description\n                          - country\n                          - city\n                          - latitude\n                          - longitude\n                          - network_zone\n                        type: object\n                      name:\n                        description: Name of the Resource. Must be unique per Project.\n                        example: my-resource\n                        type: string\n                      protection:\n                        description: Protection configuration for the Resource\n                        properties:\n                          delete:\n                            description: If true, prevents the Resource from being deleted\n                            example: false\n                            type: boolean\n                        required:\n                          - delete\n                        type: object\n                      server:\n                        description: ID of the Server the Volume is attached to, null if it is not attached at all\n                        example: 12\n                        nullable: true\n                        type: integer\n                      size:\n                        description: Size in GB of the Volume\n                        example: 42\n                        type: number\n                      status:\n                        description: Current status of the Volume\n                        enum:\n                          - creating\n                          - available\n                        example: available\n                        type: string\n                    required:\n                      - id\n                      - created\n                      - name\n                      - server\n                      - location\n                      - size\n                      - linux_device\n                      - protection\n                      - labels\n                      - status\n                      - format\n                    type: object\n                required:\n                  - volume\n                type: object\n          description: The `volume` key contains the updated volume\n      summary: Update a Volume\n      tags:\n        - Volumes\n  \"/volumes/{id}/actions\":\n    get:\n      description: Returns all Action objects for a Volume. You can `sort` the results by using the sort URI parameter, and filter them with the `status` parameter.\n      parameters:\n        - description: ID of the Volume\n          in: path\n          name: id\n          required: true\n          schema:\n            type: integer\n        - description: Can be used multiple times.\n          in: query\n          name: sort\n          required: false\n          schema:\n            enum:\n              - id\n              - id:asc\n              - id:desc\n              - command\n              - command:asc\n              - command:desc\n              - status\n              - status:asc\n              - status:desc\n              - progress\n              - progress:asc\n              - progress:desc\n              - started\n              - started:asc\n              - started:desc\n              - finished\n              - finished:asc\n              - finished:desc\n            title: ParameterSort\n            type: string\n        - description: Can be used multiple times, the response will contain only Actions with specified statuses\n          in: query\n          name: status\n          required: false\n          schema:\n            enum:\n              - running\n              - success\n              - error\n            title: ParameterStatus\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              example:\n                actions:\n                  - command: attach_volume\n                    error:\n                      code: action_failed\n                      message: Action failed\n                    finished: 2016-01-30T23:56:00+00:00\n                    id: 13\n                    progress: 100\n                    resources:\n                      - id: 42\n                        type: server\n                      - id: 13\n                        type: volume\n                    started: 2016-01-30T23:55:00+00:00\n                    status: success\n              schema:\n                properties:\n                  actions:\n                    items:\n                      properties:\n                        command:\n                          description: Command executed in the Action\n                          example: start_server\n                          type: string\n                        error:\n                          description: Error message for the Action if error occurred, otherwise null\n                          nullable: true\n                          properties:\n                            code:\n                              description: Fixed machine readable code\n                              example: action_failed\n                              type: string\n                            message:\n                              description: Humanized error message\n                              example: Action failed\n                              type: string\n                          required:\n                            - code\n                            - message\n                          type: object\n                        finished:\n                          description: Point in time when the Action was finished (in ISO-8601 format). Only set if the Action is finished otherwise null.\n                          example: 2016-01-30T23:55:00+00:00\n                          nullable: true\n                          type: string\n                        id:\n                          description: ID of the Resource\n                          example: 42\n                          type: integer\n                        progress:\n                          description: Progress of Action in percent\n                          example: 100\n                          type: number\n                        resources:\n                          description: Resources the Action relates to\n                          items:\n                            properties:\n                              id:\n                                description: ID of the Resource\n                                example: 42\n                                type: integer\n                              type:\n                                description: Type of resource referenced\n                                example: server\n                                type: string\n                            required:\n                              - id\n                              - type\n                            type: object\n                          type: array\n                        started:\n                          description: Point in time when the Action was started (in ISO-8601 format)\n                          example: 2016-01-30T23:55:00+00:00\n                          type: string\n                        status:\n                          description: Status of the Action\n                          enum:\n                            - success\n                            - running\n                            - error\n                          type: string\n                      required:\n                        - id\n                        - command\n                        - status\n                        - progress\n                        - started\n                        - finished\n                        - resources\n                        - error\n                      title: Action\n                      type: object\n                    type: array\n                  meta:\n                    properties:\n                      pagination:\n                        properties:\n                          last_page:\n                            description: ID of the last page available. Can be null if the current page is the last one.\n                            example: 4\n                            nullable: true\n                            type: number\n                          next_page:\n                            description: ID of the next page. Can be null if the current page is the last one.\n                            example: 4\n                            nullable: true\n                            type: number\n                          page:\n                            description: Current page number\n                            example: 3\n                            type: number\n                          per_page:\n                            description: Maximum number of items shown per page in the response\n                            example: 25\n                            type: number\n                          previous_page:\n                            description: ID of the previous page. Can be null if the current page is the first one.\n                            example: 2\n                            nullable: true\n                            type: number\n                          total_entries:\n                            description: The total number of entries that exist in the database for this query. Nullable if unknown.\n                            example: 100\n                            nullable: true\n                            type: number\n                        required:\n                          - page\n                          - per_page\n                          - previous_page\n                          - next_page\n                          - last_page\n                          - total_entries\n                        type: object\n                    required:\n                      - pagination\n                    type: object\n                required:\n                  - actions\n                title: ActionsResponse\n                type: object\n          description: The `actions` key contains a list of Actions\n      summary: Get all Actions for a Volume\n      tags:\n        - Volume Actions\n  \"/volumes/{id}/actions/attach\":\n    post:\n      description: Attaches a Volume to a Server. Works only if the Server is in the same Location as the Volume.\n      parameters:\n        - description: ID of the Volume\n          in: path\n          name: id\n          required: true\n          schema:\n            type: integer\n      requestBody:\n        content:\n          application/json:\n            schema:\n              properties:\n                automount:\n                  description: Auto-mount the Volume after attaching it\n                  example: false\n                  type: boolean\n                server:\n                  description: ID of the Server the Volume will be attached to\n                  example: 43\n                  type: integer\n              required:\n                - server\n              title: AttachVolumeRequest\n              type: object\n      responses:\n        \"201\":\n          content:\n            application/json:\n              example:\n                action:\n                  command: attach_volume\n                  error:\n                    code: action_failed\n                    message: Action failed\n                  finished: null\n                  id: 13\n                  progress: 0\n                  resources:\n                    - id: 43\n                      type: server\n                    - id: 554\n                      type: volume\n                  started: 2016-01-30T23:50:00+00:00\n                  status: running\n              schema:\n                properties:\n                  action:\n                    properties:\n                      command:\n                        description: Command executed in the Action\n                        example: start_server\n                        type: string\n                      error:\n                        description: Error message for the Action if error occurred, otherwise null\n                        nullable: true\n                        properties:\n                          code:\n                            description: Fixed machine readable code\n                            example: action_failed\n                            type: string\n                          message:\n                            description: Humanized error message\n                            example: Action failed\n                            type: string\n                        required:\n                          - code\n                          - message\n                        type: object\n                      finished:\n                        description: Point in time when the Action was finished (in ISO-8601 format). Only set if the Action is finished otherwise null.\n                        example: 2016-01-30T23:55:00+00:00\n                        nullable: true\n                        type: string\n                      id:\n                        description: ID of the Resource\n                        example: 42\n                        type: integer\n                      progress:\n                        description: Progress of Action in percent\n                        example: 100\n                        type: number\n                      resources:\n                        description: Resources the Action relates to\n                        items:\n                          properties:\n                            id:\n                              description: ID of the Resource\n                              example: 42\n                              type: integer\n                            type:\n                              description: Type of resource referenced\n                              example: server\n                              type: string\n                          required:\n                            - id\n                            - type\n                          type: object\n                        type: array\n                      started:\n                        description: Point in time when the Action was started (in ISO-8601 format)\n                        example: 2016-01-30T23:55:00+00:00\n                        type: string\n                      status:\n                        description: Status of the Action\n                        enum:\n                          - success\n                          - running\n                          - error\n                        type: string\n                    required:\n                      - id\n                      - command\n                      - status\n                      - progress\n                      - started\n                      - finished\n                      - resources\n                      - error\n                    title: Action\n                    type: object\n                required:\n                  - action\n                title: ActionResponse\n                type: object\n          description: The `action` key contains the `attach_volume` Action\n      summary: Attach Volume to a Server\n      tags:\n        - Volume Actions\n  \"/volumes/{id}/actions/change_protection\":\n    post:\n      description: Changes the protection configuration of a Volume.\n      parameters:\n        - description: ID of the Volume\n          in: path\n          name: id\n          required: true\n          schema:\n            type: integer\n      requestBody:\n        content:\n          application/json:\n            schema:\n              properties:\n                delete:\n                  description: If true, prevents the Volume from being deleted\n                  example: true\n                  type: boolean\n              type: object\n      responses:\n        \"201\":\n          content:\n            application/json:\n              example:\n                action:\n                  command: change_protection\n                  error:\n                    code: action_failed\n                    message: Action failed\n                  finished: 2016-01-30T23:56:00+00:00\n                  id: 13\n                  progress: 100\n                  resources:\n                    - id: 42\n                      type: server\n                    - id: 554\n                      type: volume\n                  started: 2016-01-30T23:55:00+00:00\n                  status: success\n              schema:\n                properties:\n                  action:\n                    properties:\n                      command:\n                        description: Command executed in the Action\n                        example: start_server\n                        type: string\n                      error:\n                        description: Error message for the Action if error occurred, otherwise null\n                        nullable: true\n                        properties:\n                          code:\n                            description: Fixed machine readable code\n                            example: action_failed\n                            type: string\n                          message:\n                            description: Humanized error message\n                            example: Action failed\n                            type: string\n                        required:\n                          - code\n                          - message\n                        type: object\n                      finished:\n                        description: Point in time when the Action was finished (in ISO-8601 format). Only set if the Action is finished otherwise null.\n                        example: 2016-01-30T23:55:00+00:00\n                        nullable: true\n                        type: string\n                      id:\n                        description: ID of the Resource\n                        example: 42\n                        type: integer\n                      progress:\n                        description: Progress of Action in percent\n                        example: 100\n                        type: number\n                      resources:\n                        description: Resources the Action relates to\n                        items:\n                          properties:\n                            id:\n                              description: ID of the Resource\n                              example: 42\n                              type: integer\n                            type:\n                              description: Type of resource referenced\n                              example: server\n                              type: string\n                          required:\n                            - id\n                            - type\n                          type: object\n                        type: array\n                      started:\n                        description: Point in time when the Action was started (in ISO-8601 format)\n                        example: 2016-01-30T23:55:00+00:00\n                        type: string\n                      status:\n                        description: Status of the Action\n                        enum:\n                          - success\n                          - running\n                          - error\n                        type: string\n                    required:\n                      - id\n                      - command\n                      - status\n                      - progress\n                      - started\n                      - finished\n                      - resources\n                      - error\n                    title: Action\n                    type: object\n                required:\n                  - action\n                title: ActionResponse\n                type: object\n          description: The `action` key contains the `change_protection` Action\n      summary: Change Volume Protection\n      tags:\n        - Volume Actions\n  \"/volumes/{id}/actions/detach\":\n    post:\n      description: Detaches a Volume from the Server it’s attached to. You may attach it to a Server again at a later time.\n      parameters:\n        - description: ID of the Volume\n          in: path\n          name: id\n          required: true\n          schema:\n            type: integer\n      responses:\n        \"201\":\n          content:\n            application/json:\n              example:\n                action:\n                  command: detach_volume\n                  error:\n                    code: action_failed\n                    message: Action failed\n                  finished: null\n                  id: 13\n                  progress: 0\n                  resources:\n                    - id: 42\n                      type: server\n                  started: 2016-01-30T23:50:00+00:00\n                  status: running\n              schema:\n                properties:\n                  action:\n                    properties:\n                      command:\n                        description: Command executed in the Action\n                        example: start_server\n                        type: string\n                      error:\n                        description: Error message for the Action if error occurred, otherwise null\n                        nullable: true\n                        properties:\n                          code:\n                            description: Fixed machine readable code\n                            example: action_failed\n                            type: string\n                          message:\n                            description: Humanized error message\n                            example: Action failed\n                            type: string\n                        required:\n                          - code\n                          - message\n                        type: object\n                      finished:\n                        description: Point in time when the Action was finished (in ISO-8601 format). Only set if the Action is finished otherwise null.\n                        example: 2016-01-30T23:55:00+00:00\n                        nullable: true\n                        type: string\n                      id:\n                        description: ID of the Resource\n                        example: 42\n                        type: integer\n                      progress:\n                        description: Progress of Action in percent\n                        example: 100\n                        type: number\n                      resources:\n                        description: Resources the Action relates to\n                        items:\n                          properties:\n                            id:\n                              description: ID of the Resource\n                              example: 42\n                              type: integer\n                            type:\n                              description: Type of resource referenced\n                              example: server\n                              type: string\n                          required:\n                            - id\n                            - type\n                          type: object\n                        type: array\n                      started:\n                        description: Point in time when the Action was started (in ISO-8601 format)\n                        example: 2016-01-30T23:55:00+00:00\n                        type: string\n                      status:\n                        description: Status of the Action\n                        enum:\n                          - success\n                          - running\n                          - error\n                        type: string\n                    required:\n                      - id\n                      - command\n                      - status\n                      - progress\n                      - started\n                      - finished\n                      - resources\n                      - error\n                    title: Action\n                    type: object\n                required:\n                  - action\n                title: ActionResponse\n                type: object\n          description: The `action` key contains the `detach_volume` Action\n      summary: Detach Volume\n      tags:\n        - Volume Actions\n  \"/volumes/{id}/actions/resize\":\n    post:\n      description: Changes the size of a Volume. Note that downsizing a Volume is not possible.\n      parameters:\n        - description: ID of the Volume\n          in: path\n          name: id\n          required: true\n          schema:\n            type: integer\n      requestBody:\n        content:\n          application/json:\n            schema:\n              properties:\n                size:\n                  description: New Volume size in GB (must be greater than current size)\n                  example: 50\n                  type: number\n              required:\n                - size\n              type: object\n      responses:\n        \"201\":\n          content:\n            application/json:\n              example:\n                action:\n                  command: resize_volume\n                  error:\n                    code: action_failed\n                    message: Action failed\n                  finished: null\n                  id: 13\n                  progress: 0\n                  resources:\n                    - id: 554\n                      type: volume\n                  started: 2016-01-30T23:50:00+00:00\n                  status: running\n              schema:\n                properties:\n                  action:\n                    properties:\n                      command:\n                        description: Command executed in the Action\n                        example: start_server\n                        type: string\n                      error:\n                        description: Error message for the Action if error occurred, otherwise null\n                        nullable: true\n                        properties:\n                          code:\n                            description: Fixed machine readable code\n                            example: action_failed\n                            type: string\n                          message:\n                            description: Humanized error message\n                            example: Action failed\n                            type: string\n                        required:\n                          - code\n                          - message\n                        type: object\n                      finished:\n                        description: Point in time when the Action was finished (in ISO-8601 format). Only set if the Action is finished otherwise null.\n                        example: 2016-01-30T23:55:00+00:00\n                        nullable: true\n                        type: string\n                      id:\n                        description: ID of the Resource\n                        example: 42\n                        type: integer\n                      progress:\n                        description: Progress of Action in percent\n                        example: 100\n                        type: number\n                      resources:\n                        description: Resources the Action relates to\n                        items:\n                          properties:\n                            id:\n                              description: ID of the Resource\n                              example: 42\n                              type: integer\n                            type:\n                              description: Type of resource referenced\n                              example: server\n                              type: string\n                          required:\n                            - id\n                            - type\n                          type: object\n                        type: array\n                      started:\n                        description: Point in time when the Action was started (in ISO-8601 format)\n                        example: 2016-01-30T23:55:00+00:00\n                        type: string\n                      status:\n                        description: Status of the Action\n                        enum:\n                          - success\n                          - running\n                          - error\n                        type: string\n                    required:\n                      - id\n                      - command\n                      - status\n                      - progress\n                      - started\n                      - finished\n                      - resources\n                      - error\n                    title: Action\n                    type: object\n                required:\n                  - action\n                title: ActionResponse\n                type: object\n          description: The `action` key contains the `resize_volume` Action\n      summary: Resize Volume\n      tags:\n        - Volume Actions\n  \"/volumes/{id}/actions/{action_id}\":\n    get:\n      description: Returns a specific Action for a Volume.\n      parameters:\n        - description: ID of the Volume\n          in: path\n          name: id\n          required: true\n          schema:\n            type: integer\n        - description: ID of the Action\n          in: path\n          name: action_id\n          required: true\n          schema:\n            type: integer\n      responses:\n        \"200\":\n          content:\n            application/json:\n              example:\n                action:\n                  command: attach_volume\n                  error:\n                    code: action_failed\n                    message: Action failed\n                  finished: 2016-01-30T23:56:00+00:00\n                  id: 13\n                  progress: 100\n                  resources:\n                    - id: 42\n                      type: server\n                  started: 2016-01-30T23:55:00+00:00\n                  status: success\n              schema:\n                properties:\n                  action:\n                    properties:\n                      command:\n                        description: Command executed in the Action\n                        example: start_server\n                        type: string\n                      error:\n                        description: Error message for the Action if error occurred, otherwise null\n                        nullable: true\n                        properties:\n                          code:\n                            description: Fixed machine readable code\n                            example: action_failed\n                            type: string\n                          message:\n                            description: Humanized error message\n                            example: Action failed\n                            type: string\n                        required:\n                          - code\n                          - message\n                        type: object\n                      finished:\n                        description: Point in time when the Action was finished (in ISO-8601 format). Only set if the Action is finished otherwise null.\n                        example: 2016-01-30T23:55:00+00:00\n                        nullable: true\n                        type: string\n                      id:\n                        description: ID of the Resource\n                        example: 42\n                        type: integer\n                      progress:\n                        description: Progress of Action in percent\n                        example: 100\n                        type: number\n                      resources:\n                        description: Resources the Action relates to\n                        items:\n                          properties:\n                            id:\n                              description: ID of the Resource\n                              example: 42\n                              type: integer\n                            type:\n                              description: Type of resource referenced\n                              example: server\n                              type: string\n                          required:\n                            - id\n                            - type\n                          type: object\n                        type: array\n                      started:\n                        description: Point in time when the Action was started (in ISO-8601 format)\n                        example: 2016-01-30T23:55:00+00:00\n                        type: string\n                      status:\n                        description: Status of the Action\n                        enum:\n                          - success\n                          - running\n                          - error\n                        type: string\n                    required:\n                      - id\n                      - command\n                      - status\n                      - progress\n                      - started\n                      - finished\n                      - resources\n                      - error\n                    title: Action\n                    type: object\n                required:\n                  - action\n                title: ActionResponse\n                type: object\n          description: The `action` key contains the Volume Action\n      summary: Get an Action for a Volume\n      tags:\n        - Volume Actions\n"
		}
	},
	"Error": "parse: parse spec: parse operations: paths: /servers: get: parameters: parse parameter \"status\": schema: parse enum values: parse value \"false\": expected type \"string\", got \"bool\""
}