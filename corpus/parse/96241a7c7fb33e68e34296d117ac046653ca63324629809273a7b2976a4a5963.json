{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/restful-ma/thresholds"
		},
		"file": {
			"name": "osisoft.com-1.11.1.5383-swagger.yaml",
			"size": 0,
			"path": "benchmark-repository/openapi/osisoft.com-1.11.1.5383-swagger.yaml",
			"byteSize": 1035718,
			"content": "openapi: 3.0.0\ninfo:\n  contact:\n    email: techsupport@osisoft.com\n    name: OSIsoft, LLC.\n    url: https://techsupport.osisoft.com/\n  description: Swagger Spec file that describes PI Web API\n  license:\n    name: Apache 2.0 License\n    url: http://tempuri.org/license\n  termsOfService: https://pisquare.osisoft.com/docs/DOC-1105\n  title: PI Web API 2018 SP1 Swagger Spec\n  version: 1.11.1.5383\n  x-apisguru-categories:\n    - enterprise\n  x-logo:\n    backgroundColor: \"#FFFFFF\"\n    url: https://twitter.com/OSIsoft/profile_image?size=original\n  x-origin:\n    - format: swagger\n      url: https://devdata.osisoft.com/piwebapi/help/specification\n      version: \"2.0\"\n  x-providerName: osisoft.com\npaths:\n  /:\n    get:\n      deprecated: false\n      operationId: Home_Get\n      responses:\n        \"200\":\n          description: Links to top level collections and system information.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Landing\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/Landing\"\n            text/html:\n              schema:\n                $ref: \"#/components/schemas/Landing\"\n            application/x-ms-application:\n              schema:\n                $ref: \"#/components/schemas/Landing\"\n      summary: Get top level links for this PI System Web API instance.\n      tags:\n        - Home\n  /analyses:\n    get:\n      deprecated: false\n      description: This method returns an Analysis based on the hierarchical path\n        associated with it, and should be used when a path has been received\n        from a separate part of the PI System for use in the PI Web API. Users\n        should primarily search with the WebID when available.\n      operationId: Analysis_GetByPath\n      parameters:\n        - description: The path to the Analysis.\n          in: query\n          name: path\n          required: true\n          schema:\n            type: string\n        - description: List of fields to be returned in the response, separated by\n            semicolons (;). If this parameter is not specified, all available\n            fields will be returned.\n          in: query\n          name: selectedFields\n          required: false\n          schema:\n            type: string\n        - description: Optional parameter. Used to specify the type of WebID. Useful for\n            URL brevity and other special cases. Default is the value of the\n            configuration item \"WebIDType\".\n          in: query\n          name: webIdType\n          required: false\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: The specified Analysis.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Analysis\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/Analysis\"\n            text/html:\n              schema:\n                $ref: \"#/components/schemas/Analysis\"\n            application/x-ms-application:\n              schema:\n                $ref: \"#/components/schemas/Analysis\"\n      summary: Retrieve an Analysis by path.\n      tags:\n        - Analysis\n  /analyses/search:\n    get:\n      deprecated: false\n      operationId: Analysis_GetAnalysesQuery\n      parameters:\n        - description: The ID of the asset database to use as the root of the query.\n          in: query\n          name: databaseWebId\n          required: false\n          schema:\n            type: string\n        - description: The maximum number of objects to be returned per call (page size).\n            The default is 1000.\n          in: query\n          name: maxCount\n          required: false\n          schema:\n            type: integer\n        - description: 'The query string is a list of filters used to perform an AFSearch\n            for the analyses in the asset database. An example would be: \"query=\n            Name:=MyAnalysis1* Template:=AnalysisTemplate\".'\n          in: query\n          name: query\n          required: false\n          schema:\n            type: string\n        - description: List of fields to be returned in the response, separated by\n            semicolons (;). If this parameter is not specified, all available\n            fields will be returned.\n          in: query\n          name: selectedFields\n          required: false\n          schema:\n            type: string\n        - description: The starting index (zero based) of the items to be returned. The\n            default is 0.\n          in: query\n          name: startIndex\n          required: false\n          schema:\n            type: integer\n        - description: Optional parameter. Used to specify the type of WebID. Useful for\n            URL brevity and other special cases. Default is the value of the\n            configuration item \"WebIDType\".\n          in: query\n          name: webIdType\n          required: false\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: A list of analyses matching the specified conditions.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Items_Analysis_\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/Items_Analysis_\"\n            text/html:\n              schema:\n                $ref: \"#/components/schemas/Items_Analysis_\"\n            application/x-ms-application:\n              schema:\n                $ref: \"#/components/schemas/Items_Analysis_\"\n      summary: Retrieve analyses based on the specified conditions. By default, returns\n        all analyses.\n      tags:\n        - Analysis\n  \"/analyses/{webId}\":\n    delete:\n      deprecated: false\n      operationId: Analysis_Delete\n      parameters:\n        - description: The ID of the Analysis to delete.\n          in: path\n          name: webId\n          required: true\n          schema:\n            type: string\n      responses:\n        \"204\":\n          description: The Analysis was deleted.\n      summary: Delete an Analysis.\n      tags:\n        - Analysis\n    get:\n      deprecated: false\n      operationId: Analysis_Get\n      parameters:\n        - description: The ID of the Analysis.\n          in: path\n          name: webId\n          required: true\n          schema:\n            type: string\n        - description: List of fields to be returned in the response, separated by\n            semicolons (;). If this parameter is not specified, all available\n            fields will be returned.\n          in: query\n          name: selectedFields\n          required: false\n          schema:\n            type: string\n        - description: Optional parameter. Used to specify the type of WebID. Useful for\n            URL brevity and other special cases. Default is the value of the\n            configuration item \"WebIDType\".\n          in: query\n          name: webIdType\n          required: false\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: The specified Analysis.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Analysis\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/Analysis\"\n            text/html:\n              schema:\n                $ref: \"#/components/schemas/Analysis\"\n            application/x-ms-application:\n              schema:\n                $ref: \"#/components/schemas/Analysis\"\n      summary: Retrieve an Analysis.\n      tags:\n        - Analysis\n    patch:\n      deprecated: false\n      operationId: Analysis_Update\n      parameters:\n        - description: The ID of the Analysis to update.\n          in: path\n          name: webId\n          required: true\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/Analysis\"\n          text/json:\n            schema:\n              $ref: \"#/components/schemas/Analysis\"\n        description: A partial Analysis containing the desired changes.\n        required: true\n      responses:\n        \"204\":\n          description: The Analysis was updated.\n      summary: Update an Analysis.\n      tags:\n        - Analysis\n  \"/analyses/{webId}/categories\":\n    get:\n      deprecated: false\n      operationId: Analysis_GetCategories\n      parameters:\n        - description: The ID of the Analysis.\n          in: path\n          name: webId\n          required: true\n          schema:\n            type: string\n        - description: List of fields to be returned in the response, separated by\n            semicolons (;). If this parameter is not specified, all available\n            fields will be returned.\n          in: query\n          name: selectedFields\n          required: false\n          schema:\n            type: string\n        - description: Optional parameter. Used to specify the type of WebID. Useful for\n            URL brevity and other special cases. Default is the value of the\n            configuration item \"WebIDType\".\n          in: query\n          name: webIdType\n          required: false\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: A list of categories.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Items_AnalysisCategory_\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/Items_AnalysisCategory_\"\n            text/html:\n              schema:\n                $ref: \"#/components/schemas/Items_AnalysisCategory_\"\n            application/x-ms-application:\n              schema:\n                $ref: \"#/components/schemas/Items_AnalysisCategory_\"\n      summary: Get an Analysis' categories.\n      tags:\n        - Analysis\n  \"/analyses/{webId}/security\":\n    get:\n      deprecated: false\n      operationId: Analysis_GetSecurity\n      parameters:\n        - description: The ID of the Analysis for the security to be checked.\n          in: path\n          name: webId\n          required: true\n          schema:\n            type: string\n        - description: The user identity for the security information to be checked.\n            Multiple security identities may be specified with multiple\n            instances of the parameter. If the parameter is not specified, only\n            the current user's security rights will be returned.\n          in: query\n          name: userIdentity\n          required: true\n          explode: true\n          schema:\n            type: array\n            items:\n              type: string\n        - description: Indicates if the security cache should be refreshed before getting\n            security information. The default is 'false'.\n          in: query\n          name: forceRefresh\n          required: false\n          schema:\n            type: boolean\n        - description: List of fields to be returned in the response, separated by\n            semicolons (;). If this parameter is not specified, all available\n            fields will be returned.\n          in: query\n          name: selectedFields\n          required: false\n          schema:\n            type: string\n        - description: Optional parameter. Used to specify the type of WebID. Useful for\n            URL brevity and other special cases. Default is the value of the\n            configuration item \"WebIDType\".\n          in: query\n          name: webIdType\n          required: false\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: Security rights.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Items_SecurityRights_\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/Items_SecurityRights_\"\n            text/html:\n              schema:\n                $ref: \"#/components/schemas/Items_SecurityRights_\"\n            application/x-ms-application:\n              schema:\n                $ref: \"#/components/schemas/Items_SecurityRights_\"\n        \"400\":\n          description: An invalid or local account is specified as the user identity.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Errors\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/Errors\"\n            text/html:\n              schema:\n                $ref: \"#/components/schemas/Errors\"\n            application/x-ms-application:\n              schema:\n                $ref: \"#/components/schemas/Errors\"\n        \"401\":\n          description: Access denied for the specified user identity.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Errors\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/Errors\"\n            text/html:\n              schema:\n                $ref: \"#/components/schemas/Errors\"\n            application/x-ms-application:\n              schema:\n                $ref: \"#/components/schemas/Errors\"\n        \"409\":\n          description: Unsupported when using Anonymous authentication method.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Errors\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/Errors\"\n            text/html:\n              schema:\n                $ref: \"#/components/schemas/Errors\"\n            application/x-ms-application:\n              schema:\n                $ref: \"#/components/schemas/Errors\"\n        \"502\":\n          description: Failed to retrieve the specified user identity.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Errors\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/Errors\"\n            text/html:\n              schema:\n                $ref: \"#/components/schemas/Errors\"\n            application/x-ms-application:\n              schema:\n                $ref: \"#/components/schemas/Errors\"\n      summary: Get the security information of the specified security item associated\n        with the Analysis for a specified user.\n      tags:\n        - Analysis\n  \"/analyses/{webId}/securityentries\":\n    get:\n      deprecated: false\n      operationId: Analysis_GetSecurityEntries\n      parameters:\n        - description: The ID of the analysis.\n          in: path\n          name: webId\n          required: true\n          schema:\n            type: string\n        - description: The name query string used for filtering security entries. The\n            default is no filter.\n          in: query\n          name: nameFilter\n          required: false\n          schema:\n            type: string\n        - description: List of fields to be returned in the response, separated by\n            semicolons (;). If this parameter is not specified, all available\n            fields will be returned.\n          in: query\n          name: selectedFields\n          required: false\n          schema:\n            type: string\n        - description: Optional parameter. Used to specify the type of WebID. Useful for\n            URL brevity and other special cases. Default is the value of the\n            configuration item \"WebIDType\".\n          in: query\n          name: webIdType\n          required: false\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: A list of security entries matching the specified condition.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Items_SecurityEntry_\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/Items_SecurityEntry_\"\n            text/html:\n              schema:\n                $ref: \"#/components/schemas/Items_SecurityEntry_\"\n            application/x-ms-application:\n              schema:\n                $ref: \"#/components/schemas/Items_SecurityEntry_\"\n      summary: Retrieve the security entries associated with the analysis based on the\n        specified criteria. By default, all security entries for this analysis\n        are returned.\n      tags:\n        - Analysis\n    post:\n      deprecated: false\n      operationId: Analysis_CreateSecurityEntry\n      parameters:\n        - description: The ID of the analysis, where the security entry will be created.\n          in: path\n          name: webId\n          required: true\n          schema:\n            type: string\n        - description: If false, the new access permissions are only applied to the\n            associated object. If true, the access permissions of children with\n            any parent-child reference types will change when the permissions on\n            the primary parent change.\n          in: query\n          name: applyToChildren\n          required: false\n          schema:\n            type: boolean\n        - description: Optional parameter. Used to specify the type of WebID. Useful for\n            URL brevity and other special cases. Default is the value of the\n            configuration item \"WebIDType\".\n          in: query\n          name: webIdType\n          required: false\n          schema:\n            type: string\n      requestBody:\n        $ref: \"#/components/requestBodies/SecurityEntry\"\n      responses:\n        \"201\":\n          description: The security entry was created. The response's Location header is a\n            link to the security entry.\n      summary: Create a security entry owned by the analysis.\n      tags:\n        - Analysis\n  \"/analyses/{webId}/securityentries/{name}\":\n    delete:\n      deprecated: false\n      operationId: Analysis_DeleteSecurityEntry\n      parameters:\n        - description: The name of the security entry. For every backslash character (\\) in\n            the security entry name, replace with asterisk (*). As an example,\n            use domain*username instead of domain\\username.\n          in: path\n          name: name\n          required: true\n          schema:\n            type: string\n        - description: The ID of the analysis, where the security entry will be deleted.\n          in: path\n          name: webId\n          required: true\n          schema:\n            type: string\n        - description: If false, the new access permissions are only applied to the\n            associated object. If true, the access permissions of children with\n            any parent-child reference types will change when the permissions on\n            the primary parent change.\n          in: query\n          name: applyToChildren\n          required: false\n          schema:\n            type: boolean\n      responses:\n        \"204\":\n          description: The security entry was deleted.\n      summary: Delete a security entry owned by the analysis.\n      tags:\n        - Analysis\n    get:\n      deprecated: false\n      operationId: Analysis_GetSecurityEntryByName\n      parameters:\n        - description: The name of the security entry. For every backslash character (\\) in\n            the security entry name, replace with asterisk (*). As an example,\n            use domain*username instead of domain\\username.\n          in: path\n          name: name\n          required: true\n          schema:\n            type: string\n        - description: The ID of the analysis.\n          in: path\n          name: webId\n          required: true\n          schema:\n            type: string\n        - description: List of fields to be returned in the response, separated by\n            semicolons (;). If this parameter is not specified, all available\n            fields will be returned.\n          in: query\n          name: selectedFields\n          required: false\n          schema:\n            type: string\n        - description: Optional parameter. Used to specify the type of WebID. Useful for\n            URL brevity and other special cases. Default is the value of the\n            configuration item \"WebIDType\".\n          in: query\n          name: webIdType\n          required: false\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: The security entry matching the specified condition.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/SecurityEntry\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/SecurityEntry\"\n            text/html:\n              schema:\n                $ref: \"#/components/schemas/SecurityEntry\"\n            application/x-ms-application:\n              schema:\n                $ref: \"#/components/schemas/SecurityEntry\"\n        \"404\":\n          description: The security entry with the specified name is not found.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Errors\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/Errors\"\n            text/html:\n              schema:\n                $ref: \"#/components/schemas/Errors\"\n            application/x-ms-application:\n              schema:\n                $ref: \"#/components/schemas/Errors\"\n      summary: Retrieve the security entry associated with the analysis with the\n        specified name.\n      tags:\n        - Analysis\n    put:\n      deprecated: false\n      operationId: Analysis_UpdateSecurityEntry\n      parameters:\n        - description: The name of the security entry.\n          in: path\n          name: name\n          required: true\n          schema:\n            type: string\n        - description: The ID of the analysis, where the security entry will be updated.\n          in: path\n          name: webId\n          required: true\n          schema:\n            type: string\n        - description: If false, the new access permissions are only applied to the\n            associated object. If true, the access permissions of children with\n            any parent-child reference types will change when the permissions on\n            the primary parent change.\n          in: query\n          name: applyToChildren\n          required: false\n          schema:\n            type: boolean\n      requestBody:\n        $ref: \"#/components/requestBodies/SecurityEntry2\"\n      responses:\n        \"204\":\n          description: The security entry was updated.\n      summary: Update a security entry owned by the analysis.\n      tags:\n        - Analysis\n  /analysiscategories:\n    get:\n      deprecated: false\n      operationId: AnalysisCategory_GetByPath\n      parameters:\n        - description: The path to the target analysis category.\n          in: query\n          name: path\n          required: true\n          schema:\n            type: string\n        - description: List of fields to be returned in the response, separated by\n            semicolons (;). If this parameter is not specified, all available\n            fields will be returned.\n          in: query\n          name: selectedFields\n          required: false\n          schema:\n            type: string\n        - description: Optional parameter. Used to specify the type of WebID. Useful for\n            URL brevity and other special cases. Default is the value of the\n            configuration item \"WebIDType\".\n          in: query\n          name: webIdType\n          required: false\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: The specified analysis category.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/AnalysisCategory\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/AnalysisCategory\"\n            text/html:\n              schema:\n                $ref: \"#/components/schemas/AnalysisCategory\"\n            application/x-ms-application:\n              schema:\n                $ref: \"#/components/schemas/AnalysisCategory\"\n      summary: Retrieve an analysis category by path.\n      tags:\n        - AnalysisCategory\n  \"/analysiscategories/{webId}\":\n    delete:\n      deprecated: false\n      operationId: AnalysisCategory_Delete\n      parameters:\n        - description: The ID of the analysis category to delete.\n          in: path\n          name: webId\n          required: true\n          schema:\n            type: string\n      responses:\n        \"204\":\n          description: The analysis category was deleted.\n      summary: Delete an analysis category.\n      tags:\n        - AnalysisCategory\n    get:\n      deprecated: false\n      operationId: AnalysisCategory_Get\n      parameters:\n        - description: The ID of the analysis category.\n          in: path\n          name: webId\n          required: true\n          schema:\n            type: string\n        - description: List of fields to be returned in the response, separated by\n            semicolons (;). If this parameter is not specified, all available\n            fields will be returned.\n          in: query\n          name: selectedFields\n          required: false\n          schema:\n            type: string\n        - description: Optional parameter. Used to specify the type of WebID. Useful for\n            URL brevity and other special cases. Default is the value of the\n            configuration item \"WebIDType\".\n          in: query\n          name: webIdType\n          required: false\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: The specified analysis category.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/AnalysisCategory\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/AnalysisCategory\"\n            text/html:\n              schema:\n                $ref: \"#/components/schemas/AnalysisCategory\"\n            application/x-ms-application:\n              schema:\n                $ref: \"#/components/schemas/AnalysisCategory\"\n      summary: Retrieve an analysis category.\n      tags:\n        - AnalysisCategory\n    patch:\n      deprecated: false\n      operationId: AnalysisCategory_Update\n      parameters:\n        - description: The ID of the analysis category to update.\n          in: path\n          name: webId\n          required: true\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/AnalysisCategory\"\n          text/json:\n            schema:\n              $ref: \"#/components/schemas/AnalysisCategory\"\n        description: A partial analysis category containing the desired changes.\n        required: true\n      responses:\n        \"204\":\n          description: The analysis category was updated.\n      summary: Update an analysis category by replacing items in its definition.\n      tags:\n        - AnalysisCategory\n  \"/analysiscategories/{webId}/security\":\n    get:\n      deprecated: false\n      operationId: AnalysisCategory_GetSecurity\n      parameters:\n        - description: The ID of the analysis category for the security to be checked.\n          in: path\n          name: webId\n          required: true\n          schema:\n            type: string\n        - description: The user identity for the security information to be checked.\n            Multiple security identities may be specified with multiple\n            instances of the parameter. If the parameter is not specified, only\n            the current user's security rights will be returned.\n          in: query\n          name: userIdentity\n          required: true\n          explode: true\n          schema:\n            type: array\n            items:\n              type: string\n        - description: Indicates if the security cache should be refreshed before getting\n            security information. The default is 'false'.\n          in: query\n          name: forceRefresh\n          required: false\n          schema:\n            type: boolean\n        - description: List of fields to be returned in the response, separated by\n            semicolons (;). If this parameter is not specified, all available\n            fields will be returned.\n          in: query\n          name: selectedFields\n          required: false\n          schema:\n            type: string\n        - description: Optional parameter. Used to specify the type of WebID. Useful for\n            URL brevity and other special cases. Default is the value of the\n            configuration item \"WebIDType\".\n          in: query\n          name: webIdType\n          required: false\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: Security rights.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Items_SecurityRights_\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/Items_SecurityRights_\"\n            text/html:\n              schema:\n                $ref: \"#/components/schemas/Items_SecurityRights_\"\n            application/x-ms-application:\n              schema:\n                $ref: \"#/components/schemas/Items_SecurityRights_\"\n        \"400\":\n          description: An invalid or local account is specified as the user identity.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Errors\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/Errors\"\n            text/html:\n              schema:\n                $ref: \"#/components/schemas/Errors\"\n            application/x-ms-application:\n              schema:\n                $ref: \"#/components/schemas/Errors\"\n        \"401\":\n          description: Access denied for the specified user identity.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Errors\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/Errors\"\n            text/html:\n              schema:\n                $ref: \"#/components/schemas/Errors\"\n            application/x-ms-application:\n              schema:\n                $ref: \"#/components/schemas/Errors\"\n        \"409\":\n          description: Unsupported when using Anonymous authentication method.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Errors\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/Errors\"\n            text/html:\n              schema:\n                $ref: \"#/components/schemas/Errors\"\n            application/x-ms-application:\n              schema:\n                $ref: \"#/components/schemas/Errors\"\n        \"502\":\n          description: Failed to retrieve the specified user identity.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Errors\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/Errors\"\n            text/html:\n              schema:\n                $ref: \"#/components/schemas/Errors\"\n            application/x-ms-application:\n              schema:\n                $ref: \"#/components/schemas/Errors\"\n      summary: Get the security information of the specified security item associated\n        with the analysis category for a specified user.\n      tags:\n        - AnalysisCategory\n  \"/analysiscategories/{webId}/securityentries\":\n    get:\n      deprecated: false\n      operationId: AnalysisCategory_GetSecurityEntries\n      parameters:\n        - description: The ID of the analysis category.\n          in: path\n          name: webId\n          required: true\n          schema:\n            type: string\n        - description: The name query string used for filtering security entries. The\n            default is no filter.\n          in: query\n          name: nameFilter\n          required: false\n          schema:\n            type: string\n        - description: List of fields to be returned in the response, separated by\n            semicolons (;). If this parameter is not specified, all available\n            fields will be returned.\n          in: query\n          name: selectedFields\n          required: false\n          schema:\n            type: string\n        - description: Optional parameter. Used to specify the type of WebID. Useful for\n            URL brevity and other special cases. Default is the value of the\n            configuration item \"WebIDType\".\n          in: query\n          name: webIdType\n          required: false\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: A list of security entries matching the specified condition.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Items_SecurityEntry_\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/Items_SecurityEntry_\"\n            text/html:\n              schema:\n                $ref: \"#/components/schemas/Items_SecurityEntry_\"\n            application/x-ms-application:\n              schema:\n                $ref: \"#/components/schemas/Items_SecurityEntry_\"\n      summary: Retrieve the security entries associated with the analysis category\n        based on the specified criteria. By default, all security entries for\n        this analysis category are returned.\n      tags:\n        - AnalysisCategory\n    post:\n      deprecated: false\n      operationId: AnalysisCategory_CreateSecurityEntry\n      parameters:\n        - description: The ID of the analysis category, where the security entry will be\n            created.\n          in: path\n          name: webId\n          required: true\n          schema:\n            type: string\n        - description: If false, the new access permissions are only applied to the\n            associated object. If true, the access permissions of children with\n            any parent-child reference types will change when the permissions on\n            the primary parent change.\n          in: query\n          name: applyToChildren\n          required: false\n          schema:\n            type: boolean\n        - description: Optional parameter. Used to specify the type of WebID. Useful for\n            URL brevity and other special cases. Default is the value of the\n            configuration item \"WebIDType\".\n          in: query\n          name: webIdType\n          required: false\n          schema:\n            type: string\n      requestBody:\n        $ref: \"#/components/requestBodies/SecurityEntry\"\n      responses:\n        \"201\":\n          description: The security entry was created. The response's Location header is a\n            link to the security entry.\n      summary: Create a security entry owned by the analysis category.\n      tags:\n        - AnalysisCategory\n  \"/analysiscategories/{webId}/securityentries/{name}\":\n    delete:\n      deprecated: false\n      operationId: AnalysisCategory_DeleteSecurityEntry\n      parameters:\n        - description: The name of the security entry. For every backslash character (\\) in\n            the security entry name, replace with asterisk (*). As an example,\n            use domain*username instead of domain\\username.\n          in: path\n          name: name\n          required: true\n          schema:\n            type: string\n        - description: The ID of the analysis category, where the security entry will be\n            deleted.\n          in: path\n          name: webId\n          required: true\n          schema:\n            type: string\n        - description: If false, the new access permissions are only applied to the\n            associated object. If true, the access permissions of children with\n            any parent-child reference types will change when the permissions on\n            the primary parent change.\n          in: query\n          name: applyToChildren\n          required: false\n          schema:\n            type: boolean\n      responses:\n        \"204\":\n          description: The security entry was deleted.\n      summary: Delete a security entry owned by the analysis category.\n      tags:\n        - AnalysisCategory\n    get:\n      deprecated: false\n      operationId: AnalysisCategory_GetSecurityEntryByName\n      parameters:\n        - description: The name of the security entry. For every backslash character (\\) in\n            the security entry name, replace with asterisk (*). As an example,\n            use domain*username instead of domain\\username.\n          in: path\n          name: name\n          required: true\n          schema:\n            type: string\n        - description: The ID of the analysis category.\n          in: path\n          name: webId\n          required: true\n          schema:\n            type: string\n        - description: List of fields to be returned in the response, separated by\n            semicolons (;). If this parameter is not specified, all available\n            fields will be returned.\n          in: query\n          name: selectedFields\n          required: false\n          schema:\n            type: string\n        - description: Optional parameter. Used to specify the type of WebID. Useful for\n            URL brevity and other special cases. Default is the value of the\n            configuration item \"WebIDType\".\n          in: query\n          name: webIdType\n          required: false\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: The security entry matching the specified condition.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/SecurityEntry\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/SecurityEntry\"\n            text/html:\n              schema:\n                $ref: \"#/components/schemas/SecurityEntry\"\n            application/x-ms-application:\n              schema:\n                $ref: \"#/components/schemas/SecurityEntry\"\n        \"404\":\n          description: The security entry with the specified name is not found.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Errors\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/Errors\"\n            text/html:\n              schema:\n                $ref: \"#/components/schemas/Errors\"\n            application/x-ms-application:\n              schema:\n                $ref: \"#/components/schemas/Errors\"\n      summary: Retrieve the security entry associated with the analysis category with\n        the specified name.\n      tags:\n        - AnalysisCategory\n    put:\n      deprecated: false\n      operationId: AnalysisCategory_UpdateSecurityEntry\n      parameters:\n        - description: The name of the security entry.\n          in: path\n          name: name\n          required: true\n          schema:\n            type: string\n        - description: The ID of the analysis category, where the security entry will be\n            updated.\n          in: path\n          name: webId\n          required: true\n          schema:\n            type: string\n        - description: If false, the new access permissions are only applied to the\n            associated object. If true, the access permissions of children with\n            any parent-child reference types will change when the permissions on\n            the primary parent change.\n          in: query\n          name: applyToChildren\n          required: false\n          schema:\n            type: boolean\n      requestBody:\n        $ref: \"#/components/requestBodies/SecurityEntry2\"\n      responses:\n        \"204\":\n          description: The security entry was updated.\n      summary: Update a security entry owned by the analysis category.\n      tags:\n        - AnalysisCategory\n  /analysisruleplugins:\n    get:\n      deprecated: false\n      description: This method returns an Analysis Rule Plug-in based on the hierarchical\n        path associated with it, and should be used when a path has been\n        received from a separate part of the PI System for use in the PI Web\n        API. Users should primarily search with the WebID when available.\n      operationId: AnalysisRulePlugIn_GetByPath\n      parameters:\n        - description: The path to the Analysis Rule Plug-in.\n          in: query\n          name: path\n          required: true\n          schema:\n            type: string\n        - description: List of fields to be returned in the response, separated by\n            semicolons (;). If this parameter is not specified, all available\n            fields will be returned.\n          in: query\n          name: selectedFields\n          required: false\n          schema:\n            type: string\n        - description: Optional parameter. Used to specify the type of WebID. Useful for\n            URL brevity and other special cases. Default is the value of the\n            configuration item \"WebIDType\".\n          in: query\n          name: webIdType\n          required: false\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: The specified Analysis Rule Plug-in.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/AnalysisRulePlugIn\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/AnalysisRulePlugIn\"\n            text/html:\n              schema:\n                $ref: \"#/components/schemas/AnalysisRulePlugIn\"\n            application/x-ms-application:\n              schema:\n                $ref: \"#/components/schemas/AnalysisRulePlugIn\"\n      summary: Retrieve an Analysis Rule Plug-in by path.\n      tags:\n        - AnalysisRulePlugIn\n  \"/analysisruleplugins/{webId}\":\n    get:\n      deprecated: false\n      operationId: AnalysisRulePlugIn_Get\n      parameters:\n        - description: The ID of the Analysis Rule Plug-in.\n          in: path\n          name: webId\n          required: true\n          schema:\n            type: string\n        - description: List of fields to be returned in the response, separated by\n            semicolons (;). If this parameter is not specified, all available\n            fields will be returned.\n          in: query\n          name: selectedFields\n          required: false\n          schema:\n            type: string\n        - description: Optional parameter. Used to specify the type of WebID. Useful for\n            URL brevity and other special cases. Default is the value of the\n            configuration item \"WebIDType\".\n          in: query\n          name: webIdType\n          required: false\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: The specified Analysis Rule Plug-in.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/AnalysisRulePlugIn\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/AnalysisRulePlugIn\"\n            text/html:\n              schema:\n                $ref: \"#/components/schemas/AnalysisRulePlugIn\"\n            application/x-ms-application:\n              schema:\n                $ref: \"#/components/schemas/AnalysisRulePlugIn\"\n      summary: Retrieve an Analysis Rule Plug-in.\n      tags:\n        - AnalysisRulePlugIn\n  /analysisrules:\n    get:\n      deprecated: false\n      description: This method returns an Analysis Rule based on the hierarchical path\n        associated with it, and should be used when a path has been received\n        from a separate part of the PI System for use in the PI Web API. Users\n        should primarily search with the WebID when available.\n      operationId: AnalysisRule_GetByPath\n      parameters:\n        - description: The path to the Analysis Rule.\n          in: query\n          name: path\n          required: true\n          schema:\n            type: string\n        - description: List of fields to be returned in the response, separated by\n            semicolons (;). If this parameter is not specified, all available\n            fields will be returned.\n          in: query\n          name: selectedFields\n          required: false\n          schema:\n            type: string\n        - description: Optional parameter. Used to specify the type of WebID. Useful for\n            URL brevity and other special cases. Default is the value of the\n            configuration item \"WebIDType\".\n          in: query\n          name: webIdType\n          required: false\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: The requested Analysis Rule.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/AnalysisRule\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/AnalysisRule\"\n            text/html:\n              schema:\n                $ref: \"#/components/schemas/AnalysisRule\"\n            application/x-ms-application:\n              schema:\n                $ref: \"#/components/schemas/AnalysisRule\"\n      summary: Retrieve an Analysis Rule by path.\n      tags:\n        - AnalysisRule\n  \"/analysisrules/{webId}\":\n    delete:\n      deprecated: false\n      operationId: AnalysisRule_Delete\n      parameters:\n        - description: The ID of the Analysis Rule.\n          in: path\n          name: webId\n          required: true\n          schema:\n            type: string\n      responses:\n        \"204\":\n          description: The Analysis Rule was deleted.\n      summary: Delete an Analysis Rule.\n      tags:\n        - AnalysisRule\n    get:\n      deprecated: false\n      operationId: AnalysisRule_Get\n      parameters:\n        - description: The ID of the Analysis Rule.\n          in: path\n          name: webId\n          required: true\n          schema:\n            type: string\n        - description: List of fields to be returned in the response, separated by\n            semicolons (;). If this parameter is not specified, all available\n            fields will be returned.\n          in: query\n          name: selectedFields\n          required: false\n          schema:\n            type: string\n        - description: Optional parameter. Used to specify the type of WebID. Useful for\n            URL brevity and other special cases. Default is the value of the\n            configuration item \"WebIDType\".\n          in: query\n          name: webIdType\n          required: false\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: The requested Analysis Rule.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/AnalysisRule\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/AnalysisRule\"\n            text/html:\n              schema:\n                $ref: \"#/components/schemas/AnalysisRule\"\n            application/x-ms-application:\n              schema:\n                $ref: \"#/components/schemas/AnalysisRule\"\n      summary: Retrieve an Analysis Rule.\n      tags:\n        - AnalysisRule\n    patch:\n      deprecated: false\n      operationId: AnalysisRule_Update\n      parameters:\n        - description: The ID of the Analysis Rule.\n          in: path\n          name: webId\n          required: true\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/AnalysisRule\"\n          text/json:\n            schema:\n              $ref: \"#/components/schemas/AnalysisRule\"\n        description: A partial Analysis Rule containing the desired changes.\n        required: true\n      responses:\n        \"204\":\n          description: The Analysis Rule was updated.\n      summary: Update an Analysis Rule by replacing items in its definition.\n      tags:\n        - AnalysisRule\n  \"/analysisrules/{webId}/analysisrules\":\n    get:\n      deprecated: false\n      operationId: AnalysisRule_GetAnalysisRules\n      parameters:\n        - description: The ID of the parent Analysis Rule.\n          in: path\n          name: webId\n          required: true\n          schema:\n            type: string\n        - description: The maximum number of objects to be returned per call (page size).\n            The default is 1000.\n          in: query\n          name: maxCount\n          required: false\n          schema:\n            type: integer\n        - description: The name query string used for finding Analysis Rules. The default\n            is no filter.\n          in: query\n          name: nameFilter\n          required: false\n          schema:\n            type: string\n        - description: Specifies if the search should include Analysis Rules nested further\n            than the immediate children of the searchRoot. The default is\n            'false'.\n          in: query\n          name: searchFullHierarchy\n          required: false\n          schema:\n            type: boolean\n        - description: List of fields to be returned in the response, separated by\n            semicolons (;). If this parameter is not specified, all available\n            fields will be returned.\n          in: query\n          name: selectedFields\n          required: false\n          schema:\n            type: string\n        - description: The field or property of the object used to sort the returned\n            collection. The default is 'Name'.\n          in: query\n          name: sortField\n          required: false\n          schema:\n            type: string\n        - description: The order that the returned collection is sorted. The default is\n            'Ascending'.\n          in: query\n          name: sortOrder\n          required: false\n          schema:\n            type: string\n        - description: The starting index (zero based) of the items to be returned. The\n            default is 0.\n          in: query\n          name: startIndex\n          required: false\n          schema:\n            type: integer\n        - description: Optional parameter. Used to specify the type of WebID. Useful for\n            URL brevity and other special cases. Default is the value of the\n            configuration item \"WebIDType\".\n          in: query\n          name: webIdType\n          required: false\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: A list of child Analysis Rules.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Items_AnalysisRule_\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/Items_AnalysisRule_\"\n            text/html:\n              schema:\n                $ref: \"#/components/schemas/Items_AnalysisRule_\"\n            application/x-ms-application:\n              schema:\n                $ref: \"#/components/schemas/Items_AnalysisRule_\"\n      summary: Get the child Analysis Rules of the Analysis Rule.\n      tags:\n        - AnalysisRule\n    post:\n      deprecated: false\n      operationId: AnalysisRule_CreateAnalysisRule\n      parameters:\n        - description: The ID of the parent Analysis Rule, on which to create the child\n            Analysis Rule.\n          in: path\n          name: webId\n          required: true\n          schema:\n            type: string\n        - description: Optional parameter. Used to specify the type of WebID. Useful for\n            URL brevity and other special cases. Default is the value of the\n            configuration item \"WebIDType\".\n          in: query\n          name: webIdType\n          required: false\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/AnalysisRule\"\n          text/json:\n            schema:\n              $ref: \"#/components/schemas/AnalysisRule\"\n        description: The definition of the new Analysis Rule.\n        required: true\n      responses:\n        \"201\":\n          description: The Analysis Rule was created. The response's Location header is a\n            link to the created Analysis Rule.\n      summary: Create a new Analysis Rule as a child of an existing Analysis Rule.\n      tags:\n        - AnalysisRule\n  /analysistemplates:\n    get:\n      deprecated: false\n      description: This method returns an analysis template based on the hierarchical path\n        associated with it, and should be used when a path has been received\n        from a separate part of the PI System for use in the PI Web API. Users\n        should primarily search with the WebID when available.\n      operationId: AnalysisTemplate_GetByPath\n      parameters:\n        - description: The path to the analysis template.\n          in: query\n          name: path\n          required: true\n          schema:\n            type: string\n        - description: List of fields to be returned in the response, separated by\n            semicolons (;). If this parameter is not specified, all available\n            fields will be returned.\n          in: query\n          name: selectedFields\n          required: false\n          schema:\n            type: string\n        - description: Optional parameter. Used to specify the type of WebID. Useful for\n            URL brevity and other special cases. Default is the value of the\n            configuration item \"WebIDType\".\n          in: query\n          name: webIdType\n          required: false\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: The specified analysis template.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/AnalysisTemplate\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/AnalysisTemplate\"\n            text/html:\n              schema:\n                $ref: \"#/components/schemas/AnalysisTemplate\"\n            application/x-ms-application:\n              schema:\n                $ref: \"#/components/schemas/AnalysisTemplate\"\n      summary: Retrieve an analysis template by path.\n      tags:\n        - AnalysisTemplate\n    post:\n      deprecated: false\n      operationId: AnalysisTemplate_CreateFromAnalysis\n      parameters:\n        - description: The ID of the Analysis, on which the template is created.\n          in: query\n          name: analysisWebId\n          required: true\n          schema:\n            type: string\n        - description: The name for the created template, which must be unique within the\n            database's AnalysisTemplate collection. If the name ends with an\n            asterisk (*), then a unique name will be generated based on the\n            supplied name. The default is the specified Analysis' name suffixed\n            with an asterisk (*).\n          in: query\n          name: name\n          required: false\n          schema:\n            type: string\n        - description: Optional parameter. Used to specify the type of WebID. Useful for\n            URL brevity and other special cases. Default is the value of the\n            configuration item \"WebIDType\".\n          in: query\n          name: webIdType\n          required: false\n          schema:\n            type: string\n      responses:\n        \"201\":\n          description: The Analysis Template was created. The response's Location header is\n            a link to the created Analysis Template.\n      summary: Create an Analysis template based upon a specified Analysis.\n      tags:\n        - AnalysisTemplate\n  /analysistemplates/search:\n    get:\n      deprecated: false\n      operationId: AnalysisTemplate_GetAnalysisTemplatesQuery\n      parameters:\n        - description: The ID of the asset database to use as the root of the query.\n          in: query\n          name: databaseWebId\n          required: false\n          schema:\n            type: string\n        - description: The maximum number of objects to be returned per call (page size).\n            The default is 1000.\n          in: query\n          name: maxCount\n          required: false\n          schema:\n            type: integer\n        - description: 'The query string is a list of filters used to perform an AFSearch\n            for the analyses in the asset database. An example would be: \"query=\n            Name:=MyAnalysisTemplate1*\".'\n          in: query\n          name: query\n          required: false\n          schema:\n            type: string\n        - description: List of fields to be returned in the response, separated by\n            semicolons (;). If this parameter is not specified, all available\n            fields will be returned.\n          in: query\n          name: selectedFields\n          required: false\n          schema:\n            type: string\n        - description: The starting index (zero based) of the items to be returned. The\n            default is 0.\n          in: query\n          name: startIndex\n          required: false\n          schema:\n            type: integer\n        - description: Optional parameter. Used to specify the type of WebID. Useful for\n            URL brevity and other special cases. Default is the value of the\n            configuration item \"WebIDType\".\n          in: query\n          name: webIdType\n          required: false\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: A list of analysis templates matching the specified conditions.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Items_AnalysisTemplate_\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/Items_AnalysisTemplate_\"\n            text/html:\n              schema:\n                $ref: \"#/components/schemas/Items_AnalysisTemplate_\"\n            application/x-ms-application:\n              schema:\n                $ref: \"#/components/schemas/Items_AnalysisTemplate_\"\n      summary: Retrieve analysis templates based on the specified conditions. By\n        default, returns all analysis templates.\n      tags:\n        - AnalysisTemplate\n  \"/analysistemplates/{webId}\":\n    delete:\n      deprecated: false\n      description: Deleting an analysis template will delete any analysis which was created\n        from it, unless the analysis is tied to a notification.\n      operationId: AnalysisTemplate_Delete\n      parameters:\n        - description: The ID of the analysis template to update.\n          in: path\n          name: webId\n          required: true\n          schema:\n            type: string\n      responses:\n        \"204\":\n          description: The analysis template was deleted.\n      summary: Delete an analysis template.\n      tags:\n        - AnalysisTemplate\n    get:\n      deprecated: false\n      operationId: AnalysisTemplate_Get\n      parameters:\n        - description: The ID of the analysis template.\n          in: path\n          name: webId\n          required: true\n          schema:\n            type: string\n        - description: List of fields to be returned in the response, separated by\n            semicolons (;). If this parameter is not specified, all available\n            fields will be returned.\n          in: query\n          name: selectedFields\n          required: false\n          schema:\n            type: string\n        - description: Optional parameter. Used to specify the type of WebID. Useful for\n            URL brevity and other special cases. Default is the value of the\n            configuration item \"WebIDType\".\n          in: query\n          name: webIdType\n          required: false\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: The specified analysis template.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/AnalysisTemplate\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/AnalysisTemplate\"\n            text/html:\n              schema:\n                $ref: \"#/components/schemas/AnalysisTemplate\"\n            application/x-ms-application:\n              schema:\n                $ref: \"#/components/schemas/AnalysisTemplate\"\n      summary: Retrieve an analysis template.\n      tags:\n        - AnalysisTemplate\n    patch:\n      deprecated: false\n      operationId: AnalysisTemplate_Update\n      parameters:\n        - description: The ID of the analysis template to update.\n          in: path\n          name: webId\n          required: true\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/AnalysisTemplate\"\n          text/json:\n            schema:\n              $ref: \"#/components/schemas/AnalysisTemplate\"\n        description: A partial analysis template containing the desired changes.\n        required: true\n      responses:\n        \"204\":\n          description: The analysis template was updated.\n      summary: Update an analysis template by replacing items in its definition.\n      tags:\n        - AnalysisTemplate\n  \"/analysistemplates/{webId}/categories\":\n    get:\n      deprecated: false\n      operationId: AnalysisTemplate_GetCategories\n      parameters:\n        - description: The ID of the analysis template.\n          in: path\n          name: webId\n          required: true\n          schema:\n            type: string\n        - description: List of fields to be returned in the response, separated by\n            semicolons (;). If this parameter is not specified, all available\n            fields will be returned.\n          in: query\n          name: selectedFields\n          required: false\n          schema:\n            type: string\n        - description: Optional parameter. Used to specify the type of WebID. Useful for\n            URL brevity and other special cases. Default is the value of the\n            configuration item \"WebIDType\".\n          in: query\n          name: webIdType\n          required: false\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: A list of categories.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Items_AnalysisCategory_\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/Items_AnalysisCategory_\"\n            text/html:\n              schema:\n                $ref: \"#/components/schemas/Items_AnalysisCategory_\"\n            application/x-ms-application:\n              schema:\n                $ref: \"#/components/schemas/Items_AnalysisCategory_\"\n      summary: Get an analysis template's categories.\n      tags:\n        - AnalysisTemplate\n  \"/analysistemplates/{webId}/security\":\n    get:\n      deprecated: false\n      operationId: AnalysisTemplate_GetSecurity\n      parameters:\n        - description: The ID of the analysis template for the security to be checked.\n          in: path\n          name: webId\n          required: true\n          schema:\n            type: string\n        - description: The user identity for the security information to be checked.\n            Multiple security identities may be specified with multiple\n            instances of the parameter. If the parameter is not specified, only\n            the current user's security rights will be returned.\n          in: query\n          name: userIdentity\n          required: true\n          explode: true\n          schema:\n            type: array\n            items:\n              type: string\n        - description: Indicates if the security cache should be refreshed before getting\n            security information. The default is 'false'.\n          in: query\n          name: forceRefresh\n          required: false\n          schema:\n            type: boolean\n        - description: List of fields to be returned in the response, separated by\n            semicolons (;). If this parameter is not specified, all available\n            fields will be returned.\n          in: query\n          name: selectedFields\n          required: false\n          schema:\n            type: string\n        - description: Optional parameter. Used to specify the type of WebID. Useful for\n            URL brevity and other special cases. Default is the value of the\n            configuration item \"WebIDType\".\n          in: query\n          name: webIdType\n          required: false\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: Security rights.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Items_SecurityRights_\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/Items_SecurityRights_\"\n            text/html:\n              schema:\n                $ref: \"#/components/schemas/Items_SecurityRights_\"\n            application/x-ms-application:\n              schema:\n                $ref: \"#/components/schemas/Items_SecurityRights_\"\n        \"400\":\n          description: An invalid or local account is specified as the user identity.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Errors\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/Errors\"\n            text/html:\n              schema:\n                $ref: \"#/components/schemas/Errors\"\n            application/x-ms-application:\n              schema:\n                $ref: \"#/components/schemas/Errors\"\n        \"401\":\n          description: Access denied for the specified user identity.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Errors\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/Errors\"\n            text/html:\n              schema:\n                $ref: \"#/components/schemas/Errors\"\n            application/x-ms-application:\n              schema:\n                $ref: \"#/components/schemas/Errors\"\n        \"409\":\n          description: Unsupported when using Anonymous authentication method.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Errors\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/Errors\"\n            text/html:\n              schema:\n                $ref: \"#/components/schemas/Errors\"\n            application/x-ms-application:\n              schema:\n                $ref: \"#/components/schemas/Errors\"\n        \"502\":\n          description: Failed to retrieve the specified user identity.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Errors\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/Errors\"\n            text/html:\n              schema:\n                $ref: \"#/components/schemas/Errors\"\n            application/x-ms-application:\n              schema:\n                $ref: \"#/components/schemas/Errors\"\n      summary: Get the security information of the specified security item associated\n        with the analysis template for a specified user.\n      tags:\n        - AnalysisTemplate\n  \"/analysistemplates/{webId}/securityentries\":\n    get:\n      deprecated: false\n      operationId: AnalysisTemplate_GetSecurityEntries\n      parameters:\n        - description: The ID of the analysis template.\n          in: path\n          name: webId\n          required: true\n          schema:\n            type: string\n        - description: The name query string used for filtering security entries. The\n            default is no filter.\n          in: query\n          name: nameFilter\n          required: false\n          schema:\n            type: string\n        - description: List of fields to be returned in the response, separated by\n            semicolons (;). If this parameter is not specified, all available\n            fields will be returned.\n          in: query\n          name: selectedFields\n          required: false\n          schema:\n            type: string\n        - description: Optional parameter. Used to specify the type of WebID. Useful for\n            URL brevity and other special cases. Default is the value of the\n            configuration item \"WebIDType\".\n          in: query\n          name: webIdType\n          required: false\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: A list of security entries matching the specified condition.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Items_SecurityEntry_\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/Items_SecurityEntry_\"\n            text/html:\n              schema:\n                $ref: \"#/components/schemas/Items_SecurityEntry_\"\n            application/x-ms-application:\n              schema:\n                $ref: \"#/components/schemas/Items_SecurityEntry_\"\n      summary: Retrieve the security entries associated with the analysis template\n        based on the specified criteria. By default, all security entries for\n        this analysis template are returned.\n      tags:\n        - AnalysisTemplate\n    post:\n      deprecated: false\n      operationId: AnalysisTemplate_CreateSecurityEntry\n      parameters:\n        - description: The ID of the analysis template, where the security entry will be\n            created.\n          in: path\n          name: webId\n          required: true\n          schema:\n            type: string\n        - description: If false, the new access permissions are only applied to the\n            associated object. If true, the access permissions of children with\n            any parent-child reference types will change when the permissions on\n            the primary parent change.\n          in: query\n          name: applyToChildren\n          required: false\n          schema:\n            type: boolean\n        - description: Optional parameter. Used to specify the type of WebID. Useful for\n            URL brevity and other special cases. Default is the value of the\n            configuration item \"WebIDType\".\n          in: query\n          name: webIdType\n          required: false\n          schema:\n            type: string\n      requestBody:\n        $ref: \"#/components/requestBodies/SecurityEntry\"\n      responses:\n        \"201\":\n          description: The security entry was created. The response's Location header is a\n            link to the security entry.\n      summary: Create a security entry owned by the analysis template.\n      tags:\n        - AnalysisTemplate\n  \"/analysistemplates/{webId}/securityentries/{name}\":\n    delete:\n      deprecated: false\n      operationId: AnalysisTemplate_DeleteSecurityEntry\n      parameters:\n        - description: The name of the security entry. For every backslash character (\\) in\n            the security entry name, replace with asterisk (*). As an example,\n            use domain*username instead of domain\\username.\n          in: path\n          name: name\n          required: true\n          schema:\n            type: string\n        - description: The ID of the analysis template, where the security entry will be\n            deleted.\n          in: path\n          name: webId\n          required: true\n          schema:\n            type: string\n        - description: If false, the new access permissions are only applied to the\n            associated object. If true, the access permissions of children with\n            any parent-child reference types will change when the permissions on\n            the primary parent change.\n          in: query\n          name: applyToChildren\n          required: false\n          schema:\n            type: boolean\n      responses:\n        \"204\":\n          description: The security entry was deleted.\n      summary: Delete a security entry owned by the analysis template.\n      tags:\n        - AnalysisTemplate\n    get:\n      deprecated: false\n      operationId: AnalysisTemplate_GetSecurityEntryByName\n      parameters:\n        - description: The name of the security entry. For every backslash character (\\) in\n            the security entry name, replace with asterisk (*). As an example,\n            use domain*username instead of domain\\username.\n          in: path\n          name: name\n          required: true\n          schema:\n            type: string\n        - description: The ID of the analysis template.\n          in: path\n          name: webId\n          required: true\n          schema:\n            type: string\n        - description: List of fields to be returned in the response, separated by\n            semicolons (;). If this parameter is not specified, all available\n            fields will be returned.\n          in: query\n          name: selectedFields\n          required: false\n          schema:\n            type: string\n        - description: Optional parameter. Used to specify the type of WebID. Useful for\n            URL brevity and other special cases. Default is the value of the\n            configuration item \"WebIDType\".\n          in: query\n          name: webIdType\n          required: false\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: The security entry matching the specified condition.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/SecurityEntry\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/SecurityEntry\"\n            text/html:\n              schema:\n                $ref: \"#/components/schemas/SecurityEntry\"\n            application/x-ms-application:\n              schema:\n                $ref: \"#/components/schemas/SecurityEntry\"\n        \"404\":\n          description: The security entry with the specified name is not found.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Errors\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/Errors\"\n            text/html:\n              schema:\n                $ref: \"#/components/schemas/Errors\"\n            application/x-ms-application:\n              schema:\n                $ref: \"#/components/schemas/Errors\"\n      summary: Retrieve the security entry associated with the analysis template with\n        the specified name.\n      tags:\n        - AnalysisTemplate\n    put:\n      deprecated: false\n      operationId: AnalysisTemplate_UpdateSecurityEntry\n      parameters:\n        - description: The name of the security entry.\n          in: path\n          name: name\n          required: true\n          schema:\n            type: string\n        - description: The ID of the analysis template, where the security entry will be\n            updated.\n          in: path\n          name: webId\n          required: true\n          schema:\n            type: string\n        - description: If false, the new access permissions are only applied to the\n            associated object. If true, the access permissions of children with\n            any parent-child reference types will change when the permissions on\n            the primary parent change.\n          in: query\n          name: applyToChildren\n          required: false\n          schema:\n            type: boolean\n      requestBody:\n        $ref: \"#/components/requestBodies/SecurityEntry2\"\n      responses:\n        \"204\":\n          description: The security entry was updated.\n      summary: Update a security entry owned by the analysis template.\n      tags:\n        - AnalysisTemplate\n  /assetdatabases:\n    get:\n      deprecated: false\n      description: This method returns an asset database based on the hierarchical path\n        associated with it, and should be used when a path has been received\n        from a separate part of the PI System for use in the PI Web API. Users\n        should primarily search with the WebID when available.\n      operationId: AssetDatabase_GetByPath\n      parameters:\n        - description: The path to the database.\n          in: query\n          name: path\n          required: true\n          schema:\n            type: string\n        - description: List of fields to be returned in the response, separated by\n            semicolons (;). If this parameter is not specified, all available\n            fields will be returned.\n          in: query\n          name: selectedFields\n          required: false\n          schema:\n            type: string\n        - description: Optional parameter. Used to specify the type of WebID. Useful for\n            URL brevity and other special cases. Default is the value of the\n            configuration item \"WebIDType\".\n          in: query\n          name: webIdType\n          required: false\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: The specified database.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/AssetDatabase\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/AssetDatabase\"\n            text/html:\n              schema:\n                $ref: \"#/components/schemas/AssetDatabase\"\n            application/x-ms-application:\n              schema:\n                $ref: \"#/components/schemas/AssetDatabase\"\n      summary: Retrieve an Asset Database by path.\n      tags:\n        - AssetDatabase\n  \"/assetdatabases/{webId}\":\n    delete:\n      deprecated: false\n      operationId: AssetDatabase_Delete\n      parameters:\n        - description: The ID of the database.\n          in: path\n          name: webId\n          required: true\n          schema:\n            type: string\n      responses:\n        \"204\":\n          description: The database was deleted.\n      summary: Delete an asset database.\n      tags:\n        - AssetDatabase\n    get:\n      deprecated: false\n      operationId: AssetDatabase_Get\n      parameters:\n        - description: The ID of the database.\n          in: path\n          name: webId\n          required: true\n          schema:\n            type: string\n        - description: List of fields to be returned in the response, separated by\n            semicolons (;). If this parameter is not specified, all available\n            fields will be returned.\n          in: query\n          name: selectedFields\n          required: false\n          schema:\n            type: string\n        - description: Optional parameter. Used to specify the type of WebID. Useful for\n            URL brevity and other special cases. Default is the value of the\n            configuration item \"WebIDType\".\n          in: query\n          name: webIdType\n          required: false\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: The specified database.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/AssetDatabase\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/AssetDatabase\"\n            text/html:\n              schema:\n                $ref: \"#/components/schemas/AssetDatabase\"\n            application/x-ms-application:\n              schema:\n                $ref: \"#/components/schemas/AssetDatabase\"\n      summary: Retrieve an Asset Database.\n      tags:\n        - AssetDatabase\n    patch:\n      deprecated: false\n      operationId: AssetDatabase_Update\n      parameters:\n        - description: The ID of the database.\n          in: path\n          name: webId\n          required: true\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/AssetDatabase\"\n          text/json:\n            schema:\n              $ref: \"#/components/schemas/AssetDatabase\"\n        description: A partial database containing the desired changes.\n        required: true\n      responses:\n        \"204\":\n          description: The database was updated.\n      summary: Update an asset database by replacing items in its definition.\n      tags:\n        - AssetDatabase\n  \"/assetdatabases/{webId}/analyses\":\n    get:\n      deprecated: false\n      description: Users can search for the analyses based on specific search parameters.\n        If no parameters are specified in the search, the default values for\n        each parameter will be used and will return the analyses that match the\n        default search.\n      operationId: AssetDatabase_FindAnalyses\n      parameters:\n        - description: The ID of the database to search for the analyses.\n          in: path\n          name: webId\n          required: true\n          schema:\n            type: string\n        - description: Specifies which of the object's properties are searched. Multiple\n            search fields may be specified with multiple instances of the\n            parameter. The default is 'Name'.\n          in: query\n          name: field\n          required: true\n          explode: true\n          schema:\n            type: array\n            items:\n              type: string\n        - description: The maximum number of objects to be returned per call (page size).\n            The default is 1000.\n          in: query\n          name: maxCount\n          required: false\n          schema:\n            type: integer\n        - description: The query string used for finding analyses. The default is null.\n          in: query\n          name: query\n          required: false\n          schema:\n            type: string\n        - description: List of fields to be returned in the response, separated by\n            semicolons (;). If this parameter is not specified, all available\n            fields will be returned.\n          in: query\n          name: selectedFields\n          required: false\n          schema:\n            type: string\n        - description: The field or property of the object used to sort the returned\n            collection. The default is 'Name'.\n          in: query\n          name: sortField\n          required: false\n          schema:\n            type: string\n        - description: The order that the returned collection is sorted. The default is\n            'Ascending'.\n          in: query\n          name: sortOrder\n          required: false\n          schema:\n            type: string\n        - description: The starting index (zero based) of the items to be returned. The\n            default is 0.\n          in: query\n          name: startIndex\n          required: false\n          schema:\n            type: integer\n        - description: Optional parameter. Used to specify the type of WebID. Useful for\n            URL brevity and other special cases. Default is the value of the\n            configuration item \"WebIDType\".\n          in: query\n          name: webIdType\n          required: false\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: A list of analyses matching the specified conditions.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Items_Analysis_\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/Items_Analysis_\"\n            text/html:\n              schema:\n                $ref: \"#/components/schemas/Items_Analysis_\"\n            application/x-ms-application:\n              schema:\n                $ref: \"#/components/schemas/Items_Analysis_\"\n      summary: Retrieve analyses based on the specified conditions.\n      tags:\n        - AssetDatabase\n  \"/assetdatabases/{webId}/analysiscategories\":\n    get:\n      deprecated: false\n      operationId: AssetDatabase_GetAnalysisCategories\n      parameters:\n        - description: The ID of the database.\n          in: path\n          name: webId\n          required: true\n          schema:\n            type: string\n        - description: List of fields to be returned in the response, separated by\n            semicolons (;). If this parameter is not specified, all available\n            fields will be returned.\n          in: query\n          name: selectedFields\n          required: false\n          schema:\n            type: string\n        - description: Optional parameter. Used to specify the type of WebID. Useful for\n            URL brevity and other special cases. Default is the value of the\n            configuration item \"WebIDType\".\n          in: query\n          name: webIdType\n          required: false\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: The analysis categories that exist in the database.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Items_AnalysisCategory_\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/Items_AnalysisCategory_\"\n            text/html:\n              schema:\n                $ref: \"#/components/schemas/Items_AnalysisCategory_\"\n            application/x-ms-application:\n              schema:\n                $ref: \"#/components/schemas/Items_AnalysisCategory_\"\n      summary: Retrieve analysis categories for a given Asset Database.\n      tags:\n        - AssetDatabase\n    post:\n      deprecated: false\n      operationId: AssetDatabase_CreateAnalysisCategory\n      parameters:\n        - description: The ID of the database in which to create the analysis category.\n          in: path\n          name: webId\n          required: true\n          schema:\n            type: string\n        - description: Optional parameter. Used to specify the type of WebID. Useful for\n            URL brevity and other special cases. Default is the value of the\n            configuration item \"WebIDType\".\n          in: query\n          name: webIdType\n          required: false\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/AnalysisCategory\"\n          text/json:\n            schema:\n              $ref: \"#/components/schemas/AnalysisCategory\"\n        description: The new analysis category definition.\n        required: true\n      responses:\n        \"201\":\n          description: The analysis category was created. The response's Location header is\n            a link to the analysis category.\n      summary: Create an analysis category at the Asset Database root.\n      tags:\n        - AssetDatabase\n  \"/assetdatabases/{webId}/analysistemplates\":\n    get:\n      deprecated: false\n      description: Users can search for the analysis templates based on specific search\n        parameters. If no parameters are specified in the search, the default\n        values for each parameter will be used and will return the templates\n        that match the default search.\n      operationId: AssetDatabase_GetAnalysisTemplates\n      parameters:\n        - description: The ID of the database to search.\n          in: path\n          name: webId\n          required: true\n          schema:\n            type: string\n        - description: Specifies which of the object's properties are searched. Multiple\n            search fields may be specified with multiple instances of the\n            parameter. The default is 'Name'.\n          in: query\n          name: field\n          required: true\n          explode: true\n          schema:\n            type: array\n            items:\n              type: string\n        - description: The maximum number of objects to be returned per call (page size).\n            The default is 1000.\n          in: query\n          name: maxCount\n          required: false\n          schema:\n            type: integer\n        - description: The query string used for finding objects. The default is no query\n            string.\n          in: query\n          name: query\n          required: false\n          schema:\n            type: string\n        - description: List of fields to be returned in the response, separated by\n            semicolons (;). If this parameter is not specified, all available\n            fields will be returned.\n          in: query\n          name: selectedFields\n          required: false\n          schema:\n            type: string\n        - description: The field or property of the object used to sort the returned\n            collection. The default is 'Name'.\n          in: query\n          name: sortField\n          required: false\n          schema:\n            type: string\n        - description: The order that the returned collection is sorted. The default is\n            'Ascending'.\n          in: query\n          name: sortOrder\n          required: false\n          schema:\n            type: string\n        - description: Optional parameter. Used to specify the type of WebID. Useful for\n            URL brevity and other special cases. Default is the value of the\n            configuration item \"WebIDType\".\n          in: query\n          name: webIdType\n          required: false\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: A list of analysis templates matching the specified condition.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Items_AnalysisTemplate_\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/Items_AnalysisTemplate_\"\n            text/html:\n              schema:\n                $ref: \"#/components/schemas/Items_AnalysisTemplate_\"\n            application/x-ms-application:\n              schema:\n                $ref: \"#/components/schemas/Items_AnalysisTemplate_\"\n      summary: Retrieve analysis templates based on the specified criteria. By default,\n        all analysis templates in the specified Asset Database are returned.\n      tags:\n        - AssetDatabase\n    post:\n      deprecated: false\n      description: Analyses that are based on an analysis template will inherit\n        characteristics defined in the template.\n      operationId: AssetDatabase_CreateAnalysisTemplate\n      parameters:\n        - description: The ID of the database in which to create the analysis template.\n          in: path\n          name: webId\n          required: true\n          schema:\n            type: string\n        - description: Optional parameter. Used to specify the type of WebID. Useful for\n            URL brevity and other special cases. Default is the value of the\n            configuration item \"WebIDType\".\n          in: query\n          name: webIdType\n          required: false\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/AnalysisTemplate\"\n          text/json:\n            schema:\n              $ref: \"#/components/schemas/AnalysisTemplate\"\n        description: The new analysis template definition.\n        required: true\n      responses:\n        \"201\":\n          description: The analysis template was created. The response's Location header is\n            a link to the created template.\n      summary: Create an analysis template at the Asset Database root.\n      tags:\n        - AssetDatabase\n  \"/assetdatabases/{webId}/attributecategories\":\n    get:\n      deprecated: false\n      operationId: AssetDatabase_GetAttributeCategories\n      parameters:\n        - description: The ID of the database.\n          in: path\n          name: webId\n          required: true\n          schema:\n            type: string\n        - description: List of fields to be returned in the response, separated by\n            semicolons (;). If this parameter is not specified, all available\n            fields will be returned.\n          in: query\n          name: selectedFields\n          required: false\n          schema:\n            type: string\n        - description: Optional parameter. Used to specify the type of WebID. Useful for\n            URL brevity and other special cases. Default is the value of the\n            configuration item \"WebIDType\".\n          in: query\n          name: webIdType\n          required: false\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: The attribute categories that exist in the database.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Items_AttributeCategory_\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/Items_AttributeCategory_\"\n            text/html:\n              schema:\n                $ref: \"#/components/schemas/Items_AttributeCategory_\"\n            application/x-ms-application:\n              schema:\n                $ref: \"#/components/schemas/Items_AttributeCategory_\"\n      summary: Retrieve attribute categories for a given Asset Database.\n      tags:\n        - AssetDatabase\n    post:\n      deprecated: false\n      operationId: AssetDatabase_CreateAttributeCategory\n      parameters:\n        - description: The ID of the database in which to create the attribute category.\n          in: path\n          name: webId\n          required: true\n          schema:\n            type: string\n        - description: Optional parameter. Used to specify the type of WebID. Useful for\n            URL brevity and other special cases. Default is the value of the\n            configuration item \"WebIDType\".\n          in: query\n          name: webIdType\n          required: false\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/AttributeCategory\"\n          text/json:\n            schema:\n              $ref: \"#/components/schemas/AttributeCategory\"\n        description: The new attribute category definition.\n        required: true\n      responses:\n        \"201\":\n          description: The attribute category was created. The response's Location header\n            is a link to the attribute category.\n      summary: Create an attribute category at the Asset Database root.\n      tags:\n        - AssetDatabase\n  \"/assetdatabases/{webId}/elementattributes\":\n    get:\n      deprecated: false\n      operationId: AssetDatabase_FindElementAttributes\n      parameters:\n        - description: The ID of the asset database to use as the root of the search.\n          in: path\n          name: webId\n          required: true\n          schema:\n            type: string\n        - description: Associated values to return in the response, separated by semicolons\n            (;). This call supports DataReference to return attributes with data\n            references. If this parameter is not specified, DataReference values\n            are not returned.\n          in: query\n          name: associations\n          required: false\n          schema:\n            type: string\n        - description: Specify that returned attributes must have this category. The\n            default is no filter.\n          in: query\n          name: attributeCategory\n          required: false\n          schema:\n            type: string\n        - description: The attribute description filter string used for finding objects.\n            Only the first 440 characters of the description will be searched.\n            For Asset Servers older than 2.7, a 400 status code (Bad Request)\n            will be returned if this parameter is specified. The default is no\n            filter.\n          in: query\n          name: attributeDescriptionFilter\n          required: false\n          schema:\n            type: string\n        - description: The attribute name filter string used for finding objects. The\n            default is no filter.\n          in: query\n          name: attributeNameFilter\n          required: false\n          schema:\n            type: string\n        - description: Specify that returned attributes' value type must be this value\n            type. The default is no filter.\n          in: query\n          name: attributeType\n          required: false\n          schema:\n            type: string\n        - description: Specify that the owner of the returned attributes must have this\n            category. The default is no filter.\n          in: query\n          name: elementCategory\n          required: false\n          schema:\n            type: string\n        - description: The element description filter string used for finding objects. Only\n            the first 440 characters of the description will be searched. For\n            Asset Servers older than 2.7, a 400 status code (Bad Request) will\n            be returned if this parameter is specified. The default is no\n            filter.\n          in: query\n          name: elementDescriptionFilter\n          required: false\n          schema:\n            type: string\n        - description: The element name filter string used for finding objects. The default\n            is no filter.\n          in: query\n          name: elementNameFilter\n          required: false\n          schema:\n            type: string\n        - description: Specify that the owner of the returned attributes must have this\n            template or a template derived from this template. The default is no\n            filter.\n          in: query\n          name: elementTemplate\n          required: false\n          schema:\n            type: string\n        - description: Specify that the element of the returned attributes must have this\n            AFElementType. The default is no filter.\n          in: query\n          name: elementType\n          required: false\n          schema:\n            type: string\n        - description: The maximum number of objects to be returned (the page size). The\n            default is 1000.\n          in: query\n          name: maxCount\n          required: false\n          schema:\n            type: integer\n        - description: Specifies if the search should include objects nested further than\n            immediate children of the given resource. The default is 'false'.\n          in: query\n          name: searchFullHierarchy\n          required: false\n          schema:\n            type: boolean\n        - description: List of fields to be returned in the response, separated by\n            semicolons (;). If this parameter is not specified, all available\n            fields will be returned.\n          in: query\n          name: selectedFields\n          required: false\n          schema:\n            type: string\n        - description: The field or property of the object used to sort the returned\n            collection. The default is 'Name'.\n          in: query\n          name: sortField\n          required: false\n          schema:\n            type: string\n        - description: The order that the returned collection is sorted. The default is\n            'Ascending'.\n          in: query\n          name: sortOrder\n          required: false\n          schema:\n            type: string\n        - description: The starting index (zero based) of the items to be returned. The\n            default is 0.\n          in: query\n          name: startIndex\n          required: false\n          schema:\n            type: integer\n        - description: Optional parameter. Used to specify the type of WebID. Useful for\n            URL brevity and other special cases. Default is the value of the\n            configuration item \"WebIDType\".\n          in: query\n          name: webIdType\n          required: false\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: a list of matching attributes.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Items_Attribute_\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/Items_Attribute_\"\n            text/html:\n              schema:\n                $ref: \"#/components/schemas/Items_Attribute_\"\n            application/x-ms-application:\n              schema:\n                $ref: \"#/components/schemas/Items_Attribute_\"\n      summary: Retrieves a list of element attributes matching the specified filters\n        from the specified asset database.\n      tags:\n        - AssetDatabase\n  \"/assetdatabases/{webId}/elementcategories\":\n    get:\n      deprecated: false\n      operationId: AssetDatabase_GetElementCategories\n      parameters:\n        - description: The ID of the database.\n          in: path\n          name: webId\n          required: true\n          schema:\n            type: string\n        - description: List of fields to be returned in the response, separated by\n            semicolons (;). If this parameter is not specified, all available\n            fields will be returned.\n          in: query\n          name: selectedFields\n          required: false\n          schema:\n            type: string\n        - description: Optional parameter. Used to specify the type of WebID. Useful for\n            URL brevity and other special cases. Default is the value of the\n            configuration item \"WebIDType\".\n          in: query\n          name: webIdType\n          required: false\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: The element categories that exist in the database.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Items_ElementCategory_\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/Items_ElementCategory_\"\n            text/html:\n              schema:\n                $ref: \"#/components/schemas/Items_ElementCategory_\"\n            application/x-ms-application:\n              schema:\n                $ref: \"#/components/schemas/Items_ElementCategory_\"\n      summary: Retrieve element categories for a given Asset Database.\n      tags:\n        - AssetDatabase\n    post:\n      deprecated: false\n      operationId: AssetDatabase_CreateElementCategory\n      parameters:\n        - description: The ID of the database in which to create the element category.\n          in: path\n          name: webId\n          required: true\n          schema:\n            type: string\n        - description: Optional parameter. Used to specify the type of WebID. Useful for\n            URL brevity and other special cases. Default is the value of the\n            configuration item \"WebIDType\".\n          in: query\n          name: webIdType\n          required: false\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/ElementCategory\"\n          text/json:\n            schema:\n              $ref: \"#/components/schemas/ElementCategory\"\n        description: The new element category definition.\n        required: true\n      responses:\n        \"201\":\n          description: The element category was created. The response's Location header is\n            a link to the element category.\n      summary: Create an element category at the Asset Database root.\n      tags:\n        - AssetDatabase\n  \"/assetdatabases/{webId}/elements\":\n    get:\n      deprecated: false\n      description: Users can search for the elements based on specific search parameters.\n        If no parameters are specified in the search, the default values for\n        each parameter will be used and will return the elements that match the\n        default search.\n      operationId: AssetDatabase_GetElements\n      parameters:\n        - description: The ID of the database to use as the root of the search.\n          in: path\n          name: webId\n          required: true\n          schema:\n            type: string\n        - description: Associated values to return in the response, separated by semicolons\n            (;). This call supports Paths to return all paths to the element. If\n            this parameter is not specified, paths are not returned.\n          in: query\n          name: associations\n          required: false\n          schema:\n            type: string\n        - description: Specify that returned elements must have this category. The default\n            is no category filter.\n          in: query\n          name: categoryName\n          required: false\n          schema:\n            type: string\n        - description: Specify that returned elements must have this description. The\n            default is no description filter.\n          in: query\n          name: descriptionFilter\n          required: false\n          schema:\n            type: string\n        - description: Specify that returned elements must have this type. The default type\n            is 'Any'.\n          in: query\n          name: elementType\n          required: false\n          schema:\n            type: string\n        - description: The maximum number of objects to be returned per call (page size).\n            The default is 1000.\n          in: query\n          name: maxCount\n          required: false\n          schema:\n            type: integer\n        - description: The name query string used for finding objects. The default is no\n            filter.\n          in: query\n          name: nameFilter\n          required: false\n          schema:\n            type: string\n        - description: Specifies if the search should include objects nested further than\n            the immediate children of the searchRoot. The default is 'false'.\n          in: query\n          name: searchFullHierarchy\n          required: false\n          schema:\n            type: boolean\n        - description: List of fields to be returned in the response, separated by\n            semicolons (;). If this parameter is not specified, all available\n            fields will be returned.\n          in: query\n          name: selectedFields\n          required: false\n          schema:\n            type: string\n        - description: The field or property of the object used to sort the returned\n            collection. The default is 'Name'.\n          in: query\n          name: sortField\n          required: false\n          schema:\n            type: string\n        - description: The order that the returned collection is sorted. The default is\n            'Ascending'.\n          in: query\n          name: sortOrder\n          required: false\n          schema:\n            type: string\n        - description: The starting index (zero based) of the items to be returned. The\n            default is 0.\n          in: query\n          name: startIndex\n          required: false\n          schema:\n            type: integer\n        - description: Specify that returned elements must have this template or a template\n            derived from this template. The default is no template filter.\n          in: query\n          name: templateName\n          required: false\n          schema:\n            type: string\n        - description: Optional parameter. Used to specify the type of WebID. Useful for\n            URL brevity and other special cases. Default is the value of the\n            configuration item \"WebIDType\".\n          in: query\n          name: webIdType\n          required: false\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: A list of elements matching the specified conditions.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Items_Element_\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/Items_Element_\"\n            text/html:\n              schema:\n                $ref: \"#/components/schemas/Items_Element_\"\n            application/x-ms-application:\n              schema:\n                $ref: \"#/components/schemas/Items_Element_\"\n      summary: Retrieve elements based on the specified conditions. By default, this\n        method selects immediate children of the specified asset database.\n      tags:\n        - AssetDatabase\n    post:\n      deprecated: false\n      operationId: AssetDatabase_CreateElement\n      parameters:\n        - description: The ID of the asset database on which to create the element.\n          in: path\n          name: webId\n          required: true\n          schema:\n            type: string\n        - description: Optional parameter. Used to specify the type of WebID. Useful for\n            URL brevity and other special cases. Default is the value of the\n            configuration item \"WebIDType\".\n          in: query\n          name: webIdType\n          required: false\n          schema:\n            type: string\n      requestBody:\n        $ref: \"#/components/requestBodies/Element\"\n      responses:\n        \"201\":\n          description: The element was created. The response's Location header is a link to\n            the element.\n      summary: Create a child element.\n      tags:\n        - AssetDatabase\n  \"/assetdatabases/{webId}/elementtemplates\":\n    get:\n      deprecated: false\n      description: Users can search for the element and event frame template based on\n        specific search parameters. If no parameters are specified in the\n        search, the default values for each parameter will be used and will\n        return the templates that match the default search.\n      operationId: AssetDatabase_GetElementTemplates\n      parameters:\n        - description: The ID of the database to search.\n          in: path\n          name: webId\n          required: true\n          schema:\n            type: string\n        - description: Specifies which of the object's properties are searched. Multiple\n            search fields may be specified with multiple instances of the\n            parameter. The default is 'Name'.\n          in: query\n          name: field\n          required: true\n          explode: true\n          schema:\n            type: array\n            items:\n              type: string\n        - description: The maximum number of objects to be returned per call (page size).\n            The default is 1000.\n          in: query\n          name: maxCount\n          required: false\n          schema:\n            type: integer\n        - description: The query string used for finding objects. The default is no query\n            string.\n          in: query\n          name: query\n          required: false\n          schema:\n            type: string\n        - description: List of fields to be returned in the response, separated by\n            semicolons (;). If this parameter is not specified, all available\n            fields will be returned.\n          in: query\n          name: selectedFields\n          required: false\n          schema:\n            type: string\n        - description: The field or property of the object used to sort the returned\n            collection. The default is 'Name'.\n          in: query\n          name: sortField\n          required: false\n          schema:\n            type: string\n        - description: The order that the returned collection is sorted. The default is\n            'Ascending'.\n          in: query\n          name: sortOrder\n          required: false\n          schema:\n            type: string\n        - description: Optional parameter. Used to specify the type of WebID. Useful for\n            URL brevity and other special cases. Default is the value of the\n            configuration item \"WebIDType\".\n          in: query\n          name: webIdType\n          required: false\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: A list of element templates matching the specified condition.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Items_ElementTemplate_\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/Items_ElementTemplate_\"\n            text/html:\n              schema:\n                $ref: \"#/components/schemas/Items_ElementTemplate_\"\n            application/x-ms-application:\n              schema:\n                $ref: \"#/components/schemas/Items_ElementTemplate_\"\n      summary: Retrieve element templates based on the specified criteria. Only\n        templates of instance type \"Element\" and \"EventFrame\" are returned. By\n        default, all element and event frame templates in the specified Asset\n        Database are returned.\n      tags:\n        - AssetDatabase\n    post:\n      deprecated: false\n      description: Elements and event frames that are based on an element template will\n        inherit characteristics defined in the template.\n      operationId: AssetDatabase_CreateElementTemplate\n      parameters:\n        - description: The ID of the database in which to create the element template.\n          in: path\n          name: webId\n          required: true\n          schema:\n            type: string\n        - description: Optional parameter. Used to specify the type of WebID. Useful for\n            URL brevity and other special cases. Default is the value of the\n            configuration item \"WebIDType\".\n          in: query\n          name: webIdType\n          required: false\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/ElementTemplate\"\n          text/json:\n            schema:\n              $ref: \"#/components/schemas/ElementTemplate\"\n        description: The new element template definition.\n        required: true\n      responses:\n        \"201\":\n          description: The element template was created. The response's Location header is\n            a link to the created template.\n      summary: Create a template at the Asset Database root. Specify InstanceType of\n        \"Element\" or \"EventFrame\" to create element or event frame template\n        respectively. Only these two types of templates can be created.\n      tags:\n        - AssetDatabase\n  \"/assetdatabases/{webId}/enumerationsets\":\n    get:\n      deprecated: false\n      operationId: AssetDatabase_GetEnumerationSets\n      parameters:\n        - description: The ID of the database.\n          in: path\n          name: webId\n          required: true\n          schema:\n            type: string\n        - description: List of fields to be returned in the response, separated by\n            semicolons (;). If this parameter is not specified, all available\n            fields will be returned.\n          in: query\n          name: selectedFields\n          required: false\n          schema:\n            type: string\n        - description: Optional parameter. Used to specify the type of WebID. Useful for\n            URL brevity and other special cases. Default is the value of the\n            configuration item \"WebIDType\".\n          in: query\n          name: webIdType\n          required: false\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: The specified enumeration sets.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Items_EnumerationSet_\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/Items_EnumerationSet_\"\n            text/html:\n              schema:\n                $ref: \"#/components/schemas/Items_EnumerationSet_\"\n            application/x-ms-application:\n              schema:\n                $ref: \"#/components/schemas/Items_EnumerationSet_\"\n      summary: Retrieve enumeration sets for given asset database.\n      tags:\n        - AssetDatabase\n    post:\n      deprecated: false\n      operationId: AssetDatabase_CreateEnumerationSet\n      parameters:\n        - description: The ID of the database in which to create the enumeration set.\n          in: path\n          name: webId\n          required: true\n          schema:\n            type: string\n        - description: Optional parameter. Used to specify the type of WebID. Useful for\n            URL brevity and other special cases. Default is the value of the\n            configuration item \"WebIDType\".\n          in: query\n          name: webIdType\n          required: false\n          schema:\n            type: string\n      requestBody:\n        $ref: \"#/components/requestBodies/EnumerationSet\"\n      responses:\n        \"201\":\n          description: The enumeration set was created. The response's Location header is a\n            link to the created enumeration set.\n      summary: Create an enumeration set at the Asset Database.\n      tags:\n        - AssetDatabase\n  \"/assetdatabases/{webId}/eventframeattributes\":\n    get:\n      deprecated: false\n      operationId: AssetDatabase_FindEventFrameAttributes\n      parameters:\n        - description: The ID of the asset database to use as the root of the search.\n          in: path\n          name: webId\n          required: true\n          schema:\n            type: string\n        - description: Associated values to return in the response, separated by semicolons\n            (;). This call supports DataReference to return attributes with data\n            references. If this parameter is not specified, DataReference values\n            are not returned.\n          in: query\n          name: associations\n          required: false\n          schema:\n            type: string\n        - description: Specify that returned attributes must have this category. The\n            default is no filter.\n          in: query\n          name: attributeCategory\n          required: false\n          schema:\n            type: string\n        - description: The attribute description filter string used for finding objects.\n            Only the first 440 characters of the description will be searched.\n            For Asset Servers older than 2.7, a 400 status code (Bad Request)\n            will be returned if this parameter is specified. The default is no\n            filter.\n          in: query\n          name: attributeDescriptionFilter\n          required: false\n          schema:\n            type: string\n        - description: The attribute name filter string used for finding objects. The\n            default is no filter.\n          in: query\n          name: attributeNameFilter\n          required: false\n          schema:\n            type: string\n        - description: Specify that returned attributes' value type must be this value\n            type. The default is no filter.\n          in: query\n          name: attributeType\n          required: false\n          schema:\n            type: string\n        - description: A string representing the latest ending time for the event frames to\n            be matched. The endTime must be greater than or equal to the\n            startTime. The default is '*'.\n          in: query\n          name: endTime\n          required: false\n          schema:\n            type: string\n        - description: Specify that the owner of the returned attributes must have this\n            category. The default is no filter.\n          in: query\n          name: eventFrameCategory\n          required: false\n          schema:\n            type: string\n        - description: The event frame description filter string used for finding objects.\n            Only the first 440 characters of the description will be searched.\n            For Asset Servers older than 2.7, a 400 status code (Bad Request)\n            will be returned if this parameter is specified. The default is no\n            filter.\n          in: query\n          name: eventFrameDescriptionFilter\n          required: false\n          schema:\n            type: string\n        - description: The event frame name filter string used for finding objects. The\n            default is no filter.\n          in: query\n          name: eventFrameNameFilter\n          required: false\n          schema:\n            type: string\n        - description: Specify that the owner of the returned attributes must have this\n            template or a template derived from this template. The default is no\n            filter.\n          in: query\n          name: eventFrameTemplate\n          required: false\n          schema:\n            type: string\n        - description: The maximum number of objects to be returned (the page size). The\n            default is 1000.\n          in: query\n          name: maxCount\n          required: false\n          schema:\n            type: integer\n        - description: The name query string which must match the name of a referenced\n            element. The default is no filter.\n          in: query\n          name: referencedElementNameFilter\n          required: false\n          schema:\n            type: string\n        - description: Specifies if the search should include objects nested further than\n            immediate children of the given resource. The default is 'false'.\n          in: query\n          name: searchFullHierarchy\n          required: false\n          schema:\n            type: boolean\n        - description: Determines how the startTime and endTime parameters are treated when\n            searching for event frames. The default is 'Overlapped'.\n          in: query\n          name: searchMode\n          required: false\n          schema:\n            type: string\n        - description: List of fields to be returned in the response, separated by\n            semicolons (;). If this parameter is not specified, all available\n            fields will be returned.\n          in: query\n          name: selectedFields\n          required: false\n          schema:\n            type: string\n        - description: The field or property of the object used to sort the returned\n            collection. The default is 'Name'.\n          in: query\n          name: sortField\n          required: false\n          schema:\n            type: string\n        - description: The order that the returned collection is sorted. The default is\n            'Ascending'.\n          in: query\n          name: sortOrder\n          required: false\n          schema:\n            type: string\n        - description: The starting index (zero based) of the items to be returned. The\n            default is 0.\n          in: query\n          name: startIndex\n          required: false\n          schema:\n            type: integer\n        - description: A string representing the earliest starting time for the event\n            frames to be matched. startTime must be less than or equal to the\n            endTime. The default is '*-8h'.\n          in: query\n          name: startTime\n          required: false\n          schema:\n            type: string\n        - description: Optional parameter. Used to specify the type of WebID. Useful for\n            URL brevity and other special cases. Default is the value of the\n            configuration item \"WebIDType\".\n          in: query\n          name: webIdType\n          required: false\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: a list of matching attributes.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Items_Attribute_\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/Items_Attribute_\"\n            text/html:\n              schema:\n                $ref: \"#/components/schemas/Items_Attribute_\"\n            application/x-ms-application:\n              schema:\n                $ref: \"#/components/schemas/Items_Attribute_\"\n      summary: Retrieves a list of event frame attributes matching the specified\n        filters from the specified asset database.\n      tags:\n        - AssetDatabase\n  \"/assetdatabases/{webId}/eventframes\":\n    get:\n      deprecated: false\n      operationId: AssetDatabase_GetEventFrames\n      parameters:\n        - description: The ID of the asset database to use as the root of the search.\n          in: path\n          name: webId\n          required: true\n          schema:\n            type: string\n        - description: Specify the returned event frames' canBeAcknowledged property. The\n            default is no canBeAcknowledged filter.\n          in: query\n          name: canBeAcknowledged\n          required: false\n          schema:\n            type: boolean\n        - description: Specify that returned event frames must have this category. The\n            default is no category filter.\n          in: query\n          name: categoryName\n          required: false\n          schema:\n            type: string\n        - description: The ending time for the search. The endTime must be greater than or\n            equal to the startTime. The searchMode parameter will control\n            whether the comparison will be performed against the event frame's\n            startTime or endTime. The default is '*' if searchMode is not one of\n            the 'Backward*' or 'Forward*' values.\n          in: query\n          name: endTime\n          required: false\n          schema:\n            type: string\n        - description: Specify the returned event frames' isAcknowledged property. The\n            default no isAcknowledged filter.\n          in: query\n          name: isAcknowledged\n          required: false\n          schema:\n            type: boolean\n        - description: The maximum number of objects to be returned per call (page size).\n            The default is 1000.\n          in: query\n          name: maxCount\n          required: false\n          schema:\n            type: integer\n        - description: The name query string used for finding event frames. The default is\n            no filter.\n          in: query\n          name: nameFilter\n          required: false\n          schema:\n            type: string\n        - description: The name query string which must match the name of a referenced\n            element. The default is no filter.\n          in: query\n          name: referencedElementNameFilter\n          required: false\n          schema:\n            type: string\n        - description: Specify that returned event frames must have an element in the event\n            frame's referenced elements collection that derives from the\n            template. Specify this parameter by name.\n          in: query\n          name: referencedElementTemplateName\n          required: false\n          schema:\n            type: string\n        - description: Specifies whether the search should include objects nested further\n            than the immediate children of the search root. The default is\n            'false'.\n          in: query\n          name: searchFullHierarchy\n          required: false\n          schema:\n            type: boolean\n        - description: Determines how the startTime and endTime parameters are treated when\n            searching for event frame objects to be included in the returned\n            collection. If this parameter is one of the 'Backward*' or\n            'Forward*' values, none of endTime, sortField, or sortOrder may be\n            specified. The default is 'Overlapped'.\n          in: query\n          name: searchMode\n          required: false\n          schema:\n            type: string\n        - description: List of fields to be returned in the response, separated by\n            semicolons (;). If this parameter is not specified, all available\n            fields will be returned.\n          in: query\n          name: selectedFields\n          required: false\n          schema:\n            type: string\n        - description: Specify that returned event frames must have this severity. Multiple\n            severity values may be specified with multiple instances of the\n            parameter. The default is no severity filter.\n          in: query\n          name: severity\n          required: false\n          explode: true\n          schema:\n            type: array\n            items:\n              type: string\n        - description: The field or property of the object used to sort the returned\n            collection. The default is 'Name' if searchMode is not one of the\n            'Backward*' or 'Forward*' values.\n          in: query\n          name: sortField\n          required: false\n          schema:\n            type: string\n        - description: The order that the returned collection is sorted. The default is\n            'Ascending' if searchMode is not one of the 'Backward*' or\n            'Forward*' values.\n          in: query\n          name: sortOrder\n          required: false\n          schema:\n            type: string\n        - description: The starting index (zero based) of the items to be returned. The\n            default is 0.\n          in: query\n          name: startIndex\n          required: false\n          schema:\n            type: integer\n        - description: The starting time for the search. startTime must be less than or\n            equal to the endTime. The searchMode parameter will control whether\n            the comparison will be performed against the event frame's startTime\n            or endTime. The default is '*-8h'.\n          in: query\n          name: startTime\n          required: false\n          schema:\n            type: string\n        - description: Specify that returned event frames must have this template or a\n            template derived from this template. The default is no template\n            filter. Specify this parameter by name.\n          in: query\n          name: templateName\n          required: false\n          schema:\n            type: string\n        - description: Optional parameter. Used to specify the type of WebID. Useful for\n            URL brevity and other special cases. Default is the value of the\n            configuration item \"WebIDType\".\n          in: query\n          name: webIdType\n          required: false\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: A list of event frames matching the specified conditions.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Items_EventFrame_\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/Items_EventFrame_\"\n            text/html:\n              schema:\n                $ref: \"#/components/schemas/Items_EventFrame_\"\n            application/x-ms-application:\n              schema:\n                $ref: \"#/components/schemas/Items_EventFrame_\"\n      summary: Retrieve event frames based on the specified conditions. By default,\n        returns all children of the specified root resource that have been\n        active in the past 8 hours.\n      tags:\n        - AssetDatabase\n    post:\n      deprecated: false\n      operationId: AssetDatabase_CreateEventFrame\n      parameters:\n        - description: The ID of the database on which to create the event frame.\n          in: path\n          name: webId\n          required: true\n          schema:\n            type: string\n        - description: Optional parameter. Used to specify the type of WebID. Useful for\n            URL brevity and other special cases. Default is the value of the\n            configuration item \"WebIDType\".\n          in: query\n          name: webIdType\n          required: false\n          schema:\n            type: string\n      requestBody:\n        $ref: \"#/components/requestBodies/EventFrame\"\n      responses:\n        \"201\":\n          description: The event frame was created. The response's Location header is a\n            link to the event frame.\n      summary: Create an event frame.\n      tags:\n        - AssetDatabase\n  \"/assetdatabases/{webId}/export\":\n    get:\n      deprecated: false\n      operationId: AssetDatabase_Export\n      parameters:\n        - description: The ID of the database.\n          in: path\n          name: webId\n          required: true\n          schema:\n            type: string\n        - description: The latest ending time for AFEventFrame, AFTransfer, and AFCase\n            objects that may be part of the export. The default is '*'.\n          in: query\n          name: endTime\n          required: false\n          schema:\n            type: string\n        - description: Indicates the type of export to perform. The default is\n            'StrongReferences'. Multiple export modes may be specified by using\n            multiple instances of exportMode.\n          in: query\n          name: exportMode\n          required: false\n          explode: true\n          schema:\n            type: array\n            items:\n              type: string\n        - description: The earliest starting time for AFEventFrame, AFTransfer, and AFCase\n            objects that may be part of the export. The default is '*-30d'.\n          in: query\n          name: startTime\n          required: false\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: Database exported. The response body contains the serialized\n            database.\n      summary: Export the asset database.\n      tags:\n        - AssetDatabase\n  \"/assetdatabases/{webId}/import\":\n    post:\n      deprecated: false\n      operationId: AssetDatabase_Import\n      parameters:\n        - description: The ID of the asset database.\n          in: path\n          name: webId\n          required: true\n          schema:\n            type: string\n        - description: Indicates the type of import to perform. The default is 'AllowCreate\n            | AllowUpdate | AutoCheckIn'. Multiple import modes may be specified\n            by using multiple instances of importMode.\n          in: query\n          name: importMode\n          required: false\n          explode: true\n          schema:\n            type: array\n            items:\n              type: string\n      responses:\n        \"200\":\n          description: Database imported.\n      summary: Import an asset database.\n      tags:\n        - AssetDatabase\n  \"/assetdatabases/{webId}/referencedelements\":\n    delete:\n      deprecated: false\n      operationId: AssetDatabase_RemoveReferencedElement\n      parameters:\n        - description: The ID of the database which the referenced element will be removed\n            from.\n          in: path\n          name: webId\n          required: true\n          schema:\n            type: string\n        - description: The ID of the referenced element. Multiple referenced elements may\n            be specified with multiple instances of the parameter.\n          in: query\n          name: referencedElementWebId\n          required: true\n          explode: true\n          schema:\n            type: array\n            items:\n              type: string\n      responses:\n        \"204\":\n          description: The referenced element was successfully removed.\n      summary: Remove a reference to an existing element from the specified database.\n      tags:\n        - AssetDatabase\n    get:\n      deprecated: false\n      description: Users can search for the referenced elements based on specific search\n        parameters. If no parameters are specified in the search, the default\n        values for each parameter will be used and will return the elements that\n        match the default search.\n      operationId: AssetDatabase_GetReferencedElements\n      parameters:\n        - description: The ID of the resource to use as the root of the search.\n          in: path\n          name: webId\n          required: true\n          schema:\n            type: string\n        - description: Associated values to return in the response, separated by semicolons\n            (;). This call supports Paths to return all paths to the element. If\n            this parameter is not specified, paths are not returned.\n          in: query\n          name: associations\n          required: false\n          schema:\n            type: string\n        - description: Specify that returned elements must have this category. The default\n            is no category filter.\n          in: query\n          name: categoryName\n          required: false\n          schema:\n            type: string\n        - description: Specify that returned elements must have this description. The\n            default is no description filter.\n          in: query\n          name: descriptionFilter\n          required: false\n          schema:\n            type: string\n        - description: Specify that returned elements must have this type. The default type\n            is 'Any'.\n          in: query\n          name: elementType\n          required: false\n          schema:\n            type: string\n        - description: The maximum number of objects to be returned per call (page size).\n            The default is 1000.\n          in: query\n          name: maxCount\n          required: false\n          schema:\n            type: integer\n        - description: The name query string used for finding objects. The default is no\n            filter.\n          in: query\n          name: nameFilter\n          required: false\n          schema:\n            type: string\n        - description: List of fields to be returned in the response, separated by\n            semicolons (;). If this parameter is not specified, all available\n            fields will be returned.\n          in: query\n          name: selectedFields\n          required: false\n          schema:\n            type: string\n        - description: The field or property of the object used to sort the returned\n            collection. The default is 'Name'.\n          in: query\n          name: sortField\n          required: false\n          schema:\n            type: string\n        - description: The order that the returned collection is sorted. The default is\n            'Ascending'.\n          in: query\n          name: sortOrder\n          required: false\n          schema:\n            type: string\n        - description: The starting index (zero based) of the items to be returned. The\n            default is 0.\n          in: query\n          name: startIndex\n          required: false\n          schema:\n            type: integer\n        - description: Specify that returned elements must have this template or a template\n            derived from this template. The default is no template filter.\n          in: query\n          name: templateName\n          required: false\n          schema:\n            type: string\n        - description: Optional parameter. Used to specify the type of WebID. Useful for\n            URL brevity and other special cases. Default is the value of the\n            configuration item \"WebIDType\".\n          in: query\n          name: webIdType\n          required: false\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: A list of referenced elements matching the specified conditions.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Items_Element_\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/Items_Element_\"\n            text/html:\n              schema:\n                $ref: \"#/components/schemas/Items_Element_\"\n            application/x-ms-application:\n              schema:\n                $ref: \"#/components/schemas/Items_Element_\"\n      summary: Retrieve referenced elements based on the specified conditions. By\n        default, this method selects all referenced elements at the root level\n        of the asset database.\n      tags:\n        - AssetDatabase\n    post:\n      deprecated: false\n      operationId: AssetDatabase_AddReferencedElement\n      parameters:\n        - description: The ID of the database which the referenced element will be added to.\n          in: path\n          name: webId\n          required: true\n          schema:\n            type: string\n        - description: The ID of the referenced element. Multiple referenced elements may\n            be specified with multiple instances of the parameter.\n          in: query\n          name: referencedElementWebId\n          required: true\n          explode: true\n          schema:\n            type: array\n            items:\n              type: string\n        - description: The name of the reference type between the parent and the referenced\n            element. This must be a \"strong\" reference type. The default is\n            \"parent-child\".\n          in: query\n          name: referenceType\n          required: false\n          schema:\n            type: string\n      responses:\n        \"204\":\n          description: The referenced element was successfully added.\n        \"409\":\n          description: The referenced element already exists in the collection.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Errors\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/Errors\"\n            text/html:\n              schema:\n                $ref: \"#/components/schemas/Errors\"\n            application/x-ms-application:\n              schema:\n                $ref: \"#/components/schemas/Errors\"\n      summary: Add a reference to an existing element to the specified database.\n      tags:\n        - AssetDatabase\n  \"/assetdatabases/{webId}/security\":\n    get:\n      deprecated: false\n      operationId: AssetDatabase_GetSecurity\n      parameters:\n        - description: The ID of the asset database for the security to be checked.\n          in: path\n          name: webId\n          required: true\n          schema:\n            type: string\n        - description: The security item of the desired security information to be\n            returned. Multiple security items may be specified with multiple\n            instances of the parameter. If the parameter is not specified, only\n            'Default' security item of the security information will be\n            returned.\n          in: query\n          name: securityItem\n          required: true\n          explode: true\n          schema:\n            type: array\n            items:\n              type: string\n        - description: The user identity for the security information to be checked.\n            Multiple security identities may be specified with multiple\n            instances of the parameter. If the parameter is not specified, only\n            the current user's security rights will be returned.\n          in: query\n          name: userIdentity\n          required: true\n          explode: true\n          schema:\n            type: array\n            items:\n              type: string\n        - description: Indicates if the security cache should be refreshed before getting\n            security information. The default is 'false'.\n          in: query\n          name: forceRefresh\n          required: false\n          schema:\n            type: boolean\n        - description: List of fields to be returned in the response, separated by\n            semicolons (;). If this parameter is not specified, all available\n            fields will be returned.\n          in: query\n          name: selectedFields\n          required: false\n          schema:\n            type: string\n        - description: Optional parameter. Used to specify the type of WebID. Useful for\n            URL brevity and other special cases. Default is the value of the\n            configuration item \"WebIDType\".\n          in: query\n          name: webIdType\n          required: false\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: Security rights.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Items_SecurityRights_\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/Items_SecurityRights_\"\n            text/html:\n              schema:\n                $ref: \"#/components/schemas/Items_SecurityRights_\"\n            application/x-ms-application:\n              schema:\n                $ref: \"#/components/schemas/Items_SecurityRights_\"\n        \"400\":\n          description: Unsupported security item; an invalid or local account is specified\n            as the user identity.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Errors\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/Errors\"\n            text/html:\n              schema:\n                $ref: \"#/components/schemas/Errors\"\n            application/x-ms-application:\n              schema:\n                $ref: \"#/components/schemas/Errors\"\n        \"401\":\n          description: Access denied for the specified user identity.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Errors\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/Errors\"\n            text/html:\n              schema:\n                $ref: \"#/components/schemas/Errors\"\n            application/x-ms-application:\n              schema:\n                $ref: \"#/components/schemas/Errors\"\n        \"409\":\n          description: Unsupported when using Anonymous authentication method.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Errors\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/Errors\"\n            text/html:\n              schema:\n                $ref: \"#/components/schemas/Errors\"\n            application/x-ms-application:\n              schema:\n                $ref: \"#/components/schemas/Errors\"\n        \"502\":\n          description: Failed to retrieve the specified user identity.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Errors\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/Errors\"\n            text/html:\n              schema:\n                $ref: \"#/components/schemas/Errors\"\n            application/x-ms-application:\n              schema:\n                $ref: \"#/components/schemas/Errors\"\n      summary: Get the security information of the specified security item associated\n        with the asset database for a specified user.\n      tags:\n        - AssetDatabase\n  \"/assetdatabases/{webId}/securityentries\":\n    get:\n      deprecated: false\n      operationId: AssetDatabase_GetSecurityEntries\n      parameters:\n        - description: The ID of the asset database.\n          in: path\n          name: webId\n          required: true\n          schema:\n            type: string\n        - description: The name query string used for filtering security entries. The\n            default is no filter.\n          in: query\n          name: nameFilter\n          required: false\n          schema:\n            type: string\n        - description: The security item of the desired security entries information to be\n            returned. If the parameter is not specified, security entries of the\n            'Default' security item will be returned.\n          in: query\n          name: securityItem\n          required: false\n          schema:\n            type: string\n        - description: List of fields to be returned in the response, separated by\n            semicolons (;). If this parameter is not specified, all available\n            fields will be returned.\n          in: query\n          name: selectedFields\n          required: false\n          schema:\n            type: string\n        - description: Optional parameter. Used to specify the type of WebID. Useful for\n            URL brevity and other special cases. Default is the value of the\n            configuration item \"WebIDType\".\n          in: query\n          name: webIdType\n          required: false\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: A list of security entries matching the specified condition.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Items_SecurityEntry_\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/Items_SecurityEntry_\"\n            text/html:\n              schema:\n                $ref: \"#/components/schemas/Items_SecurityEntry_\"\n            application/x-ms-application:\n              schema:\n                $ref: \"#/components/schemas/Items_SecurityEntry_\"\n      summary: Retrieve the security entries of the specified security item associated\n        with the asset database based on the specified criteria. By default, all\n        security entries for this asset database are returned.\n      tags:\n        - AssetDatabase\n    post:\n      deprecated: false\n      operationId: AssetDatabase_CreateSecurityEntry\n      parameters:\n        - description: The ID of the asset database where the security entry will be\n            created.\n          in: path\n          name: webId\n          required: true\n          schema:\n            type: string\n        - description: If false, the new access permissions are only applied to the\n            associated object. If true, the access permissions of children with\n            any parent-child reference types will change when the permissions on\n            the primary parent change.\n          in: query\n          name: applyToChildren\n          required: false\n          schema:\n            type: boolean\n        - description: The security item of the desired security entries to be created. If\n            the parameter is not specified, security entries of the 'Default'\n            security item will be created.\n          in: query\n          name: securityItem\n          required: false\n          schema:\n            type: string\n        - description: Optional parameter. Used to specify the type of WebID. Useful for\n            URL brevity and other special cases. Default is the value of the\n            configuration item \"WebIDType\".\n          in: query\n          name: webIdType\n          required: false\n          schema:\n            type: string\n      requestBody:\n        $ref: \"#/components/requestBodies/SecurityEntry\"\n      responses:\n        \"201\":\n          description: The security entry was created. The response's Location header is a\n            link to the security entry.\n      summary: Create a security entry owned by the asset database.\n      tags:\n        - AssetDatabase\n  \"/assetdatabases/{webId}/securityentries/{name}\":\n    delete:\n      deprecated: false\n      operationId: AssetDatabase_DeleteSecurityEntry\n      parameters:\n        - description: The name of the security entry. For every backslash character (\\) in\n            the security entry name, replace with asterisk (*). As an example,\n            use domain*username instead of domain\\username.\n          in: path\n          name: name\n          required: true\n          schema:\n            type: string\n        - description: The ID of the asset database where the security entry will be\n            deleted.\n          in: path\n          name: webId\n          required: true\n          schema:\n            type: string\n        - description: If false, the new access permissions are only applied to the\n            associated object. If true, the access permissions of children with\n            any parent-child reference types will change when the permissions on\n            the primary parent change.\n          in: query\n          name: applyToChildren\n          required: false\n          schema:\n            type: boolean\n        - description: The security item of the desired security entries to be deleted. If\n            the parameter is not specified, security entries of the 'Default'\n            security item will be deleted.\n          in: query\n          name: securityItem\n          required: false\n          schema:\n            type: string\n      responses:\n        \"204\":\n          description: The security entry was deleted.\n      summary: Delete a security entry owned by the asset database.\n      tags:\n        - AssetDatabase\n    get:\n      deprecated: false\n      operationId: AssetDatabase_GetSecurityEntryByName\n      parameters:\n        - description: The name of the security entry. For every backslash character (\\) in\n            the security entry name, replace with asterisk (*). As an example,\n            use domain*username instead of domain\\username.\n          in: path\n          name: name\n          required: true\n          schema:\n            type: string\n        - description: The ID of the asset database.\n          in: path\n          name: webId\n          required: true\n          schema:\n            type: string\n        - description: The security item of the desired security entries information to be\n            returned. If the parameter is not specified, security entries of the\n            'Default' security item will be returned.\n          in: query\n          name: securityItem\n          required: false\n          schema:\n            type: string\n        - description: List of fields to be returned in the response, separated by\n            semicolons (;). If this parameter is not specified, all available\n            fields will be returned.\n          in: query\n          name: selectedFields\n          required: false\n          schema:\n            type: string\n        - description: Optional parameter. Used to specify the type of WebID. Useful for\n            URL brevity and other special cases. Default is the value of the\n            configuration item \"WebIDType\".\n          in: query\n          name: webIdType\n          required: false\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: The security entry matching the specified condition.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/SecurityEntry\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/SecurityEntry\"\n            text/html:\n              schema:\n                $ref: \"#/components/schemas/SecurityEntry\"\n            application/x-ms-application:\n              schema:\n                $ref: \"#/components/schemas/SecurityEntry\"\n        \"404\":\n          description: The security entry with the specified name is not found.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Errors\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/Errors\"\n            text/html:\n              schema:\n                $ref: \"#/components/schemas/Errors\"\n            application/x-ms-application:\n              schema:\n                $ref: \"#/components/schemas/Errors\"\n      summary: Retrieve the security entry of the specified security item associated\n        with the asset database with the specified name.\n      tags:\n        - AssetDatabase\n    put:\n      deprecated: false\n      operationId: AssetDatabase_UpdateSecurityEntry\n      parameters:\n        - description: The name of the security entry.\n          in: path\n          name: name\n          required: true\n          schema:\n            type: string\n        - description: The ID of the asset database where the security entry will be\n            updated.\n          in: path\n          name: webId\n          required: true\n          schema:\n            type: string\n        - description: If false, the new access permissions are only applied to the\n            associated object. If true, the access permissions of children with\n            any parent-child reference types will change when the permissions on\n            the primary parent change.\n          in: query\n          name: applyToChildren\n          required: false\n          schema:\n            type: boolean\n        - description: The security item of the desired security entries to be updated. If\n            the parameter is not specified, security entries of the 'Default'\n            security item will be updated.\n          in: query\n          name: securityItem\n          required: false\n          schema:\n            type: string\n      requestBody:\n        $ref: \"#/components/requestBodies/SecurityEntry2\"\n      responses:\n        \"204\":\n          description: The security entry was updated.\n      summary: Update a security entry owned by the asset database.\n      tags:\n        - AssetDatabase\n  \"/assetdatabases/{webId}/tablecategories\":\n    get:\n      deprecated: false\n      operationId: AssetDatabase_GetTableCategories\n      parameters:\n        - description: The ID of the database.\n          in: path\n          name: webId\n          required: true\n          schema:\n            type: string\n        - description: List of fields to be returned in the response, separated by\n            semicolons (;). If this parameter is not specified, all available\n            fields will be returned.\n          in: query\n          name: selectedFields\n          required: false\n          schema:\n            type: string\n        - description: Optional parameter. Used to specify the type of WebID. Useful for\n            URL brevity and other special cases. Default is the value of the\n            configuration item \"WebIDType\".\n          in: query\n          name: webIdType\n          required: false\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: The table categories on the specified database.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Items_TableCategory_\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/Items_TableCategory_\"\n            text/html:\n              schema:\n                $ref: \"#/components/schemas/Items_TableCategory_\"\n            application/x-ms-application:\n              schema:\n                $ref: \"#/components/schemas/Items_TableCategory_\"\n      summary: Retrieve table categories for a given Asset Database.\n      tags:\n        - AssetDatabase\n    post:\n      deprecated: false\n      operationId: AssetDatabase_CreateTableCategory\n      parameters:\n        - description: The ID of the database in which to create the table category.\n          in: path\n          name: webId\n          required: true\n          schema:\n            type: string\n        - description: Optional parameter. Used to specify the type of WebID. Useful for\n            URL brevity and other special cases. Default is the value of the\n            configuration item \"WebIDType\".\n          in: query\n          name: webIdType\n          required: false\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/TableCategory\"\n          text/json:\n            schema:\n              $ref: \"#/components/schemas/TableCategory\"\n        description: The new table category definition.\n        required: true\n      responses:\n        \"201\":\n          description: The table category was created. The response's Location header is a\n            link to the table category.\n      summary: Create a table category on the Asset Database.\n      tags:\n        - AssetDatabase\n  \"/assetdatabases/{webId}/tables\":\n    get:\n      deprecated: false\n      operationId: AssetDatabase_GetTables\n      parameters:\n        - description: The ID of the database.\n          in: path\n          name: webId\n          required: true\n          schema:\n            type: string\n        - description: List of fields to be returned in the response, separated by\n            semicolons (;). If this parameter is not specified, all available\n            fields will be returned.\n          in: query\n          name: selectedFields\n          required: false\n          schema:\n            type: string\n        - description: Optional parameter. Used to specify the type of WebID. Useful for\n            URL brevity and other special cases. Default is the value of the\n            configuration item \"WebIDType\".\n          in: query\n          name: webIdType\n          required: false\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: The tables on the specified database.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Items_Table_\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/Items_Table_\"\n            text/html:\n              schema:\n                $ref: \"#/components/schemas/Items_Table_\"\n            application/x-ms-application:\n              schema:\n                $ref: \"#/components/schemas/Items_Table_\"\n      summary: Retrieve tables for given Asset Database.\n      tags:\n        - AssetDatabase\n    post:\n      deprecated: false\n      operationId: AssetDatabase_CreateTable\n      parameters:\n        - description: The ID of the database in which to create the table.\n          in: path\n          name: webId\n          required: true\n          schema:\n            type: string\n        - description: Optional parameter. Used to specify the type of WebID. Useful for\n            URL brevity and other special cases. Default is the value of the\n            configuration item \"WebIDType\".\n          in: query\n          name: webIdType\n          required: false\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/Table\"\n          text/json:\n            schema:\n              $ref: \"#/components/schemas/Table\"\n        description: The new table definition.\n        required: true\n      responses:\n        \"201\":\n          description: The table was created. The response's Location header is a link to\n            the created table.\n      summary: Create a table on the Asset Database.\n      tags:\n        - AssetDatabase\n  /assetservers:\n    get:\n      deprecated: false\n      operationId: AssetServer_List\n      parameters:\n        - description: List of fields to be returned in the response, separated by\n            semicolons (;). If this parameter is not specified, all available\n            fields will be returned.\n          in: query\n          name: selectedFields\n          required: false\n          schema:\n            type: string\n        - description: Optional parameter. Used to specify the type of WebID. Useful for\n            URL brevity and other special cases. Default is the value of the\n            configuration item \"WebIDType\".\n          in: query\n          name: webIdType\n          required: false\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: A list of servers.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Items_AssetServer_\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/Items_AssetServer_\"\n            text/html:\n              schema:\n                $ref: \"#/components/schemas/Items_AssetServer_\"\n            application/x-ms-application:\n              schema:\n                $ref: \"#/components/schemas/Items_AssetServer_\"\n      summary: Retrieve a list of all Asset Servers known to this service.\n      tags:\n        - AssetServer\n  /assetservers#name:\n    get:\n      deprecated: false\n      description: This method returns an asset server based on the name associated with\n        it. Users should primarily search with the WebID when available.\n      operationId: AssetServer_GetByName\n      parameters:\n        - description: The name of the server.\n          in: query\n          name: name\n          required: true\n          schema:\n            type: string\n        - description: List of fields to be returned in the response, separated by\n            semicolons (;). If this parameter is not specified, all available\n            fields will be returned.\n          in: query\n          name: selectedFields\n          required: false\n          schema:\n            type: string\n        - description: Optional parameter. Used to specify the type of WebID. Useful for\n            URL brevity and other special cases. Default is the value of the\n            configuration item \"WebIDType\".\n          in: query\n          name: webIdType\n          required: false\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: The requested server.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/AssetServer\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/AssetServer\"\n            text/html:\n              schema:\n                $ref: \"#/components/schemas/AssetServer\"\n            application/x-ms-application:\n              schema:\n                $ref: \"#/components/schemas/AssetServer\"\n      summary: Retrieve an Asset Server by name.\n      tags:\n        - AssetServer\n  /assetservers#path:\n    get:\n      deprecated: false\n      description: This method returns an asset server based on the hierarchical path\n        associated with it, and should be used when a path has been received\n        from a separate part of the PI System for use in the PI Web API. Users\n        should primarily search with the WebID when available.\n      operationId: AssetServer_GetByPath\n      parameters:\n        - description: The path to the server.\n          in: query\n          name: path\n          required: true\n          schema:\n            type: string\n        - description: List of fields to be returned in the response, separated by\n            semicolons (;). If this parameter is not specified, all available\n            fields will be returned.\n          in: query\n          name: selectedFields\n          required: false\n          schema:\n            type: string\n        - description: Optional parameter. Used to specify the type of WebID. Useful for\n            URL brevity and other special cases. Default is the value of the\n            configuration item \"WebIDType\".\n          in: query\n          name: webIdType\n          required: false\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: The requested server.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/AssetServer\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/AssetServer\"\n            text/html:\n              schema:\n                $ref: \"#/components/schemas/AssetServer\"\n            application/x-ms-application:\n              schema:\n                $ref: \"#/components/schemas/AssetServer\"\n      summary: Retrieve an Asset Server by path.\n      tags:\n        - AssetServer\n  \"/assetservers/{webId}\":\n    get:\n      deprecated: false\n      operationId: AssetServer_Get\n      parameters:\n        - description: The ID of the server.\n          in: path\n          name: webId\n          required: true\n          schema:\n            type: string\n        - description: List of fields to be returned in the response, separated by\n            semicolons (;). If this parameter is not specified, all available\n            fields will be returned.\n          in: query\n          name: selectedFields\n          required: false\n          schema:\n            type: string\n        - description: Optional parameter. Used to specify the type of WebID. Useful for\n            URL brevity and other special cases. Default is the value of the\n            configuration item \"WebIDType\".\n          in: query\n          name: webIdType\n          required: false\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: The requested server.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/AssetServer\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/AssetServer\"\n            text/html:\n              schema:\n                $ref: \"#/components/schemas/AssetServer\"\n            application/x-ms-application:\n              schema:\n                $ref: \"#/components/schemas/AssetServer\"\n      summary: Retrieve an Asset Server.\n      tags:\n        - AssetServer\n  \"/assetservers/{webId}/analysisruleplugins\":\n    get:\n      deprecated: false\n      operationId: AssetServer_GetAnalysisRulePlugIns\n      parameters:\n        - description: The ID of the asset server, where the Analysis Rule Plug-in's are\n            installed.\n          in: path\n          name: webId\n          required: true\n          schema:\n            type: string\n        - description: List of fields to be returned in the response, separated by\n            semicolons (;). If this parameter is not specified, all available\n            fields will be returned.\n          in: query\n          name: selectedFields\n          required: false\n          schema:\n            type: string\n        - description: Optional parameter. Used to specify the type of WebID. Useful for\n            URL brevity and other special cases. Default is the value of the\n            configuration item \"WebIDType\".\n          in: query\n          name: webIdType\n          required: false\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: A list of Analysis Rule Plug-in's.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Items_AnalysisRulePlugIn_\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/Items_AnalysisRulePlugIn_\"\n            text/html:\n              schema:\n                $ref: \"#/components/schemas/Items_AnalysisRulePlugIn_\"\n            application/x-ms-application:\n              schema:\n                $ref: \"#/components/schemas/Items_AnalysisRulePlugIn_\"\n      summary: Retrieve a list of all Analysis Rule Plug-in's.\n      tags:\n        - AssetServer\n  \"/assetservers/{webId}/assetdatabases\":\n    get:\n      deprecated: false\n      operationId: AssetServer_GetDatabases\n      parameters:\n        - description: The ID of the server.\n          in: path\n          name: webId\n          required: true\n          schema:\n            type: string\n        - description: List of fields to be returned in the response, separated by\n            semicolons (;). If this parameter is not specified, all available\n            fields will be returned.\n          in: query\n          name: selectedFields\n          required: false\n          schema:\n            type: string\n        - description: Optional parameter. Used to specify the type of WebID. Useful for\n            URL brevity and other special cases. Default is the value of the\n            configuration item \"WebIDType\".\n          in: query\n          name: webIdType\n          required: false\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: A list of databases.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Items_AssetDatabase_\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/Items_AssetDatabase_\"\n            text/html:\n              schema:\n                $ref: \"#/components/schemas/Items_AssetDatabase_\"\n            application/x-ms-application:\n              schema:\n                $ref: \"#/components/schemas/Items_AssetDatabase_\"\n      summary: Retrieve a list of all Asset Databases on the specified Asset Server.\n      tags:\n        - AssetServer\n    post:\n      deprecated: false\n      operationId: AssetServer_CreateAssetDatabase\n      parameters:\n        - description: The ID of the asset server on which to create the database.\n          in: path\n          name: webId\n          required: true\n          schema:\n            type: string\n        - description: Optional parameter. Used to specify the type of WebID. Useful for\n            URL brevity and other special cases. Default is the value of the\n            configuration item \"WebIDType\".\n          in: query\n          name: webIdType\n          required: false\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/AssetDatabase\"\n          text/json:\n            schema:\n              $ref: \"#/components/schemas/AssetDatabase\"\n        description: The new database definition.\n        required: true\n      responses:\n        \"201\":\n          description: The database was created. The response's Location header is a link\n            to the database.\n      summary: Create an asset database.\n      tags:\n        - AssetServer\n  \"/assetservers/{webId}/notificationcontacttemplates\":\n    get:\n      deprecated: false\n      operationId: AssetServer_GetNotificationContactTemplates\n      parameters:\n        - description: The ID of the server.\n          in: path\n          name: webId\n          required: true\n          schema:\n            type: string\n        - description: List of fields to be returned in the response, separated by\n            semicolons (;). If this parameter is not specified, all available\n            fields will be returned.\n          in: query\n          name: selectedFields\n          required: false\n          schema:\n            type: string\n        - description: Optional parameter. Used to specify the type of WebID. Useful for\n            URL brevity and other special cases. Default is the value of the\n            configuration item \"WebIDType\".\n          in: query\n          name: webIdType\n          required: false\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: A list of notification contact templates.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Items_NotificationContactTemplate_\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/Items_NotificationContactTemplate_\"\n            text/html:\n              schema:\n                $ref: \"#/components/schemas/Items_NotificationContactTemplate_\"\n            application/x-ms-application:\n              schema:\n                $ref: \"#/components/schemas/Items_NotificationContactTemplate_\"\n      summary: Retrieve a list of all notification contact templates on the specified\n        Asset Server.\n      tags:\n        - AssetServer\n    post:\n      deprecated: false\n      operationId: AssetServer_CreateNotificationContactTemplate\n      parameters:\n        - description: The ID of the asset server on which to create the notification\n            contact template.\n          in: path\n          name: webId\n          required: true\n          schema:\n            type: string\n        - description: Optional parameter. Used to specify the type of WebID. Useful for\n            URL brevity and other special cases. Default is the value of the\n            configuration item \"WebIDType\".\n          in: query\n          name: webIdType\n          required: false\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/NotificationContactTemplate\"\n          text/json:\n            schema:\n              $ref: \"#/components/schemas/NotificationContactTemplate\"\n        description: The new notification contact template definition.\n        required: true\n      responses:\n        \"201\":\n          description: The notification contact template was created. The response's\n            Location header is a link to the notification contact template.\n      summary: Create a notification contact template.\n      tags:\n        - AssetServer\n  \"/assetservers/{webId}/notificationplugins\":\n    get:\n      deprecated: false\n      operationId: AssetServer_GetNotificationPlugIns\n      parameters:\n        - description: The ID of the server.\n          in: path\n          name: webId\n          required: true\n          schema:\n            type: string\n        - description: List of fields to be returned in the response, separated by\n            semicolons (;). If this parameter is not specified, all available\n            fields will be returned.\n          in: query\n          name: selectedFields\n          required: false\n          schema:\n            type: string\n        - description: Optional parameter. Used to specify the type of WebID. Useful for\n            URL brevity and other special cases. Default is the value of the\n            configuration item \"WebIDType\".\n          in: query\n          name: webIdType\n          required: false\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: A list of notification delivery channel plugins.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Items_NotificationPlugIn_\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/Items_NotificationPlugIn_\"\n            text/html:\n              schema:\n                $ref: \"#/components/schemas/Items_NotificationPlugIn_\"\n            application/x-ms-application:\n              schema:\n                $ref: \"#/components/schemas/Items_NotificationPlugIn_\"\n      summary: Retrieve a list of all notification plugins on the specified Asset\n        Server.\n      tags:\n        - AssetServer\n  \"/assetservers/{webId}/security\":\n    get:\n      deprecated: false\n      operationId: AssetServer_GetSecurity\n      parameters:\n        - description: The ID of the asset server for the security to be checked.\n          in: path\n          name: webId\n          required: true\n          schema:\n            type: string\n        - description: The security item of the desired security information to be\n            returned. Multiple security items may be specified with multiple\n            instances of the parameter. If the parameter is not specified, only\n            'Default' security item of the security information will be\n            returned.\n          in: query\n          name: securityItem\n          required: true\n          explode: true\n          schema:\n            type: array\n            items:\n              type: string\n        - description: The user identity for the security information to be checked.\n            Multiple security identities may be specified with multiple\n            instances of the parameter. If the parameter is not specified, only\n            the current user's security rights will be returned.\n          in: query\n          name: userIdentity\n          required: true\n          explode: true\n          schema:\n            type: array\n            items:\n              type: string\n        - description: Indicates if the security cache should be refreshed before getting\n            security information. The default is 'false'.\n          in: query\n          name: forceRefresh\n          required: false\n          schema:\n            type: boolean\n        - description: List of fields to be returned in the response, separated by\n            semicolons (;). If this parameter is not specified, all available\n            fields will be returned.\n          in: query\n          name: selectedFields\n          required: false\n          schema:\n            type: string\n        - description: Optional parameter. Used to specify the type of WebID. Useful for\n            URL brevity and other special cases. Default is the value of the\n            configuration item \"WebIDType\".\n          in: query\n          name: webIdType\n          required: false\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: Security rights.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Items_SecurityRights_\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/Items_SecurityRights_\"\n            text/html:\n              schema:\n                $ref: \"#/components/schemas/Items_SecurityRights_\"\n            application/x-ms-application:\n              schema:\n                $ref: \"#/components/schemas/Items_SecurityRights_\"\n        \"400\":\n          description: Unsupported security item; an invalid or local account is specified\n            as the user identity.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Errors\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/Errors\"\n            text/html:\n              schema:\n                $ref: \"#/components/schemas/Errors\"\n            application/x-ms-application:\n              schema:\n                $ref: \"#/components/schemas/Errors\"\n        \"401\":\n          description: Access denied for the specified user identity.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Errors\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/Errors\"\n            text/html:\n              schema:\n                $ref: \"#/components/schemas/Errors\"\n            application/x-ms-application:\n              schema:\n                $ref: \"#/components/schemas/Errors\"\n        \"409\":\n          description: Unsupported when using Anonymous authentication method.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Errors\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/Errors\"\n            text/html:\n              schema:\n                $ref: \"#/components/schemas/Errors\"\n            application/x-ms-application:\n              schema:\n                $ref: \"#/components/schemas/Errors\"\n        \"502\":\n          description: Failed to retrieve the specified user identity.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Errors\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/Errors\"\n            text/html:\n              schema:\n                $ref: \"#/components/schemas/Errors\"\n            application/x-ms-application:\n              schema:\n                $ref: \"#/components/schemas/Errors\"\n      summary: Get the security information of the specified security item associated\n        with the asset server for a specified user.\n      tags:\n        - AssetServer\n  \"/assetservers/{webId}/securityentries\":\n    get:\n      deprecated: false\n      operationId: AssetServer_GetSecurityEntries\n      parameters:\n        - description: The ID of the asset server.\n          in: path\n          name: webId\n          required: true\n          schema:\n            type: string\n        - description: The name query string used for filtering security entries. The\n            default is no filter.\n          in: query\n          name: nameFilter\n          required: false\n          schema:\n            type: string\n        - description: The security item of the desired security entries information to be\n            returned. If the parameter is not specified, security entries of the\n            'Default' security item will be returned.\n          in: query\n          name: securityItem\n          required: false\n          schema:\n            type: string\n        - description: List of fields to be returned in the response, separated by\n            semicolons (;). If this parameter is not specified, all available\n            fields will be returned.\n          in: query\n          name: selectedFields\n          required: false\n          schema:\n            type: string\n        - description: Optional parameter. Used to specify the type of WebID. Useful for\n            URL brevity and other special cases. Default is the value of the\n            configuration item \"WebIDType\".\n          in: query\n          name: webIdType\n          required: false\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: A list of security entries matching the specified condition.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Items_SecurityEntry_\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/Items_SecurityEntry_\"\n            text/html:\n              schema:\n                $ref: \"#/components/schemas/Items_SecurityEntry_\"\n            application/x-ms-application:\n              schema:\n                $ref: \"#/components/schemas/Items_SecurityEntry_\"\n      summary: Retrieve the security entries of the specified security item associated\n        with the asset server based on the specified criteria. By default, all\n        security entries for this asset server are returned.\n      tags:\n        - AssetServer\n    post:\n      deprecated: false\n      operationId: AssetServer_CreateSecurityEntry\n      parameters:\n        - description: The ID of the asset server where the security entry will be created.\n          in: path\n          name: webId\n          required: true\n          schema:\n            type: string\n        - description: If false, the new access permissions are only applied to the\n            associated object. If true, the access permissions of children with\n            any parent-child reference types will change when the permissions on\n            the primary parent change.\n          in: query\n          name: applyToChildren\n          required: false\n          schema:\n            type: boolean\n        - description: The security item of the desired security entries to be created. If\n            the parameter is not specified, security entries of the 'Default'\n            security item will be created.\n          in: query\n          name: securityItem\n          required: false\n          schema:\n            type: string\n        - description: Optional parameter. Used to specify the type of WebID. Useful for\n            URL brevity and other special cases. Default is the value of the\n            configuration item \"WebIDType\".\n          in: query\n          name: webIdType\n          required: false\n          schema:\n            type: string\n      requestBody:\n        $ref: \"#/components/requestBodies/SecurityEntry\"\n      responses:\n        \"201\":\n          description: The security entry was created. The response's Location header is a\n            link to the security entry.\n      summary: Create a security entry owned by the asset server.\n      tags:\n        - AssetServer\n  \"/assetservers/{webId}/securityentries/{name}\":\n    delete:\n      deprecated: false\n      operationId: AssetServer_DeleteSecurityEntry\n      parameters:\n        - description: The name of the security entry. For every backslash character (\\) in\n            the security entry name, replace with asterisk (*). As an example,\n            use domain*username instead of domain\\username.\n          in: path\n          name: name\n          required: true\n          schema:\n            type: string\n        - description: The ID of the asset server where the security entry will be deleted.\n          in: path\n          name: webId\n          required: true\n          schema:\n            type: string\n        - description: If false, the new access permissions are only applied to the\n            associated object. If true, the access permissions of children with\n            any parent-child reference types will change when the permissions on\n            the primary parent change.\n          in: query\n          name: applyToChildren\n          required: false\n          schema:\n            type: boolean\n        - description: The security item of the desired security entries to be deleted. If\n            the parameter is not specified, security entries of the 'Default'\n            security item will be deleted.\n          in: query\n          name: securityItem\n          required: false\n          schema:\n            type: string\n      responses:\n        \"204\":\n          description: The security entry was deleted.\n      summary: Delete a security entry owned by the asset server.\n      tags:\n        - AssetServer\n    get:\n      deprecated: false\n      operationId: AssetServer_GetSecurityEntryByName\n      parameters:\n        - description: The name of the security entry. For every backslash character (\\) in\n            the security entry name, replace with asterisk (*). As an example,\n            use domain*username instead of domain\\username.\n          in: path\n          name: name\n          required: true\n          schema:\n            type: string\n        - description: The ID of the asset server.\n          in: path\n          name: webId\n          required: true\n          schema:\n            type: string\n        - description: The security item of the desired security entries information to be\n            returned. If the parameter is not specified, security entries of the\n            'Default' security item will be returned.\n          in: query\n          name: securityItem\n          required: false\n          schema:\n            type: string\n        - description: List of fields to be returned in the response, separated by\n            semicolons (;). If this parameter is not specified, all available\n            fields will be returned.\n          in: query\n          name: selectedFields\n          required: false\n          schema:\n            type: string\n        - description: Optional parameter. Used to specify the type of WebID. Useful for\n            URL brevity and other special cases. Default is the value of the\n            configuration item \"WebIDType\".\n          in: query\n          name: webIdType\n          required: false\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: The security entry matching the specified condition.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/SecurityEntry\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/SecurityEntry\"\n            text/html:\n              schema:\n                $ref: \"#/components/schemas/SecurityEntry\"\n            application/x-ms-application:\n              schema:\n                $ref: \"#/components/schemas/SecurityEntry\"\n        \"404\":\n          description: The security entry with the specified name is not found.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Errors\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/Errors\"\n            text/html:\n              schema:\n                $ref: \"#/components/schemas/Errors\"\n            application/x-ms-application:\n              schema:\n                $ref: \"#/components/schemas/Errors\"\n      summary: Retrieve the security entry of the specified security item associated\n        with the asset server with the specified name.\n      tags:\n        - AssetServer\n    put:\n      deprecated: false\n      operationId: AssetServer_UpdateSecurityEntry\n      parameters:\n        - description: The name of the security entry.\n          in: path\n          name: name\n          required: true\n          schema:\n            type: string\n        - description: The ID of the asset server where the security entry will be updated.\n          in: path\n          name: webId\n          required: true\n          schema:\n            type: string\n        - description: If false, the new access permissions are only applied to the\n            associated object. If true, the access permissions of children with\n            any parent-child reference types will change when the permissions on\n            the primary parent change.\n          in: query\n          name: applyToChildren\n          required: false\n          schema:\n            type: boolean\n        - description: The security item of the desired security entries to be updated. If\n            the parameter is not specified, security entries of the 'Default'\n            security item will be updated.\n          in: query\n          name: securityItem\n          required: false\n          schema:\n            type: string\n      requestBody:\n        $ref: \"#/components/requestBodies/SecurityEntry2\"\n      responses:\n        \"204\":\n          description: The security entry was updated.\n      summary: Update a security entry owned by the asset server.\n      tags:\n        - AssetServer\n  \"/assetservers/{webId}/securityidentities\":\n    get:\n      deprecated: false\n      operationId: AssetServer_GetSecurityIdentities\n      parameters:\n        - description: The ID of the asset server to search.\n          in: path\n          name: webId\n          required: true\n          schema:\n            type: string\n        - description: Specifies which of the object's properties are searched. The default\n            is 'Name'.\n          in: query\n          name: field\n          required: false\n          schema:\n            type: string\n        - description: The maximum number of objects to be returned. The default is 1000.\n          in: query\n          name: maxCount\n          required: false\n          schema:\n            type: integer\n        - description: The query string used for finding objects. The default is no query\n            string.\n          in: query\n          name: query\n          required: false\n          schema:\n            type: string\n        - description: List of fields to be returned in the response, separated by\n            semicolons (;). If this parameter is not specified, all available\n            fields will be returned.\n          in: query\n          name: selectedFields\n          required: false\n          schema:\n            type: string\n        - description: The field or property of the object used to sort the returned\n            collection. The default is 'Name'.\n          in: query\n          name: sortField\n          required: false\n          schema:\n            type: string\n        - description: The order that the returned collection is sorted. The default is\n            'Ascending'.\n          in: query\n          name: sortOrder\n          required: false\n          schema:\n            type: string\n        - description: Optional parameter. Used to specify the type of WebID. Useful for\n            URL brevity and other special cases. Default is the value of the\n            configuration item \"WebIDType\".\n          in: query\n          name: webIdType\n          required: false\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: A list of security identities matching the specified condition.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Items_SecurityIdentity_\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/Items_SecurityIdentity_\"\n            text/html:\n              schema:\n                $ref: \"#/components/schemas/Items_SecurityIdentity_\"\n            application/x-ms-application:\n              schema:\n                $ref: \"#/components/schemas/Items_SecurityIdentity_\"\n      summary: Retrieve security identities based on the specified criteria. By\n        default, all security identities in the specified Asset Server are\n        returned.\n      tags:\n        - AssetServer\n    post:\n      deprecated: false\n      operationId: AssetServer_CreateSecurityIdentity\n      parameters:\n        - description: The ID of the asset server on which to create the security identity.\n          in: path\n          name: webId\n          required: true\n          schema:\n            type: string\n        - description: Optional parameter. Used to specify the type of WebID. Useful for\n            URL brevity and other special cases. Default is the value of the\n            configuration item \"WebIDType\".\n          in: query\n          name: webIdType\n          required: false\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/SecurityIdentity\"\n          text/json:\n            schema:\n              $ref: \"#/components/schemas/SecurityIdentity\"\n        description: The new security identity definition.\n        required: true\n      responses:\n        \"201\":\n          description: The security identity was created. The response's Location header is\n            a link to the security identity.\n      summary: Create a security identity.\n      tags:\n        - AssetServer\n  \"/assetservers/{webId}/securityidentities#userIdentity\":\n    get:\n      deprecated: false\n      operationId: AssetServer_GetSecurityIdentitiesForUser\n      parameters:\n        - description: The ID of the server.\n          in: path\n          name: webId\n          required: true\n          schema:\n            type: string\n        - description: The user identity to search for.\n          in: query\n          name: userIdentity\n          required: true\n          schema:\n            type: string\n        - description: List of fields to be returned in the response, separated by\n            semicolons (;). If this parameter is not specified, all available\n            fields will be returned.\n          in: query\n          name: selectedFields\n          required: false\n          schema:\n            type: string\n        - description: Optional parameter. Used to specify the type of WebID. Useful for\n            URL brevity and other special cases. Default is the value of the\n            configuration item \"WebIDType\".\n          in: query\n          name: webIdType\n          required: false\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: A list of security identities for the specified user.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Items_SecurityIdentity_\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/Items_SecurityIdentity_\"\n            text/html:\n              schema:\n                $ref: \"#/components/schemas/Items_SecurityIdentity_\"\n            application/x-ms-application:\n              schema:\n                $ref: \"#/components/schemas/Items_SecurityIdentity_\"\n        \"400\":\n          description: Unsupported security item; an invalid or local account is specified\n            as the user identity.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Errors\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/Errors\"\n            text/html:\n              schema:\n                $ref: \"#/components/schemas/Errors\"\n            application/x-ms-application:\n              schema:\n                $ref: \"#/components/schemas/Errors\"\n        \"401\":\n          description: Access denied for the specified user identity.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Errors\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/Errors\"\n            text/html:\n              schema:\n                $ref: \"#/components/schemas/Errors\"\n            application/x-ms-application:\n              schema:\n                $ref: \"#/components/schemas/Errors\"\n        \"502\":\n          description: Failed to retrieve the specified user identity.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Errors\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/Errors\"\n            text/html:\n              schema:\n                $ref: \"#/components/schemas/Errors\"\n            application/x-ms-application:\n              schema:\n                $ref: \"#/components/schemas/Errors\"\n      summary: Retrieve security identities for a specific user.\n      tags:\n        - AssetServer\n  \"/assetservers/{webId}/securitymappings\":\n    get:\n      deprecated: false\n      operationId: AssetServer_GetSecurityMappings\n      parameters:\n        - description: The ID of the asset server to search.\n          in: path\n          name: webId\n          required: true\n          schema:\n            type: string\n        - description: Specifies which of the object's properties are searched. The default\n            is 'Name'.\n          in: query\n          name: field\n          required: false\n          schema:\n            type: string\n        - description: The maximum number of objects to be returned. The default is 1000.\n          in: query\n          name: maxCount\n          required: false\n          schema:\n            type: integer\n        - description: The query string used for finding objects. The default is no query\n            string.\n          in: query\n          name: query\n          required: false\n          schema:\n            type: string\n        - description: List of fields to be returned in the response, separated by\n            semicolons (;). If this parameter is not specified, all available\n            fields will be returned.\n          in: query\n          name: selectedFields\n          required: false\n          schema:\n            type: string\n        - description: The field or property of the object used to sort the returned\n            collection. The default is 'Name'.\n          in: query\n          name: sortField\n          required: false\n          schema:\n            type: string\n        - description: The order that the returned collection is sorted. The default is\n            'Ascending'.\n          in: query\n          name: sortOrder\n          required: false\n          schema:\n            type: string\n        - description: Optional parameter. Used to specify the type of WebID. Useful for\n            URL brevity and other special cases. Default is the value of the\n            configuration item \"WebIDType\".\n          in: query\n          name: webIdType\n          required: false\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: A list of security mappings matching the specified condition.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Items_SecurityMapping_\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/Items_SecurityMapping_\"\n            text/html:\n              schema:\n                $ref: \"#/components/schemas/Items_SecurityMapping_\"\n            application/x-ms-application:\n              schema:\n                $ref: \"#/components/schemas/Items_SecurityMapping_\"\n      summary: Retrieve security mappings based on the specified criteria. By default,\n        all security mappings in the specified Asset Server are returned.\n      tags:\n        - AssetServer\n    post:\n      deprecated: false\n      operationId: AssetServer_CreateSecurityMapping\n      parameters:\n        - description: The ID of the asset server on which to create the security mapping.\n          in: path\n          name: webId\n          required: true\n          schema:\n            type: string\n        - description: Optional parameter. Used to specify the type of WebID. Useful for\n            URL brevity and other special cases. Default is the value of the\n            configuration item \"WebIDType\".\n          in: query\n          name: webIdType\n          required: false\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/SecurityMapping\"\n          text/json:\n            schema:\n              $ref: \"#/components/schemas/SecurityMapping\"\n        description: The new security mapping definition.\n        required: true\n      responses:\n        \"201\":\n          description: The security mapping was created. The response's Location header is\n            a link to the security mapping.\n      summary: Create a security mapping.\n      tags:\n        - AssetServer\n  \"/assetservers/{webId}/timeruleplugins\":\n    get:\n      deprecated: false\n      operationId: AssetServer_GetTimeRulePlugIns\n      parameters:\n        - description: The ID of the asset server, where the Time Rule Plug-in's are\n            installed.\n          in: path\n          name: webId\n          required: true\n          schema:\n            type: string\n        - description: List of fields to be returned in the response, separated by\n            semicolons (;). If this parameter is not specified, all available\n            fields will be returned.\n          in: query\n          name: selectedFields\n          required: false\n          schema:\n            type: string\n        - description: Optional parameter. Used to specify the type of WebID. Useful for\n            URL brevity and other special cases. Default is the value of the\n            configuration item \"WebIDType\".\n          in: query\n          name: webIdType\n          required: false\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: A list of Time Rule Plug-in's.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Items_TimeRulePlugIn_\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/Items_TimeRulePlugIn_\"\n            text/html:\n              schema:\n                $ref: \"#/components/schemas/Items_TimeRulePlugIn_\"\n            application/x-ms-application:\n              schema:\n                $ref: \"#/components/schemas/Items_TimeRulePlugIn_\"\n      summary: Retrieve a list of all Time Rule Plug-in's.\n      tags:\n        - AssetServer\n  \"/assetservers/{webId}/unitclasses\":\n    get:\n      deprecated: false\n      operationId: AssetServer_GetUnitClasses\n      parameters:\n        - description: The ID of the server.\n          in: path\n          name: webId\n          required: true\n          schema:\n            type: string\n        - description: List of fields to be returned in the response, separated by\n            semicolons (;). If this parameter is not specified, all available\n            fields will be returned.\n          in: query\n          name: selectedFields\n          required: false\n          schema:\n            type: string\n        - description: Optional parameter. Used to specify the type of WebID. Useful for\n            URL brevity and other special cases. Default is the value of the\n            configuration item \"WebIDType\".\n          in: query\n          name: webIdType\n          required: false\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: A list of unit classes.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Items_UnitClass_\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/Items_UnitClass_\"\n            text/html:\n              schema:\n                $ref: \"#/components/schemas/Items_UnitClass_\"\n            application/x-ms-application:\n              schema:\n                $ref: \"#/components/schemas/Items_UnitClass_\"\n      summary: Retrieve a list of all unit classes on the specified Asset Server.\n      tags:\n        - AssetServer\n    post:\n      deprecated: false\n      operationId: AssetServer_CreateUnitClass\n      parameters:\n        - description: The ID of the server.\n          in: path\n          name: webId\n          required: true\n          schema:\n            type: string\n        - description: Optional parameter. Used to specify the type of WebID. Useful for\n            URL brevity and other special cases. Default is the value of the\n            configuration item \"WebIDType\".\n          in: query\n          name: webIdType\n          required: false\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/UnitClass\"\n          text/json:\n            schema:\n              $ref: \"#/components/schemas/UnitClass\"\n        description: The new unit class definition.\n        required: true\n      responses:\n        \"201\":\n          description: The unit class was created. The response's Location header is a link\n            to the unit class.\n      summary: Create a unit class in the specified Asset Server.\n      tags:\n        - AssetServer\n  /attributecategories:\n    get:\n      deprecated: false\n      operationId: AttributeCategory_GetByPath\n      parameters:\n        - description: The path to the target attribute category.\n          in: query\n          name: path\n          required: true\n          schema:\n            type: string\n        - description: List of fields to be returned in the response, separated by\n            semicolons (;). If this parameter is not specified, all available\n            fields will be returned.\n          in: query\n          name: selectedFields\n          required: false\n          schema:\n            type: string\n        - description: Optional parameter. Used to specify the type of WebID. Useful for\n            URL brevity and other special cases. Default is the value of the\n            configuration item \"WebIDType\".\n          in: query\n          name: webIdType\n          required: false\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: The specified attribute category.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/AttributeCategory\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/AttributeCategory\"\n            text/html:\n              schema:\n                $ref: \"#/components/schemas/AttributeCategory\"\n            application/x-ms-application:\n              schema:\n                $ref: \"#/components/schemas/AttributeCategory\"\n      summary: Retrieve an attribute category by path.\n      tags:\n        - AttributeCategory\n  \"/attributecategories/{webId}\":\n    delete:\n      deprecated: false\n      operationId: AttributeCategory_Delete\n      parameters:\n        - description: The ID of the attribute category to delete.\n          in: path\n          name: webId\n          required: true\n          schema:\n            type: string\n      responses:\n        \"204\":\n          description: The attribute category was deleted.\n      summary: Delete an attribute category.\n      tags:\n        - AttributeCategory\n    get:\n      deprecated: false\n      operationId: AttributeCategory_Get\n      parameters:\n        - description: The id of the attribute category.\n          in: path\n          name: webId\n          required: true\n          schema:\n            type: string\n        - description: List of fields to be returned in the response, separated by\n            semicolons (;). If this parameter is not specified, all available\n            fields will be returned.\n          in: query\n          name: selectedFields\n          required: false\n          schema:\n            type: string\n        - description: Optional parameter. Used to specify the type of WebID. Useful for\n            URL brevity and other special cases. Default is the value of the\n            configuration item \"WebIDType\".\n          in: query\n          name: webIdType\n          required: false\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: The specified attribute category.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/AttributeCategory\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/AttributeCategory\"\n            text/html:\n              schema:\n                $ref: \"#/components/schemas/AttributeCategory\"\n            application/x-ms-application:\n              schema:\n                $ref: \"#/components/schemas/AttributeCategory\"\n      summary: Retrieve an attribute category.\n      tags:\n        - AttributeCategory\n    patch:\n      deprecated: false\n      operationId: AttributeCategory_Update\n      parameters:\n        - description: The ID of the attribute category to update.\n          in: path\n          name: webId\n          required: true\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/AttributeCategory\"\n          text/json:\n            schema:\n              $ref: \"#/components/schemas/AttributeCategory\"\n        description: A partial attribute category containing the desired changes.\n        required: true\n      responses:\n        \"204\":\n          description: The attribute category was updated.\n      summary: Update an attribute category by replacing items in its definition.\n      tags:\n        - AttributeCategory\n  \"/attributecategories/{webId}/security\":\n    get:\n      deprecated: false\n      operationId: AttributeCategory_GetSecurity\n      parameters:\n        - description: The ID of the attribute category for the security to be checked.\n          in: path\n          name: webId\n          required: true\n          schema:\n            type: string\n        - description: The user identity for the security information to be checked.\n            Multiple security identities may be specified with multiple\n            instances of the parameter. If the parameter is not specified, only\n            the current user's security rights will be returned.\n          in: query\n          name: userIdentity\n          required: true\n          explode: true\n          schema:\n            type: array\n            items:\n              type: string\n        - description: Indicates if the security cache should be refreshed before getting\n            security information. The default is 'false'.\n          in: query\n          name: forceRefresh\n          required: false\n          schema:\n            type: boolean\n        - description: List of fields to be returned in the response, separated by\n            semicolons (;). If this parameter is not specified, all available\n            fields will be returned.\n          in: query\n          name: selectedFields\n          required: false\n          schema:\n            type: string\n        - description: Optional parameter. Used to specify the type of WebID. Useful for\n            URL brevity and other special cases. Default is the value of the\n            configuration item \"WebIDType\".\n          in: query\n          name: webIdType\n          required: false\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: Security rights.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Items_SecurityRights_\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/Items_SecurityRights_\"\n            text/html:\n              schema:\n                $ref: \"#/components/schemas/Items_SecurityRights_\"\n            application/x-ms-application:\n              schema:\n                $ref: \"#/components/schemas/Items_SecurityRights_\"\n        \"400\":\n          description: An invalid or local account is specified as the user identity.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Errors\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/Errors\"\n            text/html:\n              schema:\n                $ref: \"#/components/schemas/Errors\"\n            application/x-ms-application:\n              schema:\n                $ref: \"#/components/schemas/Errors\"\n        \"401\":\n          description: Access denied for the specified user identity.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Errors\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/Errors\"\n            text/html:\n              schema:\n                $ref: \"#/components/schemas/Errors\"\n            application/x-ms-application:\n              schema:\n                $ref: \"#/components/schemas/Errors\"\n        \"409\":\n          description: Unsupported when using Anonymous authentication method.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Errors\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/Errors\"\n            text/html:\n              schema:\n                $ref: \"#/components/schemas/Errors\"\n            application/x-ms-application:\n              schema:\n                $ref: \"#/components/schemas/Errors\"\n        \"502\":\n          description: Failed to retrieve the specified user identity.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Errors\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/Errors\"\n            text/html:\n              schema:\n                $ref: \"#/components/schemas/Errors\"\n            application/x-ms-application:\n              schema:\n                $ref: \"#/components/schemas/Errors\"\n      summary: Get the security information of the specified security item associated\n        with the attribute category for a specified user.\n      tags:\n        - AttributeCategory\n  \"/attributecategories/{webId}/securityentries\":\n    get:\n      deprecated: false\n      operationId: AttributeCategory_GetSecurityEntries\n      parameters:\n        - description: The ID of the attribute category.\n          in: path\n          name: webId\n          required: true\n          schema:\n            type: string\n        - description: The name query string used for filtering security entries. The\n            default is no filter.\n          in: query\n          name: nameFilter\n          required: false\n          schema:\n            type: string\n        - description: List of fields to be returned in the response, separated by\n            semicolons (;). If this parameter is not specified, all available\n            fields will be returned.\n          in: query\n          name: selectedFields\n          required: false\n          schema:\n            type: string\n        - description: Optional parameter. Used to specify the type of WebID. Useful for\n            URL brevity and other special cases. Default is the value of the\n            configuration item \"WebIDType\".\n          in: query\n          name: webIdType\n          required: false\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: A list of security entries matching the specified condition.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Items_SecurityEntry_\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/Items_SecurityEntry_\"\n            text/html:\n              schema:\n                $ref: \"#/components/schemas/Items_SecurityEntry_\"\n            application/x-ms-application:\n              schema:\n                $ref: \"#/components/schemas/Items_SecurityEntry_\"\n      summary: Retrieve the security entries associated with the attribute category\n        based on the specified criteria. By default, all security entries for\n        this attribute category are returned.\n      tags:\n        - AttributeCategory\n    post:\n      deprecated: false\n      operationId: AttributeCategory_CreateSecurityEntry\n      parameters:\n        - description: The ID of the attribute category where the security entry will be\n            created.\n          in: path\n          name: webId\n          required: true\n          schema:\n            type: string\n        - description: If false, the new access permissions are only applied to the\n            associated object. If true, the access permissions of children with\n            any parent-child reference types will change when the permissions on\n            the primary parent change.\n          in: query\n          name: applyToChildren\n          required: false\n          schema:\n            type: boolean\n        - description: Optional parameter. Used to specify the type of WebID. Useful for\n            URL brevity and other special cases. Default is the value of the\n            configuration item \"WebIDType\".\n          in: query\n          name: webIdType\n          required: false\n          schema:\n            type: string\n      requestBody:\n        $ref: \"#/components/requestBodies/SecurityEntry\"\n      responses:\n        \"201\":\n          description: The security entry was created. The response's Location header is a\n            link to the security entry.\n      summary: Create a security entry owned by the attribute category.\n      tags:\n        - AttributeCategory\n  \"/attributecategories/{webId}/securityentries/{name}\":\n    delete:\n      deprecated: false\n      operationId: AttributeCategory_DeleteSecurityEntry\n      parameters:\n        - description: The name of the security entry. For every backslash character (\\) in\n            the security entry name, replace with asterisk (*). As an example,\n            use domain*username instead of domain\\username.\n          in: path\n          name: name\n          required: true\n          schema:\n            type: string\n        - description: The ID of the attribute category where the security entry will be\n            deleted.\n          in: path\n          name: webId\n          required: true\n          schema:\n            type: string\n        - description: If false, the new access permissions are only applied to the\n            associated object. If true, the access permissions of children with\n            any parent-child reference types will change when the permissions on\n            the primary parent change.\n          in: query\n          name: applyToChildren\n          required: false\n          schema:\n            type: boolean\n      responses:\n        \"204\":\n          description: The security entry was deleted.\n      summary: Delete a security entry owned by the attribute category.\n      tags:\n        - AttributeCategory\n    get:\n      deprecated: false\n      operationId: AttributeCategory_GetSecurityEntryByName\n      parameters:\n        - description: The name of the security entry. For every backslash character (\\) in\n            the security entry name, replace with asterisk (*). As an example,\n            use domain*username instead of domain\\username.\n          in: path\n          name: name\n          required: true\n          schema:\n            type: string\n        - description: The ID of the attribute category.\n          in: path\n          name: webId\n          required: true\n          schema:\n            type: string\n        - description: List of fields to be returned in the response, separated by\n            semicolons (;). If this parameter is not specified, all available\n            fields will be returned.\n          in: query\n          name: selectedFields\n          required: false\n          schema:\n            type: string\n        - description: Optional parameter. Used to specify the type of WebID. Useful for\n            URL brevity and other special cases. Default is the value of the\n            configuration item \"WebIDType\".\n          in: query\n          name: webIdType\n          required: false\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: The security entry matching the specified condition.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/SecurityEntry\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/SecurityEntry\"\n            text/html:\n              schema:\n                $ref: \"#/components/schemas/SecurityEntry\"\n            application/x-ms-application:\n              schema:\n                $ref: \"#/components/schemas/SecurityEntry\"\n        \"404\":\n          description: The security entry with the specified name is not found.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Errors\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/Errors\"\n            text/html:\n              schema:\n                $ref: \"#/components/schemas/Errors\"\n            application/x-ms-application:\n              schema:\n                $ref: \"#/components/schemas/Errors\"\n      summary: Retrieve the security entry associated with the attribute category with\n        the specified name.\n      tags:\n        - AttributeCategory\n    put:\n      deprecated: false\n      operationId: AttributeCategory_UpdateSecurityEntry\n      parameters:\n        - description: The name of the security entry.\n          in: path\n          name: name\n          required: true\n          schema:\n            type: string\n        - description: The ID of the attribute category where the security entry will be\n            updated.\n          in: path\n          name: webId\n          required: true\n          schema:\n            type: string\n        - description: If false, the new access permissions are only applied to the\n            associated object. If true, the access permissions of children with\n            any parent-child reference types will change when the permissions on\n            the primary parent change.\n          in: query\n          name: applyToChildren\n          required: false\n          schema:\n            type: boolean\n      requestBody:\n        $ref: \"#/components/requestBodies/SecurityEntry2\"\n      responses:\n        \"204\":\n          description: The security entry was updated.\n      summary: Update a security entry owned by the attribute category.\n      tags:\n        - AttributeCategory\n  /attributes:\n    get:\n      deprecated: false\n      description: This method returns an attribute based on the hierarchical path\n        associated with it, and should be used when a path has been received\n        from a separate part of the PI System for use in the PI Web API. Users\n        should primarily search with the WebID when available.\n      operationId: Attribute_GetByPath\n      parameters:\n        - description: The path to the attribute.\n          in: query\n          name: path\n          required: true\n          schema:\n            type: string\n        - description: Associated values to return in the response, separated by semicolons\n            (;). This call supports DataReference to return attributes with data\n            references. If this parameter is not specified, DataReference values\n            are not returned.\n          in: query\n          name: associations\n          required: false\n          schema:\n            type: string\n        - description: List of fields to be returned in the response, separated by\n            semicolons (;). If this parameter is not specified, all available\n            fields will be returned.\n          in: query\n          name: selectedFields\n          required: false\n          schema:\n            type: string\n        - description: Optional parameter. Used to specify the type of WebID. Useful for\n            URL brevity and other special cases. Default is the value of the\n            configuration item \"WebIDType\".\n          in: query\n          name: webIdType\n          required: false\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: The requested attribute.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Attribute\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/Attribute\"\n            text/html:\n              schema:\n                $ref: \"#/components/schemas/Attribute\"\n            application/x-ms-application:\n              schema:\n                $ref: \"#/components/schemas/Attribute\"\n      summary: Retrieve an attribute by path.\n      tags:\n        - Attribute\n  /attributes/multiple:\n    get:\n      deprecated: false\n      operationId: Attribute_GetMultiple\n      parameters:\n        - description: Specifies if the retrieval processes should be run in parallel on\n            the server. This may improve the response time for large amounts of\n            requested attributes. The default is 'false'.\n          in: query\n          name: asParallel\n          required: false\n          schema:\n            type: boolean\n        - description: Associated values to return in the response, separated by semicolons\n            (;). This call supports DataReference to return attributes with data\n            references. If this parameter is not specified, DataReference values\n            are not returned.\n          in: query\n          name: associations\n          required: false\n          schema:\n            type: string\n        - description: The include mode for the return list. The default is 'All'.\n          in: query\n          name: includeMode\n          required: false\n          schema:\n            type: string\n        - description: The path of an attribute. Multiple attributes may be specified with\n            multiple instances of the parameter.\n          in: query\n          name: path\n          required: false\n          explode: true\n          schema:\n            type: array\n            items:\n              type: string\n        - description: List of fields to be returned in the response, separated by\n            semicolons (;). If this parameter is not specified, all available\n            fields will be returned.\n          in: query\n          name: selectedFields\n          required: false\n          schema:\n            type: string\n        - description: The ID of an attribute. Multiple attributes may be specified with\n            multiple instances of the parameter.\n          in: query\n          name: webId\n          required: false\n          explode: true\n          schema:\n            type: array\n            items:\n              type: string\n        - description: Optional parameter. Used to specify the type of WebID. Useful for\n            URL brevity and other special cases. Default is the value of the\n            configuration item \"WebIDType\".\n          in: query\n          name: webIdType\n          required: false\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: The requested attributes\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Items_Item_Attribute_\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/Items_Item_Attribute_\"\n            text/html:\n              schema:\n                $ref: \"#/components/schemas/Items_Item_Attribute_\"\n            application/x-ms-application:\n              schema:\n                $ref: \"#/components/schemas/Items_Item_Attribute_\"\n        \"207\":\n          description: Some or all items contain exceptions.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Items_Item_Attribute_\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/Items_Item_Attribute_\"\n            text/html:\n              schema:\n                $ref: \"#/components/schemas/Items_Item_Attribute_\"\n            application/x-ms-application:\n              schema:\n                $ref: \"#/components/schemas/Items_Item_Attribute_\"\n      summary: Retrieve multiple attributes by web id or path.\n      tags:\n        - Attribute\n  /attributes/search:\n    get:\n      deprecated: false\n      operationId: Attribute_GetAttributesQuery\n      parameters:\n        - description: Associated values to return in the response, separated by semicolons\n            (;). This call supports DataReference to return attributes with data\n            references. If this parameter is not specified, DataReference values\n            are not returned.\n          in: query\n          name: associations\n          required: false\n          schema:\n            type: string\n        - description: The ID of the asset database to use as the root of the query.\n          in: query\n          name: databaseWebId\n          required: false\n          schema:\n            type: string\n        - description: The maximum number of objects to be returned per call (page size).\n            The default is 1000.\n          in: query\n          name: maxCount\n          required: false\n          schema:\n            type: integer\n        - description: \"The query string is a list of filters used to perform an AFSearch\n            for the attributes in the asset database. An example would be:\n            \\\"query=Element:{ Name:='MyElement' } Type:=Int32\\\".\"\n          in: query\n          name: query\n          required: false\n          schema:\n            type: string\n        - description: List of fields to be returned in the response, separated by\n            semicolons (;). If this parameter is not specified, all available\n            fields will be returned.\n          in: query\n          name: selectedFields\n          required: false\n          schema:\n            type: string\n        - description: The starting index (zero based) of the items to be returned. The\n            default is 0.\n          in: query\n          name: startIndex\n          required: false\n          schema:\n            type: integer\n        - description: Optional parameter. Used to specify the type of WebID. Useful for\n            URL brevity and other special cases. Default is the value of the\n            configuration item \"WebIDType\".\n          in: query\n          name: webIdType\n          required: false\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: A list of attributes matching the specified conditions.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Items_Attribute_\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/Items_Attribute_\"\n            text/html:\n              schema:\n                $ref: \"#/components/schemas/Items_Attribute_\"\n            application/x-ms-application:\n              schema:\n                $ref: \"#/components/schemas/Items_Attribute_\"\n      summary: Retrieve attributes based on the specified conditions. Returns\n        attributes using the specified search query string.\n      tags:\n        - Attribute\n  \"/attributes/{webId}\":\n    delete:\n      deprecated: false\n      operationId: Attribute_Delete\n      parameters:\n        - description: The ID of the attribute.\n          in: path\n          name: webId\n          required: true\n          schema:\n            type: string\n      responses:\n        \"204\":\n          description: The attribute was deleted.\n      summary: Delete an attribute.\n      tags:\n        - Attribute\n    get:\n      deprecated: false\n      operationId: Attribute_Get\n      parameters:\n        - description: The ID of the attribute.\n          in: path\n          name: webId\n          required: true\n          schema:\n            type: string\n        - description: Associated values to return in the response, separated by semicolons\n            (;). This call supports DataReference to return attributes with data\n            references. If this parameter is not specified, DataReference values\n            are not returned.\n          in: query\n          name: associations\n          required: false\n          schema:\n            type: string\n        - description: List of fields to be returned in the response, separated by\n            semicolons (;). If this parameter is not specified, all available\n            fields will be returned.\n          in: query\n          name: selectedFields\n          required: false\n          schema:\n            type: string\n        - description: Optional parameter. Used to specify the type of WebID. Useful for\n            URL brevity and other special cases. Default is the value of the\n            configuration item \"WebIDType\".\n          in: query\n          name: webIdType\n          required: false\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: The requested attribute.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Attribute\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/Attribute\"\n            text/html:\n              schema:\n                $ref: \"#/components/schemas/Attribute\"\n            application/x-ms-application:\n              schema:\n                $ref: \"#/components/schemas/Attribute\"\n      summary: Retrieve an attribute.\n      tags:\n        - Attribute\n    patch:\n      deprecated: false\n      description: If an attribute is based on a template, the user must make sure to\n        update the attribute appropriately so that it does not conflict with the\n        template's design. Once a template is applied to an attribute, it can\n        not be changed.\n      operationId: Attribute_Update\n      parameters:\n        - description: The ID of the attribute.\n          in: path\n          name: webId\n          required: true\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/Attribute\"\n          text/json:\n            schema:\n              $ref: \"#/components/schemas/Attribute\"\n        description: A partial attribute containing the desired changes.\n        required: true\n      responses:\n        \"204\":\n          description: The attribute was updated.\n      summary: Update an attribute by replacing items in its definition.\n      tags:\n        - Attribute\n  \"/attributes/{webId}/attributes\":\n    get:\n      deprecated: false\n      operationId: Attribute_GetAttributes\n      parameters:\n        - description: The ID of the parent attribute.\n          in: path\n          name: webId\n          required: true\n          schema:\n            type: string\n        - description: Associated values to return in the response, separated by semicolons\n            (;). This call supports DataReference to return attributes with data\n            references. If this parameter is not specified, DataReference values\n            are not returned.\n          in: query\n          name: associations\n          required: false\n          schema:\n            type: string\n        - description: Specify that returned attributes must have this category. The\n            default is no category filter.\n          in: query\n          name: categoryName\n          required: false\n          schema:\n            type: string\n        - description: The maximum number of objects to be returned per call (page size).\n            The default is 1000.\n          in: query\n          name: maxCount\n          required: false\n          schema:\n            type: integer\n        - description: The name query string used for finding attributes. The default is no\n            filter.\n          in: query\n          name: nameFilter\n          required: false\n          schema:\n            type: string\n        - description: Specifies if the search should include attributes nested further\n            than the immediate attributes of the searchRoot. The default is\n            'false'.\n          in: query\n          name: searchFullHierarchy\n          required: false\n          schema:\n            type: boolean\n        - description: List of fields to be returned in the response, separated by\n            semicolons (;). If this parameter is not specified, all available\n            fields will be returned.\n          in: query\n          name: selectedFields\n          required: false\n          schema:\n            type: string\n        - description: Specified if the search should include attributes with the Excluded\n            property set. The default is 'false'.\n          in: query\n          name: showExcluded\n          required: false\n          schema:\n            type: boolean\n        - description: Specified if the search should include attributes with the Hidden\n            property set. The default is 'false'.\n          in: query\n          name: showHidden\n          required: false\n          schema:\n            type: boolean\n        - description: The field or property of the object used to sort the returned\n            collection. The default is 'Name'.\n          in: query\n          name: sortField\n          required: false\n          schema:\n            type: string\n        - description: The order that the returned collection is sorted. The default is\n            'Ascending'.\n          in: query\n          name: sortOrder\n          required: false\n          schema:\n            type: string\n        - description: The starting index (zero based) of the items to be returned. The\n            default is 0.\n          in: query\n          name: startIndex\n          required: false\n          schema:\n            type: integer\n        - description: Specify that returned attributes must be members of this template.\n            The default is no template filter.\n          in: query\n          name: templateName\n          required: false\n          schema:\n            type: string\n        - description: The name of the attribute trait. Multiple traits may be specified\n            with multiple instances of the parameter.\n          in: query\n          name: trait\n          required: false\n          explode: true\n          schema:\n            type: array\n            items:\n              type: string\n        - description: The category of the attribute traits. Multiple categories may be\n            specified with multiple instances of the parameter. If the parameter\n            is not specified, or if its value is \"all\", then all attribute\n            traits of all categories will be returned.\n          in: query\n          name: traitCategory\n          required: false\n          explode: true\n          schema:\n            type: array\n            items:\n              type: string\n        - description: Specify that returned attributes' value type must be the given value\n            type. The default is no value type filter.\n          in: query\n          name: valueType\n          required: false\n          schema:\n            type: string\n        - description: Optional parameter. Used to specify the type of WebID. Useful for\n            URL brevity and other special cases. Default is the value of the\n            configuration item \"WebIDType\".\n          in: query\n          name: webIdType\n          required: false\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: A list of child attributes.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Items_Attribute_\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/Items_Attribute_\"\n            text/html:\n              schema:\n                $ref: \"#/components/schemas/Items_Attribute_\"\n            application/x-ms-application:\n              schema:\n                $ref: \"#/components/schemas/Items_Attribute_\"\n      summary: Get the child attributes of the specified attribute.\n      tags:\n        - Attribute\n    post:\n      deprecated: false\n      operationId: Attribute_CreateAttribute\n      parameters:\n        - description: The ID of the parent attribute on which to create the attribute.\n          in: path\n          name: webId\n          required: true\n          schema:\n            type: string\n        - description: Optional parameter. Used to specify the type of WebID. Useful for\n            URL brevity and other special cases. Default is the value of the\n            configuration item \"WebIDType\".\n          in: query\n          name: webIdType\n          required: false\n          schema:\n            type: string\n      requestBody:\n        $ref: \"#/components/requestBodies/Attribute\"\n      responses:\n        \"201\":\n          description: The attribute was created. The response's Location header is a link\n            to the created attribute.\n      summary: Create a new attribute as a child of the specified attribute.\n      tags:\n        - Attribute\n  \"/attributes/{webId}/categories\":\n    get:\n      deprecated: false\n      operationId: Attribute_GetCategories\n      parameters:\n        - description: The ID of the attribute.\n          in: path\n          name: webId\n          required: true\n          schema:\n            type: string\n        - description: List of fields to be returned in the response, separated by\n            semicolons (;). If this parameter is not specified, all available\n            fields will be returned.\n          in: query\n          name: selectedFields\n          required: false\n          schema:\n            type: string\n        - description: Optional parameter. Used to specify the type of WebID. Useful for\n            URL brevity and other special cases. Default is the value of the\n            configuration item \"WebIDType\".\n          in: query\n          name: webIdType\n          required: false\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: A list of categories.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Items_AttributeCategory_\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/Items_AttributeCategory_\"\n            text/html:\n              schema:\n                $ref: \"#/components/schemas/Items_AttributeCategory_\"\n            application/x-ms-application:\n              schema:\n                $ref: \"#/components/schemas/Items_AttributeCategory_\"\n      summary: Get an attribute's categories.\n      tags:\n        - Attribute\n  \"/attributes/{webId}/config\":\n    post:\n      deprecated: false\n      operationId: Attribute_CreateConfig\n      parameters:\n        - description: The ID of the attribute.\n          in: path\n          name: webId\n          required: true\n          schema:\n            type: string\n        - description: Optional parameter. Used to specify the type of WebID. Useful for\n            URL brevity and other special cases. Default is the value of the\n            configuration item \"WebIDType\".\n          in: query\n          name: webIdType\n          required: false\n          schema:\n            type: string\n      responses:\n        \"201\":\n          description: The attribute's DataReference configuration was created or updated.\n      summary: Create or update an attribute's DataReference configuration\n        (Create/Update PI point for PI Point DataReference).\n      tags:\n        - Attribute\n  \"/attributes/{webId}/value\":\n    get:\n      deprecated: false\n      operationId: Attribute_GetValue\n      parameters:\n        - description: The ID of the attribute.\n          in: path\n          name: webId\n          required: true\n          schema:\n            type: string\n        - description: List of fields to be returned in the response, separated by\n            semicolons (;). If this parameter is not specified, all available\n            fields will be returned.\n          in: query\n          name: selectedFields\n          required: false\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: The attribute's value.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/TimedValue\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/TimedValue\"\n            text/html:\n              schema:\n                $ref: \"#/components/schemas/TimedValue\"\n            application/x-ms-application:\n              schema:\n                $ref: \"#/components/schemas/TimedValue\"\n      summary: Get the attribute's value. This call is intended for use with attributes\n        that have no data reference only. For attributes with a data reference,\n        consult the documentation for Streams.\n      tags:\n        - Attribute\n    put:\n      deprecated: false\n      description: Users must be aware of the value type that the attribute takes before\n        changing the value. If a value entered by the user does not match the\n        value type expressed in the attribute, it will not work or it will\n        return an error. Users should also be careful of what the value type\n        means, for instance, if a value type accepts strings and the user enters\n        a number, the attribute will interpret it as a string of characters and\n        not as the integer value that the user may have wanted.\n      operationId: Attribute_SetValue\n      parameters:\n        - description: The ID of the attribute.\n          in: path\n          name: webId\n          required: true\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/TimedValue\"\n          text/json:\n            schema:\n              $ref: \"#/components/schemas/TimedValue\"\n        description: The value to write.\n        required: true\n      responses:\n        \"204\":\n          description: The value was set successfully.\n      summary: Set the value of a configuration item attribute. For attributes with a\n        data reference or non-configuration item attributes, consult the\n        documentation for streams.\n      tags:\n        - Attribute\n  /attributetemplates:\n    get:\n      deprecated: false\n      description: This method returns an attribute template based on the hierarchical path\n        associated with it, and should be used when a path has been received\n        from a separate part of the PI System for use in the PI Web API. Users\n        should primarily search with the WebID when available.\n      operationId: AttributeTemplate_GetByPath\n      parameters:\n        - description: The path to the attribute template.\n          in: query\n          name: path\n          required: true\n          schema:\n            type: string\n        - description: List of fields to be returned in the response, separated by\n            semicolons (;). If this parameter is not specified, all available\n            fields will be returned.\n          in: query\n          name: selectedFields\n          required: false\n          schema:\n            type: string\n        - description: Optional parameter. Used to specify the type of WebID. Useful for\n            URL brevity and other special cases. Default is the value of the\n            configuration item \"WebIDType\".\n          in: query\n          name: webIdType\n          required: false\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: The specified attribute template.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/AttributeTemplate\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/AttributeTemplate\"\n            text/html:\n              schema:\n                $ref: \"#/components/schemas/AttributeTemplate\"\n            application/x-ms-application:\n              schema:\n                $ref: \"#/components/schemas/AttributeTemplate\"\n      summary: Retrieve an attribute template by path.\n      tags:\n        - AttributeTemplate\n  \"/attributetemplates/{webId}\":\n    delete:\n      deprecated: false\n      description: Deleting an attribute template will delete the attributes that were\n        created based on the template\n      operationId: AttributeTemplate_Delete\n      parameters:\n        - description: The ID of the attribute template.\n          in: path\n          name: webId\n          required: true\n          schema:\n            type: string\n      responses:\n        \"204\":\n          description: The attribute template was deleted.\n      summary: Delete an attribute template.\n      tags:\n        - AttributeTemplate\n    get:\n      deprecated: false\n      operationId: AttributeTemplate_Get\n      parameters:\n        - description: The ID of the attribute template.\n          in: path\n          name: webId\n          required: true\n          schema:\n            type: string\n        - description: List of fields to be returned in the response, separated by\n            semicolons (;). If this parameter is not specified, all available\n            fields will be returned.\n          in: query\n          name: selectedFields\n          required: false\n          schema:\n            type: string\n        - description: Optional parameter. Used to specify the type of WebID. Useful for\n            URL brevity and other special cases. Default is the value of the\n            configuration item \"WebIDType\".\n          in: query\n          name: webIdType\n          required: false\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: The specified attribute template.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/AttributeTemplate\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/AttributeTemplate\"\n            text/html:\n              schema:\n                $ref: \"#/components/schemas/AttributeTemplate\"\n            application/x-ms-application:\n              schema:\n                $ref: \"#/components/schemas/AttributeTemplate\"\n      summary: Retrieve an attribute template.\n      tags:\n        - AttributeTemplate\n    patch:\n      deprecated: false\n      description: Updating an attribute template will propagate changes to the attributes\n        that were created based on the template\n      operationId: AttributeTemplate_Update\n      parameters:\n        - description: The ID of the attribute template.\n          in: path\n          name: webId\n          required: true\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/AttributeTemplate\"\n          text/json:\n            schema:\n              $ref: \"#/components/schemas/AttributeTemplate\"\n        description: A partial attribute template containing the desired changes.\n        required: true\n      responses:\n        \"204\":\n          description: The attribute template was updated.\n      summary: Update an existing attribute template by replacing items in its\n        definition.\n      tags:\n        - AttributeTemplate\n  \"/attributetemplates/{webId}/attributetemplates\":\n    get:\n      deprecated: false\n      operationId: AttributeTemplate_GetAttributeTemplates\n      parameters:\n        - description: The ID of the attribute template.\n          in: path\n          name: webId\n          required: true\n          schema:\n            type: string\n        - description: List of fields to be returned in the response, separated by\n            semicolons (;). If this parameter is not specified, all available\n            fields will be returned.\n          in: query\n          name: selectedFields\n          required: false\n          schema:\n            type: string\n        - description: Optional parameter. Used to specify the type of WebID. Useful for\n            URL brevity and other special cases. Default is the value of the\n            configuration item \"WebIDType\".\n          in: query\n          name: webIdType\n          required: false\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: A list of child attribute templates.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Items_AttributeTemplate_\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/Items_AttributeTemplate_\"\n            text/html:\n              schema:\n                $ref: \"#/components/schemas/Items_AttributeTemplate_\"\n            application/x-ms-application:\n              schema:\n                $ref: \"#/components/schemas/Items_AttributeTemplate_\"\n      summary: Retrieve an attribute template's child attribute templates.\n      tags:\n        - AttributeTemplate\n    post:\n      deprecated: false\n      operationId: AttributeTemplate_CreateAttributeTemplate\n      parameters:\n        - description: The ID of the parent attribute template on which to create the\n            attribute template.\n          in: path\n          name: webId\n          required: true\n          schema:\n            type: string\n        - description: Optional parameter. Used to specify the type of WebID. Useful for\n            URL brevity and other special cases. Default is the value of the\n            configuration item \"WebIDType\".\n          in: query\n          name: webIdType\n          required: false\n          schema:\n            type: string\n      requestBody:\n        $ref: \"#/components/requestBodies/AttributeTemplate\"\n      responses:\n        \"201\":\n          description: The attribute template was created. The response's Location header\n            is a link to the created resource.\n      summary: Create an attribute template as a child of another attribute template.\n      tags:\n        - AttributeTemplate\n  \"/attributetemplates/{webId}/categories\":\n    get:\n      deprecated: false\n      operationId: AttributeTemplate_GetCategories\n      parameters:\n        - description: The ID of the attribute template.\n          in: path\n          name: webId\n          required: true\n          schema:\n            type: string\n        - description: List of fields to be returned in the response, separated by\n            semicolons (;). If this parameter is not specified, all available\n            fields will be returned.\n          in: query\n          name: selectedFields\n          required: false\n          schema:\n            type: string\n        - description: Optional parameter. Used to specify the type of WebID. Useful for\n            URL brevity and other special cases. Default is the value of the\n            configuration item \"WebIDType\".\n          in: query\n          name: webIdType\n          required: false\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: A list of categories.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Items_AttributeCategory_\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/Items_AttributeCategory_\"\n            text/html:\n              schema:\n                $ref: \"#/components/schemas/Items_AttributeCategory_\"\n            application/x-ms-application:\n              schema:\n                $ref: \"#/components/schemas/Items_AttributeCategory_\"\n      summary: Get an attribute template's categories.\n      tags:\n        - AttributeTemplate\n  /attributetraits:\n    get:\n      deprecated: false\n      operationId: AttributeTrait_GetByCategory\n      parameters:\n        - description: The category of the attribute traits. Multiple categories may be\n            specified with multiple instances of the parameter. If the parameter\n            is not specified, or if its value is \"all\", then all attribute\n            traits of all categories will be returned.\n          in: query\n          name: category\n          required: true\n          explode: true\n          schema:\n            type: array\n            items:\n              type: string\n        - description: List of fields to be returned in the response, separated by\n            semicolons (;). If this parameter is not specified, all available\n            fields will be returned.\n          in: query\n          name: selectedFields\n          required: false\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: A list of attribute traits.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Items_AttributeTrait_\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/Items_AttributeTrait_\"\n            text/html:\n              schema:\n                $ref: \"#/components/schemas/Items_AttributeTrait_\"\n            application/x-ms-application:\n              schema:\n                $ref: \"#/components/schemas/Items_AttributeTrait_\"\n      summary: Retrieve all attribute traits of the specified category/categories.\n      tags:\n        - AttributeTrait\n  \"/attributetraits/{name}\":\n    get:\n      deprecated: false\n      operationId: AttributeTrait_Get\n      parameters:\n        - description: The name or abbreviation of the attribute trait.\n          in: path\n          name: name\n          required: true\n          schema:\n            type: string\n        - description: List of fields to be returned in the response, separated by\n            semicolons (;). If this parameter is not specified, all available\n            fields will be returned.\n          in: query\n          name: selectedFields\n          required: false\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: The requested attribute trait.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/AttributeTrait\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/AttributeTrait\"\n            text/html:\n              schema:\n                $ref: \"#/components/schemas/AttributeTrait\"\n            application/x-ms-application:\n              schema:\n                $ref: \"#/components/schemas/AttributeTrait\"\n      summary: Retrieve an attribute trait.\n      tags:\n        - AttributeTrait\n  /batch:\n    post:\n      deprecated: false\n      operationId: Batch_Execute\n      requestBody:\n        content:\n          application/json:\n            schema:\n              additionalProperties:\n                $ref: \"#/components/schemas/Request\"\n              type: object\n          text/json:\n            schema:\n              additionalProperties:\n                $ref: \"#/components/schemas/Request\"\n              type: object\n        description: The batch of requests.\n        required: true\n      responses:\n        \"207\":\n          description: A dictionary of response information corresponding to the batched\n            requests.\n          content:\n            application/json:\n              schema:\n                additionalProperties:\n                  $ref: \"#/components/schemas/Response\"\n                type: object\n            text/json:\n              schema:\n                additionalProperties:\n                  $ref: \"#/components/schemas/Response\"\n                type: object\n            text/html:\n              schema:\n                additionalProperties:\n                  $ref: \"#/components/schemas/Response\"\n                type: object\n            application/x-ms-application:\n              schema:\n                additionalProperties:\n                  $ref: \"#/components/schemas/Response\"\n                type: object\n      summary: Execute a batch of requests against the service. As shown in the Sample\n        Request, the input is a dictionary with IDs as keys and request objects\n        as values. Each request object specifies the HTTP method and the\n        resource and, optionally, the content and a list of parent IDs. The list\n        of parent IDs specifies which other requests must complete before the\n        given request will be executed. The example first creates an element,\n        then gets the element by the response's Location header, then creates an\n        attribute for the element. Note that the resource can be an absolute URL\n        or a JsonPath that references the response to the parent request. The\n        batch's response is a dictionary uses keys corresponding those provided\n        in the request, with response objects containing a status code, response\n        headers, and the response body. A request can alternatively specify a\n        request template in place of a resource. In this case, a single JsonPath\n        may select multiple tokens, and a separate subrequest will be made from\n        the template for each token. The responses of these subrequests will\n        returned as the content of a single outer response.\n      tags:\n        - Batch\n  /calculation/intervals:\n    get:\n      deprecated: false\n      operationId: Calculation_GetAtIntervals\n      parameters:\n        - description: A string containing the expression to be evaluated. The syntax for\n            the expression generally follows the Performance Equation syntax as\n            described in the PI Server documentation, with the exception that\n            expressions which target AF objects use attribute names in place of\n            tag names in the equation.\n          in: query\n          name: expression\n          required: true\n          schema:\n            type: string\n        - description: An optional end time. The default is '*' for element attributes and\n            points. For event frame attributes, the default is the event frame's\n            end time, or '*' if that is not set. Note that if endTime is earlier\n            than startTime, the resulting values will be in time-descending\n            order.\n          in: query\n          name: endTime\n          required: false\n          schema:\n            type: string\n        - description: A time span specifies how often the filter expression is evaluated\n            when computing the summary for an interval.\n          in: query\n          name: sampleInterval\n          required: false\n          schema:\n            type: string\n        - description: List of fields to be returned in the response, separated by\n            semicolons (;). If this parameter is not specified, all available\n            fields will be returned.\n          in: query\n          name: selectedFields\n          required: false\n          schema:\n            type: string\n        - description: An optional start time. The default is '*-1d' for element attributes\n            and points. For event frame attributes, the default is the event\n            frame's start time, or '*-1d' if that is not set.\n          in: query\n          name: startTime\n          required: false\n          schema:\n            type: string\n        - description: The ID of the target object of the expression. A target object can\n            be a Data Server, a database, an element, an event frame or an\n            attribute. References to attributes or points are based on the\n            target. If this parameter is not provided, the target object is set\n            to null.\n          in: query\n          name: webId\n          required: false\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: The calculated values.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/TimedValues\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/TimedValues\"\n            text/html:\n              schema:\n                $ref: \"#/components/schemas/TimedValues\"\n            application/x-ms-application:\n              schema:\n                $ref: \"#/components/schemas/TimedValues\"\n        \"409\":\n          description: The targeted object does not support the calculation.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Errors\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/Errors\"\n            text/html:\n              schema:\n                $ref: \"#/components/schemas/Errors\"\n            application/x-ms-application:\n              schema:\n                $ref: \"#/components/schemas/Errors\"\n      summary: Returns results of evaluating the expression over the time range from\n        the start time to the end time at a defined interval.\n      tags:\n        - Calculation\n  /calculation/recorded:\n    get:\n      deprecated: false\n      operationId: Calculation_GetAtRecorded\n      parameters:\n        - description: A string containing the expression to be evaluated. The syntax for\n            the expression generally follows the Performance Equation syntax as\n            described in the PI Server documentation, with the exception that\n            expressions which target AF objects use attribute names in place of\n            tag names in the equation.\n          in: query\n          name: expression\n          required: true\n          schema:\n            type: string\n        - description: An optional end time. The default is '*' for element attributes and\n            points. For event frame attributes, the default is the event frame's\n            end time, or '*' if that is not set. Note that if endTime is earlier\n            than startTime, the resulting values will be in time-descending\n            order.\n          in: query\n          name: endTime\n          required: false\n          schema:\n            type: string\n        - description: List of fields to be returned in the response, separated by\n            semicolons (;). If this parameter is not specified, all available\n            fields will be returned.\n          in: query\n          name: selectedFields\n          required: false\n          schema:\n            type: string\n        - description: An optional start time. The default is '*-1d' for element attributes\n            and points. For event frame attributes, the default is the event\n            frame's start time, or '*-1d' if that is not set.\n          in: query\n          name: startTime\n          required: false\n          schema:\n            type: string\n        - description: The ID of the target object of the expression. A target object can\n            be a Data Server, a database, an element, an event frame or an\n            attribute. References to attributes or points are based on the\n            target. If this parameter is not provided, the target object is set\n            to null.\n          in: query\n          name: webId\n          required: false\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: The calculated values.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/TimedValues\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/TimedValues\"\n            text/html:\n              schema:\n                $ref: \"#/components/schemas/TimedValues\"\n            application/x-ms-application:\n              schema:\n                $ref: \"#/components/schemas/TimedValues\"\n        \"409\":\n          description: The targeted object does not support the calculation.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Errors\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/Errors\"\n            text/html:\n              schema:\n                $ref: \"#/components/schemas/Errors\"\n            application/x-ms-application:\n              schema:\n                $ref: \"#/components/schemas/Errors\"\n      summary: Returns the result of evaluating the expression at each point in time\n        over the time range from the start time to the end time where a recorded\n        value exists for a member of the expression.\n      tags:\n        - Calculation\n  /calculation/summary:\n    get:\n      deprecated: false\n      operationId: Calculation_GetSummary\n      parameters:\n        - description: A string containing the expression to be evaluated. The syntax for\n            the expression generally follows the Performance Equation syntax as\n            described in the PI Server documentation, with the exception that\n            expressions which target AF objects use attribute names in place of\n            tag names in the equation.\n          in: query\n          name: expression\n          required: true\n          schema:\n            type: string\n        - description: Specifies the method of evaluating the data over the time range. The\n            default is 'TimeWeighted'.\n          in: query\n          name: calculationBasis\n          required: false\n          schema:\n            type: string\n        - description: An optional end time. The default is '*' for element attributes and\n            points. For event frame attributes, the default is the event frame's\n            end time, or '*' if that is not set. Note that if endTime is earlier\n            than startTime, the resulting values will be in time-descending\n            order.\n          in: query\n          name: endTime\n          required: false\n          schema:\n            type: string\n        - description: A time span specifies how often the filter expression is evaluated\n            when computing the summary for an interval, if the sampleType is\n            'Interval'.\n          in: query\n          name: sampleInterval\n          required: false\n          schema:\n            type: string\n        - description: A flag which specifies one or more summaries to compute for each\n            interval over the time range. The default is\n            'ExpressionRecordedValues'.\n          in: query\n          name: sampleType\n          required: false\n          schema:\n            type: string\n        - description: List of fields to be returned in the response, separated by\n            semicolons (;). If this parameter is not specified, all available\n            fields will be returned.\n          in: query\n          name: selectedFields\n          required: false\n          schema:\n            type: string\n        - description: An optional start time. The default is '*-1d' for element attributes\n            and points. For event frame attributes, the default is the event\n            frame's start time, or '*-1d' if that is not set.\n          in: query\n          name: startTime\n          required: false\n          schema:\n            type: string\n        - description: The duration of each summary interval.\n          in: query\n          name: summaryDuration\n          required: false\n          schema:\n            type: string\n        - description: Specifies the kinds of summaries to produce over the range. The\n            default is 'Total'. Multiple summary types may be specified by using\n            multiple instances of summaryType.\n          in: query\n          name: summaryType\n          required: false\n          explode: true\n          schema:\n            type: array\n            items:\n              type: string\n        - description: Specifies how to calculate the timestamp for each interval. The\n            default is 'Auto'.\n          in: query\n          name: timeType\n          required: false\n          schema:\n            type: string\n        - description: The ID of the target object of the expression. A target object can\n            be a Data Server, a database, an element, an event frame or an\n            attribute. References to attributes or points are based on the\n            target. If this parameter is not provided, the target object is set\n            to null.\n          in: query\n          name: webId\n          required: false\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: The calculated values.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Items_SummaryValue_\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/Items_SummaryValue_\"\n            text/html:\n              schema:\n                $ref: \"#/components/schemas/Items_SummaryValue_\"\n            application/x-ms-application:\n              schema:\n                $ref: \"#/components/schemas/Items_SummaryValue_\"\n        \"409\":\n          description: The targeted object does not support the calculation.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Errors\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/Errors\"\n            text/html:\n              schema:\n                $ref: \"#/components/schemas/Errors\"\n            application/x-ms-application:\n              schema:\n                $ref: \"#/components/schemas/Errors\"\n      summary: Returns the result of evaluating the expression over the time range from\n        the start time to the end time. The time range is first divided into a\n        number of summary intervals. Then the calculation is performed for the\n        specified summaries over each interval.\n      tags:\n        - Calculation\n  /calculation/times:\n    get:\n      deprecated: false\n      operationId: Calculation_GetAtTimes\n      parameters:\n        - description: A string containing the expression to be evaluated. The syntax for\n            the expression generally follows the Performance Equation syntax as\n            described in the PI Server documentation, with the exception that\n            expressions which target AF objects use attribute names in place of\n            tag names in the equation.\n          in: query\n          name: expression\n          required: true\n          schema:\n            type: string\n        - description: A list of timestamps at which to calculate the expression.\n          in: query\n          name: time\n          required: true\n          explode: true\n          schema:\n            type: array\n            items:\n              type: string\n        - description: List of fields to be returned in the response, separated by\n            semicolons (;). If this parameter is not specified, all available\n            fields will be returned.\n          in: query\n          name: selectedFields\n          required: false\n          schema:\n            type: string\n        - description: The order that the returned collection is sorted. The default is\n            'Ascending'.\n          in: query\n          name: sortOrder\n          required: false\n          schema:\n            type: string\n        - description: The ID of the target object of the expression. A target object can\n            be a Data Server, a database, an element, an event frame or an\n            attribute. References to attributes or points are based on the\n            target. If this parameter is not provided, the target object is set\n            to null.\n          in: query\n          name: webId\n          required: false\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: The calculated values.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/TimedValues\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/TimedValues\"\n            text/html:\n              schema:\n                $ref: \"#/components/schemas/TimedValues\"\n            application/x-ms-application:\n              schema:\n                $ref: \"#/components/schemas/TimedValues\"\n        \"409\":\n          description: The targeted object does not support the calculation.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Errors\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/Errors\"\n            text/html:\n              schema:\n                $ref: \"#/components/schemas/Errors\"\n            application/x-ms-application:\n              schema:\n                $ref: \"#/components/schemas/Errors\"\n      summary: Returns the result of evaluating the expression at the specified\n        timestamps.\n      tags:\n        - Calculation\n  /channels/instances:\n    get:\n      deprecated: false\n      operationId: Channel_Instances\n      responses:\n        \"200\":\n          description: A list of currently running channel instances.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Items_ChannelInstance_\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/Items_ChannelInstance_\"\n            text/html:\n              schema:\n                $ref: \"#/components/schemas/Items_ChannelInstance_\"\n            application/x-ms-application:\n              schema:\n                $ref: \"#/components/schemas/Items_ChannelInstance_\"\n      summary: Retrieves a list of currently running channel instances.\n      tags:\n        - Channel\n  /dataservers:\n    get:\n      deprecated: false\n      description: This method returns a list of all available known Data Servers that the\n        user can connect to. Even though a server may be returned in the list,\n        the user may not have permission to access it.\n      operationId: DataServer_List\n      parameters:\n        - description: List of fields to be returned in the response, separated by\n            semicolons (;). If this parameter is not specified, all available\n            fields will be returned.\n          in: query\n          name: selectedFields\n          required: false\n          schema:\n            type: string\n        - description: Optional parameter. Used to specify the type of WebID. Useful for\n            URL brevity and other special cases. Default is the value of the\n            configuration item \"WebIDType\".\n          in: query\n          name: webIdType\n          required: false\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: A list of all known servers.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Items_DataServer_\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/Items_DataServer_\"\n            text/html:\n              schema:\n                $ref: \"#/components/schemas/Items_DataServer_\"\n            application/x-ms-application:\n              schema:\n                $ref: \"#/components/schemas/Items_DataServer_\"\n      summary: Retrieve a list of Data Servers known to this service.\n      tags:\n        - DataServer\n  /dataservers#name:\n    get:\n      deprecated: false\n      description: This method returns a data server based on the name. Users should\n        primarily search with the WebID when available.\n      operationId: DataServer_GetByName\n      parameters:\n        - description: The name of the server.\n          in: query\n          name: name\n          required: true\n          schema:\n            type: string\n        - description: List of fields to be returned in the response, separated by\n            semicolons (;). If this parameter is not specified, all available\n            fields will be returned.\n          in: query\n          name: selectedFields\n          required: false\n          schema:\n            type: string\n        - description: Optional parameter. Used to specify the type of WebID. Useful for\n            URL brevity and other special cases. Default is the value of the\n            configuration item \"WebIDType\".\n          in: query\n          name: webIdType\n          required: false\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: The requested server.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/DataServer\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/DataServer\"\n            text/html:\n              schema:\n                $ref: \"#/components/schemas/DataServer\"\n            application/x-ms-application:\n              schema:\n                $ref: \"#/components/schemas/DataServer\"\n      summary: Retrieve a Data Server by name.\n      tags:\n        - DataServer\n  /dataservers#path:\n    get:\n      deprecated: false\n      description: This method returns a data server based on the hierarchical path\n        associated with it, and should be used when a path has been received\n        from a separate part of the PI System for use in the PI Web API. Users\n        should primarily search with the WebID when available.\n      operationId: DataServer_GetByPath\n      parameters:\n        - description: The path to the server. Note that the path supplied to this method\n            must be of the form '\\\\servername'.\n          in: query\n          name: path\n          required: true\n          schema:\n            type: string\n        - description: List of fields to be returned in the response, separated by\n            semicolons (;). If this parameter is not specified, all available\n            fields will be returned.\n          in: query\n          name: selectedFields\n          required: false\n          schema:\n            type: string\n        - description: Optional parameter. Used to specify the type of WebID. Useful for\n            URL brevity and other special cases. Default is the value of the\n            configuration item \"WebIDType\".\n          in: query\n          name: webIdType\n          required: false\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: The requested server.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/DataServer\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/DataServer\"\n            text/html:\n              schema:\n                $ref: \"#/components/schemas/DataServer\"\n            application/x-ms-application:\n              schema:\n                $ref: \"#/components/schemas/DataServer\"\n      summary: Retrieve a Data Server by path.\n      tags:\n        - DataServer\n  \"/dataservers/{webId}\":\n    get:\n      deprecated: false\n      operationId: DataServer_Get\n      parameters:\n        - description: The ID of the server.\n          in: path\n          name: webId\n          required: true\n          schema:\n            type: string\n        - description: List of fields to be returned in the response, separated by\n            semicolons (;). If this parameter is not specified, all available\n            fields will be returned.\n          in: query\n          name: selectedFields\n          required: false\n          schema:\n            type: string\n        - description: Optional parameter. Used to specify the type of WebID. Useful for\n            URL brevity and other special cases. Default is the value of the\n            configuration item \"WebIDType\".\n          in: query\n          name: webIdType\n          required: false\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: The requested server.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/DataServer\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/DataServer\"\n            text/html:\n              schema:\n                $ref: \"#/components/schemas/DataServer\"\n            application/x-ms-application:\n              schema:\n                $ref: \"#/components/schemas/DataServer\"\n      summary: Retrieve a Data Server.\n      tags:\n        - DataServer\n  \"/dataservers/{webId}/enumerationsets\":\n    get:\n      deprecated: false\n      operationId: DataServer_GetEnumerationSets\n      parameters:\n        - description: The ID of the server.\n          in: path\n          name: webId\n          required: true\n          schema:\n            type: string\n        - description: List of fields to be returned in the response, separated by\n            semicolons (;). If this parameter is not specified, all available\n            fields will be returned.\n          in: query\n          name: selectedFields\n          required: false\n          schema:\n            type: string\n        - description: Optional parameter. Used to specify the type of WebID. Useful for\n            URL brevity and other special cases. Default is the value of the\n            configuration item \"WebIDType\".\n          in: query\n          name: webIdType\n          required: false\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: The specified enumeration sets.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Items_EnumerationSet_\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/Items_EnumerationSet_\"\n            text/html:\n              schema:\n                $ref: \"#/components/schemas/Items_EnumerationSet_\"\n            application/x-ms-application:\n              schema:\n                $ref: \"#/components/schemas/Items_EnumerationSet_\"\n      summary: Retrieve enumeration sets for given Data Server.\n      tags:\n        - DataServer\n    post:\n      deprecated: false\n      operationId: DataServer_CreateEnumerationSet\n      parameters:\n        - description: The ID of the server on which to create the enumeration set.\n          in: path\n          name: webId\n          required: true\n          schema:\n            type: string\n        - description: Optional parameter. Used to specify the type of WebID. Useful for\n            URL brevity and other special cases. Default is the value of the\n            configuration item \"WebIDType\".\n          in: query\n          name: webIdType\n          required: false\n          schema:\n            type: string\n      requestBody:\n        $ref: \"#/components/requestBodies/EnumerationSet\"\n      responses:\n        \"201\":\n          description: The enumeration was created. The response's Location header is a\n            link to the created enumeration set.\n      summary: Create an enumeration set on the Data Server.\n      tags:\n        - DataServer\n  \"/dataservers/{webId}/license\":\n    get:\n      deprecated: false\n      operationId: DataServer_GetLicense\n      parameters:\n        - description: The ID of the server.\n          in: path\n          name: webId\n          required: true\n          schema:\n            type: string\n        - description: The case-sensitive name of the module.\n          in: query\n          name: module\n          required: true\n          schema:\n            type: string\n        - description: List of fields to be returned in the response, separated by\n            semicolons (;). If this parameter is not specified, all available\n            fields will be returned.\n          in: query\n          name: selectedFields\n          required: false\n          schema:\n            type: string\n        - description: Optional parameter. Used to specify the type of WebID. Useful for\n            URL brevity and other special cases. Default is the value of the\n            configuration item \"WebIDType\".\n          in: query\n          name: webIdType\n          required: false\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: The specified license.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/DataServerLicense\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/DataServerLicense\"\n            text/html:\n              schema:\n                $ref: \"#/components/schemas/DataServerLicense\"\n            application/x-ms-application:\n              schema:\n                $ref: \"#/components/schemas/DataServerLicense\"\n        \"404\":\n          description: No license with the specified module name existed.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Errors\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/Errors\"\n            text/html:\n              schema:\n                $ref: \"#/components/schemas/Errors\"\n            application/x-ms-application:\n              schema:\n                $ref: \"#/components/schemas/Errors\"\n      summary: Retrieves the specified license for the given Data Server. The fields of\n        the response object are string representations of the numerical values\n        reported by the Data Server, with \"Infinity\" representing a license\n        field with no limit.\n      tags:\n        - DataServer\n  \"/dataservers/{webId}/points\":\n    get:\n      deprecated: false\n      description: Users can search for the data servers based on specific search\n        parameters. If no parameters are specified in the search, the default\n        values for each parameter will be used and will return the data servers\n        that match the default search.\n      operationId: DataServer_GetPoints\n      parameters:\n        - description: The ID of the server.\n          in: path\n          name: webId\n          required: true\n          schema:\n            type: string\n        - description: The maximum number of objects to be returned per call (page size).\n            The default is 1000.\n          in: query\n          name: maxCount\n          required: false\n          schema:\n            type: integer\n        - description: A query string for filtering by point name. The default is no filter.\n          in: query\n          name: nameFilter\n          required: false\n          schema:\n            type: string\n        - description: List of fields to be returned in the response, separated by\n            semicolons (;). If this parameter is not specified, all available\n            fields will be returned.\n          in: query\n          name: selectedFields\n          required: false\n          schema:\n            type: string\n        - description: The starting index (zero based) of the items to be returned. The\n            default is '0'.\n          in: query\n          name: startIndex\n          required: false\n          schema:\n            type: integer\n        - description: Optional parameter. Used to specify the type of WebID. Useful for\n            URL brevity and other special cases. Default is the value of the\n            configuration item \"WebIDType\".\n          in: query\n          name: webIdType\n          required: false\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: A list of matching points.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Items_Point_\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/Items_Point_\"\n            text/html:\n              schema:\n                $ref: \"#/components/schemas/Items_Point_\"\n            application/x-ms-application:\n              schema:\n                $ref: \"#/components/schemas/Items_Point_\"\n      summary: Retrieve a list of points on a specified Data Server.\n      tags:\n        - DataServer\n    post:\n      deprecated: false\n      operationId: DataServer_CreatePoint\n      parameters:\n        - description: The ID of the server.\n          in: path\n          name: webId\n          required: true\n          schema:\n            type: string\n        - description: Optional parameter. Used to specify the type of WebID. Useful for\n            URL brevity and other special cases. Default is the value of the\n            configuration item \"WebIDType\".\n          in: query\n          name: webIdType\n          required: false\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/Point\"\n          text/json:\n            schema:\n              $ref: \"#/components/schemas/Point\"\n        description: The new point definition.\n        required: true\n      responses:\n        \"201\":\n          description: The point was created. The response's Location header is a link to\n            the point.\n      summary: Create a point in the specified Data Server.\n      tags:\n        - DataServer\n  /elementcategories:\n    get:\n      deprecated: false\n      operationId: ElementCategory_GetByPath\n      parameters:\n        - description: The path to the target element category.\n          in: query\n          name: path\n          required: true\n          schema:\n            type: string\n        - description: List of fields to be returned in the response, separated by\n            semicolons (;). If this parameter is not specified, all available\n            fields will be returned.\n          in: query\n          name: selectedFields\n          required: false\n          schema:\n            type: string\n        - description: Optional parameter. Used to specify the type of WebID. Useful for\n            URL brevity and other special cases. Default is the value of the\n            configuration item \"WebIDType\".\n          in: query\n          name: webIdType\n          required: false\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: The specified element category.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ElementCategory\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/ElementCategory\"\n            text/html:\n              schema:\n                $ref: \"#/components/schemas/ElementCategory\"\n            application/x-ms-application:\n              schema:\n                $ref: \"#/components/schemas/ElementCategory\"\n      summary: Retrieve an element category by path.\n      tags:\n        - ElementCategory\n  \"/elementcategories/{webId}\":\n    delete:\n      deprecated: false\n      operationId: ElementCategory_Delete\n      parameters:\n        - description: The ID of the element category to delete.\n          in: path\n          name: webId\n          required: true\n          schema:\n            type: string\n      responses:\n        \"204\":\n          description: The element category was deleted.\n      summary: Delete an element category.\n      tags:\n        - ElementCategory\n    get:\n      deprecated: false\n      operationId: ElementCategory_Get\n      parameters:\n        - description: The id of the element category.\n          in: path\n          name: webId\n          required: true\n          schema:\n            type: string\n        - description: List of fields to be returned in the response, separated by\n            semicolons (;). If this parameter is not specified, all available\n            fields will be returned.\n          in: query\n          name: selectedFields\n          required: false\n          schema:\n            type: string\n        - description: Optional parameter. Used to specify the type of WebID. Useful for\n            URL brevity and other special cases. Default is the value of the\n            configuration item \"WebIDType\".\n          in: query\n          name: webIdType\n          required: false\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: The specified element category.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ElementCategory\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/ElementCategory\"\n            text/html:\n              schema:\n                $ref: \"#/components/schemas/ElementCategory\"\n            application/x-ms-application:\n              schema:\n                $ref: \"#/components/schemas/ElementCategory\"\n      summary: Retrieve an element category.\n      tags:\n        - ElementCategory\n    patch:\n      deprecated: false\n      operationId: ElementCategory_Update\n      parameters:\n        - description: The ID of the element category to update.\n          in: path\n          name: webId\n          required: true\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/ElementCategory\"\n          text/json:\n            schema:\n              $ref: \"#/components/schemas/ElementCategory\"\n        description: A partial element category containing the desired changes.\n        required: true\n      responses:\n        \"204\":\n          description: The element category was updated.\n      summary: Update an element category by replacing items in its definition.\n      tags:\n        - ElementCategory\n  \"/elementcategories/{webId}/security\":\n    get:\n      deprecated: false\n      operationId: ElementCategory_GetSecurity\n      parameters:\n        - description: The ID of the element category for the security to be checked.\n          in: path\n          name: webId\n          required: true\n          schema:\n            type: string\n        - description: The user identity for the security information to be checked.\n            Multiple security identities may be specified with multiple\n            instances of the parameter. If the parameter is not specified, only\n            the current user's security rights will be returned.\n          in: query\n          name: userIdentity\n          required: true\n          explode: true\n          schema:\n            type: array\n            items:\n              type: string\n        - description: Indicates if the security cache should be refreshed before getting\n            security information. The default is 'false'.\n          in: query\n          name: forceRefresh\n          required: false\n          schema:\n            type: boolean\n        - description: List of fields to be returned in the response, separated by\n            semicolons (;). If this parameter is not specified, all available\n            fields will be returned.\n          in: query\n          name: selectedFields\n          required: false\n          schema:\n            type: string\n        - description: Optional parameter. Used to specify the type of WebID. Useful for\n            URL brevity and other special cases. Default is the value of the\n            configuration item \"WebIDType\".\n          in: query\n          name: webIdType\n          required: false\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: Security rights.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Items_SecurityRights_\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/Items_SecurityRights_\"\n            text/html:\n              schema:\n                $ref: \"#/components/schemas/Items_SecurityRights_\"\n            application/x-ms-application:\n              schema:\n                $ref: \"#/components/schemas/Items_SecurityRights_\"\n        \"400\":\n          description: An invalid or local account is specified as the user identity.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Errors\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/Errors\"\n            text/html:\n              schema:\n                $ref: \"#/components/schemas/Errors\"\n            application/x-ms-application:\n              schema:\n                $ref: \"#/components/schemas/Errors\"\n        \"401\":\n          description: Access denied for the specified user identity.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Errors\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/Errors\"\n            text/html:\n              schema:\n                $ref: \"#/components/schemas/Errors\"\n            application/x-ms-application:\n              schema:\n                $ref: \"#/components/schemas/Errors\"\n        \"409\":\n          description: Unsupported when using Anonymous authentication method.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Errors\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/Errors\"\n            text/html:\n              schema:\n                $ref: \"#/components/schemas/Errors\"\n            application/x-ms-application:\n              schema:\n                $ref: \"#/components/schemas/Errors\"\n        \"502\":\n          description: Failed to retrieve the specified user identity.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Errors\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/Errors\"\n            text/html:\n              schema:\n                $ref: \"#/components/schemas/Errors\"\n            application/x-ms-application:\n              schema:\n                $ref: \"#/components/schemas/Errors\"\n      summary: Get the security information of the specified security item associated\n        with the element category for a specified user.\n      tags:\n        - ElementCategory\n  \"/elementcategories/{webId}/securityentries\":\n    get:\n      deprecated: false\n      operationId: ElementCategory_GetSecurityEntries\n      parameters:\n        - description: The ID of the element category.\n          in: path\n          name: webId\n          required: true\n          schema:\n            type: string\n        - description: The name query string used for filtering security entries. The\n            default is no filter.\n          in: query\n          name: nameFilter\n          required: false\n          schema:\n            type: string\n        - description: List of fields to be returned in the response, separated by\n            semicolons (;). If this parameter is not specified, all available\n            fields will be returned.\n          in: query\n          name: selectedFields\n          required: false\n          schema:\n            type: string\n        - description: Optional parameter. Used to specify the type of WebID. Useful for\n            URL brevity and other special cases. Default is the value of the\n            configuration item \"WebIDType\".\n          in: query\n          name: webIdType\n          required: false\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: A list of security entries matching the specified condition.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Items_SecurityEntry_\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/Items_SecurityEntry_\"\n            text/html:\n              schema:\n                $ref: \"#/components/schemas/Items_SecurityEntry_\"\n            application/x-ms-application:\n              schema:\n                $ref: \"#/components/schemas/Items_SecurityEntry_\"\n      summary: Retrieve the security entries associated with the element category based\n        on the specified criteria. By default, all security entries for this\n        element category are returned.\n      tags:\n        - ElementCategory\n    post:\n      deprecated: false\n      operationId: ElementCategory_CreateSecurityEntry\n      parameters:\n        - description: The ID of the element category where the security entry will be\n            created.\n          in: path\n          name: webId\n          required: true\n          schema:\n            type: string\n        - description: If false, the new access permissions are only applied to the\n            associated object. If true, the access permissions of children with\n            any parent-child reference types will change when the permissions on\n            the primary parent change.\n          in: query\n          name: applyToChildren\n          required: false\n          schema:\n            type: boolean\n        - description: Optional parameter. Used to specify the type of WebID. Useful for\n            URL brevity and other special cases. Default is the value of the\n            configuration item \"WebIDType\".\n          in: query\n          name: webIdType\n          required: false\n          schema:\n            type: string\n      requestBody:\n        $ref: \"#/components/requestBodies/SecurityEntry\"\n      responses:\n        \"201\":\n          description: The security entry was created. The response's Location header is a\n            link to the security entry.\n      summary: Create a security entry owned by the element category.\n      tags:\n        - ElementCategory\n  \"/elementcategories/{webId}/securityentries/{name}\":\n    delete:\n      deprecated: false\n      operationId: ElementCategory_DeleteSecurityEntry\n      parameters:\n        - description: The name of the security entry. For every backslash character (\\) in\n            the security entry name, replace with asterisk (*). As an example,\n            use domain*username instead of domain\\username.\n          in: path\n          name: name\n          required: true\n          schema:\n            type: string\n        - description: The ID of the element category where the security entry will be\n            deleted.\n          in: path\n          name: webId\n          required: true\n          schema:\n            type: string\n        - description: If false, the new access permissions are only applied to the\n            associated object. If true, the access permissions of children with\n            any parent-child reference types will change when the permissions on\n            the primary parent change.\n          in: query\n          name: applyToChildren\n          required: false\n          schema:\n            type: boolean\n      responses:\n        \"204\":\n          description: The security entry was deleted.\n      summary: Delete a security entry owned by the element category.\n      tags:\n        - ElementCategory\n    get:\n      deprecated: false\n      operationId: ElementCategory_GetSecurityEntryByName\n      parameters:\n        - description: The name of the security entry. For every backslash character (\\) in\n            the security entry name, replace with asterisk (*). As an example,\n            use domain*username instead of domain\\username.\n          in: path\n          name: name\n          required: true\n          schema:\n            type: string\n        - description: The ID of the element category.\n          in: path\n          name: webId\n          required: true\n          schema:\n            type: string\n        - description: List of fields to be returned in the response, separated by\n            semicolons (;). If this parameter is not specified, all available\n            fields will be returned.\n          in: query\n          name: selectedFields\n          required: false\n          schema:\n            type: string\n        - description: Optional parameter. Used to specify the type of WebID. Useful for\n            URL brevity and other special cases. Default is the value of the\n            configuration item \"WebIDType\".\n          in: query\n          name: webIdType\n          required: false\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: The security entry matching the specified condition.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/SecurityEntry\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/SecurityEntry\"\n            text/html:\n              schema:\n                $ref: \"#/components/schemas/SecurityEntry\"\n            application/x-ms-application:\n              schema:\n                $ref: \"#/components/schemas/SecurityEntry\"\n        \"404\":\n          description: The security entry with the specified name is not found.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Errors\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/Errors\"\n            text/html:\n              schema:\n                $ref: \"#/components/schemas/Errors\"\n            application/x-ms-application:\n              schema:\n                $ref: \"#/components/schemas/Errors\"\n      summary: Retrieve the security entry associated with the element category with\n        the specified name.\n      tags:\n        - ElementCategory\n    put:\n      deprecated: false\n      operationId: ElementCategory_UpdateSecurityEntry\n      parameters:\n        - description: The name of the security entry.\n          in: path\n          name: name\n          required: true\n          schema:\n            type: string\n        - description: The ID of the element category where the security entry will be\n            updated.\n          in: path\n          name: webId\n          required: true\n          schema:\n            type: string\n        - description: If false, the new access permissions are only applied to the\n            associated object. If true, the access permissions of children with\n            any parent-child reference types will change when the permissions on\n            the primary parent change.\n          in: query\n          name: applyToChildren\n          required: false\n          schema:\n            type: boolean\n      requestBody:\n        $ref: \"#/components/requestBodies/SecurityEntry2\"\n      responses:\n        \"204\":\n          description: The security entry was updated.\n      summary: Update a security entry owned by the element category.\n      tags:\n        - ElementCategory\n  /elements:\n    get:\n      deprecated: false\n      description: This method returns an element based on the hierarchical path associated\n        with it, and should be used when a path has been received from a\n        separate part of the PI System for use in the PI Web API. Users should\n        primarily search with the WebID when available.\n      operationId: Element_GetByPath\n      parameters:\n        - description: The path to the element.\n          in: query\n          name: path\n          required: true\n          schema:\n            type: string\n        - description: Associated values to return in the response, separated by semicolons\n            (;). This call supports Paths to return all paths to the element. If\n            this parameter is not specified, paths are not returned.\n          in: query\n          name: associations\n          required: false\n          schema:\n            type: string\n        - description: List of fields to be returned in the response, separated by\n            semicolons (;). If this parameter is not specified, all available\n            fields will be returned.\n          in: query\n          name: selectedFields\n          required: false\n          schema:\n            type: string\n        - description: Optional parameter. Used to specify the type of WebID. Useful for\n            URL brevity and other special cases. Default is the value of the\n            configuration item \"WebIDType\".\n          in: query\n          name: webIdType\n          required: false\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: The specified element.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Element\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/Element\"\n            text/html:\n              schema:\n                $ref: \"#/components/schemas/Element\"\n            application/x-ms-application:\n              schema:\n                $ref: \"#/components/schemas/Element\"\n      summary: Retrieve an element by path.\n      tags:\n        - Element\n  /elements/multiple:\n    get:\n      deprecated: false\n      operationId: Element_GetMultiple\n      parameters:\n        - description: Specifies if the retrieval processes should be run in parallel on\n            the server. This may improve the response time for large amounts of\n            requested attributes. The default is 'false'.\n          in: query\n          name: asParallel\n          required: false\n          schema:\n            type: boolean\n        - description: Associated values to return in the response, separated by semicolons\n            (;). This call supports Paths to return all paths to the element. If\n            this parameter is not specified, paths are not returned.\n          in: query\n          name: associations\n          required: false\n          schema:\n            type: string\n        - description: The include mode for the return list. The default is 'All'.\n          in: query\n          name: includeMode\n          required: false\n          schema:\n            type: string\n        - description: The path of an element. Multiple elements may be specified with\n            multiple instances of the parameter.\n          in: query\n          name: path\n          required: false\n          explode: true\n          schema:\n            type: array\n            items:\n              type: string\n        - description: List of fields to be returned in the response, separated by\n            semicolons (;). If this parameter is not specified, all available\n            fields will be returned.\n          in: query\n          name: selectedFields\n          required: false\n          schema:\n            type: string\n        - description: The ID of an element. Multiple elements may be specified with\n            multiple instances of the parameter.\n          in: query\n          name: webId\n          required: false\n          explode: true\n          schema:\n            type: array\n            items:\n              type: string\n        - description: Optional parameter. Used to specify the type of WebID. Useful for\n            URL brevity and other special cases. Default is the value of the\n            configuration item \"WebIDType\".\n          in: query\n          name: webIdType\n          required: false\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: The requested elements\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Items_Item_Element_\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/Items_Item_Element_\"\n            text/html:\n              schema:\n                $ref: \"#/components/schemas/Items_Item_Element_\"\n            application/x-ms-application:\n              schema:\n                $ref: \"#/components/schemas/Items_Item_Element_\"\n        \"207\":\n          description: Some or all items contain exceptions.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Items_Item_Element_\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/Items_Item_Element_\"\n            text/html:\n              schema:\n                $ref: \"#/components/schemas/Items_Item_Element_\"\n            application/x-ms-application:\n              schema:\n                $ref: \"#/components/schemas/Items_Item_Element_\"\n      summary: Retrieve multiple elements by web id or path.\n      tags:\n        - Element\n  /elements/search:\n    get:\n      deprecated: false\n      operationId: Element_GetElementsQuery\n      parameters:\n        - description: Associated values to return in the response, separated by semicolons\n            (;). This call supports Paths to return all paths to the element. If\n            this parameter is not specified, paths are not returned.\n          in: query\n          name: associations\n          required: false\n          schema:\n            type: string\n        - description: The ID of the asset database to use as the root of the query.\n          in: query\n          name: databaseWebId\n          required: false\n          schema:\n            type: string\n        - description: The maximum number of objects to be returned per call (page size).\n            The default is 1000.\n          in: query\n          name: maxCount\n          required: false\n          schema:\n            type: integer\n        - description: 'The query string is a list of filters used to perform an AFSearch\n            for the elements in the asset database. An example would be:\n            \"query=Name:=MyElement* Template:=ElementTemplate\".'\n          in: query\n          name: query\n          required: false\n          schema:\n            type: string\n        - description: Optional parameter. Used to retrieve the relative the version of an\n            object. A value of null or AFTime.MaxValue initializes the query\n            date so the latest versions of sub-objects are retrieved. The value\n            may be an AFTime, DateTime, PITime, String, or numeric. An integer\n            numeric represents the number of ticks (100-nanosecond intervals)\n            since January 1, 0001. A floating point numeric represents the\n            number of seconds since January 1, 1970 UTC. A String is interpreted\n            as local time, unless it contains a time zone indicator such as a\n            trailing \"Z\" or \"GMT\".\n          in: query\n          name: queryDate\n          required: false\n          schema:\n            type: string\n        - description: List of fields to be returned in the response, separated by\n            semicolons (;). If this parameter is not specified, all available\n            fields will be returned.\n          in: query\n          name: selectedFields\n          required: false\n          schema:\n            type: string\n        - description: The starting index (zero based) of the items to be returned. The\n            default is 0.\n          in: query\n          name: startIndex\n          required: false\n          schema:\n            type: integer\n        - description: Optional parameter. Used to specify the type of WebID. Useful for\n            URL brevity and other special cases. Default is the value of the\n            configuration item \"WebIDType\".\n          in: query\n          name: webIdType\n          required: false\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: A list of elements matching the specified conditions.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Items_Element_\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/Items_Element_\"\n            text/html:\n              schema:\n                $ref: \"#/components/schemas/Items_Element_\"\n            application/x-ms-application:\n              schema:\n                $ref: \"#/components/schemas/Items_Element_\"\n      summary: Retrieve elements based on the specified conditions. By default, returns\n        all the elements.\n      tags:\n        - Element\n  /elements/searchbyattribute:\n    post:\n      deprecated: false\n      operationId: Element_CreateSearchByAttribute\n      parameters:\n        - description: Associated values to return in the response, separated by semicolons\n            (;). This call supports Paths to return all paths to the element. If\n            this parameter is not specified, paths are not returned.\n          in: query\n          name: associations\n          required: false\n          schema:\n            type: string\n        - description: If false, the response content will contain the first page of the\n            search results. If true, the response content will be empty. The\n            default is false.\n          in: query\n          name: noResults\n          required: false\n          schema:\n            type: boolean\n        - description: Optional parameter. Used to specify the type of WebID. Useful for\n            URL brevity and other special cases. Default is the value of the\n            configuration item \"WebIDType\".\n          in: query\n          name: webIdType\n          required: false\n          schema:\n            type: string\n      requestBody:\n        $ref: \"#/components/requestBodies/SearchByAttribute\"\n      responses:\n        \"201\":\n          description: The link is stored in the response's \"Location\" header. The response\n            content is the first page of the search result by the default\n            parameters.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Items_Element_\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/Items_Element_\"\n            text/html:\n              schema:\n                $ref: \"#/components/schemas/Items_Element_\"\n            application/x-ms-application:\n              schema:\n                $ref: \"#/components/schemas/Items_Element_\"\n        \"400\":\n          description: Empty or invalid request content.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Errors\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/Errors\"\n            text/html:\n              schema:\n                $ref: \"#/components/schemas/Errors\"\n            application/x-ms-application:\n              schema:\n                $ref: \"#/components/schemas/Errors\"\n        \"413\":\n          description: Request content is too large.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Errors\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/Errors\"\n            text/html:\n              schema:\n                $ref: \"#/components/schemas/Errors\"\n            application/x-ms-application:\n              schema:\n                $ref: \"#/components/schemas/Errors\"\n      summary: Create a link for a \"Search Elements By Attribute Value\" operation,\n        whose queries are specified in the request content. The SearchRoot is\n        specified by the Web Id of the root Element. If the SearchRoot is not\n        specified, then the search starts at the Asset Database. ElementTemplate\n        must be provided as the Web ID of the ElementTemplate, which are used to\n        create the Elements. All the attributes in the queries must be defined\n        as AttributeTemplates on the ElementTemplate. An array of attribute\n        value queries are ANDed together to find the desired Element objects. At\n        least one value query must be specified. There are limitations on\n        SearchOperators.\n      tags:\n        - Element\n  \"/elements/searchbyattribute/{searchId}\":\n    get:\n      deprecated: false\n      operationId: Element_ExecuteSearchByAttribute\n      parameters:\n        - description: The encoded search Id of the \"Search Elements By Attribute Value\"\n            operation.\n          in: path\n          name: searchId\n          required: true\n          schema:\n            type: string\n        - description: Associated values to return in the response, separated by semicolons\n            (;). This call supports Paths to return all paths to the element. If\n            this parameter is not specified, paths are not returned.\n          in: query\n          name: associations\n          required: false\n          schema:\n            type: string\n        - description: Specify that the owner of the returned attributes must have this\n            category. For Asset Servers older than 2.7, a 400 status code (Bad\n            Request) will be returned if this parameter is specified. The\n            default is no filter.\n          in: query\n          name: categoryName\n          required: false\n          schema:\n            type: string\n        - description: The element description filter string used for finding objects. Only\n            the first 440 characters of the description will be searched. For\n            Asset Servers older than 2.7, a 400 status code (Bad Request) will\n            be returned if this parameter is specified. The default is no\n            filter.\n          in: query\n          name: descriptionFilter\n          required: false\n          schema:\n            type: string\n        - description: The maximum number of objects to be returned. The default is 1000.\n          in: query\n          name: maxCount\n          required: false\n          schema:\n            type: integer\n        - description: The name query string used for finding objects. The default is no\n            filter.\n          in: query\n          name: nameFilter\n          required: false\n          schema:\n            type: string\n        - description: Specifies if the search should include objects nested further than\n            the immediate children of the searchRoot. The default is 'false'.\n          in: query\n          name: searchFullHierarchy\n          required: false\n          schema:\n            type: boolean\n        - description: List of fields to be returned in the response, separated by\n            semicolons (;). If this parameter is not specified, all available\n            fields will be returned.\n          in: query\n          name: selectedFields\n          required: false\n          schema:\n            type: string\n        - description: The field or property of the object used to sort the returned\n            collection. The default is 'Name'.\n          in: query\n          name: sortField\n          required: false\n          schema:\n            type: string\n        - description: The order that the returned collection is sorted. The default is\n            'Ascending'.\n          in: query\n          name: sortOrder\n          required: false\n          schema:\n            type: string\n        - description: The starting index (zero based) of the items to be returned. The\n            default is 0.\n          in: query\n          name: startIndex\n          required: false\n          schema:\n            type: integer\n        - description: Optional parameter. Used to specify the type of WebID. Useful for\n            URL brevity and other special cases. Default is the value of the\n            configuration item \"WebIDType\".\n          in: query\n          name: webIdType\n          required: false\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: a list of matching Elements.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Items_Element_\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/Items_Element_\"\n            text/html:\n              schema:\n                $ref: \"#/components/schemas/Items_Element_\"\n            application/x-ms-application:\n              schema:\n                $ref: \"#/components/schemas/Items_Element_\"\n        \"400\":\n          description: Invalid search Id or search parameters.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Errors\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/Errors\"\n            text/html:\n              schema:\n                $ref: \"#/components/schemas/Errors\"\n            application/x-ms-application:\n              schema:\n                $ref: \"#/components/schemas/Errors\"\n      summary: Execute a \"Search Elements By Attribute Value\" operation.\n      tags:\n        - Element\n  \"/elements/{webId}\":\n    delete:\n      deprecated: false\n      operationId: Element_Delete\n      parameters:\n        - description: The ID of the element.\n          in: path\n          name: webId\n          required: true\n          schema:\n            type: string\n      responses:\n        \"204\":\n          description: The element was deleted.\n      summary: Delete an element.\n      tags:\n        - Element\n    get:\n      deprecated: false\n      operationId: Element_Get\n      parameters:\n        - description: The ID of the element.\n          in: path\n          name: webId\n          required: true\n          schema:\n            type: string\n        - description: Associated values to return in the response, separated by semicolons\n            (;). This call supports Paths to return all paths to the element. If\n            this parameter is not specified, paths are not returned.\n          in: query\n          name: associations\n          required: false\n          schema:\n            type: string\n        - description: List of fields to be returned in the response, separated by\n            semicolons (;). If this parameter is not specified, all available\n            fields will be returned.\n          in: query\n          name: selectedFields\n          required: false\n          schema:\n            type: string\n        - description: Optional parameter. Used to specify the type of WebID. Useful for\n            URL brevity and other special cases. Default is the value of the\n            configuration item \"WebIDType\".\n          in: query\n          name: webIdType\n          required: false\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: The specified element.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Element\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/Element\"\n            text/html:\n              schema:\n                $ref: \"#/components/schemas/Element\"\n            application/x-ms-application:\n              schema:\n                $ref: \"#/components/schemas/Element\"\n      summary: Retrieve an element.\n      tags:\n        - Element\n    patch:\n      deprecated: false\n      operationId: Element_Update\n      parameters:\n        - description: The ID of the element.\n          in: path\n          name: webId\n          required: true\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/Element\"\n          text/json:\n            schema:\n              $ref: \"#/components/schemas/Element\"\n        description: A partial element containing the desired changes.\n        required: true\n      responses:\n        \"204\":\n          description: The element was updated.\n      summary: Update an element by replacing items in its definition.\n      tags:\n        - Element\n  \"/elements/{webId}/analyses\":\n    get:\n      deprecated: false\n      description: Users can search for the analyses based on specific search parameters.\n        If no parameters are specified in the search, the default values for\n        each parameter will be used and will return the analyses that match the\n        default search.\n      operationId: Element_GetAnalyses\n      parameters:\n        - description: The ID of the element, which is the Target of the analyses.\n          in: path\n          name: webId\n          required: true\n          schema:\n            type: string\n        - description: The maximum number of objects to be returned per call (page size).\n            The default is 1000.\n          in: query\n          name: maxCount\n          required: false\n          schema:\n            type: integer\n        - description: List of fields to be returned in the response, separated by\n            semicolons (;). If this parameter is not specified, all available\n            fields will be returned.\n          in: query\n          name: selectedFields\n          required: false\n          schema:\n            type: string\n        - description: The field or property of the object used to sort the returned\n            collection. The default is 'Name'.\n          in: query\n          name: sortField\n          required: false\n          schema:\n            type: string\n        - description: The order that the returned collection is sorted. The default is\n            'Ascending'.\n          in: query\n          name: sortOrder\n          required: false\n          schema:\n            type: string\n        - description: The starting index (zero based) of the items to be returned. The\n            default is 0.\n          in: query\n          name: startIndex\n          required: false\n          schema:\n            type: integer\n        - description: Optional parameter. Used to specify the type of WebID. Useful for\n            URL brevity and other special cases. Default is the value of the\n            configuration item \"WebIDType\".\n          in: query\n          name: webIdType\n          required: false\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: A list of analyses matching the specified conditions.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Items_Analysis_\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/Items_Analysis_\"\n            text/html:\n              schema:\n                $ref: \"#/components/schemas/Items_Analysis_\"\n            application/x-ms-application:\n              schema:\n                $ref: \"#/components/schemas/Items_Analysis_\"\n      summary: Retrieve analyses based on the specified conditions.\n      tags:\n        - Element\n    post:\n      deprecated: false\n      operationId: Element_CreateAnalysis\n      parameters:\n        - description: The ID of the element on which to create the Analysis.\n          in: path\n          name: webId\n          required: true\n          schema:\n            type: string\n        - description: Optional parameter. Used to specify the type of WebID. Useful for\n            URL brevity and other special cases. Default is the value of the\n            configuration item \"WebIDType\".\n          in: query\n          name: webIdType\n          required: false\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/Analysis\"\n          text/json:\n            schema:\n              $ref: \"#/components/schemas/Analysis\"\n        description: The new Analysis definition.\n        required: true\n      responses:\n        \"201\":\n          description: The Analysis was created. The response's Location header is a link\n            to the Analysis.\n      summary: Create an Analysis.\n      tags:\n        - Element\n  \"/elements/{webId}/attributes\":\n    get:\n      deprecated: false\n      operationId: Element_GetAttributes\n      parameters:\n        - description: The ID of the element.\n          in: path\n          name: webId\n          required: true\n          schema:\n            type: string\n        - description: Associated values to return in the response, separated by semicolons\n            (;). This call supports DataReference to return attributes with data\n            references. If this parameter is not specified, DataReference values\n            are not returned.\n          in: query\n          name: associations\n          required: false\n          schema:\n            type: string\n        - description: Specify that returned attributes must have this category. The\n            default is no category filter.\n          in: query\n          name: categoryName\n          required: false\n          schema:\n            type: string\n        - description: The maximum number of objects to be returned per call (page size).\n            The default is 1000.\n          in: query\n          name: maxCount\n          required: false\n          schema:\n            type: integer\n        - description: The name query string used for finding attributes. The default is no\n            filter.\n          in: query\n          name: nameFilter\n          required: false\n          schema:\n            type: string\n        - description: Specifies if the search should include attributes nested further\n            than the immediate attributes of the searchRoot. The default is\n            'false'.\n          in: query\n          name: searchFullHierarchy\n          required: false\n          schema:\n            type: boolean\n        - description: List of fields to be returned in the response, separated by\n            semicolons (;). If this parameter is not specified, all available\n            fields will be returned.\n          in: query\n          name: selectedFields\n          required: false\n          schema:\n            type: string\n        - description: Specified if the search should include attributes with the Excluded\n            property set. The default is 'false'.\n          in: query\n          name: showExcluded\n          required: false\n          schema:\n            type: boolean\n        - description: Specified if the search should include attributes with the Hidden\n            property set. The default is 'false'.\n          in: query\n          name: showHidden\n          required: false\n          schema:\n            type: boolean\n        - description: The field or property of the object used to sort the returned\n            collection. The default is 'Name'.\n          in: query\n          name: sortField\n          required: false\n          schema:\n            type: string\n        - description: The order that the returned collection is sorted. The default is\n            'Ascending'.\n          in: query\n          name: sortOrder\n          required: false\n          schema:\n            type: string\n        - description: The starting index (zero based) of the items to be returned. The\n            default is 0.\n          in: query\n          name: startIndex\n          required: false\n          schema:\n            type: integer\n        - description: Specify that returned attributes must be members of this template.\n            The default is no template filter.\n          in: query\n          name: templateName\n          required: false\n          schema:\n            type: string\n        - description: The name of the attribute trait. Multiple traits may be specified\n            with multiple instances of the parameter.\n          in: query\n          name: trait\n          required: false\n          explode: true\n          schema:\n            type: array\n            items:\n              type: string\n        - description: The category of the attribute traits. Multiple categories may be\n            specified with multiple instances of the parameter. If the parameter\n            is not specified, or if its value is \"all\", then all attribute\n            traits of all categories will be returned.\n          in: query\n          name: traitCategory\n          required: false\n          explode: true\n          schema:\n            type: array\n            items:\n              type: string\n        - description: Specify that returned attributes' value type must be the given value\n            type. The default is no value type filter.\n          in: query\n          name: valueType\n          required: false\n          schema:\n            type: string\n        - description: Optional parameter. Used to specify the type of WebID. Useful for\n            URL brevity and other special cases. Default is the value of the\n            configuration item \"WebIDType\".\n          in: query\n          name: webIdType\n          required: false\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: A list of child attributes.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Items_Attribute_\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/Items_Attribute_\"\n            text/html:\n              schema:\n                $ref: \"#/components/schemas/Items_Attribute_\"\n            application/x-ms-application:\n              schema:\n                $ref: \"#/components/schemas/Items_Attribute_\"\n      summary: Get the attributes of the specified element.\n      tags:\n        - Element\n    post:\n      deprecated: false\n      operationId: Element_CreateAttribute\n      parameters:\n        - description: The ID of the element on which to create the attribute.\n          in: path\n          name: webId\n          required: true\n          schema:\n            type: string\n        - description: Optional parameter. Used to specify the type of WebID. Useful for\n            URL brevity and other special cases. Default is the value of the\n            configuration item \"WebIDType\".\n          in: query\n          name: webIdType\n          required: false\n          schema:\n            type: string\n      requestBody:\n        $ref: \"#/components/requestBodies/Attribute\"\n      responses:\n        \"201\":\n          description: The attribute was created. The response's Location header is a link\n            to the created attribute.\n      summary: Create a new attribute of the specified element.\n      tags:\n        - Element\n  \"/elements/{webId}/categories\":\n    get:\n      deprecated: false\n      operationId: Element_GetCategories\n      parameters:\n        - description: The ID of the element.\n          in: path\n          name: webId\n          required: true\n          schema:\n            type: string\n        - description: List of fields to be returned in the response, separated by\n            semicolons (;). If this parameter is not specified, all available\n            fields will be returned.\n          in: query\n          name: selectedFields\n          required: false\n          schema:\n            type: string\n        - description: Optional parameter. Used to specify the type of WebID. Useful for\n            URL brevity and other special cases. Default is the value of the\n            configuration item \"WebIDType\".\n          in: query\n          name: webIdType\n          required: false\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: A list of categories.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Items_ElementCategory_\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/Items_ElementCategory_\"\n            text/html:\n              schema:\n                $ref: \"#/components/schemas/Items_ElementCategory_\"\n            application/x-ms-application:\n              schema:\n                $ref: \"#/components/schemas/Items_ElementCategory_\"\n      summary: Get an element's categories.\n      tags:\n        - Element\n  \"/elements/{webId}/config\":\n    post:\n      deprecated: false\n      operationId: Element_CreateConfig\n      parameters:\n        - description: The ID of the element.\n          in: path\n          name: webId\n          required: true\n          schema:\n            type: string\n        - description: If true, includes the child elements of the specified element.\n          in: query\n          name: includeChildElements\n          required: false\n          schema:\n            type: boolean\n      responses:\n        \"200\":\n          description: Process log of operations. Operations completed with no errors.\n        \"207\":\n          description: Process log of operations. Operations completed with errors.\n      summary: Executes the create configuration function of the data references found\n        within the attributes of the element, and optionally, its children.\n      tags:\n        - Element\n  \"/elements/{webId}/elementattributes\":\n    get:\n      deprecated: false\n      operationId: Element_FindElementAttributes\n      parameters:\n        - description: The ID of the element to use as the root of the search.\n          in: path\n          name: webId\n          required: true\n          schema:\n            type: string\n        - description: Associated values to return in the response, separated by semicolons\n            (;). This call supports DataReference to return attributes with data\n            references. If this parameter is not specified, DataReference values\n            are not returned.\n          in: query\n          name: associations\n          required: false\n          schema:\n            type: string\n        - description: Specify that returned attributes must have this category. The\n            default is no filter.\n          in: query\n          name: attributeCategory\n          required: false\n          schema:\n            type: string\n        - description: The attribute description filter string used for finding objects.\n            Only the first 440 characters of the description will be searched.\n            For Asset Servers older than 2.7, a 400 status code (Bad Request)\n            will be returned if this parameter is specified. The default is no\n            filter.\n          in: query\n          name: attributeDescriptionFilter\n          required: false\n          schema:\n            type: string\n        - description: The attribute name filter string used for finding objects. The\n            default is no filter.\n          in: query\n          name: attributeNameFilter\n          required: false\n          schema:\n            type: string\n        - description: Specify that returned attributes' value type must be this value\n            type. The default is no filter.\n          in: query\n          name: attributeType\n          required: false\n          schema:\n            type: string\n        - description: Specify that the owner of the returned attributes must have this\n            category. The default is no filter.\n          in: query\n          name: elementCategory\n          required: false\n          schema:\n            type: string\n        - description: The element description filter string used for finding objects. Only\n            the first 440 characters of the description will be searched. For\n            Asset Servers older than 2.7, a 400 status code (Bad Request) will\n            be returned if this parameter is specified. The default is no\n            filter.\n          in: query\n          name: elementDescriptionFilter\n          required: false\n          schema:\n            type: string\n        - description: The element name filter string used for finding objects. The default\n            is no filter.\n          in: query\n          name: elementNameFilter\n          required: false\n          schema:\n            type: string\n        - description: Specify that the owner of the returned attributes must have this\n            template or a template derived from this template. The default is no\n            filter.\n          in: query\n          name: elementTemplate\n          required: false\n          schema:\n            type: string\n        - description: Specify that the element of the returned attributes must have this\n            AFElementType. The default is no filter.\n          in: query\n          name: elementType\n          required: false\n          schema:\n            type: string\n        - description: The maximum number of objects to be returned (the page size). The\n            default is 1000.\n          in: query\n          name: maxCount\n          required: false\n          schema:\n            type: integer\n        - description: Specifies if the search should include objects nested further than\n            immediate children of the given resource. The default is 'false'.\n          in: query\n          name: searchFullHierarchy\n          required: false\n          schema:\n            type: boolean\n        - description: List of fields to be returned in the response, separated by\n            semicolons (;). If this parameter is not specified, all available\n            fields will be returned.\n          in: query\n          name: selectedFields\n          required: false\n          schema:\n            type: string\n        - description: The field or property of the object used to sort the returned\n            collection. The default is 'Name'.\n          in: query\n          name: sortField\n          required: false\n          schema:\n            type: string\n        - description: The order that the returned collection is sorted. The default is\n            'Ascending'.\n          in: query\n          name: sortOrder\n          required: false\n          schema:\n            type: string\n        - description: The starting index (zero based) of the items to be returned. The\n            default is 0.\n          in: query\n          name: startIndex\n          required: false\n          schema:\n            type: integer\n        - description: Optional parameter. Used to specify the type of WebID. Useful for\n            URL brevity and other special cases. Default is the value of the\n            configuration item \"WebIDType\".\n          in: query\n          name: webIdType\n          required: false\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: a list of matching attributes.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Items_Attribute_\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/Items_Attribute_\"\n            text/html:\n              schema:\n                $ref: \"#/components/schemas/Items_Attribute_\"\n            application/x-ms-application:\n              schema:\n                $ref: \"#/components/schemas/Items_Attribute_\"\n      summary: Retrieves a list of element attributes matching the specified filters\n        from the specified element.\n      tags:\n        - Element\n  \"/elements/{webId}/elements\":\n    get:\n      deprecated: false\n      description: Users can search for the elements based on specific search parameters.\n        If no parameters are specified in the search, the default values for\n        each parameter will be used and will return the elements that match the\n        default search.\n      operationId: Element_GetElements\n      parameters:\n        - description: The ID of the element to use as the root of the search.\n          in: path\n          name: webId\n          required: true\n          schema:\n            type: string\n        - description: Associated values to return in the response, separated by semicolons\n            (;). This call supports Paths to return all paths to the element. If\n            this parameter is not specified, paths are not returned.\n          in: query\n          name: associations\n          required: false\n          schema:\n            type: string\n        - description: Specify that returned elements must have this category. The default\n            is no category filter.\n          in: query\n          name: categoryName\n          required: false\n          schema:\n            type: string\n        - description: Specify that returned elements must have this description. The\n            default is no description filter.\n          in: query\n          name: descriptionFilter\n          required: false\n          schema:\n            type: string\n        - description: Specify that returned elements must have this type. The default type\n            is 'Any'.\n          in: query\n          name: elementType\n          required: false\n          schema:\n            type: string\n        - description: The maximum number of objects to be returned per call (page size).\n            The default is 1000.\n          in: query\n          name: maxCount\n          required: false\n          schema:\n            type: integer\n        - description: The name query string used for finding objects. The default is no\n            filter.\n          in: query\n          name: nameFilter\n          required: false\n          schema:\n            type: string\n        - description: Specifies if the search should include objects nested further than\n            the immediate children of the searchRoot. The default is 'false'.\n          in: query\n          name: searchFullHierarchy\n          required: false\n          schema:\n            type: boolean\n        - description: List of fields to be returned in the response, separated by\n            semicolons (;). If this parameter is not specified, all available\n            fields will be returned.\n          in: query\n          name: selectedFields\n          required: false\n          schema:\n            type: string\n        - description: The field or property of the object used to sort the returned\n            collection. The default is 'Name'.\n          in: query\n          name: sortField\n          required: false\n          schema:\n            type: string\n        - description: The order that the returned collection is sorted. The default is\n            'Ascending'.\n          in: query\n          name: sortOrder\n          required: false\n          schema:\n            type: string\n        - description: The starting index (zero based) of the items to be returned. The\n            default is 0.\n          in: query\n          name: startIndex\n          required: false\n          schema:\n            type: integer\n        - description: Specify that returned elements must have this template or a template\n            derived from this template. The default is no template filter.\n          in: query\n          name: templateName\n          required: false\n          schema:\n            type: string\n        - description: Optional parameter. Used to specify the type of WebID. Useful for\n            URL brevity and other special cases. Default is the value of the\n            configuration item \"WebIDType\".\n          in: query\n          name: webIdType\n          required: false\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: A list of elements matching the specified conditions.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Items_Element_\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/Items_Element_\"\n            text/html:\n              schema:\n                $ref: \"#/components/schemas/Items_Element_\"\n            application/x-ms-application:\n              schema:\n                $ref: \"#/components/schemas/Items_Element_\"\n      summary: Retrieve elements based on the specified conditions. By default, this\n        method selects immediate children of the specified element.\n      tags:\n        - Element\n    post:\n      deprecated: false\n      operationId: Element_CreateElement\n      parameters:\n        - description: The ID of the parent element on which to create the element.\n          in: path\n          name: webId\n          required: true\n          schema:\n            type: string\n        - description: Optional parameter. Used to specify the type of WebID. Useful for\n            URL brevity and other special cases. Default is the value of the\n            configuration item \"WebIDType\".\n          in: query\n          name: webIdType\n          required: false\n          schema:\n            type: string\n      requestBody:\n        $ref: \"#/components/requestBodies/Element\"\n      responses:\n        \"201\":\n          description: The element was created. The response's Location header is a link to\n            the element.\n      summary: Create a child element.\n      tags:\n        - Element\n  \"/elements/{webId}/eventframes\":\n    get:\n      deprecated: false\n      operationId: Element_GetEventFrames\n      parameters:\n        - description: The ID of the element whose related event frames are sought.\n          in: path\n          name: webId\n          required: true\n          schema:\n            type: string\n        - description: Specify the returned event frames' canBeAcknowledged property. The\n            default is no canBeAcknowledged filter.\n          in: query\n          name: canBeAcknowledged\n          required: false\n          schema:\n            type: boolean\n        - description: Specify that returned event frames must have this category. The\n            default is no category filter.\n          in: query\n          name: categoryName\n          required: false\n          schema:\n            type: string\n        - description: The ending time for the search. The endTime must be greater than or\n            equal to the startTime. The searchMode parameter will control\n            whether the comparison will be performed against the event frame's\n            startTime or endTime. The default is '*' if searchMode is not one of\n            the 'Backward*' or 'Forward*' values.\n          in: query\n          name: endTime\n          required: false\n          schema:\n            type: string\n        - description: Specify the returned event frames' isAcknowledged property. The\n            default no isAcknowledged filter.\n          in: query\n          name: isAcknowledged\n          required: false\n          schema:\n            type: boolean\n        - description: The maximum number of objects to be returned per call (page size).\n            The default is 1000.\n          in: query\n          name: maxCount\n          required: false\n          schema:\n            type: integer\n        - description: The name query string used for finding event frames. The default is\n            no filter.\n          in: query\n          name: nameFilter\n          required: false\n          schema:\n            type: string\n        - description: Determines how the startTime and endTime parameters are treated when\n            searching for event frame objects to be included in the returned\n            collection. If this parameter is one of the 'Backward*' or\n            'Forward*' values, none of endTime, sortField, or sortOrder may be\n            specified. The default is 'Overlapped'.\n          in: query\n          name: searchMode\n          required: false\n          schema:\n            type: string\n        - description: List of fields to be returned in the response, separated by\n            semicolons (;). If this parameter is not specified, all available\n            fields will be returned.\n          in: query\n          name: selectedFields\n          required: false\n          schema:\n            type: string\n        - description: Specify that returned event frames must have this severity. Multiple\n            severity values may be specified with multiple instances of the\n            parameter. The default is no severity filter.\n          in: query\n          name: severity\n          required: false\n          explode: true\n          schema:\n            type: array\n            items:\n              type: string\n        - description: The field or property of the object used to sort the returned\n            collection. The default is 'Name' if searchMode is not one of the\n            'Backward*' or 'Forward*' values.\n          in: query\n          name: sortField\n          required: false\n          schema:\n            type: string\n        - description: The order that the returned collection is sorted. The default is\n            'Ascending' if searchMode is not one of the 'Backward*' or\n            'Forward*' values.\n          in: query\n          name: sortOrder\n          required: false\n          schema:\n            type: string\n        - description: The starting index (zero based) of the items to be returned. The\n            default is 0.\n          in: query\n          name: startIndex\n          required: false\n          schema:\n            type: integer\n        - description: The starting time for the search. startTime must be less than or\n            equal to the endTime. The searchMode parameter will control whether\n            the comparison will be performed against the event frame's startTime\n            or endTime. The default is '*-8h'.\n          in: query\n          name: startTime\n          required: false\n          schema:\n            type: string\n        - description: Specify that returned event frames must have this template or a\n            template derived from this template. The default is no template\n            filter. Specify this parameter by name.\n          in: query\n          name: templateName\n          required: false\n          schema:\n            type: string\n        - description: Optional parameter. Used to specify the type of WebID. Useful for\n            URL brevity and other special cases. Default is the value of the\n            configuration item \"WebIDType\".\n          in: query\n          name: webIdType\n          required: false\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: A list of event frames matching the specified conditions.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Items_EventFrame_\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/Items_EventFrame_\"\n            text/html:\n              schema:\n                $ref: \"#/components/schemas/Items_EventFrame_\"\n            application/x-ms-application:\n              schema:\n                $ref: \"#/components/schemas/Items_EventFrame_\"\n      summary: Retrieve event frames that reference this element based on the specified\n        conditions. By default, returns all event frames that reference this\n        element that have been active in the past 8 hours.\n      tags:\n        - Element\n  \"/elements/{webId}/notificationrules\":\n    get:\n      deprecated: false\n      operationId: Element_GetNotificationRules\n      parameters:\n        - description: The ID of the resource to use as the root of the search.\n          in: path\n          name: webId\n          required: true\n          schema:\n            type: string\n        - description: List of fields to be returned in the response, separated by\n            semicolons (;). If this parameter is not specified, all available\n            fields will be returned.\n          in: query\n          name: selectedFields\n          required: false\n          schema:\n            type: string\n        - description: Optional parameter. Used to specify the type of WebID. Useful for\n            URL brevity and other special cases. Default is the value of the\n            configuration item \"WebIDType\".\n          in: query\n          name: webIdType\n          required: false\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: A list of notification rules.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Items_NotificationRule_\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/Items_NotificationRule_\"\n            text/html:\n              schema:\n                $ref: \"#/components/schemas/Items_NotificationRule_\"\n            application/x-ms-application:\n              schema:\n                $ref: \"#/components/schemas/Items_NotificationRule_\"\n      summary: Retrieve notification rules for an element\n      tags:\n        - Element\n    post:\n      deprecated: false\n      operationId: Element_CreateNotificationRule\n      parameters:\n        - description: The ID of the element on which to create the notification rule.\n          in: path\n          name: webId\n          required: true\n          schema:\n            type: string\n        - description: Optional parameter. Used to specify the type of WebID. Useful for\n            URL brevity and other special cases. Default is the value of the\n            configuration item \"WebIDType\".\n          in: query\n          name: webIdType\n          required: false\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/NotificationRule\"\n          text/json:\n            schema:\n              $ref: \"#/components/schemas/NotificationRule\"\n        description: The new notification rule.\n        required: true\n      responses:\n        \"201\":\n          description: The notification rule was created. The response's Location header is\n            a link to the notification rule.\n      summary: Create a notification rule.\n      tags:\n        - Element\n  \"/elements/{webId}/paths\":\n    get:\n      deprecated: false\n      description: This method will return paths with the primary path at the first index.\n        If there is no primary path, then null will be at the first index. If\n        relative path is specified but does not exist, null will be returned at\n        the first index.\n      operationId: Element_GetPaths\n      parameters:\n        - description: The ID of the element.\n          in: path\n          name: webId\n          required: true\n          schema:\n            type: string\n        - description: The full path in ShortName format to the parent object that the\n            returned paths should be relative. For example,\n            \"\\\\Server1\\Database2\" would return all the paths to the element\n            relative to the database. A path of\n            \"\\\\Server1\\Database2\\RootElement\" would return all paths to the\n            element relative to \"RootElement\". If null, then all the full paths\n            to the element will be returned.\n          in: query\n          name: relativePath\n          required: false\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: A list of the full or relative paths to this element.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Items_string_\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/Items_string_\"\n            text/html:\n              schema:\n                $ref: \"#/components/schemas/Items_string_\"\n            application/x-ms-application:\n              schema:\n                $ref: \"#/components/schemas/Items_string_\"\n      summary: Get a list of the full or relative paths to this element.\n      tags:\n        - Element\n  \"/elements/{webId}/referencedelements\":\n    delete:\n      deprecated: false\n      operationId: Element_RemoveReferencedElement\n      parameters:\n        - description: The ID of the element which the referenced element will be removed\n            from.\n          in: path\n          name: webId\n          required: true\n          schema:\n            type: string\n        - description: The ID of the referenced element. Multiple referenced elements may\n            be specified with multiple instances of the parameter.\n          in: query\n          name: referencedElementWebId\n          required: true\n          explode: true\n          schema:\n            type: array\n            items:\n              type: string\n      responses:\n        \"204\":\n          description: The referenced element was successfully removed.\n      summary: Remove a reference to an existing element from the child elements\n        collection.\n      tags:\n        - Element\n    get:\n      deprecated: false\n      description: Users can search for the referenced elements based on specific search\n        parameters. If no parameters are specified in the search, the default\n        values for each parameter will be used and will return the elements that\n        match the default search.\n      operationId: Element_GetReferencedElements\n      parameters:\n        - description: The ID of the resource to use as the root of the search.\n          in: path\n          name: webId\n          required: true\n          schema:\n            type: string\n        - description: Associated values to return in the response, separated by semicolons\n            (;). This call supports Paths to return all paths to the element. If\n            this parameter is not specified, paths are not returned.\n          in: query\n          name: associations\n          required: false\n          schema:\n            type: string\n        - description: Specify that returned elements must have this category. The default\n            is no category filter.\n          in: query\n          name: categoryName\n          required: false\n          schema:\n            type: string\n        - description: Specify that returned elements must have this description. The\n            default is no description filter.\n          in: query\n          name: descriptionFilter\n          required: false\n          schema:\n            type: string\n        - description: Specify that returned elements must have this type. The default type\n            is 'Any'.\n          in: query\n          name: elementType\n          required: false\n          schema:\n            type: string\n        - description: The maximum number of objects to be returned per call (page size).\n            The default is 1000.\n          in: query\n          name: maxCount\n          required: false\n          schema:\n            type: integer\n        - description: The name query string used for finding objects. The default is no\n            filter.\n          in: query\n          name: nameFilter\n          required: false\n          schema:\n            type: string\n        - description: List of fields to be returned in the response, separated by\n            semicolons (;). If this parameter is not specified, all available\n            fields will be returned.\n          in: query\n          name: selectedFields\n          required: false\n          schema:\n            type: string\n        - description: The field or property of the object used to sort the returned\n            collection. The default is 'Name'.\n          in: query\n          name: sortField\n          required: false\n          schema:\n            type: string\n        - description: The order that the returned collection is sorted. The default is\n            'Ascending'.\n          in: query\n          name: sortOrder\n          required: false\n          schema:\n            type: string\n        - description: The starting index (zero based) of the items to be returned. The\n            default is 0.\n          in: query\n          name: startIndex\n          required: false\n          schema:\n            type: integer\n        - description: Specify that returned elements must have this template or a template\n            derived from this template. The default is no template filter.\n          in: query\n          name: templateName\n          required: false\n          schema:\n            type: string\n        - description: Optional parameter. Used to specify the type of WebID. Useful for\n            URL brevity and other special cases. Default is the value of the\n            configuration item \"WebIDType\".\n          in: query\n          name: webIdType\n          required: false\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: A list of referenced elements matching the specified conditions.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Items_Element_\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/Items_Element_\"\n            text/html:\n              schema:\n                $ref: \"#/components/schemas/Items_Element_\"\n            application/x-ms-application:\n              schema:\n                $ref: \"#/components/schemas/Items_Element_\"\n      summary: Retrieve referenced elements based on the specified conditions. By\n        default, this method selects all referenced elements of the current\n        resource.\n      tags:\n        - Element\n    post:\n      deprecated: false\n      operationId: Element_AddReferencedElement\n      parameters:\n        - description: The ID of the element which the referenced element will be added to.\n          in: path\n          name: webId\n          required: true\n          schema:\n            type: string\n        - description: The ID of the referenced element. Multiple referenced elements may\n            be specified with multiple instances of the parameter.\n          in: query\n          name: referencedElementWebId\n          required: true\n          explode: true\n          schema:\n            type: array\n            items:\n              type: string\n        - description: The name of the reference type between the parent and the referenced\n            element. The default is \"parent-child\".\n          in: query\n          name: referenceType\n          required: false\n          schema:\n            type: string\n      responses:\n        \"204\":\n          description: The referenced element was successfully added.\n        \"409\":\n          description: The referenced element already exists in the collection.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Errors\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/Errors\"\n            text/html:\n              schema:\n                $ref: \"#/components/schemas/Errors\"\n            application/x-ms-application:\n              schema:\n                $ref: \"#/components/schemas/Errors\"\n      summary: Add a reference to an existing element to the child elements collection.\n      tags:\n        - Element\n  \"/elements/{webId}/security\":\n    get:\n      deprecated: false\n      operationId: Element_GetSecurity\n      parameters:\n        - description: The ID of the element for the security to be checked.\n          in: path\n          name: webId\n          required: true\n          schema:\n            type: string\n        - description: The user identity for the security information to be checked.\n            Multiple security identities may be specified with multiple\n            instances of the parameter. If the parameter is not specified, only\n            the current user's security rights will be returned.\n          in: query\n          name: userIdentity\n          required: true\n          explode: true\n          schema:\n            type: array\n            items:\n              type: string\n        - description: Indicates if the security cache should be refreshed before getting\n            security information. The default is 'false'.\n          in: query\n          name: forceRefresh\n          required: false\n          schema:\n            type: boolean\n        - description: List of fields to be returned in the response, separated by\n            semicolons (;). If this parameter is not specified, all available\n            fields will be returned.\n          in: query\n          name: selectedFields\n          required: false\n          schema:\n            type: string\n        - description: Optional parameter. Used to specify the type of WebID. Useful for\n            URL brevity and other special cases. Default is the value of the\n            configuration item \"WebIDType\".\n          in: query\n          name: webIdType\n          required: false\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: Security rights.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Items_SecurityRights_\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/Items_SecurityRights_\"\n            text/html:\n              schema:\n                $ref: \"#/components/schemas/Items_SecurityRights_\"\n            application/x-ms-application:\n              schema:\n                $ref: \"#/components/schemas/Items_SecurityRights_\"\n        \"400\":\n          description: An invalid or local account is specified as the user identity.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Errors\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/Errors\"\n            text/html:\n              schema:\n                $ref: \"#/components/schemas/Errors\"\n            application/x-ms-application:\n              schema:\n                $ref: \"#/components/schemas/Errors\"\n        \"401\":\n          description: Access denied for the specified user identity.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Errors\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/Errors\"\n            text/html:\n              schema:\n                $ref: \"#/components/schemas/Errors\"\n            application/x-ms-application:\n              schema:\n                $ref: \"#/components/schemas/Errors\"\n        \"409\":\n          description: Unsupported when using Anonymous authentication method.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Errors\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/Errors\"\n            text/html:\n              schema:\n                $ref: \"#/components/schemas/Errors\"\n            application/x-ms-application:\n              schema:\n                $ref: \"#/components/schemas/Errors\"\n        \"502\":\n          description: Failed to retrieve the specified user identity.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Errors\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/Errors\"\n            text/html:\n              schema:\n                $ref: \"#/components/schemas/Errors\"\n            application/x-ms-application:\n              schema:\n                $ref: \"#/components/schemas/Errors\"\n      summary: Get the security information of the specified security item associated\n        with the element for a specified user.\n      tags:\n        - Element\n  \"/elements/{webId}/securityentries\":\n    get:\n      deprecated: false\n      operationId: Element_GetSecurityEntries\n      parameters:\n        - description: The ID of the element.\n          in: path\n          name: webId\n          required: true\n          schema:\n            type: string\n        - description: The name query string used for filtering security entries. The\n            default is no filter.\n          in: query\n          name: nameFilter\n          required: false\n          schema:\n            type: string\n        - description: List of fields to be returned in the response, separated by\n            semicolons (;). If this parameter is not specified, all available\n            fields will be returned.\n          in: query\n          name: selectedFields\n          required: false\n          schema:\n            type: string\n        - description: Optional parameter. Used to specify the type of WebID. Useful for\n            URL brevity and other special cases. Default is the value of the\n            configuration item \"WebIDType\".\n          in: query\n          name: webIdType\n          required: false\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: A list of security entries matching the specified condition.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Items_SecurityEntry_\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/Items_SecurityEntry_\"\n            text/html:\n              schema:\n                $ref: \"#/components/schemas/Items_SecurityEntry_\"\n            application/x-ms-application:\n              schema:\n                $ref: \"#/components/schemas/Items_SecurityEntry_\"\n      summary: Retrieve the security entries associated with the element based on the\n        specified criteria. By default, all security entries for this element\n        are returned.\n      tags:\n        - Element\n    post:\n      deprecated: false\n      operationId: Element_CreateSecurityEntry\n      parameters:\n        - description: The ID of the element where the security entry will be created.\n          in: path\n          name: webId\n          required: true\n          schema:\n            type: string\n        - description: If false, the new access permissions are only applied to the\n            associated object. If true, the access permissions of children with\n            any parent-child reference types will change when the permissions on\n            the primary parent change.\n          in: query\n          name: applyToChildren\n          required: false\n          schema:\n            type: boolean\n        - description: Optional parameter. Used to specify the type of WebID. Useful for\n            URL brevity and other special cases. Default is the value of the\n            configuration item \"WebIDType\".\n          in: query\n          name: webIdType\n          required: false\n          schema:\n            type: string\n      requestBody:\n        $ref: \"#/components/requestBodies/SecurityEntry\"\n      responses:\n        \"201\":\n          description: The security entry was created. The response's Location header is a\n            link to the security entry.\n      summary: Create a security entry owned by the element.\n      tags:\n        - Element\n  \"/elements/{webId}/securityentries/{name}\":\n    delete:\n      deprecated: false\n      operationId: Element_DeleteSecurityEntry\n      parameters:\n        - description: The name of the security entry. For every backslash character (\\) in\n            the security entry name, replace with asterisk (*). As an example,\n            use domain*username instead of domain\\username.\n          in: path\n          name: name\n          required: true\n          schema:\n            type: string\n        - description: The ID of the element where the security entry will be deleted.\n          in: path\n          name: webId\n          required: true\n          schema:\n            type: string\n        - description: If false, the new access permissions are only applied to the\n            associated object. If true, the access permissions of children with\n            any parent-child reference types will change when the permissions on\n            the primary parent change.\n          in: query\n          name: applyToChildren\n          required: false\n          schema:\n            type: boolean\n      responses:\n        \"204\":\n          description: The security entry was deleted.\n      summary: Delete a security entry owned by the element.\n      tags:\n        - Element\n    get:\n      deprecated: false\n      operationId: Element_GetSecurityEntryByName\n      parameters:\n        - description: The name of the security entry. For every backslash character (\\) in\n            the security entry name, replace with asterisk (*). As an example,\n            use domain*username instead of domain\\username.\n          in: path\n          name: name\n          required: true\n          schema:\n            type: string\n        - description: The ID of the element.\n          in: path\n          name: webId\n          required: true\n          schema:\n            type: string\n        - description: List of fields to be returned in the response, separated by\n            semicolons (;). If this parameter is not specified, all available\n            fields will be returned.\n          in: query\n          name: selectedFields\n          required: false\n          schema:\n            type: string\n        - description: Optional parameter. Used to specify the type of WebID. Useful for\n            URL brevity and other special cases. Default is the value of the\n            configuration item \"WebIDType\".\n          in: query\n          name: webIdType\n          required: false\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: The security entry matching the specified condition.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/SecurityEntry\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/SecurityEntry\"\n            text/html:\n              schema:\n                $ref: \"#/components/schemas/SecurityEntry\"\n            application/x-ms-application:\n              schema:\n                $ref: \"#/components/schemas/SecurityEntry\"\n        \"404\":\n          description: The security entry with the specified name is not found.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Errors\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/Errors\"\n            text/html:\n              schema:\n                $ref: \"#/components/schemas/Errors\"\n            application/x-ms-application:\n              schema:\n                $ref: \"#/components/schemas/Errors\"\n      summary: Retrieve the security entry associated with the element with the\n        specified name.\n      tags:\n        - Element\n    put:\n      deprecated: false\n      operationId: Element_UpdateSecurityEntry\n      parameters:\n        - description: The name of the security entry.\n          in: path\n          name: name\n          required: true\n          schema:\n            type: string\n        - description: The ID of the element where the security entry will be updated.\n          in: path\n          name: webId\n          required: true\n          schema:\n            type: string\n        - description: If false, the new access permissions are only applied to the\n            associated object. If true, the access permissions of children with\n            any parent-child reference types will change when the permissions on\n            the primary parent change.\n          in: query\n          name: applyToChildren\n          required: false\n          schema:\n            type: boolean\n      requestBody:\n        $ref: \"#/components/requestBodies/SecurityEntry2\"\n      responses:\n        \"204\":\n          description: The security entry was updated.\n      summary: Update a security entry owned by the element.\n      tags:\n        - Element\n  /elementtemplates:\n    get:\n      deprecated: false\n      description: This method returns an element template based on the hierarchical path\n        associated with it, and should be used when a path has been received\n        from a separate part of the PI System for use in the PI Web API. Users\n        should primarily search with the WebID when available.\n      operationId: ElementTemplate_GetByPath\n      parameters:\n        - description: The path to the element template.\n          in: query\n          name: path\n          required: true\n          schema:\n            type: string\n        - description: List of fields to be returned in the response, separated by\n            semicolons (;). If this parameter is not specified, all available\n            fields will be returned.\n          in: query\n          name: selectedFields\n          required: false\n          schema:\n            type: string\n        - description: Optional parameter. Used to specify the type of WebID. Useful for\n            URL brevity and other special cases. Default is the value of the\n            configuration item \"WebIDType\".\n          in: query\n          name: webIdType\n          required: false\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: The specified element template.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ElementTemplate\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/ElementTemplate\"\n            text/html:\n              schema:\n                $ref: \"#/components/schemas/ElementTemplate\"\n            application/x-ms-application:\n              schema:\n                $ref: \"#/components/schemas/ElementTemplate\"\n      summary: Retrieve an element template by path.\n      tags:\n        - ElementTemplate\n  \"/elementtemplates/{webId}\":\n    delete:\n      deprecated: false\n      description: Deleting an element template will delete all associated templated data\n        from elements which were created from it.\n      operationId: ElementTemplate_Delete\n      parameters:\n        - description: The ID of the element template to update.\n          in: path\n          name: webId\n          required: true\n          schema:\n            type: string\n      responses:\n        \"204\":\n          description: The element template was deleted.\n      summary: Delete an element template.\n      tags:\n        - ElementTemplate\n    get:\n      deprecated: false\n      operationId: ElementTemplate_Get\n      parameters:\n        - description: The ID of the element template.\n          in: path\n          name: webId\n          required: true\n          schema:\n            type: string\n        - description: List of fields to be returned in the response, separated by\n            semicolons (;). If this parameter is not specified, all available\n            fields will be returned.\n          in: query\n          name: selectedFields\n          required: false\n          schema:\n            type: string\n        - description: Optional parameter. Used to specify the type of WebID. Useful for\n            URL brevity and other special cases. Default is the value of the\n            configuration item \"WebIDType\".\n          in: query\n          name: webIdType\n          required: false\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: The specified element template.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ElementTemplate\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/ElementTemplate\"\n            text/html:\n              schema:\n                $ref: \"#/components/schemas/ElementTemplate\"\n            application/x-ms-application:\n              schema:\n                $ref: \"#/components/schemas/ElementTemplate\"\n      summary: Retrieve an element template.\n      tags:\n        - ElementTemplate\n    patch:\n      deprecated: false\n      description: Updating the InstanceType property of an element template will not\n        affect any elements that have already been created from this template;\n        it will only affect any future elements created from this template. All\n        other changes will be propagated to elements based on this template.\n      operationId: ElementTemplate_Update\n      parameters:\n        - description: The ID of the element template to update.\n          in: path\n          name: webId\n          required: true\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/ElementTemplate\"\n          text/json:\n            schema:\n              $ref: \"#/components/schemas/ElementTemplate\"\n        description: A partial element template containing the desired changes.\n        required: true\n      responses:\n        \"204\":\n          description: The element template was updated.\n      summary: Update an element template by replacing items in its definition.\n      tags:\n        - ElementTemplate\n  \"/elementtemplates/{webId}/analysistemplates\":\n    get:\n      deprecated: false\n      operationId: ElementTemplate_GetAnalysisTemplates\n      parameters:\n        - description: The ID of the element template.\n          in: path\n          name: webId\n          required: true\n          schema:\n            type: string\n        - description: List of fields to be returned in the response, separated by\n            semicolons (;). If this parameter is not specified, all available\n            fields will be returned.\n          in: query\n          name: selectedFields\n          required: false\n          schema:\n            type: string\n        - description: Optional parameter. Used to specify the type of WebID. Useful for\n            URL brevity and other special cases. Default is the value of the\n            configuration item \"WebIDType\".\n          in: query\n          name: webIdType\n          required: false\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: A list of analysis templates for the specified element template.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Items_AnalysisTemplate_\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/Items_AnalysisTemplate_\"\n            text/html:\n              schema:\n                $ref: \"#/components/schemas/Items_AnalysisTemplate_\"\n            application/x-ms-application:\n              schema:\n                $ref: \"#/components/schemas/Items_AnalysisTemplate_\"\n      summary: Get analysis templates for an element template.\n      tags:\n        - ElementTemplate\n  \"/elementtemplates/{webId}/attributetemplates\":\n    get:\n      deprecated: false\n      description: If 'showInherited' and 'showDescendants' are 'true', it returns all the\n        attribute templates from current element template and the base\n        template.  If 'showInherited' is 'false', it returns all the attribute\n        templates from the current element template.\n      operationId: ElementTemplate_GetAttributeTemplates\n      parameters:\n        - description: The ID of the element template.\n          in: path\n          name: webId\n          required: true\n          schema:\n            type: string\n        - description: When 'true', a Depth First traversal will be performed; this starts\n            at the root and explores as far as possible along each branch before\n            backtracking. When 'false', a Breadth First traversal will be\n            performed; this starts at the tree root and explores the neighbor\n            nodes first, then moves onto the next level of neighbors. The\n            default is 'false' (Breadth First).\n          in: query\n          name: depthFirstTraverse\n          required: false\n          schema:\n            type: boolean\n        - description: The maximum number of objects to be returned. The default is 1000.\n          in: query\n          name: maxCount\n          required: false\n          schema:\n            type: integer\n        - description: List of fields to be returned in the response, separated by\n            semicolons (;). If this parameter is not specified, all available\n            fields will be returned.\n          in: query\n          name: selectedFields\n          required: false\n          schema:\n            type: string\n        - description: Specifies if the result should include all descendant attribute\n            templates from the current element template, even indirect ones. The\n            default is 'false'.\n          in: query\n          name: showDescendants\n          required: false\n          schema:\n            type: boolean\n        - description: Specifies if the result should include attribute templates inherited\n            from base element templates. The default is 'false'.\n          in: query\n          name: showInherited\n          required: false\n          schema:\n            type: boolean\n        - description: The starting index (zero based) of the items to be returned. The\n            default is 0.\n          in: query\n          name: startIndex\n          required: false\n          schema:\n            type: integer\n        - description: Optional parameter. Used to specify the type of WebID. Useful for\n            URL brevity and other special cases. Default is the value of the\n            configuration item \"WebIDType\".\n          in: query\n          name: webIdType\n          required: false\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: A list of attribute templates for the specified element template.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Items_AttributeTemplate_\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/Items_AttributeTemplate_\"\n            text/html:\n              schema:\n                $ref: \"#/components/schemas/Items_AttributeTemplate_\"\n            application/x-ms-application:\n              schema:\n                $ref: \"#/components/schemas/Items_AttributeTemplate_\"\n      summary: Get child attribute templates for an element template.\n      tags:\n        - ElementTemplate\n    post:\n      deprecated: false\n      operationId: ElementTemplate_CreateAttributeTemplate\n      parameters:\n        - description: The ID of the element template on which to create the attribute\n            template.\n          in: path\n          name: webId\n          required: true\n          schema:\n            type: string\n        - description: Optional parameter. Used to specify the type of WebID. Useful for\n            URL brevity and other special cases. Default is the value of the\n            configuration item \"WebIDType\".\n          in: query\n          name: webIdType\n          required: false\n          schema:\n            type: string\n      requestBody:\n        $ref: \"#/components/requestBodies/AttributeTemplate\"\n      responses:\n        \"201\":\n          description: The attribute template was created. The response's Location header\n            is a link to the created resource.\n      summary: Create an attribute template.\n      tags:\n        - ElementTemplate\n  \"/elementtemplates/{webId}/baseelementtemplates\":\n    get:\n      deprecated: false\n      description: The root template will be returned first, followed by successive\n        templates in the inheritance chain.\n      operationId: ElementTemplate_GetBaseElementTemplates\n      parameters:\n        - description: The ID of the element template.\n          in: path\n          name: webId\n          required: true\n          schema:\n            type: string\n        - description: The maximum number of objects to be returned. The default is 1000.\n          in: query\n          name: maxCount\n          required: false\n          schema:\n            type: integer\n        - description: List of fields to be returned in the response, separated by\n            semicolons (;). If this parameter is not specified, all available\n            fields will be returned.\n          in: query\n          name: selectedFields\n          required: false\n          schema:\n            type: string\n        - description: Optional parameter. Used to specify the type of WebID. Useful for\n            URL brevity and other special cases. Default is the value of the\n            configuration item \"WebIDType\".\n          in: query\n          name: webIdType\n          required: false\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: A list of base element templates for the specified element template.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Items_ElementTemplate_\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/Items_ElementTemplate_\"\n            text/html:\n              schema:\n                $ref: \"#/components/schemas/Items_ElementTemplate_\"\n            application/x-ms-application:\n              schema:\n                $ref: \"#/components/schemas/Items_ElementTemplate_\"\n      summary: Get base element templates for an element template.\n      tags:\n        - ElementTemplate\n  \"/elementtemplates/{webId}/categories\":\n    get:\n      deprecated: false\n      operationId: ElementTemplate_GetCategories\n      parameters:\n        - description: The ID of the element template.\n          in: path\n          name: webId\n          required: true\n          schema:\n            type: string\n        - description: List of fields to be returned in the response, separated by\n            semicolons (;). If this parameter is not specified, all available\n            fields will be returned.\n          in: query\n          name: selectedFields\n          required: false\n          schema:\n            type: string\n        - description: Specifies if the result should include categories inherited from\n            base element templates. The default is 'false'.\n          in: query\n          name: showInherited\n          required: false\n          schema:\n            type: boolean\n        - description: Optional parameter. Used to specify the type of WebID. Useful for\n            URL brevity and other special cases. Default is the value of the\n            configuration item \"WebIDType\".\n          in: query\n          name: webIdType\n          required: false\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: A list of categories.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Items_ElementCategory_\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/Items_ElementCategory_\"\n            text/html:\n              schema:\n                $ref: \"#/components/schemas/Items_ElementCategory_\"\n            application/x-ms-application:\n              schema:\n                $ref: \"#/components/schemas/Items_ElementCategory_\"\n      summary: Get an element template's categories.\n      tags:\n        - ElementTemplate\n  \"/elementtemplates/{webId}/derivedelementtemplates\":\n    get:\n      deprecated: false\n      operationId: ElementTemplate_GetDerivedElementTemplates\n      parameters:\n        - description: The ID of the element template.\n          in: path\n          name: webId\n          required: true\n          schema:\n            type: string\n        - description: The maximum number of objects to be returned. The default is 1000.\n          in: query\n          name: maxCount\n          required: false\n          schema:\n            type: integer\n        - description: List of fields to be returned in the response, separated by\n            semicolons (;). If this parameter is not specified, all available\n            fields will be returned.\n          in: query\n          name: selectedFields\n          required: false\n          schema:\n            type: string\n        - description: Specifies if the result should include all descendant element\n            templates from the current element template, even indirect ones. The\n            default is 'false'.\n          in: query\n          name: showDescendants\n          required: false\n          schema:\n            type: boolean\n        - description: Optional parameter. Used to specify the type of WebID. Useful for\n            URL brevity and other special cases. Default is the value of the\n            configuration item \"WebIDType\".\n          in: query\n          name: webIdType\n          required: false\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: A list of derived element templates for the specified element\n            template.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Items_ElementTemplate_\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/Items_ElementTemplate_\"\n            text/html:\n              schema:\n                $ref: \"#/components/schemas/Items_ElementTemplate_\"\n            application/x-ms-application:\n              schema:\n                $ref: \"#/components/schemas/Items_ElementTemplate_\"\n      summary: Get derived element templates for an element template.\n      tags:\n        - ElementTemplate\n  \"/elementtemplates/{webId}/notificationruletemplates\":\n    get:\n      deprecated: false\n      operationId: ElementTemplate_GetNotificationRuleTemplates\n      parameters:\n        - description: The ID of the element template.\n          in: path\n          name: webId\n          required: true\n          schema:\n            type: string\n        - description: List of fields to be returned in the response, separated by\n            semicolons (;). If this parameter is not specified, all available\n            fields will be returned.\n          in: query\n          name: selectedFields\n          required: false\n          schema:\n            type: string\n        - description: Optional parameter. Used to specify the type of WebID. Useful for\n            URL brevity and other special cases. Default is the value of the\n            configuration item \"WebIDType\".\n          in: query\n          name: webIdType\n          required: false\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: A list of notification rule templates.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Items_NotificationRuleTemplate_\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/Items_NotificationRuleTemplate_\"\n            text/html:\n              schema:\n                $ref: \"#/components/schemas/Items_NotificationRuleTemplate_\"\n            application/x-ms-application:\n              schema:\n                $ref: \"#/components/schemas/Items_NotificationRuleTemplate_\"\n      summary: Get notification rule templates for an element template\n      tags:\n        - ElementTemplate\n    post:\n      deprecated: false\n      operationId: ElementTemplate_CreateNotificationRuleTemplate\n      parameters:\n        - description: The ID of the element on which to create the notification rule\n            template.\n          in: path\n          name: webId\n          required: true\n          schema:\n            type: string\n        - description: Optional parameter. Used to specify the type of WebID. Useful for\n            URL brevity and other special cases. Default is the value of the\n            configuration item \"WebIDType\".\n          in: query\n          name: webIdType\n          required: false\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/NotificationRuleTemplate\"\n          text/json:\n            schema:\n              $ref: \"#/components/schemas/NotificationRuleTemplate\"\n        description: The new notification rule template.\n        required: true\n      responses:\n        \"201\":\n          description: The notification rule template was created. The response's Location\n            header is a link to the notification rule template.\n      summary: Create a notification rule template.\n      tags:\n        - ElementTemplate\n  \"/elementtemplates/{webId}/security\":\n    get:\n      deprecated: false\n      operationId: ElementTemplate_GetSecurity\n      parameters:\n        - description: The ID of the element template for the security to be checked.\n          in: path\n          name: webId\n          required: true\n          schema:\n            type: string\n        - description: The user identity for the security information to be checked.\n            Multiple security identities may be specified with multiple\n            instances of the parameter. If the parameter is not specified, only\n            the current user's security rights will be returned.\n          in: query\n          name: userIdentity\n          required: true\n          explode: true\n          schema:\n            type: array\n            items:\n              type: string\n        - description: Indicates if the security cache should be refreshed before getting\n            security information. The default is 'false'.\n          in: query\n          name: forceRefresh\n          required: false\n          schema:\n            type: boolean\n        - description: List of fields to be returned in the response, separated by\n            semicolons (;). If this parameter is not specified, all available\n            fields will be returned.\n          in: query\n          name: selectedFields\n          required: false\n          schema:\n            type: string\n        - description: Optional parameter. Used to specify the type of WebID. Useful for\n            URL brevity and other special cases. Default is the value of the\n            configuration item \"WebIDType\".\n          in: query\n          name: webIdType\n          required: false\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: Security rights.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Items_SecurityRights_\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/Items_SecurityRights_\"\n            text/html:\n              schema:\n                $ref: \"#/components/schemas/Items_SecurityRights_\"\n            application/x-ms-application:\n              schema:\n                $ref: \"#/components/schemas/Items_SecurityRights_\"\n        \"400\":\n          description: An invalid or local account is specified as the user identity.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Errors\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/Errors\"\n            text/html:\n              schema:\n                $ref: \"#/components/schemas/Errors\"\n            application/x-ms-application:\n              schema:\n                $ref: \"#/components/schemas/Errors\"\n        \"401\":\n          description: Access denied for the specified user identity.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Errors\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/Errors\"\n            text/html:\n              schema:\n                $ref: \"#/components/schemas/Errors\"\n            application/x-ms-application:\n              schema:\n                $ref: \"#/components/schemas/Errors\"\n        \"409\":\n          description: Unsupported when using Anonymous authentication method.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Errors\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/Errors\"\n            text/html:\n              schema:\n                $ref: \"#/components/schemas/Errors\"\n            application/x-ms-application:\n              schema:\n                $ref: \"#/components/schemas/Errors\"\n        \"502\":\n          description: Failed to retrieve the specified user identity.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Errors\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/Errors\"\n            text/html:\n              schema:\n                $ref: \"#/components/schemas/Errors\"\n            application/x-ms-application:\n              schema:\n                $ref: \"#/components/schemas/Errors\"\n      summary: Get the security information of the specified security item associated\n        with the element template for a specified user.\n      tags:\n        - ElementTemplate\n  \"/elementtemplates/{webId}/securityentries\":\n    get:\n      deprecated: false\n      operationId: ElementTemplate_GetSecurityEntries\n      parameters:\n        - description: The ID of the element template.\n          in: path\n          name: webId\n          required: true\n          schema:\n            type: string\n        - description: The name query string used for filtering security entries. The\n            default is no filter.\n          in: query\n          name: nameFilter\n          required: false\n          schema:\n            type: string\n        - description: List of fields to be returned in the response, separated by\n            semicolons (;). If this parameter is not specified, all available\n            fields will be returned.\n          in: query\n          name: selectedFields\n          required: false\n          schema:\n            type: string\n        - description: Optional parameter. Used to specify the type of WebID. Useful for\n            URL brevity and other special cases. Default is the value of the\n            configuration item \"WebIDType\".\n          in: query\n          name: webIdType\n          required: false\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: A list of security entries matching the specified condition.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Items_SecurityEntry_\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/Items_SecurityEntry_\"\n            text/html:\n              schema:\n                $ref: \"#/components/schemas/Items_SecurityEntry_\"\n            application/x-ms-application:\n              schema:\n                $ref: \"#/components/schemas/Items_SecurityEntry_\"\n      summary: Retrieve the security entries associated with the element template based\n        on the specified criteria. By default, all security entries for this\n        element template are returned.\n      tags:\n        - ElementTemplate\n    post:\n      deprecated: false\n      operationId: ElementTemplate_CreateSecurityEntry\n      parameters:\n        - description: The ID of the element template where the security entry will be\n            created.\n          in: path\n          name: webId\n          required: true\n          schema:\n            type: string\n        - description: If false, the new access permissions are only applied to the\n            associated object. If true, the access permissions of children with\n            any parent-child reference types will change when the permissions on\n            the primary parent change.\n          in: query\n          name: applyToChildren\n          required: false\n          schema:\n            type: boolean\n        - description: Optional parameter. Used to specify the type of WebID. Useful for\n            URL brevity and other special cases. Default is the value of the\n            configuration item \"WebIDType\".\n          in: query\n          name: webIdType\n          required: false\n          schema:\n            type: string\n      requestBody:\n        $ref: \"#/components/requestBodies/SecurityEntry\"\n      responses:\n        \"201\":\n          description: The security entry was created. The response's Location header is a\n            link to the security entry.\n      summary: Create a security entry owned by the element template.\n      tags:\n        - ElementTemplate\n  \"/elementtemplates/{webId}/securityentries/{name}\":\n    delete:\n      deprecated: false\n      operationId: ElementTemplate_DeleteSecurityEntry\n      parameters:\n        - description: The name of the security entry. For every backslash character (\\) in\n            the security entry name, replace with asterisk (*). As an example,\n            use domain*username instead of domain\\username.\n          in: path\n          name: name\n          required: true\n          schema:\n            type: string\n        - description: The ID of the element template where the security entry will be\n            deleted.\n          in: path\n          name: webId\n          required: true\n          schema:\n            type: string\n        - description: If false, the new access permissions are only applied to the\n            associated object. If true, the access permissions of children with\n            any parent-child reference types will change when the permissions on\n            the primary parent change.\n          in: query\n          name: applyToChildren\n          required: false\n          schema:\n            type: boolean\n      responses:\n        \"204\":\n          description: The security entry was deleted.\n      summary: Delete a security entry owned by the element template.\n      tags:\n        - ElementTemplate\n    get:\n      deprecated: false\n      operationId: ElementTemplate_GetSecurityEntryByName\n      parameters:\n        - description: The name of the security entry. For every backslash character (\\) in\n            the security entry name, replace with asterisk (*). As an example,\n            use domain*username instead of domain\\username.\n          in: path\n          name: name\n          required: true\n          schema:\n            type: string\n        - description: The ID of the element template.\n          in: path\n          name: webId\n          required: true\n          schema:\n            type: string\n        - description: List of fields to be returned in the response, separated by\n            semicolons (;). If this parameter is not specified, all available\n            fields will be returned.\n          in: query\n          name: selectedFields\n          required: false\n          schema:\n            type: string\n        - description: Optional parameter. Used to specify the type of WebID. Useful for\n            URL brevity and other special cases. Default is the value of the\n            configuration item \"WebIDType\".\n          in: query\n          name: webIdType\n          required: false\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: The security entry matching the specified condition.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Items_SecurityEntry_\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/Items_SecurityEntry_\"\n            text/html:\n              schema:\n                $ref: \"#/components/schemas/Items_SecurityEntry_\"\n            application/x-ms-application:\n              schema:\n                $ref: \"#/components/schemas/Items_SecurityEntry_\"\n        \"404\":\n          description: The security entry with the specified name is not found.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Errors\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/Errors\"\n            text/html:\n              schema:\n                $ref: \"#/components/schemas/Errors\"\n            application/x-ms-application:\n              schema:\n                $ref: \"#/components/schemas/Errors\"\n      summary: Retrieve the security entry associated with the element template with\n        the specified name.\n      tags:\n        - ElementTemplate\n    put:\n      deprecated: false\n      operationId: ElementTemplate_UpdateSecurityEntry\n      parameters:\n        - description: The name of the security entry.\n          in: path\n          name: name\n          required: true\n          schema:\n            type: string\n        - description: The ID of the element template where the security entry will be\n            updated.\n          in: path\n          name: webId\n          required: true\n          schema:\n            type: string\n        - description: If false, the new access permissions are only applied to the\n            associated object. If true, the access permissions of children with\n            any parent-child reference types will change when the permissions on\n            the primary parent change.\n          in: query\n          name: applyToChildren\n          required: false\n          schema:\n            type: boolean\n      requestBody:\n        $ref: \"#/components/requestBodies/SecurityEntry2\"\n      responses:\n        \"204\":\n          description: The security entry was updated.\n      summary: Update a security entry owned by the element template.\n      tags:\n        - ElementTemplate\n  /enumerationsets:\n    get:\n      deprecated: false\n      description: This method returns an enumeration set based on the hierarchical path\n        associated with it, and should be used when a path has been received\n        from a separate part of the PI System for use in the PI Web API. Users\n        should primarily search with the WebID when available.\n      operationId: EnumerationSet_GetByPath\n      parameters:\n        - description: The path to the target enumeration set.\n          in: query\n          name: path\n          required: true\n          schema:\n            type: string\n        - description: List of fields to be returned in the response, separated by\n            semicolons (;). If this parameter is not specified, all available\n            fields will be returned.\n          in: query\n          name: selectedFields\n          required: false\n          schema:\n            type: string\n        - description: Optional parameter. Used to specify the type of WebID. Useful for\n            URL brevity and other special cases. Default is the value of the\n            configuration item \"WebIDType\".\n          in: query\n          name: webIdType\n          required: false\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: The specified enumeration set.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/EnumerationSet\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/EnumerationSet\"\n            text/html:\n              schema:\n                $ref: \"#/components/schemas/EnumerationSet\"\n            application/x-ms-application:\n              schema:\n                $ref: \"#/components/schemas/EnumerationSet\"\n      summary: Retrieve an enumeration set by path.\n      tags:\n        - EnumerationSet\n  \"/enumerationsets/{webId}\":\n    delete:\n      deprecated: false\n      operationId: EnumerationSet_Delete\n      parameters:\n        - description: The ID of the enumeration set to delete.\n          in: path\n          name: webId\n          required: true\n          schema:\n            type: string\n      responses:\n        \"204\":\n          description: The enumeration set was deleted.\n      summary: Delete an enumeration set.\n      tags:\n        - EnumerationSet\n    get:\n      deprecated: false\n      operationId: EnumerationSet_Get\n      parameters:\n        - description: The ID of the enumeration set.\n          in: path\n          name: webId\n          required: true\n          schema:\n            type: string\n        - description: List of fields to be returned in the response, separated by\n            semicolons (;). If this parameter is not specified, all available\n            fields will be returned.\n          in: query\n          name: selectedFields\n          required: false\n          schema:\n            type: string\n        - description: Optional parameter. Used to specify the type of WebID. Useful for\n            URL brevity and other special cases. Default is the value of the\n            configuration item \"WebIDType\".\n          in: query\n          name: webIdType\n          required: false\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: The specified enumeration sets.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/EnumerationSet\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/EnumerationSet\"\n            text/html:\n              schema:\n                $ref: \"#/components/schemas/EnumerationSet\"\n            application/x-ms-application:\n              schema:\n                $ref: \"#/components/schemas/EnumerationSet\"\n      summary: Retrieve an enumeration set.\n      tags:\n        - EnumerationSet\n    patch:\n      deprecated: false\n      operationId: EnumerationSet_Update\n      parameters:\n        - description: The ID of the enumeration set to update.\n          in: path\n          name: webId\n          required: true\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/EnumerationSet\"\n          text/json:\n            schema:\n              $ref: \"#/components/schemas/EnumerationSet\"\n        description: A partial enumeration set containing the desired changes.\n        required: true\n      responses:\n        \"204\":\n          description: The enumeration set was updated.\n      summary: Update an enumeration set by replacing items in its definition.\n      tags:\n        - EnumerationSet\n  \"/enumerationsets/{webId}/enumerationvalues\":\n    get:\n      deprecated: false\n      operationId: EnumerationSet_GetValues\n      parameters:\n        - description: The ID of the enumeration set.\n          in: path\n          name: webId\n          required: true\n          schema:\n            type: string\n        - description: List of fields to be returned in the response, separated by\n            semicolons (;). If this parameter is not specified, all available\n            fields will be returned.\n          in: query\n          name: selectedFields\n          required: false\n          schema:\n            type: string\n        - description: Optional parameter. Used to specify the type of WebID. Useful for\n            URL brevity and other special cases. Default is the value of the\n            configuration item \"WebIDType\".\n          in: query\n          name: webIdType\n          required: false\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: The specified enumeration set's values\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Items_EnumerationValue_\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/Items_EnumerationValue_\"\n            text/html:\n              schema:\n                $ref: \"#/components/schemas/Items_EnumerationValue_\"\n            application/x-ms-application:\n              schema:\n                $ref: \"#/components/schemas/Items_EnumerationValue_\"\n      summary: Retrieve an enumeration set's values.\n      tags:\n        - EnumerationSet\n    post:\n      deprecated: false\n      operationId: EnumerationSet_CreateValue\n      parameters:\n        - description: The ID of the enumeration set on which to create the enumeration\n            value.\n          in: path\n          name: webId\n          required: true\n          schema:\n            type: string\n        - description: Optional parameter. Used to specify the type of WebID. Useful for\n            URL brevity and other special cases. Default is the value of the\n            configuration item \"WebIDType\".\n          in: query\n          name: webIdType\n          required: false\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/EnumerationValue\"\n          text/json:\n            schema:\n              $ref: \"#/components/schemas/EnumerationValue\"\n        description: The new enumeration value definition.\n        required: true\n      responses:\n        \"201\":\n          description: The enumeration value was created. The response's Location header is\n            a link to the enumeration value.\n      summary: Create an enumeration value for a enumeration set.\n      tags:\n        - EnumerationSet\n  \"/enumerationsets/{webId}/security\":\n    get:\n      deprecated: false\n      operationId: EnumerationSet_GetSecurity\n      parameters:\n        - description: The ID of the enumeration set for the security to be checked.\n          in: path\n          name: webId\n          required: true\n          schema:\n            type: string\n        - description: The user identity for the security information to be checked.\n            Multiple security identities may be specified with multiple\n            instances of the parameter. If the parameter is not specified, only\n            the current user's security rights will be returned.\n          in: query\n          name: userIdentity\n          required: true\n          explode: true\n          schema:\n            type: array\n            items:\n              type: string\n        - description: Indicates if the security cache should be refreshed before getting\n            security information. The default is 'false'.\n          in: query\n          name: forceRefresh\n          required: false\n          schema:\n            type: boolean\n        - description: List of fields to be returned in the response, separated by\n            semicolons (;). If this parameter is not specified, all available\n            fields will be returned.\n          in: query\n          name: selectedFields\n          required: false\n          schema:\n            type: string\n        - description: Optional parameter. Used to specify the type of WebID. Useful for\n            URL brevity and other special cases. Default is the value of the\n            configuration item \"WebIDType\".\n          in: query\n          name: webIdType\n          required: false\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: Security rights.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Items_SecurityRights_\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/Items_SecurityRights_\"\n            text/html:\n              schema:\n                $ref: \"#/components/schemas/Items_SecurityRights_\"\n            application/x-ms-application:\n              schema:\n                $ref: \"#/components/schemas/Items_SecurityRights_\"\n        \"400\":\n          description: An invalid or local account is specified as the user identity.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Errors\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/Errors\"\n            text/html:\n              schema:\n                $ref: \"#/components/schemas/Errors\"\n            application/x-ms-application:\n              schema:\n                $ref: \"#/components/schemas/Errors\"\n        \"401\":\n          description: Access denied for the specified user identity.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Errors\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/Errors\"\n            text/html:\n              schema:\n                $ref: \"#/components/schemas/Errors\"\n            application/x-ms-application:\n              schema:\n                $ref: \"#/components/schemas/Errors\"\n        \"409\":\n          description: Unsupported when using Anonymous authentication method.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Errors\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/Errors\"\n            text/html:\n              schema:\n                $ref: \"#/components/schemas/Errors\"\n            application/x-ms-application:\n              schema:\n                $ref: \"#/components/schemas/Errors\"\n        \"502\":\n          description: Failed to retrieve the specified user identity.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Errors\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/Errors\"\n            text/html:\n              schema:\n                $ref: \"#/components/schemas/Errors\"\n            application/x-ms-application:\n              schema:\n                $ref: \"#/components/schemas/Errors\"\n      summary: Get the security information of the specified security item associated\n        with the enumeration set for a specified user.\n      tags:\n        - EnumerationSet\n  \"/enumerationsets/{webId}/securityentries\":\n    get:\n      deprecated: false\n      operationId: EnumerationSet_GetSecurityEntries\n      parameters:\n        - description: The ID of the enumeration set.\n          in: path\n          name: webId\n          required: true\n          schema:\n            type: string\n        - description: The name query string used for filtering security entries. The\n            default is no filter.\n          in: query\n          name: nameFilter\n          required: false\n          schema:\n            type: string\n        - description: List of fields to be returned in the response, separated by\n            semicolons (;). If this parameter is not specified, all available\n            fields will be returned.\n          in: query\n          name: selectedFields\n          required: false\n          schema:\n            type: string\n        - description: Optional parameter. Used to specify the type of WebID. Useful for\n            URL brevity and other special cases. Default is the value of the\n            configuration item \"WebIDType\".\n          in: query\n          name: webIdType\n          required: false\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: A list of security entries matching the specified condition.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Items_SecurityEntry_\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/Items_SecurityEntry_\"\n            text/html:\n              schema:\n                $ref: \"#/components/schemas/Items_SecurityEntry_\"\n            application/x-ms-application:\n              schema:\n                $ref: \"#/components/schemas/Items_SecurityEntry_\"\n      summary: Retrieve the security entries associated with the enumeration set based\n        on the specified criteria. By default, all security entries for this\n        enumeration set are returned.\n      tags:\n        - EnumerationSet\n    post:\n      deprecated: false\n      operationId: EnumerationSet_CreateSecurityEntry\n      parameters:\n        - description: The ID of the enumeration set where the security entry will be\n            created.\n          in: path\n          name: webId\n          required: true\n          schema:\n            type: string\n        - description: If false, the new access permissions are only applied to the\n            associated object. If true, the access permissions of children with\n            any parent-child reference types will change when the permissions on\n            the primary parent change.\n          in: query\n          name: applyToChildren\n          required: false\n          schema:\n            type: boolean\n        - description: Optional parameter. Used to specify the type of WebID. Useful for\n            URL brevity and other special cases. Default is the value of the\n            configuration item \"WebIDType\".\n          in: query\n          name: webIdType\n          required: false\n          schema:\n            type: string\n      requestBody:\n        $ref: \"#/components/requestBodies/SecurityEntry\"\n      responses:\n        \"201\":\n          description: The security entry was created. The response's Location header is a\n            link to the security entry.\n      summary: Create a security entry owned by the enumeration set.\n      tags:\n        - EnumerationSet\n  \"/enumerationsets/{webId}/securityentries/{name}\":\n    delete:\n      deprecated: false\n      operationId: EnumerationSet_DeleteSecurityEntry\n      parameters:\n        - description: The name of the security entry. For every backslash character (\\) in\n            the security entry name, replace with asterisk (*). As an example,\n            use domain*username instead of domain\\username.\n          in: path\n          name: name\n          required: true\n          schema:\n            type: string\n        - description: The ID of the enumeration set where the security entry will be\n            deleted.\n          in: path\n          name: webId\n          required: true\n          schema:\n            type: string\n        - description: If false, the new access permissions are only applied to the\n            associated object. If true, the access permissions of children with\n            any parent-child reference types will change when the permissions on\n            the primary parent change.\n          in: query\n          name: applyToChildren\n          required: false\n          schema:\n            type: boolean\n      responses:\n        \"204\":\n          description: The security entry was deleted.\n      summary: Delete a security entry owned by the enumeration set.\n      tags:\n        - EnumerationSet\n    get:\n      deprecated: false\n      operationId: EnumerationSet_GetSecurityEntryByName\n      parameters:\n        - description: The name of the security entry. For every backslash character (\\) in\n            the security entry name, replace with asterisk (*). As an example,\n            use domain*username instead of domain\\username.\n          in: path\n          name: name\n          required: true\n          schema:\n            type: string\n        - description: The ID of the enumeration set.\n          in: path\n          name: webId\n          required: true\n          schema:\n            type: string\n        - description: List of fields to be returned in the response, separated by\n            semicolons (;). If this parameter is not specified, all available\n            fields will be returned.\n          in: query\n          name: selectedFields\n          required: false\n          schema:\n            type: string\n        - description: Optional parameter. Used to specify the type of WebID. Useful for\n            URL brevity and other special cases. Default is the value of the\n            configuration item \"WebIDType\".\n          in: query\n          name: webIdType\n          required: false\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: The security entry matching the specified condition.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/SecurityEntry\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/SecurityEntry\"\n            text/html:\n              schema:\n                $ref: \"#/components/schemas/SecurityEntry\"\n            application/x-ms-application:\n              schema:\n                $ref: \"#/components/schemas/SecurityEntry\"\n        \"404\":\n          description: The security entry with the specified name is not found.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Errors\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/Errors\"\n            text/html:\n              schema:\n                $ref: \"#/components/schemas/Errors\"\n            application/x-ms-application:\n              schema:\n                $ref: \"#/components/schemas/Errors\"\n      summary: Retrieve the security entry associated with the enumeration set with the\n        specified name.\n      tags:\n        - EnumerationSet\n    put:\n      deprecated: false\n      operationId: EnumerationSet_UpdateSecurityEntry\n      parameters:\n        - description: The name of the security entry.\n          in: path\n          name: name\n          required: true\n          schema:\n            type: string\n        - description: The ID of the enumeration set where the security entry will be\n            updated.\n          in: path\n          name: webId\n          required: true\n          schema:\n            type: string\n        - description: If false, the new access permissions are only applied to the\n            associated object. If true, the access permissions of children with\n            any parent-child reference types will change when the permissions on\n            the primary parent change.\n          in: query\n          name: applyToChildren\n          required: false\n          schema:\n            type: boolean\n      requestBody:\n        $ref: \"#/components/requestBodies/SecurityEntry2\"\n      responses:\n        \"204\":\n          description: The security entry was updated.\n      summary: Update a security entry owned by the enumeration set.\n      tags:\n        - EnumerationSet\n  /enumerationvalues:\n    get:\n      deprecated: false\n      description: This method returns a enumeration value based on the hierarchical path\n        associated with it, and should be used when a path has been received\n        from a separate part of the PI System for use in the PI Web API. Users\n        should primarily search with the WebID when available.\n      operationId: EnumerationValue_GetByPath\n      parameters:\n        - description: The path to the target enumeration value.\n          in: query\n          name: path\n          required: true\n          schema:\n            type: string\n        - description: List of fields to be returned in the response, separated by\n            semicolons (;). If this parameter is not specified, all available\n            fields will be returned.\n          in: query\n          name: selectedFields\n          required: false\n          schema:\n            type: string\n        - description: Optional parameter. Used to specify the type of WebID. Useful for\n            URL brevity and other special cases. Default is the value of the\n            configuration item \"WebIDType\".\n          in: query\n          name: webIdType\n          required: false\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: The specified enumeration set.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/EnumerationValue\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/EnumerationValue\"\n            text/html:\n              schema:\n                $ref: \"#/components/schemas/EnumerationValue\"\n            application/x-ms-application:\n              schema:\n                $ref: \"#/components/schemas/EnumerationValue\"\n      summary: Retrieve an enumeration value by path.\n      tags:\n        - EnumerationValue\n  \"/enumerationvalues/{webId}\":\n    delete:\n      deprecated: false\n      description: Deleting a value will remove it from the enumeration set along with any\n        value references within the PI Web API system.\n      operationId: EnumerationValue_DeleteEnumerationValue\n      parameters:\n        - description: The ID of the enumeration value.\n          in: path\n          name: webId\n          required: true\n          schema:\n            type: string\n      responses:\n        \"204\":\n          description: The enumeration value was deleted.\n      summary: Delete an enumeration value from an enumeration set.\n      tags:\n        - EnumerationValue\n    get:\n      deprecated: false\n      operationId: EnumerationValue_Get\n      parameters:\n        - description: The ID of the enumeration value.\n          in: path\n          name: webId\n          required: true\n          schema:\n            type: string\n        - description: List of fields to be returned in the response, separated by\n            semicolons (;). If this parameter is not specified, all available\n            fields will be returned.\n          in: query\n          name: selectedFields\n          required: false\n          schema:\n            type: string\n        - description: Optional parameter. Used to specify the type of WebID. Useful for\n            URL brevity and other special cases. Default is the value of the\n            configuration item \"WebIDType\".\n          in: query\n          name: webIdType\n          required: false\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: The specified enumeration value mapping\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/EnumerationValue\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/EnumerationValue\"\n            text/html:\n              schema:\n                $ref: \"#/components/schemas/EnumerationValue\"\n            application/x-ms-application:\n              schema:\n                $ref: \"#/components/schemas/EnumerationValue\"\n      summary: Retrieve an enumeration value mapping\n      tags:\n        - EnumerationValue\n    patch:\n      deprecated: false\n      operationId: EnumerationValue_UpdateEnumerationValue\n      parameters:\n        - description: The ID of the enumeration value to update.\n          in: path\n          name: webId\n          required: true\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/EnumerationValue\"\n          text/json:\n            schema:\n              $ref: \"#/components/schemas/EnumerationValue\"\n        description: A partial enumeration value containing the desired changes.\n        required: true\n      responses:\n        \"204\":\n          description: The enumeration set was updated.\n      summary: Update an enumeration value by replacing items in its definition.\n      tags:\n        - EnumerationValue\n  /eventframes:\n    get:\n      deprecated: false\n      description: This method returns an event frame based on the hierarchical path\n        associated with it, and should be used when a path has been received\n        from a separate part of the PI System for use in the PI Web API. Users\n        should primarily search with the WebID when available.\n      operationId: EventFrame_GetByPath\n      parameters:\n        - description: The path to the event frame.\n          in: query\n          name: path\n          required: true\n          schema:\n            type: string\n        - description: List of fields to be returned in the response, separated by\n            semicolons (;). If this parameter is not specified, all available\n            fields will be returned.\n          in: query\n          name: selectedFields\n          required: false\n          schema:\n            type: string\n        - description: Optional parameter. Used to specify the type of WebID. Useful for\n            URL brevity and other special cases. Default is the value of the\n            configuration item \"WebIDType\".\n          in: query\n          name: webIdType\n          required: false\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: The specified event frame.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/EventFrame\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/EventFrame\"\n            text/html:\n              schema:\n                $ref: \"#/components/schemas/EventFrame\"\n            application/x-ms-application:\n              schema:\n                $ref: \"#/components/schemas/EventFrame\"\n      summary: Retrieve an event frame by path.\n      tags:\n        - EventFrame\n  /eventframes/multiple:\n    get:\n      deprecated: false\n      operationId: EventFrame_GetMultiple\n      parameters:\n        - description: Specifies if the retrieval processes should be run in parallel on\n            the server. This may improve the response time for large amounts of\n            requested attributes. The default is 'false'.\n          in: query\n          name: asParallel\n          required: false\n          schema:\n            type: boolean\n        - description: The include mode for the return list. The default is 'All'.\n          in: query\n          name: includeMode\n          required: false\n          schema:\n            type: string\n        - description: The path of an event frame. Multiple event frames may be specified\n            with multiple instances of the parameter.\n          in: query\n          name: path\n          required: false\n          explode: true\n          schema:\n            type: array\n            items:\n              type: string\n        - description: List of fields to be returned in the response, separated by\n            semicolons (;). If this parameter is not specified, all available\n            fields will be returned.\n          in: query\n          name: selectedFields\n          required: false\n          schema:\n            type: string\n        - description: The ID of an event frame. Multiple event frames may be specified\n            with multiple instances of the parameter.\n          in: query\n          name: webId\n          required: false\n          explode: true\n          schema:\n            type: array\n            items:\n              type: string\n        - description: Optional parameter. Used to specify the type of WebID. Useful for\n            URL brevity and other special cases. Default is the value of the\n            configuration item \"WebIDType\".\n          in: query\n          name: webIdType\n          required: false\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: The requested event frames\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Items_Item_EventFrame_\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/Items_Item_EventFrame_\"\n            text/html:\n              schema:\n                $ref: \"#/components/schemas/Items_Item_EventFrame_\"\n            application/x-ms-application:\n              schema:\n                $ref: \"#/components/schemas/Items_Item_EventFrame_\"\n        \"207\":\n          description: Some or all items contain exceptions.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Items_Item_EventFrame_\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/Items_Item_EventFrame_\"\n            text/html:\n              schema:\n                $ref: \"#/components/schemas/Items_Item_EventFrame_\"\n            application/x-ms-application:\n              schema:\n                $ref: \"#/components/schemas/Items_Item_EventFrame_\"\n      summary: Retrieve multiple event frames by web ids or paths.\n      tags:\n        - EventFrame\n  /eventframes/search:\n    get:\n      deprecated: false\n      operationId: EventFrame_GetEventFramesQuery\n      parameters:\n        - description: The ID of the asset database to use as the root of the query.\n          in: query\n          name: databaseWebId\n          required: false\n          schema:\n            type: string\n        - description: The maximum number of objects to be returned per call (page size).\n            The default is 1000.\n          in: query\n          name: maxCount\n          required: false\n          schema:\n            type: integer\n        - description: 'The query string is a list of filters used to perform an AFSearch\n            for the eventframes in the asset database. An example would be:\n            \"query=Name:=MyEventFrame* Category:=MyCategory\n            Template:=EFTemplate\".'\n          in: query\n          name: query\n          required: false\n          schema:\n            type: string\n        - description: List of fields to be returned in the response, separated by\n            semicolons (;). If this parameter is not specified, all available\n            fields will be returned.\n          in: query\n          name: selectedFields\n          required: false\n          schema:\n            type: string\n        - description: The starting index (zero based) of the items to be returned. The\n            default is 0.\n          in: query\n          name: startIndex\n          required: false\n          schema:\n            type: integer\n        - description: Optional parameter. Used to specify the type of WebID. Useful for\n            URL brevity and other special cases. Default is the value of the\n            configuration item \"WebIDType\".\n          in: query\n          name: webIdType\n          required: false\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: A list of event frames matching the specified conditions.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Items_EventFrame_\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/Items_EventFrame_\"\n            text/html:\n              schema:\n                $ref: \"#/components/schemas/Items_EventFrame_\"\n            application/x-ms-application:\n              schema:\n                $ref: \"#/components/schemas/Items_EventFrame_\"\n      summary: Retrieve event frames based on the specified conditions. Returns event\n        frames using the specified search query string.\n      tags:\n        - EventFrame\n  /eventframes/searchbyattribute:\n    post:\n      deprecated: false\n      operationId: EventFrame_CreateSearchByAttribute\n      parameters:\n        - description: If false, the response content will contain the first page of the\n            search results. If true, the response content will be empty. The\n            default is false.\n          in: query\n          name: noResults\n          required: false\n          schema:\n            type: boolean\n        - description: List of fields to be returned in the response, separated by\n            semicolons (;). If this parameter is not specified, all available\n            fields will be returned.\n          in: query\n          name: selectedFields\n          required: false\n          schema:\n            type: string\n        - description: Optional parameter. Used to specify the type of WebID. Useful for\n            URL brevity and other special cases. Default is the value of the\n            configuration item \"WebIDType\".\n          in: query\n          name: webIdType\n          required: false\n          schema:\n            type: string\n      requestBody:\n        $ref: \"#/components/requestBodies/SearchByAttribute\"\n      responses:\n        \"201\":\n          description: The link is stored in the response's \"Location\" header. The response\n            content is the first page of the search result by the default\n            parameters.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Items_EventFrame_\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/Items_EventFrame_\"\n            text/html:\n              schema:\n                $ref: \"#/components/schemas/Items_EventFrame_\"\n            application/x-ms-application:\n              schema:\n                $ref: \"#/components/schemas/Items_EventFrame_\"\n        \"400\":\n          description: Empty or invalid request content.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Errors\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/Errors\"\n            text/html:\n              schema:\n                $ref: \"#/components/schemas/Errors\"\n            application/x-ms-application:\n              schema:\n                $ref: \"#/components/schemas/Errors\"\n        \"413\":\n          description: Request content is too large.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Errors\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/Errors\"\n            text/html:\n              schema:\n                $ref: \"#/components/schemas/Errors\"\n            application/x-ms-application:\n              schema:\n                $ref: \"#/components/schemas/Errors\"\n      summary: Create a link for a \"Search EventFrames By Attribute Value\" operation,\n        whose queries are specified in the request content. The SearchRoot is\n        specified by the Web Id of the root EventFrame. If the SearchRoot is not\n        specified, then the search starts at the Asset Database. ElementTemplate\n        must be provided as the Web ID of the ElementTemplate, which are used to\n        create the EventFrames. All the attributes in the queries must be\n        defined as AttributeTemplates on the ElementTemplate. An array of\n        attribute value queries are ANDed together to find the desired Element\n        objects. At least one value query must be specified. There are\n        limitations on SearchOperators.\n      tags:\n        - EventFrame\n  \"/eventframes/searchbyattribute/{searchId}\":\n    get:\n      deprecated: false\n      operationId: EventFrame_ExecuteSearchByAttribute\n      parameters:\n        - description: The encoded search Id of the \"Search EventFrames By Attribute Value\"\n            operation.\n          in: path\n          name: searchId\n          required: true\n          schema:\n            type: string\n        - description: Specify the returned event frames' canBeAcknowledged property. The\n            default is no canBeAcknowledged filter.\n          in: query\n          name: canBeAcknowledged\n          required: false\n          schema:\n            type: boolean\n        - description: The ending time for the search. endTime must be greater than or\n            equal to the startTime. The searchMode parameter will control\n            whether the comparison will be performed against the event frame's\n            startTime or endTime. The default is '*'.\n          in: query\n          name: endTime\n          required: false\n          schema:\n            type: string\n        - description: Specify the returned event frames' isAcknowledged property. The\n            default no isAcknowledged filter.\n          in: query\n          name: isAcknowledged\n          required: false\n          schema:\n            type: boolean\n        - description: The maximum number of objects to be returned per call (page size).\n            The default is 1000.\n          in: query\n          name: maxCount\n          required: false\n          schema:\n            type: integer\n        - description: The name query string used for finding event frames. The default is\n            no filter.\n          in: query\n          name: nameFilter\n          required: false\n          schema:\n            type: string\n        - description: The name query string which must match the name of a referenced\n            element. The default is no filter.\n          in: query\n          name: referencedElementNameFilter\n          required: false\n          schema:\n            type: string\n        - description: Specifies whether the search should include objects nested further\n            than the immediate children of the search root. The default is\n            'false'.\n          in: query\n          name: searchFullHierarchy\n          required: false\n          schema:\n            type: boolean\n        - description: Determines how the startTime and endTime parameters are treated when\n            searching for event frame objects to be included in the returned\n            collection. The default is 'Overlapped'.\n          in: query\n          name: searchMode\n          required: false\n          schema:\n            type: string\n        - description: List of fields to be returned in the response, separated by\n            semicolons (;). If this parameter is not specified, all available\n            fields will be returned.\n          in: query\n          name: selectedFields\n          required: false\n          schema:\n            type: string\n        - description: Specify that returned event frames must have this severity. Multiple\n            severity values may be specified with multiple instances of the\n            parameter. The default is no severity filter.\n          in: query\n          name: severity\n          required: false\n          explode: true\n          schema:\n            type: array\n            items:\n              type: string\n        - description: The field or property of the object used to sort the returned\n            collection. The default is 'Name'.\n          in: query\n          name: sortField\n          required: false\n          schema:\n            type: string\n        - description: The order that the returned collection is sorted. The default is\n            'Ascending'.\n          in: query\n          name: sortOrder\n          required: false\n          schema:\n            type: string\n        - description: The starting index (zero based) of the items to be returned. The\n            default is 0.\n          in: query\n          name: startIndex\n          required: false\n          schema:\n            type: integer\n        - description: The starting time for the search. startTime must be less than or\n            equal to the endTime. The searchMode parameter will control whether\n            the comparison will be performed against the event frame's startTime\n            or endTime. The default is '*-8h'.\n          in: query\n          name: startTime\n          required: false\n          schema:\n            type: string\n        - description: Optional parameter. Used to specify the type of WebID. Useful for\n            URL brevity and other special cases. Default is the value of the\n            configuration item \"WebIDType\".\n          in: query\n          name: webIdType\n          required: false\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: a list of matching EventFrames.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Items_EventFrame_\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/Items_EventFrame_\"\n            text/html:\n              schema:\n                $ref: \"#/components/schemas/Items_EventFrame_\"\n            application/x-ms-application:\n              schema:\n                $ref: \"#/components/schemas/Items_EventFrame_\"\n        \"400\":\n          description: Invalid search Id or search parameters.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Errors\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/Errors\"\n            text/html:\n              schema:\n                $ref: \"#/components/schemas/Errors\"\n            application/x-ms-application:\n              schema:\n                $ref: \"#/components/schemas/Errors\"\n      summary: Execute a \"Search EventFrames By Attribute Value\" operation.\n      tags:\n        - EventFrame\n  \"/eventframes/{webId}\":\n    delete:\n      deprecated: false\n      operationId: EventFrame_Delete\n      parameters:\n        - description: The ID of the event frame to delete.\n          in: path\n          name: webId\n          required: true\n          schema:\n            type: string\n      responses:\n        \"204\":\n          description: The event frame was deleted.\n      summary: Delete an event frame.\n      tags:\n        - EventFrame\n    get:\n      deprecated: false\n      operationId: EventFrame_Get\n      parameters:\n        - description: The ID of the event frame.\n          in: path\n          name: webId\n          required: true\n          schema:\n            type: string\n        - description: List of fields to be returned in the response, separated by\n            semicolons (;). If this parameter is not specified, all available\n            fields will be returned.\n          in: query\n          name: selectedFields\n          required: false\n          schema:\n            type: string\n        - description: Optional parameter. Used to specify the type of WebID. Useful for\n            URL brevity and other special cases. Default is the value of the\n            configuration item \"WebIDType\".\n          in: query\n          name: webIdType\n          required: false\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: The specified event frame.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/EventFrame\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/EventFrame\"\n            text/html:\n              schema:\n                $ref: \"#/components/schemas/EventFrame\"\n            application/x-ms-application:\n              schema:\n                $ref: \"#/components/schemas/EventFrame\"\n      summary: Retrieve an event frame.\n      tags:\n        - EventFrame\n    patch:\n      deprecated: false\n      operationId: EventFrame_Update\n      parameters:\n        - description: The ID of the event frame to update.\n          in: path\n          name: webId\n          required: true\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/EventFrame\"\n          text/json:\n            schema:\n              $ref: \"#/components/schemas/EventFrame\"\n        description: A partial event frame containing the desired changes.\n        required: true\n      responses:\n        \"204\":\n          description: The event frame was updated.\n      summary: Update an event frame by replacing items in its definition.\n      tags:\n        - EventFrame\n  \"/eventframes/{webId}/acknowledge\":\n    patch:\n      deprecated: false\n      operationId: EventFrame_Acknowledge\n      parameters:\n        - description: The ID of the event frame.\n          in: path\n          name: webId\n          required: true\n          schema:\n            type: string\n      responses:\n        \"204\":\n          description: The event frame has been acknowledged.\n      summary: Calls the EventFrame's Acknowledge method.\n      tags:\n        - EventFrame\n  \"/eventframes/{webId}/annotations\":\n    get:\n      deprecated: false\n      operationId: EventFrame_GetAnnotations\n      parameters:\n        - description: The ID of the owner event frame.\n          in: path\n          name: webId\n          required: true\n          schema:\n            type: string\n        - description: List of fields to be returned in the response, separated by\n            semicolons (;). If this parameter is not specified, all available\n            fields will be returned.\n          in: query\n          name: selectedFields\n          required: false\n          schema:\n            type: string\n        - description: Optional parameter. Used to specify the type of WebID. Useful for\n            URL brevity and other special cases. Default is the value of the\n            configuration item \"WebIDType\".\n          in: query\n          name: webIdType\n          required: false\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: A list of annotations.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Items_Annotation_\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/Items_Annotation_\"\n            text/html:\n              schema:\n                $ref: \"#/components/schemas/Items_Annotation_\"\n            application/x-ms-application:\n              schema:\n                $ref: \"#/components/schemas/Items_Annotation_\"\n      summary: Get an event frame's annotations.\n      tags:\n        - EventFrame\n    post:\n      deprecated: false\n      operationId: EventFrame_CreateAnnotation\n      parameters:\n        - description: The ID of the owner event frame on which to create the annotation.\n          in: path\n          name: webId\n          required: true\n          schema:\n            type: string\n        - description: Optional parameter. Used to specify the type of WebID. Useful for\n            URL brevity and other special cases. Default is the value of the\n            configuration item \"WebIDType\".\n          in: query\n          name: webIdType\n          required: false\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/Annotation\"\n          text/json:\n            schema:\n              $ref: \"#/components/schemas/Annotation\"\n        description: The new annotation definition.\n        required: true\n      responses:\n        \"201\":\n          description: The annotation was created. The response's Location header is a link\n            to the annotation.\n      summary: Create an annotation on an event frame.\n      tags:\n        - EventFrame\n  \"/eventframes/{webId}/annotations/{id}\":\n    delete:\n      deprecated: false\n      operationId: EventFrame_DeleteAnnotation\n      parameters:\n        - description: The Annotation identifier of the annotation to be deleted.\n          in: path\n          name: id\n          required: true\n          schema:\n            type: string\n        - description: The ID of the owner event frame of the annotation to delete.\n          in: path\n          name: webId\n          required: true\n          schema:\n            type: string\n      responses:\n        \"204\":\n          description: The annotation was deleted.\n      summary: Delete an annotation on an event frame. If the annotation has attached\n        media, the attached media will also be deleted.\n      tags:\n        - EventFrame\n    get:\n      deprecated: false\n      operationId: EventFrame_GetAnnotationById\n      parameters:\n        - description: The Annotation identifier of the specific annotation.\n          in: path\n          name: id\n          required: true\n          schema:\n            type: string\n        - description: The ID of the owner event frame.\n          in: path\n          name: webId\n          required: true\n          schema:\n            type: string\n        - description: List of fields to be returned in the response, separated by\n            semicolons (;). If this parameter is not specified, all available\n            fields will be returned.\n          in: query\n          name: selectedFields\n          required: false\n          schema:\n            type: string\n        - description: Optional parameter. Used to specify the type of WebID. Useful for\n            URL brevity and other special cases. Default is the value of the\n            configuration item \"WebIDType\".\n          in: query\n          name: webIdType\n          required: false\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: The requested annotation.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Annotation\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/Annotation\"\n            text/html:\n              schema:\n                $ref: \"#/components/schemas/Annotation\"\n            application/x-ms-application:\n              schema:\n                $ref: \"#/components/schemas/Annotation\"\n      summary: Get a specific annotation on an event frame.\n      tags:\n        - EventFrame\n    patch:\n      deprecated: false\n      operationId: EventFrame_UpdateAnnotation\n      parameters:\n        - description: The Annotation identifier of the annotation to be updated.\n          in: path\n          name: id\n          required: true\n          schema:\n            type: string\n        - description: The ID of the owner event frame of the annotation to update.\n          in: path\n          name: webId\n          required: true\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/Annotation\"\n          text/json:\n            schema:\n              $ref: \"#/components/schemas/Annotation\"\n        description: A partial annotation containing the desired changes.\n        required: true\n      responses:\n        \"204\":\n          description: The annotation was updated.\n      summary: Update an annotation on an event frame by replacing items in its\n        definition.\n      tags:\n        - EventFrame\n  \"/eventframes/{webId}/annotations/{id}/attachment/media\":\n    delete:\n      deprecated: false\n      operationId: EventFrame_DeleteAnnotationAttachmentMediaById\n      parameters:\n        - description: The Annotation identifier of the annotation to delete the attached\n            media of.\n          in: path\n          name: id\n          required: true\n          schema:\n            type: string\n        - description: The ID of the owner event frame of the annotation to delete the\n            attached media of.\n          in: path\n          name: webId\n          required: true\n          schema:\n            type: string\n      responses:\n        \"204\":\n          description: The attached media was deleted.\n        \"404\":\n          description: The specified annotation did not have any attached media to delete.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Errors\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/Errors\"\n            text/html:\n              schema:\n                $ref: \"#/components/schemas/Errors\"\n            application/x-ms-application:\n              schema:\n                $ref: \"#/components/schemas/Errors\"\n      summary: Delete attached media from an annotation on an event frame.\n      tags:\n        - EventFrame\n  \"/eventframes/{webId}/annotations/{id}/attachment/media/metadata\":\n    get:\n      deprecated: false\n      operationId: EventFrame_GetAnnotationAttachmentMediaMetadataById\n      parameters:\n        - description: The Annotation identifier of the specific annotation.\n          in: path\n          name: id\n          required: true\n          schema:\n            type: string\n        - description: The ID of the owner event frame.\n          in: path\n          name: webId\n          required: true\n          schema:\n            type: string\n        - description: List of fields to be returned in the response, separated by\n            semicolons (;). If this parameter is not specified, all available\n            fields will be returned.\n          in: query\n          name: selectedFields\n          required: false\n          schema:\n            type: string\n        - description: Optional parameter. Used to specify the type of WebID. Useful for\n            URL brevity and other special cases. Default is the value of the\n            configuration item \"WebIDType\".\n          in: query\n          name: webIdType\n          required: false\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: The requested metadata.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/MediaMetadata\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/MediaMetadata\"\n            text/html:\n              schema:\n                $ref: \"#/components/schemas/MediaMetadata\"\n            application/x-ms-application:\n              schema:\n                $ref: \"#/components/schemas/MediaMetadata\"\n        \"400\":\n          description: The supplied Web ID could not be parsed, or the request was somehow\n            otherwise invalid.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Errors\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/Errors\"\n            text/html:\n              schema:\n                $ref: \"#/components/schemas/Errors\"\n            application/x-ms-application:\n              schema:\n                $ref: \"#/components/schemas/Errors\"\n        \"404\":\n          description: The specified Event Frame did not exist, the specified annotation\n            was not found, or the annotation did not have attached media.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Errors\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/Errors\"\n            text/html:\n              schema:\n                $ref: \"#/components/schemas/Errors\"\n            application/x-ms-application:\n              schema:\n                $ref: \"#/components/schemas/Errors\"\n      summary: Gets the metadata of the media attached to the specified annotation.\n      tags:\n        - EventFrame\n  \"/eventframes/{webId}/attributes\":\n    get:\n      deprecated: false\n      operationId: EventFrame_GetAttributes\n      parameters:\n        - description: The ID of the event frame.\n          in: path\n          name: webId\n          required: true\n          schema:\n            type: string\n        - description: Associated values to return in the response, separated by semicolons\n            (;). This call supports DataReference to return attributes with data\n            references. If this parameter is not specified, DataReference values\n            are not returned.\n          in: query\n          name: associations\n          required: false\n          schema:\n            type: string\n        - description: Specify that returned attributes must have this category. The\n            default is no category filter.\n          in: query\n          name: categoryName\n          required: false\n          schema:\n            type: string\n        - description: The maximum number of objects to be returned per call (page size).\n            The default is 1000.\n          in: query\n          name: maxCount\n          required: false\n          schema:\n            type: integer\n        - description: The name query string used for finding attributes. The default is no\n            filter.\n          in: query\n          name: nameFilter\n          required: false\n          schema:\n            type: string\n        - description: Specifies if the search should include attributes nested further\n            than the immediate attributes of the searchRoot. The default is\n            'false'.\n          in: query\n          name: searchFullHierarchy\n          required: false\n          schema:\n            type: boolean\n        - description: List of fields to be returned in the response, separated by\n            semicolons (;). If this parameter is not specified, all available\n            fields will be returned.\n          in: query\n          name: selectedFields\n          required: false\n          schema:\n            type: string\n        - description: Specified if the search should include attributes with the Excluded\n            property set. The default is 'false'.\n          in: query\n          name: showExcluded\n          required: false\n          schema:\n            type: boolean\n        - description: Specified if the search should include attributes with the Hidden\n            property set. The default is 'false'.\n          in: query\n          name: showHidden\n          required: false\n          schema:\n            type: boolean\n        - description: The field or property of the object used to sort the returned\n            collection. The default is 'Name'.\n          in: query\n          name: sortField\n          required: false\n          schema:\n            type: string\n        - description: The order that the returned collection is sorted. The default is\n            'Ascending'.\n          in: query\n          name: sortOrder\n          required: false\n          schema:\n            type: string\n        - description: The starting index (zero based) of the items to be returned. The\n            default is 0.\n          in: query\n          name: startIndex\n          required: false\n          schema:\n            type: integer\n        - description: Specify that returned attributes must be members of this template.\n            The default is no template filter.\n          in: query\n          name: templateName\n          required: false\n          schema:\n            type: string\n        - description: The name of the attribute trait. Multiple traits may be specified\n            with multiple instances of the parameter.\n          in: query\n          name: trait\n          required: false\n          explode: true\n          schema:\n            type: array\n            items:\n              type: string\n        - description: The category of the attribute traits. Multiple categories may be\n            specified with multiple instances of the parameter. If the parameter\n            is not specified, or if its value is \"all\", then all attribute\n            traits of all categories will be returned.\n          in: query\n          name: traitCategory\n          required: false\n          explode: true\n          schema:\n            type: array\n            items:\n              type: string\n        - description: Specify that returned attributes' value type must be the given value\n            type. The default is no value type filter.\n          in: query\n          name: valueType\n          required: false\n          schema:\n            type: string\n        - description: Optional parameter. Used to specify the type of WebID. Useful for\n            URL brevity and other special cases. Default is the value of the\n            configuration item \"WebIDType\".\n          in: query\n          name: webIdType\n          required: false\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: A list of child attributes.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Items_Attribute_\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/Items_Attribute_\"\n            text/html:\n              schema:\n                $ref: \"#/components/schemas/Items_Attribute_\"\n            application/x-ms-application:\n              schema:\n                $ref: \"#/components/schemas/Items_Attribute_\"\n      summary: Get the attributes of the specified event frame.\n      tags:\n        - EventFrame\n    post:\n      deprecated: false\n      operationId: EventFrame_CreateAttribute\n      parameters:\n        - description: The ID of the event frame on which to create the attribute.\n          in: path\n          name: webId\n          required: true\n          schema:\n            type: string\n        - description: Optional parameter. Used to specify the type of WebID. Useful for\n            URL brevity and other special cases. Default is the value of the\n            configuration item \"WebIDType\".\n          in: query\n          name: webIdType\n          required: false\n          schema:\n            type: string\n      requestBody:\n        $ref: \"#/components/requestBodies/Attribute\"\n      responses:\n        \"201\":\n          description: The attribute was created. The response's Location header is a link\n            to the created attribute.\n      summary: Create a new attribute of the specified event frame.\n      tags:\n        - EventFrame\n  \"/eventframes/{webId}/attributes/capture\":\n    post:\n      deprecated: false\n      operationId: EventFrame_CaptureValues\n      parameters:\n        - description: The ID of the event frame.\n          in: path\n          name: webId\n          required: true\n          schema:\n            type: string\n      responses:\n        \"204\":\n          description: The event frame attribute's values were captured.\n      summary: Calls the EventFrame's CaptureValues method.\n      tags:\n        - EventFrame\n  \"/eventframes/{webId}/categories\":\n    get:\n      deprecated: false\n      operationId: EventFrame_GetCategories\n      parameters:\n        - description: The ID of the event frame.\n          in: path\n          name: webId\n          required: true\n          schema:\n            type: string\n        - description: List of fields to be returned in the response, separated by\n            semicolons (;). If this parameter is not specified, all available\n            fields will be returned.\n          in: query\n          name: selectedFields\n          required: false\n          schema:\n            type: string\n        - description: Optional parameter. Used to specify the type of WebID. Useful for\n            URL brevity and other special cases. Default is the value of the\n            configuration item \"WebIDType\".\n          in: query\n          name: webIdType\n          required: false\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: A list of categories.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Items_ElementCategory_\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/Items_ElementCategory_\"\n            text/html:\n              schema:\n                $ref: \"#/components/schemas/Items_ElementCategory_\"\n            application/x-ms-application:\n              schema:\n                $ref: \"#/components/schemas/Items_ElementCategory_\"\n      summary: Get an event frame's categories.\n      tags:\n        - EventFrame\n  \"/eventframes/{webId}/config\":\n    post:\n      deprecated: false\n      operationId: EventFrame_CreateConfig\n      parameters:\n        - description: The ID of the event frame.\n          in: path\n          name: webId\n          required: true\n          schema:\n            type: string\n        - description: If true, includes the child event frames of the specified event\n            frame.\n          in: query\n          name: includeChildElements\n          required: false\n          schema:\n            type: boolean\n      responses:\n        \"200\":\n          description: Process log of operations. Operations completed with no errors.\n        \"207\":\n          description: Process log of operations. Operations completed with errors.\n      summary: Executes the create configuration function of the data references found\n        within the attributes of the event frame, and optionally, its children.\n      tags:\n        - EventFrame\n  \"/eventframes/{webId}/eventframeattributes\":\n    get:\n      deprecated: false\n      operationId: EventFrame_FindEventFrameAttributes\n      parameters:\n        - description: The ID of the event frame to use as the root of the search.\n          in: path\n          name: webId\n          required: true\n          schema:\n            type: string\n        - description: Associated values to return in the response, separated by semicolons\n            (;). This call supports DataReference to return attributes with data\n            references. If this parameter is not specified, DataReference values\n            are not returned.\n          in: query\n          name: associations\n          required: false\n          schema:\n            type: string\n        - description: Specify that returned attributes must have this category. The\n            default is no filter.\n          in: query\n          name: attributeCategory\n          required: false\n          schema:\n            type: string\n        - description: The attribute description filter string used for finding objects.\n            Only the first 440 characters of the description will be searched.\n            For Asset Servers older than 2.7, a 400 status code (Bad Request)\n            will be returned if this parameter is specified. The default is no\n            filter.\n          in: query\n          name: attributeDescriptionFilter\n          required: false\n          schema:\n            type: string\n        - description: The attribute name filter string used for finding objects. The\n            default is no filter.\n          in: query\n          name: attributeNameFilter\n          required: false\n          schema:\n            type: string\n        - description: Specify that returned attributes' value type must be this value\n            type. The default is no filter.\n          in: query\n          name: attributeType\n          required: false\n          schema:\n            type: string\n        - description: A string representing the latest ending time for the event frames to\n            be matched. The endTime must be greater than or equal to the\n            startTime. The default is '*'.\n          in: query\n          name: endTime\n          required: false\n          schema:\n            type: string\n        - description: Specify that the owner of the returned attributes must have this\n            category. The default is no filter.\n          in: query\n          name: eventFrameCategory\n          required: false\n          schema:\n            type: string\n        - description: The event frame description filter string used for finding objects.\n            Only the first 440 characters of the description will be searched.\n            For Asset Servers older than 2.7, a 400 status code (Bad Request)\n            will be returned if this parameter is specified. The default is no\n            filter.\n          in: query\n          name: eventFrameDescriptionFilter\n          required: false\n          schema:\n            type: string\n        - description: The event frame name filter string used for finding objects. The\n            default is no filter.\n          in: query\n          name: eventFrameNameFilter\n          required: false\n          schema:\n            type: string\n        - description: Specify that the owner of the returned attributes must have this\n            template or a template derived from this template. The default is no\n            filter.\n          in: query\n          name: eventFrameTemplate\n          required: false\n          schema:\n            type: string\n        - description: The maximum number of objects to be returned (the page size). The\n            default is 1000.\n          in: query\n          name: maxCount\n          required: false\n          schema:\n            type: integer\n        - description: The name query string which must match the name of a referenced\n            element. The default is no filter.\n          in: query\n          name: referencedElementNameFilter\n          required: false\n          schema:\n            type: string\n        - description: Specifies if the search should include objects nested further than\n            immediate children of the given resource. The default is 'false'.\n          in: query\n          name: searchFullHierarchy\n          required: false\n          schema:\n            type: boolean\n        - description: Determines how the startTime and endTime parameters are treated when\n            searching for event frames. The default is 'Overlapped'.\n          in: query\n          name: searchMode\n          required: false\n          schema:\n            type: string\n        - description: List of fields to be returned in the response, separated by\n            semicolons (;). If this parameter is not specified, all available\n            fields will be returned.\n          in: query\n          name: selectedFields\n          required: false\n          schema:\n            type: string\n        - description: The field or property of the object used to sort the returned\n            collection. The default is 'Name'.\n          in: query\n          name: sortField\n          required: false\n          schema:\n            type: string\n        - description: The order that the returned collection is sorted. The default is\n            'Ascending'.\n          in: query\n          name: sortOrder\n          required: false\n          schema:\n            type: string\n        - description: The starting index (zero based) of the items to be returned. The\n            default is 0.\n          in: query\n          name: startIndex\n          required: false\n          schema:\n            type: integer\n        - description: A string representing the earliest starting time for the event\n            frames to be matched. startTime must be less than or equal to the\n            endTime. The default is '*-8h'.\n          in: query\n          name: startTime\n          required: false\n          schema:\n            type: string\n        - description: Optional parameter. Used to specify the type of WebID. Useful for\n            URL brevity and other special cases. Default is the value of the\n            configuration item \"WebIDType\".\n          in: query\n          name: webIdType\n          required: false\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: a list of matching attributes.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Items_Attribute_\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/Items_Attribute_\"\n            text/html:\n              schema:\n                $ref: \"#/components/schemas/Items_Attribute_\"\n            application/x-ms-application:\n              schema:\n                $ref: \"#/components/schemas/Items_Attribute_\"\n      summary: Retrieves a list of event frame attributes matching the specified\n        filters from the specified event frame.\n      tags:\n        - EventFrame\n  \"/eventframes/{webId}/eventframes\":\n    get:\n      deprecated: false\n      operationId: EventFrame_GetEventFrames\n      parameters:\n        - description: The ID of the event frame to use as the root of the search.\n          in: path\n          name: webId\n          required: true\n          schema:\n            type: string\n        - description: Specify the returned event frames' canBeAcknowledged property. The\n            default is no canBeAcknowledged filter.\n          in: query\n          name: canBeAcknowledged\n          required: false\n          schema:\n            type: boolean\n        - description: Specify that returned event frames must have this category. The\n            default is no category filter.\n          in: query\n          name: categoryName\n          required: false\n          schema:\n            type: string\n        - description: The ending time for the search. The endTime must be greater than or\n            equal to the startTime. The searchMode parameter will control\n            whether the comparison will be performed against the event frame's\n            startTime or endTime. The default is '*' if searchMode is not one of\n            the 'Backward*' or 'Forward*' values.\n          in: query\n          name: endTime\n          required: false\n          schema:\n            type: string\n        - description: Specify the returned event frames' isAcknowledged property. The\n            default no isAcknowledged filter.\n          in: query\n          name: isAcknowledged\n          required: false\n          schema:\n            type: boolean\n        - description: The maximum number of objects to be returned per call (page size).\n            The default is 1000.\n          in: query\n          name: maxCount\n          required: false\n          schema:\n            type: integer\n        - description: The name query string used for finding event frames. The default is\n            no filter.\n          in: query\n          name: nameFilter\n          required: false\n          schema:\n            type: string\n        - description: The name query string which must match the name of a referenced\n            element. The default is no filter.\n          in: query\n          name: referencedElementNameFilter\n          required: false\n          schema:\n            type: string\n        - description: Specify that returned event frames must have an element in the event\n            frame's referenced elements collection that derives from the\n            template. Specify this parameter by name.\n          in: query\n          name: referencedElementTemplateName\n          required: false\n          schema:\n            type: string\n        - description: Specifies whether the search should include objects nested further\n            than the immediate children of the search root. The default is\n            'false'.\n          in: query\n          name: searchFullHierarchy\n          required: false\n          schema:\n            type: boolean\n        - description: Determines how the startTime and endTime parameters are treated when\n            searching for event frame objects to be included in the returned\n            collection. If this parameter is one of the 'Backward*' or\n            'Forward*' values, none of endTime, sortField, or sortOrder may be\n            specified. The default is 'Overlapped'.\n          in: query\n          name: searchMode\n          required: false\n          schema:\n            type: string\n        - description: List of fields to be returned in the response, separated by\n            semicolons (;). If this parameter is not specified, all available\n            fields will be returned.\n          in: query\n          name: selectedFields\n          required: false\n          schema:\n            type: string\n        - description: Specify that returned event frames must have this severity. Multiple\n            severity values may be specified with multiple instances of the\n            parameter. The default is no severity filter.\n          in: query\n          name: severity\n          required: false\n          explode: true\n          schema:\n            type: array\n            items:\n              type: string\n        - description: The field or property of the object used to sort the returned\n            collection. The default is 'Name' if searchMode is not one of the\n            'Backward*' or 'Forward*' values.\n          in: query\n          name: sortField\n          required: false\n          schema:\n            type: string\n        - description: The order that the returned collection is sorted. The default is\n            'Ascending' if searchMode is not one of the 'Backward*' or\n            'Forward*' values.\n          in: query\n          name: sortOrder\n          required: false\n          schema:\n            type: string\n        - description: The starting index (zero based) of the items to be returned. The\n            default is 0.\n          in: query\n          name: startIndex\n          required: false\n          schema:\n            type: integer\n        - description: The starting time for the search. startTime must be less than or\n            equal to the endTime. The searchMode parameter will control whether\n            the comparison will be performed against the event frame's startTime\n            or endTime. The default is '*-8h'.\n          in: query\n          name: startTime\n          required: false\n          schema:\n            type: string\n        - description: Specify that returned event frames must have this template or a\n            template derived from this template. The default is no template\n            filter. Specify this parameter by name.\n          in: query\n          name: templateName\n          required: false\n          schema:\n            type: string\n        - description: Optional parameter. Used to specify the type of WebID. Useful for\n            URL brevity and other special cases. Default is the value of the\n            configuration item \"WebIDType\".\n          in: query\n          name: webIdType\n          required: false\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: A list of event frames matching the specified conditions.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Items_EventFrame_\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/Items_EventFrame_\"\n            text/html:\n              schema:\n                $ref: \"#/components/schemas/Items_EventFrame_\"\n            application/x-ms-application:\n              schema:\n                $ref: \"#/components/schemas/Items_EventFrame_\"\n      summary: Retrieve event frames based on the specified conditions. By default,\n        returns all children of the specified root event frame that have been\n        active in the past 8 hours.\n      tags:\n        - EventFrame\n    post:\n      deprecated: false\n      operationId: EventFrame_CreateEventFrame\n      parameters:\n        - description: The ID of the parent event frame on which to create the event frame.\n          in: path\n          name: webId\n          required: true\n          schema:\n            type: string\n        - description: Optional parameter. Used to specify the type of WebID. Useful for\n            URL brevity and other special cases. Default is the value of the\n            configuration item \"WebIDType\".\n          in: query\n          name: webIdType\n          required: false\n          schema:\n            type: string\n      requestBody:\n        $ref: \"#/components/requestBodies/EventFrame\"\n      responses:\n        \"201\":\n          description: The event frame was created. The response's Location header is a\n            link to the event frame.\n      summary: Create an event frame as a child of the specified event frame.\n      tags:\n        - EventFrame\n  \"/eventframes/{webId}/referencedelements\":\n    get:\n      deprecated: false\n      operationId: EventFrame_GetReferencedElements\n      parameters:\n        - description: The ID of the event frame whose referenced elements should be\n            retrieved.\n          in: path\n          name: webId\n          required: true\n          schema:\n            type: string\n        - description: Associated values to return in the response, separated by semicolons\n            (;). This call supports Paths to return all paths to the element. If\n            this parameter is not specified, paths are not returned.\n          in: query\n          name: associations\n          required: false\n          schema:\n            type: string\n        - description: List of fields to be returned in the response, separated by\n            semicolons (;). If this parameter is not specified, all available\n            fields will be returned.\n          in: query\n          name: selectedFields\n          required: false\n          schema:\n            type: string\n        - description: Optional parameter. Used to specify the type of WebID. Useful for\n            URL brevity and other special cases. Default is the value of the\n            configuration item \"WebIDType\".\n          in: query\n          name: webIdType\n          required: false\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: A list of referenced elements.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Items_Element_\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/Items_Element_\"\n            text/html:\n              schema:\n                $ref: \"#/components/schemas/Items_Element_\"\n            application/x-ms-application:\n              schema:\n                $ref: \"#/components/schemas/Items_Element_\"\n      summary: Retrieve the event frame's referenced elements.\n      tags:\n        - EventFrame\n  \"/eventframes/{webId}/security\":\n    get:\n      deprecated: false\n      operationId: EventFrame_GetSecurity\n      parameters:\n        - description: The ID of the event frame for the security to be checked.\n          in: path\n          name: webId\n          required: true\n          schema:\n            type: string\n        - description: The user identity for the security information to be checked.\n            Multiple security identities may be specified with multiple\n            instances of the parameter. If the parameter is not specified, only\n            the current user's security rights will be returned.\n          in: query\n          name: userIdentity\n          required: true\n          explode: true\n          schema:\n            type: array\n            items:\n              type: string\n        - description: Indicates if the security cache should be refreshed before getting\n            security information. The default is 'false'.\n          in: query\n          name: forceRefresh\n          required: false\n          schema:\n            type: boolean\n        - description: List of fields to be returned in the response, separated by\n            semicolons (;). If this parameter is not specified, all available\n            fields will be returned.\n          in: query\n          name: selectedFields\n          required: false\n          schema:\n            type: string\n        - description: Optional parameter. Used to specify the type of WebID. Useful for\n            URL brevity and other special cases. Default is the value of the\n            configuration item \"WebIDType\".\n          in: query\n          name: webIdType\n          required: false\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: Security rights.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Items_SecurityRights_\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/Items_SecurityRights_\"\n            text/html:\n              schema:\n                $ref: \"#/components/schemas/Items_SecurityRights_\"\n            application/x-ms-application:\n              schema:\n                $ref: \"#/components/schemas/Items_SecurityRights_\"\n        \"400\":\n          description: An invalid or local account is specified as the user identity.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Errors\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/Errors\"\n            text/html:\n              schema:\n                $ref: \"#/components/schemas/Errors\"\n            application/x-ms-application:\n              schema:\n                $ref: \"#/components/schemas/Errors\"\n        \"401\":\n          description: Access denied for the specified user identity.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Errors\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/Errors\"\n            text/html:\n              schema:\n                $ref: \"#/components/schemas/Errors\"\n            application/x-ms-application:\n              schema:\n                $ref: \"#/components/schemas/Errors\"\n        \"409\":\n          description: Unsupported when using Anonymous authentication method.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Errors\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/Errors\"\n            text/html:\n              schema:\n                $ref: \"#/components/schemas/Errors\"\n            application/x-ms-application:\n              schema:\n                $ref: \"#/components/schemas/Errors\"\n        \"502\":\n          description: Failed to retrieve the specified user identity.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Errors\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/Errors\"\n            text/html:\n              schema:\n                $ref: \"#/components/schemas/Errors\"\n            application/x-ms-application:\n              schema:\n                $ref: \"#/components/schemas/Errors\"\n      summary: Get the security information of the specified security item associated\n        with the event frame for a specified user.\n      tags:\n        - EventFrame\n  \"/eventframes/{webId}/securityentries\":\n    get:\n      deprecated: false\n      operationId: EventFrame_GetSecurityEntries\n      parameters:\n        - description: The ID of the event frame.\n          in: path\n          name: webId\n          required: true\n          schema:\n            type: string\n        - description: The name query string used for filtering security entries. The\n            default is no filter.\n          in: query\n          name: nameFilter\n          required: false\n          schema:\n            type: string\n        - description: List of fields to be returned in the response, separated by\n            semicolons (;). If this parameter is not specified, all available\n            fields will be returned.\n          in: query\n          name: selectedFields\n          required: false\n          schema:\n            type: string\n        - description: Optional parameter. Used to specify the type of WebID. Useful for\n            URL brevity and other special cases. Default is the value of the\n            configuration item \"WebIDType\".\n          in: query\n          name: webIdType\n          required: false\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: A list of security entries matching the specified condition.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Items_SecurityEntry_\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/Items_SecurityEntry_\"\n            text/html:\n              schema:\n                $ref: \"#/components/schemas/Items_SecurityEntry_\"\n            application/x-ms-application:\n              schema:\n                $ref: \"#/components/schemas/Items_SecurityEntry_\"\n      summary: Retrieve the security entries associated with the event frame based on\n        the specified criteria. By default, all security entries for this event\n        frame are returned.\n      tags:\n        - EventFrame\n    post:\n      deprecated: false\n      operationId: EventFrame_CreateSecurityEntry\n      parameters:\n        - description: The ID of the event frame where the security entry will be created.\n          in: path\n          name: webId\n          required: true\n          schema:\n            type: string\n        - description: If false, the new access permissions are only applied to the\n            associated object. If true, the access permissions of children with\n            any parent-child reference types will change when the permissions on\n            the primary parent change.\n          in: query\n          name: applyToChildren\n          required: false\n          schema:\n            type: boolean\n        - description: Optional parameter. Used to specify the type of WebID. Useful for\n            URL brevity and other special cases. Default is the value of the\n            configuration item \"WebIDType\".\n          in: query\n          name: webIdType\n          required: false\n          schema:\n            type: string\n      requestBody:\n        $ref: \"#/components/requestBodies/SecurityEntry\"\n      responses:\n        \"201\":\n          description: The security entry was created. The response's Location header is a\n            link to the security entry.\n      summary: Create a security entry owned by the event frame.\n      tags:\n        - EventFrame\n  \"/eventframes/{webId}/securityentries/{name}\":\n    delete:\n      deprecated: false\n      operationId: EventFrame_DeleteSecurityEntry\n      parameters:\n        - description: The name of the security entry. For every backslash character (\\) in\n            the security entry name, replace with asterisk (*). As an example,\n            use domain*username instead of domain\\username.\n          in: path\n          name: name\n          required: true\n          schema:\n            type: string\n        - description: The ID of the event frame where the security entry will be deleted.\n          in: path\n          name: webId\n          required: true\n          schema:\n            type: string\n        - description: If false, the new access permissions are only applied to the\n            associated object. If true, the access permissions of children with\n            any parent-child reference types will change when the permissions on\n            the primary parent change.\n          in: query\n          name: applyToChildren\n          required: false\n          schema:\n            type: boolean\n      responses:\n        \"204\":\n          description: The security entry was deleted.\n      summary: Delete a security entry owned by the event frame.\n      tags:\n        - EventFrame\n    get:\n      deprecated: false\n      operationId: EventFrame_GetSecurityEntryByName\n      parameters:\n        - description: The name of the security entry. For every backslash character (\\) in\n            the security entry name, replace with asterisk (*). As an example,\n            use domain*username instead of domain\\username.\n          in: path\n          name: name\n          required: true\n          schema:\n            type: string\n        - description: The ID of the event frame.\n          in: path\n          name: webId\n          required: true\n          schema:\n            type: string\n        - description: List of fields to be returned in the response, separated by\n            semicolons (;). If this parameter is not specified, all available\n            fields will be returned.\n          in: query\n          name: selectedFields\n          required: false\n          schema:\n            type: string\n        - description: Optional parameter. Used to specify the type of WebID. Useful for\n            URL brevity and other special cases. Default is the value of the\n            configuration item \"WebIDType\".\n          in: query\n          name: webIdType\n          required: false\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: The security entry matching the specified condition.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/SecurityEntry\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/SecurityEntry\"\n            text/html:\n              schema:\n                $ref: \"#/components/schemas/SecurityEntry\"\n            application/x-ms-application:\n              schema:\n                $ref: \"#/components/schemas/SecurityEntry\"\n        \"404\":\n          description: The security entry with the specified name is not found.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Errors\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/Errors\"\n            text/html:\n              schema:\n                $ref: \"#/components/schemas/Errors\"\n            application/x-ms-application:\n              schema:\n                $ref: \"#/components/schemas/Errors\"\n      summary: Retrieve the security entry associated with the event frame with the\n        specified name.\n      tags:\n        - EventFrame\n    put:\n      deprecated: false\n      operationId: EventFrame_UpdateSecurityEntry\n      parameters:\n        - description: The name of the security entry.\n          in: path\n          name: name\n          required: true\n          schema:\n            type: string\n        - description: The ID of the event frame where the security entry will be updated.\n          in: path\n          name: webId\n          required: true\n          schema:\n            type: string\n        - description: If false, the new access permissions are only applied to the\n            associated object. If true, the access permissions of children with\n            any parent-child reference types will change when the permissions on\n            the primary parent change.\n          in: query\n          name: applyToChildren\n          required: false\n          schema:\n            type: boolean\n      requestBody:\n        $ref: \"#/components/requestBodies/SecurityEntry2\"\n      responses:\n        \"204\":\n          description: The security entry was updated.\n      summary: Update a security entry owned by the event frame.\n      tags:\n        - EventFrame\n  /notificationcontacttemplates:\n    get:\n      deprecated: false\n      operationId: NotificationContactTemplate_GetByPath\n      parameters:\n        - description: The path to the notification contact template.\n          in: query\n          name: path\n          required: true\n          schema:\n            type: string\n        - description: List of fields to be returned in the response, separated by\n            semicolons (;). If this parameter is not specified, all available\n            fields will be returned.\n          in: query\n          name: selectedFields\n          required: false\n          schema:\n            type: string\n        - description: Optional parameter. Used to specify the type of WebID. Useful for\n            URL brevity and other special cases. Default is the value of the\n            configuration item \"WebIDType\".\n          in: query\n          name: webIdType\n          required: false\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: The specified notification contact template.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/NotificationContactTemplate\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/NotificationContactTemplate\"\n            text/html:\n              schema:\n                $ref: \"#/components/schemas/NotificationContactTemplate\"\n            application/x-ms-application:\n              schema:\n                $ref: \"#/components/schemas/NotificationContactTemplate\"\n      summary: Retrieve a notification contact template by path.\n      tags:\n        - NotificationContactTemplate\n  /notificationcontacttemplates/search:\n    get:\n      deprecated: false\n      operationId: NotificationContactTemplate_GetNotificationContactTemplatesQuery\n      parameters:\n        - description: The ID of the asset server to use as the root of the query.\n          in: query\n          name: assetServerWebId\n          required: false\n          schema:\n            type: string\n        - description: The maximum number of objects to be returned per call (page size).\n            The default is 1000.\n          in: query\n          name: maxCount\n          required: false\n          schema:\n            type: integer\n        - description: \"The query string is a list of filters used to perform an AFSearch\n            for the Notification Contact Templates in the asset database. An\n            example would be: \\\"query=Name:='MyNotificationContactTemplate'\\\".\"\n          in: query\n          name: query\n          required: false\n          schema:\n            type: string\n        - description: List of fields to be returned in the response, separated by\n            semicolons (;). If this parameter is not specified, all available\n            fields will be returned.\n          in: query\n          name: selectedFields\n          required: false\n          schema:\n            type: string\n        - description: The starting index (zero based) of the items to be returned. The\n            default is 0.\n          in: query\n          name: startIndex\n          required: false\n          schema:\n            type: integer\n        - description: Optional parameter. Used to specify the type of WebID. Useful for\n            URL brevity and other special cases. Default is the value of the\n            configuration item \"WebIDType\".\n          in: query\n          name: webIdType\n          required: false\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: A list of notification contact templates matching the specified\n            conditions.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Items_NotificationContactTemplate_\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/Items_NotificationContactTemplate_\"\n            text/html:\n              schema:\n                $ref: \"#/components/schemas/Items_NotificationContactTemplate_\"\n            application/x-ms-application:\n              schema:\n                $ref: \"#/components/schemas/Items_NotificationContactTemplate_\"\n      summary: Retrieve notification contact templates based on the specified\n        conditions. Returns notification contact templates using the specified\n        search query string.\n      tags:\n        - NotificationContactTemplate\n  \"/notificationcontacttemplates/{webId}\":\n    delete:\n      deprecated: false\n      operationId: NotificationContactTemplate_Delete\n      parameters:\n        - description: The ID of the notification contact template to be deleted.\n          in: path\n          name: webId\n          required: true\n          schema:\n            type: string\n      responses:\n        \"204\":\n          description: The notification contact template was deleted.\n      summary: Delete a notification contact template.\n      tags:\n        - NotificationContactTemplate\n    get:\n      deprecated: false\n      operationId: NotificationContactTemplate_Get\n      parameters:\n        - description: The ID of the notification contact template.\n          in: path\n          name: webId\n          required: true\n          schema:\n            type: string\n        - description: List of fields to be returned in the response, separated by\n            semicolons (;). If this parameter is not specified, all available\n            fields will be returned.\n          in: query\n          name: selectedFields\n          required: false\n          schema:\n            type: string\n        - description: Optional parameter. Used to specify the type of WebID. Useful for\n            URL brevity and other special cases. Default is the value of the\n            configuration item \"WebIDType\".\n          in: query\n          name: webIdType\n          required: false\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: The specified notification contact template.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/NotificationContactTemplate\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/NotificationContactTemplate\"\n            text/html:\n              schema:\n                $ref: \"#/components/schemas/NotificationContactTemplate\"\n            application/x-ms-application:\n              schema:\n                $ref: \"#/components/schemas/NotificationContactTemplate\"\n      summary: Retrieve a notification contact template.\n      tags:\n        - NotificationContactTemplate\n    patch:\n      deprecated: false\n      operationId: NotificationContactTemplate_Update\n      parameters:\n        - description: The ID of the notification contact template to update.\n          in: path\n          name: webId\n          required: true\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/NotificationContactTemplate\"\n          text/json:\n            schema:\n              $ref: \"#/components/schemas/NotificationContactTemplate\"\n        description: A partial notification contact template containing the desired changes.\n        required: true\n      responses:\n        \"204\":\n          description: The notification contact template was updated.\n      summary: Update a notification contact template by replacing items in its\n        definition.\n      tags:\n        - NotificationContactTemplate\n  \"/notificationcontacttemplates/{webId}/notificationcontacttemplates\":\n    get:\n      deprecated: false\n      operationId: NotificationContactTemplate_GetNotificationContactTemplates\n      parameters:\n        - description: The ID of the notification contact template.\n          in: path\n          name: webId\n          required: true\n          schema:\n            type: string\n        - description: List of fields to be returned in the response, separated by\n            semicolons (;). If this parameter is not specified, all available\n            fields will be returned.\n          in: query\n          name: selectedFields\n          required: false\n          schema:\n            type: string\n        - description: Optional parameter. Used to specify the type of WebID. Useful for\n            URL brevity and other special cases. Default is the value of the\n            configuration item \"WebIDType\".\n          in: query\n          name: webIdType\n          required: false\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: A list of notification contact templates.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/NotificationContactTemplate\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/NotificationContactTemplate\"\n            text/html:\n              schema:\n                $ref: \"#/components/schemas/NotificationContactTemplate\"\n            application/x-ms-application:\n              schema:\n                $ref: \"#/components/schemas/NotificationContactTemplate\"\n      summary: Retrieve notification contact template's child templates.\n      tags:\n        - NotificationContactTemplate\n  \"/notificationcontacttemplates/{webId}/security\":\n    get:\n      deprecated: false\n      operationId: NotificationContactTemplate_GetSecurity\n      parameters:\n        - description: The ID of the notification contact template for the security to be\n            checked.\n          in: path\n          name: webId\n          required: true\n          schema:\n            type: string\n        - description: The user identity for the security information to be checked.\n            Multiple security identities may be specified with multiple\n            instances of the parameter. If the parameter is not specified, only\n            the current user's security rights will be returned.\n          in: query\n          name: userIdentity\n          required: true\n          explode: true\n          schema:\n            type: array\n            items:\n              type: string\n        - description: Indicates if the security cache should be refreshed before getting\n            security information. The default is 'false'.\n          in: query\n          name: forceRefresh\n          required: false\n          schema:\n            type: boolean\n        - description: List of fields to be returned in the response, separated by\n            semicolons (;). If this parameter is not specified, all available\n            fields will be returned.\n          in: query\n          name: selectedFields\n          required: false\n          schema:\n            type: string\n        - description: Optional parameter. Used to specify the type of WebID. Useful for\n            URL brevity and other special cases. Default is the value of the\n            configuration item \"WebIDType\".\n          in: query\n          name: webIdType\n          required: false\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: Security rights.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Items_SecurityRights_\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/Items_SecurityRights_\"\n            text/html:\n              schema:\n                $ref: \"#/components/schemas/Items_SecurityRights_\"\n            application/x-ms-application:\n              schema:\n                $ref: \"#/components/schemas/Items_SecurityRights_\"\n        \"400\":\n          description: An invalid or local account is specified as the user identity.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Errors\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/Errors\"\n            text/html:\n              schema:\n                $ref: \"#/components/schemas/Errors\"\n            application/x-ms-application:\n              schema:\n                $ref: \"#/components/schemas/Errors\"\n        \"401\":\n          description: Access denied for the specified user identity.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Errors\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/Errors\"\n            text/html:\n              schema:\n                $ref: \"#/components/schemas/Errors\"\n            application/x-ms-application:\n              schema:\n                $ref: \"#/components/schemas/Errors\"\n        \"409\":\n          description: Unsupported when using Anonymous authentication method.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Errors\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/Errors\"\n            text/html:\n              schema:\n                $ref: \"#/components/schemas/Errors\"\n            application/x-ms-application:\n              schema:\n                $ref: \"#/components/schemas/Errors\"\n        \"502\":\n          description: Failed to retrieve the specified user identity.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Errors\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/Errors\"\n            text/html:\n              schema:\n                $ref: \"#/components/schemas/Errors\"\n            application/x-ms-application:\n              schema:\n                $ref: \"#/components/schemas/Errors\"\n      summary: Get the security information of the specified security item associated\n        with the notification contact template for a specified user.\n      tags:\n        - NotificationContactTemplate\n  \"/notificationcontacttemplates/{webId}/securityentries\":\n    get:\n      deprecated: false\n      operationId: NotificationContactTemplate_GetSecurityEntries\n      parameters:\n        - description: The ID of the notification contact template.\n          in: path\n          name: webId\n          required: true\n          schema:\n            type: string\n        - description: The name query string used for filtering security entries. The\n            default is no filter.\n          in: query\n          name: nameFilter\n          required: false\n          schema:\n            type: string\n        - description: List of fields to be returned in the response, separated by\n            semicolons (;). If this parameter is not specified, all available\n            fields will be returned.\n          in: query\n          name: selectedFields\n          required: false\n          schema:\n            type: string\n        - description: Optional parameter. Used to specify the type of WebID. Useful for\n            URL brevity and other special cases. Default is the value of the\n            configuration item \"WebIDType\".\n          in: query\n          name: webIdType\n          required: false\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: A list of security entries matching the specified condition.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Items_SecurityEntry_\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/Items_SecurityEntry_\"\n            text/html:\n              schema:\n                $ref: \"#/components/schemas/Items_SecurityEntry_\"\n            application/x-ms-application:\n              schema:\n                $ref: \"#/components/schemas/Items_SecurityEntry_\"\n      summary: Retrieve the security entries associated with the notification contact\n        template based on the specified criteria. By default, all security\n        entries for this notification contact template are returned.\n      tags:\n        - NotificationContactTemplate\n    post:\n      deprecated: false\n      operationId: NotificationContactTemplate_CreateSecurityEntry\n      parameters:\n        - description: The ID of the notification contact template, where the security\n            entry will be created.\n          in: path\n          name: webId\n          required: true\n          schema:\n            type: string\n        - description: If false, the new access permissions are only applied to the\n            associated object. If true, the access permissions of children with\n            any parent-child reference types will change when the permissions on\n            the primary parent change.\n          in: query\n          name: applyToChildren\n          required: false\n          schema:\n            type: boolean\n        - description: Optional parameter. Used to specify the type of WebID. Useful for\n            URL brevity and other special cases. Default is the value of the\n            configuration item \"WebIDType\".\n          in: query\n          name: webIdType\n          required: false\n          schema:\n            type: string\n      requestBody:\n        $ref: \"#/components/requestBodies/SecurityEntry\"\n      responses:\n        \"201\":\n          description: The security entry was created. The response's Location header is a\n            link to the security entry.\n      summary: Create a security entry owned by the notification contact template.\n      tags:\n        - NotificationContactTemplate\n  \"/notificationcontacttemplates/{webId}/securityentries/{name}\":\n    delete:\n      deprecated: false\n      operationId: NotificationContactTemplate_DeleteSecurityEntry\n      parameters:\n        - description: The name of the security entry. For every backslash character (\\) in\n            the security entry name, replace with asterisk (*). As an example,\n            use domain*username instead of domain\\username.\n          in: path\n          name: name\n          required: true\n          schema:\n            type: string\n        - description: The ID of the notification contact template, where the security\n            entry will be deleted.\n          in: path\n          name: webId\n          required: true\n          schema:\n            type: string\n        - description: If false, the new access permissions are only applied to the\n            associated object. If true, the access permissions of children with\n            any parent-child reference types will change when the permissions on\n            the primary parent change.\n          in: query\n          name: applyToChildren\n          required: false\n          schema:\n            type: boolean\n      responses:\n        \"204\":\n          description: The security entry was deleted.\n      summary: Delete a security entry owned by the notification contact template.\n      tags:\n        - NotificationContactTemplate\n    get:\n      deprecated: false\n      operationId: NotificationContactTemplate_GetSecurityEntryByName\n      parameters:\n        - description: The name of the security entry. For every backslash character (\\) in\n            the security entry name, replace with asterisk (*). As an example,\n            use domain*username instead of domain\\username.\n          in: path\n          name: name\n          required: true\n          schema:\n            type: string\n        - description: The ID of the notification contact template.\n          in: path\n          name: webId\n          required: true\n          schema:\n            type: string\n        - description: List of fields to be returned in the response, separated by\n            semicolons (;). If this parameter is not specified, all available\n            fields will be returned.\n          in: query\n          name: selectedFields\n          required: false\n          schema:\n            type: string\n        - description: Optional parameter. Used to specify the type of WebID. Useful for\n            URL brevity and other special cases. Default is the value of the\n            configuration item \"WebIDType\".\n          in: query\n          name: webIdType\n          required: false\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: The security entry matching the specified condition.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/SecurityEntry\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/SecurityEntry\"\n            text/html:\n              schema:\n                $ref: \"#/components/schemas/SecurityEntry\"\n            application/x-ms-application:\n              schema:\n                $ref: \"#/components/schemas/SecurityEntry\"\n        \"404\":\n          description: The security entry with the specified name is not found.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Errors\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/Errors\"\n            text/html:\n              schema:\n                $ref: \"#/components/schemas/Errors\"\n            application/x-ms-application:\n              schema:\n                $ref: \"#/components/schemas/Errors\"\n      summary: Retrieve the security entry associated with the notification contact\n        template with the specified name.\n      tags:\n        - NotificationContactTemplate\n    put:\n      deprecated: false\n      operationId: NotificationContactTemplate_UpdateSecurityEntry\n      parameters:\n        - description: The name of the security entry.\n          in: path\n          name: name\n          required: true\n          schema:\n            type: string\n        - description: The ID of the notification contact template, where the security\n            entry will be updated.\n          in: path\n          name: webId\n          required: true\n          schema:\n            type: string\n        - description: If false, the new access permissions are only applied to the\n            associated object. If true, the access permissions of children with\n            any parent-child reference types will change when the permissions on\n            the primary parent change.\n          in: query\n          name: applyToChildren\n          required: false\n          schema:\n            type: boolean\n      requestBody:\n        $ref: \"#/components/requestBodies/SecurityEntry2\"\n      responses:\n        \"204\":\n          description: The security entry was updated.\n      summary: Update a security entry owned by the notification contact template.\n      tags:\n        - NotificationContactTemplate\n  /notificationplugIns:\n    get:\n      deprecated: false\n      description: This method returns a notification plugin based on the hierarchical path\n        associated with it, and should be used when a path has been received\n        from a separate part of the PI System for use in the PI Web API. Users\n        should primarily search with the WebID when available.\n      operationId: NotificationPlugIn_GetByPath\n      parameters:\n        - description: The path to the notification plugin.\n          in: query\n          name: path\n          required: true\n          schema:\n            type: string\n        - description: List of fields to be returned in the response, separated by\n            semicolons (;). If this parameter is not specified, all available\n            fields will be returned.\n          in: query\n          name: selectedFields\n          required: false\n          schema:\n            type: string\n        - description: Optional parameter. Used to specify the type of WebID. Useful for\n            URL brevity and other special cases. Default is the value of the\n            configuration item \"WebIDType\".\n          in: query\n          name: webIdType\n          required: false\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: The specified notification plugin.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/NotificationPlugIn\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/NotificationPlugIn\"\n            text/html:\n              schema:\n                $ref: \"#/components/schemas/NotificationPlugIn\"\n            application/x-ms-application:\n              schema:\n                $ref: \"#/components/schemas/NotificationPlugIn\"\n      summary: Retrieve a notification plugin by path.\n      tags:\n        - NotificationPlugIn\n  \"/notificationplugins/{webId}\":\n    get:\n      deprecated: false\n      operationId: NotificationPlugIn_Get\n      parameters:\n        - description: The ID of the notification plugin.\n          in: path\n          name: webId\n          required: true\n          schema:\n            type: string\n        - description: List of fields to be returned in the response, separated by\n            semicolons (;). If this parameter is not specified, all available\n            fields will be returned.\n          in: query\n          name: selectedFields\n          required: false\n          schema:\n            type: string\n        - description: Optional parameter. Used to specify the type of WebID. Useful for\n            URL brevity and other special cases. Default is the value of the\n            configuration item \"WebIDType\".\n          in: query\n          name: webIdType\n          required: false\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: The specified notification plugin.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/NotificationPlugIn\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/NotificationPlugIn\"\n            text/html:\n              schema:\n                $ref: \"#/components/schemas/NotificationPlugIn\"\n            application/x-ms-application:\n              schema:\n                $ref: \"#/components/schemas/NotificationPlugIn\"\n      summary: Retrieve a notification plugin.\n      tags:\n        - NotificationPlugIn\n  /notificationrules:\n    get:\n      deprecated: false\n      description: This method returns a Notification Rule based on the hierarchical path\n        associated with it, and should be used when a path has been received\n        from a separate part of the PI System for use in the PI Web API. Users\n        should primarily search with the WebID when available.\n      operationId: NotificationRule_GetByPath\n      parameters:\n        - description: The path to the notification rule.\n          in: query\n          name: path\n          required: true\n          schema:\n            type: string\n        - description: List of fields to be returned in the response, separated by\n            semicolons (;). If this parameter is not specified, all available\n            fields will be returned.\n          in: query\n          name: selectedFields\n          required: false\n          schema:\n            type: string\n        - description: Optional parameter. Used to specify the type of WebID. Useful for\n            URL brevity and other special cases. Default is the value of the\n            configuration item \"WebIDType\".\n          in: query\n          name: webIdType\n          required: false\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: The specified notification rule.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/NotificationRule\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/NotificationRule\"\n            text/html:\n              schema:\n                $ref: \"#/components/schemas/NotificationRule\"\n            application/x-ms-application:\n              schema:\n                $ref: \"#/components/schemas/NotificationRule\"\n      summary: Retrieve a notification rule by path.\n      tags:\n        - NotificationRule\n  /notificationrules/search:\n    get:\n      deprecated: false\n      operationId: NotificationRule_GetNotificationRulesQuery\n      parameters:\n        - description: The ID of the asset database to use as the root of the query.\n          in: query\n          name: databaseWebId\n          required: false\n          schema:\n            type: string\n        - description: The maximum number of objects to be returned per call (page size).\n            The default is 1000.\n          in: query\n          name: maxCount\n          required: false\n          schema:\n            type: integer\n        - description: 'The query string is a list of filters used to perform an AFSearch\n            for the Notification rules in the asset database. An example would\n            be: \"query=Name:=MyNotificationRule* Template:=NoteRuleTemplate\".'\n          in: query\n          name: query\n          required: false\n          schema:\n            type: string\n        - description: List of fields to be returned in the response, separated by\n            semicolons (;). If this parameter is not specified, all available\n            fields will be returned.\n          in: query\n          name: selectedFields\n          required: false\n          schema:\n            type: string\n        - description: The starting index (zero based) of the items to be returned. The\n            default is 0.\n          in: query\n          name: startIndex\n          required: false\n          schema:\n            type: integer\n        - description: Optional parameter. Used to specify the type of WebID. Useful for\n            URL brevity and other special cases. Default is the value of the\n            configuration item \"WebIDType\".\n          in: query\n          name: webIdType\n          required: false\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: A list of notification rules matching the specified conditions.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Items_NotificationRule_\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/Items_NotificationRule_\"\n            text/html:\n              schema:\n                $ref: \"#/components/schemas/Items_NotificationRule_\"\n            application/x-ms-application:\n              schema:\n                $ref: \"#/components/schemas/Items_NotificationRule_\"\n      summary: Retrieve notification rules based on the specified conditions. Returns\n        notification rules using the specified search query string.\n      tags:\n        - NotificationRule\n  \"/notificationrules/{webId}\":\n    delete:\n      deprecated: false\n      operationId: NotificationRule_Delete\n      parameters:\n        - description: The ID of the notification rule.\n          in: path\n          name: webId\n          required: true\n          schema:\n            type: string\n      responses:\n        \"204\":\n          description: The notification rule was deleted.\n      summary: Delete a notification rule.\n      tags:\n        - NotificationRule\n    get:\n      deprecated: false\n      operationId: NotificationRule_Get\n      parameters:\n        - description: The ID of the resource to use as the root of the search.\n          in: path\n          name: webId\n          required: true\n          schema:\n            type: string\n        - description: List of fields to be returned in the response, separated by\n            semicolons (;). If this parameter is not specified, all available\n            fields will be returned.\n          in: query\n          name: selectedFields\n          required: false\n          schema:\n            type: string\n        - description: Optional parameter. Used to specify the type of WebID. Useful for\n            URL brevity and other special cases. Default is the value of the\n            configuration item \"WebIDType\".\n          in: query\n          name: webIdType\n          required: false\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: A notification rule\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/NotificationRule\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/NotificationRule\"\n            text/html:\n              schema:\n                $ref: \"#/components/schemas/NotificationRule\"\n            application/x-ms-application:\n              schema:\n                $ref: \"#/components/schemas/NotificationRule\"\n      summary: Retrieve a notification rule.\n      tags:\n        - NotificationRule\n    patch:\n      deprecated: false\n      operationId: NotificationRule_Update\n      parameters:\n        - description: The ID of the notification rule to update.\n          in: path\n          name: webId\n          required: true\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/NotificationRule\"\n          text/json:\n            schema:\n              $ref: \"#/components/schemas/NotificationRule\"\n        description: A partial notification rule containing the desired changes.\n        required: true\n      responses:\n        \"204\":\n          description: The notification rule was updated.\n      summary: Update a notification rule by replacing items in its definition.\n      tags:\n        - NotificationRule\n  \"/notificationrules/{webId}/notificationrulesubscribers\":\n    get:\n      deprecated: false\n      operationId: NotificationRule_GetNotificationRuleSubscribers\n      parameters:\n        - description: The ID of the resource to use as the root of the search.\n          in: path\n          name: webId\n          required: true\n          schema:\n            type: string\n        - description: List of fields to be returned in the response, separated by\n            semicolons (;). If this parameter is not specified, all available\n            fields will be returned.\n          in: query\n          name: selectedFields\n          required: false\n          schema:\n            type: string\n        - description: Optional parameter. Used to specify the type of WebID. Useful for\n            URL brevity and other special cases. Default is the value of the\n            configuration item \"WebIDType\".\n          in: query\n          name: webIdType\n          required: false\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: A list of notification rule subscribers.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Items_NotificationRuleSubscriber_\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/Items_NotificationRuleSubscriber_\"\n            text/html:\n              schema:\n                $ref: \"#/components/schemas/Items_NotificationRuleSubscriber_\"\n            application/x-ms-application:\n              schema:\n                $ref: \"#/components/schemas/Items_NotificationRuleSubscriber_\"\n      summary: Retrieve notification rule subscribers.\n      tags:\n        - NotificationRule\n    post:\n      deprecated: false\n      operationId: NotificationRule_CreateNotificationRuleSubscriber\n      parameters:\n        - description: The ID of the notification rule on which to create the notification\n            rule subscriber.\n          in: path\n          name: webId\n          required: true\n          schema:\n            type: string\n        - description: Optional parameter. Used to specify the type of WebID. Useful for\n            URL brevity and other special cases. Default is the value of the\n            configuration item \"WebIDType\".\n          in: query\n          name: webIdType\n          required: false\n          schema:\n            type: string\n      requestBody:\n        $ref: \"#/components/requestBodies/NotificationRuleSubscriber\"\n      responses:\n        \"201\":\n          description: The notification rule subscriber was created. The response's\n            Location header is a link to the notification rule subscriber.\n      summary: Create a notification rule subscriber.\n      tags:\n        - NotificationRule\n  \"/notificationrules/{webId}/security\":\n    get:\n      deprecated: false\n      operationId: NotificationRule_GetSecurity\n      parameters:\n        - description: The ID of the notification rule for the security to be checked.\n          in: path\n          name: webId\n          required: true\n          schema:\n            type: string\n        - description: The user identity for the security information to be checked.\n            Multiple security identities may be specified with multiple\n            instances of the parameter. If the parameter is not specified, only\n            the current user's security rights will be returned.\n          in: query\n          name: userIdentity\n          required: true\n          explode: true\n          schema:\n            type: array\n            items:\n              type: string\n        - description: Indicates if the security cache should be refreshed before getting\n            security information. The default is 'false'.\n          in: query\n          name: forceRefresh\n          required: false\n          schema:\n            type: boolean\n        - description: List of fields to be returned in the response, separated by\n            semicolons (;). If this parameter is not specified, all available\n            fields will be returned.\n          in: query\n          name: selectedFields\n          required: false\n          schema:\n            type: string\n        - description: Optional parameter. Used to specify the type of WebID. Useful for\n            URL brevity and other special cases. Default is the value of the\n            configuration item \"WebIDType\".\n          in: query\n          name: webIdType\n          required: false\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: Security rights.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Items_SecurityRights_\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/Items_SecurityRights_\"\n            text/html:\n              schema:\n                $ref: \"#/components/schemas/Items_SecurityRights_\"\n            application/x-ms-application:\n              schema:\n                $ref: \"#/components/schemas/Items_SecurityRights_\"\n        \"400\":\n          description: An invalid or local account is specified as the user identity.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Errors\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/Errors\"\n            text/html:\n              schema:\n                $ref: \"#/components/schemas/Errors\"\n            application/x-ms-application:\n              schema:\n                $ref: \"#/components/schemas/Errors\"\n        \"401\":\n          description: Access denied for the specified user identity.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Errors\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/Errors\"\n            text/html:\n              schema:\n                $ref: \"#/components/schemas/Errors\"\n            application/x-ms-application:\n              schema:\n                $ref: \"#/components/schemas/Errors\"\n        \"409\":\n          description: Unsupported when using Anonymous authentication method.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Errors\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/Errors\"\n            text/html:\n              schema:\n                $ref: \"#/components/schemas/Errors\"\n            application/x-ms-application:\n              schema:\n                $ref: \"#/components/schemas/Errors\"\n        \"502\":\n          description: Failed to retrieve the specified user identity.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Errors\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/Errors\"\n            text/html:\n              schema:\n                $ref: \"#/components/schemas/Errors\"\n            application/x-ms-application:\n              schema:\n                $ref: \"#/components/schemas/Errors\"\n      summary: Get the security information of the specified security item associated\n        with the notification rule for a specified user.\n      tags:\n        - NotificationRule\n  \"/notificationrules/{webId}/securityentries\":\n    get:\n      deprecated: false\n      operationId: NotificationRule_GetSecurityEntries\n      parameters:\n        - description: The ID of the notification rule.\n          in: path\n          name: webId\n          required: true\n          schema:\n            type: string\n        - description: The name query string used for filtering security entries. The\n            default is no filter.\n          in: query\n          name: nameFilter\n          required: false\n          schema:\n            type: string\n        - description: List of fields to be returned in the response, separated by\n            semicolons (;). If this parameter is not specified, all available\n            fields will be returned.\n          in: query\n          name: selectedFields\n          required: false\n          schema:\n            type: string\n        - description: Optional parameter. Used to specify the type of WebID. Useful for\n            URL brevity and other special cases. Default is the value of the\n            configuration item \"WebIDType\".\n          in: query\n          name: webIdType\n          required: false\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: A list of security entries matching the specified condition.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Items_SecurityEntry_\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/Items_SecurityEntry_\"\n            text/html:\n              schema:\n                $ref: \"#/components/schemas/Items_SecurityEntry_\"\n            application/x-ms-application:\n              schema:\n                $ref: \"#/components/schemas/Items_SecurityEntry_\"\n      summary: Retrieve the security entries associated with the notification rule\n        based on the specified criteria. By default, all security entries for\n        this notification rule are returned.\n      tags:\n        - NotificationRule\n    post:\n      deprecated: false\n      operationId: NotificationRule_CreateSecurityEntry\n      parameters:\n        - description: The ID of the notification rule, where the security entry will be\n            created.\n          in: path\n          name: webId\n          required: true\n          schema:\n            type: string\n        - description: If false, the new access permissions are only applied to the\n            associated object. If true, the access permissions of children with\n            any parent-child reference types will change when the permissions on\n            the primary parent change.\n          in: query\n          name: applyToChildren\n          required: false\n          schema:\n            type: boolean\n        - description: Optional parameter. Used to specify the type of WebID. Useful for\n            URL brevity and other special cases. Default is the value of the\n            configuration item \"WebIDType\".\n          in: query\n          name: webIdType\n          required: false\n          schema:\n            type: string\n      requestBody:\n        $ref: \"#/components/requestBodies/SecurityEntry\"\n      responses:\n        \"201\":\n          description: The security entry was created. The response's Location header is a\n            link to the security entry.\n      summary: Create a security entry owned by the notification rule.\n      tags:\n        - NotificationRule\n  \"/notificationrules/{webId}/securityentries/{name}\":\n    delete:\n      deprecated: false\n      operationId: NotificationRule_DeleteSecurityEntry\n      parameters:\n        - description: The name of the security entry. For every backslash character (\\) in\n            the security entry name, replace with asterisk (*). As an example,\n            use domain*username instead of domain\\username.\n          in: path\n          name: name\n          required: true\n          schema:\n            type: string\n        - description: The ID of the notification rule, where the security entry will be\n            deleted.\n          in: path\n          name: webId\n          required: true\n          schema:\n            type: string\n        - description: If false, the new access permissions are only applied to the\n            associated object. If true, the access permissions of children with\n            any parent-child reference types will change when the permissions on\n            the primary parent change.\n          in: query\n          name: applyToChildren\n          required: false\n          schema:\n            type: boolean\n      responses:\n        \"204\":\n          description: The security entry was deleted.\n      summary: Delete a security entry owned by the notification rule.\n      tags:\n        - NotificationRule\n    get:\n      deprecated: false\n      operationId: NotificationRule_GetSecurityEntryByName\n      parameters:\n        - description: The name of the security entry. For every backslash character (\\) in\n            the security entry name, replace with asterisk (*). As an example,\n            use domain*username instead of domain\\username.\n          in: path\n          name: name\n          required: true\n          schema:\n            type: string\n        - description: The ID of the notification rule.\n          in: path\n          name: webId\n          required: true\n          schema:\n            type: string\n        - description: List of fields to be returned in the response, separated by\n            semicolons (;). If this parameter is not specified, all available\n            fields will be returned.\n          in: query\n          name: selectedFields\n          required: false\n          schema:\n            type: string\n        - description: Optional parameter. Used to specify the type of WebID. Useful for\n            URL brevity and other special cases. Default is the value of the\n            configuration item \"WebIDType\".\n          in: query\n          name: webIdType\n          required: false\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: The security entry matching the specified condition.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/SecurityEntry\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/SecurityEntry\"\n            text/html:\n              schema:\n                $ref: \"#/components/schemas/SecurityEntry\"\n            application/x-ms-application:\n              schema:\n                $ref: \"#/components/schemas/SecurityEntry\"\n        \"404\":\n          description: The security entry with the specified name is not found.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Errors\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/Errors\"\n            text/html:\n              schema:\n                $ref: \"#/components/schemas/Errors\"\n            application/x-ms-application:\n              schema:\n                $ref: \"#/components/schemas/Errors\"\n      summary: Retrieve the security entry associated with the notification rule with\n        the specified name.\n      tags:\n        - NotificationRule\n    put:\n      deprecated: false\n      operationId: NotificationRule_UpdateSecurityEntry\n      parameters:\n        - description: The name of the security entry.\n          in: path\n          name: name\n          required: true\n          schema:\n            type: string\n        - description: The ID of the notification rule, where the security entry will be\n            updated.\n          in: path\n          name: webId\n          required: true\n          schema:\n            type: string\n        - description: If false, the new access permissions are only applied to the\n            associated object. If true, the access permissions of children with\n            any parent-child reference types will change when the permissions on\n            the primary parent change.\n          in: query\n          name: applyToChildren\n          required: false\n          schema:\n            type: boolean\n      requestBody:\n        $ref: \"#/components/requestBodies/SecurityEntry2\"\n      responses:\n        \"204\":\n          description: The security entry was updated.\n      summary: Update a security entry owned by the notification rule.\n      tags:\n        - NotificationRule\n  /notificationrulesubscribers:\n    get:\n      deprecated: false\n      description: This method returns a Notification Rule Subscriber based on the\n        hierarchical path associated with it, and should be used when a path has\n        been received from a separate part of the PI System for use in the PI\n        Web API. Users should primarily search with the WebID when available.\n      operationId: NotificationRuleSubscriber_GetByPath\n      parameters:\n        - description: The path to the notification rule subscriber.\n          in: query\n          name: path\n          required: true\n          schema:\n            type: string\n        - description: List of fields to be returned in the response, separated by\n            semicolons (;). If this parameter is not specified, all available\n            fields will be returned.\n          in: query\n          name: selectedFields\n          required: false\n          schema:\n            type: string\n        - description: Optional parameter. Used to specify the type of WebID. Useful for\n            URL brevity and other special cases. Default is the value of the\n            configuration item \"WebIDType\".\n          in: query\n          name: webIdType\n          required: false\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: The specified notification rule subscriber.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/NotificationRuleSubscriber\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/NotificationRuleSubscriber\"\n            text/html:\n              schema:\n                $ref: \"#/components/schemas/NotificationRuleSubscriber\"\n            application/x-ms-application:\n              schema:\n                $ref: \"#/components/schemas/NotificationRuleSubscriber\"\n      summary: Retrieve a notification rule subscriber by path.\n      tags:\n        - NotificationRuleSubscriber\n  \"/notificationrulesubscribers/{webId}\":\n    delete:\n      deprecated: false\n      operationId: NotificationRuleSubscriber_Delete\n      parameters:\n        - description: The ID of the notification rule subscriber.\n          in: path\n          name: webId\n          required: true\n          schema:\n            type: string\n      responses:\n        \"204\":\n          description: The notification rule subscriber was deleted.\n      summary: Delete a notification rule subscriber.\n      tags:\n        - NotificationRuleSubscriber\n    get:\n      deprecated: false\n      operationId: NotificationRuleSubscriber_Get\n      parameters:\n        - description: The ID of the resource to use as the root of the search.\n          in: path\n          name: webId\n          required: true\n          schema:\n            type: string\n        - description: List of fields to be returned in the response, separated by\n            semicolons (;). If this parameter is not specified, all available\n            fields will be returned.\n          in: query\n          name: selectedFields\n          required: false\n          schema:\n            type: string\n        - description: Optional parameter. Used to specify the type of WebID. Useful for\n            URL brevity and other special cases. Default is the value of the\n            configuration item \"WebIDType\".\n          in: query\n          name: webIdType\n          required: false\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: A notification rule subscriber\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/NotificationRuleSubscriber\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/NotificationRuleSubscriber\"\n            text/html:\n              schema:\n                $ref: \"#/components/schemas/NotificationRuleSubscriber\"\n            application/x-ms-application:\n              schema:\n                $ref: \"#/components/schemas/NotificationRuleSubscriber\"\n      summary: Retrieve a notification rule subscriber.\n      tags:\n        - NotificationRuleSubscriber\n    patch:\n      deprecated: false\n      operationId: NotificationRuleSubscriber_Update\n      parameters:\n        - description: The ID of the notification rule subscriber.\n          in: path\n          name: webId\n          required: true\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/NotificationRuleSubscriber\"\n          text/json:\n            schema:\n              $ref: \"#/components/schemas/NotificationRuleSubscriber\"\n        description: A partial notification rule subscriber containing the desired changes.\n        required: true\n      responses:\n        \"204\":\n          description: The notification rule subscriber was updated.\n      summary: Update a notification rule subscriber.\n      tags:\n        - NotificationRuleSubscriber\n  \"/notificationrulesubscribers/{webId}/notificationrulesubscribers\":\n    get:\n      deprecated: false\n      operationId: NotificationRuleSubscriber_GetNotificationRuleSubscribers\n      parameters:\n        - description: The ID of the resource to use as the root of the search.\n          in: path\n          name: webId\n          required: true\n          schema:\n            type: string\n        - description: List of fields to be returned in the response, separated by\n            semicolons (;). If this parameter is not specified, all available\n            fields will be returned.\n          in: query\n          name: selectedFields\n          required: false\n          schema:\n            type: string\n        - description: Optional parameter. Used to specify the type of WebID. Useful for\n            URL brevity and other special cases. Default is the value of the\n            configuration item \"WebIDType\".\n          in: query\n          name: webIdType\n          required: false\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: A list of notification rules subscribers.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Items_NotificationRuleSubscriber_\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/Items_NotificationRuleSubscriber_\"\n            text/html:\n              schema:\n                $ref: \"#/components/schemas/Items_NotificationRuleSubscriber_\"\n            application/x-ms-application:\n              schema:\n                $ref: \"#/components/schemas/Items_NotificationRuleSubscriber_\"\n      summary: Retrieve notification rule subscriber subscribers.\n      tags:\n        - NotificationRuleSubscriber\n  /notificationruletemplates:\n    get:\n      deprecated: false\n      description: This method returns a Notification Rule Template based on the\n        hierarchical path associated with it, and should be used when a path has\n        been received from a separate part of the PI System for use in the PI\n        Web API. Users should primarily search with the WebID when available.\n      operationId: NotificationRuleTemplate_GetByPath\n      parameters:\n        - description: The path to the notification rule template.\n          in: query\n          name: path\n          required: true\n          schema:\n            type: string\n        - description: List of fields to be returned in the response, separated by\n            semicolons (;). If this parameter is not specified, all available\n            fields will be returned.\n          in: query\n          name: selectedFields\n          required: false\n          schema:\n            type: string\n        - description: Optional parameter. Used to specify the type of WebID. Useful for\n            URL brevity and other special cases. Default is the value of the\n            configuration item \"WebIDType\".\n          in: query\n          name: webIdType\n          required: false\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: The specified notification rule template.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/NotificationRuleTemplate\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/NotificationRuleTemplate\"\n            text/html:\n              schema:\n                $ref: \"#/components/schemas/NotificationRuleTemplate\"\n            application/x-ms-application:\n              schema:\n                $ref: \"#/components/schemas/NotificationRuleTemplate\"\n      summary: Retrieve a notification rule template by path.\n      tags:\n        - NotificationRuleTemplate\n  /notificationruletemplates/search:\n    get:\n      deprecated: false\n      operationId: NotificationRuleTemplate_GetNotificationRuleTemplatesQuery\n      parameters:\n        - description: The ID of the asset database to use as the root of the query.\n          in: query\n          name: databaseWebId\n          required: false\n          schema:\n            type: string\n        - description: The maximum number of objects to be returned per call (page size).\n            The default is 1000.\n          in: query\n          name: maxCount\n          required: false\n          schema:\n            type: integer\n        - description: \"The query string is a list of filters used to perform an AFSearch\n            for the Notification rule templates in the asset database. An\n            example would be: \\\"query=NotificationRuleTemplate:{\n            Name:='MyNotificationRuleTemplate' } Type:=Int32\\\".\"\n          in: query\n          name: query\n          required: false\n          schema:\n            type: string\n        - description: List of fields to be returned in the response, separated by\n            semicolons (;). If this parameter is not specified, all available\n            fields will be returned.\n          in: query\n          name: selectedFields\n          required: false\n          schema:\n            type: string\n        - description: The starting index (zero based) of the items to be returned. The\n            default is 0.\n          in: query\n          name: startIndex\n          required: false\n          schema:\n            type: integer\n        - description: Optional parameter. Used to specify the type of WebID. Useful for\n            URL brevity and other special cases. Default is the value of the\n            configuration item \"WebIDType\".\n          in: query\n          name: webIdType\n          required: false\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: A list of notification rule templates matching the specified\n            conditions.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Items_NotificationRuleTemplate_\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/Items_NotificationRuleTemplate_\"\n            text/html:\n              schema:\n                $ref: \"#/components/schemas/Items_NotificationRuleTemplate_\"\n            application/x-ms-application:\n              schema:\n                $ref: \"#/components/schemas/Items_NotificationRuleTemplate_\"\n      summary: Retrieve Notification rule templates based on the specified conditions.\n        Returns Notification rule templates using the specified search query\n        string.\n      tags:\n        - NotificationRuleTemplate\n  \"/notificationruletemplates/{webId}\":\n    delete:\n      deprecated: false\n      operationId: NotificationRuleTemplate_Delete\n      parameters:\n        - description: The ID of the notification rule template.\n          in: path\n          name: webId\n          required: true\n          schema:\n            type: string\n      responses:\n        \"204\":\n          description: The notification rule template was deleted.\n      summary: Delete a notification rule template.\n      tags:\n        - NotificationRuleTemplate\n    get:\n      deprecated: false\n      operationId: NotificationRuleTemplate_Get\n      parameters:\n        - description: The ID of the notification rule template.\n          in: path\n          name: webId\n          required: true\n          schema:\n            type: string\n        - description: List of fields to be returned in the response, separated by\n            semicolons (;). If this parameter is not specified, all available\n            fields will be returned.\n          in: query\n          name: selectedFields\n          required: false\n          schema:\n            type: string\n        - description: Optional parameter. Used to specify the type of WebID. Useful for\n            URL brevity and other special cases. Default is the value of the\n            configuration item \"WebIDType\".\n          in: query\n          name: webIdType\n          required: false\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: The specified notification rule template.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/NotificationRuleTemplate\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/NotificationRuleTemplate\"\n            text/html:\n              schema:\n                $ref: \"#/components/schemas/NotificationRuleTemplate\"\n            application/x-ms-application:\n              schema:\n                $ref: \"#/components/schemas/NotificationRuleTemplate\"\n      summary: Get the specified notification rule template.\n      tags:\n        - NotificationRuleTemplate\n    patch:\n      deprecated: false\n      operationId: NotificationRuleTemplate_Update\n      parameters:\n        - description: The ID of the notification rule template to update.\n          in: path\n          name: webId\n          required: true\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/NotificationRuleTemplate\"\n          text/json:\n            schema:\n              $ref: \"#/components/schemas/NotificationRuleTemplate\"\n        description: A partial notification rule template containing the desired changes.\n        required: true\n      responses:\n        \"204\":\n          description: The notification rule template was updated.\n      summary: Update a notification rule template by replacing items in its definition.\n      tags:\n        - NotificationRuleTemplate\n  \"/notificationruletemplates/{webId}/notificationrulesubscribers\":\n    get:\n      deprecated: false\n      operationId: NotificationRuleTemplate_GetNotificationRuleTemplateSubscribers\n      parameters:\n        - description: The ID of the resource to use as the root of the search.\n          in: path\n          name: webId\n          required: true\n          schema:\n            type: string\n        - description: List of fields to be returned in the response, separated by\n            semicolons (;). If this parameter is not specified, all available\n            fields will be returned.\n          in: query\n          name: selectedFields\n          required: false\n          schema:\n            type: string\n        - description: Optional parameter. Used to specify the type of WebID. Useful for\n            URL brevity and other special cases. Default is the value of the\n            configuration item \"WebIDType\".\n          in: query\n          name: webIdType\n          required: false\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: A list of notification rule template subscribers.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Items_NotificationRuleSubscriber_\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/Items_NotificationRuleSubscriber_\"\n            text/html:\n              schema:\n                $ref: \"#/components/schemas/Items_NotificationRuleSubscriber_\"\n            application/x-ms-application:\n              schema:\n                $ref: \"#/components/schemas/Items_NotificationRuleSubscriber_\"\n      summary: Retrieve notification rule template subscribers.\n      tags:\n        - NotificationRuleTemplate\n    post:\n      deprecated: false\n      operationId: NotificationRuleTemplate_CreateNotificationRuleTemplateSubscriber\n      parameters:\n        - description: The ID of the notification rule template on which to create the\n            notification rule subscriber.\n          in: path\n          name: webId\n          required: true\n          schema:\n            type: string\n        - description: Optional parameter. Used to specify the type of WebID. Useful for\n            URL brevity and other special cases. Default is the value of the\n            configuration item \"WebIDType\".\n          in: query\n          name: webIdType\n          required: false\n          schema:\n            type: string\n      requestBody:\n        $ref: \"#/components/requestBodies/NotificationRuleSubscriber\"\n      responses:\n        \"201\":\n          description: The notification rule subscriber was created. The response's\n            Location header is a link to the notification rule subscriber.\n      summary: Create a notification rule subscriber.\n      tags:\n        - NotificationRuleTemplate\n  \"/notificationruletemplates/{webId}/security\":\n    get:\n      deprecated: false\n      operationId: NotificationRuleTemplate_GetSecurity\n      parameters:\n        - description: The ID of the notification rule template for the security to be\n            checked.\n          in: path\n          name: webId\n          required: true\n          schema:\n            type: string\n        - description: The user identity for the security information to be checked.\n            Multiple security identities may be specified with multiple\n            instances of the parameter. If the parameter is not specified, only\n            the current user's security rights will be returned.\n          in: query\n          name: userIdentity\n          required: true\n          explode: true\n          schema:\n            type: array\n            items:\n              type: string\n        - description: Indicates if the security cache should be refreshed before getting\n            security information. The default is 'false'.\n          in: query\n          name: forceRefresh\n          required: false\n          schema:\n            type: boolean\n        - description: List of fields to be returned in the response, separated by\n            semicolons (;). If this parameter is not specified, all available\n            fields will be returned.\n          in: query\n          name: selectedFields\n          required: false\n          schema:\n            type: string\n        - description: Optional parameter. Used to specify the type of WebID. Useful for\n            URL brevity and other special cases. Default is the value of the\n            configuration item \"WebIDType\".\n          in: query\n          name: webIdType\n          required: false\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: Security rights.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Items_SecurityRights_\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/Items_SecurityRights_\"\n            text/html:\n              schema:\n                $ref: \"#/components/schemas/Items_SecurityRights_\"\n            application/x-ms-application:\n              schema:\n                $ref: \"#/components/schemas/Items_SecurityRights_\"\n        \"400\":\n          description: An invalid or local account is specified as the user identity.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Errors\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/Errors\"\n            text/html:\n              schema:\n                $ref: \"#/components/schemas/Errors\"\n            application/x-ms-application:\n              schema:\n                $ref: \"#/components/schemas/Errors\"\n        \"401\":\n          description: Access denied for the specified user identity.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Errors\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/Errors\"\n            text/html:\n              schema:\n                $ref: \"#/components/schemas/Errors\"\n            application/x-ms-application:\n              schema:\n                $ref: \"#/components/schemas/Errors\"\n        \"409\":\n          description: Unsupported when using Anonymous authentication method.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Errors\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/Errors\"\n            text/html:\n              schema:\n                $ref: \"#/components/schemas/Errors\"\n            application/x-ms-application:\n              schema:\n                $ref: \"#/components/schemas/Errors\"\n        \"502\":\n          description: Failed to retrieve the specified user identity.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Errors\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/Errors\"\n            text/html:\n              schema:\n                $ref: \"#/components/schemas/Errors\"\n            application/x-ms-application:\n              schema:\n                $ref: \"#/components/schemas/Errors\"\n      summary: Get the security information of the specified security item associated\n        with the notification rule template for a specified user.\n      tags:\n        - NotificationRuleTemplate\n  \"/notificationruletemplates/{webId}/securityentries\":\n    get:\n      deprecated: false\n      operationId: NotificationRuleTemplate_GetSecurityEntries\n      parameters:\n        - description: The ID of the notification rule template.\n          in: path\n          name: webId\n          required: true\n          schema:\n            type: string\n        - description: The name query string used for filtering security entries. The\n            default is no filter.\n          in: query\n          name: nameFilter\n          required: false\n          schema:\n            type: string\n        - description: List of fields to be returned in the response, separated by\n            semicolons (;). If this parameter is not specified, all available\n            fields will be returned.\n          in: query\n          name: selectedFields\n          required: false\n          schema:\n            type: string\n        - description: Optional parameter. Used to specify the type of WebID. Useful for\n            URL brevity and other special cases. Default is the value of the\n            configuration item \"WebIDType\".\n          in: query\n          name: webIdType\n          required: false\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: A list of security entries matching the specified condition.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Items_SecurityEntry_\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/Items_SecurityEntry_\"\n            text/html:\n              schema:\n                $ref: \"#/components/schemas/Items_SecurityEntry_\"\n            application/x-ms-application:\n              schema:\n                $ref: \"#/components/schemas/Items_SecurityEntry_\"\n      summary: Retrieve the security entries associated with the notification rule\n        template based on the specified criteria. By default, all security\n        entries for this notification rule template are returned.\n      tags:\n        - NotificationRuleTemplate\n    post:\n      deprecated: false\n      operationId: NotificationRuleTemplate_CreateSecurityEntry\n      parameters:\n        - description: The ID of the notification rule template, where the security entry\n            will be created.\n          in: path\n          name: webId\n          required: true\n          schema:\n            type: string\n        - description: If false, the new access permissions are only applied to the\n            associated object. If true, the access permissions of children with\n            any parent-child reference types will change when the permissions on\n            the primary parent change.\n          in: query\n          name: applyToChildren\n          required: false\n          schema:\n            type: boolean\n        - description: Optional parameter. Used to specify the type of WebID. Useful for\n            URL brevity and other special cases. Default is the value of the\n            configuration item \"WebIDType\".\n          in: query\n          name: webIdType\n          required: false\n          schema:\n            type: string\n      requestBody:\n        $ref: \"#/components/requestBodies/SecurityEntry\"\n      responses:\n        \"201\":\n          description: The security entry was created. The response's Location header is a\n            link to the security entry.\n      summary: Create a security entry owned by the notification rule template.\n      tags:\n        - NotificationRuleTemplate\n  \"/notificationruletemplates/{webId}/securityentries/{name}\":\n    delete:\n      deprecated: false\n      operationId: NotificationRuleTemplate_DeleteSecurityEntry\n      parameters:\n        - description: The name of the security entry. For every backslash character (\\) in\n            the security entry name, replace with asterisk (*). As an example,\n            use domain*username instead of domain\\username.\n          in: path\n          name: name\n          required: true\n          schema:\n            type: string\n        - description: The ID of the notification rule template, where the security entry\n            will be deleted.\n          in: path\n          name: webId\n          required: true\n          schema:\n            type: string\n        - description: If false, the new access permissions are only applied to the\n            associated object. If true, the access permissions of children with\n            any parent-child reference types will change when the permissions on\n            the primary parent change.\n          in: query\n          name: applyToChildren\n          required: false\n          schema:\n            type: boolean\n      responses:\n        \"204\":\n          description: The security entry was deleted.\n      summary: Delete a security entry owned by the notification rule template.\n      tags:\n        - NotificationRuleTemplate\n    get:\n      deprecated: false\n      operationId: NotificationRuleTemplate_GetSecurityEntryByName\n      parameters:\n        - description: The name of the security entry. For every backslash character (\\) in\n            the security entry name, replace with asterisk (*). As an example,\n            use domain*username instead of domain\\username.\n          in: path\n          name: name\n          required: true\n          schema:\n            type: string\n        - description: The ID of the notification rule template.\n          in: path\n          name: webId\n          required: true\n          schema:\n            type: string\n        - description: List of fields to be returned in the response, separated by\n            semicolons (;). If this parameter is not specified, all available\n            fields will be returned.\n          in: query\n          name: selectedFields\n          required: false\n          schema:\n            type: string\n        - description: Optional parameter. Used to specify the type of WebID. Useful for\n            URL brevity and other special cases. Default is the value of the\n            configuration item \"WebIDType\".\n          in: query\n          name: webIdType\n          required: false\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: The security entry matching the specified condition.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/SecurityEntry\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/SecurityEntry\"\n            text/html:\n              schema:\n                $ref: \"#/components/schemas/SecurityEntry\"\n            application/x-ms-application:\n              schema:\n                $ref: \"#/components/schemas/SecurityEntry\"\n        \"404\":\n          description: The security entry with the specified name is not found.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Errors\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/Errors\"\n            text/html:\n              schema:\n                $ref: \"#/components/schemas/Errors\"\n            application/x-ms-application:\n              schema:\n                $ref: \"#/components/schemas/Errors\"\n      summary: Retrieve the security entry associated with the notification rule\n        template with the specified name.\n      tags:\n        - NotificationRuleTemplate\n    put:\n      deprecated: false\n      operationId: NotificationRuleTemplate_UpdateSecurityEntry\n      parameters:\n        - description: The name of the security entry.\n          in: path\n          name: name\n          required: true\n          schema:\n            type: string\n        - description: The ID of the notification rule template, where the security entry\n            will be updated.\n          in: path\n          name: webId\n          required: true\n          schema:\n            type: string\n        - description: If false, the new access permissions are only applied to the\n            associated object. If true, the access permissions of children with\n            any parent-child reference types will change when the permissions on\n            the primary parent change.\n          in: query\n          name: applyToChildren\n          required: false\n          schema:\n            type: boolean\n      requestBody:\n        $ref: \"#/components/requestBodies/SecurityEntry2\"\n      responses:\n        \"204\":\n          description: The security entry was updated.\n      summary: Update a security entry owned by the notification rule template.\n      tags:\n        - NotificationRuleTemplate\n  /points:\n    get:\n      deprecated: false\n      description: This method returns a PI Point based on the hierarchical path associated\n        with it, and should be used when a path has been received from a\n        separate part of the PI System for use in the PI Web API. Users should\n        primarily search with the WebID when available.\n      operationId: Point_GetByPath\n      parameters:\n        - description: The path to the point.\n          in: query\n          name: path\n          required: true\n          schema:\n            type: string\n        - description: List of fields to be returned in the response, separated by\n            semicolons (;). If this parameter is not specified, all available\n            fields will be returned.\n          in: query\n          name: selectedFields\n          required: false\n          schema:\n            type: string\n        - description: Optional parameter. Used to specify the type of WebID. Useful for\n            URL brevity and other special cases. Default is the value of the\n            configuration item \"WebIDType\".\n          in: query\n          name: webIdType\n          required: false\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: The specified point.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Point\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/Point\"\n            text/html:\n              schema:\n                $ref: \"#/components/schemas/Point\"\n            application/x-ms-application:\n              schema:\n                $ref: \"#/components/schemas/Point\"\n      summary: Get a point by path.\n      tags:\n        - Point\n  /points/multiple:\n    get:\n      deprecated: false\n      operationId: Point_GetMultiple\n      parameters:\n        - description: Specifies if the retrieval processes should be run in parallel on\n            the server. This may improve the response time for large amounts of\n            requested points. The default is 'false'.\n          in: query\n          name: asParallel\n          required: false\n          schema:\n            type: boolean\n        - description: The include mode for the return list. The default is 'All'.\n          in: query\n          name: includeMode\n          required: false\n          schema:\n            type: string\n        - description: The path of a point. Multiple points may be specified with multiple\n            instances of the parameter.\n          in: query\n          name: path\n          required: false\n          explode: true\n          schema:\n            type: array\n            items:\n              type: string\n        - description: List of fields to be returned in the response, separated by\n            semicolons (;). If this parameter is not specified, all available\n            fields will be returned.\n          in: query\n          name: selectedFields\n          required: false\n          schema:\n            type: string\n        - description: The ID of a point. Multiple points may be specified with multiple\n            instances of the parameter.\n          in: query\n          name: webId\n          required: false\n          explode: true\n          schema:\n            type: array\n            items:\n              type: string\n        - description: Optional parameter. Used to specify the type of WebID. Useful for\n            URL brevity and other special cases. Default is the value of the\n            configuration item \"WebIDType\".\n          in: query\n          name: webIdType\n          required: false\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: The requested points\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Items_Item_Point_\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/Items_Item_Point_\"\n            text/html:\n              schema:\n                $ref: \"#/components/schemas/Items_Item_Point_\"\n            application/x-ms-application:\n              schema:\n                $ref: \"#/components/schemas/Items_Item_Point_\"\n        \"207\":\n          description: Some or all items contain exceptions.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Items_Item_Point_\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/Items_Item_Point_\"\n            text/html:\n              schema:\n                $ref: \"#/components/schemas/Items_Item_Point_\"\n            application/x-ms-application:\n              schema:\n                $ref: \"#/components/schemas/Items_Item_Point_\"\n      summary: Retrieve multiple points by web id or path.\n      tags:\n        - Point\n  \"/points/{webId}\":\n    delete:\n      deprecated: false\n      operationId: Point_Delete\n      parameters:\n        - description: The ID of the point.\n          in: path\n          name: webId\n          required: true\n          schema:\n            type: string\n      responses:\n        \"204\":\n          description: The point was deleted.\n      summary: Delete a point.\n      tags:\n        - Point\n    get:\n      deprecated: false\n      operationId: Point_Get\n      parameters:\n        - description: The ID of the point.\n          in: path\n          name: webId\n          required: true\n          schema:\n            type: string\n        - description: List of fields to be returned in the response, separated by\n            semicolons (;). If this parameter is not specified, all available\n            fields will be returned.\n          in: query\n          name: selectedFields\n          required: false\n          schema:\n            type: string\n        - description: Optional parameter. Used to specify the type of WebID. Useful for\n            URL brevity and other special cases. Default is the value of the\n            configuration item \"WebIDType\".\n          in: query\n          name: webIdType\n          required: false\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: The specified point.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Point\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/Point\"\n            text/html:\n              schema:\n                $ref: \"#/components/schemas/Point\"\n            application/x-ms-application:\n              schema:\n                $ref: \"#/components/schemas/Point\"\n      summary: Get a point.\n      tags:\n        - Point\n    patch:\n      deprecated: false\n      operationId: Point_Update\n      parameters:\n        - description: The ID of the point.\n          in: path\n          name: webId\n          required: true\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/Point\"\n          text/json:\n            schema:\n              $ref: \"#/components/schemas/Point\"\n        description: A partial point containing the desired changes.\n        required: true\n      responses:\n        \"204\":\n          description: The point was updated.\n      summary: \"Update a point. The only PI Point attributes that can be updated\n        include: Name, Descriptor, EngineeringUnits, Step, and DisplayDigits.\n        Other PI Point attributes cannot be updated through PI Web API.\"\n      tags:\n        - Point\n  \"/points/{webId}/attributes\":\n    get:\n      deprecated: false\n      operationId: Point_GetAttributes\n      parameters:\n        - description: The ID of the point.\n          in: path\n          name: webId\n          required: true\n          schema:\n            type: string\n        - description: The name of a point attribute to be returned. Multiple attributes\n            may be specified with multiple instances of the parameter.\n          in: query\n          name: name\n          required: false\n          explode: true\n          schema:\n            type: array\n            items:\n              type: string\n        - description: The filter to the names of the list of point attributes to be\n            returned. The default is no filter.\n          in: query\n          name: nameFilter\n          required: false\n          schema:\n            type: string\n        - description: List of fields to be returned in the response, separated by\n            semicolons (;). If this parameter is not specified, all available\n            fields will be returned.\n          in: query\n          name: selectedFields\n          required: false\n          schema:\n            type: string\n        - description: Optional parameter. Used to specify the type of WebID. Useful for\n            URL brevity and other special cases. Default is the value of the\n            configuration item \"WebIDType\".\n          in: query\n          name: webIdType\n          required: false\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: A list of point attributes based on the specified names and name\n            filter.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Items_PointAttribute_\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/Items_PointAttribute_\"\n            text/html:\n              schema:\n                $ref: \"#/components/schemas/Items_PointAttribute_\"\n            application/x-ms-application:\n              schema:\n                $ref: \"#/components/schemas/Items_PointAttribute_\"\n        \"400\":\n          description: Some or all of the point attribute names could not be found.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Errors\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/Errors\"\n            text/html:\n              schema:\n                $ref: \"#/components/schemas/Errors\"\n            application/x-ms-application:\n              schema:\n                $ref: \"#/components/schemas/Errors\"\n      summary: Get point attributes.\n      tags:\n        - Point\n  \"/points/{webId}/attributes/{name}\":\n    get:\n      deprecated: false\n      operationId: Point_GetAttributeByName\n      parameters:\n        - description: The name of the attribute.\n          in: path\n          name: name\n          required: true\n          schema:\n            type: string\n        - description: The ID of the point.\n          in: path\n          name: webId\n          required: true\n          schema:\n            type: string\n        - description: List of fields to be returned in the response, separated by\n            semicolons (;). If this parameter is not specified, all available\n            fields will be returned.\n          in: query\n          name: selectedFields\n          required: false\n          schema:\n            type: string\n        - description: Optional parameter. Used to specify the type of WebID. Useful for\n            URL brevity and other special cases. Default is the value of the\n            configuration item \"WebIDType\".\n          in: query\n          name: webIdType\n          required: false\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: A point attribute specified by its name.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/PointAttribute\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/PointAttribute\"\n            text/html:\n              schema:\n                $ref: \"#/components/schemas/PointAttribute\"\n            application/x-ms-application:\n              schema:\n                $ref: \"#/components/schemas/PointAttribute\"\n      summary: Get a point attribute by name.\n      tags:\n        - Point\n  /securityidentities:\n    get:\n      deprecated: false\n      description: This method returns a security identity based on the path associated\n        with it, and should be used when a path has been received from a\n        separate part of the PI System for use in the PI Web API. Users should\n        primarily search with the WebID when available.\n      operationId: SecurityIdentity_GetByPath\n      parameters:\n        - description: The path to the security identity.\n          in: query\n          name: path\n          required: true\n          schema:\n            type: string\n        - description: List of fields to be returned in the response, separated by\n            semicolons (;). If this parameter is not specified, all available\n            fields will be returned.\n          in: query\n          name: selectedFields\n          required: false\n          schema:\n            type: string\n        - description: Optional parameter. Used to specify the type of WebID. Useful for\n            URL brevity and other special cases. Default is the value of the\n            configuration item \"WebIDType\".\n          in: query\n          name: webIdType\n          required: false\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: The specified security identity.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/SecurityIdentity\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/SecurityIdentity\"\n            text/html:\n              schema:\n                $ref: \"#/components/schemas/SecurityIdentity\"\n            application/x-ms-application:\n              schema:\n                $ref: \"#/components/schemas/SecurityIdentity\"\n      summary: Retrieve a security identity by path.\n      tags:\n        - SecurityIdentity\n  \"/securityidentities/{webId}\":\n    delete:\n      deprecated: false\n      operationId: SecurityIdentity_Delete\n      parameters:\n        - description: The ID of the security identity.\n          in: path\n          name: webId\n          required: true\n          schema:\n            type: string\n      responses:\n        \"204\":\n          description: The security identity was deleted.\n      summary: Delete a security identity.\n      tags:\n        - SecurityIdentity\n    get:\n      deprecated: false\n      operationId: SecurityIdentity_Get\n      parameters:\n        - description: The ID of the security identity.\n          in: path\n          name: webId\n          required: true\n          schema:\n            type: string\n        - description: List of fields to be returned in the response, separated by\n            semicolons (;). If this parameter is not specified, all available\n            fields will be returned.\n          in: query\n          name: selectedFields\n          required: false\n          schema:\n            type: string\n        - description: Optional parameter. Used to specify the type of WebID. Useful for\n            URL brevity and other special cases. Default is the value of the\n            configuration item \"WebIDType\".\n          in: query\n          name: webIdType\n          required: false\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: The specified security identity.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/SecurityIdentity\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/SecurityIdentity\"\n            text/html:\n              schema:\n                $ref: \"#/components/schemas/SecurityIdentity\"\n            application/x-ms-application:\n              schema:\n                $ref: \"#/components/schemas/SecurityIdentity\"\n      summary: Retrieve a security identity.\n      tags:\n        - SecurityIdentity\n    patch:\n      deprecated: false\n      operationId: SecurityIdentity_Update\n      parameters:\n        - description: The ID of the security identity.\n          in: path\n          name: webId\n          required: true\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/SecurityIdentity\"\n          text/json:\n            schema:\n              $ref: \"#/components/schemas/SecurityIdentity\"\n        description: A partial security identity containing the desired changes.\n        required: true\n      responses:\n        \"204\":\n          description: The security identity was updated.\n      summary: Update a security identity by replacing items in its definition.\n      tags:\n        - SecurityIdentity\n  \"/securityidentities/{webId}/security\":\n    get:\n      deprecated: false\n      operationId: SecurityIdentity_GetSecurity\n      parameters:\n        - description: The ID of the security identity for the security to be checked.\n          in: path\n          name: webId\n          required: true\n          schema:\n            type: string\n        - description: The user identity for the security information to be checked.\n            Multiple security identities may be specified with multiple\n            instances of the parameter. If the parameter is not specified, only\n            the current user's security rights will be returned.\n          in: query\n          name: userIdentity\n          required: true\n          explode: true\n          schema:\n            type: array\n            items:\n              type: string\n        - description: Indicates if the security cache should be refreshed before getting\n            security information. The default is 'false'.\n          in: query\n          name: forceRefresh\n          required: false\n          schema:\n            type: boolean\n        - description: List of fields to be returned in the response, separated by\n            semicolons (;). If this parameter is not specified, all available\n            fields will be returned.\n          in: query\n          name: selectedFields\n          required: false\n          schema:\n            type: string\n        - description: Optional parameter. Used to specify the type of WebID. Useful for\n            URL brevity and other special cases. Default is the value of the\n            configuration item \"WebIDType\".\n          in: query\n          name: webIdType\n          required: false\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: Security rights.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Items_SecurityRights_\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/Items_SecurityRights_\"\n            text/html:\n              schema:\n                $ref: \"#/components/schemas/Items_SecurityRights_\"\n            application/x-ms-application:\n              schema:\n                $ref: \"#/components/schemas/Items_SecurityRights_\"\n        \"400\":\n          description: An invalid or local account is specified as the user identity.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Errors\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/Errors\"\n            text/html:\n              schema:\n                $ref: \"#/components/schemas/Errors\"\n            application/x-ms-application:\n              schema:\n                $ref: \"#/components/schemas/Errors\"\n        \"401\":\n          description: Access denied for the specified user identity.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Errors\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/Errors\"\n            text/html:\n              schema:\n                $ref: \"#/components/schemas/Errors\"\n            application/x-ms-application:\n              schema:\n                $ref: \"#/components/schemas/Errors\"\n        \"409\":\n          description: Unsupported when using Anonymous authentication method.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Errors\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/Errors\"\n            text/html:\n              schema:\n                $ref: \"#/components/schemas/Errors\"\n            application/x-ms-application:\n              schema:\n                $ref: \"#/components/schemas/Errors\"\n        \"502\":\n          description: Failed to retrieve the specified user identity.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Errors\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/Errors\"\n            text/html:\n              schema:\n                $ref: \"#/components/schemas/Errors\"\n            application/x-ms-application:\n              schema:\n                $ref: \"#/components/schemas/Errors\"\n      summary: Get the security information of the specified security item associated\n        with the security identity for a specified user.\n      tags:\n        - SecurityIdentity\n  \"/securityidentities/{webId}/securityentries\":\n    get:\n      deprecated: false\n      operationId: SecurityIdentity_GetSecurityEntries\n      parameters:\n        - description: The ID of the security identity.\n          in: path\n          name: webId\n          required: true\n          schema:\n            type: string\n        - description: The name query string used for filtering security entries. The\n            default is no filter.\n          in: query\n          name: nameFilter\n          required: false\n          schema:\n            type: string\n        - description: List of fields to be returned in the response, separated by\n            semicolons (;). If this parameter is not specified, all available\n            fields will be returned.\n          in: query\n          name: selectedFields\n          required: false\n          schema:\n            type: string\n        - description: Optional parameter. Used to specify the type of WebID. Useful for\n            URL brevity and other special cases. Default is the value of the\n            configuration item \"WebIDType\".\n          in: query\n          name: webIdType\n          required: false\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: A list of security entries matching the specified condition.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Items_SecurityEntry_\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/Items_SecurityEntry_\"\n            text/html:\n              schema:\n                $ref: \"#/components/schemas/Items_SecurityEntry_\"\n            application/x-ms-application:\n              schema:\n                $ref: \"#/components/schemas/Items_SecurityEntry_\"\n      summary: Retrieve the security entries associated with the security identity\n        based on the specified criteria. By default, all security entries for\n        this security identity are returned.\n      tags:\n        - SecurityIdentity\n  \"/securityidentities/{webId}/securityentries/{name}\":\n    get:\n      deprecated: false\n      operationId: SecurityIdentity_GetSecurityEntryByName\n      parameters:\n        - description: The name of the security entry. For every backslash character (\\) in\n            the security entry name, replace with asterisk (*). As an example,\n            use domain*username instead of domain\\username.\n          in: path\n          name: name\n          required: true\n          schema:\n            type: string\n        - description: The ID of the security identity.\n          in: path\n          name: webId\n          required: true\n          schema:\n            type: string\n        - description: List of fields to be returned in the response, separated by\n            semicolons (;). If this parameter is not specified, all available\n            fields will be returned.\n          in: query\n          name: selectedFields\n          required: false\n          schema:\n            type: string\n        - description: Optional parameter. Used to specify the type of WebID. Useful for\n            URL brevity and other special cases. Default is the value of the\n            configuration item \"WebIDType\".\n          in: query\n          name: webIdType\n          required: false\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: The security entry matching the specified condition.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/SecurityEntry\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/SecurityEntry\"\n            text/html:\n              schema:\n                $ref: \"#/components/schemas/SecurityEntry\"\n            application/x-ms-application:\n              schema:\n                $ref: \"#/components/schemas/SecurityEntry\"\n        \"404\":\n          description: The security entry with the specified name is not found.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Errors\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/Errors\"\n            text/html:\n              schema:\n                $ref: \"#/components/schemas/Errors\"\n            application/x-ms-application:\n              schema:\n                $ref: \"#/components/schemas/Errors\"\n      summary: Retrieve the security entry associated with the security identity with\n        the specified name.\n      tags:\n        - SecurityIdentity\n  \"/securityidentities/{webId}/securitymappings\":\n    get:\n      deprecated: false\n      operationId: SecurityIdentity_GetSecurityMappings\n      parameters:\n        - description: The ID of the security identity.\n          in: path\n          name: webId\n          required: true\n          schema:\n            type: string\n        - description: List of fields to be returned in the response, separated by\n            semicolons (;). If this parameter is not specified, all available\n            fields will be returned.\n          in: query\n          name: selectedFields\n          required: false\n          schema:\n            type: string\n        - description: Optional parameter. Used to specify the type of WebID. Useful for\n            URL brevity and other special cases. Default is the value of the\n            configuration item \"WebIDType\".\n          in: query\n          name: webIdType\n          required: false\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: A list of security mappings for the specified security identity.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Items_SecurityMapping_\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/Items_SecurityMapping_\"\n            text/html:\n              schema:\n                $ref: \"#/components/schemas/Items_SecurityMapping_\"\n            application/x-ms-application:\n              schema:\n                $ref: \"#/components/schemas/Items_SecurityMapping_\"\n      summary: Get security mappings for the specified security identity.\n      tags:\n        - SecurityIdentity\n  /securitymappings:\n    get:\n      deprecated: false\n      description: This method returns a security mapping based on the path associated with\n        it, and should be used when a path has been received from a separate\n        part of the PI System for use in the PI Web API. Users should primarily\n        search with the WebID when available.\n      operationId: SecurityMapping_GetByPath\n      parameters:\n        - description: The path to the security mapping.\n          in: query\n          name: path\n          required: true\n          schema:\n            type: string\n        - description: List of fields to be returned in the response, separated by\n            semicolons (;). If this parameter is not specified, all available\n            fields will be returned.\n          in: query\n          name: selectedFields\n          required: false\n          schema:\n            type: string\n        - description: Optional parameter. Used to specify the type of WebID. Useful for\n            URL brevity and other special cases. Default is the value of the\n            configuration item \"WebIDType\".\n          in: query\n          name: webIdType\n          required: false\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: The specified security mapping.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/SecurityMapping\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/SecurityMapping\"\n            text/html:\n              schema:\n                $ref: \"#/components/schemas/SecurityMapping\"\n            application/x-ms-application:\n              schema:\n                $ref: \"#/components/schemas/SecurityMapping\"\n      summary: Retrieve a security mapping by path.\n      tags:\n        - SecurityMapping\n  \"/securitymappings/{webId}\":\n    delete:\n      deprecated: false\n      operationId: SecurityMapping_Delete\n      parameters:\n        - description: The ID of the security mapping.\n          in: path\n          name: webId\n          required: true\n          schema:\n            type: string\n      responses:\n        \"204\":\n          description: The security mapping was deleted.\n      summary: Delete a security mapping.\n      tags:\n        - SecurityMapping\n    get:\n      deprecated: false\n      operationId: SecurityMapping_Get\n      parameters:\n        - description: The ID of the security mapping.\n          in: path\n          name: webId\n          required: true\n          schema:\n            type: string\n        - description: List of fields to be returned in the response, separated by\n            semicolons (;). If this parameter is not specified, all available\n            fields will be returned.\n          in: query\n          name: selectedFields\n          required: false\n          schema:\n            type: string\n        - description: Optional parameter. Used to specify the type of WebID. Useful for\n            URL brevity and other special cases. Default is the value of the\n            configuration item \"WebIDType\".\n          in: query\n          name: webIdType\n          required: false\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: The specified security mapping.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/SecurityMapping\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/SecurityMapping\"\n            text/html:\n              schema:\n                $ref: \"#/components/schemas/SecurityMapping\"\n            application/x-ms-application:\n              schema:\n                $ref: \"#/components/schemas/SecurityMapping\"\n      summary: Retrieve a security mapping.\n      tags:\n        - SecurityMapping\n    patch:\n      deprecated: false\n      operationId: SecurityMapping_Update\n      parameters:\n        - description: The ID of the security mapping.\n          in: path\n          name: webId\n          required: true\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/SecurityMapping\"\n          text/json:\n            schema:\n              $ref: \"#/components/schemas/SecurityMapping\"\n        description: A partial security mapping containing the desired changes.\n        required: true\n      responses:\n        \"204\":\n          description: The security mapping was updated.\n      summary: Update a security mapping by replacing items in its definition.\n      tags:\n        - SecurityMapping\n  \"/securitymappings/{webId}/security\":\n    get:\n      deprecated: false\n      operationId: SecurityMapping_GetSecurity\n      parameters:\n        - description: The ID of the security mapping for the security to be checked.\n          in: path\n          name: webId\n          required: true\n          schema:\n            type: string\n        - description: The user identity for the security information to be checked.\n            Multiple security identities may be specified with multiple\n            instances of the parameter. If the parameter is not specified, only\n            the current user's security rights will be returned.\n          in: query\n          name: userIdentity\n          required: true\n          explode: true\n          schema:\n            type: array\n            items:\n              type: string\n        - description: Indicates if the security cache should be refreshed before getting\n            security information. The default is 'false'.\n          in: query\n          name: forceRefresh\n          required: false\n          schema:\n            type: boolean\n        - description: List of fields to be returned in the response, separated by\n            semicolons (;). If this parameter is not specified, all available\n            fields will be returned.\n          in: query\n          name: selectedFields\n          required: false\n          schema:\n            type: string\n        - description: Optional parameter. Used to specify the type of WebID. Useful for\n            URL brevity and other special cases. Default is the value of the\n            configuration item \"WebIDType\".\n          in: query\n          name: webIdType\n          required: false\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: Security rights.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Items_SecurityRights_\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/Items_SecurityRights_\"\n            text/html:\n              schema:\n                $ref: \"#/components/schemas/Items_SecurityRights_\"\n            application/x-ms-application:\n              schema:\n                $ref: \"#/components/schemas/Items_SecurityRights_\"\n        \"400\":\n          description: An invalid or local account is specified as the user mapping.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Errors\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/Errors\"\n            text/html:\n              schema:\n                $ref: \"#/components/schemas/Errors\"\n            application/x-ms-application:\n              schema:\n                $ref: \"#/components/schemas/Errors\"\n        \"401\":\n          description: Access denied for the specified user mapping.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Errors\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/Errors\"\n            text/html:\n              schema:\n                $ref: \"#/components/schemas/Errors\"\n            application/x-ms-application:\n              schema:\n                $ref: \"#/components/schemas/Errors\"\n        \"409\":\n          description: Unsupported when using Anonymous authentication method.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Errors\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/Errors\"\n            text/html:\n              schema:\n                $ref: \"#/components/schemas/Errors\"\n            application/x-ms-application:\n              schema:\n                $ref: \"#/components/schemas/Errors\"\n        \"502\":\n          description: Failed to retrieve the specified user mapping.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Errors\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/Errors\"\n            text/html:\n              schema:\n                $ref: \"#/components/schemas/Errors\"\n            application/x-ms-application:\n              schema:\n                $ref: \"#/components/schemas/Errors\"\n      summary: Get the security information of the specified security item associated\n        with the security mapping for a specified user.\n      tags:\n        - SecurityMapping\n  \"/securitymappings/{webId}/securityentries\":\n    get:\n      deprecated: false\n      operationId: SecurityMapping_GetSecurityEntries\n      parameters:\n        - description: The ID of the security mapping.\n          in: path\n          name: webId\n          required: true\n          schema:\n            type: string\n        - description: The name query string used for filtering security entries. The\n            default is no filter.\n          in: query\n          name: nameFilter\n          required: false\n          schema:\n            type: string\n        - description: List of fields to be returned in the response, separated by\n            semicolons (;). If this parameter is not specified, all available\n            fields will be returned.\n          in: query\n          name: selectedFields\n          required: false\n          schema:\n            type: string\n        - description: Optional parameter. Used to specify the type of WebID. Useful for\n            URL brevity and other special cases. Default is the value of the\n            configuration item \"WebIDType\".\n          in: query\n          name: webIdType\n          required: false\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: A list of security entries matching the specified condition.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Items_SecurityEntry_\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/Items_SecurityEntry_\"\n            text/html:\n              schema:\n                $ref: \"#/components/schemas/Items_SecurityEntry_\"\n            application/x-ms-application:\n              schema:\n                $ref: \"#/components/schemas/Items_SecurityEntry_\"\n      summary: Retrieve the security entries associated with the security mapping based\n        on the specified criteria. By default, all security entries for this\n        security mapping are returned.\n      tags:\n        - SecurityMapping\n  \"/securitymappings/{webId}/securityentries/{name}\":\n    get:\n      deprecated: false\n      operationId: SecurityMapping_GetSecurityEntryByName\n      parameters:\n        - description: The name of the security entry. For every backslash character (\\) in\n            the security entry name, replace with asterisk (*). As an example,\n            use domain*username instead of domain\\username.\n          in: path\n          name: name\n          required: true\n          schema:\n            type: string\n        - description: The ID of the security mapping.\n          in: path\n          name: webId\n          required: true\n          schema:\n            type: string\n        - description: List of fields to be returned in the response, separated by\n            semicolons (;). If this parameter is not specified, all available\n            fields will be returned.\n          in: query\n          name: selectedFields\n          required: false\n          schema:\n            type: string\n        - description: Optional parameter. Used to specify the type of WebID. Useful for\n            URL brevity and other special cases. Default is the value of the\n            configuration item \"WebIDType\".\n          in: query\n          name: webIdType\n          required: false\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: The security entry matching the specified condition.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/SecurityEntry\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/SecurityEntry\"\n            text/html:\n              schema:\n                $ref: \"#/components/schemas/SecurityEntry\"\n            application/x-ms-application:\n              schema:\n                $ref: \"#/components/schemas/SecurityEntry\"\n        \"404\":\n          description: The security entry with the specified name is not found.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Errors\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/Errors\"\n            text/html:\n              schema:\n                $ref: \"#/components/schemas/Errors\"\n            application/x-ms-application:\n              schema:\n                $ref: \"#/components/schemas/Errors\"\n      summary: Retrieve the security entry associated with the security mapping with\n        the specified name.\n      tags:\n        - SecurityMapping\n  \"/streams/updates/{marker}\":\n    get:\n      deprecated: false\n      description: The supplied marker will identify the set of stream updates to retrieve.\n        For a 200 response, the returned location header will contain the url\n        for retrieving the stream updates.\n      operationId: Stream_RetrieveStreamUpdate\n      parameters:\n        - description: Identifier of stream source and current position\n          in: path\n          name: marker\n          required: true\n          schema:\n            type: string\n        - description: The name or abbreviation of the desired units of measure for the\n            returned value, as found in the UOM database associated with the\n            attribute. If not specified for an attribute, the attribute's\n            default unit of measure is used. If the underlying stream is a\n            point, this value may not be specified, as points are not associated\n            with a unit of measure.\n          in: query\n          name: desiredUnits\n          required: false\n          schema:\n            type: string\n        - description: List of fields to be returned in the response, separated by\n            semicolons (;). If this parameter is not specified, all available\n            fields will be returned.\n          in: query\n          name: selectedFields\n          required: false\n          schema:\n            type: string\n        - description: Optional parameter. Used to specify the type of WebID. Useful for\n            URL brevity and other special cases. Default is the value of the\n            configuration item \"WebIDType\".\n          in: query\n          name: webIdType\n          required: false\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: The stream updates have been successfully retrieved\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/StreamUpdatesRetrieve\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/StreamUpdatesRetrieve\"\n            text/html:\n              schema:\n                $ref: \"#/components/schemas/StreamUpdatesRetrieve\"\n            application/x-ms-application:\n              schema:\n                $ref: \"#/components/schemas/StreamUpdatesRetrieve\"\n        \"404\":\n          description: Cache not found\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Errors\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/Errors\"\n            text/html:\n              schema:\n                $ref: \"#/components/schemas/Errors\"\n            application/x-ms-application:\n              schema:\n                $ref: \"#/components/schemas/Errors\"\n        \"409\":\n          description: Invalid marker supplied\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Errors\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/Errors\"\n            text/html:\n              schema:\n                $ref: \"#/components/schemas/Errors\"\n            application/x-ms-application:\n              schema:\n                $ref: \"#/components/schemas/Errors\"\n      summary: Receive stream updates\n      tags:\n        - Stream\n  \"/streams/{webId}/channel\":\n    get:\n      deprecated: false\n      operationId: Stream_GetChannel\n      parameters:\n        - description: The ID of the stream.\n          in: path\n          name: webId\n          required: true\n          schema:\n            type: string\n        - description: HeartbeatRate is an integer multiple of the Polling Interval. It\n            specifies the rate at which a client will receive an empty message\n            if there are no data updates. It can be used to check that the\n            connection is still alive. Zero/negative values correspond to no\n            heartbeat. By default, no empty messages will be sent to the user.\n          in: query\n          name: heartbeatRate\n          required: false\n          schema:\n            type: integer\n        - description: Specified if the channel should send a message with the current\n            value of the stream after the connection is opened. The default is\n            'false'.\n          in: query\n          name: includeInitialValues\n          required: false\n          schema:\n            type: boolean\n        - description: Optional parameter. Used to specify the type of WebID. Useful for\n            URL brevity and other special cases. Default is the value of the\n            configuration item \"WebIDType\".\n          in: query\n          name: webIdType\n          required: false\n          schema:\n            type: string\n      responses:\n        \"101\":\n          description: Switches to the Web Socket protocol.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Items_StreamValues_\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/Items_StreamValues_\"\n            text/html:\n              schema:\n                $ref: \"#/components/schemas/Items_StreamValues_\"\n            application/x-ms-application:\n              schema:\n                $ref: \"#/components/schemas/Items_StreamValues_\"\n      summary: Opens a channel that will send messages about any value changes for the\n        specified stream.\n      tags:\n        - Stream\n  \"/streams/{webId}/end\":\n    get:\n      deprecated: false\n      operationId: Stream_GetEnd\n      parameters:\n        - description: The ID of the stream.\n          in: path\n          name: webId\n          required: true\n          schema:\n            type: string\n        - description: The name or abbreviation of the desired units of measure for the\n            returned value, as found in the UOM database associated with the\n            attribute. If not specified for an attribute, the attribute's\n            default unit of measure is used. If the underlying stream is a\n            point, this value may not be specified, as points are not associated\n            with a unit of measure.\n          in: query\n          name: desiredUnits\n          required: false\n          schema:\n            type: string\n        - description: List of fields to be returned in the response, separated by\n            semicolons (;). If this parameter is not specified, all available\n            fields will be returned.\n          in: query\n          name: selectedFields\n          required: false\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: The value at the specified time value.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/TimedValue\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/TimedValue\"\n            text/html:\n              schema:\n                $ref: \"#/components/schemas/TimedValue\"\n            application/x-ms-application:\n              schema:\n                $ref: \"#/components/schemas/TimedValue\"\n      summary: Returns the end-of-stream value of the stream.\n      tags:\n        - Stream\n  \"/streams/{webId}/interpolated\":\n    get:\n      deprecated: false\n      description: Any time series value in the response that contains an 'Errors' property\n        indicates PI Web API encountered a handled error during the transfer of\n        the response stream.\n      operationId: Stream_GetInterpolated\n      parameters:\n        - description: The ID of the stream.\n          in: path\n          name: webId\n          required: true\n          schema:\n            type: string\n        - description: The name or abbreviation of the desired units of measure for the\n            returned value, as found in the UOM database associated with the\n            attribute. If not specified for an attribute, the attribute's\n            default unit of measure is used. If the underlying stream is a\n            point, this value may not be specified, as points are not associated\n            with a unit of measure.\n          in: query\n          name: desiredUnits\n          required: false\n          schema:\n            type: string\n        - description: An optional end time. The default is '*' for element attributes and\n            points. For event frame attributes, the default is the event frame's\n            end time, or '*' if that is not set. Note that if endTime is earlier\n            than startTime, the resulting values will be in time-descending\n            order.\n          in: query\n          name: endTime\n          required: false\n          schema:\n            type: string\n        - description: An optional string containing a filter expression. Expression\n            variables are relative to the data point. Use '.' to reference the\n            containing attribute. If the attribute does not support filtering,\n            the filter will be ignored. The default is no filtering.\n          in: query\n          name: filterExpression\n          required: false\n          schema:\n            type: string\n        - description: Specify 'true' to indicate that values which fail the filter\n            criteria are present in the returned data at the times where they\n            occurred with a value set to a 'Filtered' enumeration value with bad\n            status. Repeated consecutive failures are omitted.\n          in: query\n          name: includeFilteredValues\n          required: false\n          schema:\n            type: boolean\n        - description: The sampling interval, in AFTimeSpan format.\n          in: query\n          name: interval\n          required: false\n          schema:\n            type: string\n        - description: List of fields to be returned in the response, separated by\n            semicolons (;). If this parameter is not specified, all available\n            fields will be returned.\n          in: query\n          name: selectedFields\n          required: false\n          schema:\n            type: string\n        - description: An optional start time. The default is '*-1d' for element attributes\n            and points. For event frame attributes, the default is the event\n            frame's start time, or '*-1d' if that is not set.\n          in: query\n          name: startTime\n          required: false\n          schema:\n            type: string\n        - description: An optional start time anchor, in AFTime format. When specified,\n            interpolated data retrieval will use the sync time as the origin for\n            calculating the interval times.\n          in: query\n          name: syncTime\n          required: false\n          schema:\n            type: string\n        - description: An optional string specifying the boundary type to use when applying\n            a syncTime. The allowed values are 'Inside' and 'Outside'. The\n            default is 'Inside'.\n          in: query\n          name: syncTimeBoundaryType\n          required: false\n          schema:\n            type: string\n        - description: The time zone in which the time string will be interpreted. This\n            parameter will be ignored if a time zone is specified in the time\n            string. If no time zone is specified in either places, the PI Web\n            API server time zone will be used.\n          in: query\n          name: timeZone\n          required: false\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: The values that meet the specified conditions.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/TimedValues\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/TimedValues\"\n            text/html:\n              schema:\n                $ref: \"#/components/schemas/TimedValues\"\n            application/x-ms-application:\n              schema:\n                $ref: \"#/components/schemas/TimedValues\"\n        \"400\":\n          description: The request was malformed.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Errors\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/Errors\"\n            text/html:\n              schema:\n                $ref: \"#/components/schemas/Errors\"\n            application/x-ms-application:\n              schema:\n                $ref: \"#/components/schemas/Errors\"\n        \"409\":\n          description: The data reference does not support this method, or the supplied\n            filter expression is unsupported, or the desired units of measure\n            are incompatible.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Errors\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/Errors\"\n            text/html:\n              schema:\n                $ref: \"#/components/schemas/Errors\"\n            application/x-ms-application:\n              schema:\n                $ref: \"#/components/schemas/Errors\"\n      summary: Retrieves interpolated values over the specified time range at the\n        specified sampling interval.\n      tags:\n        - Stream\n  \"/streams/{webId}/interpolatedattimes\":\n    get:\n      deprecated: false\n      description: Any time series value in the response that contains an 'Errors' property\n        indicates PI Web API encountered a handled error during the transfer of\n        the response stream.\n      operationId: Stream_GetInterpolatedAtTimes\n      parameters:\n        - description: The ID of the stream.\n          in: path\n          name: webId\n          required: true\n          schema:\n            type: string\n        - description: The timestamp at which to retrieve an interpolated value. Multiple\n            timestamps may be specified with multiple instances of the\n            parameter.\n          in: query\n          name: time\n          required: true\n          explode: true\n          schema:\n            type: array\n            items:\n              type: string\n        - description: The name or abbreviation of the desired units of measure for the\n            returned value, as found in the UOM database associated with the\n            attribute. If not specified for an attribute, the attribute's\n            default unit of measure is used. If the underlying stream is a\n            point, this value may not be specified, as points are not associated\n            with a unit of measure.\n          in: query\n          name: desiredUnits\n          required: false\n          schema:\n            type: string\n        - description: An optional string containing a filter expression. Expression\n            variables are relative to the data point. Use '.' to reference the\n            containing attribute. If the attribute does not support filtering,\n            the filter will be ignored. The default is no filtering.\n          in: query\n          name: filterExpression\n          required: false\n          schema:\n            type: string\n        - description: Specify 'true' to indicate that values which fail the filter\n            criteria are present in the returned data at the times where they\n            occurred with a value set to a 'Filtered' enumeration value with bad\n            status. Repeated consecutive failures are omitted.\n          in: query\n          name: includeFilteredValues\n          required: false\n          schema:\n            type: boolean\n        - description: List of fields to be returned in the response, separated by\n            semicolons (;). If this parameter is not specified, all available\n            fields will be returned.\n          in: query\n          name: selectedFields\n          required: false\n          schema:\n            type: string\n        - description: The order that the returned collection is sorted. The default is\n            'Ascending'.\n          in: query\n          name: sortOrder\n          required: false\n          schema:\n            type: string\n        - description: The time zone in which the time string will be interpreted. This\n            parameter will be ignored if a time zone is specified in the time\n            string. If no time zone is specified in either places, the PI Web\n            API server time zone will be used.\n          in: query\n          name: timeZone\n          required: false\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: The values that meet the specified conditions.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/TimedValues\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/TimedValues\"\n            text/html:\n              schema:\n                $ref: \"#/components/schemas/TimedValues\"\n            application/x-ms-application:\n              schema:\n                $ref: \"#/components/schemas/TimedValues\"\n        \"400\":\n          description: The request was malformed.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Errors\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/Errors\"\n            text/html:\n              schema:\n                $ref: \"#/components/schemas/Errors\"\n            application/x-ms-application:\n              schema:\n                $ref: \"#/components/schemas/Errors\"\n        \"409\":\n          description: The data reference does not support this method, or the supplied\n            filter expression is unsupported, or the desired units of measure\n            are incompatible.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Errors\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/Errors\"\n            text/html:\n              schema:\n                $ref: \"#/components/schemas/Errors\"\n            application/x-ms-application:\n              schema:\n                $ref: \"#/components/schemas/Errors\"\n      summary: Retrieves interpolated values over the specified time range at the\n        specified sampling interval.\n      tags:\n        - Stream\n  \"/streams/{webId}/plot\":\n    get:\n      deprecated: false\n      description: For each interval, the data available is examined and significant values\n        are returned. Each interval can produce up to 5 values if they are\n        unique, the first value in the interval, the last value, the highest\n        value, the lowest value and at most one exceptional point (bad status or\n        digital state). Any time series value in the response that contains an\n        'Errors' property indicates PI Web API encountered a handled error\n        during the transfer of the response stream.\n      operationId: Stream_GetPlot\n      parameters:\n        - description: The ID of the stream.\n          in: path\n          name: webId\n          required: true\n          schema:\n            type: string\n        - description: The name or abbreviation of the desired units of measure for the\n            returned value, as found in the UOM database associated with the\n            attribute. If not specified for an attribute, the attribute's\n            default unit of measure is used. If the underlying stream is a\n            point, this value may not be specified, as points are not associated\n            with a unit of measure.\n          in: query\n          name: desiredUnits\n          required: false\n          schema:\n            type: string\n        - description: An optional end time. The default is '*' for element attributes and\n            points. For event frame attributes, the default is the event frame's\n            end time, or '*' if that is not set. Note that if endTime is earlier\n            than startTime, the resulting values will be in time-descending\n            order.\n          in: query\n          name: endTime\n          required: false\n          schema:\n            type: string\n        - description: The number of intervals to plot over. Typically, this would be the\n            number of horizontal pixels in the trend. The default is '24'. For\n            each interval, the data available is examined and significant values\n            are returned. Each interval can produce up to 5 values if they are\n            unique, the first value in the interval, the last value, the highest\n            value, the lowest value and at most one exceptional point (bad\n            status or digital state).\n          in: query\n          name: intervals\n          required: false\n          schema:\n            type: integer\n        - description: List of fields to be returned in the response, separated by\n            semicolons (;). If this parameter is not specified, all available\n            fields will be returned.\n          in: query\n          name: selectedFields\n          required: false\n          schema:\n            type: string\n        - description: An optional start time. The default is '*-1d' for element attributes\n            and points. For event frame attributes, the default is the event\n            frame's start time, or '*-1d' if that is not set.\n          in: query\n          name: startTime\n          required: false\n          schema:\n            type: string\n        - description: The time zone in which the time string will be interpreted. This\n            parameter will be ignored if a time zone is specified in the time\n            string. If no time zone is specified in either places, the PI Web\n            API server time zone will be used.\n          in: query\n          name: timeZone\n          required: false\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: The values that meet the specified conditions\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/TimedValues\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/TimedValues\"\n            text/html:\n              schema:\n                $ref: \"#/components/schemas/TimedValues\"\n            application/x-ms-application:\n              schema:\n                $ref: \"#/components/schemas/TimedValues\"\n        \"400\":\n          description: The request was malformed.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Errors\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/Errors\"\n            text/html:\n              schema:\n                $ref: \"#/components/schemas/Errors\"\n            application/x-ms-application:\n              schema:\n                $ref: \"#/components/schemas/Errors\"\n        \"409\":\n          description: The data reference does not support this method, or the desired\n            units of measure are incompatible.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Errors\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/Errors\"\n            text/html:\n              schema:\n                $ref: \"#/components/schemas/Errors\"\n            application/x-ms-application:\n              schema:\n                $ref: \"#/components/schemas/Errors\"\n      summary: Retrieves values over the specified time range suitable for plotting\n        over the number of intervals (typically represents pixels).\n      tags:\n        - Stream\n  \"/streams/{webId}/recorded\":\n    get:\n      deprecated: false\n      description: Returned times are affected by the specified boundary type. If no values\n        are found for the time range and conditions specified then the HTTP\n        response will be success, with a body containing an empty array of\n        Items. When specifying true for the includeFilteredValues parameter,\n        consecutive filtered events are not returned. The first value that would\n        be filtered out is returned with its time and the enumeration value\n        \"Filtered\". The next value in the collection will be the next compressed\n        value in the specified direction that passes the filter criteria - if\n        any. When both boundaryType and a filterExpression are specified, the\n        events returned for the boundary condition specified are passed through\n        the filter. If the includeFilteredValues parameter is true, the boundary\n        values will be reported at the proper timestamps with the enumeration\n        value \"Filtered\" when the filter conditions are not met at the boundary\n        time. If the includeFilteredValues parameter is false for this case, no\n        event is returned for the boundary time. Any time series value in the\n        response that contains an 'Errors' property indicates PI Web API\n        encountered a handled error during the transfer of the response\n        stream.   If only recorded values with annotations are desired, the\n        filterExpression parameter should include the filter IsSet('.', \"a\").\n      operationId: Stream_GetRecorded\n      parameters:\n        - description: The ID of the stream.\n          in: path\n          name: webId\n          required: true\n          schema:\n            type: string\n        - description: Associated values to return in the response, separated by semicolons\n            (;). This call supports Annotations to return events with annotation\n            values. If this parameter is not specified, annotation values are\n            not returned.\n          in: query\n          name: associations\n          required: false\n          schema:\n            type: string\n        - description: An optional value that determines how the times and values of the\n            returned end points are determined. The default is 'Inside'.\n          in: query\n          name: boundaryType\n          required: false\n          schema:\n            type: string\n        - description: The name or abbreviation of the desired units of measure for the\n            returned value, as found in the UOM database associated with the\n            attribute. If not specified for an attribute, the attribute's\n            default unit of measure is used. If the underlying stream is a\n            point, this value may not be specified, as points are not associated\n            with a unit of measure.\n          in: query\n          name: desiredUnits\n          required: false\n          schema:\n            type: string\n        - description: An optional end time. The default is '*' for element attributes and\n            points. For event frame attributes, the default is the event frame's\n            end time, or '*' if that is not set. Note that if endTime is earlier\n            than startTime, the resulting values will be in time-descending\n            order.\n          in: query\n          name: endTime\n          required: false\n          schema:\n            type: string\n        - description: An optional string containing a filter expression. Expression\n            variables are relative to the data point. Use '.' to reference the\n            containing attribute. The default is no filtering.\n          in: query\n          name: filterExpression\n          required: false\n          schema:\n            type: string\n        - description: Specify 'true' to indicate that values which fail the filter\n            criteria are present in the returned data at the times where they\n            occurred with a value set to a 'Filtered' enumeration value with bad\n            status. Repeated consecutive failures are omitted.\n          in: query\n          name: includeFilteredValues\n          required: false\n          schema:\n            type: boolean\n        - description: The maximum number of values to be returned. The default is 1000.\n          in: query\n          name: maxCount\n          required: false\n          schema:\n            type: integer\n        - description: List of fields to be returned in the response, separated by\n            semicolons (;). If this parameter is not specified, all available\n            fields will be returned.\n          in: query\n          name: selectedFields\n          required: false\n          schema:\n            type: string\n        - description: An optional start time. The default is '*-1d' for element attributes\n            and points. For event frame attributes, the default is the event\n            frame's start time, or '*-1d' if that is not set.\n          in: query\n          name: startTime\n          required: false\n          schema:\n            type: string\n        - description: The time zone in which the time string will be interpreted. This\n            parameter will be ignored if a time zone is specified in the time\n            string. If no time zone is specified in either places, the PI Web\n            API server time zone will be used.\n          in: query\n          name: timeZone\n          required: false\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: The values that meet the specified conditions.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ExtendedTimedValues\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/ExtendedTimedValues\"\n            text/html:\n              schema:\n                $ref: \"#/components/schemas/ExtendedTimedValues\"\n            application/x-ms-application:\n              schema:\n                $ref: \"#/components/schemas/ExtendedTimedValues\"\n        \"400\":\n          description: The request was malformed.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Errors\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/Errors\"\n            text/html:\n              schema:\n                $ref: \"#/components/schemas/Errors\"\n            application/x-ms-application:\n              schema:\n                $ref: \"#/components/schemas/Errors\"\n        \"409\":\n          description: The data reference does not support the method, or the supplied\n            filter expression is unsupported, or the desired units of measure\n            are incompatible, or an unsupported association was specified.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Errors\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/Errors\"\n            text/html:\n              schema:\n                $ref: \"#/components/schemas/Errors\"\n            application/x-ms-application:\n              schema:\n                $ref: \"#/components/schemas/Errors\"\n      summary: Returns a list of compressed values for the requested time range from\n        the source provider.\n      tags:\n        - Stream\n    post:\n      deprecated: false\n      operationId: Stream_UpdateValues\n      parameters:\n        - description: The ID of the stream.\n          in: path\n          name: webId\n          required: true\n          schema:\n            type: string\n        - description: The desired AFBufferOption. The default is 'BufferIfPossible'.\n          in: query\n          name: bufferOption\n          required: false\n          schema:\n            type: string\n        - description: The desired AFUpdateOption. The default is 'Replace'.\n          in: query\n          name: updateOption\n          required: false\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              items:\n                $ref: \"#/components/schemas/TimedValue\"\n              type: array\n          text/json:\n            schema:\n              items:\n                $ref: \"#/components/schemas/TimedValue\"\n              type: array\n        description: The values to add or update.\n        required: true\n      responses:\n        \"204\":\n          description: All updates executed successfully.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Items_Substatus_\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/Items_Substatus_\"\n            text/html:\n              schema:\n                $ref: \"#/components/schemas/Items_Substatus_\"\n            application/x-ms-application:\n              schema:\n                $ref: \"#/components/schemas/Items_Substatus_\"\n        \"207\":\n          description: The operation was a partial success. The response body contains\n            substatuses and errors in the same order as the supplied values.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Items_Substatus_\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/Items_Substatus_\"\n            text/html:\n              schema:\n                $ref: \"#/components/schemas/Items_Substatus_\"\n            application/x-ms-application:\n              schema:\n                $ref: \"#/components/schemas/Items_Substatus_\"\n        \"409\":\n          description: The data reference does not support this operation.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Errors\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/Errors\"\n            text/html:\n              schema:\n                $ref: \"#/components/schemas/Errors\"\n            application/x-ms-application:\n              schema:\n                $ref: \"#/components/schemas/Errors\"\n      summary: Updates multiple values for the specified stream.\n      tags:\n        - Stream\n  \"/streams/{webId}/recordedattime\":\n    get:\n      deprecated: false\n      description: If only recorded values with annotations are desired, the\n        filterExpression parameter should include the filter IsSet('.', \"a\").\n      operationId: Stream_GetRecordedAtTime\n      parameters:\n        - description: The ID of the stream.\n          in: path\n          name: webId\n          required: true\n          schema:\n            type: string\n        - description: The timestamp at which the value is desired.\n          in: query\n          name: time\n          required: true\n          schema:\n            type: string\n        - description: Associated values to return in the response, separated by semicolons\n            (;). This call supports Annotations to return events with annotation\n            values. If this parameter is not specified, annotation values are\n            not returned.\n          in: query\n          name: associations\n          required: false\n          schema:\n            type: string\n        - description: The name or abbreviation of the desired units of measure for the\n            returned value, as found in the UOM database associated with the\n            attribute. If not specified for an attribute, the attribute's\n            default unit of measure is used. If the underlying stream is a\n            point, this value may not be specified, as points are not associated\n            with a unit of measure.\n          in: query\n          name: desiredUnits\n          required: false\n          schema:\n            type: string\n        - description: An optional value that determines the value to return when a value\n            doesn't exist at the exact time specified. The default is 'Auto'.\n          in: query\n          name: retrievalMode\n          required: false\n          schema:\n            type: string\n        - description: List of fields to be returned in the response, separated by\n            semicolons (;). If this parameter is not specified, all available\n            fields will be returned.\n          in: query\n          name: selectedFields\n          required: false\n          schema:\n            type: string\n        - description: The time zone in which the time string will be interpreted. This\n            parameter will be ignored if a time zone is specified in the time\n            string. If no time zone is specified in either places, the PI Web\n            API server time zone will be used.\n          in: query\n          name: timeZone\n          required: false\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: The value that meet the specified conditions.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ExtendedTimedValue\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/ExtendedTimedValue\"\n            text/html:\n              schema:\n                $ref: \"#/components/schemas/ExtendedTimedValue\"\n            application/x-ms-application:\n              schema:\n                $ref: \"#/components/schemas/ExtendedTimedValue\"\n        \"400\":\n          description: The request was malformed.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Errors\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/Errors\"\n            text/html:\n              schema:\n                $ref: \"#/components/schemas/Errors\"\n            application/x-ms-application:\n              schema:\n                $ref: \"#/components/schemas/Errors\"\n        \"409\":\n          description: The data reference does not support the method, or the desired units\n            of measure are incompatible.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Errors\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/Errors\"\n            text/html:\n              schema:\n                $ref: \"#/components/schemas/Errors\"\n            application/x-ms-application:\n              schema:\n                $ref: \"#/components/schemas/Errors\"\n      summary: Returns a single recorded value based on the passed time and retrieval\n        mode from the stream.\n      tags:\n        - Stream\n  \"/streams/{webId}/recordedattimes\":\n    get:\n      deprecated: false\n      description: Any time series value in the response that contains an 'Errors' property\n        indicates PI Web API encountered a handled error during the transfer of\n        the response stream.   If only recorded values with annotations are\n        desired, the filterExpression parameter should include the filter\n        IsSet('.', \"a\").\n      operationId: Stream_GetRecordedAtTimes\n      parameters:\n        - description: The ID of the stream.\n          in: path\n          name: webId\n          required: true\n          schema:\n            type: string\n        - description: The timestamp at which to retrieve a recorded value. Multiple\n            timestamps may be specified with multiple instances of the\n            parameter.\n          in: query\n          name: time\n          required: true\n          explode: true\n          schema:\n            type: array\n            items:\n              type: string\n        - description: Associated values to return in the response, separated by semicolons\n            (;). This call supports Annotations to return events with annotation\n            values. If this parameter is not specified, annotation values are\n            not returned.\n          in: query\n          name: associations\n          required: false\n          schema:\n            type: string\n        - description: The name or abbreviation of the desired units of measure for the\n            returned value, as found in the UOM database associated with the\n            attribute. If not specified for an attribute, the attribute's\n            default unit of measure is used. If the underlying stream is a\n            point, this value may not be specified, as points are not associated\n            with a unit of measure.\n          in: query\n          name: desiredUnits\n          required: false\n          schema:\n            type: string\n        - description: An optional value that determines the value to return when a value\n            doesn't exist at the exact time specified. The default is 'Auto'.\n          in: query\n          name: retrievalMode\n          required: false\n          schema:\n            type: string\n        - description: List of fields to be returned in the response, separated by\n            semicolons (;). If this parameter is not specified, all available\n            fields will be returned.\n          in: query\n          name: selectedFields\n          required: false\n          schema:\n            type: string\n        - description: The order that the returned collection is sorted. The default is\n            'Ascending'.\n          in: query\n          name: sortOrder\n          required: false\n          schema:\n            type: string\n        - description: The time zone in which the time string will be interpreted. This\n            parameter will be ignored if a time zone is specified in the time\n            string. If no time zone is specified in either places, the PI Web\n            API server time zone will be used.\n          in: query\n          name: timeZone\n          required: false\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: The values that meet the specified conditions.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ExtendedTimedValues\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/ExtendedTimedValues\"\n            text/html:\n              schema:\n                $ref: \"#/components/schemas/ExtendedTimedValues\"\n            application/x-ms-application:\n              schema:\n                $ref: \"#/components/schemas/ExtendedTimedValues\"\n        \"400\":\n          description: The request was malformed.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Errors\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/Errors\"\n            text/html:\n              schema:\n                $ref: \"#/components/schemas/Errors\"\n            application/x-ms-application:\n              schema:\n                $ref: \"#/components/schemas/Errors\"\n        \"409\":\n          description: The data reference does not support this method, or the desired\n            units of measure are incompatible.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Errors\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/Errors\"\n            text/html:\n              schema:\n                $ref: \"#/components/schemas/Errors\"\n            application/x-ms-application:\n              schema:\n                $ref: \"#/components/schemas/Errors\"\n      summary: Retrieves recorded values at the specified times.\n      tags:\n        - Stream\n  \"/streams/{webId}/summary\":\n    get:\n      deprecated: false\n      description: Count is the only summary type supported on non-numeric streams.\n        Requesting a summary for any other type will generate an error.\n        Time-weighted totals are computed by integrating the rate tag values\n        over the requested time range. If some of the data are bad in the time\n        range, the calculated total is divided by the fraction of the time\n        period for which there are good values. This approach is equivalent to\n        assuming that during the period of bad data, the tag takes on the\n        average values for the entire calculation time range. The PercentGood\n        summary may be used to determine if the calculation results are suitable\n        for the application's purposes. For time-weighted totals, if the time\n        unit rate of the stream cannot be determined, then the value will be\n        totaled assuming a unit of \"per day\" and no unit of measure will be\n        assigned to the value. If the measured time component of the tag is not\n        based on a day, the user of the data must convert the totalized value to\n        the correct units.\n      operationId: Stream_GetSummary\n      parameters:\n        - description: The ID of the stream.\n          in: path\n          name: webId\n          required: true\n          schema:\n            type: string\n        - description: Specifies the method of evaluating the data over the time range. The\n            default is 'TimeWeighted'.\n          in: query\n          name: calculationBasis\n          required: false\n          schema:\n            type: string\n        - description: An optional end time. The default is '*' for element attributes and\n            points. For event frame attributes, the default is the event frame's\n            end time, or '*' if that is not set. Note that if endTime is earlier\n            than startTime, the resulting values will be in time-descending\n            order.\n          in: query\n          name: endTime\n          required: false\n          schema:\n            type: string\n        - description: A string containing a filter expression. Expression variables are\n            relative to the attribute. Use '.' to reference the containing\n            attribute.\n          in: query\n          name: filterExpression\n          required: false\n          schema:\n            type: string\n        - description: When the sampleType is Interval, sampleInterval specifies how often\n            the filter expression is evaluated when computing the summary for an\n            interval.\n          in: query\n          name: sampleInterval\n          required: false\n          schema:\n            type: string\n        - description: Defines the evaluation of an expression over a time range. The\n            default is 'ExpressionRecordedValues'.\n          in: query\n          name: sampleType\n          required: false\n          schema:\n            type: string\n        - description: List of fields to be returned in the response, separated by\n            semicolons (;). If this parameter is not specified, all available\n            fields will be returned.\n          in: query\n          name: selectedFields\n          required: false\n          schema:\n            type: string\n        - description: An optional start time. The default is '*-1d' for element attributes\n            and points. For event frame attributes, the default is the event\n            frame's start time, or '*-1d' if that is not set.\n          in: query\n          name: startTime\n          required: false\n          schema:\n            type: string\n        - description: The duration of each summary interval. If specified in hours,\n            minutes, seconds, or milliseconds, the summary durations will be\n            evenly spaced UTC time intervals. Longer interval types are\n            interpreted using wall clock rules and are time zone dependent.\n          in: query\n          name: summaryDuration\n          required: false\n          schema:\n            type: string\n        - description: Specifies the kinds of summaries to produce over the range. The\n            default is 'Total'. Multiple summary types may be specified by using\n            multiple instances of summaryType.\n          in: query\n          name: summaryType\n          required: false\n          explode: true\n          schema:\n            type: array\n            items:\n              type: string\n        - description: Specifies how to calculate the timestamp for each interval. The\n            default is 'Auto'.\n          in: query\n          name: timeType\n          required: false\n          schema:\n            type: string\n        - description: The time zone in which the time string will be interpreted. This\n            parameter will be ignored if a time zone is specified in the time\n            string. If no time zone is specified in either places, the PI Web\n            API server time zone will be used.\n          in: query\n          name: timeZone\n          required: false\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: The summaries that meet the specified conditions.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Items_SummaryValue_\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/Items_SummaryValue_\"\n            text/html:\n              schema:\n                $ref: \"#/components/schemas/Items_SummaryValue_\"\n            application/x-ms-application:\n              schema:\n                $ref: \"#/components/schemas/Items_SummaryValue_\"\n        \"409\":\n          description: The data reference does not support this method.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Errors\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/Errors\"\n            text/html:\n              schema:\n                $ref: \"#/components/schemas/Errors\"\n            application/x-ms-application:\n              schema:\n                $ref: \"#/components/schemas/Errors\"\n      summary: Returns a summary over the specified time range for the stream.\n      tags:\n        - Stream\n  \"/streams/{webId}/updates\":\n    post:\n      deprecated: false\n      description: The supplied webId will register for stream updates. For a 201 or 204\n        response, the returned location header will contain the url for\n        retrieving the next set of stream updates.\n      operationId: Stream_RegisterStreamUpdate\n      parameters:\n        - description: The ID of the stream.\n          in: path\n          name: webId\n          required: true\n          schema:\n            type: string\n        - description: List of fields to be returned in the response, separated by\n            semicolons (;). If this parameter is not specified, all available\n            fields will be returned.\n          in: query\n          name: selectedFields\n          required: false\n          schema:\n            type: string\n        - description: Optional parameter. Used to specify the type of WebID. Useful for\n            URL brevity and other special cases. Default is the value of the\n            configuration item \"WebIDType\".\n          in: query\n          name: webIdType\n          required: false\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: Successful registration\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/StreamUpdatesRegister\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/StreamUpdatesRegister\"\n            text/html:\n              schema:\n                $ref: \"#/components/schemas/StreamUpdatesRegister\"\n            application/x-ms-application:\n              schema:\n                $ref: \"#/components/schemas/StreamUpdatesRegister\"\n        \"400\":\n          description: Invalid webId\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Errors\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/Errors\"\n            text/html:\n              schema:\n                $ref: \"#/components/schemas/Errors\"\n            application/x-ms-application:\n              schema:\n                $ref: \"#/components/schemas/Errors\"\n        \"409\":\n          description: WebId represents a static attribute\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Errors\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/Errors\"\n            text/html:\n              schema:\n                $ref: \"#/components/schemas/Errors\"\n            application/x-ms-application:\n              schema:\n                $ref: \"#/components/schemas/Errors\"\n      summary: Register for stream updates\n      tags:\n        - Stream\n  \"/streams/{webId}/value\":\n    get:\n      deprecated: false\n      operationId: Stream_GetValue\n      parameters:\n        - description: The ID of the stream.\n          in: path\n          name: webId\n          required: true\n          schema:\n            type: string\n        - description: The name or abbreviation of the desired units of measure for the\n            returned value, as found in the UOM database associated with the\n            attribute. If not specified for an attribute, the attribute's\n            default unit of measure is used. If the underlying stream is a\n            point, this value may not be specified, as points are not associated\n            with a unit of measure.\n          in: query\n          name: desiredUnits\n          required: false\n          schema:\n            type: string\n        - description: List of fields to be returned in the response, separated by\n            semicolons (;). If this parameter is not specified, all available\n            fields will be returned.\n          in: query\n          name: selectedFields\n          required: false\n          schema:\n            type: string\n        - description: An optional time. The default time context is determined from the\n            owning object - for example, the time range of the event frame or\n            transfer which holds this attribute. Otherwise, the implementation\n            of the Data Reference determines the meaning of no context. For\n            Points or simply configured PI Point Data References, this means the\n            snapshot value of the PI Point on the Data Server.\n          in: query\n          name: time\n          required: false\n          schema:\n            type: string\n        - description: The time zone in which the time string will be interpreted. This\n            parameter will be ignored if a time zone is specified in the time\n            string. If no time zone is specified in either places, the PI Web\n            API server time zone will be used.\n          in: query\n          name: timeZone\n          required: false\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: The value at the specified time value.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/TimedValue\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/TimedValue\"\n            text/html:\n              schema:\n                $ref: \"#/components/schemas/TimedValue\"\n            application/x-ms-application:\n              schema:\n                $ref: \"#/components/schemas/TimedValue\"\n        \"409\":\n          description: The data reference does not support the method, or the desired units\n            of measure are incompatible.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Errors\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/Errors\"\n            text/html:\n              schema:\n                $ref: \"#/components/schemas/Errors\"\n            application/x-ms-application:\n              schema:\n                $ref: \"#/components/schemas/Errors\"\n      summary: Returns the value of the stream at the specified time. By default, this\n        is usually the current value.\n      tags:\n        - Stream\n    post:\n      deprecated: false\n      operationId: Stream_UpdateValue\n      parameters:\n        - description: The ID of the stream.\n          in: path\n          name: webId\n          required: true\n          schema:\n            type: string\n        - description: The desired AFBufferOption. The default is 'BufferIfPossible'.\n          in: query\n          name: bufferOption\n          required: false\n          schema:\n            type: string\n        - description: The desired AFUpdateOption. The default is 'Replace'. This parameter\n            is ignored if the attribute is a configuration item.\n          in: query\n          name: updateOption\n          required: false\n          schema:\n            type: string\n        - description: Optional parameter. Used to specify the type of WebID. Useful for\n            URL brevity and other special cases. Default is the value of the\n            configuration item \"WebIDType\".\n          in: query\n          name: webIdType\n          required: false\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/TimedValue\"\n          text/json:\n            schema:\n              $ref: \"#/components/schemas/TimedValue\"\n        description: The value to add or update.\n        required: true\n      responses:\n        \"202\":\n          description: The value was accepted for a potential buffered update. The\n            response's Location header is a link that can be used to examine the\n            result.\n        \"204\":\n          description: The update operation was successfully applied. The response's\n            Location header is a link that can be used to examine the result.\n        \"400\":\n          description: The request was malformed.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Errors\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/Errors\"\n            text/html:\n              schema:\n                $ref: \"#/components/schemas/Errors\"\n            application/x-ms-application:\n              schema:\n                $ref: \"#/components/schemas/Errors\"\n        \"409\":\n          description: The attribute or data reference does not support this operation, or\n            the specified units are incompatible.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Errors\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/Errors\"\n            text/html:\n              schema:\n                $ref: \"#/components/schemas/Errors\"\n            application/x-ms-application:\n              schema:\n                $ref: \"#/components/schemas/Errors\"\n      summary: Updates a value for the specified stream.\n      tags:\n        - Stream\n  /streamsets/channel:\n    get:\n      deprecated: false\n      operationId: StreamSet_GetChannelAdHoc\n      parameters:\n        - description: The ID of a stream. Multiple streams may be specified with multiple\n            instances of the parameter.\n          in: query\n          name: webId\n          required: true\n          explode: true\n          schema:\n            type: array\n            items:\n              type: string\n        - description: Specifies the maximum number of consecutive empty messages that can\n            be elapsed with no new data updates from the PI System, after which\n            the client receives an empty payload. It helps to check if the\n            connection is still alive. Zero/negative values correspond to no\n            heartbeat, and the default value is no heartbeat.\n          in: query\n          name: heartbeatRate\n          required: false\n          schema:\n            type: integer\n        - description: Specified if the channel should send a message with the current\n            values of all the streams after the connection is opened. The\n            default is 'false'.\n          in: query\n          name: includeInitialValues\n          required: false\n          schema:\n            type: boolean\n        - description: Optional parameter. Used to specify the type of WebID. Useful for\n            URL brevity and other special cases. Default is the value of the\n            configuration item \"WebIDType\".\n          in: query\n          name: webIdType\n          required: false\n          schema:\n            type: string\n      responses:\n        \"101\":\n          description: Switches to the Web Socket protocol.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Items_StreamValue_\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/Items_StreamValue_\"\n            text/html:\n              schema:\n                $ref: \"#/components/schemas/Items_StreamValue_\"\n            application/x-ms-application:\n              schema:\n                $ref: \"#/components/schemas/Items_StreamValue_\"\n      summary: Opens a channel that will send messages about any value changes for the\n        specified streams.\n      tags:\n        - StreamSet\n  /streamsets/end:\n    get:\n      deprecated: false\n      description: Any time series value in the response that contains an 'Errors' property\n        indicates PI Web API encountered a handled error during the transfer of\n        the response stream.\n      operationId: StreamSet_GetEndAdHoc\n      parameters:\n        - description: The ID of a stream. Multiple streams may be specified with multiple\n            instances of the parameter.\n          in: query\n          name: webId\n          required: true\n          explode: true\n          schema:\n            type: array\n            items:\n              type: string\n        - description: List of fields to be returned in the response, separated by\n            semicolons (;). If this parameter is not specified, all available\n            fields will be returned.\n          in: query\n          name: selectedFields\n          required: false\n          schema:\n            type: string\n        - description: The field or property of the object used to sort the returned\n            collection. For better performance, by default no sorting is\n            applied. 'Name' is the only supported field by which to sort.\n          in: query\n          name: sortField\n          required: false\n          schema:\n            type: string\n        - description: The order that the returned collection is sorted. The default is\n            'Ascending'\n          in: query\n          name: sortOrder\n          required: false\n          schema:\n            type: string\n        - description: Optional parameter. Used to specify the type of WebID. Useful for\n            URL brevity and other special cases. Default is the value of the\n            configuration item \"WebIDType\".\n          in: query\n          name: webIdType\n          required: false\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: End of stream values of the streams that meet the specified\n            conditions.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Items_StreamValues_\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/Items_StreamValues_\"\n            text/html:\n              schema:\n                $ref: \"#/components/schemas/Items_StreamValues_\"\n            application/x-ms-application:\n              schema:\n                $ref: \"#/components/schemas/Items_StreamValues_\"\n      summary: Returns End Of Stream values for attributes of the specified streams\n      tags:\n        - StreamSet\n  /streamsets/interpolated:\n    get:\n      deprecated: false\n      description: Any time series value in the response that contains an 'Errors' property\n        indicates PI Web API encountered a handled error during the transfer of\n        the response stream.\n      operationId: StreamSet_GetInterpolatedAdHoc\n      parameters:\n        - description: The ID of a stream. Multiple streams may be specified with multiple\n            instances of the parameter.\n          in: query\n          name: webId\n          required: true\n          explode: true\n          schema:\n            type: array\n            items:\n              type: string\n        - description: An optional end time. The default is '*'. Note that if endTime is\n            earlier than startTime, the resulting values will be in\n            time-descending order.\n          in: query\n          name: endTime\n          required: false\n          schema:\n            type: string\n        - description: An optional string containing a filter expression. Expression\n            variables are relative to the data point. Use '.' to reference the\n            containing attribute. If the attribute does not support filtering,\n            the filter will be ignored. The default is no filtering.\n          in: query\n          name: filterExpression\n          required: false\n          schema:\n            type: string\n        - description: Specify 'true' to indicate that values which fail the filter\n            criteria are present in the returned data at the times where they\n            occurred with a value set to a 'Filtered' enumeration value with bad\n            status. Repeated consecutive failures are omitted.\n          in: query\n          name: includeFilteredValues\n          required: false\n          schema:\n            type: boolean\n        - description: The sampling interval, in AFTimeSpan format.\n          in: query\n          name: interval\n          required: false\n          schema:\n            type: string\n        - description: List of fields to be returned in the response, separated by\n            semicolons (;). If this parameter is not specified, all available\n            fields will be returned.\n          in: query\n          name: selectedFields\n          required: false\n          schema:\n            type: string\n        - description: The field or property of the object used to sort the returned\n            collection. For better performance, by default no sorting is\n            applied. 'Name' is the only supported field by which to sort.\n          in: query\n          name: sortField\n          required: false\n          schema:\n            type: string\n        - description: The order that the returned collection is sorted. The default is\n            'Ascending'\n          in: query\n          name: sortOrder\n          required: false\n          schema:\n            type: string\n        - description: An optional start time. The default is '*-1d'.\n          in: query\n          name: startTime\n          required: false\n          schema:\n            type: string\n        - description: An optional start time anchor, in AFTime format. When specified,\n            interpolated data retrieval will use the sync time as the origin for\n            calculating the interval times.\n          in: query\n          name: syncTime\n          required: false\n          schema:\n            type: string\n        - description: An optional string specifying the boundary type to use when applying\n            a syncTime. The allowed values are 'Inside' and 'Outside'. The\n            default is 'Inside'.\n          in: query\n          name: syncTimeBoundaryType\n          required: false\n          schema:\n            type: string\n        - description: The time zone in which the time string will be interpreted. This\n            parameter will be ignored if a time zone is specified in the time\n            string. If no time zone is specified in either places, the PI Web\n            API server time zone will be used.\n          in: query\n          name: timeZone\n          required: false\n          schema:\n            type: string\n        - description: Optional parameter. Used to specify the type of WebID. Useful for\n            URL brevity and other special cases. Default is the value of the\n            configuration item \"WebIDType\".\n          in: query\n          name: webIdType\n          required: false\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: Interpolated values of the streams that meet the specified\n            conditions.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Items_StreamValues_\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/Items_StreamValues_\"\n            text/html:\n              schema:\n                $ref: \"#/components/schemas/Items_StreamValues_\"\n            application/x-ms-application:\n              schema:\n                $ref: \"#/components/schemas/Items_StreamValues_\"\n      summary: Returns interpolated values of the specified streams over the specified\n        time range at the specified sampling interval.\n      tags:\n        - StreamSet\n  /streamsets/interpolatedattimes:\n    get:\n      deprecated: false\n      description: Any time series value in the response that contains an 'Errors' property\n        indicates PI Web API encountered a handled error during the transfer of\n        the response stream.\n      operationId: StreamSet_GetInterpolatedAtTimesAdHoc\n      parameters:\n        - description: The timestamp at which to retrieve a interpolated value. Multiple\n            timestamps may be specified with multiple instances of the\n            parameter.\n          in: query\n          name: time\n          required: true\n          explode: true\n          schema:\n            type: array\n            items:\n              type: string\n        - description: The ID of a stream. Multiple streams may be specified with multiple\n            instances of the parameter.\n          in: query\n          name: webId\n          required: true\n          explode: true\n          schema:\n            type: array\n            items:\n              type: string\n        - description: An optional string containing a filter expression. Expression\n            variables are relative to the data point. Use '.' to reference the\n            containing attribute. If the attribute does not support filtering,\n            the filter will be ignored. The default is no filtering.\n          in: query\n          name: filterExpression\n          required: false\n          schema:\n            type: string\n        - description: Specify 'true' to indicate that values which fail the filter\n            criteria are present in the returned data at the times where they\n            occurred with a value set to a 'Filtered' enumeration value with bad\n            status. Repeated consecutive failures are omitted.\n          in: query\n          name: includeFilteredValues\n          required: false\n          schema:\n            type: boolean\n        - description: List of fields to be returned in the response, separated by\n            semicolons (;). If this parameter is not specified, all available\n            fields will be returned.\n          in: query\n          name: selectedFields\n          required: false\n          schema:\n            type: string\n        - description: The order that the returned collection is sorted. The default is\n            'Ascending'.\n          in: query\n          name: sortOrder\n          required: false\n          schema:\n            type: string\n        - description: The time zone in which the time string will be interpreted. This\n            parameter will be ignored if a time zone is specified in the time\n            string. If no time zone is specified in either places, the PI Web\n            API server time zone will be used.\n          in: query\n          name: timeZone\n          required: false\n          schema:\n            type: string\n        - description: Optional parameter. Used to specify the type of WebID. Useful for\n            URL brevity and other special cases. Default is the value of the\n            configuration item \"WebIDType\".\n          in: query\n          name: webIdType\n          required: false\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: Interpolated values of the streams that meet the specified\n            conditions.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Items_StreamValues_\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/Items_StreamValues_\"\n            text/html:\n              schema:\n                $ref: \"#/components/schemas/Items_StreamValues_\"\n            application/x-ms-application:\n              schema:\n                $ref: \"#/components/schemas/Items_StreamValues_\"\n        \"400\":\n          description: The request was malformed.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Errors\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/Errors\"\n            text/html:\n              schema:\n                $ref: \"#/components/schemas/Errors\"\n            application/x-ms-application:\n              schema:\n                $ref: \"#/components/schemas/Errors\"\n        \"502\":\n          description: The request was cancelled.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Errors\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/Errors\"\n            text/html:\n              schema:\n                $ref: \"#/components/schemas/Errors\"\n            application/x-ms-application:\n              schema:\n                $ref: \"#/components/schemas/Errors\"\n      summary: Returns interpolated values of the specified streams at the specified\n        times.\n      tags:\n        - StreamSet\n  /streamsets/joined:\n    get:\n      deprecated: false\n      description: Any time series value in the response that contains an 'Errors' property\n        indicates PI Web API encountered a handled error during the transfer of\n        the response stream. The first stream in the response is always the\n        X-Axis.\n      operationId: StreamSet_GetJoined\n      parameters:\n        - description: The ID of the base stream which is used for retrieving the recorded\n            values.\n          in: query\n          name: baseWebId\n          required: true\n          schema:\n            type: string\n        - description: The ID of a stream whose values will be joined on the times with the\n            values of the base stream. Multiple streams may be specified with\n            multiple instances of the parameter.\n          in: query\n          name: subordinateWebId\n          required: true\n          explode: true\n          schema:\n            type: array\n            items:\n              type: string\n        - description: An optional value that determines how the times and values of the\n            returned end points are determined. The default is 'Inside'.\n          in: query\n          name: boundaryType\n          required: false\n          schema:\n            type: string\n        - description: An optional end time. The default is '*' for element attributes and\n            points. For event frame attributes, the default is the event frame's\n            end time, or '*' if that is not set. Note that if endTime is earlier\n            than startTime, the resulting values will be in time-descending\n            order.\n          in: query\n          name: endTime\n          required: false\n          schema:\n            type: string\n        - description: An optional string containing a filter expression. Expression\n            variables are relative to the data point. Use '.' to reference the\n            containing attribute. The default is no filtering.\n          in: query\n          name: filterExpression\n          required: false\n          schema:\n            type: string\n        - description: Specify 'true' to indicate that values which fail the filter\n            criteria are present in the returned data at the times where they\n            occurred with a value set to a 'Filtered' enumeration value with bad\n            status. Repeated consecutive failures are omitted.\n          in: query\n          name: includeFilteredValues\n          required: false\n          schema:\n            type: boolean\n        - description: The maximum number of values to be returned. The default is 1000.\n          in: query\n          name: maxCount\n          required: false\n          schema:\n            type: integer\n        - description: List of fields to be returned in the response, separated by\n            semicolons (;). If this parameter is not specified, all available\n            fields will be returned.\n          in: query\n          name: selectedFields\n          required: false\n          schema:\n            type: string\n        - description: An optional start time. The default is '*-1d' for element attributes\n            and points. For event frame attributes, the default is the event\n            frame's start time, or '*-1d' if that is not set.\n          in: query\n          name: startTime\n          required: false\n          schema:\n            type: string\n        - description: The time zone in which the time string will be interpreted. This\n            parameter will be ignored if a time zone is specified in the time\n            string. If no time zone is specified in either place, the PI Web API\n            server time zone will be used.\n          in: query\n          name: timeZone\n          required: false\n          schema:\n            type: string\n        - description: Optional parameter. Used to specify the type of WebID. Useful for\n            URL brevity and other special cases. Default is the value of the\n            configuration item \"WebIDType\".\n          in: query\n          name: webIdType\n          required: false\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: Recorded values of the streams that meet the specified conditions.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Items_StreamValues_\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/Items_StreamValues_\"\n            text/html:\n              schema:\n                $ref: \"#/components/schemas/Items_StreamValues_\"\n            application/x-ms-application:\n              schema:\n                $ref: \"#/components/schemas/Items_StreamValues_\"\n        \"409\":\n          description: Unsupported operation on the given AF object.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Errors\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/Errors\"\n            text/html:\n              schema:\n                $ref: \"#/components/schemas/Errors\"\n            application/x-ms-application:\n              schema:\n                $ref: \"#/components/schemas/Errors\"\n      summary: Returns the base stream's recorded values and subordinate streams'\n        interpolated values at times matching the recorded values' timestamps.\n      tags:\n        - StreamSet\n  /streamsets/plot:\n    get:\n      deprecated: false\n      description: For each interval, the data available is examined and significant values\n        are returned. Each interval can produce up to 5 values if they are\n        unique, the first value in the interval, the last value, the highest\n        value, the lowest value and at most one exceptional point (bad status or\n        digital state). Any time series value in the response that contains an\n        'Errors' property indicates PI Web API encountered a handled error\n        during the transfer of the response stream.\n      operationId: StreamSet_GetPlotAdHoc\n      parameters:\n        - description: The ID of a stream. Multiple streams may be specified with multiple\n            instances of the parameter.\n          in: query\n          name: webId\n          required: true\n          explode: true\n          schema:\n            type: array\n            items:\n              type: string\n        - description: An optional end time. The default is '*'. Note that if endTime is\n            earlier than startTime, the resulting values will be in\n            time-descending order.\n          in: query\n          name: endTime\n          required: false\n          schema:\n            type: string\n        - description: The number of intervals to plot over. Typically, this would be the\n            number of horizontal pixels in the trend. The default is '24'. For\n            each interval, the data available is examined and significant values\n            are returned. Each interval can produce up to 5 values if they are\n            unique, the first value in the interval, the last value, the highest\n            value, the lowest value and at most one exceptional point (bad\n            status or digital state).\n          in: query\n          name: intervals\n          required: false\n          schema:\n            type: integer\n        - description: List of fields to be returned in the response, separated by\n            semicolons (;). If this parameter is not specified, all available\n            fields will be returned.\n          in: query\n          name: selectedFields\n          required: false\n          schema:\n            type: string\n        - description: The field or property of the object used to sort the returned\n            collection. For better performance, by default no sorting is\n            applied. 'Name' is the only supported field by which to sort.\n          in: query\n          name: sortField\n          required: false\n          schema:\n            type: string\n        - description: The order that the returned collection is sorted. The default is\n            'Ascending'\n          in: query\n          name: sortOrder\n          required: false\n          schema:\n            type: string\n        - description: An optional start time. The default is '*-1d'.\n          in: query\n          name: startTime\n          required: false\n          schema:\n            type: string\n        - description: The time zone in which the time string will be interpreted. This\n            parameter will be ignored if a time zone is specified in the time\n            string. If no time zone is specified in either places, the PI Web\n            API server time zone will be used.\n          in: query\n          name: timeZone\n          required: false\n          schema:\n            type: string\n        - description: Optional parameter. Used to specify the type of WebID. Useful for\n            URL brevity and other special cases. Default is the value of the\n            configuration item \"WebIDType\".\n          in: query\n          name: webIdType\n          required: false\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: Plot values of the streams that meet the specified conditions.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Items_StreamValues_\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/Items_StreamValues_\"\n            text/html:\n              schema:\n                $ref: \"#/components/schemas/Items_StreamValues_\"\n            application/x-ms-application:\n              schema:\n                $ref: \"#/components/schemas/Items_StreamValues_\"\n        \"409\":\n          description: Unsupported operation on the given AF object.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Errors\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/Errors\"\n            text/html:\n              schema:\n                $ref: \"#/components/schemas/Errors\"\n            application/x-ms-application:\n              schema:\n                $ref: \"#/components/schemas/Errors\"\n      summary: Returns values of attributes for the specified streams over the\n        specified time range suitable for plotting over the number of intervals\n        (typically represents pixels).\n      tags:\n        - StreamSet\n  /streamsets/recorded:\n    get:\n      deprecated: false\n      description: Any time series value in the response that contains an 'Errors' property\n        indicates PI Web API encountered a handled error during the transfer of\n        the response stream.\n      operationId: StreamSet_GetRecordedAdHoc\n      parameters:\n        - description: The ID of a stream. Multiple streams may be specified with multiple\n            instances of the parameter.\n          in: query\n          name: webId\n          required: true\n          explode: true\n          schema:\n            type: array\n            items:\n              type: string\n        - description: An optional value that determines how the times and values of the\n            returned end points are determined. The default is 'Inside'.\n          in: query\n          name: boundaryType\n          required: false\n          schema:\n            type: string\n        - description: An optional end time. The default is '*'. Note that if endTime is\n            earlier than startTime, the resulting values will be in\n            time-descending order.\n          in: query\n          name: endTime\n          required: false\n          schema:\n            type: string\n        - description: An optional string containing a filter expression. Expression\n            variables are relative to the data point. Use '.' to reference the\n            containing attribute. The default is no filtering.\n          in: query\n          name: filterExpression\n          required: false\n          schema:\n            type: string\n        - description: Specify 'true' to indicate that values which fail the filter\n            criteria are present in the returned data at the times where they\n            occurred with a value set to a 'Filtered' enumeration value with bad\n            status. Repeated consecutive failures are omitted.\n          in: query\n          name: includeFilteredValues\n          required: false\n          schema:\n            type: boolean\n        - description: The maximum number of values to be returned. The default is 1000.\n          in: query\n          name: maxCount\n          required: false\n          schema:\n            type: integer\n        - description: List of fields to be returned in the response, separated by\n            semicolons (;). If this parameter is not specified, all available\n            fields will be returned.\n          in: query\n          name: selectedFields\n          required: false\n          schema:\n            type: string\n        - description: The field or property of the object used to sort the returned\n            collection. For better performance, by default no sorting is\n            applied. 'Name' is the only supported field by which to sort.\n          in: query\n          name: sortField\n          required: false\n          schema:\n            type: string\n        - description: The order that the returned collection is sorted. The default is\n            'Ascending'\n          in: query\n          name: sortOrder\n          required: false\n          schema:\n            type: string\n        - description: An optional start time. The default is '*-1d'.\n          in: query\n          name: startTime\n          required: false\n          schema:\n            type: string\n        - description: The time zone in which the time string will be interpreted. This\n            parameter will be ignored if a time zone is specified in the time\n            string. If no time zone is specified in either places, the PI Web\n            API server time zone will be used.\n          in: query\n          name: timeZone\n          required: false\n          schema:\n            type: string\n        - description: Optional parameter. Used to specify the type of WebID. Useful for\n            URL brevity and other special cases. Default is the value of the\n            configuration item \"WebIDType\".\n          in: query\n          name: webIdType\n          required: false\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: Recorded values of the streams that meet the specified conditions.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Items_StreamValues_\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/Items_StreamValues_\"\n            text/html:\n              schema:\n                $ref: \"#/components/schemas/Items_StreamValues_\"\n            application/x-ms-application:\n              schema:\n                $ref: \"#/components/schemas/Items_StreamValues_\"\n        \"409\":\n          description: Unsupported operation on the given AF object.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Errors\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/Errors\"\n            text/html:\n              schema:\n                $ref: \"#/components/schemas/Errors\"\n            application/x-ms-application:\n              schema:\n                $ref: \"#/components/schemas/Errors\"\n      summary: Returns recorded values of the specified streams.\n      tags:\n        - StreamSet\n    post:\n      deprecated: false\n      operationId: StreamSet_UpdateValuesAdHoc\n      parameters:\n        - description: The desired AFBufferOption. The default is 'BufferIfPossible'.\n          in: query\n          name: bufferOption\n          required: false\n          schema:\n            type: string\n        - description: The desired AFUpdateOption. The default is 'Replace'.\n          in: query\n          name: updateOption\n          required: false\n          schema:\n            type: string\n      requestBody:\n        $ref: \"#/components/requestBodies/StreamValuesArray\"\n      responses:\n        \"200\":\n          description: All updates executed successfully.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Items_Items_Substatus_\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/Items_Items_Substatus_\"\n            text/html:\n              schema:\n                $ref: \"#/components/schemas/Items_Items_Substatus_\"\n            application/x-ms-application:\n              schema:\n                $ref: \"#/components/schemas/Items_Items_Substatus_\"\n        \"207\":\n          description: The operation was a partial success. The response body contains\n            substatuses and errors in the same order as the supplied values.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Items_Items_Substatus_\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/Items_Items_Substatus_\"\n            text/html:\n              schema:\n                $ref: \"#/components/schemas/Items_Items_Substatus_\"\n            application/x-ms-application:\n              schema:\n                $ref: \"#/components/schemas/Items_Items_Substatus_\"\n        \"409\":\n          description: Unsupported operation on the given AF object.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Errors\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/Errors\"\n            text/html:\n              schema:\n                $ref: \"#/components/schemas/Errors\"\n            application/x-ms-application:\n              schema:\n                $ref: \"#/components/schemas/Errors\"\n      summary: Updates multiple values for the specified streams.\n      tags:\n        - StreamSet\n  /streamsets/recordedattime:\n    get:\n      deprecated: false\n      description: Any time series value in the response that contains an 'Errors' property\n        indicates PI Web API encountered a handled error during the transfer of\n        the response stream.\n      operationId: StreamSet_GetRecordedAtTimeAdHoc\n      parameters:\n        - description: The timestamp at which the values are desired.\n          in: query\n          name: time\n          required: true\n          schema:\n            type: string\n        - description: The ID of a stream. Multiple streams may be specified with multiple\n            instances of the parameter.\n          in: query\n          name: webId\n          required: true\n          explode: true\n          schema:\n            type: array\n            items:\n              type: string\n        - description: An optional value that determines the values to return when values\n            don't exist at the exact time specified. The default is 'Auto'.\n          in: query\n          name: retrievalMode\n          required: false\n          schema:\n            type: string\n        - description: List of fields to be returned in the response, separated by\n            semicolons (;). If this parameter is not specified, all available\n            fields will be returned.\n          in: query\n          name: selectedFields\n          required: false\n          schema:\n            type: string\n        - description: The time zone in which the time string will be interpreted. This\n            parameter will be ignored if a time zone is specified in the time\n            string. If no time zone is specified in either places, the PI Web\n            API server time zone will be used.\n          in: query\n          name: timeZone\n          required: false\n          schema:\n            type: string\n        - description: Optional parameter. Used to specify the type of WebID. Useful for\n            URL brevity and other special cases. Default is the value of the\n            configuration item \"WebIDType\".\n          in: query\n          name: webIdType\n          required: false\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: Recorded values of the streams that meet the specified conditions.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Items_StreamValue_\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/Items_StreamValue_\"\n            text/html:\n              schema:\n                $ref: \"#/components/schemas/Items_StreamValue_\"\n            application/x-ms-application:\n              schema:\n                $ref: \"#/components/schemas/Items_StreamValue_\"\n        \"409\":\n          description: Unsupported operation on the given AF object.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Errors\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/Errors\"\n            text/html:\n              schema:\n                $ref: \"#/components/schemas/Errors\"\n            application/x-ms-application:\n              schema:\n                $ref: \"#/components/schemas/Errors\"\n      summary: Returns recorded values based on the passed time and retrieval mode.\n      tags:\n        - StreamSet\n  /streamsets/recordedattimes:\n    get:\n      deprecated: false\n      description: Any time series value in the response that contains an 'Errors' property\n        indicates PI Web API encountered a handled error during the transfer of\n        the response stream.\n      operationId: StreamSet_GetRecordedAtTimesAdHoc\n      parameters:\n        - description: The timestamp at which to retrieve a recorded value. Multiple\n            timestamps may be specified with multiple instances of the\n            parameter.\n          in: query\n          name: time\n          required: true\n          explode: true\n          schema:\n            type: array\n            items:\n              type: string\n        - description: The ID of a stream. Multiple streams may be specified with multiple\n            instances of the parameter.\n          in: query\n          name: webId\n          required: true\n          explode: true\n          schema:\n            type: array\n            items:\n              type: string\n        - description: An optional value that determines the values to return when values\n            don't exist at the exact time specified. The default is 'Auto'.\n          in: query\n          name: retrievalMode\n          required: false\n          schema:\n            type: string\n        - description: List of fields to be returned in the response, separated by\n            semicolons (;). If this parameter is not specified, all available\n            fields will be returned.\n          in: query\n          name: selectedFields\n          required: false\n          schema:\n            type: string\n        - description: The order that the returned collection is sorted. The default is\n            'Ascending'.\n          in: query\n          name: sortOrder\n          required: false\n          schema:\n            type: string\n        - description: The time zone in which the time string will be interpreted. This\n            parameter will be ignored if a time zone is specified in the time\n            string. If no time zone is specified in either places, the PI Web\n            API server time zone will be used.\n          in: query\n          name: timeZone\n          required: false\n          schema:\n            type: string\n        - description: Optional parameter. Used to specify the type of WebID. Useful for\n            URL brevity and other special cases. Default is the value of the\n            configuration item \"WebIDType\".\n          in: query\n          name: webIdType\n          required: false\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: Recorded values of the streams that meet the specified conditions.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Items_StreamValues_\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/Items_StreamValues_\"\n            text/html:\n              schema:\n                $ref: \"#/components/schemas/Items_StreamValues_\"\n            application/x-ms-application:\n              schema:\n                $ref: \"#/components/schemas/Items_StreamValues_\"\n        \"400\":\n          description: The request was malformed.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Errors\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/Errors\"\n            text/html:\n              schema:\n                $ref: \"#/components/schemas/Errors\"\n            application/x-ms-application:\n              schema:\n                $ref: \"#/components/schemas/Errors\"\n        \"502\":\n          description: The request was cancelled.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Errors\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/Errors\"\n            text/html:\n              schema:\n                $ref: \"#/components/schemas/Errors\"\n            application/x-ms-application:\n              schema:\n                $ref: \"#/components/schemas/Errors\"\n      summary: Returns recorded values of the specified streams at the specified times.\n      tags:\n        - StreamSet\n  /streamsets/summary:\n    get:\n      deprecated: false\n      description: Any time series value in the response that contains an 'Errors' property\n        indicates PI Web API encountered a handled error during the transfer of\n        the response stream.\n      operationId: StreamSet_GetSummariesAdHoc\n      parameters:\n        - description: The ID of a stream. Multiple streams may be specified with multiple\n            instances of the parameter.\n          in: query\n          name: webId\n          required: true\n          explode: true\n          schema:\n            type: array\n            items:\n              type: string\n        - description: Specifies the method of evaluating the data over the time range. The\n            default is 'TimeWeighted'.\n          in: query\n          name: calculationBasis\n          required: false\n          schema:\n            type: string\n        - description: An optional end time. The default is '*'. Note that if endTime is\n            earlier than startTime, the resulting values will be in\n            time-descending order.\n          in: query\n          name: endTime\n          required: false\n          schema:\n            type: string\n        - description: A string containing a filter expression. Expression variables are\n            relative to the attribute. Use '.' to reference the containing\n            attribute. The default is no filtering.\n          in: query\n          name: filterExpression\n          required: false\n          schema:\n            type: string\n        - description: A time span specifies how often the filter expression is evaluated\n            when computing the summary for an interval, if the sampleType is\n            'Interval'.\n          in: query\n          name: sampleInterval\n          required: false\n          schema:\n            type: string\n        - description: A flag which specifies one or more summaries to compute for each\n            interval over the time range. The default is\n            'ExpressionRecordedValues'.\n          in: query\n          name: sampleType\n          required: false\n          schema:\n            type: string\n        - description: List of fields to be returned in the response, separated by\n            semicolons (;). If this parameter is not specified, all available\n            fields will be returned.\n          in: query\n          name: selectedFields\n          required: false\n          schema:\n            type: string\n        - description: An optional start time. The default is '*-1d'.\n          in: query\n          name: startTime\n          required: false\n          schema:\n            type: string\n        - description: The duration of each summary interval.\n          in: query\n          name: summaryDuration\n          required: false\n          schema:\n            type: string\n        - description: Specifies the kinds of summaries to produce over the range. The\n            default is 'Total'. Multiple summary types may be specified by using\n            multiple instances of summaryType.\n          in: query\n          name: summaryType\n          required: false\n          explode: true\n          schema:\n            type: array\n            items:\n              type: string\n        - description: Specifies how to calculate the timestamp for each interval. The\n            default is 'Auto'.\n          in: query\n          name: timeType\n          required: false\n          schema:\n            type: string\n        - description: The time zone in which the time string will be interpreted. This\n            parameter will be ignored if a time zone is specified in the time\n            string. If no time zone is specified in either places, the PI Web\n            API server time zone will be used.\n          in: query\n          name: timeZone\n          required: false\n          schema:\n            type: string\n        - description: Optional parameter. Used to specify the type of WebID. Useful for\n            URL brevity and other special cases. Default is the value of the\n            configuration item \"WebIDType\".\n          in: query\n          name: webIdType\n          required: false\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: Summary values of the streams that meet the specified conditions.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Items_StreamSummaries_\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/Items_StreamSummaries_\"\n            text/html:\n              schema:\n                $ref: \"#/components/schemas/Items_StreamSummaries_\"\n            application/x-ms-application:\n              schema:\n                $ref: \"#/components/schemas/Items_StreamSummaries_\"\n        \"409\":\n          description: Unsupported operation on the given AF object.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Errors\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/Errors\"\n            text/html:\n              schema:\n                $ref: \"#/components/schemas/Errors\"\n            application/x-ms-application:\n              schema:\n                $ref: \"#/components/schemas/Errors\"\n      summary: Returns summary values of the specified streams.\n      tags:\n        - StreamSet\n  /streamsets/updates:\n    get:\n      deprecated: false\n      description: The supplied markers will identify the set of stream updates to\n        retrieve. For a 200 response, the returned location header will contain\n        the url for retrieving the stream updates.\n      operationId: StreamSet_RetrieveStreamSetUpdates\n      parameters:\n        - description: Identifier of stream source and current position. Multiple markers\n            may be specified with multiple instances of the parameter.\n          in: query\n          name: marker\n          required: true\n          explode: true\n          schema:\n            type: array\n            items:\n              type: string\n        - description: List of fields to be returned in the response, separated by\n            semicolons (;). If this parameter is not specified, all available\n            fields will be returned.\n          in: query\n          name: selectedFields\n          required: false\n          schema:\n            type: string\n        - description: Optional parameter. Used to specify the type of WebID. Useful for\n            URL brevity and other special cases. Default is the value of the\n            configuration item \"WebIDType\".\n          in: query\n          name: webIdType\n          required: false\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: The stream updates have been successfully retrieved\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Items_StreamUpdatesRetrieve_\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/Items_StreamUpdatesRetrieve_\"\n            text/html:\n              schema:\n                $ref: \"#/components/schemas/Items_StreamUpdatesRetrieve_\"\n            application/x-ms-application:\n              schema:\n                $ref: \"#/components/schemas/Items_StreamUpdatesRetrieve_\"\n      summary: Receive stream updates\n      tags:\n        - StreamSet\n    post:\n      deprecated: false\n      description: The supplied webIds will register for stream updates. For a 200\n        response, the returned location header will contain the url for\n        retrieving the next set of stream updates.\n      operationId: StreamSet_RegisterStreamSetUpdates\n      parameters:\n        - description: The ID of a stream. Multiple streams may be specified with multiple\n            instances of the parameter.\n          in: query\n          name: webId\n          required: true\n          explode: true\n          schema:\n            type: array\n            items:\n              type: string\n        - description: List of fields to be returned in the response, separated by\n            semicolons (;). If this parameter is not specified, all available\n            fields will be returned.\n          in: query\n          name: selectedFields\n          required: false\n          schema:\n            type: string\n        - description: Optional parameter. Used to specify the type of WebID. Useful for\n            URL brevity and other special cases. Default is the value of the\n            configuration item \"WebIDType\".\n          in: query\n          name: webIdType\n          required: false\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: Successful Registration\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Items_StreamUpdatesRegister_\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/Items_StreamUpdatesRegister_\"\n            text/html:\n              schema:\n                $ref: \"#/components/schemas/Items_StreamUpdatesRegister_\"\n            application/x-ms-application:\n              schema:\n                $ref: \"#/components/schemas/Items_StreamUpdatesRegister_\"\n        \"400\":\n          description: Any webID supplied is invalid\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Errors\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/Errors\"\n            text/html:\n              schema:\n                $ref: \"#/components/schemas/Errors\"\n            application/x-ms-application:\n              schema:\n                $ref: \"#/components/schemas/Errors\"\n        \"409\":\n          description: Any webID supplied is a static attribute\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Errors\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/Errors\"\n            text/html:\n              schema:\n                $ref: \"#/components/schemas/Errors\"\n            application/x-ms-application:\n              schema:\n                $ref: \"#/components/schemas/Errors\"\n      summary: Register for stream updates\n      tags:\n        - StreamSet\n  /streamsets/value:\n    get:\n      deprecated: false\n      description: Any time series value in the response that contains an 'Errors' property\n        indicates PI Web API encountered a handled error during the transfer of\n        the response stream.\n      operationId: StreamSet_GetValuesAdHoc\n      parameters:\n        - description: The ID of a stream. Multiple streams may be specified with multiple\n            instances of the parameter.\n          in: query\n          name: webId\n          required: true\n          explode: true\n          schema:\n            type: array\n            items:\n              type: string\n        - description: List of fields to be returned in the response, separated by\n            semicolons (;). If this parameter is not specified, all available\n            fields will be returned.\n          in: query\n          name: selectedFields\n          required: false\n          schema:\n            type: string\n        - description: The field or property of the object used to sort the returned\n            collection. For better performance, by default no sorting is\n            applied. 'Name' is the only supported field by which to sort.\n          in: query\n          name: sortField\n          required: false\n          schema:\n            type: string\n        - description: The order that the returned collection is sorted. The default is\n            'Ascending'\n          in: query\n          name: sortOrder\n          required: false\n          schema:\n            type: string\n        - description: An AF time string, which is used as the time context to get stream\n            values if it is provided. By default, it is not specified, and the\n            default time context of the AF object will be used.\n          in: query\n          name: time\n          required: false\n          schema:\n            type: string\n        - description: The time zone in which the time string will be interpreted. This\n            parameter will be ignored if a time zone is specified in the time\n            string. If no time zone is specified in either places, the PI Web\n            API server time zone will be used.\n          in: query\n          name: timeZone\n          required: false\n          schema:\n            type: string\n        - description: Optional parameter. Used to specify the type of WebID. Useful for\n            URL brevity and other special cases. Default is the value of the\n            configuration item \"WebIDType\".\n          in: query\n          name: webIdType\n          required: false\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: Summary values of the streams that meet the specified conditions.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Items_StreamValue_\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/Items_StreamValue_\"\n            text/html:\n              schema:\n                $ref: \"#/components/schemas/Items_StreamValue_\"\n            application/x-ms-application:\n              schema:\n                $ref: \"#/components/schemas/Items_StreamValue_\"\n        \"409\":\n          description: Unsupported operation on the given AF object.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Errors\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/Errors\"\n            text/html:\n              schema:\n                $ref: \"#/components/schemas/Errors\"\n            application/x-ms-application:\n              schema:\n                $ref: \"#/components/schemas/Errors\"\n      summary: Returns values of the specified streams.\n      tags:\n        - StreamSet\n    post:\n      deprecated: false\n      operationId: StreamSet_UpdateValueAdHoc\n      parameters:\n        - description: The desired AFBufferOption. The default is 'BufferIfPossible'.\n          in: query\n          name: bufferOption\n          required: false\n          schema:\n            type: string\n        - description: The desired AFUpdateOption. The default is 'Replace'.\n          in: query\n          name: updateOption\n          required: false\n          schema:\n            type: string\n      requestBody:\n        $ref: \"#/components/requestBodies/StreamValueArray\"\n      responses:\n        \"200\":\n          description: All updates executed successfully.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Items_Substatus_\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/Items_Substatus_\"\n            text/html:\n              schema:\n                $ref: \"#/components/schemas/Items_Substatus_\"\n            application/x-ms-application:\n              schema:\n                $ref: \"#/components/schemas/Items_Substatus_\"\n        \"207\":\n          description: The operation was a partial success. The response body contains\n            substatuses and errors in the same order as the supplied values.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Items_Substatus_\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/Items_Substatus_\"\n            text/html:\n              schema:\n                $ref: \"#/components/schemas/Items_Substatus_\"\n            application/x-ms-application:\n              schema:\n                $ref: \"#/components/schemas/Items_Substatus_\"\n        \"409\":\n          description: Unsupported operation on the given AF object.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Errors\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/Errors\"\n            text/html:\n              schema:\n                $ref: \"#/components/schemas/Errors\"\n            application/x-ms-application:\n              schema:\n                $ref: \"#/components/schemas/Errors\"\n      summary: Updates a single value for the specified streams.\n      tags:\n        - StreamSet\n  \"/streamsets/{webId}/channel\":\n    get:\n      deprecated: false\n      operationId: StreamSet_GetChannel\n      parameters:\n        - description: The ID of an Element, Event Frame or Attribute, which is the base\n            element or parent of all the stream attributes.\n          in: path\n          name: webId\n          required: true\n          schema:\n            type: string\n        - description: Specify that included attributes must have this category. The\n            default is no category filter.\n          in: query\n          name: categoryName\n          required: false\n          schema:\n            type: string\n        - description: Specifies the maximum number of consecutive empty messages that can\n            be elapsed with no new data updates from the PI System, after which\n            the client receives an empty payload. It helps to check if the\n            connection is still alive. Zero/negative values correspond to no\n            heartbeat, and the default value is no heartbeat.\n          in: query\n          name: heartbeatRate\n          required: false\n          schema:\n            type: integer\n        - description: Specified if the channel should send a message with the current\n            values of all the streams after the connection is opened. The\n            default is 'false'.\n          in: query\n          name: includeInitialValues\n          required: false\n          schema:\n            type: boolean\n        - description: The name query string used for filtering attributes. The default is\n            no filter.\n          in: query\n          name: nameFilter\n          required: false\n          schema:\n            type: string\n        - description: Specifies if the search should include attributes nested further\n            than the immediate attributes of the searchRoot. The default is\n            'false'.\n          in: query\n          name: searchFullHierarchy\n          required: false\n          schema:\n            type: boolean\n        - description: Specified if the search should include attributes with the Excluded\n            property set. The default is 'false'.\n          in: query\n          name: showExcluded\n          required: false\n          schema:\n            type: boolean\n        - description: Specified if the search should include attributes with the Hidden\n            property set. The default is 'false'.\n          in: query\n          name: showHidden\n          required: false\n          schema:\n            type: boolean\n        - description: Specify that included attributes must be members of this template.\n            The default is no template filter.\n          in: query\n          name: templateName\n          required: false\n          schema:\n            type: string\n        - description: Optional parameter. Used to specify the type of WebID. Useful for\n            URL brevity and other special cases. Default is the value of the\n            configuration item \"WebIDType\".\n          in: query\n          name: webIdType\n          required: false\n          schema:\n            type: string\n      responses:\n        \"101\":\n          description: Switches to the Web Socket protocol.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Items_StreamValue_\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/Items_StreamValue_\"\n            text/html:\n              schema:\n                $ref: \"#/components/schemas/Items_StreamValue_\"\n            application/x-ms-application:\n              schema:\n                $ref: \"#/components/schemas/Items_StreamValue_\"\n        \"409\":\n          description: Unsupported operation on the given AF object.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Errors\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/Errors\"\n            text/html:\n              schema:\n                $ref: \"#/components/schemas/Errors\"\n            application/x-ms-application:\n              schema:\n                $ref: \"#/components/schemas/Errors\"\n      summary: Opens a channel that will send messages about any value changes for the\n        attributes of an Element, Event Frame, or Attribute.\n      tags:\n        - StreamSet\n  \"/streamsets/{webId}/end\":\n    get:\n      deprecated: false\n      description: Any time series value in the response that contains an 'Errors' property\n        indicates PI Web API encountered a handled error during the transfer of\n        the response stream.\n      operationId: StreamSet_GetEnd\n      parameters:\n        - description: The ID of an Element, Event Frame or Attribute, which is the base\n            element or parent of all the stream attributes.\n          in: path\n          name: webId\n          required: true\n          schema:\n            type: string\n        - description: Specify that included attributes must have this category. The\n            default is no category filter.\n          in: query\n          name: categoryName\n          required: false\n          schema:\n            type: string\n        - description: The name query string used for filtering attributes. The default is\n            no filter.\n          in: query\n          name: nameFilter\n          required: false\n          schema:\n            type: string\n        - description: Specifies if the search should include attributes nested further\n            than the immediate attributes of the searchRoot. The default is\n            'false'.\n          in: query\n          name: searchFullHierarchy\n          required: false\n          schema:\n            type: boolean\n        - description: List of fields to be returned in the response, separated by\n            semicolons (;). If this parameter is not specified, all available\n            fields will be returned.\n          in: query\n          name: selectedFields\n          required: false\n          schema:\n            type: string\n        - description: Specified if the search should include attributes with the Excluded\n            property set. The default is 'false'.\n          in: query\n          name: showExcluded\n          required: false\n          schema:\n            type: boolean\n        - description: Specified if the search should include attributes with the Hidden\n            property set. The default is 'false'.\n          in: query\n          name: showHidden\n          required: false\n          schema:\n            type: boolean\n        - description: The field or property of the object used to sort the returned\n            collection. For better performance, by default no sorting is\n            applied. 'Name' is the only supported field by which to sort.\n          in: query\n          name: sortField\n          required: false\n          schema:\n            type: string\n        - description: The order that the returned collection is sorted. The default is\n            'Ascending'\n          in: query\n          name: sortOrder\n          required: false\n          schema:\n            type: string\n        - description: Specify that included attributes must be members of this template.\n            The default is no template filter.\n          in: query\n          name: templateName\n          required: false\n          schema:\n            type: string\n        - description: Optional parameter. Used to specify the type of WebID. Useful for\n            URL brevity and other special cases. Default is the value of the\n            configuration item \"WebIDType\".\n          in: query\n          name: webIdType\n          required: false\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: Summary values of the streams that meet the specified conditions.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Items_StreamValue_\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/Items_StreamValue_\"\n            text/html:\n              schema:\n                $ref: \"#/components/schemas/Items_StreamValue_\"\n            application/x-ms-application:\n              schema:\n                $ref: \"#/components/schemas/Items_StreamValue_\"\n        \"409\":\n          description: Unsupported operation on the given AF object.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Errors\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/Errors\"\n            text/html:\n              schema:\n                $ref: \"#/components/schemas/Errors\"\n            application/x-ms-application:\n              schema:\n                $ref: \"#/components/schemas/Errors\"\n      summary: Returns End of stream values of the attributes for an Element, Event\n        Frame or Attribute\n      tags:\n        - StreamSet\n  \"/streamsets/{webId}/interpolated\":\n    get:\n      deprecated: false\n      description: Any time series value in the response that contains an 'Errors' property\n        indicates PI Web API encountered a handled error during the transfer of\n        the response stream.\n      operationId: StreamSet_GetInterpolated\n      parameters:\n        - description: The ID of an element, event frame or attribute, which is the base\n            element or parent of all the stream attributes.\n          in: path\n          name: webId\n          required: true\n          schema:\n            type: string\n        - description: Specify that included attributes must have this category. The\n            default is no category filter.\n          in: query\n          name: categoryName\n          required: false\n          schema:\n            type: string\n        - description: An optional end time. The default is '*' for element attributes and\n            points. For event frame attributes, the default is the event frame's\n            end time, or '*' if that is not set. Note that if endTime is earlier\n            than startTime, the resulting values will be in time-descending\n            order.\n          in: query\n          name: endTime\n          required: false\n          schema:\n            type: string\n        - description: An optional string containing a filter expression. Expression\n            variables are relative to the data point. Use '.' to reference the\n            containing attribute. If the attribute does not support filtering,\n            the filter will be ignored. The default is no filtering.\n          in: query\n          name: filterExpression\n          required: false\n          schema:\n            type: string\n        - description: Specify 'true' to indicate that values which fail the filter\n            criteria are present in the returned data at the times where they\n            occurred with a value set to a 'Filtered' enumeration value with bad\n            status. Repeated consecutive failures are omitted.\n          in: query\n          name: includeFilteredValues\n          required: false\n          schema:\n            type: boolean\n        - description: The sampling interval, in AFTimeSpan format.\n          in: query\n          name: interval\n          required: false\n          schema:\n            type: string\n        - description: The name query string used for filtering attributes. The default is\n            no filter.\n          in: query\n          name: nameFilter\n          required: false\n          schema:\n            type: string\n        - description: Specifies if the search should include attributes nested further\n            than the immediate attributes of the searchRoot. The default is\n            'false'.\n          in: query\n          name: searchFullHierarchy\n          required: false\n          schema:\n            type: boolean\n        - description: List of fields to be returned in the response, separated by\n            semicolons (;). If this parameter is not specified, all available\n            fields will be returned.\n          in: query\n          name: selectedFields\n          required: false\n          schema:\n            type: string\n        - description: Specified if the search should include attributes with the Excluded\n            property set. The default is 'false'.\n          in: query\n          name: showExcluded\n          required: false\n          schema:\n            type: boolean\n        - description: Specified if the search should include attributes with the Hidden\n            property set. The default is 'false'.\n          in: query\n          name: showHidden\n          required: false\n          schema:\n            type: boolean\n        - description: The field or property of the object used to sort the returned\n            collection. For better performance, by default no sorting is\n            applied. 'Name' is the only supported field by which to sort.\n          in: query\n          name: sortField\n          required: false\n          schema:\n            type: string\n        - description: The order that the returned collection is sorted. The default is\n            'Ascending'.\n          in: query\n          name: sortOrder\n          required: false\n          schema:\n            type: string\n        - description: An optional start time. The default is '*-1d' for element attributes\n            and points. For event frame attributes, the default is the event\n            frame's start time, or '*-1d' if that is not set.\n          in: query\n          name: startTime\n          required: false\n          schema:\n            type: string\n        - description: An optional start time anchor, in AFTime format. When specified,\n            interpolated data retrieval will use the sync time as the origin for\n            calculating the interval times.\n          in: query\n          name: syncTime\n          required: false\n          schema:\n            type: string\n        - description: An optional string specifying the boundary type to use when applying\n            a syncTime. The allowed values are 'Inside' and 'Outside'. The\n            default is 'Inside'.\n          in: query\n          name: syncTimeBoundaryType\n          required: false\n          schema:\n            type: string\n        - description: Specify that included attributes must be members of this template.\n            The default is no template filter.\n          in: query\n          name: templateName\n          required: false\n          schema:\n            type: string\n        - description: The time zone in which the time string will be interpreted. This\n            parameter will be ignored if a time zone is specified in the time\n            string. If no time zone is specified in either places, the PI Web\n            API server time zone will be used.\n          in: query\n          name: timeZone\n          required: false\n          schema:\n            type: string\n        - description: Optional parameter. Used to specify the type of WebID. Useful for\n            URL brevity and other special cases. Default is the value of the\n            configuration item \"WebIDType\".\n          in: query\n          name: webIdType\n          required: false\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: Interpolated values of the streams that meet the specified\n            conditions.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Items_StreamValues_\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/Items_StreamValues_\"\n            text/html:\n              schema:\n                $ref: \"#/components/schemas/Items_StreamValues_\"\n            application/x-ms-application:\n              schema:\n                $ref: \"#/components/schemas/Items_StreamValues_\"\n      summary: Returns interpolated values of attributes for an element, event frame or\n        attribute over the specified time range at the specified sampling\n        interval.\n      tags:\n        - StreamSet\n  \"/streamsets/{webId}/interpolatedattimes\":\n    get:\n      deprecated: false\n      description: Any time series value in the response that contains an 'Errors' property\n        indicates PI Web API encountered a handled error during the transfer of\n        the response stream.\n      operationId: StreamSet_GetInterpolatedAtTimes\n      parameters:\n        - description: The ID of an element, event frame or attribute, which is the base\n            element or parent of all the stream attributes.\n          in: path\n          name: webId\n          required: true\n          schema:\n            type: string\n        - description: The timestamp at which to retrieve a interpolated value. Multiple\n            timestamps may be specified with multiple instances of the\n            parameter.\n          in: query\n          name: time\n          required: true\n          explode: true\n          schema:\n            type: array\n            items:\n              type: string\n        - description: Specify that included attributes must have this category. The\n            default is no category filter.\n          in: query\n          name: categoryName\n          required: false\n          schema:\n            type: string\n        - description: An optional string containing a filter expression. Expression\n            variables are relative to the data point. Use '.' to reference the\n            containing attribute. If the attribute does not support filtering,\n            the filter will be ignored. The default is no filtering.\n          in: query\n          name: filterExpression\n          required: false\n          schema:\n            type: string\n        - description: Specify 'true' to indicate that values which fail the filter\n            criteria are present in the returned data at the times where they\n            occurred with a value set to a 'Filtered' enumeration value with bad\n            status. Repeated consecutive failures are omitted.\n          in: query\n          name: includeFilteredValues\n          required: false\n          schema:\n            type: boolean\n        - description: The name query string used for filtering attributes. The default is\n            no filter.\n          in: query\n          name: nameFilter\n          required: false\n          schema:\n            type: string\n        - description: Specifies if the search should include attributes nested further\n            than the immediate attributes of the searchRoot. The default is\n            'false'.\n          in: query\n          name: searchFullHierarchy\n          required: false\n          schema:\n            type: boolean\n        - description: List of fields to be returned in the response, separated by\n            semicolons (;). If this parameter is not specified, all available\n            fields will be returned.\n          in: query\n          name: selectedFields\n          required: false\n          schema:\n            type: string\n        - description: Specified if the search should include attributes with the Excluded\n            property set. The default is 'false'.\n          in: query\n          name: showExcluded\n          required: false\n          schema:\n            type: boolean\n        - description: Specified if the search should include attributes with the Hidden\n            property set. The default is 'false'.\n          in: query\n          name: showHidden\n          required: false\n          schema:\n            type: boolean\n        - description: The order that the returned collection is sorted. The default is\n            'Ascending'.\n          in: query\n          name: sortOrder\n          required: false\n          schema:\n            type: string\n        - description: Specify that included attributes must be members of this template.\n            The default is no template filter.\n          in: query\n          name: templateName\n          required: false\n          schema:\n            type: string\n        - description: The time zone in which the time string will be interpreted. This\n            parameter will be ignored if a time zone is specified in the time\n            string. If no time zone is specified in either places, the PI Web\n            API server time zone will be used.\n          in: query\n          name: timeZone\n          required: false\n          schema:\n            type: string\n        - description: Optional parameter. Used to specify the type of WebID. Useful for\n            URL brevity and other special cases. Default is the value of the\n            configuration item \"WebIDType\".\n          in: query\n          name: webIdType\n          required: false\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: Interpolated values of the streams that meet the specified\n            conditions.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Items_StreamValues_\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/Items_StreamValues_\"\n            text/html:\n              schema:\n                $ref: \"#/components/schemas/Items_StreamValues_\"\n            application/x-ms-application:\n              schema:\n                $ref: \"#/components/schemas/Items_StreamValues_\"\n        \"400\":\n          description: The request was malformed.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Errors\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/Errors\"\n            text/html:\n              schema:\n                $ref: \"#/components/schemas/Errors\"\n            application/x-ms-application:\n              schema:\n                $ref: \"#/components/schemas/Errors\"\n        \"502\":\n          description: The request was cancelled.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Errors\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/Errors\"\n            text/html:\n              schema:\n                $ref: \"#/components/schemas/Errors\"\n            application/x-ms-application:\n              schema:\n                $ref: \"#/components/schemas/Errors\"\n      summary: Returns interpolated values of attributes for an element, event frame or\n        attribute at the specified times.\n      tags:\n        - StreamSet\n  \"/streamsets/{webId}/plot\":\n    get:\n      deprecated: false\n      description: For each interval, the data available is examined and significant values\n        are returned. Each interval can produce up to 5 values if they are\n        unique, the first value in the interval, the last value, the highest\n        value, the lowest value and at most one exceptional point (bad status or\n        digital state). Any time series value in the response that contains an\n        'Errors' property indicates PI Web API encountered a handled error\n        during the transfer of the response stream.\n      operationId: StreamSet_GetPlot\n      parameters:\n        - description: The ID of an element, event frame or attribute, which is the base\n            element or parent of all the stream attributes.\n          in: path\n          name: webId\n          required: true\n          schema:\n            type: string\n        - description: Specify that included attributes must have this category. The\n            default is no category filter.\n          in: query\n          name: categoryName\n          required: false\n          schema:\n            type: string\n        - description: An optional end time. The default is '*' for element attributes and\n            points. For event frame attributes, the default is the event frame's\n            end time, or '*' if that is not set. Note that if endTime is earlier\n            than startTime, the resulting values will be in time-descending\n            order.\n          in: query\n          name: endTime\n          required: false\n          schema:\n            type: string\n        - description: The number of intervals to plot over. Typically, this would be the\n            number of horizontal pixels in the trend. The default is '24'. For\n            each interval, the data available is examined and significant values\n            are returned. Each interval can produce up to 5 values if they are\n            unique, the first value in the interval, the last value, the highest\n            value, the lowest value and at most one exceptional point (bad\n            status or digital state).\n          in: query\n          name: intervals\n          required: false\n          schema:\n            type: integer\n        - description: The name query string used for filtering attributes. The default is\n            no filter.\n          in: query\n          name: nameFilter\n          required: false\n          schema:\n            type: string\n        - description: Specifies if the search should include attributes nested further\n            than the immediate attributes of the searchRoot. The default is\n            'false'.\n          in: query\n          name: searchFullHierarchy\n          required: false\n          schema:\n            type: boolean\n        - description: List of fields to be returned in the response, separated by\n            semicolons (;). If this parameter is not specified, all available\n            fields will be returned.\n          in: query\n          name: selectedFields\n          required: false\n          schema:\n            type: string\n        - description: Specified if the search should include attributes with the Excluded\n            property set. The default is 'false'.\n          in: query\n          name: showExcluded\n          required: false\n          schema:\n            type: boolean\n        - description: Specified if the search should include attributes with the Hidden\n            property set. The default is 'false'.\n          in: query\n          name: showHidden\n          required: false\n          schema:\n            type: boolean\n        - description: The field or property of the object used to sort the returned\n            collection. For better performance, by default no sorting is\n            applied. 'Name' is the only supported field by which to sort.\n          in: query\n          name: sortField\n          required: false\n          schema:\n            type: string\n        - description: The order that the returned collection is sorted. The default is\n            'Ascending'\n          in: query\n          name: sortOrder\n          required: false\n          schema:\n            type: string\n        - description: An optional start time. The default is '*-1d' for element attributes\n            and points. For event frame attributes, the default is the event\n            frame's start time, or '*-1d' if that is not set.\n          in: query\n          name: startTime\n          required: false\n          schema:\n            type: string\n        - description: Specify that included attributes must be members of this template.\n            The default is no template filter.\n          in: query\n          name: templateName\n          required: false\n          schema:\n            type: string\n        - description: The time zone in which the time string will be interpreted. This\n            parameter will be ignored if a time zone is specified in the time\n            string. If no time zone is specified in either places, the PI Web\n            API server time zone will be used.\n          in: query\n          name: timeZone\n          required: false\n          schema:\n            type: string\n        - description: Optional parameter. Used to specify the type of WebID. Useful for\n            URL brevity and other special cases. Default is the value of the\n            configuration item \"WebIDType\".\n          in: query\n          name: webIdType\n          required: false\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: Plot values of the streams that meet the specified conditions.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Items_StreamValues_\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/Items_StreamValues_\"\n            text/html:\n              schema:\n                $ref: \"#/components/schemas/Items_StreamValues_\"\n            application/x-ms-application:\n              schema:\n                $ref: \"#/components/schemas/Items_StreamValues_\"\n        \"409\":\n          description: Unsupported operation on the given AF object.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Errors\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/Errors\"\n            text/html:\n              schema:\n                $ref: \"#/components/schemas/Errors\"\n            application/x-ms-application:\n              schema:\n                $ref: \"#/components/schemas/Errors\"\n      summary: Returns values of attributes for an element, event frame or attribute\n        over the specified time range suitable for plotting over the number of\n        intervals (typically represents pixels).\n      tags:\n        - StreamSet\n  \"/streamsets/{webId}/recorded\":\n    get:\n      deprecated: false\n      description: Any time series value in the response that contains an 'Errors' property\n        indicates PI Web API encountered a handled error during the transfer of\n        the response stream.\n      operationId: StreamSet_GetRecorded\n      parameters:\n        - description: The ID of an element, event frame or attribute, which is the base\n            element or parent of all the stream attributes.\n          in: path\n          name: webId\n          required: true\n          schema:\n            type: string\n        - description: An optional value that determines how the times and values of the\n            returned end points are determined. The default is 'Inside'.\n          in: query\n          name: boundaryType\n          required: false\n          schema:\n            type: string\n        - description: Specify that included attributes must have this category. The\n            default is no category filter.\n          in: query\n          name: categoryName\n          required: false\n          schema:\n            type: string\n        - description: An optional end time. The default is '*' for element attributes and\n            points. For event frame attributes, the default is the event frame's\n            end time, or '*' if that is not set. Note that if endTime is earlier\n            than startTime, the resulting values will be in time-descending\n            order.\n          in: query\n          name: endTime\n          required: false\n          schema:\n            type: string\n        - description: An optional string containing a filter expression. Expression\n            variables are relative to the data point. Use '.' to reference the\n            containing attribute. The default is no filtering.\n          in: query\n          name: filterExpression\n          required: false\n          schema:\n            type: string\n        - description: Specify 'true' to indicate that values which fail the filter\n            criteria are present in the returned data at the times where they\n            occurred with a value set to a 'Filtered' enumeration value with bad\n            status. Repeated consecutive failures are omitted.\n          in: query\n          name: includeFilteredValues\n          required: false\n          schema:\n            type: boolean\n        - description: The maximum number of values to be returned. The default is 1000.\n          in: query\n          name: maxCount\n          required: false\n          schema:\n            type: integer\n        - description: The name query string used for filtering attributes. The default is\n            no filter.\n          in: query\n          name: nameFilter\n          required: false\n          schema:\n            type: string\n        - description: Specifies if the search should include attributes nested further\n            than the immediate attributes of the searchRoot. The default is\n            'false'.\n          in: query\n          name: searchFullHierarchy\n          required: false\n          schema:\n            type: boolean\n        - description: List of fields to be returned in the response, separated by\n            semicolons (;). If this parameter is not specified, all available\n            fields will be returned.\n          in: query\n          name: selectedFields\n          required: false\n          schema:\n            type: string\n        - description: Specified if the search should include attributes with the Excluded\n            property set. The default is 'false'.\n          in: query\n          name: showExcluded\n          required: false\n          schema:\n            type: boolean\n        - description: Specified if the search should include attributes with the Hidden\n            property set. The default is 'false'.\n          in: query\n          name: showHidden\n          required: false\n          schema:\n            type: boolean\n        - description: The field or property of the object used to sort the returned\n            collection. For better performance, by default no sorting is\n            applied. 'Name' is the only supported field by which to sort.\n          in: query\n          name: sortField\n          required: false\n          schema:\n            type: string\n        - description: The order that the returned collection is sorted. The default is\n            'Ascending'\n          in: query\n          name: sortOrder\n          required: false\n          schema:\n            type: string\n        - description: An optional start time. The default is '*-1d' for element attributes\n            and points. For event frame attributes, the default is the event\n            frame's start time, or '*-1d' if that is not set.\n          in: query\n          name: startTime\n          required: false\n          schema:\n            type: string\n        - description: Specify that included attributes must be members of this template.\n            The default is no template filter.\n          in: query\n          name: templateName\n          required: false\n          schema:\n            type: string\n        - description: The time zone in which the time string will be interpreted. This\n            parameter will be ignored if a time zone is specified in the time\n            string. If no time zone is specified in either places, the PI Web\n            API server time zone will be used.\n          in: query\n          name: timeZone\n          required: false\n          schema:\n            type: string\n        - description: Optional parameter. Used to specify the type of WebID. Useful for\n            URL brevity and other special cases. Default is the value of the\n            configuration item \"WebIDType\".\n          in: query\n          name: webIdType\n          required: false\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: Recorded values of the streams that meet the specified conditions.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Items_StreamValues_\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/Items_StreamValues_\"\n            text/html:\n              schema:\n                $ref: \"#/components/schemas/Items_StreamValues_\"\n            application/x-ms-application:\n              schema:\n                $ref: \"#/components/schemas/Items_StreamValues_\"\n        \"409\":\n          description: Unsupported operation on the given AF object.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Errors\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/Errors\"\n            text/html:\n              schema:\n                $ref: \"#/components/schemas/Errors\"\n            application/x-ms-application:\n              schema:\n                $ref: \"#/components/schemas/Errors\"\n      summary: Returns recorded values of the attributes for an element, event frame,\n        or attribute.\n      tags:\n        - StreamSet\n    post:\n      deprecated: false\n      operationId: StreamSet_UpdateValues\n      parameters:\n        - description: The ID of the parent element, event frame, or attribute. Attributes\n            specified in the body must be descendants of the specified object.\n          in: path\n          name: webId\n          required: true\n          schema:\n            type: string\n        - description: The desired AFBufferOption. The default is 'BufferIfPossible'.\n          in: query\n          name: bufferOption\n          required: false\n          schema:\n            type: string\n        - description: The desired AFUpdateOption. The default is 'Replace'.\n          in: query\n          name: updateOption\n          required: false\n          schema:\n            type: string\n      requestBody:\n        $ref: \"#/components/requestBodies/StreamValuesArray\"\n      responses:\n        \"200\":\n          description: All updates executed successfully.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Items_Items_Substatus_\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/Items_Items_Substatus_\"\n            text/html:\n              schema:\n                $ref: \"#/components/schemas/Items_Items_Substatus_\"\n            application/x-ms-application:\n              schema:\n                $ref: \"#/components/schemas/Items_Items_Substatus_\"\n        \"207\":\n          description: The operation was a partial success. The response body contains\n            substatuses and errors in the same order as the supplied values.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Items_Items_Substatus_\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/Items_Items_Substatus_\"\n            text/html:\n              schema:\n                $ref: \"#/components/schemas/Items_Items_Substatus_\"\n            application/x-ms-application:\n              schema:\n                $ref: \"#/components/schemas/Items_Items_Substatus_\"\n        \"409\":\n          description: Unsupported operation on the given AF object.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Errors\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/Errors\"\n            text/html:\n              schema:\n                $ref: \"#/components/schemas/Errors\"\n            application/x-ms-application:\n              schema:\n                $ref: \"#/components/schemas/Errors\"\n      summary: Updates multiple values for the specified streams.\n      tags:\n        - StreamSet\n  \"/streamsets/{webId}/recordedattime\":\n    get:\n      deprecated: false\n      description: Any time series value in the response that contains an 'Errors' property\n        indicates PI Web API encountered a handled error during the transfer of\n        the response stream.\n      operationId: StreamSet_GetRecordedAtTime\n      parameters:\n        - description: The ID of an element, event frame or attribute, which is the base\n            element or parent of all the stream attributes.\n          in: path\n          name: webId\n          required: true\n          schema:\n            type: string\n        - description: The timestamp at which the values are desired.\n          in: query\n          name: time\n          required: true\n          schema:\n            type: string\n        - description: Specify that included attributes must have this category. The\n            default is no category filter.\n          in: query\n          name: categoryName\n          required: false\n          schema:\n            type: string\n        - description: The name query string used for filtering attributes. The default is\n            no filter.\n          in: query\n          name: nameFilter\n          required: false\n          schema:\n            type: string\n        - description: An optional value that determines the values to return when values\n            don't exist at the exact time specified. The default is 'Auto'.\n          in: query\n          name: retrievalMode\n          required: false\n          schema:\n            type: string\n        - description: Specifies if the search should include attributes nested further\n            than the immediate attributes of the searchRoot. The default is\n            'false'.\n          in: query\n          name: searchFullHierarchy\n          required: false\n          schema:\n            type: boolean\n        - description: List of fields to be returned in the response, separated by\n            semicolons (;). If this parameter is not specified, all available\n            fields will be returned.\n          in: query\n          name: selectedFields\n          required: false\n          schema:\n            type: string\n        - description: Specified if the search should include attributes with the Excluded\n            property set. The default is 'false'.\n          in: query\n          name: showExcluded\n          required: false\n          schema:\n            type: boolean\n        - description: Specified if the search should include attributes with the Hidden\n            property set. The default is 'false'.\n          in: query\n          name: showHidden\n          required: false\n          schema:\n            type: boolean\n        - description: Specify that included attributes must be members of this template.\n            The default is no template filter.\n          in: query\n          name: templateName\n          required: false\n          schema:\n            type: string\n        - description: The time zone in which the time string will be interpreted. This\n            parameter will be ignored if a time zone is specified in the time\n            string. If no time zone is specified in either places, the PI Web\n            API server time zone will be used.\n          in: query\n          name: timeZone\n          required: false\n          schema:\n            type: string\n        - description: Optional parameter. Used to specify the type of WebID. Useful for\n            URL brevity and other special cases. Default is the value of the\n            configuration item \"WebIDType\".\n          in: query\n          name: webIdType\n          required: false\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: Recorded values of the streams that meet the specified conditions.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Items_StreamValue_\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/Items_StreamValue_\"\n            text/html:\n              schema:\n                $ref: \"#/components/schemas/Items_StreamValue_\"\n            application/x-ms-application:\n              schema:\n                $ref: \"#/components/schemas/Items_StreamValue_\"\n        \"409\":\n          description: Unsupported operation on the given AF object.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Errors\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/Errors\"\n            text/html:\n              schema:\n                $ref: \"#/components/schemas/Errors\"\n            application/x-ms-application:\n              schema:\n                $ref: \"#/components/schemas/Errors\"\n      summary: Returns recorded values of the attributes for an element, event frame,\n        or attribute.\n      tags:\n        - StreamSet\n  \"/streamsets/{webId}/recordedattimes\":\n    get:\n      deprecated: false\n      description: Any time series value in the response that contains an 'Errors' property\n        indicates PI Web API encountered a handled error during the transfer of\n        the response stream.\n      operationId: StreamSet_GetRecordedAtTimes\n      parameters:\n        - description: The ID of an element, event frame or attribute, which is the base\n            element or parent of all the stream attributes.\n          in: path\n          name: webId\n          required: true\n          schema:\n            type: string\n        - description: The timestamp at which to retrieve a recorded value. Multiple\n            timestamps may be specified with multiple instances of the\n            parameter.\n          in: query\n          name: time\n          required: true\n          explode: true\n          schema:\n            type: array\n            items:\n              type: string\n        - description: Specify that included attributes must have this category. The\n            default is no category filter.\n          in: query\n          name: categoryName\n          required: false\n          schema:\n            type: string\n        - description: The name query string used for filtering attributes. The default is\n            no filter.\n          in: query\n          name: nameFilter\n          required: false\n          schema:\n            type: string\n        - description: An optional value that determines the values to return when values\n            don't exist at the exact time specified. The default is 'Auto'.\n          in: query\n          name: retrievalMode\n          required: false\n          schema:\n            type: string\n        - description: Specifies if the search should include attributes nested further\n            than the immediate attributes of the searchRoot. The default is\n            'false'.\n          in: query\n          name: searchFullHierarchy\n          required: false\n          schema:\n            type: boolean\n        - description: List of fields to be returned in the response, separated by\n            semicolons (;). If this parameter is not specified, all available\n            fields will be returned.\n          in: query\n          name: selectedFields\n          required: false\n          schema:\n            type: string\n        - description: Specified if the search should include attributes with the Excluded\n            property set. The default is 'false'.\n          in: query\n          name: showExcluded\n          required: false\n          schema:\n            type: boolean\n        - description: Specified if the search should include attributes with the Hidden\n            property set. The default is 'false'.\n          in: query\n          name: showHidden\n          required: false\n          schema:\n            type: boolean\n        - description: The order that the returned collection is sorted. The default is\n            'Ascending'.\n          in: query\n          name: sortOrder\n          required: false\n          schema:\n            type: string\n        - description: Specify that included attributes must be members of this template.\n            The default is no template filter.\n          in: query\n          name: templateName\n          required: false\n          schema:\n            type: string\n        - description: The time zone in which the time string will be interpreted. This\n            parameter will be ignored if a time zone is specified in the time\n            string. If no time zone is specified in either places, the PI Web\n            API server time zone will be used.\n          in: query\n          name: timeZone\n          required: false\n          schema:\n            type: string\n        - description: Optional parameter. Used to specify the type of WebID. Useful for\n            URL brevity and other special cases. Default is the value of the\n            configuration item \"WebIDType\".\n          in: query\n          name: webIdType\n          required: false\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: Recorded values of the streams that meet the specified conditions.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Items_StreamValues_\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/Items_StreamValues_\"\n            text/html:\n              schema:\n                $ref: \"#/components/schemas/Items_StreamValues_\"\n            application/x-ms-application:\n              schema:\n                $ref: \"#/components/schemas/Items_StreamValues_\"\n        \"400\":\n          description: The request was malformed.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Errors\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/Errors\"\n            text/html:\n              schema:\n                $ref: \"#/components/schemas/Errors\"\n            application/x-ms-application:\n              schema:\n                $ref: \"#/components/schemas/Errors\"\n        \"502\":\n          description: The request was cancelled.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Errors\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/Errors\"\n            text/html:\n              schema:\n                $ref: \"#/components/schemas/Errors\"\n            application/x-ms-application:\n              schema:\n                $ref: \"#/components/schemas/Errors\"\n      summary: Returns recorded values of attributes for an element, event frame or\n        attribute at the specified times.\n      tags:\n        - StreamSet\n  \"/streamsets/{webId}/summary\":\n    get:\n      deprecated: false\n      description: Any time series value in the response that contains an 'Errors' property\n        indicates PI Web API encountered a handled error during the transfer of\n        the response stream.\n      operationId: StreamSet_GetSummaries\n      parameters:\n        - description: The ID of an element, event frame or attribute, which is the base\n            element or parent of all the stream attributes.\n          in: path\n          name: webId\n          required: true\n          schema:\n            type: string\n        - description: Specifies the method of evaluating the data over the time range. The\n            default is 'TimeWeighted'.\n          in: query\n          name: calculationBasis\n          required: false\n          schema:\n            type: string\n        - description: Specify that included attributes must have this category. The\n            default is no category filter.\n          in: query\n          name: categoryName\n          required: false\n          schema:\n            type: string\n        - description: An optional end time. The default is '*' for element attributes and\n            points. For event frame attributes, the default is the event frame's\n            end time, or '*' if that is not set. Note that if endTime is earlier\n            than startTime, the resulting values will be in time-descending\n            order.\n          in: query\n          name: endTime\n          required: false\n          schema:\n            type: string\n        - description: A string containing a filter expression. Expression variables are\n            relative to the attribute. Use '.' to reference the containing\n            attribute. The default is no filtering.\n          in: query\n          name: filterExpression\n          required: false\n          schema:\n            type: string\n        - description: The name query string used for filtering attributes. The default is\n            no filter.\n          in: query\n          name: nameFilter\n          required: false\n          schema:\n            type: string\n        - description: A time span specifies how often the filter expression is evaluated\n            when computing the summary for an interval, if the sampleType is\n            'Interval'.\n          in: query\n          name: sampleInterval\n          required: false\n          schema:\n            type: string\n        - description: A flag which specifies one or more summaries to compute for each\n            interval over the time range. The default is\n            'ExpressionRecordedValues'.\n          in: query\n          name: sampleType\n          required: false\n          schema:\n            type: string\n        - description: Specifies if the search should include attributes nested further\n            than the immediate attributes of the searchRoot. The default is\n            'false'.\n          in: query\n          name: searchFullHierarchy\n          required: false\n          schema:\n            type: boolean\n        - description: List of fields to be returned in the response, separated by\n            semicolons (;). If this parameter is not specified, all available\n            fields will be returned.\n          in: query\n          name: selectedFields\n          required: false\n          schema:\n            type: string\n        - description: Specified if the search should include attributes with the Excluded\n            property set. The default is 'false'.\n          in: query\n          name: showExcluded\n          required: false\n          schema:\n            type: boolean\n        - description: Specified if the search should include attributes with the Hidden\n            property set. The default is 'false'.\n          in: query\n          name: showHidden\n          required: false\n          schema:\n            type: boolean\n        - description: An optional start time. The default is '*-1d' for element attributes\n            and points. For event frame attributes, the default is the event\n            frame's start time, or '*-1d' if that is not set.\n          in: query\n          name: startTime\n          required: false\n          schema:\n            type: string\n        - description: The duration of each summary interval.\n          in: query\n          name: summaryDuration\n          required: false\n          schema:\n            type: string\n        - description: Specifies the kinds of summaries to produce over the range. The\n            default is 'Total'. Multiple summary types may be specified by using\n            multiple instances of summaryType.\n          in: query\n          name: summaryType\n          required: false\n          explode: true\n          schema:\n            type: array\n            items:\n              type: string\n        - description: Specify that included attributes must be members of this template.\n            The default is no template filter.\n          in: query\n          name: templateName\n          required: false\n          schema:\n            type: string\n        - description: Specifies how to calculate the timestamp for each interval. The\n            default is 'Auto'.\n          in: query\n          name: timeType\n          required: false\n          schema:\n            type: string\n        - description: The time zone in which the time string will be interpreted. This\n            parameter will be ignored if a time zone is specified in the time\n            string. If no time zone is specified in either places, the PI Web\n            API server time zone will be used.\n          in: query\n          name: timeZone\n          required: false\n          schema:\n            type: string\n        - description: Optional parameter. Used to specify the type of WebID. Useful for\n            URL brevity and other special cases. Default is the value of the\n            configuration item \"WebIDType\".\n          in: query\n          name: webIdType\n          required: false\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: Summary values of the streams that meet the specified conditions.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Items_StreamSummaries_\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/Items_StreamSummaries_\"\n            text/html:\n              schema:\n                $ref: \"#/components/schemas/Items_StreamSummaries_\"\n            application/x-ms-application:\n              schema:\n                $ref: \"#/components/schemas/Items_StreamSummaries_\"\n        \"409\":\n          description: Unsupported operation on the given AF object.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Errors\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/Errors\"\n            text/html:\n              schema:\n                $ref: \"#/components/schemas/Errors\"\n            application/x-ms-application:\n              schema:\n                $ref: \"#/components/schemas/Errors\"\n      summary: Returns summary values of the attributes for an element, event frame or\n        attribute.\n      tags:\n        - StreamSet\n  \"/streamsets/{webId}/value\":\n    get:\n      deprecated: false\n      description: Any time series value in the response that contains an 'Errors' property\n        indicates PI Web API encountered a handled error during the transfer of\n        the response stream.\n      operationId: StreamSet_GetValues\n      parameters:\n        - description: The ID of an Element, Event Frame or Attribute, which is the base\n            element or parent of all the stream attributes.\n          in: path\n          name: webId\n          required: true\n          schema:\n            type: string\n        - description: Specify that included attributes must have this category. The\n            default is no category filter.\n          in: query\n          name: categoryName\n          required: false\n          schema:\n            type: string\n        - description: The name query string used for filtering attributes. The default is\n            no filter.\n          in: query\n          name: nameFilter\n          required: false\n          schema:\n            type: string\n        - description: Specifies if the search should include attributes nested further\n            than the immediate attributes of the searchRoot. The default is\n            'false'.\n          in: query\n          name: searchFullHierarchy\n          required: false\n          schema:\n            type: boolean\n        - description: List of fields to be returned in the response, separated by\n            semicolons (;). If this parameter is not specified, all available\n            fields will be returned.\n          in: query\n          name: selectedFields\n          required: false\n          schema:\n            type: string\n        - description: Specified if the search should include attributes with the Excluded\n            property set. The default is 'false'.\n          in: query\n          name: showExcluded\n          required: false\n          schema:\n            type: boolean\n        - description: Specified if the search should include attributes with the Hidden\n            property set. The default is 'false'.\n          in: query\n          name: showHidden\n          required: false\n          schema:\n            type: boolean\n        - description: The field or property of the object used to sort the returned\n            collection. For better performance, by default no sorting is\n            applied. 'Name' is the only supported field by which to sort.\n          in: query\n          name: sortField\n          required: false\n          schema:\n            type: string\n        - description: The order that the returned collection is sorted. The default is\n            'Ascending'\n          in: query\n          name: sortOrder\n          required: false\n          schema:\n            type: string\n        - description: Specify that included attributes must be members of this template.\n            The default is no template filter.\n          in: query\n          name: templateName\n          required: false\n          schema:\n            type: string\n        - description: An AF time string, which is used as the time context to get stream\n            values if it is provided. By default, it is not specified, and the\n            default time context of the AF object will be used.\n          in: query\n          name: time\n          required: false\n          schema:\n            type: string\n        - description: The time zone in which the time string will be interpreted. This\n            parameter will be ignored if a time zone is specified in the time\n            string. If no time zone is specified in either places, the PI Web\n            API server time zone will be used.\n          in: query\n          name: timeZone\n          required: false\n          schema:\n            type: string\n        - description: Optional parameter. Used to specify the type of WebID. Useful for\n            URL brevity and other special cases. Default is the value of the\n            configuration item \"WebIDType\".\n          in: query\n          name: webIdType\n          required: false\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: Summary values of the streams that meet the specified conditions.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Items_StreamValue_\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/Items_StreamValue_\"\n            text/html:\n              schema:\n                $ref: \"#/components/schemas/Items_StreamValue_\"\n            application/x-ms-application:\n              schema:\n                $ref: \"#/components/schemas/Items_StreamValue_\"\n        \"409\":\n          description: Unsupported operation on the given AF object.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Errors\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/Errors\"\n            text/html:\n              schema:\n                $ref: \"#/components/schemas/Errors\"\n            application/x-ms-application:\n              schema:\n                $ref: \"#/components/schemas/Errors\"\n      summary: Returns values of the attributes for an Element, Event Frame or\n        Attribute at the specified time.\n      tags:\n        - StreamSet\n    post:\n      deprecated: false\n      operationId: StreamSet_UpdateValue\n      parameters:\n        - description: The ID of the parent element, event frame, or attribute. Attributes\n            specified in the body must be descendants of the specified object.\n          in: path\n          name: webId\n          required: true\n          schema:\n            type: string\n        - description: The desired AFBufferOption. The default is 'BufferIfPossible'.\n          in: query\n          name: bufferOption\n          required: false\n          schema:\n            type: string\n        - description: The desired AFUpdateOption. The default is 'Replace'.\n          in: query\n          name: updateOption\n          required: false\n          schema:\n            type: string\n      requestBody:\n        $ref: \"#/components/requestBodies/StreamValueArray\"\n      responses:\n        \"200\":\n          description: All updates executed successfully.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Items_Substatus_\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/Items_Substatus_\"\n            text/html:\n              schema:\n                $ref: \"#/components/schemas/Items_Substatus_\"\n            application/x-ms-application:\n              schema:\n                $ref: \"#/components/schemas/Items_Substatus_\"\n        \"207\":\n          description: The operation was a partial success. The response body contains\n            substatuses and errors in the same order as the supplied values.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Items_Substatus_\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/Items_Substatus_\"\n            text/html:\n              schema:\n                $ref: \"#/components/schemas/Items_Substatus_\"\n            application/x-ms-application:\n              schema:\n                $ref: \"#/components/schemas/Items_Substatus_\"\n        \"409\":\n          description: Unsupported operation on the given AF object.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Errors\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/Errors\"\n            text/html:\n              schema:\n                $ref: \"#/components/schemas/Errors\"\n            application/x-ms-application:\n              schema:\n                $ref: \"#/components/schemas/Errors\"\n      summary: Updates a single value for the specified streams.\n      tags:\n        - StreamSet\n  /system:\n    get:\n      deprecated: false\n      operationId: System_Landing\n      responses:\n        \"200\":\n          description: Links to top level collections and system information.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/SystemLanding\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/SystemLanding\"\n            text/html:\n              schema:\n                $ref: \"#/components/schemas/SystemLanding\"\n            application/x-ms-application:\n              schema:\n                $ref: \"#/components/schemas/SystemLanding\"\n      summary: Get system links for this PI System Web API instance.\n      tags:\n        - System\n  /system/cacheinstances:\n    get:\n      deprecated: false\n      operationId: System_CacheInstances\n      responses:\n        \"200\":\n          description: Cache instance information.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Items_CacheInstance_\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/Items_CacheInstance_\"\n            text/html:\n              schema:\n                $ref: \"#/components/schemas/Items_CacheInstance_\"\n            application/x-ms-application:\n              schema:\n                $ref: \"#/components/schemas/Items_CacheInstance_\"\n      summary: Get AF cache instances currently in use by the system. These are caches\n        from which user requests are serviced. The number of instances depends\n        on the number of users connected to the service, the service's\n        authentication method, and the cache instance configuration.\n      tags:\n        - System\n  /system/configuration:\n    get:\n      deprecated: false\n      operationId: Configuration_List\n      responses:\n        \"200\":\n          description: The current system configuration.\n          content:\n            application/json:\n              schema:\n                additionalProperties:\n                  type: object\n                type: object\n            text/json:\n              schema:\n                additionalProperties:\n                  type: object\n                type: object\n            text/html:\n              schema:\n                additionalProperties:\n                  type: object\n                type: object\n            application/x-ms-application:\n              schema:\n                additionalProperties:\n                  type: object\n                type: object\n      summary: Get the current system configuration.\n      tags:\n        - Configuration\n  \"/system/configuration/{key}\":\n    delete:\n      deprecated: false\n      operationId: Configuration_Delete\n      parameters:\n        - description: The key of the configuration item to remove.\n          in: path\n          name: key\n          required: true\n          schema:\n            type: string\n      responses:\n        \"202\":\n          description: The change has been accepted, and will take effect when the service\n            can cleanly restart.\n        \"404\":\n          description: The configuration item does not exist.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Errors\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/Errors\"\n            text/html:\n              schema:\n                $ref: \"#/components/schemas/Errors\"\n            application/x-ms-application:\n              schema:\n                $ref: \"#/components/schemas/Errors\"\n        \"500\":\n          description: An internal error is preventing deletion of the configuration item.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Errors\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/Errors\"\n            text/html:\n              schema:\n                $ref: \"#/components/schemas/Errors\"\n            application/x-ms-application:\n              schema:\n                $ref: \"#/components/schemas/Errors\"\n      summary: Delete a configuration item.\n      tags:\n        - Configuration\n    get:\n      deprecated: false\n      description: The response content may vary based on the configuration item's data\n        type.\n      operationId: Configuration_Get\n      parameters:\n        - description: The key of the configuration item.\n          in: path\n          name: key\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: The value of the configuration item.\n          content:\n            application/json:\n              schema:\n                type: object\n            text/json:\n              schema:\n                type: object\n            text/html:\n              schema:\n                type: object\n            application/x-ms-application:\n              schema:\n                type: object\n        \"404\":\n          description: The configuration item does not exist.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Errors\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/Errors\"\n            text/html:\n              schema:\n                $ref: \"#/components/schemas/Errors\"\n            application/x-ms-application:\n              schema:\n                $ref: \"#/components/schemas/Errors\"\n      summary: Get the value of a configuration item.\n      tags:\n        - Configuration\n  /system/status:\n    get:\n      deprecated: false\n      operationId: System_Status\n      responses:\n        \"200\":\n          description: System Status.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/SystemStatus\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/SystemStatus\"\n            text/html:\n              schema:\n                $ref: \"#/components/schemas/SystemStatus\"\n            application/x-ms-application:\n              schema:\n                $ref: \"#/components/schemas/SystemStatus\"\n      summary: Get information about this PI Web API instance. Examples of information\n        returned include the system uptime, the number of cache instances for\n        this PI System Web API instance, and the system run state.\n      tags:\n        - System\n  /system/userinfo:\n    get:\n      deprecated: false\n      operationId: System_UserInfo\n      responses:\n        \"200\":\n          description: Information about the current user.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/UserInfo\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/UserInfo\"\n            text/html:\n              schema:\n                $ref: \"#/components/schemas/UserInfo\"\n            application/x-ms-application:\n              schema:\n                $ref: \"#/components/schemas/UserInfo\"\n        \"204\":\n          description: No identity is present.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/UserInfo\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/UserInfo\"\n            text/html:\n              schema:\n                $ref: \"#/components/schemas/UserInfo\"\n            application/x-ms-application:\n              schema:\n                $ref: \"#/components/schemas/UserInfo\"\n      summary: Get information about the Windows identity used to fulfill the request.\n        This depends on the service's authentication method and the credentials\n        passed by the client. The impersonation level of the Windows identity is\n        included.\n      tags:\n        - System\n  /system/versions:\n    get:\n      deprecated: false\n      operationId: System_Versions\n      responses:\n        \"200\":\n          description: A dictionary of assembly name-version information pairs.\n          content:\n            application/json:\n              schema:\n                additionalProperties:\n                  $ref: \"#/components/schemas/Version\"\n                type: object\n            text/json:\n              schema:\n                additionalProperties:\n                  $ref: \"#/components/schemas/Version\"\n                type: object\n            text/html:\n              schema:\n                additionalProperties:\n                  $ref: \"#/components/schemas/Version\"\n                type: object\n            application/x-ms-application:\n              schema:\n                additionalProperties:\n                  $ref: \"#/components/schemas/Version\"\n                type: object\n      summary: Get the current versions of the PI Web API instance and all external\n        plugins.\n      tags:\n        - System\n  /tablecategories:\n    get:\n      deprecated: false\n      description: This method returns a Table Category based on the hierarchical path\n        associated with it, and should be used when a path has been received\n        from a separate part of the PI System for use in the PI Web API. Users\n        should primarily search with the WebID when available.\n      operationId: TableCategory_GetByPath\n      parameters:\n        - description: The path to the target table category.\n          in: query\n          name: path\n          required: true\n          schema:\n            type: string\n        - description: List of fields to be returned in the response, separated by\n            semicolons (;). If this parameter is not specified, all available\n            fields will be returned.\n          in: query\n          name: selectedFields\n          required: false\n          schema:\n            type: string\n        - description: Optional parameter. Used to specify the type of WebID. Useful for\n            URL brevity and other special cases. Default is the value of the\n            configuration item \"WebIDType\".\n          in: query\n          name: webIdType\n          required: false\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: The specified table category.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/TableCategory\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/TableCategory\"\n            text/html:\n              schema:\n                $ref: \"#/components/schemas/TableCategory\"\n            application/x-ms-application:\n              schema:\n                $ref: \"#/components/schemas/TableCategory\"\n      summary: Retrieve a table category by path.\n      tags:\n        - TableCategory\n  \"/tablecategories/{webId}\":\n    delete:\n      deprecated: false\n      operationId: TableCategory_Delete\n      parameters:\n        - description: The ID of the table category to delete.\n          in: path\n          name: webId\n          required: true\n          schema:\n            type: string\n      responses:\n        \"204\":\n          description: The table category was deleted.\n      summary: Delete a table category.\n      tags:\n        - TableCategory\n    get:\n      deprecated: false\n      operationId: TableCategory_Get\n      parameters:\n        - description: The id of the table category.\n          in: path\n          name: webId\n          required: true\n          schema:\n            type: string\n        - description: List of fields to be returned in the response, separated by\n            semicolons (;). If this parameter is not specified, all available\n            fields will be returned.\n          in: query\n          name: selectedFields\n          required: false\n          schema:\n            type: string\n        - description: Optional parameter. Used to specify the type of WebID. Useful for\n            URL brevity and other special cases. Default is the value of the\n            configuration item \"WebIDType\".\n          in: query\n          name: webIdType\n          required: false\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: The specified table category.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/TableCategory\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/TableCategory\"\n            text/html:\n              schema:\n                $ref: \"#/components/schemas/TableCategory\"\n            application/x-ms-application:\n              schema:\n                $ref: \"#/components/schemas/TableCategory\"\n      summary: Retrieve a table category.\n      tags:\n        - TableCategory\n    patch:\n      deprecated: false\n      operationId: TableCategory_Update\n      parameters:\n        - description: The ID of the table category to update.\n          in: path\n          name: webId\n          required: true\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/TableCategory\"\n          text/json:\n            schema:\n              $ref: \"#/components/schemas/TableCategory\"\n        description: A partial table category containing the desired changes.\n        required: true\n      responses:\n        \"204\":\n          description: The table category was updated.\n      summary: Update a table category by replacing items in its definition.\n      tags:\n        - TableCategory\n  \"/tablecategories/{webId}/security\":\n    get:\n      deprecated: false\n      operationId: TableCategory_GetSecurity\n      parameters:\n        - description: The ID of the table category for the security to be checked.\n          in: path\n          name: webId\n          required: true\n          schema:\n            type: string\n        - description: The user identity for the security information to be checked.\n            Multiple security identities may be specified with multiple\n            instances of the parameter. If the parameter is not specified, only\n            the current user's security rights will be returned.\n          in: query\n          name: userIdentity\n          required: true\n          explode: true\n          schema:\n            type: array\n            items:\n              type: string\n        - description: Indicates if the security cache should be refreshed before getting\n            security information. The default is 'false'.\n          in: query\n          name: forceRefresh\n          required: false\n          schema:\n            type: boolean\n        - description: List of fields to be returned in the response, separated by\n            semicolons (;). If this parameter is not specified, all available\n            fields will be returned.\n          in: query\n          name: selectedFields\n          required: false\n          schema:\n            type: string\n        - description: Optional parameter. Used to specify the type of WebID. Useful for\n            URL brevity and other special cases. Default is the value of the\n            configuration item \"WebIDType\".\n          in: query\n          name: webIdType\n          required: false\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: Security rights.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Items_SecurityRights_\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/Items_SecurityRights_\"\n            text/html:\n              schema:\n                $ref: \"#/components/schemas/Items_SecurityRights_\"\n            application/x-ms-application:\n              schema:\n                $ref: \"#/components/schemas/Items_SecurityRights_\"\n        \"400\":\n          description: An invalid or local account is specified as the user identity.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Errors\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/Errors\"\n            text/html:\n              schema:\n                $ref: \"#/components/schemas/Errors\"\n            application/x-ms-application:\n              schema:\n                $ref: \"#/components/schemas/Errors\"\n        \"401\":\n          description: Access denied for the specified user identity.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Errors\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/Errors\"\n            text/html:\n              schema:\n                $ref: \"#/components/schemas/Errors\"\n            application/x-ms-application:\n              schema:\n                $ref: \"#/components/schemas/Errors\"\n        \"409\":\n          description: Unsupported when using Anonymous authentication method.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Errors\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/Errors\"\n            text/html:\n              schema:\n                $ref: \"#/components/schemas/Errors\"\n            application/x-ms-application:\n              schema:\n                $ref: \"#/components/schemas/Errors\"\n        \"502\":\n          description: Failed to retrieve the specified user identity.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Errors\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/Errors\"\n            text/html:\n              schema:\n                $ref: \"#/components/schemas/Errors\"\n            application/x-ms-application:\n              schema:\n                $ref: \"#/components/schemas/Errors\"\n      summary: Get the security information of the specified security item associated\n        with the table category for a specified user.\n      tags:\n        - TableCategory\n  \"/tablecategories/{webId}/securityentries\":\n    get:\n      deprecated: false\n      operationId: TableCategory_GetSecurityEntries\n      parameters:\n        - description: The ID of the table category.\n          in: path\n          name: webId\n          required: true\n          schema:\n            type: string\n        - description: The name query string used for filtering security entries. The\n            default is no filter.\n          in: query\n          name: nameFilter\n          required: false\n          schema:\n            type: string\n        - description: List of fields to be returned in the response, separated by\n            semicolons (;). If this parameter is not specified, all available\n            fields will be returned.\n          in: query\n          name: selectedFields\n          required: false\n          schema:\n            type: string\n        - description: Optional parameter. Used to specify the type of WebID. Useful for\n            URL brevity and other special cases. Default is the value of the\n            configuration item \"WebIDType\".\n          in: query\n          name: webIdType\n          required: false\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: A list of security entries matching the specified condition.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Items_SecurityEntry_\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/Items_SecurityEntry_\"\n            text/html:\n              schema:\n                $ref: \"#/components/schemas/Items_SecurityEntry_\"\n            application/x-ms-application:\n              schema:\n                $ref: \"#/components/schemas/Items_SecurityEntry_\"\n      summary: Retrieve the security entries associated with the table category based\n        on the specified criteria. By default, all security entries for this\n        table category are returned.\n      tags:\n        - TableCategory\n    post:\n      deprecated: false\n      operationId: TableCategory_CreateSecurityEntry\n      parameters:\n        - description: The ID of the table category where the security entry will be\n            created.\n          in: path\n          name: webId\n          required: true\n          schema:\n            type: string\n        - description: If false, the new access permissions are only applied to the\n            associated object. If true, the access permissions of children with\n            any parent-child reference types will change when the permissions on\n            the primary parent change.\n          in: query\n          name: applyToChildren\n          required: false\n          schema:\n            type: boolean\n        - description: Optional parameter. Used to specify the type of WebID. Useful for\n            URL brevity and other special cases. Default is the value of the\n            configuration item \"WebIDType\".\n          in: query\n          name: webIdType\n          required: false\n          schema:\n            type: string\n      requestBody:\n        $ref: \"#/components/requestBodies/SecurityEntry\"\n      responses:\n        \"201\":\n          description: The security entry was created. The response's Location header is a\n            link to the security entry.\n      summary: Create a security entry owned by the table category.\n      tags:\n        - TableCategory\n  \"/tablecategories/{webId}/securityentries/{name}\":\n    delete:\n      deprecated: false\n      operationId: TableCategory_DeleteSecurityEntry\n      parameters:\n        - description: The name of the security entry. For every backslash character (\\) in\n            the security entry name, replace with asterisk (*). As an example,\n            use domain*username instead of domain\\username.\n          in: path\n          name: name\n          required: true\n          schema:\n            type: string\n        - description: The ID of the table category where the security entry will be\n            deleted.\n          in: path\n          name: webId\n          required: true\n          schema:\n            type: string\n        - description: If false, the new access permissions are only applied to the\n            associated object. If true, the access permissions of children with\n            any parent-child reference types will change when the permissions on\n            the primary parent change.\n          in: query\n          name: applyToChildren\n          required: false\n          schema:\n            type: boolean\n      responses:\n        \"204\":\n          description: The security entry was deleted.\n      summary: Delete a security entry owned by the table category.\n      tags:\n        - TableCategory\n    get:\n      deprecated: false\n      operationId: TableCategory_GetSecurityEntryByName\n      parameters:\n        - description: The name of the security entry. For every backslash character (\\) in\n            the security entry name, replace with asterisk (*). As an example,\n            use domain*username instead of domain\\username.\n          in: path\n          name: name\n          required: true\n          schema:\n            type: string\n        - description: The ID of the table category.\n          in: path\n          name: webId\n          required: true\n          schema:\n            type: string\n        - description: List of fields to be returned in the response, separated by\n            semicolons (;). If this parameter is not specified, all available\n            fields will be returned.\n          in: query\n          name: selectedFields\n          required: false\n          schema:\n            type: string\n        - description: Optional parameter. Used to specify the type of WebID. Useful for\n            URL brevity and other special cases. Default is the value of the\n            configuration item \"WebIDType\".\n          in: query\n          name: webIdType\n          required: false\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: The security entry matching the specified condition.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/SecurityEntry\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/SecurityEntry\"\n            text/html:\n              schema:\n                $ref: \"#/components/schemas/SecurityEntry\"\n            application/x-ms-application:\n              schema:\n                $ref: \"#/components/schemas/SecurityEntry\"\n        \"404\":\n          description: The security entry with the specified name is not found.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Errors\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/Errors\"\n            text/html:\n              schema:\n                $ref: \"#/components/schemas/Errors\"\n            application/x-ms-application:\n              schema:\n                $ref: \"#/components/schemas/Errors\"\n      summary: Retrieve the security entry associated with the table category with the\n        specified name.\n      tags:\n        - TableCategory\n    put:\n      deprecated: false\n      operationId: TableCategory_UpdateSecurityEntry\n      parameters:\n        - description: The name of the security entry.\n          in: path\n          name: name\n          required: true\n          schema:\n            type: string\n        - description: The ID of the table category where the security entry will be\n            updated.\n          in: path\n          name: webId\n          required: true\n          schema:\n            type: string\n        - description: If false, the new access permissions are only applied to the\n            associated object. If true, the access permissions of children with\n            any parent-child reference types will change when the permissions on\n            the primary parent change.\n          in: query\n          name: applyToChildren\n          required: false\n          schema:\n            type: boolean\n      requestBody:\n        $ref: \"#/components/requestBodies/SecurityEntry2\"\n      responses:\n        \"204\":\n          description: The security entry was updated.\n      summary: Update a security entry owned by the table category.\n      tags:\n        - TableCategory\n  /tables:\n    get:\n      deprecated: false\n      operationId: Table_GetByPath\n      parameters:\n        - description: The path to the table.\n          in: query\n          name: path\n          required: true\n          schema:\n            type: string\n        - description: List of fields to be returned in the response, separated by\n            semicolons (;). If this parameter is not specified, all available\n            fields will be returned.\n          in: query\n          name: selectedFields\n          required: false\n          schema:\n            type: string\n        - description: Optional parameter. Used to specify the type of WebID. Useful for\n            URL brevity and other special cases. Default is the value of the\n            configuration item \"WebIDType\".\n          in: query\n          name: webIdType\n          required: false\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: The specified table.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Table\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/Table\"\n            text/html:\n              schema:\n                $ref: \"#/components/schemas/Table\"\n            application/x-ms-application:\n              schema:\n                $ref: \"#/components/schemas/Table\"\n      summary: Retrieve a table by path.\n      tags:\n        - Table\n  \"/tables/{webId}\":\n    delete:\n      deprecated: false\n      operationId: Table_Delete\n      parameters:\n        - description: The ID of the table to delete.\n          in: path\n          name: webId\n          required: true\n          schema:\n            type: string\n      responses:\n        \"204\":\n          description: The table was deleted.\n      summary: Delete a table.\n      tags:\n        - Table\n    get:\n      deprecated: false\n      operationId: Table_Get\n      parameters:\n        - description: The ID of the table.\n          in: path\n          name: webId\n          required: true\n          schema:\n            type: string\n        - description: List of fields to be returned in the response, separated by\n            semicolons (;). If this parameter is not specified, all available\n            fields will be returned.\n          in: query\n          name: selectedFields\n          required: false\n          schema:\n            type: string\n        - description: Optional parameter. Used to specify the type of WebID. Useful for\n            URL brevity and other special cases. Default is the value of the\n            configuration item \"WebIDType\".\n          in: query\n          name: webIdType\n          required: false\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: The specified table.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Table\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/Table\"\n            text/html:\n              schema:\n                $ref: \"#/components/schemas/Table\"\n            application/x-ms-application:\n              schema:\n                $ref: \"#/components/schemas/Table\"\n      summary: Retrieve a table.\n      tags:\n        - Table\n    patch:\n      deprecated: false\n      operationId: Table_Update\n      parameters:\n        - description: The ID of the table to update.\n          in: path\n          name: webId\n          required: true\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/Table\"\n          text/json:\n            schema:\n              $ref: \"#/components/schemas/Table\"\n        description: A partial table containing the desired changes.\n        required: true\n      responses:\n        \"204\":\n          description: The table was updated.\n      summary: Update a table by replacing items in its definition.\n      tags:\n        - Table\n  \"/tables/{webId}/categories\":\n    get:\n      deprecated: false\n      operationId: Table_GetCategories\n      parameters:\n        - description: The ID of the table.\n          in: path\n          name: webId\n          required: true\n          schema:\n            type: string\n        - description: List of fields to be returned in the response, separated by\n            semicolons (;). If this parameter is not specified, all available\n            fields will be returned.\n          in: query\n          name: selectedFields\n          required: false\n          schema:\n            type: string\n        - description: Optional parameter. Used to specify the type of WebID. Useful for\n            URL brevity and other special cases. Default is the value of the\n            configuration item \"WebIDType\".\n          in: query\n          name: webIdType\n          required: false\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: A list of categories.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Items_TableCategory_\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/Items_TableCategory_\"\n            text/html:\n              schema:\n                $ref: \"#/components/schemas/Items_TableCategory_\"\n            application/x-ms-application:\n              schema:\n                $ref: \"#/components/schemas/Items_TableCategory_\"\n      summary: Get a table's categories.\n      tags:\n        - Table\n  \"/tables/{webId}/data\":\n    get:\n      deprecated: false\n      operationId: Table_GetData\n      parameters:\n        - description: The ID of the table.\n          in: path\n          name: webId\n          required: true\n          schema:\n            type: string\n        - description: List of fields to be returned in the response, separated by\n            semicolons (;). If this parameter is not specified, all available\n            fields will be returned.\n          in: query\n          name: selectedFields\n          required: false\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: The data for the specified table.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/TableData\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/TableData\"\n            text/html:\n              schema:\n                $ref: \"#/components/schemas/TableData\"\n            application/x-ms-application:\n              schema:\n                $ref: \"#/components/schemas/TableData\"\n      summary: Get the table's data.\n      tags:\n        - Table\n    put:\n      deprecated: false\n      operationId: Table_UpdateData\n      parameters:\n        - description: The ID of the table on which to update the data.\n          in: path\n          name: webId\n          required: true\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/TableData\"\n          text/json:\n            schema:\n              $ref: \"#/components/schemas/TableData\"\n        description: The new table data definition.\n        required: true\n      responses:\n        \"201\":\n          description: The table data was updated.\n      summary: Update the table's data.\n      tags:\n        - Table\n  \"/tables/{webId}/security\":\n    get:\n      deprecated: false\n      operationId: Table_GetSecurity\n      parameters:\n        - description: The ID of the table for the security to be checked.\n          in: path\n          name: webId\n          required: true\n          schema:\n            type: string\n        - description: The user identity for the security information to be checked.\n            Multiple security identities may be specified with multiple\n            instances of the parameter. If the parameter is not specified, only\n            the current user's security rights will be returned.\n          in: query\n          name: userIdentity\n          required: true\n          explode: true\n          schema:\n            type: array\n            items:\n              type: string\n        - description: Indicates if the security cache should be refreshed before getting\n            security information. The default is 'false'.\n          in: query\n          name: forceRefresh\n          required: false\n          schema:\n            type: boolean\n        - description: List of fields to be returned in the response, separated by\n            semicolons (;). If this parameter is not specified, all available\n            fields will be returned.\n          in: query\n          name: selectedFields\n          required: false\n          schema:\n            type: string\n        - description: Optional parameter. Used to specify the type of WebID. Useful for\n            URL brevity and other special cases. Default is the value of the\n            configuration item \"WebIDType\".\n          in: query\n          name: webIdType\n          required: false\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: Security rights.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Items_SecurityRights_\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/Items_SecurityRights_\"\n            text/html:\n              schema:\n                $ref: \"#/components/schemas/Items_SecurityRights_\"\n            application/x-ms-application:\n              schema:\n                $ref: \"#/components/schemas/Items_SecurityRights_\"\n        \"400\":\n          description: An invalid or local account is specified as the user identity.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Errors\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/Errors\"\n            text/html:\n              schema:\n                $ref: \"#/components/schemas/Errors\"\n            application/x-ms-application:\n              schema:\n                $ref: \"#/components/schemas/Errors\"\n        \"401\":\n          description: Access denied for the specified user identity.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Errors\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/Errors\"\n            text/html:\n              schema:\n                $ref: \"#/components/schemas/Errors\"\n            application/x-ms-application:\n              schema:\n                $ref: \"#/components/schemas/Errors\"\n        \"409\":\n          description: Unsupported when using Anonymous authentication method.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Errors\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/Errors\"\n            text/html:\n              schema:\n                $ref: \"#/components/schemas/Errors\"\n            application/x-ms-application:\n              schema:\n                $ref: \"#/components/schemas/Errors\"\n        \"502\":\n          description: Failed to retrieve the specified user identity.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Errors\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/Errors\"\n            text/html:\n              schema:\n                $ref: \"#/components/schemas/Errors\"\n            application/x-ms-application:\n              schema:\n                $ref: \"#/components/schemas/Errors\"\n      summary: Get the security information of the specified security item associated\n        with the table for a specified user.\n      tags:\n        - Table\n  \"/tables/{webId}/securityentries\":\n    get:\n      deprecated: false\n      operationId: Table_GetSecurityEntries\n      parameters:\n        - description: The ID of the table.\n          in: path\n          name: webId\n          required: true\n          schema:\n            type: string\n        - description: The name query string used for filtering security entries. The\n            default is no filter.\n          in: query\n          name: nameFilter\n          required: false\n          schema:\n            type: string\n        - description: List of fields to be returned in the response, separated by\n            semicolons (;). If this parameter is not specified, all available\n            fields will be returned.\n          in: query\n          name: selectedFields\n          required: false\n          schema:\n            type: string\n        - description: Optional parameter. Used to specify the type of WebID. Useful for\n            URL brevity and other special cases. Default is the value of the\n            configuration item \"WebIDType\".\n          in: query\n          name: webIdType\n          required: false\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: A list of security entries matching the specified condition.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Items_SecurityEntry_\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/Items_SecurityEntry_\"\n            text/html:\n              schema:\n                $ref: \"#/components/schemas/Items_SecurityEntry_\"\n            application/x-ms-application:\n              schema:\n                $ref: \"#/components/schemas/Items_SecurityEntry_\"\n      summary: Retrieve the security entries associated with the table based on the\n        specified criteria. By default, all security entries for this table are\n        returned.\n      tags:\n        - Table\n    post:\n      deprecated: false\n      operationId: Table_CreateSecurityEntry\n      parameters:\n        - description: The ID of the table where the security entry will be created.\n          in: path\n          name: webId\n          required: true\n          schema:\n            type: string\n        - description: If false, the new access permissions are only applied to the\n            associated object. If true, the access permissions of children with\n            any parent-child reference types will change when the permissions on\n            the primary parent change.\n          in: query\n          name: applyToChildren\n          required: false\n          schema:\n            type: boolean\n        - description: Optional parameter. Used to specify the type of WebID. Useful for\n            URL brevity and other special cases. Default is the value of the\n            configuration item \"WebIDType\".\n          in: query\n          name: webIdType\n          required: false\n          schema:\n            type: string\n      requestBody:\n        $ref: \"#/components/requestBodies/SecurityEntry\"\n      responses:\n        \"201\":\n          description: The security entry was created. The response's Location header is a\n            link to the security entry.\n      summary: Create a security entry owned by the table.\n      tags:\n        - Table\n  \"/tables/{webId}/securityentries/{name}\":\n    delete:\n      deprecated: false\n      operationId: Table_DeleteSecurityEntry\n      parameters:\n        - description: The name of the security entry. For every backslash character (\\) in\n            the security entry name, replace with asterisk (*). As an example,\n            use domain*username instead of domain\\username.\n          in: path\n          name: name\n          required: true\n          schema:\n            type: string\n        - description: The ID of the table where the security entry will be deleted.\n          in: path\n          name: webId\n          required: true\n          schema:\n            type: string\n        - description: If false, the new access permissions are only applied to the\n            associated object. If true, the access permissions of children with\n            any parent-child reference types will change when the permissions on\n            the primary parent change.\n          in: query\n          name: applyToChildren\n          required: false\n          schema:\n            type: boolean\n      responses:\n        \"204\":\n          description: The security entry was deleted.\n      summary: Delete a security entry owned by the table.\n      tags:\n        - Table\n    get:\n      deprecated: false\n      operationId: Table_GetSecurityEntryByName\n      parameters:\n        - description: The name of the security entry. For every backslash character (\\) in\n            the security entry name, replace with asterisk (*). As an example,\n            use domain*username instead of domain\\username.\n          in: path\n          name: name\n          required: true\n          schema:\n            type: string\n        - description: The ID of the table.\n          in: path\n          name: webId\n          required: true\n          schema:\n            type: string\n        - description: List of fields to be returned in the response, separated by\n            semicolons (;). If this parameter is not specified, all available\n            fields will be returned.\n          in: query\n          name: selectedFields\n          required: false\n          schema:\n            type: string\n        - description: Optional parameter. Used to specify the type of WebID. Useful for\n            URL brevity and other special cases. Default is the value of the\n            configuration item \"WebIDType\".\n          in: query\n          name: webIdType\n          required: false\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: The security entry matching the specified condition.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/SecurityEntry\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/SecurityEntry\"\n            text/html:\n              schema:\n                $ref: \"#/components/schemas/SecurityEntry\"\n            application/x-ms-application:\n              schema:\n                $ref: \"#/components/schemas/SecurityEntry\"\n        \"404\":\n          description: The security entry with the specified name is not found.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Errors\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/Errors\"\n            text/html:\n              schema:\n                $ref: \"#/components/schemas/Errors\"\n            application/x-ms-application:\n              schema:\n                $ref: \"#/components/schemas/Errors\"\n      summary: Retrieve the security entry associated with the table with the specified\n        name.\n      tags:\n        - Table\n    put:\n      deprecated: false\n      operationId: Table_UpdateSecurityEntry\n      parameters:\n        - description: The name of the security entry.\n          in: path\n          name: name\n          required: true\n          schema:\n            type: string\n        - description: The ID of the table where the security entry will be updated.\n          in: path\n          name: webId\n          required: true\n          schema:\n            type: string\n        - description: If false, the new access permissions are only applied to the\n            associated object. If true, the access permissions of children with\n            any parent-child reference types will change when the permissions on\n            the primary parent change.\n          in: query\n          name: applyToChildren\n          required: false\n          schema:\n            type: boolean\n      requestBody:\n        $ref: \"#/components/requestBodies/SecurityEntry2\"\n      responses:\n        \"204\":\n          description: The security entry was updated.\n      summary: Update a security entry owned by the table.\n      tags:\n        - Table\n  /timeruleplugins:\n    get:\n      deprecated: false\n      description: This method returns a Time Rule Plug-in based on the hierarchical path\n        associated with it, and should be used when a path has been received\n        from a separate part of the PI System for use in the PI Web API. Users\n        should primarily search with the WebID when available.\n      operationId: TimeRulePlugIn_GetByPath\n      parameters:\n        - description: The path to the Time Rule Plug-in.\n          in: query\n          name: path\n          required: true\n          schema:\n            type: string\n        - description: List of fields to be returned in the response, separated by\n            semicolons (;). If this parameter is not specified, all available\n            fields will be returned.\n          in: query\n          name: selectedFields\n          required: false\n          schema:\n            type: string\n        - description: Optional parameter. Used to specify the type of WebID. Useful for\n            URL brevity and other special cases. Default is the value of the\n            configuration item \"WebIDType\".\n          in: query\n          name: webIdType\n          required: false\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: The specified Time Rule Plug-in.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/TimeRulePlugIn\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/TimeRulePlugIn\"\n            text/html:\n              schema:\n                $ref: \"#/components/schemas/TimeRulePlugIn\"\n            application/x-ms-application:\n              schema:\n                $ref: \"#/components/schemas/TimeRulePlugIn\"\n      summary: Retrieve a Time Rule Plug-in by path.\n      tags:\n        - TimeRulePlugIn\n  \"/timeruleplugins/{webId}\":\n    get:\n      deprecated: false\n      operationId: TimeRulePlugIn_Get\n      parameters:\n        - description: The ID of the Time Rule Plug-in.\n          in: path\n          name: webId\n          required: true\n          schema:\n            type: string\n        - description: List of fields to be returned in the response, separated by\n            semicolons (;). If this parameter is not specified, all available\n            fields will be returned.\n          in: query\n          name: selectedFields\n          required: false\n          schema:\n            type: string\n        - description: Optional parameter. Used to specify the type of WebID. Useful for\n            URL brevity and other special cases. Default is the value of the\n            configuration item \"WebIDType\".\n          in: query\n          name: webIdType\n          required: false\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: The specified Time Rule Plug-in.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/TimeRulePlugIn\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/TimeRulePlugIn\"\n            text/html:\n              schema:\n                $ref: \"#/components/schemas/TimeRulePlugIn\"\n            application/x-ms-application:\n              schema:\n                $ref: \"#/components/schemas/TimeRulePlugIn\"\n      summary: Retrieve a Time Rule Plug-in.\n      tags:\n        - TimeRulePlugIn\n  /timerules:\n    get:\n      deprecated: false\n      description: This method returns a Time Rule based on the hierarchical path\n        associated with it, and should be used when a path has been received\n        from a separate part of the PI System for use in the PI Web API. Users\n        should primarily search with the WebID when available.\n      operationId: TimeRule_GetByPath\n      parameters:\n        - description: The path to the Time Rule.\n          in: query\n          name: path\n          required: true\n          schema:\n            type: string\n        - description: List of fields to be returned in the response, separated by\n            semicolons (;). If this parameter is not specified, all available\n            fields will be returned.\n          in: query\n          name: selectedFields\n          required: false\n          schema:\n            type: string\n        - description: Optional parameter. Used to specify the type of WebID. Useful for\n            URL brevity and other special cases. Default is the value of the\n            configuration item \"WebIDType\".\n          in: query\n          name: webIdType\n          required: false\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: The requested Time Rule.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/TimeRule\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/TimeRule\"\n            text/html:\n              schema:\n                $ref: \"#/components/schemas/TimeRule\"\n            application/x-ms-application:\n              schema:\n                $ref: \"#/components/schemas/TimeRule\"\n      summary: Retrieve a Time Rule by path.\n      tags:\n        - TimeRule\n  \"/timerules/{webId}\":\n    delete:\n      deprecated: false\n      operationId: TimeRule_Delete\n      parameters:\n        - description: The ID of the Time Rule.\n          in: path\n          name: webId\n          required: true\n          schema:\n            type: string\n      responses:\n        \"204\":\n          description: The Time Rule was deleted.\n      summary: Delete a Time Rule.\n      tags:\n        - TimeRule\n    get:\n      deprecated: false\n      operationId: TimeRule_Get\n      parameters:\n        - description: The ID of the Time Rule.\n          in: path\n          name: webId\n          required: true\n          schema:\n            type: string\n        - description: List of fields to be returned in the response, separated by\n            semicolons (;). If this parameter is not specified, all available\n            fields will be returned.\n          in: query\n          name: selectedFields\n          required: false\n          schema:\n            type: string\n        - description: Optional parameter. Used to specify the type of WebID. Useful for\n            URL brevity and other special cases. Default is the value of the\n            configuration item \"WebIDType\".\n          in: query\n          name: webIdType\n          required: false\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: The requested Time Rule.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/TimeRule\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/TimeRule\"\n            text/html:\n              schema:\n                $ref: \"#/components/schemas/TimeRule\"\n            application/x-ms-application:\n              schema:\n                $ref: \"#/components/schemas/TimeRule\"\n      summary: Retrieve a Time Rule.\n      tags:\n        - TimeRule\n    patch:\n      deprecated: false\n      operationId: TimeRule_Update\n      parameters:\n        - description: The ID of the Time Rule.\n          in: path\n          name: webId\n          required: true\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/TimeRule\"\n          text/json:\n            schema:\n              $ref: \"#/components/schemas/TimeRule\"\n        description: A partial Time Rule containing the desired changes.\n        required: true\n      responses:\n        \"204\":\n          description: The Time Rule was updated.\n      summary: Update a Time Rule by replacing items in its definition.\n      tags:\n        - TimeRule\n  /unitclasses:\n    get:\n      deprecated: false\n      operationId: UnitClass_GetByPath\n      parameters:\n        - description: The path to the unit class.\n          in: query\n          name: path\n          required: true\n          schema:\n            type: string\n        - description: List of fields to be returned in the response, separated by\n            semicolons (;). If this parameter is not specified, all available\n            fields will be returned.\n          in: query\n          name: selectedFields\n          required: false\n          schema:\n            type: string\n        - description: Optional parameter. Used to specify the type of WebID. Useful for\n            URL brevity and other special cases. Default is the value of the\n            configuration item \"WebIDType\".\n          in: query\n          name: webIdType\n          required: false\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: The specified unit class.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/UnitClass\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/UnitClass\"\n            text/html:\n              schema:\n                $ref: \"#/components/schemas/UnitClass\"\n            application/x-ms-application:\n              schema:\n                $ref: \"#/components/schemas/UnitClass\"\n      summary: Retrieve a unit class by path.\n      tags:\n        - UnitClass\n  \"/unitclasses/{webId}\":\n    delete:\n      deprecated: false\n      operationId: UnitClass_Delete\n      parameters:\n        - description: The ID of the unit class.\n          in: path\n          name: webId\n          required: true\n          schema:\n            type: string\n      responses:\n        \"204\":\n          description: The unit class was deleted.\n      summary: Delete a unit class.\n      tags:\n        - UnitClass\n    get:\n      deprecated: false\n      operationId: UnitClass_Get\n      parameters:\n        - description: The ID of the unit class.\n          in: path\n          name: webId\n          required: true\n          schema:\n            type: string\n        - description: List of fields to be returned in the response, separated by\n            semicolons (;). If this parameter is not specified, all available\n            fields will be returned.\n          in: query\n          name: selectedFields\n          required: false\n          schema:\n            type: string\n        - description: Optional parameter. Used to specify the type of WebID. Useful for\n            URL brevity and other special cases. Default is the value of the\n            configuration item \"WebIDType\".\n          in: query\n          name: webIdType\n          required: false\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: The specified unit class.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/UnitClass\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/UnitClass\"\n            text/html:\n              schema:\n                $ref: \"#/components/schemas/UnitClass\"\n            application/x-ms-application:\n              schema:\n                $ref: \"#/components/schemas/UnitClass\"\n      summary: Retrieve a unit class.\n      tags:\n        - UnitClass\n    patch:\n      deprecated: false\n      operationId: UnitClass_Update\n      parameters:\n        - description: The ID of the unit class.\n          in: path\n          name: webId\n          required: true\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/UnitClass\"\n          text/json:\n            schema:\n              $ref: \"#/components/schemas/UnitClass\"\n        description: A partial unit class containing the desired changes.\n        required: true\n      responses:\n        \"204\":\n          description: The unit class was updated.\n      summary: Update a unit class.\n      tags:\n        - UnitClass\n  \"/unitclasses/{webId}/canonicalunit\":\n    get:\n      deprecated: false\n      operationId: UnitClass_GetCanonicalUnit\n      parameters:\n        - description: The ID of unit class.\n          in: path\n          name: webId\n          required: true\n          schema:\n            type: string\n        - description: List of fields to be returned in the response, separated by\n            semicolons (;). If this parameter is not specified, all available\n            fields will be returned.\n          in: query\n          name: selectedFields\n          required: false\n          schema:\n            type: string\n        - description: Optional parameter. Used to specify the type of WebID. Useful for\n            URL brevity and other special cases. Default is the value of the\n            configuration item \"WebIDType\".\n          in: query\n          name: webIdType\n          required: false\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: the canonical unit of the specified unit class.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Unit\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/Unit\"\n            text/html:\n              schema:\n                $ref: \"#/components/schemas/Unit\"\n            application/x-ms-application:\n              schema:\n                $ref: \"#/components/schemas/Unit\"\n      summary: Get the canonical unit of a unit class.\n      tags:\n        - UnitClass\n  \"/unitclasses/{webId}/units\":\n    get:\n      deprecated: false\n      operationId: UnitClass_GetUnits\n      parameters:\n        - description: The ID of unit class.\n          in: path\n          name: webId\n          required: true\n          schema:\n            type: string\n        - description: List of fields to be returned in the response, separated by\n            semicolons (;). If this parameter is not specified, all available\n            fields will be returned.\n          in: query\n          name: selectedFields\n          required: false\n          schema:\n            type: string\n        - description: Optional parameter. Used to specify the type of WebID. Useful for\n            URL brevity and other special cases. Default is the value of the\n            configuration item \"WebIDType\".\n          in: query\n          name: webIdType\n          required: false\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: The list of units in the unit class.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Unit\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/Unit\"\n            text/html:\n              schema:\n                $ref: \"#/components/schemas/Unit\"\n            application/x-ms-application:\n              schema:\n                $ref: \"#/components/schemas/Unit\"\n      summary: Get a list of all units belonging to the unit class.\n      tags:\n        - UnitClass\n    post:\n      deprecated: false\n      operationId: UnitClass_CreateUnit\n      parameters:\n        - description: The ID of the server.\n          in: path\n          name: webId\n          required: true\n          schema:\n            type: string\n        - description: Optional parameter. Used to specify the type of WebID. Useful for\n            URL brevity and other special cases. Default is the value of the\n            configuration item \"WebIDType\".\n          in: query\n          name: webIdType\n          required: false\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/Unit\"\n          text/json:\n            schema:\n              $ref: \"#/components/schemas/Unit\"\n        description: The new unit definition.\n        required: true\n      responses:\n        \"201\":\n          description: The unit was created. The response's Location header is a link to\n            the unit.\n      summary: Create a unit in the specified Unit Class.\n      tags:\n        - UnitClass\n  /units:\n    get:\n      deprecated: false\n      operationId: Unit_GetByPath\n      parameters:\n        - description: The path to the unit.\n          in: query\n          name: path\n          required: true\n          schema:\n            type: string\n        - description: List of fields to be returned in the response, separated by\n            semicolons (;). If this parameter is not specified, all available\n            fields will be returned.\n          in: query\n          name: selectedFields\n          required: false\n          schema:\n            type: string\n        - description: Optional parameter. Used to specify the type of WebID. Useful for\n            URL brevity and other special cases. Default is the value of the\n            configuration item \"WebIDType\".\n          in: query\n          name: webIdType\n          required: false\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: The specified unit.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Unit\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/Unit\"\n            text/html:\n              schema:\n                $ref: \"#/components/schemas/Unit\"\n            application/x-ms-application:\n              schema:\n                $ref: \"#/components/schemas/Unit\"\n      summary: Retrieve a unit by path.\n      tags:\n        - Unit\n  \"/units/{webId}\":\n    delete:\n      deprecated: false\n      operationId: Unit_Delete\n      parameters:\n        - description: The ID of the unit.\n          in: path\n          name: webId\n          required: true\n          schema:\n            type: string\n      responses:\n        \"204\":\n          description: The unit was deleted.\n      summary: Delete a unit.\n      tags:\n        - Unit\n    get:\n      deprecated: false\n      operationId: Unit_Get\n      parameters:\n        - description: The ID of the unit.\n          in: path\n          name: webId\n          required: true\n          schema:\n            type: string\n        - description: List of fields to be returned in the response, separated by\n            semicolons (;). If this parameter is not specified, all available\n            fields will be returned.\n          in: query\n          name: selectedFields\n          required: false\n          schema:\n            type: string\n        - description: Optional parameter. Used to specify the type of WebID. Useful for\n            URL brevity and other special cases. Default is the value of the\n            configuration item \"WebIDType\".\n          in: query\n          name: webIdType\n          required: false\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: The specified unit.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Unit\"\n            text/json:\n              schema:\n                $ref: \"#/components/schemas/Unit\"\n            text/html:\n              schema:\n                $ref: \"#/components/schemas/Unit\"\n            application/x-ms-application:\n              schema:\n                $ref: \"#/components/schemas/Unit\"\n      summary: Retrieve a unit.\n      tags:\n        - Unit\n    patch:\n      deprecated: false\n      operationId: Unit_Update\n      parameters:\n        - description: The ID of the unit.\n          in: path\n          name: webId\n          required: true\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/Unit\"\n          text/json:\n            schema:\n              $ref: \"#/components/schemas/Unit\"\n        description: A partial unit containing the desired changes.\n        required: true\n      responses:\n        \"204\":\n          description: The unit was updated.\n      summary: Update a unit.\n      tags:\n        - Unit\nservers:\n  - url: https://devdata.osisoft.com/piwebapi\ncomponents:\n  requestBodies:\n    NotificationRuleSubscriber:\n      content:\n        application/json:\n          schema:\n            $ref: \"#/components/schemas/NotificationRuleSubscriber\"\n        text/json:\n          schema:\n            $ref: \"#/components/schemas/NotificationRuleSubscriber\"\n      description: The new notification rule subscriber definition.\n      required: true\n    SecurityEntry:\n      content:\n        application/json:\n          schema:\n            $ref: \"#/components/schemas/SecurityEntry\"\n        text/json:\n          schema:\n            $ref: \"#/components/schemas/SecurityEntry\"\n      description: The new security entry definition. The full list of allow and deny\n        rights must be supplied.\n      required: true\n    SecurityEntry2:\n      content:\n        application/json:\n          schema:\n            $ref: \"#/components/schemas/SecurityEntry\"\n        text/json:\n          schema:\n            $ref: \"#/components/schemas/SecurityEntry\"\n      description: The new security entry definition. The full list of allow and deny\n        rights must be supplied or they will be removed.\n      required: true\n    Element:\n      content:\n        application/json:\n          schema:\n            $ref: \"#/components/schemas/Element\"\n        text/json:\n          schema:\n            $ref: \"#/components/schemas/Element\"\n      description: The new element definition.\n      required: true\n    StreamValueArray:\n      content:\n        application/json:\n          schema:\n            items:\n              $ref: \"#/components/schemas/StreamValue\"\n            type: array\n        text/json:\n          schema:\n            items:\n              $ref: \"#/components/schemas/StreamValue\"\n            type: array\n      description: The values to add or update.\n      required: true\n    EnumerationSet:\n      content:\n        application/json:\n          schema:\n            $ref: \"#/components/schemas/EnumerationSet\"\n        text/json:\n          schema:\n            $ref: \"#/components/schemas/EnumerationSet\"\n      description: The new enumeration set definition.\n      required: true\n    EventFrame:\n      content:\n        application/json:\n          schema:\n            $ref: \"#/components/schemas/EventFrame\"\n        text/json:\n          schema:\n            $ref: \"#/components/schemas/EventFrame\"\n      description: The new event frame definition.\n      required: true\n    Attribute:\n      content:\n        application/json:\n          schema:\n            $ref: \"#/components/schemas/Attribute\"\n        text/json:\n          schema:\n            $ref: \"#/components/schemas/Attribute\"\n      description: The definition of the new attribute.\n      required: true\n    AttributeTemplate:\n      content:\n        application/json:\n          schema:\n            $ref: \"#/components/schemas/AttributeTemplate\"\n        text/json:\n          schema:\n            $ref: \"#/components/schemas/AttributeTemplate\"\n      description: The attribute template definition.\n      required: true\n    SearchByAttribute:\n      content:\n        application/json:\n          schema:\n            $ref: \"#/components/schemas/SearchByAttribute\"\n        text/json:\n          schema:\n            $ref: \"#/components/schemas/SearchByAttribute\"\n      description: The query of search by attribute.\n      required: true\n    StreamValuesArray:\n      content:\n        application/json:\n          schema:\n            items:\n              $ref: \"#/components/schemas/StreamValues\"\n            type: array\n        text/json:\n          schema:\n            items:\n              $ref: \"#/components/schemas/StreamValues\"\n            type: array\n      description: The values to add or update.\n      required: true\n  schemas:\n    Ambiguous:\n      properties:\n        Reason:\n          example: The requested resource has multiple representations.\n          type: string\n          x-disallow-patch: true\n          x-disallow-post: true\n          x-disallow-put: true\n      type: object\n    Analysis:\n      properties:\n        AnalysisRulePlugInName:\n          example: PerformanceEquation\n          type: string\n        AutoCreated:\n          example: false\n          type: boolean\n          x-disallow-patch: true\n          x-disallow-post: true\n          x-disallow-put: true\n        CategoryNames:\n          example:\n            - MyAnalysisCategory\n          items:\n            type: string\n          type: array\n        Description:\n          example: \"\"\n          type: string\n        GroupId:\n          example: 0\n          format: int32\n          type: integer\n        HasNotification:\n          example: false\n          type: boolean\n          x-disallow-patch: true\n          x-disallow-post: true\n          x-disallow-put: true\n        HasTarget:\n          example: true\n          type: boolean\n          x-disallow-patch: true\n          x-disallow-post: true\n          x-disallow-put: true\n        HasTemplate:\n          example: false\n          type: boolean\n          x-disallow-patch: true\n          x-disallow-post: true\n          x-disallow-put: true\n        Id:\n          example: 11853358-94bf-11e7-8443-00155d84c200\n          format: uuid\n          type: string\n          x-disallow-patch: true\n          x-disallow-post: true\n          x-disallow-put: true\n        IsConfigured:\n          example: false\n          type: boolean\n          x-disallow-patch: true\n          x-disallow-post: true\n          x-disallow-put: true\n        IsTimeRuleDefinedByTemplate:\n          example: false\n          type: boolean\n          x-disallow-patch: true\n          x-disallow-post: true\n          x-disallow-put: true\n        Links:\n          $ref: \"#/components/schemas/AnalysisLinks\"\n        MaximumQueueSize:\n          example: 0\n          format: int32\n          type: integer\n        Name:\n          example: MyAnalysis\n          type: string\n          x-required-post: true\n        OutputTime:\n          example: \"\"\n          type: string\n        Path:\n          example: \\\\MyAssetServer\\MyDatabase\\MyElement\\Analyses[MyAnalysis]\n          format: path\n          type: string\n          x-disallow-patch: true\n          x-disallow-post: true\n          x-disallow-put: true\n        Priority:\n          example: High\n          type: string\n        PublishResults:\n          example: false\n          type: boolean\n        Status:\n          example: Disabled\n          type: string\n        TargetWebId:\n          example: I1ETDqD5loBNH0erqeqJodtALAjFPVfUpY-02A8uioGDSgIg\n          format: webid\n          type: string\n          x-disallow-post: true\n        TemplateName:\n          example: \"\"\n          type: string\n        TimeRulePlugInName:\n          example: Periodic\n          type: string\n        WebException:\n          $ref: \"#/components/schemas/WebException\"\n        WebId:\n          example: I1XsDqD5loBNH0erqeqJodtALAWDOFEb-U5xGEQwAVXYTCAA\n          format: webid\n          type: string\n          x-disallow-patch: true\n          x-disallow-post: true\n          x-disallow-put: true\n      type: object\n    AnalysisCategory:\n      properties:\n        Description:\n          example: Relative energy use per ton of process feed.\n          type: string\n        Id:\n          example: f9364aa2-0e4a-4854-9b85-35900a4d4c0f\n          format: uuid\n          type: string\n          x-disallow-patch: true\n          x-disallow-post: true\n          x-disallow-put: true\n        Links:\n          $ref: \"#/components/schemas/AnalysisCategoryLinks\"\n        Name:\n          example: CategoryName\n          type: string\n          x-required-post: true\n        Path:\n          example: \\\\MyAssetServer\\Database\\CategoriesAnalysis[CategoryName]\n          format: path\n          type: string\n          x-disallow-patch: true\n          x-disallow-post: true\n          x-disallow-put: true\n        WebException:\n          $ref: \"#/components/schemas/WebException\"\n        WebId:\n          example: I1XCDqD5loBNH0erqeqJodtALAoko2-UoOVEibhTWQCk1MDw\n          format: webid\n          type: string\n          x-disallow-patch: true\n          x-disallow-post: true\n          x-disallow-put: true\n      type: object\n    AnalysisCategoryLinks:\n      properties:\n        Database:\n          type: string\n          x-link-optional: false\n          x-link-path: assetdatabases/{webId}\n        Security:\n          type: string\n          x-link-optional: false\n          x-link-path: analysiscategories/{webId}/security\n        SecurityEntries:\n          type: string\n          x-link-optional: false\n          x-link-path: analysiscategories/{webId}/securityentries\n        Self:\n          type: string\n          x-link-optional: false\n          x-link-path: analysiscategories/{webId}\n      type: object\n    AnalysisLinks:\n      properties:\n        AnalysisRule:\n          type: string\n          x-link-optional: true\n          x-link-path: analysisrules/{webId}\n        AnalysisRulePlugIn:\n          type: string\n          x-link-optional: true\n          x-link-path: analysisruleplugins/{webId}\n        Categories:\n          type: string\n          x-link-optional: false\n          x-link-path: analyses/{webId}/categories\n        Database:\n          type: string\n          x-link-optional: true\n          x-link-path: assetdatabases/{webId}\n        Security:\n          type: string\n          x-link-optional: false\n          x-link-path: analyses/{webId}/security\n        SecurityEntries:\n          type: string\n          x-link-optional: false\n          x-link-path: analyses/{webId}/securityentries\n        Self:\n          type: string\n          x-link-optional: false\n          x-link-path: analyses/{webId}\n        Target:\n          type: string\n          x-link-optional: true\n          x-link-path: elements/{webId}\n        Template:\n          type: string\n          x-link-optional: true\n          x-link-path: analysistemplates/{webId}\n        TimeRule:\n          type: string\n          x-link-optional: true\n          x-link-path: timerules/{webId}\n        TimeRulePlugIn:\n          type: string\n          x-link-optional: true\n          x-link-path: timeruleplugins/{webId}\n      type: object\n    AnalysisRule:\n      properties:\n        ConfigString:\n          example: a := TagVal('sinusoid'); b := Pow(a, 2); c := a + b;\n          type: string\n        Description:\n          example: Runs a performance equation.\n          type: string\n          x-disallow-patch: true\n          x-disallow-post: true\n          x-disallow-put: true\n        DisplayString:\n          example: a := TagVal('sinusoid'); b := Pow(a, 2); c := a + b;\n          type: string\n          x-disallow-patch: true\n          x-disallow-post: true\n          x-disallow-put: true\n        EditorType:\n          example: OSIsoft.AF.Analysis.AnalysisRule.PEAnalysisRuleEditor\n          type: string\n          x-disallow-patch: true\n          x-disallow-post: true\n          x-disallow-put: true\n        HasChildren:\n          example: false\n          type: boolean\n          x-disallow-patch: true\n          x-disallow-post: true\n          x-disallow-put: true\n        Id:\n          example: ca9d257f-94c2-11e7-8443-00155d84c200\n          format: uuid\n          type: string\n          x-disallow-patch: true\n          x-disallow-post: true\n          x-disallow-put: true\n        IsConfigured:\n          example: false\n          type: boolean\n          x-disallow-patch: true\n          x-disallow-post: true\n          x-disallow-put: true\n        IsInitializing:\n          example: false\n          type: boolean\n          x-disallow-patch: true\n          x-disallow-post: true\n          x-disallow-put: true\n        Links:\n          $ref: \"#/components/schemas/AnalysisRuleLinks\"\n        Name:\n          example: PerformanceEquation\n          type: string\n          x-disallow-patch: true\n          x-disallow-post: true\n          x-disallow-put: true\n        Path:\n          example: \\\\MyAssetServer\\MyDatabase\\MyElement\\Analyses[MyAnalysis]\\AnalysisRule\n          format: path\n          type: string\n          x-disallow-patch: true\n          x-disallow-post: true\n          x-disallow-put: true\n        PlugInName:\n          example: PerformanceEquation\n          type: string\n          x-disallow-patch: true\n          x-required-post: true\n        SupportedBehaviors:\n          example:\n            - SupportsRunningCase\n            - SupportStatePassing\n            - OutputCorrectAfterSkipping\n          items:\n            type: string\n          type: array\n          x-disallow-patch: true\n          x-disallow-post: true\n          x-disallow-put: true\n        VariableMapping:\n          example: b||Attribute1;c||Attribute2\n          type: string\n        WebException:\n          $ref: \"#/components/schemas/WebException\"\n        WebId:\n          example: I1XRXDqD5loBNH0erqeqJodtALAfyWdysKU5xGEQwAVXYTCAAfyWdysKU5xGEQwAVXYTCAA\n          format: webid\n          type: string\n          x-disallow-patch: true\n          x-disallow-post: true\n          x-disallow-put: true\n      type: object\n    AnalysisRuleLinks:\n      properties:\n        Analysis:\n          type: string\n          x-link-optional: true\n          x-link-path: analyses/{webId}\n        AnalysisRules:\n          type: string\n          x-link-optional: false\n          x-link-path: analysisrules/{webId}/analysisrules\n        AnalysisTemplate:\n          type: string\n          x-link-optional: true\n          x-link-path: analysistemplates/{webId}\n        Parent:\n          type: string\n          x-link-optional: true\n          x-link-path: analysisrules/{webId}\n        PlugIn:\n          type: string\n          x-link-optional: true\n          x-link-path: analysisruleplugins/{webId}\n        Self:\n          type: string\n          x-link-optional: false\n          x-link-path: analysisrules/{webId}\n      type: object\n    AnalysisRulePlugIn:\n      properties:\n        AssemblyFileName:\n          example: OSIsoft.AF.Analysis.AnalysisRule.Imbalance.dll\n          type: string\n          x-disallow-patch: true\n          x-disallow-post: true\n          x-disallow-put: true\n        AssemblyID:\n          example: 1acd00c2-79d0-4818-a03c-0616c4513750\n          format: uuid\n          type: string\n          x-disallow-patch: true\n          x-disallow-post: true\n          x-disallow-put: true\n        AssemblyLoadProperties:\n          example:\n            - None\n          items:\n            type: string\n          type: array\n          x-disallow-patch: true\n          x-disallow-post: true\n          x-disallow-put: true\n        AssemblyTime:\n          example: 2016-05-25T14:01:07Z\n          format: date-time\n          type: string\n          x-disallow-patch: true\n          x-disallow-post: true\n          x-disallow-put: true\n        CompatibilityVersion:\n          example: 2\n          format: int32\n          type: integer\n          x-disallow-patch: true\n          x-disallow-post: true\n          x-disallow-put: true\n        Description:\n          example: Calculates simple material imbalances on nodes of a model.\n          type: string\n          x-disallow-patch: true\n          x-disallow-post: true\n          x-disallow-put: true\n        Id:\n          example: 9a2a6c05-6f61-467a-854a-16dbfb9d8c03\n          format: uuid\n          type: string\n          x-disallow-patch: true\n          x-disallow-post: true\n          x-disallow-put: true\n        IsBrowsable:\n          example: true\n          type: boolean\n          x-disallow-patch: true\n          x-disallow-post: true\n          x-disallow-put: true\n        IsNonEditableConfig:\n          example: false\n          type: boolean\n          x-disallow-patch: true\n          x-disallow-post: true\n          x-disallow-put: true\n        Links:\n          $ref: \"#/components/schemas/AnalysisRulePlugInLinks\"\n        LoadedAssemblyTime:\n          example: 1970-01-01T00:00:00Z\n          format: date-time\n          type: string\n          x-disallow-patch: true\n          x-disallow-post: true\n          x-disallow-put: true\n        LoadedVersion:\n          example: \"\"\n          type: string\n          x-disallow-patch: true\n          x-disallow-post: true\n          x-disallow-put: true\n        Name:\n          example: Imbalance\n          type: string\n          x-disallow-patch: true\n          x-disallow-post: true\n          x-disallow-put: true\n        Path:\n          example: \\\\MyAssetServer\\PlugInsAnalysisRule[Imbalance]\n          format: path\n          type: string\n          x-disallow-patch: true\n          x-disallow-post: true\n          x-disallow-put: true\n        Version:\n          example: 2.8.5.7552\n          type: string\n          x-disallow-patch: true\n          x-disallow-post: true\n          x-disallow-put: true\n        WebException:\n          $ref: \"#/components/schemas/WebException\"\n        WebId:\n          example: I1XPDqD5loBNH0erqeqJodtALABWwqmmFvekaFShbb-52MAw\n          format: webid\n          type: string\n          x-disallow-patch: true\n          x-disallow-post: true\n          x-disallow-put: true\n      type: object\n    AnalysisRulePlugInLinks:\n      properties:\n        AssetServer:\n          type: string\n          x-link-optional: false\n          x-link-path: assetservers/{webId}\n        Self:\n          type: string\n          x-link-optional: false\n          x-link-path: analysisruleplugins/{webId}\n      type: object\n    AnalysisTemplate:\n      properties:\n        AnalysisRulePlugInName:\n          example: PerformanceEquation\n          type: string\n        CategoryNames:\n          example:\n            - MyAnalysisCategory\n          items:\n            type: string\n          type: array\n        CreateEnabled:\n          example: true\n          type: boolean\n        Description:\n          example: \"\"\n          type: string\n        GroupId:\n          example: 0\n          format: int32\n          type: integer\n        HasNotificationTemplate:\n          example: false\n          type: boolean\n          x-disallow-patch: true\n          x-disallow-post: true\n          x-disallow-put: true\n        HasTarget:\n          example: false\n          type: boolean\n          x-disallow-patch: true\n          x-disallow-post: true\n          x-disallow-put: true\n        Id:\n          example: 612d9811-3f06-4e27-989c-42e5e5c00b88\n          format: uuid\n          type: string\n          x-disallow-patch: true\n          x-disallow-post: true\n          x-disallow-put: true\n        Links:\n          $ref: \"#/components/schemas/AnalysisTemplateLinks\"\n        Name:\n          example: MyAnalysisTemplate\n          type: string\n          x-required-post: true\n        OutputTime:\n          example: \"\"\n          type: string\n        Path:\n          example: \\\\MyAssetServer\\MyDatabase\\AnalysisTemplates[MyAnalysisTemplate]\n          format: path\n          type: string\n          x-disallow-patch: true\n          x-disallow-post: true\n          x-disallow-put: true\n        TargetName:\n          example: MyElementTemplate\n          type: string\n        TimeRulePlugInName:\n          example: Periodic\n          type: string\n        WebException:\n          $ref: \"#/components/schemas/WebException\"\n        WebId:\n          example: I1XTG_auSSsvuECG8ad_p8b25QEZgtYQY_J06YnELl5cALiA\n          format: webid\n          type: string\n          x-disallow-patch: true\n          x-disallow-post: true\n          x-disallow-put: true\n      type: object\n    AnalysisTemplateLinks:\n      properties:\n        AnalysisRule:\n          type: string\n          x-link-optional: true\n          x-link-path: analysisrules/{webId}\n        AnalysisRulePlugIn:\n          type: string\n          x-link-optional: true\n          x-link-path: analysisruleplugins/{webId}\n        Categories:\n          type: string\n          x-link-optional: false\n          x-link-path: analysistemplates/{webId}/categories\n        Database:\n          type: string\n          x-link-optional: false\n          x-link-path: assetdatabases/{webId}\n        Security:\n          type: string\n          x-link-optional: false\n          x-link-path: analysistemplates/{webId}/security\n        SecurityEntries:\n          type: string\n          x-link-optional: false\n          x-link-path: analysistemplates/{webId}/securityentries\n        Self:\n          type: string\n          x-link-optional: false\n          x-link-path: analysistemplates/{webId}\n        Target:\n          type: string\n          x-link-optional: true\n          x-link-path: elementtemplates/{webId}\n        TimeRule:\n          type: string\n          x-link-optional: true\n          x-link-path: timerules/{webId}\n        TimeRulePlugIn:\n          type: string\n          x-link-optional: true\n          x-link-path: timeruleplugins/{webId}\n      type: object\n    Annotation:\n      properties:\n        CreationDate:\n          example: 2016-06-21T14:45:50.2988321Z\n          format: date-time\n          type: string\n          x-disallow-patch: true\n          x-disallow-post: true\n          x-disallow-put: true\n        Creator:\n          example: MyDomain\\UserA\n          type: string\n          x-disallow-patch: true\n          x-disallow-post: true\n          x-disallow-put: true\n        Description:\n          example: Signifies a spike in temperature.\n          type: string\n        Errors:\n          items:\n            $ref: \"#/components/schemas/PropertyError\"\n          type: array\n          x-disallow-patch: true\n          x-disallow-post: true\n          x-disallow-put: true\n        Id:\n          example: 512B6616-CE39-4F70-9048-8C6A025FB592\n          format: uuid\n          type: string\n          x-disallow-patch: true\n          x-disallow-post: true\n          x-disallow-put: true\n        Links:\n          $ref: \"#/components/schemas/AnnotationLinks\"\n        Modifier:\n          example: MyDomain\\UserA\n          type: string\n          x-disallow-patch: true\n          x-disallow-post: true\n          x-disallow-put: true\n        ModifyDate:\n          example: 2016-06-21T14:45:50.2988321Z\n          format: date-time\n          type: string\n          x-disallow-patch: true\n          x-disallow-post: true\n          x-disallow-put: true\n        Name:\n          example: Temperature Annotation\n          type: string\n          x-required-post: true\n        Value:\n          example: The temperature spiked because of a malfunction with a unit in our\n            west plant.\n          type: object\n        WebException:\n          $ref: \"#/components/schemas/WebException\"\n      type: object\n    AnnotationLinks:\n      properties:\n        MediaData:\n          type: string\n          x-link-optional: true\n          x-link-path: eventframes/{webId}/annotations/{id}/attachment/media/mediadata\n        MediaMetadata:\n          type: string\n          x-link-optional: true\n          x-link-path: eventframes/{webId}/annotations/{id}/attachment/media/metadata\n        Owner:\n          type: string\n          x-link-optional: false\n        Self:\n          type: string\n          x-link-optional: false\n      type: object\n    AssetDatabase:\n      properties:\n        Description:\n          example: PI BI Project Asset Model\n          type: string\n        ExtendedProperties:\n          additionalProperties:\n            $ref: \"#/components/schemas/Value\"\n          type: object\n        Id:\n          example: a3a5ebaa-37ae-42dc-9d1e-b6bb7ec98bd2\n          format: uuid\n          type: string\n          x-disallow-patch: true\n          x-disallow-post: true\n          x-disallow-put: true\n        Links:\n          $ref: \"#/components/schemas/AssetDatabaseLinks\"\n        Name:\n          example: MyDatabase\n          type: string\n          x-required-post: true\n        Path:\n          example: \\\\MyAssetServer\\MyDatabase\n          format: path\n          type: string\n          x-disallow-patch: true\n          x-disallow-post: true\n          x-disallow-put: true\n        WebException:\n          $ref: \"#/components/schemas/WebException\"\n        WebId:\n          example: I1RDDqD5loBNH0erqeqJodtALAquulo6433EKdHra7fsmL0g\n          format: webid\n          type: string\n          x-disallow-patch: true\n          x-disallow-post: true\n          x-disallow-put: true\n      type: object\n    AssetDatabaseLinks:\n      properties:\n        AnalysisCategories:\n          type: string\n          x-link-optional: false\n          x-link-path: assetdatabases/{webId}/analysiscategories\n        AnalysisTemplates:\n          type: string\n          x-link-optional: false\n          x-link-path: assetdatabases/{webId}/analysistemplates\n        AssetServer:\n          type: string\n          x-link-optional: false\n          x-link-path: assetservers/{webId}\n        AttributeCategories:\n          type: string\n          x-link-optional: false\n          x-link-path: assetdatabases/{webId}/attributecategories\n        ElementCategories:\n          type: string\n          x-link-optional: false\n          x-link-path: assetdatabases/{webId}/elementcategories\n        ElementTemplates:\n          type: string\n          x-link-optional: false\n          x-link-path: assetdatabases/{webId}/elementtemplates\n        Elements:\n          type: string\n          x-link-optional: false\n          x-link-path: assetdatabases/{webId}/elements\n        EnumerationSets:\n          type: string\n          x-link-optional: false\n          x-link-path: assetdatabases/{webId}/enumerationsets\n        EventFrames:\n          type: string\n          x-link-optional: false\n          x-link-path: assetdatabases/{webId}/eventframes\n        Security:\n          type: string\n          x-link-optional: false\n          x-link-path: assetdatabases/{webId}/security\n        SecurityEntries:\n          type: string\n          x-link-optional: false\n          x-link-path: assetdatabases/{webId}/securityentries\n        Self:\n          type: string\n          x-link-optional: false\n          x-link-path: assetdatabases/{webId}\n        TableCategories:\n          type: string\n          x-link-optional: false\n          x-link-path: assetdatabases/{webId}/tablecategories\n        Tables:\n          type: string\n          x-link-optional: false\n          x-link-path: assetdatabases/{webId}/tables\n      type: object\n    AssetServer:\n      properties:\n        Description:\n          example: Sample Description\n          type: string\n        ExtendedProperties:\n          additionalProperties:\n            $ref: \"#/components/schemas/Value\"\n          type: object\n        Id:\n          example: 96f9a00e-4d80-471f-aba9-ea89a1db402c\n          format: uuid\n          type: string\n          x-disallow-patch: true\n          x-disallow-post: true\n          x-disallow-put: true\n        IsConnected:\n          example: true\n          type: boolean\n          x-disallow-patch: true\n          x-disallow-post: true\n          x-disallow-put: true\n        Links:\n          $ref: \"#/components/schemas/AssetServerLinks\"\n        Name:\n          example: MyAssetServer\n          type: string\n          x-disallow-patch: true\n          x-disallow-post: true\n          x-disallow-put: true\n        Path:\n          example: \\\\MyAssetServer\n          format: path\n          type: string\n          x-disallow-patch: true\n          x-disallow-post: true\n          x-disallow-put: true\n        ServerTime:\n          example: 2014-07-22T14:00:00Z\n          format: date-time\n          type: string\n          x-disallow-patch: true\n          x-disallow-post: true\n          x-disallow-put: true\n        ServerVersion:\n          example: 2.5.0.5039\n          type: string\n          x-disallow-patch: true\n          x-disallow-post: true\n          x-disallow-put: true\n        WebException:\n          $ref: \"#/components/schemas/WebException\"\n        WebId:\n          example: I1RSDqD5loBNH0erqeqJodtALA\n          format: webid\n          type: string\n          x-disallow-patch: true\n          x-disallow-post: true\n          x-disallow-put: true\n      type: object\n    AssetServerLinks:\n      properties:\n        AnalysisRulePlugIns:\n          type: string\n          x-link-optional: false\n          x-link-path: assetservers/{webId}/analysisruleplugins\n        Databases:\n          type: string\n          x-link-optional: false\n          x-link-path: assetservers/{webId}/assetdatabases\n        NotificationContactTemplates:\n          type: string\n          x-link-optional: false\n          x-link-path: assetservers/{webId}/notificationcontacttemplates\n        NotificationPlugIns:\n          type: string\n          x-link-optional: false\n          x-link-path: assetservers/{webId}/notificationplugins\n        Security:\n          type: string\n          x-link-optional: false\n          x-link-path: assetservers/{webId}/security\n        SecurityEntries:\n          type: string\n          x-link-optional: false\n          x-link-path: assetservers/{webId}/securityentries\n        SecurityIdentities:\n          type: string\n          x-link-optional: false\n          x-link-path: assetservers/{webId}/securityidentities\n        SecurityMappings:\n          type: string\n          x-link-optional: false\n          x-link-path: assetservers/{webId}/securitymappings\n        Self:\n          type: string\n          x-link-optional: false\n          x-link-path: assetservers/{webId}\n        TimeRulePlugIns:\n          type: string\n          x-link-optional: false\n          x-link-path: assetservers/{webId}/timeruleplugins\n        UnitClasses:\n          type: string\n          x-link-optional: false\n          x-link-path: assetservers/{webId}/unitclasses\n      type: object\n    Attribute:\n      properties:\n        CategoryNames:\n          example:\n            - Energy Savings Targets\n          items:\n            type: string\n          type: array\n        ConfigString:\n          example: SELECT [Water Use] FROM [Energy Use 2008] WHERE [Asset ID] =\n            '%Element%'\n          type: string\n        DataReference:\n          $ref: \"#/components/schemas/DataReference\"\n        DataReferencePlugIn:\n          example: Table Lookup\n          type: string\n        DefaultUnitsName:\n          example: liter\n          type: string\n        DefaultUnitsNameAbbreviation:\n          example: L\n          type: string\n          x-disallow-patch: true\n          x-disallow-post: true\n          x-disallow-put: true\n        Description:\n          example: 2008 Water Use\n          type: string\n        DisplayDigits:\n          example: -5\n          type: integer\n        HasChildren:\n          example: false\n          type: boolean\n          x-disallow-patch: true\n          x-disallow-post: true\n          x-disallow-put: true\n        Id:\n          example: 75de231b-b591-49b1-b138-e725a77165c2\n          format: uuid\n          type: string\n          x-disallow-patch: true\n          x-disallow-post: true\n          x-disallow-put: true\n        IsConfigurationItem:\n          example: false\n          type: boolean\n        IsExcluded:\n          example: false\n          type: boolean\n          x-disallow-post: true\n        IsHidden:\n          example: false\n          type: boolean\n        IsManualDataEntry:\n          example: false\n          type: boolean\n        Links:\n          $ref: \"#/components/schemas/AttributeLinks\"\n        Name:\n          example: Water\n          type: string\n          x-required-post: true\n        Path:\n          example: \\\\MyAssetServer\\MyDatabase\\CityName\\EngineeringProcess\\Equipment\\MachineName|Water(2008)\n          format: path\n          type: string\n          x-disallow-patch: true\n          x-disallow-post: true\n          x-disallow-put: true\n        Paths:\n          example:\n            - \\\\MyAssetServer\\MyDatabase\\MyElement|MyAttribute\n            - \\\\MyAssetServer\\MyDatabase\\ReferencingElement\\MyElement|MyAttribute\n          items:\n            type: string\n          type: array\n          x-disallow-patch: true\n          x-disallow-post: true\n          x-disallow-put: true\n        Span:\n          example: 100\n          type: number\n          x-disallow-patch: true\n          x-disallow-post: true\n          x-disallow-put: true\n        Step:\n          example: false\n          type: boolean\n          x-disallow-patch: true\n          x-disallow-post: true\n          x-disallow-put: true\n        TraitName:\n          example: LimitLoLo\n          type: string\n        Type:\n          example: Int32\n          type: string\n        TypeQualifier:\n          example: \"\"\n          type: string\n        WebException:\n          $ref: \"#/components/schemas/WebException\"\n        WebId:\n          example: I1AbEDqD5loBNH0erqeqJodtALAYIKyyz2F5BGAxQAVXYRDBAGyPedZG1sUmxOOclp3Flwg\n          format: webid\n          type: string\n          x-disallow-patch: true\n          x-disallow-post: true\n          x-disallow-put: true\n        Zero:\n          example: 0\n          type: number\n          x-disallow-patch: true\n          x-disallow-post: true\n          x-disallow-put: true\n      type: object\n    AttributeCategory:\n      properties:\n        Description:\n          example: Relative energy use per ton of process feed.\n          type: string\n        Id:\n          example: 0520f4a1-4454-4fdc-b476-4d371ea6b59e\n          format: uuid\n          type: string\n          x-disallow-patch: true\n          x-disallow-post: true\n          x-disallow-put: true\n        Links:\n          $ref: \"#/components/schemas/AttributeCategoryLinks\"\n        Name:\n          example: CategoryName\n          type: string\n          x-required-post: true\n        Path:\n          example: \\\\MyAssetServer\\Database\\CategoriesAttribute[CategoryName]\n          format: path\n          type: string\n          x-disallow-patch: true\n          x-disallow-post: true\n          x-disallow-put: true\n        WebException:\n          $ref: \"#/components/schemas/WebException\"\n        WebId:\n          example: I1ACDqD5loBNH0erqeqJodtALAofQgBVRE3E-0dk03Hqa1ng\n          format: webid\n          type: string\n          x-disallow-patch: true\n          x-disallow-post: true\n          x-disallow-put: true\n      type: object\n    AttributeCategoryLinks:\n      properties:\n        Database:\n          type: string\n          x-link-optional: false\n          x-link-path: assetdatabases/{webId}\n        Security:\n          type: string\n          x-link-optional: false\n          x-link-path: attributecategories/{webId}/security\n        SecurityEntries:\n          type: string\n          x-link-optional: false\n          x-link-path: attributecategories/{webId}/securityentries\n        Self:\n          type: string\n          x-link-optional: false\n          x-link-path: attributecategories/{webId}\n      type: object\n    AttributeLinks:\n      properties:\n        Attributes:\n          type: string\n          x-link-optional: false\n          x-link-path: attributes/{webId}/attributes\n        Categories:\n          type: string\n          x-link-optional: false\n          x-link-path: attributes/{webId}/categories\n        Element:\n          type: string\n          x-link-optional: true\n          x-link-path: elements/{webId}\n        EndValue:\n          type: string\n          x-link-optional: false\n          x-link-path: streams/{webId}/end\n        EnumerationSet:\n          type: string\n          x-link-optional: true\n          x-link-path: enumerationsets/{webId}\n        EnumerationValues:\n          type: string\n          x-link-optional: true\n          x-link-path: enumerationsets/{webId}/enumerationvalues\n        EventFrame:\n          type: string\n          x-link-optional: true\n          x-link-path: eventframes/{webId}\n        InterpolatedData:\n          type: string\n          x-link-optional: false\n          x-link-path: streams/{webId}/interpolated\n        Parent:\n          type: string\n          x-link-optional: true\n          x-link-path: attributes/{webId}\n        PlotData:\n          type: string\n          x-link-optional: false\n          x-link-path: streams/{webId}/plot\n        Point:\n          type: string\n          x-link-optional: true\n          x-link-path: points/{webId}\n        RecordedData:\n          type: string\n          x-link-optional: false\n          x-link-path: streams/{webId}/recorded\n        Self:\n          type: string\n          x-link-optional: false\n          x-link-path: attributes/{webId}\n        SummaryData:\n          type: string\n          x-link-optional: false\n          x-link-path: streams/{webId}/summary\n        Template:\n          type: string\n          x-link-optional: true\n          x-link-path: attributetemplates/{webId}\n        Trait:\n          type: string\n          x-link-optional: true\n          x-link-path: attributetraits/{name}\n        Value:\n          type: string\n          x-link-optional: false\n      type: object\n    AttributeTemplate:\n      properties:\n        CategoryNames:\n          example:\n            - Energy Savings Targets\n          items:\n            type: string\n          type: array\n        ConfigString:\n          example: SELECT [Water Use] FROM [Energy Use 2008] WHERE [Asset ID] =\n            '%Element%'\n          type: string\n        DataReferencePlugIn:\n          example: Table Lookup\n          type: string\n        DefaultUnitsName:\n          example: liter\n          type: string\n        DefaultUnitsNameAbbreviation:\n          example: L\n          type: string\n          x-disallow-patch: true\n          x-disallow-post: true\n          x-disallow-put: true\n        DefaultValue:\n          example: 0\n          type: object\n        Description:\n          example: 2008 Water Use\n          type: string\n        HasChildren:\n          example: false\n          type: boolean\n          x-disallow-patch: true\n          x-disallow-post: true\n          x-disallow-put: true\n        Id:\n          example: 23d027b5-5dd5-41c5-80f1-f8b5c9ff4356\n          format: uuid\n          type: string\n          x-disallow-patch: true\n          x-disallow-post: true\n          x-disallow-put: true\n        IsConfigurationItem:\n          example: false\n          type: boolean\n        IsExcluded:\n          example: false\n          type: boolean\n        IsHidden:\n          example: false\n          type: boolean\n        IsManualDataEntry:\n          example: false\n          type: boolean\n        Links:\n          $ref: \"#/components/schemas/AttributeTemplateLinks\"\n        Name:\n          example: Water(2008)\n          type: string\n          x-required-post: true\n        Path:\n          example: \\\\MyAssetServer\\MyDatabase\\ElementTemplates[MachineName]|Water(2008)\n          format: path\n          type: string\n          x-disallow-patch: true\n          x-disallow-post: true\n          x-disallow-put: true\n        TraitName:\n          example: LimitLoLo\n          type: string\n        Type:\n          example: Int32\n          type: string\n        TypeQualifier:\n          example: \"\"\n          type: string\n        WebException:\n          $ref: \"#/components/schemas/WebException\"\n        WebId:\n          example: I1ATEG_auSSsvuECG8ad_p8b25QQkxqWDwIWU6zC4vmgpd4kgtSfQI9VdxUGA8fi1yf9DVg\n          format: webid\n          type: string\n          x-disallow-patch: true\n          x-disallow-post: true\n          x-disallow-put: true\n      type: object\n    AttributeTemplateLinks:\n      properties:\n        AttributeTemplates:\n          type: string\n          x-link-optional: false\n          x-link-path: attributetemplates/{webId}/attributetemplates\n        Categories:\n          type: string\n          x-link-optional: false\n          x-link-path: attributetemplates/{webId}/categories\n        ElementTemplate:\n          type: string\n          x-link-optional: false\n          x-link-path: elementtemplates/{webId}\n        Parent:\n          type: string\n          x-link-optional: true\n          x-link-path: attributetemplates/{webId}\n        Self:\n          type: string\n          x-link-optional: false\n          x-link-path: attributetemplates/{webId}\n        Trait:\n          type: string\n          x-link-optional: true\n          x-link-path: attributetraits/{name}\n      type: object\n    AttributeTrait:\n      properties:\n        Abbreviation:\n          example: LoLo\n          type: string\n          x-disallow-patch: true\n          x-disallow-post: true\n          x-disallow-put: true\n        AllowChildAttributes:\n          example: \"false\"\n          type: boolean\n          x-disallow-patch: true\n          x-disallow-post: true\n          x-disallow-put: true\n        AllowDuplicates:\n          example: \"false\"\n          type: boolean\n          x-disallow-patch: true\n          x-disallow-post: true\n          x-disallow-put: true\n        IsAllowedOnRootAttribute:\n          example: \"false\"\n          type: boolean\n          x-disallow-patch: true\n          x-disallow-post: true\n          x-disallow-put: true\n        IsTypeInherited:\n          example: \"true\"\n          type: boolean\n          x-disallow-patch: true\n          x-disallow-post: true\n          x-disallow-put: true\n        IsUOMInherited:\n          example: \"true\"\n          type: boolean\n          x-disallow-patch: true\n          x-disallow-post: true\n          x-disallow-put: true\n        Links:\n          $ref: \"#/components/schemas/AttributeTraitLinks\"\n        Name:\n          example: LimitLoLo\n          type: string\n          x-disallow-patch: true\n          x-disallow-post: true\n          x-disallow-put: true\n        RequireNumeric:\n          example: \"true\"\n          type: boolean\n          x-disallow-patch: true\n          x-disallow-post: true\n          x-disallow-put: true\n        RequireString:\n          example: \"false\"\n          type: boolean\n          x-disallow-patch: true\n          x-disallow-post: true\n          x-disallow-put: true\n        WebException:\n          $ref: \"#/components/schemas/WebException\"\n      type: object\n    AttributeTraitLinks:\n      properties:\n        Self:\n          type: string\n          x-link-optional: false\n          x-link-path: attributetraits/{name}\n      type: object\n    CacheInstance:\n      properties:\n        Id:\n          example: 8a5033c9-b77f-431c-9820-c9f538d80dc6\n          format: uuid\n          type: string\n          x-disallow-patch: true\n          x-disallow-post: true\n          x-disallow-put: true\n        LastRefreshTime:\n          example: 2014-07-20T14:08:00Z\n          format: date-time\n          type: string\n          x-disallow-patch: true\n          x-disallow-post: true\n          x-disallow-put: true\n        ScheduledExpirationTime:\n          example: 2014-07-20T23:08:00Z\n          format: date-time\n          type: string\n          x-disallow-patch: true\n          x-disallow-post: true\n          x-disallow-put: true\n        User:\n          example: MyDomain\\Username\n          type: string\n          x-disallow-patch: true\n          x-disallow-post: true\n          x-disallow-put: true\n        WebException:\n          $ref: \"#/components/schemas/WebException\"\n        WillRefreshAfter:\n          example: 2014-07-20T18:08:00Z\n          format: date-time\n          type: string\n          x-disallow-patch: true\n          x-disallow-post: true\n          x-disallow-put: true\n      type: object\n    ChannelInstance:\n      properties:\n        Id:\n          type: string\n        LastMessageSentTime:\n          type: string\n        SentMessageCount:\n          type: integer\n        StartTime:\n          type: string\n        WebException:\n          $ref: \"#/components/schemas/WebException\"\n      type: object\n    DataPipeEvent:\n      properties:\n        Action:\n          example: Add\n          type: string\n          x-disallow-patch: true\n          x-disallow-post: true\n          x-disallow-put: true\n        Annotated:\n          example: false\n          type: boolean\n          x-disallow-patch: true\n          x-disallow-post: true\n          x-disallow-put: true\n        Errors:\n          items:\n            $ref: \"#/components/schemas/PropertyError\"\n          type: array\n          x-disallow-patch: true\n          x-disallow-post: true\n          x-disallow-put: true\n        Good:\n          example: true\n          type: boolean\n        PreviousEventAction:\n          example: PreviousEventArchived\n          type: string\n          x-disallow-patch: true\n          x-disallow-post: true\n          x-disallow-put: true\n        Questionable:\n          example: false\n          type: boolean\n        Substituted:\n          example: false\n          type: boolean\n          x-disallow-post: true\n        Timestamp:\n          example: 2014-07-22T14:00:00Z\n          format: date-time\n          type: string\n        UnitsAbbreviation:\n          example: m\n          type: string\n        Value:\n          example: 12.3\n          type: object\n        WebException:\n          $ref: \"#/components/schemas/WebException\"\n      type: object\n    DataReference:\n      properties:\n        PIPoint:\n          $ref: \"#/components/schemas/PIPointDataReference\"\n        Type:\n          example: PI Point\n          type: string\n          x-disallow-patch: true\n          x-disallow-post: true\n          x-disallow-put: true\n        WebException:\n          $ref: \"#/components/schemas/WebException\"\n      type: object\n    DataServer:\n      properties:\n        Id:\n          example: 85bb49d6-f101-4807-baf9-57c2fbd33000\n          format: uuid\n          type: string\n          x-disallow-patch: true\n          x-disallow-post: true\n          x-disallow-put: true\n        IsConnected:\n          example: true\n          type: boolean\n          x-disallow-patch: true\n          x-disallow-post: true\n          x-disallow-put: true\n        Links:\n          $ref: \"#/components/schemas/DataServerLinks\"\n        Name:\n          example: MyPIServer\n          type: string\n          x-disallow-patch: true\n          x-disallow-post: true\n          x-disallow-put: true\n        Path:\n          example: \\\\PIServer[MyPIServer]\n          format: path\n          type: string\n          x-disallow-patch: true\n          x-disallow-post: true\n          x-disallow-put: true\n        ServerTime:\n          example: 2014-07-22T14:00:00Z\n          format: date-time\n          type: string\n          x-disallow-patch: true\n          x-disallow-post: true\n          x-disallow-put: true\n        ServerVersion:\n          example: 3.4.390.18\n          type: string\n          x-disallow-patch: true\n          x-disallow-post: true\n          x-disallow-put: true\n        WebException:\n          $ref: \"#/components/schemas/WebException\"\n        WebId:\n          example: I1DS1km7hQHxB0i6-VfC-9MwAA\n          format: webid\n          type: string\n          x-disallow-patch: true\n          x-disallow-post: true\n          x-disallow-put: true\n      type: object\n    DataServerLicense:\n      properties:\n        AmountLeft:\n          example: \"85675\"\n          type: string\n          x-disallow-patch: true\n          x-disallow-post: true\n          x-disallow-put: true\n        AmountUsed:\n          example: \"1325\"\n          type: string\n          x-disallow-patch: true\n          x-disallow-post: true\n          x-disallow-put: true\n        Links:\n          $ref: \"#/components/schemas/DataServerLicenseLinks\"\n        Name:\n          example: Component.Module\n          type: string\n          x-disallow-patch: true\n          x-disallow-post: true\n          x-disallow-put: true\n        TotalAmount:\n          example: \"10000\"\n          type: string\n          x-disallow-patch: true\n          x-disallow-post: true\n          x-disallow-put: true\n        WebException:\n          $ref: \"#/components/schemas/WebException\"\n      type: object\n    DataServerLicenseLinks:\n      properties:\n        Parent:\n          type: string\n          x-link-optional: false\n          x-link-path: dataservers/{webId}\n        Self:\n          type: string\n          x-link-optional: false\n          x-link-path: dataservers/{webId}/license\n      type: object\n    DataServerLinks:\n      properties:\n        EnumerationSets:\n          type: string\n          x-link-optional: false\n          x-link-path: dataservers/{webId}/enumerationsets\n        Points:\n          type: string\n          x-link-optional: false\n          x-link-path: dataservers/{webId}/points\n        Self:\n          type: string\n          x-link-optional: false\n          x-link-path: dataservers/{webId}\n      type: object\n    DeliveryChannelPlugInLinks:\n      properties:\n        AssetServer:\n          type: string\n          x-link-optional: false\n          x-link-path: assetservers/{webId}\n        Self:\n          type: string\n          x-link-optional: false\n          x-link-path: notificationplugins/{webId}\n      type: object\n    Element:\n      properties:\n        CategoryNames:\n          example:\n            - Equipment Assets\n          items:\n            type: string\n          type: array\n        Description:\n          example: Manufacturing Equipment MachineName\n          type: string\n        Errors:\n          items:\n            $ref: \"#/components/schemas/PropertyError\"\n          type: array\n          x-disallow-patch: true\n          x-disallow-post: true\n          x-disallow-put: true\n        ExtendedProperties:\n          additionalProperties:\n            $ref: \"#/components/schemas/Value\"\n          type: object\n        HasChildren:\n          example: false\n          type: boolean\n          x-disallow-patch: true\n          x-disallow-post: true\n          x-disallow-put: true\n        Id:\n          example: cbb28260-853d-11e4-80c5-00155d844304\n          format: uuid\n          type: string\n          x-disallow-patch: true\n          x-disallow-post: true\n          x-disallow-put: true\n        Links:\n          $ref: \"#/components/schemas/ElementLinks\"\n        Name:\n          example: MachineName\n          type: string\n          x-required-post: true\n        Path:\n          example: \\\\MyAssetServer\\MyDatabase\\CityName\\EngineeringProcess\\Equipment\\MachineName\n          format: path\n          type: string\n          x-disallow-patch: true\n          x-disallow-post: true\n          x-disallow-put: true\n        Paths:\n          items:\n            type: string\n          type: array\n          x-disallow-patch: true\n          x-disallow-post: true\n          x-disallow-put: true\n        TemplateName:\n          example: MachineName\n          type: string\n        WebException:\n          $ref: \"#/components/schemas/WebException\"\n        WebId:\n          example: I1EmDqD5loBNH0erqeqJodtALAYIKyyz2F5BGAxQAVXYRDBA\n          format: webid\n          type: string\n          x-disallow-patch: true\n          x-disallow-post: true\n          x-disallow-put: true\n      type: object\n    ElementCategory:\n      properties:\n        Description:\n          example: Relative energy use per ton of process feed.\n          type: string\n        Id:\n          example: 3051f943-7e4d-4241-ab9c-450a84c80450\n          format: uuid\n          type: string\n          x-disallow-patch: true\n          x-disallow-post: true\n          x-disallow-put: true\n        Links:\n          $ref: \"#/components/schemas/ElementCategoryLinks\"\n        Name:\n          example: CategoryName\n          type: string\n          x-required-post: true\n        Path:\n          example: \\\\MyAssetServer\\Database\\CategoriesElement[CategoryName]\n          format: path\n          type: string\n          x-disallow-patch: true\n          x-disallow-post: true\n          x-disallow-put: true\n        WebException:\n          $ref: \"#/components/schemas/WebException\"\n        WebId:\n          example: I1ECDqD5loBNH0erqeqJodtALAQ_lRME1-QUKrnEUKhMgEUA\n          format: webid\n          type: string\n          x-disallow-patch: true\n          x-disallow-post: true\n          x-disallow-put: true\n      type: object\n    ElementCategoryLinks:\n      properties:\n        Database:\n          type: string\n          x-link-optional: false\n          x-link-path: assetdatabases/{webId}\n        Security:\n          type: string\n          x-link-optional: false\n          x-link-path: elementcategories/{webId}/security\n        SecurityEntries:\n          type: string\n          x-link-optional: false\n          x-link-path: elementcategories/{webId}/securityentries\n        Self:\n          type: string\n          x-link-optional: false\n          x-link-path: elementcategories/{webId}\n      type: object\n    ElementLinks:\n      properties:\n        Analyses:\n          type: string\n          x-link-optional: false\n          x-link-path: elements/{webId}/analyses\n        Attributes:\n          type: string\n          x-link-optional: false\n          x-link-path: elements/{webId}/attributes\n        Categories:\n          type: string\n          x-link-optional: false\n          x-link-path: elements/{webId}/categories\n        Database:\n          type: string\n          x-link-optional: false\n          x-link-path: assetdatabases/{webId}\n        DefaultAttribute:\n          type: string\n          x-link-optional: true\n          x-link-path: attributes/{webId}\n        Elements:\n          type: string\n          x-link-optional: false\n          x-link-path: elements/{webId}/elements\n        EndValue:\n          type: string\n          x-link-optional: false\n          x-link-path: streamsets/{webId}/end\n        EventFrames:\n          type: string\n          x-link-optional: false\n          x-link-path: elements/{webId}/eventframes\n        InterpolatedData:\n          type: string\n          x-link-optional: false\n          x-link-path: streamsets/{webId}/interpolated\n        NotificationRules:\n          type: string\n          x-link-optional: false\n          x-link-path: elements/{webId}/notificationrules\n        Parent:\n          type: string\n          x-link-optional: true\n          x-link-path: elements/{webId}\n        PlotData:\n          type: string\n          x-link-optional: false\n          x-link-path: streamsets/{webId}/plot\n        RecordedData:\n          type: string\n          x-link-optional: false\n          x-link-path: streamsets/{webId}/recorded\n        Security:\n          type: string\n          x-link-optional: false\n          x-link-path: elements/{webId}/security\n        SecurityEntries:\n          type: string\n          x-link-optional: false\n          x-link-path: elements/{webId}/securityentries\n        Self:\n          type: string\n          x-link-optional: false\n          x-link-path: elements/{webId}\n        SummaryData:\n          type: string\n          x-link-optional: false\n          x-link-path: streamsets/{webId}/summary\n        Template:\n          type: string\n          x-link-optional: true\n          x-link-path: elementtemplates/{webId}\n        Value:\n          type: string\n          x-link-optional: false\n          x-link-path: streamsets/{webId}/value\n      type: object\n    ElementTemplate:\n      properties:\n        AllowElementToExtend:\n          example: false\n          type: boolean\n        BaseTemplate:\n          example: Equipment\n          type: string\n        CanBeAcknowledged:\n          example: false\n          type: boolean\n        CategoryNames:\n          example:\n            - Equipment Assets\n          items:\n            type: string\n          type: array\n        Description:\n          example: Manufacturing Machine MachineName\n          type: string\n        ExtendedProperties:\n          additionalProperties:\n            $ref: \"#/components/schemas/Value\"\n          type: object\n        Id:\n          example: a7989492-b2ab-4d90-8abb-4c8284353dd6\n          format: uuid\n          type: string\n          x-disallow-patch: true\n          x-disallow-post: true\n          x-disallow-put: true\n        InstanceType:\n          example: Element\n          type: string\n        Links:\n          $ref: \"#/components/schemas/ElementTemplateLinks\"\n        Name:\n          example: MachineName\n          type: string\n          x-required-post: true\n        NamingPattern:\n          example: \"%TEMPLATE%\"\n          type: string\n        Path:\n          example: \\\\MyAssetServer\\MyDatabase\\ElementTemplates[Boiler]\n          format: path\n          type: string\n          x-disallow-patch: true\n          x-disallow-post: true\n          x-disallow-put: true\n        Severity:\n          example: None\n          type: string\n        WebException:\n          $ref: \"#/components/schemas/WebException\"\n        WebId:\n          example: I1ETDqD5loBNH0erqeqJodtALAkpSYp6uykE2Ku0yChDU91g\n          format: webid\n          type: string\n          x-disallow-patch: true\n          x-disallow-post: true\n          x-disallow-put: true\n      type: object\n    ElementTemplateLinks:\n      properties:\n        AnalysisTemplates:\n          type: string\n          x-link-optional: false\n          x-link-path: elementtemplates/{webId}/analysistemplates\n        AttributeTemplates:\n          type: string\n          x-link-optional: false\n          x-link-path: elementtemplates/{webId}/attributetemplates\n        BaseTemplate:\n          type: string\n          x-link-optional: true\n          x-link-path: elementtemplates/{webId}\n        BaseTemplates:\n          type: string\n          x-link-optional: false\n          x-link-path: elementtemplates/{webId}/baseelementtemplates\n        Categories:\n          type: string\n          x-link-optional: false\n          x-link-path: elementtemplates/{webId}/categories\n        Database:\n          type: string\n          x-link-optional: false\n          x-link-path: assetdatabases/{webId}\n        DefaultAttribute:\n          type: string\n          x-link-optional: true\n          x-link-path: attributetemplates/{webId}\n        DerivedTemplates:\n          type: string\n          x-link-optional: false\n          x-link-path: elementtemplates/{webId}/derivedelementtemplates\n        NotificationRuleTemplates:\n          type: string\n          x-link-optional: false\n          x-link-path: elementtemplates/{webId}/notificationruletemplates\n        Security:\n          type: string\n          x-link-optional: false\n          x-link-path: elementtemplates/{webId}/security\n        SecurityEntries:\n          type: string\n          x-link-optional: false\n          x-link-path: elementtemplates/{webId}/securityentries\n        Self:\n          type: string\n          x-link-optional: false\n          x-link-path: elementtemplates/{webId}\n      type: object\n    EnumerationSet:\n      properties:\n        Description:\n          example: Model numbers by brand of vehicle\n          type: string\n        Id:\n          example: 8e77fc4f-ac91-4029-81d6-fb66bd01d431\n          format: uuid\n          type: string\n          x-disallow-patch: true\n          x-disallow-post: true\n          x-disallow-put: true\n        Links:\n          $ref: \"#/components/schemas/EnumerationSetLinks\"\n        Name:\n          example: Model Number\n          type: string\n          x-required-post: true\n        Path:\n          example: \\\\MyAssetServer\\MyDatabase\\EnumerationSets[Model Number]\n          format: path\n          type: string\n          x-disallow-patch: true\n          x-disallow-post: true\n          x-disallow-put: true\n        SerializeDescription:\n          type: boolean\n        WebException:\n          $ref: \"#/components/schemas/WebException\"\n        WebId:\n          example: I1MSRDqD5loBNH0erqeqJodtALAT_x3jpGsKUCB1vtmvQHUMQ\n          format: webid\n          type: string\n          x-disallow-patch: true\n          x-disallow-post: true\n          x-disallow-put: true\n      type: object\n    EnumerationSetLinks:\n      properties:\n        DataServer:\n          type: string\n          x-link-optional: true\n          x-link-path: dataservers/{webId}\n        Database:\n          type: string\n          x-link-optional: true\n          x-link-path: assetdatabases/{webId}\n        Security:\n          type: string\n          x-link-optional: false\n          x-link-path: enumerationsets/{webId}/security\n        SecurityEntries:\n          type: string\n          x-link-optional: false\n          x-link-path: enumerationsets/{webId}/securityentries\n        Self:\n          type: string\n          x-link-optional: false\n          x-link-path: enumerationsets/{webId}\n        Values:\n          type: string\n          x-link-optional: false\n          x-link-path: enumerationsets/{webId}/enumerationvalues\n      type: object\n    EnumerationValue:\n      properties:\n        Description:\n          example: Model Number of CarBrand\n          type: string\n        Id:\n          example: 982a8694-6fe9-4cb3-a011-09d278649eef\n          format: uuid\n          type: string\n          x-disallow-patch: true\n          x-disallow-post: true\n          x-disallow-put: true\n        Links:\n          $ref: \"#/components/schemas/EnumerationValueLinks\"\n        Name:\n          example: CarBrand|Model3\n          type: string\n          x-required-post: true\n        Parent:\n          example: CarBrand\n          type: string\n          x-disallow-patch: true\n          x-disallow-post: true\n          x-disallow-put: true\n        Path:\n          example: \\\\MyAssetServer\\MyDatabase\\EnumerationSets[Model\n            Number]\\CarBrand|Model3\n          format: path\n          type: string\n          x-disallow-patch: true\n          x-disallow-post: true\n          x-disallow-put: true\n        SerializeDescription:\n          type: boolean\n        SerializeId:\n          type: boolean\n        SerializeLinks:\n          type: boolean\n        SerializePath:\n          type: boolean\n        SerializeWebId:\n          type: boolean\n        Value:\n          example: 2005\n          format: int32\n          type: integer\n          x-required-post: true\n        WebException:\n          $ref: \"#/components/schemas/WebException\"\n        WebId:\n          example: I1MVRDqD5loBNH0erqeqJodtALAT_x3jpGsKUCB1vtmvQHUMQlIYqmOlvs0ygEQnSeGSe7w\n          format: webid\n          type: string\n          x-disallow-patch: true\n          x-disallow-post: true\n          x-disallow-put: true\n      type: object\n    EnumerationValueLinks:\n      properties:\n        EnumerationSet:\n          type: string\n          x-link-optional: false\n          x-link-path: enumerationsets/{webId}\n        Parent:\n          type: string\n          x-link-optional: true\n          x-link-path: enumerationvalues/{webId}\n        Self:\n          type: string\n          x-link-optional: false\n          x-link-path: enumerationvalues/{webId}\n      type: object\n    Errors:\n      properties:\n        Errors:\n          example:\n            - An error has occurred.\n          items:\n            type: string\n          type: array\n      type: object\n    EventFrame:\n      properties:\n        AcknowledgedBy:\n          example: MyDomain\\UserA\n          type: string\n          x-disallow-patch: true\n          x-disallow-post: true\n          x-disallow-put: true\n        AcknowledgedDate:\n          example: 2014-07-30T11:04:23Z\n          format: date-time\n          type: string\n          x-disallow-patch: true\n          x-disallow-post: true\n          x-disallow-put: true\n        AreValuesCaptured:\n          example: false\n          type: boolean\n          x-disallow-patch: true\n          x-disallow-post: true\n          x-disallow-put: true\n        CanBeAcknowledged:\n          example: true\n          type: boolean\n          x-disallow-patch: true\n          x-disallow-post: true\n          x-disallow-put: true\n        CategoryNames:\n          example:\n            - Processing Plant\n          items:\n            type: string\n          type: array\n        Description:\n          example: Event Frame of Past Week\n          type: string\n        EndTime:\n          example: 2014-07-25T14:45:29Z\n          format: date-time\n          type: string\n        ExtendedProperties:\n          additionalProperties:\n            $ref: \"#/components/schemas/Value\"\n          type: object\n        HasChildren:\n          example: false\n          type: boolean\n          x-disallow-patch: true\n          x-disallow-post: true\n          x-disallow-put: true\n        Id:\n          example: 96f9a00e-4d80-471f-0000-00000004b002\n          format: uuid\n          type: string\n          x-disallow-patch: true\n          x-disallow-post: true\n          x-disallow-put: true\n        IsAcknowledged:\n          example: true\n          type: boolean\n          x-disallow-patch: true\n          x-disallow-post: true\n          x-disallow-put: true\n        IsAnnotated:\n          example: false\n          type: boolean\n          x-disallow-patch: true\n          x-disallow-post: true\n          x-disallow-put: true\n        IsLocked:\n          example: false\n          type: boolean\n          x-disallow-patch: true\n          x-disallow-post: true\n          x-disallow-put: true\n        Links:\n          $ref: \"#/components/schemas/EventFrameLinks\"\n        Name:\n          example: EF20140725-001\n          type: string\n          x-required-post: true\n        Path:\n          example: \\\\MyAssetServer\\MyDatabase\\EventFrames[EF20140725-001]\n          format: path\n          type: string\n          x-disallow-patch: true\n          x-disallow-post: true\n          x-disallow-put: true\n        RefElementWebIds:\n          example:\n            - I1EmDqD5loBNH0erqeqJodtALAaqQoQHk26BGgMQAVXYR0Ag\n          items:\n            type: string\n          type: array\n        Security:\n          $ref: \"#/components/schemas/Security\"\n        Severity:\n          example: None\n          type: string\n        StartTime:\n          example: 2014-07-18T14:45:29Z\n          format: date-time\n          type: string\n        TemplateName:\n          example: Template\n          type: string\n        WebException:\n          $ref: \"#/components/schemas/WebException\"\n        WebId:\n          example: I1FmDqD5loBNH0erqeqJodtALADqD5loBNH0cAAAAAAASwAg\n          format: webid\n          type: string\n          x-disallow-patch: true\n          x-disallow-post: true\n          x-disallow-put: true\n      type: object\n    EventFrameLinks:\n      properties:\n        Annotations:\n          type: string\n          x-link-optional: true\n          x-link-path: eventframes/{webId}/annotations\n        Attributes:\n          type: string\n          x-link-optional: false\n          x-link-path: eventframes/{webId}/attributes\n        Categories:\n          type: string\n          x-link-optional: false\n          x-link-path: eventframes/{webId}/categories\n        Database:\n          type: string\n          x-link-optional: false\n          x-link-path: assetdatabases/{webId}\n        DefaultAttribute:\n          type: string\n          x-link-optional: true\n          x-link-path: attributes/{webId}\n        EndValue:\n          type: string\n          x-link-optional: false\n          x-link-path: streamsets/{webId}/end\n        EventFrames:\n          type: string\n          x-link-optional: false\n          x-link-path: eventframes/{webId}/eventframes\n        InterpolatedData:\n          type: string\n          x-link-optional: false\n          x-link-path: streamsets/{webId}/interpolated\n        Parent:\n          type: string\n          x-link-optional: true\n          x-link-path: eventframes/{webId}\n        PlotData:\n          type: string\n          x-link-optional: false\n          x-link-path: streamsets/{webId}/plot\n        PrimaryReferencedElement:\n          type: string\n          x-link-optional: true\n          x-link-path: elements/{webId}\n        RecordedData:\n          type: string\n          x-link-optional: false\n          x-link-path: streamsets/{webId}/recorded\n        ReferencedElements:\n          type: string\n          x-link-optional: false\n          x-link-path: eventframes/{webId}/referencedelements\n        Security:\n          type: string\n          x-link-optional: false\n          x-link-path: eventframes/{webId}/security\n        SecurityEntries:\n          type: string\n          x-link-optional: false\n          x-link-path: eventframes/{webId}/securityentries\n        Self:\n          type: string\n          x-link-optional: false\n          x-link-path: eventframes/{webId}\n        SummaryData:\n          type: string\n          x-link-optional: false\n          x-link-path: streamsets/{webId}/summary\n        Template:\n          type: string\n          x-link-optional: true\n          x-link-path: elementtemplates/{webId}\n        Value:\n          type: string\n          x-link-optional: false\n          x-link-path: streamsets/{webId}/value\n      type: object\n    ExtendedTimedValue:\n      properties:\n        Annotated:\n          example: false\n          type: boolean\n          x-disallow-patch: true\n          x-disallow-post: true\n          x-disallow-put: true\n        Annotations:\n          items:\n            $ref: \"#/components/schemas/StreamAnnotation\"\n          type: array\n          x-disallow-patch: true\n          x-disallow-post: true\n          x-disallow-put: true\n        Errors:\n          items:\n            $ref: \"#/components/schemas/PropertyError\"\n          type: array\n          x-disallow-patch: true\n          x-disallow-post: true\n          x-disallow-put: true\n        Good:\n          example: true\n          type: boolean\n        Questionable:\n          example: false\n          type: boolean\n        Substituted:\n          example: false\n          type: boolean\n          x-disallow-post: true\n        Timestamp:\n          example: 2014-07-22T14:00:00Z\n          format: date-time\n          type: string\n        UnitsAbbreviation:\n          example: m\n          type: string\n        Value:\n          example: 12.3\n          type: object\n        WebException:\n          $ref: \"#/components/schemas/WebException\"\n      type: object\n    ExtendedTimedValues:\n      properties:\n        Items:\n          items:\n            $ref: \"#/components/schemas/ExtendedTimedValue\"\n          type: array\n          x-required-post: true\n        UnitsAbbreviation:\n          type: string\n          x-disallow-post: true\n        WebException:\n          $ref: \"#/components/schemas/WebException\"\n      type: object\n    Landing:\n      properties:\n        Links:\n          $ref: \"#/components/schemas/LandingLinks\"\n        WebException:\n          $ref: \"#/components/schemas/WebException\"\n      type: object\n    LandingLinks:\n      properties:\n        AssetServers:\n          type: string\n          x-link-optional: false\n          x-link-path: assetservers\n        DataServers:\n          type: string\n          x-link-optional: false\n          x-link-path: dataservers\n        Search:\n          type: string\n          x-link-optional: false\n          x-link-path: search\n        Self:\n          type: string\n          x-link-optional: false\n          x-link-path: \"\"\n        System:\n          type: string\n          x-link-optional: false\n          x-link-path: system\n      type: object\n    MediaMetadata:\n      properties:\n        Author:\n          example: DOMAIN\\username\n          type: string\n          x-disallow-patch: true\n          x-disallow-post: true\n          x-disallow-put: true\n        ChangeDate:\n          example: 2014-07-22T14:00:00Z\n          format: date-time\n          type: string\n          x-disallow-patch: true\n          x-disallow-post: true\n          x-disallow-put: true\n        Description:\n          example: The description attached to this media.\n          type: string\n        Links:\n          $ref: \"#/components/schemas/MediaMetadataLinks\"\n        Name:\n          example: ExampleFile.txt\n          type: string\n        Size:\n          example: 86753098675309\n          type: number\n          x-disallow-patch: true\n          x-disallow-post: true\n          x-disallow-put: true\n        WebException:\n          $ref: \"#/components/schemas/WebException\"\n      type: object\n    MediaMetadataLinks:\n      properties:\n        MediaData:\n          type: string\n          x-link-optional: false\n        Owner:\n          type: string\n          x-link-optional: false\n        Self:\n          type: string\n          x-link-optional: false\n      type: object\n    NotificationContactTemplate:\n      properties:\n        Available:\n          example: true\n          type: boolean\n        ConfigString:\n          example: \"\"\n          type: string\n        ContactType:\n          example: Individual\n          type: string\n        Description:\n          example: \"\"\n          type: string\n        EscalationTimeout:\n          example: PT3S\n          format: Duration\n          type: string\n        HasChildren:\n          example: false\n          type: boolean\n          x-disallow-patch: true\n          x-disallow-post: true\n          x-disallow-put: true\n        Id:\n          example: cbb28260-853d-11e4-80c5-00155d844304\n          format: uuid\n          type: string\n          x-disallow-patch: true\n          x-disallow-post: true\n          x-disallow-put: true\n        Links:\n          $ref: \"#/components/schemas/NotificationContactTemplateLinks\"\n        MaximumRetries:\n          example: 5\n          type: integer\n        MinimumAcknowledgements:\n          example: 2\n          type: integer\n        Name:\n          example: Plant Manager\n          type: string\n          x-required-post: true\n        NotifyWhenInstanceEnded:\n          example: true\n          type: boolean\n        Path:\n          example: \\\\MyAssetServer\\NotificationContactTemplates[Plant Manager]\n          format: path\n          type: string\n          x-disallow-patch: true\n          x-disallow-post: true\n          x-disallow-put: true\n        PlugInName:\n          example: \"\"\n          type: string\n        RetryInterval:\n          example: PT5S\n          format: Duration\n          type: string\n        WebException:\n          $ref: \"#/components/schemas/WebException\"\n        WebId:\n          example: I1NCEDqD5loBNH0erqeqJodtALAYIKyyz2F5BGAxQAVXYRDBAGyPedZG1sUmxOOclp3Flwg\n          format: webid\n          type: string\n          x-disallow-patch: true\n          x-disallow-post: true\n          x-disallow-put: true\n      type: object\n    NotificationContactTemplateLinks:\n      properties:\n        AssetServer:\n          type: string\n          x-link-optional: false\n          x-link-path: assetservers/{webId}\n        NotificationContactTemplates:\n          type: string\n          x-link-optional: false\n          x-link-path: notificationcontacttemplates/{webId}/notificationcontacttemplates\n        NotificationPlugIn:\n          type: string\n          x-link-optional: true\n          x-link-path: notificationplugins/{webId}\n        Security:\n          type: string\n          x-link-optional: false\n          x-link-path: notificationcontacttemplates/{webId}/security\n        SecurityEntries:\n          type: string\n          x-link-optional: false\n          x-link-path: notificationcontacttemplates/{webId}/securityentries\n        Self:\n          type: string\n          x-link-optional: false\n          x-link-path: notificationcontacttemplates/{webId}\n      type: object\n    NotificationPlugIn:\n      properties:\n        AssemblyFileName:\n          example: OSIsoft.AF.Notification.DeliveryChannel.WebService.dll\n          type: string\n          x-disallow-patch: true\n          x-disallow-post: true\n          x-disallow-put: true\n        AssemblyID:\n          example: 0b450496-63f6-4207-b4c5-2c1c73ca897a\n          format: uuid\n          type: string\n          x-disallow-patch: true\n          x-disallow-post: true\n          x-disallow-put: true\n        AssemblyLoadProperties:\n          example:\n            - NET4\n            - SDK_NET4\n          items:\n            type: string\n          type: array\n          x-disallow-patch: true\n          x-disallow-post: true\n          x-disallow-put: true\n        AssemblyTime:\n          example: 2016-05-25T14:01:07Z\n          format: date-time\n          type: string\n          x-disallow-patch: true\n          x-disallow-post: true\n          x-disallow-put: true\n        CompatibilityVersion:\n          example: 2\n          format: int32\n          type: integer\n          x-disallow-patch: true\n          x-disallow-post: true\n          x-disallow-put: true\n        Description:\n          example: Delivery channel for calling a web service\n          type: string\n          x-disallow-patch: true\n          x-disallow-post: true\n          x-disallow-put: true\n        Id:\n          example: 145c35d6-f4d7-41d9-86ae-08e5098d3a96\n          format: uuid\n          type: string\n          x-disallow-patch: true\n          x-disallow-post: true\n          x-disallow-put: true\n        IsBrowsable:\n          example: true\n          type: boolean\n          x-disallow-patch: true\n          x-disallow-post: true\n          x-disallow-put: true\n        IsNonEditableConfig:\n          example: false\n          type: boolean\n          x-disallow-patch: true\n          x-disallow-post: true\n          x-disallow-put: true\n        Links:\n          $ref: \"#/components/schemas/DeliveryChannelPlugInLinks\"\n        LoadedAssemblyTime:\n          example: 1970-01-01T00:00:00Z\n          format: date-time\n          type: string\n          x-disallow-patch: true\n          x-disallow-post: true\n          x-disallow-put: true\n        LoadedVersion:\n          example: \"\"\n          type: string\n          x-disallow-patch: true\n          x-disallow-post: true\n          x-disallow-put: true\n        Name:\n          example: WebService\n          type: string\n          x-disallow-patch: true\n          x-disallow-post: true\n          x-disallow-put: true\n        Path:\n          example: \\\\MyAssetServer\\PlugInsDeliveryChannel[WebService]\n          format: path\n          type: string\n          x-disallow-patch: true\n          x-disallow-post: true\n          x-disallow-put: true\n        Version:\n          example: 2.10.0.8516\n          type: string\n          x-disallow-patch: true\n          x-disallow-post: true\n          x-disallow-put: true\n        WebException:\n          $ref: \"#/components/schemas/WebException\"\n        WebId:\n          example: F1DCDqD5loBNH0erqeqJodtALA1jVcFNf02UGGrgjlCY06lgUkVTVFVOSVRcUExVR0lOU0RFTElWRVJZQ0hBTk5FTFtXRUJTRVJWSUNFXQ\n          format: webid\n          type: string\n          x-disallow-patch: true\n          x-disallow-post: true\n          x-disallow-put: true\n      type: object\n    NotificationRule:\n      properties:\n        AutoCreated:\n          example: true\n          type: boolean\n          x-disallow-patch: true\n          x-disallow-post: true\n          x-disallow-put: true\n        CategoryNames:\n          example:\n            - Equipment Assets\n          items:\n            type: string\n          type: array\n        Criteria:\n          example: \"Name: EventFrameCriteriaName\"\n          type: string\n        Description:\n          example: Manufacturing Equipment MachineName\n          type: string\n        Id:\n          example: e9a984d0-f47c-11e7-8454-00155d029708\n          format: uuid\n          type: string\n          x-disallow-patch: true\n          x-disallow-post: true\n          x-disallow-put: true\n        MultiTriggerEventOption:\n          example: HighestSeverity\n          type: string\n        Name:\n          example: MachineName\n          type: string\n          x-required-post: true\n        NonrepetitionInterval:\n          example: PT3S\n          format: Duration\n          type: string\n        Path:\n          example: \\\\MyAssetServer\\MyDatabase\\CityName\\EngineeringProcess\\Equipment\\MachineName\\NotificationRules[RuleName]\n          format: path\n          type: string\n          x-disallow-patch: true\n          x-disallow-post: true\n          x-disallow-put: true\n        ResendInterval:\n          example: PT5S\n          format: Duration\n          type: string\n        Status:\n          example: Disabled\n          type: string\n          x-disallow-patch: true\n          x-disallow-post: true\n          x-disallow-put: true\n        TemplateName:\n          example: MachineName Notification Rule\n          type: string\n        WebException:\n          $ref: \"#/components/schemas/WebException\"\n        WebId:\n          example: I1NRDqD5loBNH0erqeqJodtALA5bYfWno26BGgMQAVXYR0Ag\n          format: webid\n          type: string\n          x-disallow-patch: true\n          x-disallow-post: true\n          x-disallow-put: true\n      type: object\n    NotificationRuleSubscriber:\n      properties:\n        ConfigString:\n          example: ToEmail=mike@testemail.com\n          type: string\n        ContactTemplateName:\n          example: Plant Manager\n          type: string\n          x-disallow-patch: true\n          x-disallow-put: true\n          x-required-post: true\n        ContactType:\n          example: Individual\n          type: string\n          x-disallow-patch: true\n          x-disallow-post: true\n          x-disallow-put: true\n        DeliveryFormatName:\n          example: DeliveryFormat\n          type: string\n          x-disallow-patch: true\n          x-disallow-post: true\n          x-disallow-put: true\n        Description:\n          example: Manufacturing Machine MachineName subscription\n          type: string\n          x-disallow-patch: true\n          x-disallow-post: true\n          x-disallow-put: true\n        EscalationTimeout:\n          example: PT3S\n          format: Duration\n          type: string\n        Id:\n          example: e9a984d0-f47c-11e7-8454-00155d029708\n          format: uuid\n          type: string\n          x-disallow-patch: true\n          x-disallow-post: true\n          x-disallow-put: true\n        MaximumRetries:\n          example: \"3\"\n          type: integer\n        Name:\n          example: NotificationSubscriptionRuleName\n          type: string\n          x-disallow-patch: true\n          x-disallow-post: true\n          x-disallow-put: true\n        NotifyOption:\n          example: EventStart\n          type: string\n        Path:\n          example: \\\\MyAssetServer\\MyDatabase\\NotificationRules[NotificationSubscriptionRuleName]\n          format: path\n          type: string\n          x-disallow-patch: true\n          x-disallow-post: true\n          x-disallow-put: true\n        PlugInName:\n          example: Email\n          type: string\n          x-disallow-patch: true\n          x-disallow-post: true\n          x-disallow-put: true\n        RetryInterval:\n          example: PT3S\n          format: Duration\n          type: string\n        WebException:\n          $ref: \"#/components/schemas/WebException\"\n        WebId:\n          example: I1NSLDqD5loBNH0erqeqJodtALA5bYfWno26BGgMQAVXYR0AgPUJJXNlEW1w78rnCXDmcDA\n          format: webid\n          type: string\n          x-disallow-patch: true\n          x-disallow-post: true\n          x-disallow-put: true\n      type: object\n    NotificationRuleTemplate:\n      properties:\n        CategoryNames:\n          example:\n            - MachineNameAlerts\n          items:\n            type: string\n          type: array\n        Criteria:\n          example: \"Name: EventFrameCriteriaName\"\n          type: string\n        Description:\n          example: Description entered by the user\n          type: string\n        Id:\n          example: e9a984d0-f47c-11e7-8454-00155d029708\n          format: uuid\n          type: string\n          x-disallow-patch: true\n          x-disallow-post: true\n          x-disallow-put: true\n        MultiTriggerEventOption:\n          example: HighestSeverity\n          type: string\n        Name:\n          example: MachineName\n          type: string\n          x-required-post: true\n        NonrepetitionInterval:\n          example: PT3S\n          format: Duration\n          type: string\n        Path:\n          example: \\\\MyAssetServer\\MyDatabase\\CityName\\ElementTemplates[Template3]\\NotificationRuleTemplates[Notification\n            Rule Template]\n          format: path\n          type: string\n          x-disallow-patch: true\n          x-disallow-post: true\n          x-disallow-put: true\n        ResendInterval:\n          example: PT5S\n          format: Duration\n          type: string\n        Status:\n          example: Functioning\n          type: string\n          x-disallow-patch: true\n          x-disallow-post: true\n          x-disallow-put: true\n        TemplateName:\n          example: MachineName Notification Rule Template\n          type: string\n          x-disallow-patch: true\n          x-disallow-post: true\n          x-disallow-put: true\n        WebException:\n          $ref: \"#/components/schemas/WebException\"\n        WebId:\n          example: I1NTDqD5loBNH0erqeqJodtALAtdcX5JH_5xGEKAAVXTSaAg\n          format: webid\n          type: string\n          x-disallow-patch: true\n          x-disallow-post: true\n          x-disallow-put: true\n      type: object\n    PIPointDataReference:\n      properties:\n        Descriptor:\n          example: 12 Hour Sine Wave\n          type: string\n        DigitalSetName:\n          example: \"\"\n          type: string\n          x-disallow-patch: true\n        DisplayDigits:\n          example: -5\n          type: integer\n        EngineeringUnits:\n          example: \"\"\n          type: string\n        Future:\n          example: false\n          type: boolean\n          x-disallow-patch: true\n        Id:\n          example: 82\n          format: int32\n          type: integer\n          x-disallow-patch: true\n          x-disallow-post: true\n          x-disallow-put: true\n        Name:\n          example: PointName\n          type: string\n          x-required-post: true\n        Path:\n          example: \\\\MyPIServer\\PointName\n          format: path\n          type: string\n          x-disallow-patch: true\n          x-disallow-post: true\n          x-disallow-put: true\n        PointClass:\n          example: classic\n          type: string\n          x-disallow-patch: true\n          x-required-post: true\n        PointType:\n          example: Float32\n          type: string\n          x-disallow-patch: true\n          x-required-post: true\n        Span:\n          example: 100\n          type: number\n          x-disallow-patch: true\n          x-disallow-post: true\n          x-disallow-put: true\n        Step:\n          example: false\n          type: boolean\n        WebId:\n          example: I1DPa70Wf0zBA06CLkV9ovNQgQCAAAAA\n          format: webid\n          type: string\n          x-disallow-patch: true\n          x-disallow-post: true\n          x-disallow-put: true\n        Zero:\n          example: 0\n          type: number\n          x-disallow-patch: true\n          x-disallow-post: true\n          x-disallow-put: true\n      type: object\n    PaginationLinks:\n      properties:\n        First:\n          type: string\n          x-link-optional: true\n        Last:\n          type: string\n          x-link-optional: true\n        Next:\n          type: string\n          x-link-optional: true\n        Previous:\n          type: string\n          x-link-optional: true\n      type: object\n    Point:\n      properties:\n        Descriptor:\n          example: 12 Hour Sine Wave\n          type: string\n        DigitalSetName:\n          example: \"\"\n          type: string\n          x-disallow-patch: true\n        DisplayDigits:\n          example: -5\n          type: integer\n        EngineeringUnits:\n          example: \"\"\n          type: string\n        Future:\n          example: false\n          type: boolean\n          x-disallow-patch: true\n        Id:\n          example: 82\n          format: int32\n          type: integer\n          x-disallow-patch: true\n          x-disallow-post: true\n          x-disallow-put: true\n        Links:\n          $ref: \"#/components/schemas/PointLinks\"\n        Name:\n          example: PointName\n          type: string\n          x-required-post: true\n        Path:\n          example: \\\\MyPIServer\\PointName\n          format: path\n          type: string\n          x-disallow-patch: true\n          x-disallow-post: true\n          x-disallow-put: true\n        PointClass:\n          example: classic\n          type: string\n          x-disallow-patch: true\n          x-required-post: true\n        PointType:\n          example: Float32\n          type: string\n          x-disallow-patch: true\n          x-required-post: true\n        Span:\n          example: 100\n          type: number\n          x-disallow-patch: true\n          x-disallow-post: true\n          x-disallow-put: true\n        Step:\n          example: false\n          type: boolean\n        WebException:\n          $ref: \"#/components/schemas/WebException\"\n        WebId:\n          example: I1DPa70Wf0zBA06CLkV9ovNQgQCAAAAA\n          format: webid\n          type: string\n          x-disallow-patch: true\n          x-disallow-post: true\n          x-disallow-put: true\n        Zero:\n          example: 0\n          type: number\n          x-disallow-patch: true\n          x-disallow-post: true\n          x-disallow-put: true\n      type: object\n    PointAttribute:\n      properties:\n        Links:\n          $ref: \"#/components/schemas/PointAttributeLinks\"\n        Name:\n          example: typicalvalue\n          type: string\n          x-required-put: true\n        Value:\n          example: 50\n          type: object\n          x-required-put: true\n        WebException:\n          $ref: \"#/components/schemas/WebException\"\n      type: object\n    PointAttributeLinks:\n      properties:\n        Point:\n          type: string\n          x-link-optional: false\n          x-link-path: points/{webId}\n        Self:\n          type: string\n          x-link-optional: false\n          x-link-path: points/{webId}/attributes/{name}\n      type: object\n    PointLinks:\n      properties:\n        Attributes:\n          type: string\n          x-link-optional: false\n          x-link-path: points/{webId}/attributes\n        DataServer:\n          type: string\n          x-link-optional: false\n          x-link-path: dataservers/{webId}\n        EndValue:\n          type: string\n          x-link-optional: false\n          x-link-path: streams/{webId}/end\n        InterpolatedData:\n          type: string\n          x-link-optional: false\n          x-link-path: streams/{webId}/interpolated\n        PlotData:\n          type: string\n          x-link-optional: false\n          x-link-path: streams/{webId}/plot\n        RecordedData:\n          type: string\n          x-link-optional: false\n          x-link-path: streams/{webId}/recorded\n        Self:\n          type: string\n          x-link-optional: false\n          x-link-path: points/{webId}\n        SummaryData:\n          type: string\n          x-link-optional: false\n          x-link-path: streams/{webId}/summary\n        Value:\n          type: string\n          x-link-optional: false\n          x-link-path: streams/{webId}/value\n      type: object\n    PropertyError:\n      properties:\n        FieldName:\n          example: Value\n          type: string\n        Message:\n          example:\n            - An error has occurred.\n          items:\n            type: string\n          type: array\n      type: object\n    Request:\n      properties:\n        Content:\n          type: string\n        Headers:\n          additionalProperties:\n            type: string\n          type: object\n        Method:\n          example: GET\n          type: string\n          x-required-post: true\n        Parameters:\n          items:\n            type: string\n          type: array\n        ParentIds:\n          items:\n            type: string\n          type: array\n        RequestTemplate:\n          $ref: \"#/components/schemas/RequestTemplate\"\n        Resource:\n          type: string\n      type: object\n    RequestTemplate:\n      properties:\n        Resource:\n          type: string\n          x-required-post: true\n      type: object\n    Response:\n      properties:\n        Content:\n          type: object\n        Headers:\n          additionalProperties:\n            type: string\n          type: object\n        Status:\n          enum:\n            - 100\n            - 101\n            - 200\n            - 201\n            - 202\n            - 203\n            - 204\n            - 205\n            - 206\n            - 207\n            - 300\n            - 301\n            - 302\n            - 303\n            - 304\n            - 305\n            - 306\n            - 307\n            - 400\n            - 401\n            - 402\n            - 403\n            - 404\n            - 405\n            - 406\n            - 407\n            - 408\n            - 409\n            - 410\n            - 411\n            - 412\n            - 413\n            - 414\n            - 415\n            - 416\n            - 417\n            - 426\n            - 500\n            - 501\n            - 502\n            - 503\n            - 504\n            - 505\n          example: 200\n          format: int32\n          type: integer\n      type: object\n    SearchByAttribute:\n      properties:\n        ElementTemplate:\n          example: I1ETDqD5loBNH0erqeqJodtALAjFPVfUpY-02A8uioGDSgIg\n          format: webid\n          type: string\n        SearchRoot:\n          example: I1RDDqD5loBNH0erqeqJodtALA8fbgUnyQW02v-gLGIxumSg\n          format: webid\n          type: string\n        ValueQueries:\n          items:\n            $ref: \"#/components/schemas/ValueQuery\"\n          type: array\n        WebException:\n          $ref: \"#/components/schemas/WebException\"\n      type: object\n    Security:\n      properties:\n        CanAnnotate:\n          example: true\n          type: boolean\n          x-disallow-patch: true\n          x-disallow-post: true\n          x-disallow-put: true\n        CanDelete:\n          example: true\n          type: boolean\n          x-disallow-patch: true\n          x-disallow-post: true\n          x-disallow-put: true\n        CanExecute:\n          example: true\n          type: boolean\n          x-disallow-patch: true\n          x-disallow-post: true\n          x-disallow-put: true\n        CanRead:\n          example: true\n          type: boolean\n          x-disallow-patch: true\n          x-disallow-post: true\n          x-disallow-put: true\n        CanReadData:\n          example: true\n          type: boolean\n          x-disallow-patch: true\n          x-disallow-post: true\n          x-disallow-put: true\n        CanSubscribe:\n          example: true\n          type: boolean\n          x-disallow-patch: true\n          x-disallow-post: true\n          x-disallow-put: true\n        CanSubscribeOthers:\n          example: true\n          type: boolean\n          x-disallow-patch: true\n          x-disallow-post: true\n          x-disallow-put: true\n        CanWrite:\n          example: true\n          type: boolean\n          x-disallow-patch: true\n          x-disallow-post: true\n          x-disallow-put: true\n        CanWriteData:\n          example: true\n          type: boolean\n          x-disallow-patch: true\n          x-disallow-post: true\n          x-disallow-put: true\n        HasAdmin:\n          example: true\n          type: boolean\n          x-disallow-patch: true\n          x-disallow-post: true\n          x-disallow-put: true\n        Rights:\n          example:\n            - Read\n            - WriteData\n          items:\n            type: string\n          type: array\n        WebException:\n          $ref: \"#/components/schemas/WebException\"\n      type: object\n    SecurityEntry:\n      properties:\n        AllowRights:\n          example:\n            - Read\n            - ReadData\n          items:\n            type: string\n          type: array\n        DenyRights:\n          example:\n            - Write\n            - Execute\n            - Admin\n          items:\n            type: string\n          type: array\n        Links:\n          $ref: \"#/components/schemas/SecurityEntryLinks\"\n        Name:\n          example: domain\\user1\n          type: string\n          x-disallow-patch: true\n          x-disallow-post: true\n          x-disallow-put: true\n        SecurityIdentityName:\n          example: domain\\user1\n          type: string\n          x-disallow-put: true\n          x-required-post: true\n        WebException:\n          $ref: \"#/components/schemas/WebException\"\n      type: object\n    SecurityEntryLinks:\n      properties:\n        SecurableObject:\n          type: string\n          x-link-optional: false\n        SecurityIdentity:\n          type: string\n          x-link-optional: false\n          x-link-path: securityidentities/{webId}\n        Self:\n          type: string\n          x-link-optional: false\n      type: object\n    SecurityIdentity:\n      properties:\n        Description:\n          example: \"\"\n          type: string\n        Id:\n          example: f3a5ee49-1838-4aa2-9d79-e16294523db7\n          format: uuid\n          type: string\n          x-disallow-patch: true\n          x-disallow-post: true\n          x-disallow-put: true\n        IsEnabled:\n          example: true\n          type: boolean\n        Links:\n          $ref: \"#/components/schemas/SecurityIdentityLinks\"\n        Name:\n          example: MySecurityIdentity\n          type: string\n          x-required-post: true\n        Path:\n          example: \\\\MyAssetServer\\SecurityIdentities[MySecurityIdentity]\n          format: path\n          type: string\n          x-disallow-patch: true\n          x-disallow-post: true\n          x-disallow-put: true\n        WebException:\n          $ref: \"#/components/schemas/WebException\"\n        WebId:\n          example: I1SIDqD5loBNH0erqeqJodtALASe6l8zgYokqdeeFilFI9tw\n          format: webid\n          type: string\n          x-disallow-patch: true\n          x-disallow-post: true\n          x-disallow-put: true\n      type: object\n    SecurityIdentityLinks:\n      properties:\n        AssetServer:\n          type: string\n          x-link-optional: false\n          x-link-path: assetservers/{webId}\n        Security:\n          type: string\n          x-link-optional: false\n          x-link-path: securityidentities/{webId}/security\n        SecurityEntries:\n          type: string\n          x-link-optional: false\n          x-link-path: securityidentities/{webId}/securityentries\n        SecurityMappings:\n          type: string\n          x-link-optional: false\n          x-link-path: securityidentities/{webId}/securitymappings\n        Self:\n          type: string\n          x-link-optional: false\n          x-link-path: securityidentities/{webId}\n      type: object\n    SecurityMapping:\n      properties:\n        Account:\n          example: domain\\user\n          type: string\n          x-disallow-patch: true\n          x-required-post: true\n        Description:\n          example: \"\"\n          type: string\n        Id:\n          example: ac14ef82-19c0-4a07-96a7-d1fb0b84c05d\n          format: uuid\n          type: string\n          x-disallow-patch: true\n          x-disallow-post: true\n          x-disallow-put: true\n        Links:\n          $ref: \"#/components/schemas/SecurityMappingLinks\"\n        Name:\n          example: MySecurityMapping\n          type: string\n        Path:\n          example: \\\\MyAssetServer\\SecurityMappings[MySecurityMapping]\n          format: path\n          type: string\n          x-disallow-patch: true\n          x-disallow-post: true\n          x-disallow-put: true\n        SecurityIdentityWebId:\n          example: I1SIEDqD5loBNH0erqeqJodtALAYIKyyz2F5BGAxQAVXYRDBAGyPedZG1sUmxOOclp3Flwg\n          type: string\n          x-required-post: true\n        WebException:\n          $ref: \"#/components/schemas/WebException\"\n        WebId:\n          example: I1SMDqD5loBNH0erqeqJodtALAgu8UrMAZB0qWp9H7C4TAXQ\n          format: webid\n          type: string\n          x-disallow-patch: true\n          x-disallow-post: true\n          x-disallow-put: true\n      type: object\n    SecurityMappingLinks:\n      properties:\n        AssetServer:\n          type: string\n          x-link-optional: false\n          x-link-path: assetservers/{webId}\n        Security:\n          type: string\n          x-link-optional: false\n          x-link-path: securitymappings/{webId}/security\n        SecurityEntries:\n          type: string\n          x-link-optional: false\n          x-link-path: securitymappings/{webId}/securityentries\n        SecurityIdentity:\n          type: string\n          x-link-optional: false\n          x-link-path: securityidentities/{webId}\n        Self:\n          type: string\n          x-link-optional: false\n          x-link-path: securitymappings/{webId}\n      type: object\n    SecurityRights:\n      properties:\n        CanAnnotate:\n          example: true\n          type: boolean\n          x-disallow-patch: true\n          x-disallow-post: true\n          x-disallow-put: true\n        CanDelete:\n          example: true\n          type: boolean\n          x-disallow-patch: true\n          x-disallow-post: true\n          x-disallow-put: true\n        CanExecute:\n          example: true\n          type: boolean\n          x-disallow-patch: true\n          x-disallow-post: true\n          x-disallow-put: true\n        CanRead:\n          example: true\n          type: boolean\n          x-disallow-patch: true\n          x-disallow-post: true\n          x-disallow-put: true\n        CanReadData:\n          example: true\n          type: boolean\n          x-disallow-patch: true\n          x-disallow-post: true\n          x-disallow-put: true\n        CanSubscribe:\n          example: true\n          type: boolean\n          x-disallow-patch: true\n          x-disallow-post: true\n          x-disallow-put: true\n        CanSubscribeOthers:\n          example: true\n          type: boolean\n          x-disallow-patch: true\n          x-disallow-post: true\n          x-disallow-put: true\n        CanWrite:\n          example: true\n          type: boolean\n          x-disallow-patch: true\n          x-disallow-post: true\n          x-disallow-put: true\n        CanWriteData:\n          example: true\n          type: boolean\n          x-disallow-patch: true\n          x-disallow-post: true\n          x-disallow-put: true\n        HasAdmin:\n          example: true\n          type: boolean\n          x-disallow-patch: true\n          x-disallow-post: true\n          x-disallow-put: true\n        Links:\n          $ref: \"#/components/schemas/SecurityRightsLinks\"\n        OwnerWebId:\n          example: I1EmDqD5loBNH0erqeqJodtALAYIKyyz2F5BGAxQAVXYRDBA\n          type: string\n        Rights:\n          example:\n            - Read\n            - WriteData\n          items:\n            type: string\n          type: array\n        SecurityItem:\n          example: Default\n          type: string\n        UserIdentity:\n          example: domain\\user\n          type: string\n        WebException:\n          $ref: \"#/components/schemas/WebException\"\n      type: object\n    SecurityRightsLinks:\n      properties:\n        Owner:\n          type: string\n          x-link-optional: false\n        Self:\n          type: string\n          x-link-optional: false\n      type: object\n    StreamAnnotation:\n      properties:\n        CreationDate:\n          example: 2016-06-21T14:45:50.2988321Z\n          format: date-time\n          type: string\n          x-disallow-patch: true\n          x-disallow-post: true\n          x-disallow-put: true\n        Creator:\n          example: MyDomain\\UserA\n          type: string\n          x-disallow-patch: true\n          x-disallow-post: true\n          x-disallow-put: true\n        Description:\n          example: Signifies a spike in temperature.\n          type: string\n        Errors:\n          items:\n            $ref: \"#/components/schemas/PropertyError\"\n          type: array\n          x-disallow-patch: true\n          x-disallow-post: true\n          x-disallow-put: true\n        Id:\n          example: 512B6616-CE39-4F70-9048-8C6A025FB592\n          format: uuid\n          type: string\n          x-disallow-patch: true\n          x-disallow-post: true\n          x-disallow-put: true\n        Modifier:\n          example: MyDomain\\UserA\n          type: string\n          x-disallow-patch: true\n          x-disallow-post: true\n          x-disallow-put: true\n        ModifyDate:\n          example: 2016-06-21T14:45:50.2988321Z\n          format: date-time\n          type: string\n          x-disallow-patch: true\n          x-disallow-post: true\n          x-disallow-put: true\n        Name:\n          example: Temperature Annotation\n          type: string\n          x-required-post: true\n        Value:\n          example: The temperature spiked because of a malfunction with a unit in our\n            west plant.\n          type: object\n        WebException:\n          $ref: \"#/components/schemas/WebException\"\n      type: object\n    StreamSummaries:\n      properties:\n        Items:\n          items:\n            $ref: \"#/components/schemas/SummaryValue\"\n          type: array\n          x-disallow-patch: true\n          x-disallow-post: true\n          x-disallow-put: true\n        Links:\n          $ref: \"#/components/schemas/StreamSummariesLinks\"\n        Name:\n          example: Water\n          type: string\n          x-disallow-patch: true\n          x-disallow-post: true\n          x-disallow-put: true\n        Path:\n          example: \\\\MyAssetServer\\MyDatabase\\MyElement|Water\n          format: path\n          type: string\n          x-disallow-patch: true\n          x-disallow-post: true\n          x-disallow-put: true\n        WebException:\n          $ref: \"#/components/schemas/WebException\"\n        WebId:\n          example: I1AbEDqD5loBNH0erqeqJodtALAYIKyyz2F5BGAxQAVXYRDBAGyPedZG1sUmxOOclp3Flwg\n          format: webid\n          type: string\n          x-disallow-patch: true\n          x-disallow-post: true\n          x-disallow-put: true\n      type: object\n    StreamSummariesLinks:\n      properties:\n        Source:\n          type: string\n          x-link-optional: false\n      type: object\n    StreamUpdatesRegister:\n      properties:\n        Exception:\n          $ref: \"#/components/schemas/Errors\"\n        LatestMarker:\n          example: 0cbbec466f3a42288c8c47112f54b852_12\n          type: string\n          x-disallow-patch: true\n          x-disallow-post: true\n          x-disallow-put: true\n        Source:\n          example: I1AbEDqD5loBNH0erqeqJodtALA9iLxz4m_5RGAxgAVXYUACw_yrS377vX0uZVHTgkanusw\n          format: webid\n          type: string\n          x-disallow-patch: true\n          x-disallow-post: true\n          x-disallow-put: true\n        SourceName:\n          example: Water\n          type: string\n          x-disallow-patch: true\n          x-disallow-post: true\n          x-disallow-put: true\n        SourcePath:\n          example: \\\\MyAssetServer\\MyDatabase\\MyElement|Water\n          format: path\n          type: string\n          x-disallow-patch: true\n          x-disallow-post: true\n          x-disallow-put: true\n        Status:\n          example: Succeeded\n          type: string\n          x-disallow-patch: true\n          x-disallow-post: true\n          x-disallow-put: true\n      type: object\n    StreamUpdatesRetrieve:\n      properties:\n        Events:\n          items:\n            $ref: \"#/components/schemas/DataPipeEvent\"\n          type: array\n          x-disallow-patch: true\n          x-disallow-post: true\n          x-disallow-put: true\n        Exception:\n          $ref: \"#/components/schemas/Errors\"\n        LatestMarker:\n          example: 0cbbec466f3a42288c8c47112f54b852_12\n          type: string\n          x-disallow-patch: true\n          x-disallow-post: true\n          x-disallow-put: true\n        RequestedMarker:\n          example: 0cbbec466f3a42288c8c47112f54b852_0\n          type: string\n          x-disallow-patch: true\n          x-disallow-post: true\n          x-disallow-put: true\n        Source:\n          example: I1AbEDqD5loBNH0erqeqJodtALAYIKyyz2F5BGAxQAVXYRDBAGyPedZG1sUmxOOclp3Flwg\n          format: webid\n          type: string\n          x-disallow-patch: true\n          x-disallow-post: true\n          x-disallow-put: true\n        SourceName:\n          example: Water\n          type: string\n          x-disallow-patch: true\n          x-disallow-post: true\n          x-disallow-put: true\n        SourcePath:\n          example: \\\\MyAssetServer\\MyDatabase\\MyElement|Water\n          format: path\n          type: string\n          x-disallow-patch: true\n          x-disallow-post: true\n          x-disallow-put: true\n        Status:\n          example: Created\n          type: string\n          x-disallow-patch: true\n          x-disallow-post: true\n          x-disallow-put: true\n      type: object\n    StreamValue:\n      properties:\n        Links:\n          $ref: \"#/components/schemas/StreamValueLinks\"\n        Name:\n          example: Water\n          type: string\n          x-disallow-post: true\n        Path:\n          example: \\\\MyAssetServer\\MyDatabase\\MyElement|Water\n          format: path\n          type: string\n          x-disallow-post: true\n        Value:\n          $ref: \"#/components/schemas/TimedValue\"\n        WebException:\n          $ref: \"#/components/schemas/WebException\"\n        WebId:\n          example: I1AbEDqD5loBNH0erqeqJodtALAYIKyyz2F5BGAxQAVXYRDBAGyPedZG1sUmxOOclp3Flwg\n          format: webid\n          type: string\n          x-required-post: true\n      type: object\n    StreamValueLinks:\n      properties:\n        Source:\n          type: string\n          x-link-optional: false\n      type: object\n    StreamValues:\n      properties:\n        Items:\n          items:\n            $ref: \"#/components/schemas/TimedValue\"\n          type: array\n          x-required-post: true\n        Links:\n          $ref: \"#/components/schemas/StreamValuesLinks\"\n        Name:\n          example: Water\n          type: string\n          x-disallow-post: true\n        Path:\n          example: \\\\MyAssetServer\\MyDatabase\\MyElement|Water\n          format: path\n          type: string\n          x-disallow-post: true\n        UnitsAbbreviation:\n          example: m\n          type: string\n          x-disallow-patch: true\n          x-disallow-post: true\n          x-disallow-put: true\n        WebException:\n          $ref: \"#/components/schemas/WebException\"\n        WebId:\n          example: I1AbEDqD5loBNH0erqeqJodtALAYIKyyz2F5BGAxQAVXYRDBAGyPedZG1sUmxOOclp3Flwg\n          format: webid\n          type: string\n          x-required-post: true\n      type: object\n    StreamValuesLinks:\n      properties:\n        Source:\n          type: string\n          x-link-optional: false\n      type: object\n    Substatus:\n      properties:\n        Message:\n          type: string\n        Substatus:\n          enum:\n            - 100\n            - 101\n            - 200\n            - 201\n            - 202\n            - 203\n            - 204\n            - 205\n            - 206\n            - 207\n            - 300\n            - 301\n            - 302\n            - 303\n            - 304\n            - 305\n            - 306\n            - 307\n            - 400\n            - 401\n            - 402\n            - 403\n            - 404\n            - 405\n            - 406\n            - 407\n            - 408\n            - 409\n            - 410\n            - 411\n            - 412\n            - 413\n            - 414\n            - 415\n            - 416\n            - 417\n            - 426\n            - 500\n            - 501\n            - 502\n            - 503\n            - 504\n            - 505\n          example: \"200\"\n          format: int32\n          type: integer\n        WebException:\n          $ref: \"#/components/schemas/WebException\"\n      type: object\n    SummaryValue:\n      properties:\n        Type:\n          example: Total\n          type: string\n        Value:\n          $ref: \"#/components/schemas/TimedValue\"\n        WebException:\n          $ref: \"#/components/schemas/WebException\"\n      type: object\n    SystemLanding:\n      properties:\n        Links:\n          $ref: \"#/components/schemas/SystemLandingLinks\"\n        ProductTitle:\n          example: PI Web API 2016 R2\n          type: string\n          x-disallow-patch: true\n          x-disallow-post: true\n          x-disallow-put: true\n        ProductVersion:\n          example: 1.8.0.201\n          type: string\n          x-disallow-patch: true\n          x-disallow-post: true\n          x-disallow-put: true\n        WebException:\n          $ref: \"#/components/schemas/WebException\"\n      type: object\n    SystemLandingLinks:\n      properties:\n        CacheInstances:\n          type: string\n          x-link-optional: false\n          x-link-path: system/cacheinstances\n        Configuration:\n          type: string\n          x-link-optional: false\n          x-link-path: system/configuration\n        Self:\n          type: string\n          x-link-optional: false\n          x-link-path: system\n        Status:\n          type: string\n          x-link-optional: false\n          x-link-path: system/status\n        UserInfo:\n          type: string\n          x-link-optional: false\n          x-link-path: system/userinfo\n        Versions:\n          type: string\n          x-link-optional: false\n          x-link-path: system/versions\n      type: object\n    SystemStatus:\n      properties:\n        CacheInstances:\n          example: 0\n          format: int32\n          type: integer\n          x-disallow-patch: true\n          x-disallow-post: true\n          x-disallow-put: true\n        ServerTime:\n          example: 2014-07-22T14:00:00Z\n          format: date-time\n          type: string\n        State:\n          example: Running\n          type: string\n          x-disallow-patch: true\n          x-disallow-post: true\n          x-disallow-put: true\n        UpTimeInMinutes:\n          example: 32345.6\n          format: double\n          type: number\n          x-disallow-patch: true\n          x-disallow-post: true\n          x-disallow-put: true\n        WebException:\n          $ref: \"#/components/schemas/WebException\"\n      type: object\n    Table:\n      properties:\n        CategoryNames:\n          example:\n            - Table Category\n          items:\n            type: string\n          type: array\n        ConvertToLocalTime:\n          example: \"false\"\n          type: boolean\n        Description:\n          example: Table of car info.\n          type: string\n        Id:\n          example: 5ff8ba98-89ce-479a-b29e-ddd057096a5f\n          format: uuid\n          type: string\n          x-disallow-patch: true\n          x-disallow-post: true\n          x-disallow-put: true\n        Links:\n          $ref: \"#/components/schemas/TableLinks\"\n        Name:\n          example: CarInfo\n          type: string\n          x-required-post: true\n        Path:\n          example: \\\\MyAssetServer\\MyDatabase\\Tables[CarInfo]\n          format: path\n          type: string\n          x-disallow-patch: true\n          x-disallow-post: true\n          x-disallow-put: true\n        TimeZone:\n          example: Eastern Standard Time\n          type: string\n        WebException:\n          $ref: \"#/components/schemas/WebException\"\n        WebId:\n          example: I1BlDqD5loBNH0erqeqJodtALAmLr4X86Jmkeynt3QVwlqXw\n          format: webid\n          type: string\n          x-disallow-patch: true\n          x-disallow-post: true\n          x-disallow-put: true\n      type: object\n    TableCategory:\n      properties:\n        Description:\n          example: Relative energy use per ton of process feed.\n          type: string\n        Id:\n          example: 89c70cc2-5221-4e77-873f-894a3ea61e7d\n          format: uuid\n          type: string\n          x-disallow-patch: true\n          x-disallow-post: true\n          x-disallow-put: true\n        Links:\n          $ref: \"#/components/schemas/TableCategoryLinks\"\n        Name:\n          example: CategoryName\n          type: string\n          x-required-post: true\n        Path:\n          example: \\\\MyAssetServer\\Database\\CategoriesTable[CategoryName]\n          format: path\n          type: string\n          x-disallow-patch: true\n          x-disallow-post: true\n          x-disallow-put: true\n        WebException:\n          $ref: \"#/components/schemas/WebException\"\n        WebId:\n          example: I1BCDqD5loBNH0erqeqJodtALAwgzHiSFSd06HP4lKPqYefQ\n          format: webid\n          type: string\n          x-disallow-patch: true\n          x-disallow-post: true\n          x-disallow-put: true\n      type: object\n    TableCategoryLinks:\n      properties:\n        Database:\n          type: string\n          x-link-optional: false\n          x-link-path: assetdatabases/{webId}\n        Security:\n          type: string\n          x-link-optional: false\n          x-link-path: tablecategories/{webId}/security\n        SecurityEntries:\n          type: string\n          x-link-optional: false\n          x-link-path: tablecategories/{webId}/securityentries\n        Self:\n          type: string\n          x-link-optional: false\n          x-link-path: tablecategories/{webId}\n      type: object\n    TableData:\n      properties:\n        Columns:\n          additionalProperties:\n            type: string\n          type: object\n          x-required-put: true\n        Rows:\n          items:\n            additionalProperties:\n              type: object\n            type: object\n          type: array\n          x-required-put: true\n        WebException:\n          $ref: \"#/components/schemas/WebException\"\n      type: object\n    TableLinks:\n      properties:\n        Categories:\n          type: string\n          x-link-optional: false\n          x-link-path: tables/{webId}/categories\n        Data:\n          type: string\n          x-link-optional: false\n          x-link-path: tables/{webId}/data\n        Database:\n          type: string\n          x-link-optional: false\n          x-link-path: assetdatabases/{webId}\n        Security:\n          type: string\n          x-link-optional: false\n          x-link-path: tables/{webId}/security\n        SecurityEntries:\n          type: string\n          x-link-optional: false\n          x-link-path: tables/{webId}/securityentries\n        Self:\n          type: string\n          x-link-optional: false\n          x-link-path: tables/{webId}\n      type: object\n    TimeRule:\n      properties:\n        ConfigString:\n          example: Frequency=300\n          type: string\n        ConfigStringStored:\n          example: \"\"\n          type: string\n          x-disallow-patch: true\n          x-disallow-post: true\n          x-disallow-put: true\n        Description:\n          example: Creates regular periodic time periods.\n          type: string\n          x-disallow-patch: true\n          x-disallow-post: true\n          x-disallow-put: true\n        DisplayString:\n          example: Frequency=300\n          type: string\n          x-disallow-patch: true\n          x-disallow-post: true\n          x-disallow-put: true\n        EditorType:\n          example: OSIsoft.AF.Time.TimeRule.PeriodicConfig\n          type: string\n          x-disallow-patch: true\n          x-disallow-post: true\n          x-disallow-put: true\n        Id:\n          example: 1514eb44-94c5-11e7-8443-00155d84c200\n          format: uuid\n          type: string\n          x-disallow-patch: true\n          x-disallow-post: true\n          x-disallow-put: true\n        IsConfigured:\n          example: true\n          type: boolean\n          x-disallow-patch: true\n          x-disallow-post: true\n          x-disallow-put: true\n        IsInitializing:\n          example: false\n          type: boolean\n          x-disallow-patch: true\n          x-disallow-post: true\n          x-disallow-put: true\n        Links:\n          $ref: \"#/components/schemas/TimeRuleLinks\"\n        MergeDuplicatedItems:\n          example: false\n          type: boolean\n        Name:\n          example: Periodic\n          type: string\n          x-disallow-patch: true\n          x-disallow-post: true\n          x-disallow-put: true\n        Path:\n          example: \\\\MyAssetServer\\MyDatabase\\MyElement\\Analyses[MyAnalysis]\\TimeRule\n          format: path\n          type: string\n          x-disallow-patch: true\n          x-disallow-post: true\n          x-disallow-put: true\n        PlugInName:\n          example: Periodic\n          type: string\n          x-disallow-patch: true\n          x-disallow-post: true\n          x-disallow-put: true\n        WebException:\n          $ref: \"#/components/schemas/WebException\"\n        WebId:\n          example: I1TRXDqD5loBNH0erqeqJodtALAROsUFcWU5xGEQwAVXYTCAAROsUFcWU5xGEQwAVXYTCAA\n          format: webid\n          type: string\n          x-disallow-patch: true\n          x-disallow-post: true\n          x-disallow-put: true\n      type: object\n    TimeRuleLinks:\n      properties:\n        Analysis:\n          type: string\n          x-link-optional: true\n          x-link-path: analyses/{webId}\n        AnalysisTemplate:\n          type: string\n          x-link-optional: true\n          x-link-path: analysistemplates/{webId}\n        PlugIn:\n          type: string\n          x-link-optional: true\n          x-link-path: timeruleplugins/{webId}\n        Self:\n          type: string\n          x-link-optional: false\n          x-link-path: timerules/{webId}\n      type: object\n    TimeRulePlugIn:\n      properties:\n        AssemblyFileName:\n          example: OSIsoft.AF.Time.TimeRule.Periodic.dll\n          type: string\n          x-disallow-patch: true\n          x-disallow-post: true\n          x-disallow-put: true\n        AssemblyID:\n          example: 7a635b27-3c3c-4a5f-bba9-01f06e9e525b\n          format: uuid\n          type: string\n          x-disallow-patch: true\n          x-disallow-post: true\n          x-disallow-put: true\n        AssemblyLoadProperties:\n          example:\n            - None\n          items:\n            type: string\n          type: array\n          x-disallow-patch: true\n          x-disallow-post: true\n          x-disallow-put: true\n        AssemblyTime:\n          example: 2016-05-25T14:01:07Z\n          format: date-time\n          type: string\n          x-disallow-patch: true\n          x-disallow-post: true\n          x-disallow-put: true\n        CompatibilityVersion:\n          example: 2\n          format: int32\n          type: integer\n          x-disallow-patch: true\n          x-disallow-post: true\n          x-disallow-put: true\n        Description:\n          example: Creates regular periodic time periods.\n          type: string\n          x-disallow-patch: true\n          x-disallow-post: true\n          x-disallow-put: true\n        Id:\n          example: d655f414-9655-4ad6-a615-182fa38200c1\n          format: uuid\n          type: string\n          x-disallow-patch: true\n          x-disallow-post: true\n          x-disallow-put: true\n        IsBrowsable:\n          example: true\n          type: boolean\n          x-disallow-patch: true\n          x-disallow-post: true\n          x-disallow-put: true\n        IsNonEditableConfig:\n          example: false\n          type: boolean\n          x-disallow-patch: true\n          x-disallow-post: true\n          x-disallow-put: true\n        Links:\n          $ref: \"#/components/schemas/TimeRulePlugInLinks\"\n        LoadedAssemblyTime:\n          example: 1970-01-01T00:00:00Z\n          format: date-time\n          type: string\n          x-disallow-patch: true\n          x-disallow-post: true\n          x-disallow-put: true\n        LoadedVersion:\n          example: \"\"\n          type: string\n          x-disallow-patch: true\n          x-disallow-post: true\n          x-disallow-put: true\n        Name:\n          example: Periodic\n          type: string\n          x-disallow-patch: true\n          x-disallow-post: true\n          x-disallow-put: true\n        Path:\n          example: \\\\MyAssetServer\\PlugInsTimeRule[Periodic]\n          format: path\n          type: string\n          x-disallow-patch: true\n          x-disallow-post: true\n          x-disallow-put: true\n        Version:\n          example: 2.8.5.7552\n          type: string\n          x-disallow-patch: true\n          x-disallow-post: true\n          x-disallow-put: true\n        WebException:\n          $ref: \"#/components/schemas/WebException\"\n        WebId:\n          example: I1TPDqD5loBNH0erqeqJodtALAFPRV1lWW1kqmFRgvo4IAwQ\n          format: webid\n          type: string\n          x-disallow-patch: true\n          x-disallow-post: true\n          x-disallow-put: true\n      type: object\n    TimeRulePlugInLinks:\n      properties:\n        AssetServer:\n          type: string\n          x-link-optional: false\n          x-link-path: assetservers/{webId}\n        Self:\n          type: string\n          x-link-optional: false\n          x-link-path: timeruleplugins/{webId}\n      type: object\n    TimedValue:\n      properties:\n        Annotated:\n          example: false\n          type: boolean\n          x-disallow-patch: true\n          x-disallow-post: true\n          x-disallow-put: true\n        Errors:\n          items:\n            $ref: \"#/components/schemas/PropertyError\"\n          type: array\n          x-disallow-patch: true\n          x-disallow-post: true\n          x-disallow-put: true\n        Good:\n          example: true\n          type: boolean\n        Questionable:\n          example: false\n          type: boolean\n        Substituted:\n          example: false\n          type: boolean\n          x-disallow-post: true\n        Timestamp:\n          example: 2014-07-22T14:00:00Z\n          format: date-time\n          type: string\n        UnitsAbbreviation:\n          example: m\n          type: string\n        Value:\n          example: 12.3\n          type: object\n        WebException:\n          $ref: \"#/components/schemas/WebException\"\n      type: object\n    TimedValues:\n      properties:\n        Items:\n          items:\n            $ref: \"#/components/schemas/TimedValue\"\n          type: array\n          x-required-post: true\n        UnitsAbbreviation:\n          type: string\n          x-disallow-post: true\n        WebException:\n          $ref: \"#/components/schemas/WebException\"\n      type: object\n    Unit:\n      properties:\n        Abbreviation:\n          example: Hz\n          type: string\n          x-required-post: true\n        Description:\n          example: Hertz Unit\n          type: string\n        Factor:\n          example: 1\n          format: double\n          type: number\n          x-disallow-patch: true\n          x-disallow-post: true\n          x-disallow-put: true\n        Id:\n          example: 8121ac8e-3ce2-4794-95e3-1783d5d6f4fc\n          format: uuid\n          type: string\n          x-disallow-patch: true\n          x-disallow-post: true\n          x-disallow-put: true\n        Links:\n          $ref: \"#/components/schemas/UnitLinks\"\n        Name:\n          example: Hertz\n          type: string\n          x-required-post: true\n        Offset:\n          example: 0\n          format: double\n          type: number\n          x-disallow-patch: true\n          x-disallow-post: true\n          x-disallow-put: true\n        Path:\n          example: \\\\MyAssetServer\\UOMDatabase\\Hertz\n          format: path\n          type: string\n          x-disallow-patch: true\n          x-disallow-post: true\n          x-disallow-put: true\n        ReferenceFactor:\n          example: 1\n          format: double\n          type: number\n        ReferenceOffset:\n          example: 0\n          format: double\n          type: number\n        ReferenceUnitAbbreviation:\n          example: \"\"\n          type: string\n        WebException:\n          $ref: \"#/components/schemas/WebException\"\n        WebId:\n          example: I1UtDqD5loBNH0erqeqJodtALAjqwhgeI8lEeV4xeD1db0_A\n          format: webid\n          type: string\n          x-disallow-patch: true\n          x-disallow-post: true\n          x-disallow-put: true\n      type: object\n    UnitClass:\n      properties:\n        CanonicalUnitAbbreviation:\n          example: W\n          type: string\n          x-required-post: true\n        CanonicalUnitName:\n          example: watt\n          type: string\n          x-required-post: true\n        Description:\n          example: Power Unit Class\n          type: string\n        Id:\n          example: f925b94d-6efc-4b94-a50d-0015c391f249\n          format: uuid\n          type: string\n          x-disallow-patch: true\n          x-disallow-post: true\n          x-disallow-put: true\n        Links:\n          $ref: \"#/components/schemas/UnitClassLinks\"\n        Name:\n          example: Power\n          type: string\n          x-required-post: true\n        Path:\n          example: \\\\MyAssetServer\\UOMDatabase\\UOMClasses[Power]\n          format: path\n          type: string\n          x-disallow-patch: true\n          x-disallow-post: true\n          x-disallow-put: true\n        WebException:\n          $ref: \"#/components/schemas/WebException\"\n        WebId:\n          example: I1UCDqD5loBNH0erqeqJodtALATbkl-fxulEulDQAVw5HySQ\n          format: webid\n          type: string\n          x-disallow-patch: true\n          x-disallow-post: true\n          x-disallow-put: true\n      type: object\n    UnitClassLinks:\n      properties:\n        AssetServer:\n          type: string\n          x-link-optional: false\n          x-link-path: assetservers/{webId}\n        CanonicalUnit:\n          type: string\n          x-link-optional: false\n          x-link-path: unitclasses/{webId}/canonicalunit\n        Self:\n          type: string\n          x-link-optional: false\n          x-link-path: unitclasses/{webId}\n        Units:\n          type: string\n          x-link-optional: false\n          x-link-path: unitclasses/{webId}/units\n      type: object\n    UnitLinks:\n      properties:\n        Class:\n          type: string\n          x-link-optional: false\n          x-link-path: unitclasses/{webId}\n        ReferenceUnit:\n          type: string\n          x-link-optional: true\n          x-link-path: units/{webId}\n        Self:\n          type: string\n          x-link-optional: false\n          x-link-path: units/{webId}\n      type: object\n    UserInfo:\n      properties:\n        IdentityType:\n          example: WindowsIdentity\n          type: string\n          x-disallow-patch: true\n          x-disallow-post: true\n          x-disallow-put: true\n        ImpersonationLevel:\n          example: None\n          type: string\n          x-disallow-patch: true\n          x-disallow-post: true\n          x-disallow-put: true\n        IsAuthenticated:\n          example: true\n          type: boolean\n          x-disallow-patch: true\n          x-disallow-post: true\n          x-disallow-put: true\n        Name:\n          example: MyDomain\\Username\n          type: string\n          x-disallow-patch: true\n          x-disallow-post: true\n          x-disallow-put: true\n        SID:\n          example: S-1-5-21-2083424470-1893017325-1469799231-71366\n          format: sid\n          type: string\n          x-disallow-patch: true\n          x-disallow-post: true\n          x-disallow-put: true\n        WebException:\n          $ref: \"#/components/schemas/WebException\"\n      type: object\n    Value:\n      properties:\n        Exception:\n          $ref: \"#/components/schemas/Errors\"\n        Value:\n          example: 12.3\n          type: object\n        WebException:\n          $ref: \"#/components/schemas/WebException\"\n      type: object\n    ValueQuery:\n      properties:\n        AttributeName:\n          example: Pressure\n          type: string\n        AttributeUOM:\n          example: pound-force per square inch\n          type: string\n        AttributeValue:\n          example: 12.3\n          type: object\n        SearchOperator:\n          example: LessThan\n          type: string\n        WebException:\n          $ref: \"#/components/schemas/WebException\"\n      type: object\n    Version:\n      properties:\n        Build:\n          example: \"201\"\n          type: string\n          x-disallow-patch: true\n          x-disallow-post: true\n          x-disallow-put: true\n        FullVersion:\n          example: 1.10.0.201\n          type: string\n          x-disallow-patch: true\n          x-disallow-post: true\n          x-disallow-put: true\n        MajorMinorRevision:\n          example: 1.10.0\n          type: string\n          x-disallow-patch: true\n          x-disallow-post: true\n          x-disallow-put: true\n        WebException:\n          $ref: \"#/components/schemas/WebException\"\n      type: object\n    WebException:\n      properties:\n        Errors:\n          example:\n            - An error has occurred.\n          items:\n            type: string\n          type: array\n        StatusCode:\n          enum:\n            - 100\n            - 101\n            - 200\n            - 201\n            - 202\n            - 203\n            - 204\n            - 205\n            - 206\n            - 207\n            - 300\n            - 301\n            - 302\n            - 303\n            - 304\n            - 305\n            - 306\n            - 307\n            - 400\n            - 401\n            - 402\n            - 403\n            - 404\n            - 405\n            - 406\n            - 407\n            - 408\n            - 409\n            - 410\n            - 411\n            - 412\n            - 413\n            - 414\n            - 415\n            - 416\n            - 417\n            - 426\n            - 500\n            - 501\n            - 502\n            - 503\n            - 504\n            - 505\n          example: 500\n          format: int32\n          type: integer\n      type: object\n    Item_Attribute_:\n      properties:\n        Exception:\n          $ref: \"#/components/schemas/Errors\"\n        Identifier:\n          example: \\\\server\\path\n          type: string\n        IdentifierType:\n          example: Path\n          type: string\n        Object:\n          $ref: \"#/components/schemas/Attribute\"\n      type: object\n    Item_Element_:\n      properties:\n        Exception:\n          $ref: \"#/components/schemas/Errors\"\n        Identifier:\n          example: \\\\server\\path\n          type: string\n        IdentifierType:\n          example: Path\n          type: string\n        Object:\n          $ref: \"#/components/schemas/Element\"\n      type: object\n    Item_EventFrame_:\n      properties:\n        Exception:\n          $ref: \"#/components/schemas/Errors\"\n        Identifier:\n          example: \\\\server\\path\n          type: string\n        IdentifierType:\n          example: Path\n          type: string\n        Object:\n          $ref: \"#/components/schemas/EventFrame\"\n      type: object\n    Item_Point_:\n      properties:\n        Exception:\n          $ref: \"#/components/schemas/Errors\"\n        Identifier:\n          example: \\\\server\\path\n          type: string\n        IdentifierType:\n          example: Path\n          type: string\n        Object:\n          $ref: \"#/components/schemas/Point\"\n      type: object\n    Items_AnalysisCategory_:\n      properties:\n        Items:\n          items:\n            $ref: \"#/components/schemas/AnalysisCategory\"\n          type: array\n        Links:\n          $ref: \"#/components/schemas/PaginationLinks\"\n      type: object\n    Items_AnalysisRulePlugIn_:\n      properties:\n        Items:\n          items:\n            $ref: \"#/components/schemas/AnalysisRulePlugIn\"\n          type: array\n        Links:\n          $ref: \"#/components/schemas/PaginationLinks\"\n      type: object\n    Items_AnalysisRule_:\n      properties:\n        Items:\n          items:\n            $ref: \"#/components/schemas/AnalysisRule\"\n          type: array\n        Links:\n          $ref: \"#/components/schemas/PaginationLinks\"\n      type: object\n    Items_AnalysisTemplate_:\n      properties:\n        Items:\n          items:\n            $ref: \"#/components/schemas/AnalysisTemplate\"\n          type: array\n        Links:\n          $ref: \"#/components/schemas/PaginationLinks\"\n      type: object\n    Items_Analysis_:\n      properties:\n        Items:\n          items:\n            $ref: \"#/components/schemas/Analysis\"\n          type: array\n        Links:\n          $ref: \"#/components/schemas/PaginationLinks\"\n      type: object\n    Items_Annotation_:\n      properties:\n        Items:\n          items:\n            $ref: \"#/components/schemas/Annotation\"\n          type: array\n        Links:\n          $ref: \"#/components/schemas/PaginationLinks\"\n      type: object\n    Items_AssetDatabase_:\n      properties:\n        Items:\n          items:\n            $ref: \"#/components/schemas/AssetDatabase\"\n          type: array\n        Links:\n          $ref: \"#/components/schemas/PaginationLinks\"\n      type: object\n    Items_AssetServer_:\n      properties:\n        Items:\n          items:\n            $ref: \"#/components/schemas/AssetServer\"\n          type: array\n        Links:\n          $ref: \"#/components/schemas/PaginationLinks\"\n      type: object\n    Items_AttributeCategory_:\n      properties:\n        Items:\n          items:\n            $ref: \"#/components/schemas/AttributeCategory\"\n          type: array\n        Links:\n          $ref: \"#/components/schemas/PaginationLinks\"\n      type: object\n    Items_AttributeTemplate_:\n      properties:\n        Items:\n          items:\n            $ref: \"#/components/schemas/AttributeTemplate\"\n          type: array\n        Links:\n          $ref: \"#/components/schemas/PaginationLinks\"\n      type: object\n    Items_AttributeTrait_:\n      properties:\n        Items:\n          items:\n            $ref: \"#/components/schemas/AttributeTrait\"\n          type: array\n        Links:\n          $ref: \"#/components/schemas/PaginationLinks\"\n      type: object\n    Items_Attribute_:\n      properties:\n        Items:\n          items:\n            $ref: \"#/components/schemas/Attribute\"\n          type: array\n        Links:\n          $ref: \"#/components/schemas/PaginationLinks\"\n      type: object\n    Items_CacheInstance_:\n      properties:\n        Items:\n          items:\n            $ref: \"#/components/schemas/CacheInstance\"\n          type: array\n        Links:\n          $ref: \"#/components/schemas/PaginationLinks\"\n      type: object\n    Items_ChannelInstance_:\n      properties:\n        Items:\n          items:\n            $ref: \"#/components/schemas/ChannelInstance\"\n          type: array\n        Links:\n          $ref: \"#/components/schemas/PaginationLinks\"\n      type: object\n    Items_DataServer_:\n      properties:\n        Items:\n          items:\n            $ref: \"#/components/schemas/DataServer\"\n          type: array\n        Links:\n          $ref: \"#/components/schemas/PaginationLinks\"\n      type: object\n    Items_ElementCategory_:\n      properties:\n        Items:\n          items:\n            $ref: \"#/components/schemas/ElementCategory\"\n          type: array\n        Links:\n          $ref: \"#/components/schemas/PaginationLinks\"\n      type: object\n    Items_ElementTemplate_:\n      properties:\n        Items:\n          items:\n            $ref: \"#/components/schemas/ElementTemplate\"\n          type: array\n        Links:\n          $ref: \"#/components/schemas/PaginationLinks\"\n      type: object\n    Items_Element_:\n      properties:\n        Items:\n          items:\n            $ref: \"#/components/schemas/Element\"\n          type: array\n        Links:\n          $ref: \"#/components/schemas/PaginationLinks\"\n      type: object\n    Items_EnumerationSet_:\n      properties:\n        Items:\n          items:\n            $ref: \"#/components/schemas/EnumerationSet\"\n          type: array\n        Links:\n          $ref: \"#/components/schemas/PaginationLinks\"\n      type: object\n    Items_EnumerationValue_:\n      properties:\n        Items:\n          items:\n            $ref: \"#/components/schemas/EnumerationValue\"\n          type: array\n        Links:\n          $ref: \"#/components/schemas/PaginationLinks\"\n      type: object\n    Items_EventFrame_:\n      properties:\n        Items:\n          items:\n            $ref: \"#/components/schemas/EventFrame\"\n          type: array\n        Links:\n          $ref: \"#/components/schemas/PaginationLinks\"\n      type: object\n    Items_Item_Attribute_:\n      properties:\n        Items:\n          items:\n            $ref: \"#/components/schemas/Item_Attribute_\"\n          type: array\n        Links:\n          $ref: \"#/components/schemas/PaginationLinks\"\n      type: object\n    Items_Item_Element_:\n      properties:\n        Items:\n          items:\n            $ref: \"#/components/schemas/Item_Element_\"\n          type: array\n        Links:\n          $ref: \"#/components/schemas/PaginationLinks\"\n      type: object\n    Items_Item_EventFrame_:\n      properties:\n        Items:\n          items:\n            $ref: \"#/components/schemas/Item_EventFrame_\"\n          type: array\n        Links:\n          $ref: \"#/components/schemas/PaginationLinks\"\n      type: object\n    Items_Item_Point_:\n      properties:\n        Items:\n          items:\n            $ref: \"#/components/schemas/Item_Point_\"\n          type: array\n        Links:\n          $ref: \"#/components/schemas/PaginationLinks\"\n      type: object\n    Items_Items_Substatus_:\n      properties:\n        Items:\n          items:\n            $ref: \"#/components/schemas/Items_Substatus_\"\n          type: array\n        Links:\n          $ref: \"#/components/schemas/PaginationLinks\"\n      type: object\n    Items_NotificationContactTemplate_:\n      properties:\n        Items:\n          items:\n            $ref: \"#/components/schemas/NotificationContactTemplate\"\n          type: array\n        Links:\n          $ref: \"#/components/schemas/PaginationLinks\"\n      type: object\n    Items_NotificationPlugIn_:\n      properties:\n        Items:\n          items:\n            $ref: \"#/components/schemas/NotificationPlugIn\"\n          type: array\n        Links:\n          $ref: \"#/components/schemas/PaginationLinks\"\n      type: object\n    Items_NotificationRuleSubscriber_:\n      properties:\n        Items:\n          items:\n            $ref: \"#/components/schemas/NotificationRuleSubscriber\"\n          type: array\n        Links:\n          $ref: \"#/components/schemas/PaginationLinks\"\n      type: object\n    Items_NotificationRuleTemplate_:\n      properties:\n        Items:\n          items:\n            $ref: \"#/components/schemas/NotificationRuleTemplate\"\n          type: array\n        Links:\n          $ref: \"#/components/schemas/PaginationLinks\"\n      type: object\n    Items_NotificationRule_:\n      properties:\n        Items:\n          items:\n            $ref: \"#/components/schemas/NotificationRule\"\n          type: array\n        Links:\n          $ref: \"#/components/schemas/PaginationLinks\"\n      type: object\n    Items_PointAttribute_:\n      properties:\n        Items:\n          items:\n            $ref: \"#/components/schemas/PointAttribute\"\n          type: array\n        Links:\n          $ref: \"#/components/schemas/PaginationLinks\"\n      type: object\n    Items_Point_:\n      properties:\n        Items:\n          items:\n            $ref: \"#/components/schemas/Point\"\n          type: array\n        Links:\n          $ref: \"#/components/schemas/PaginationLinks\"\n      type: object\n    Items_SecurityEntry_:\n      properties:\n        Items:\n          items:\n            $ref: \"#/components/schemas/SecurityEntry\"\n          type: array\n        Links:\n          $ref: \"#/components/schemas/PaginationLinks\"\n      type: object\n    Items_SecurityIdentity_:\n      properties:\n        Items:\n          items:\n            $ref: \"#/components/schemas/SecurityIdentity\"\n          type: array\n        Links:\n          $ref: \"#/components/schemas/PaginationLinks\"\n      type: object\n    Items_SecurityMapping_:\n      properties:\n        Items:\n          items:\n            $ref: \"#/components/schemas/SecurityMapping\"\n          type: array\n        Links:\n          $ref: \"#/components/schemas/PaginationLinks\"\n      type: object\n    Items_SecurityRights_:\n      properties:\n        Items:\n          items:\n            $ref: \"#/components/schemas/SecurityRights\"\n          type: array\n        Links:\n          $ref: \"#/components/schemas/PaginationLinks\"\n      type: object\n    Items_StreamSummaries_:\n      properties:\n        Items:\n          items:\n            $ref: \"#/components/schemas/StreamSummaries\"\n          type: array\n        Links:\n          $ref: \"#/components/schemas/PaginationLinks\"\n      type: object\n    Items_StreamUpdatesRegister_:\n      properties:\n        Items:\n          items:\n            $ref: \"#/components/schemas/StreamUpdatesRegister\"\n          type: array\n        Links:\n          $ref: \"#/components/schemas/PaginationLinks\"\n      type: object\n    Items_StreamUpdatesRetrieve_:\n      properties:\n        Items:\n          items:\n            $ref: \"#/components/schemas/StreamUpdatesRetrieve\"\n          type: array\n        Links:\n          $ref: \"#/components/schemas/PaginationLinks\"\n      type: object\n    Items_StreamValue_:\n      properties:\n        Items:\n          items:\n            $ref: \"#/components/schemas/StreamValue\"\n          type: array\n        Links:\n          $ref: \"#/components/schemas/PaginationLinks\"\n      type: object\n    Items_StreamValues_:\n      properties:\n        Items:\n          items:\n            $ref: \"#/components/schemas/StreamValues\"\n          type: array\n        Links:\n          $ref: \"#/components/schemas/PaginationLinks\"\n      type: object\n    Items_Substatus_:\n      properties:\n        Items:\n          items:\n            $ref: \"#/components/schemas/Substatus\"\n          type: array\n        Links:\n          $ref: \"#/components/schemas/PaginationLinks\"\n      type: object\n    Items_SummaryValue_:\n      properties:\n        Items:\n          items:\n            $ref: \"#/components/schemas/SummaryValue\"\n          type: array\n        Links:\n          $ref: \"#/components/schemas/PaginationLinks\"\n      type: object\n    Items_TableCategory_:\n      properties:\n        Items:\n          items:\n            $ref: \"#/components/schemas/TableCategory\"\n          type: array\n        Links:\n          $ref: \"#/components/schemas/PaginationLinks\"\n      type: object\n    Items_Table_:\n      properties:\n        Items:\n          items:\n            $ref: \"#/components/schemas/Table\"\n          type: array\n        Links:\n          $ref: \"#/components/schemas/PaginationLinks\"\n      type: object\n    Items_TimeRulePlugIn_:\n      properties:\n        Items:\n          items:\n            $ref: \"#/components/schemas/TimeRulePlugIn\"\n          type: array\n        Links:\n          $ref: \"#/components/schemas/PaginationLinks\"\n      type: object\n    Items_UnitClass_:\n      properties:\n        Items:\n          items:\n            $ref: \"#/components/schemas/UnitClass\"\n          type: array\n        Links:\n          $ref: \"#/components/schemas/PaginationLinks\"\n      type: object\n    Items_string_:\n      properties:\n        Items:\n          items:\n            type: string\n          type: array\n      type: object\n",
			"canonicalURL": "/github.com/restful-ma/thresholds@5b0b2a3322d3b2b7c0e0f2c0c0ad0e524e67bf82/-/blob/benchmark-repository/openapi/osisoft.com-1.11.1.5383-swagger.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/restful-ma/thresholds/blob/5b0b2a3322d3b2b7c0e0f2c0c0ad0e524e67bf82/benchmark-repository/openapi/osisoft.com-1.11.1.5383-swagger.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "parse: parse spec: parse operations: path \"/dataservers\": at 1:329207: duplicate path: \"/dataservers\""
}