{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/harness/harness-core"
		},
		"file": {
			"name": "openapi.yaml",
			"size": 0,
			"path": "pipeline-service/contracts/openapi/v1/openapi.yaml",
			"byteSize": 109616,
			"content": "openapi: 3.0.0\nx-stoplight:\n  id: uo2r4f4vt18on\ninfo:\n  title: Harness NextGen Software Delivery Platform API Reference\n  version: '1'\n  description: This is the Open Api Spec 3 for the Pipeline Service. This is under active development. Beware of the breaking change with respect to the generated code stub.\n  contact:\n    email: contact@harness.io\nservers:\n  - url: 'https://api.harness.io'\n    description: Harness host URL.\ntags:\n  - name: Pipelines\n    description: This contains APIs for performing CRUD operations on Pipelines.\n  - name: Input Sets\n    description: This contains APIs for Input Sets.\npaths:\n  '/v1/orgs/{org}/projects/{project}/pipelines':\n    parameters:\n      - $ref: '#/components/parameters/OrgParam'\n      - $ref: '#/components/parameters/ProjectParam'\n    get:\n      summary: List Pipelines\n      operationId: list-pipelines\n      description: Returns a list of Pipelines.\n      parameters:\n        - $ref: '#/components/parameters/AccountHeader'\n        - $ref: '#/components/parameters/PageIndex'\n        - $ref: '#/components/parameters/Limit'\n        - $ref: '#/components/parameters/SearchTerm'\n        - $ref: '#/components/parameters/Sort'\n        - $ref: '#/components/parameters/Order'\n        - schema:\n            type: string\n            enum:\n              - CD\n              - CI\n              - CV\n              - CF\n              - CE\n              - STO\n          in: query\n          name: module\n          description: Harness module which is part of the Pipeline.\n        - schema:\n            type: string\n          in: query\n          name: filter_identifier\n          description: Identifier of a saved Filter.\n        - schema:\n            type: array\n            items:\n              type: string\n          in: query\n          name: pipeline_identifiers\n          description: List of Pipeline identifiers on the basis of which the Pipelines are filtered.\n        - schema:\n            type: string\n            pattern: '^[a-zA-Z_][0-9a-zA-Z-_ ]{0,63}$'\n            minLength: 1\n            maxLength: 64\n          in: query\n          name: name\n          description: Pipeline Name on the basis of which the Pipelines are filtered.\n        - schema:\n            type: string\n            maxLength: 1024\n          in: query\n          name: description\n          description: Pipeline Description on the basis of which the Pipelines are filtered.\n        - schema:\n            type: array\n            items:\n              type: string\n            maxItems: 128\n            example: 'key:value'\n          examples:\n            key_and_value:\n              value: 'key:value'\n              summary: Tag having both Key and Value.\n            key_only:\n              value: key\n              summary: Tag having only Key.\n          in: query\n          name: tags\n          description: 'Filter tags as a key:value pair.'\n        - schema:\n            type: array\n            items:\n              type: string\n          in: query\n          name: service_names\n          description: 'Service names on the basis of which the Pipelines are filtered. [CD]'\n        - schema:\n            type: array\n            items:\n              type: string\n          in: query\n          name: env_names\n          description: 'Names of Environments on the basis of which the Pipelines are filtered. [CD]'\n        - schema:\n            type: string\n          in: query\n          name: deployment_type\n          description: 'Deployment type on the basis of which the Pipelines are filtered. [CD]'\n        - schema:\n            type: string\n          in: query\n          name: repository\n          description: 'Repository name on the basis of which the Pipelines are filtered. [CI]'\n      security:\n        - x-api-key: []\n      tags:\n        - Pipelines\n      responses:\n        '200':\n          $ref: '#/components/responses/PipelineListResponseBody'\n    post:\n      summary: Create a Pipeline\n      operationId: create-pipeline\n      description: Creates a Pipeline.\n      security:\n        - x-api-key: []\n      parameters:\n        - $ref: '#/components/parameters/AccountHeader'\n      tags:\n        - Pipelines\n      requestBody:\n        $ref: '#/components/requestBodies/PipelineCreateRequestBody'\n      responses:\n        '201':\n          $ref: '#/components/responses/PipelineCreateResponseBody'\n  '/v1/orgs/{org}/projects/{project}/pipelines/{pipeline}':\n    parameters:\n      - $ref: '#/components/parameters/OrgParam'\n      - $ref: '#/components/parameters/ProjectParam'\n      - $ref: '#/components/parameters/PipelineParam'\n    get:\n      summary: Retrieve a Pipeline\n      operationId: get-pipeline\n      security:\n        - x-api-key: []\n      description: Retrieves a Pipeline.\n      parameters:\n        - $ref: '#/components/parameters/AccountHeader'\n        - $ref: '#/components/parameters/Branch'\n        - schema:\n            type: boolean\n            default: false\n          in: query\n          name: template_applied\n          description: 'If true, returns Pipeline YAML with Templates applied on it.'\n        - schema:\n            type: string\n          in: query\n          name: connector_ref\n          description: Identifier of the Harness Connector used for CRUD operations on the Entity (for Git Experience).\n        - schema:\n            type: string\n          in: query\n          name: repo_name\n          description: Name of the repository (for Git Experience).\n        - schema:\n            type: string\n            default: 'false'\n          in: header\n          name: Load-From-Cache\n          description: Flag to enable loading the remote pipeline from git or git cache\n        - schema:\n            type: boolean\n            default: false\n          in: query\n          name: load_from_fallback_branch\n          description: Flag to load the pipeline from the created non default branch\n        - schema:\n            type: boolean\n            default: 'false'\n          in: query\n          name: validate_async\n          description: Flag to tell whether to start an asynchronous validation process or not\n      tags:\n        - Pipelines\n      responses:\n        '200':\n          $ref: '#/components/responses/PipelineGetResponseBody'\n    put:\n      summary: Update a Pipeline\n      operationId: update-pipeline\n      security:\n        - x-api-key: []\n      description: Updates a Pipeline.\n      parameters:\n        - $ref: '#/components/parameters/AccountHeader'\n      tags:\n        - Pipelines\n      requestBody:\n        $ref: '#/components/requestBodies/PipelineUpdateRequestBody'\n      responses:\n        '200':\n          $ref: '#/components/responses/PipelineCreateResponseBody'\n    delete:\n      summary: Delete a Pipeline\n      operationId: delete-pipeline\n      description: Deletes a Pipeline.\n      security:\n        - x-api-key: []\n      parameters:\n        - $ref: '#/components/parameters/AccountHeader'\n      tags:\n        - Pipelines\n      responses:\n        '204':\n          description: No Content\n        '400':\n          description: Bad Request\n          content:\n            application/json:\n              schema:\n                type: object\n                properties: {}\n              examples:\n                example-resp:\n                  value: {}\n            application/yaml:\n              schema:\n                type: object\n                properties: {}\n              examples:\n                example-resp:\n                  value: |\n                    {}\n  '/v1/orgs/{org}/projects/{project}/pipelines/{pipeline}/validate':\n    parameters:\n      - name: org\n        in: path\n        required: true\n        schema:\n          type: string\n        description: Organization identifier\n      - name: project\n        in: path\n        required: true\n        schema:\n          type: string\n        description: Project identifier\n      - name: pipeline\n        in: path\n        required: true\n        schema:\n          type: string\n        description: Pipeline identifier\n    post:\n      summary: Start a Pipeline Validation Event\n      operationId: start-pipeline-validation-event\n      security:\n        - x-api-key: []\n      description: Starts a Pipeline Validation Event and returns the UUID of the Event created\n      x-internal: true\n      parameters:\n        - $ref: '#/components/parameters/AccountHeader'\n        - $ref: '#/components/parameters/Branch'\n        - schema:\n            type: string\n          in: query\n          name: connector_ref\n          description: Identifier of the Harness Connector used for CRUD operations on the Entity (for Git Experience).\n        - schema:\n            type: string\n          in: query\n          name: repo_name\n          description: Name of the repository (for Git Experience).\n        - schema:\n            type: boolean\n          in: header\n          name: Load-From-Cache\n          description: Flag to enable loading the remote pipeline from git or git cache\n        - schema:\n            type: boolean\n          in: query\n          name: load_from_fallback_branch\n          description: Flag to load the pipeline from the created non default branch\n      tags:\n        - Pipelines\n      responses:\n        '200':\n          $ref: '#/components/responses/PipelineValidationUUIDResponseBody'\n  '/v1/orgs/{org}/projects/{project}/pipelines/validate/{uuid}':\n    parameters:\n      - $ref: '#/components/parameters/OrgParam'\n      - $ref: '#/components/parameters/ProjectParam'\n      - $ref: '#/components/parameters/UuidParam'\n    get:\n      summary: Get Pipeline Validation Result\n      operationId: get-pipeline-validate-result\n      security:\n        - x-api-key: []\n      description: Get Pipeline Validation Result for given UUID\n      x-internal: true\n      tags:\n        - Pipelines\n      parameters:\n        - $ref: '#/components/parameters/AccountHeader'\n      responses:\n        '200':\n          $ref: '#/components/responses/PipelineValidationResponseBody'\n  '/v1/orgs/{org}/projects/{project}/input-sets':\n    parameters:\n      - $ref: '#/components/parameters/OrgParam'\n      - $ref: '#/components/parameters/ProjectParam'\n    post:\n      summary: Create an Input Set\n      operationId: create-input-set\n      responses:\n        '201':\n          $ref: '#/components/responses/InputSetResponseBody'\n      tags:\n        - Input Sets\n      description: Creates an Input Set for a Pipeline.\n      security:\n        - x-api-key: []\n      parameters:\n        - $ref: '#/components/parameters/AccountHeader'\n        - $ref: '#/components/parameters/PipelineInputSetParam'\n      requestBody:\n        $ref: '#/components/requestBodies/InputSetCreateRequestBody'\n    get:\n      summary: List Input Sets\n      operationId: list-input-sets\n      responses:\n        '200':\n          $ref: '#/components/responses/InputSetListResponseBody'\n      tags:\n        - Input Sets\n      description: Returns a List of Input Sets for a Pipeline.\n      security:\n        - x-api-key: []\n      parameters:\n        - $ref: '#/components/parameters/AccountHeader'\n        - $ref: '#/components/parameters/PipelineInputSetParam'\n        - $ref: '#/components/parameters/PageIndex'\n        - $ref: '#/components/parameters/Limit'\n        - $ref: '#/components/parameters/SearchTerm'\n        - $ref: '#/components/parameters/Sort'\n        - $ref: '#/components/parameters/Order'\n  '/v1/orgs/{org}/projects/{project}/input-sets/{input-set}':\n    parameters:\n      - $ref: '#/components/parameters/OrgParam'\n      - $ref: '#/components/parameters/ProjectParam'\n      - $ref: '#/components/parameters/InputSetParam'\n    get:\n      summary: Retrieve an Input Set\n      tags:\n        - Input Sets\n      responses:\n        '200':\n          $ref: '#/components/responses/InputSetResponseBody'\n      operationId: get-input-set\n      description: Retrieves an Input Set for a Pipeline.\n      security:\n        - x-api-key: []\n      parameters:\n        - $ref: '#/components/parameters/AccountHeader'\n        - $ref: '#/components/parameters/PipelineInputSetParam'\n        - $ref: '#/components/parameters/Branch'\n        - schema:\n            type: string\n          in: query\n          name: parent_entity_connector_ref\n          description: Connector reference for Parent Entity (Pipeline).\n        - schema:\n            type: string\n          in: query\n          name: parent_entity_repo_name\n          description: Repository name for Parent Entity (Pipeline).\n    put:\n      summary: Update an Input Set\n      operationId: update-input-set\n      responses:\n        '200':\n          $ref: '#/components/responses/InputSetResponseBody'\n      description: Updates an Input Set for a Pipeline.\n      security:\n        - x-api-key: []\n      parameters:\n        - $ref: '#/components/parameters/AccountHeader'\n        - $ref: '#/components/parameters/PipelineInputSetParam'\n      tags:\n        - Input Sets\n      requestBody:\n        $ref: '#/components/requestBodies/InputSetUpdateRequestBody'\n    delete:\n      summary: Delete an Input Set\n      operationId: delete-input-set\n      responses:\n        '204':\n          description: No Content\n        '400':\n          description: Bad Request\n          content:\n            application/json:\n              schema:\n                type: object\n                properties: {}\n              examples:\n                example-resp:\n                  value: {}\n            application/yaml:\n              schema:\n                type: object\n                properties: {}\n              examples:\n                example-resp:\n                  value: |\n                    {}\n      tags:\n        - Input Sets\n      description: Deletes an Input Set for a Pipeline.\n      security:\n        - x-api-key: []\n      parameters:\n        - $ref: '#/components/parameters/AccountHeader'\n        - $ref: '#/components/parameters/PipelineInputSetParam'\n  '/v1/orgs/{org}/projects/{project}/pipelines/{pipeline}/inputs':\n    parameters:\n      - $ref: '#/components/parameters/OrgParam'\n      - $ref: '#/components/parameters/ProjectParam'\n      - $ref: '#/components/parameters/PipelineParam'\n    get:\n      summary: Get Pipeline Inputs\n      operationId: get-pipeline-inputs\n      responses:\n        '200':\n          $ref: '#/components/responses/InputsResponseBody'\n      description: Return Inputs for a Pipeline.\n      security:\n        - x-api-key: []\n      parameters:\n        - $ref: '#/components/parameters/AccountHeader'\n        - schema:\n            type: string\n          in: query\n          name: branch_name\n          description: Name of the branch (for Git Experience).\n        - schema:\n            type: string\n          in: query\n          name: repo_name\n          description: Name of the repository (for Git Experience).\n        - schema:\n            type: string\n          in: query\n          name: connector_ref\n          description: Identifier of the Harness Connector used for CRUD operations on the Entity (for Git Experience).\n      tags:\n        - Inputs\n      x-internal: false\ncomponents:\n  schemas:\n    GitDetails:\n      title: Git Response Details\n      x-stoplight:\n        id: qkq00fbqykhxw\n      type: object\n      description: Git Experience related details of the Entity.\n      x-examples:\n        example-git:\n          object_id: example_object\n          branch_name: branch\n          file_path: /folder/file.json\n          repo_name: example_repository\n          commit_id: abcd123\n          file_url: www.repo/folder/file.com\n          repo_url: www.repo.com\n      properties:\n        object_id:\n          type: string\n          description: Object identifier / blob id\n          pattern: '^[a-zA-Z_][0-9a-zA-Z-_$]{0,63}$'\n          minLength: 1\n          maxLength: 64\n        branch_name:\n          type: string\n          description: Name of the branch.\n        file_path:\n          type: string\n          description: File path of the Entity in the repository.\n        repo_name:\n          type: string\n          description: Name of the repository.\n        commit_id:\n          type: string\n          description: Latest commit identifier.\n        file_url:\n          type: string\n          description: File URL of the Entity.\n        repo_url:\n          type: string\n          description: Repository URL of the Entity.\n    PipelineGetResponseBody:\n      title: Pipeline Get Response Body\n      x-stoplight:\n        id: twnioaqmn69uy\n      description: Pipeline response body.\n      x-examples:\n        example-get:\n          pipeline_yaml: example_yaml_text\n          template_applied_pipeline_yaml: example_yaml_text_with_template\n          slug: example_pipeline\n          name: ExamplePipeline\n          org: example_org\n          project: example_project\n          description: Pipeline Description\n          tags:\n            example-tag-1: example-tag-1-value\n            example-tag-2: example-tag-2-value\n          modules:\n            - cd\n          git_details:\n            object_id: example_object\n            branch_name: branch\n            file_path: /folder/file.json\n            repo_name: example_repository\n            commit_id: abcd123\n            file_url: www.repo/folder/file.com\n            repo_url: www.repo.com\n          valid: true\n          yaml_error_wrapper:\n            message: something is incorrect\n            message_fqn: something is incorrect at pipeline.name\n            stage_info:\n              slug: example_stage\n              type: stage\n              name: Example Stage\n              fqn: pipeline.stages.stage\n            step_info:\n              slug: example_step\n              type: string\n              name: string\n              fqn: pipeline.steps.step\n            fqn: pipeline.name\n            hint_message: try changing something\n          cache_response_metadata:\n            cache_state: VALID_CACHE\n            ttl_left: 9223372036854776000\n            last_updated_at: 9223372036854776000\n          created: 1234567890\n          updated: 1234567890\n      type: object\n      properties:\n        pipeline_yaml:\n          type: string\n          description: Pipeline YAML (returned as a String).\n        template_applied_pipeline_yaml:\n          type: string\n          description: Pipeline YAML after resolving Templates (returned as a String).\n        slug:\n          type: string\n          description: Pipeline identifier\n          pattern: '^[a-zA-Z_][0-9a-zA-Z_$]{0,127}$'\n          minLength: 1\n          maxLength: 128\n        name:\n          type: string\n          description: Pipeline name\n          pattern: '^[a-zA-Z_][0-9a-zA-Z-_ ]{0,63}$'\n          minLength: 1\n          maxLength: 64\n        org:\n          type: string\n          pattern: '^[a-zA-Z_][0-9a-zA-Z_$]{0,63}$'\n          minLength: 1\n          maxLength: 64\n          description: Organization identifier\n        project:\n          type: string\n          pattern: '^[a-zA-Z_][0-9a-zA-Z_$]{0,63}$'\n          minLength: 1\n          maxLength: 64\n          description: Project identifier\n        description:\n          type: string\n          maxLength: 1024\n          description: Pipeline description\n        tags:\n          type: object\n          additionalProperties:\n            type: string\n          maxProperties: 128\n          description: Pipeline tags\n        modules:\n          type: array\n          description: Modules utilised in the Pipeline.\n          uniqueItems: true\n          items:\n            type: string\n        git_details:\n          $ref: '#/components/schemas/GitDetails'\n        valid:\n          type: boolean\n          description: Specifies whether Pipeline is a valid or not.\n        yaml_error_wrapper:\n          type: array\n          description: YAML schema errors.\n          items:\n            $ref: '#/components/schemas/YAMLSchemaErrorWrapper'\n        cache_response_metadata:\n          $ref: '#/components/schemas/CacheResponseMetadataDTO'\n        created:\n          type: integer\n          description: Creation timestamp for Pipeline.\n          format: int64\n        updated:\n          type: integer\n          description: Last modification timestamp for Pipeline.\n          format: int64\n        validation_uuid:\n          type: string\n          description: 'UUID of the asynchronous validation event started, if any'\n    PipelineValidationResponseBody:\n      title: Pipeline Validation Response Body\n      description: Pipeline Validation Response Body\n      x-examples:\n        example-get:\n          status: IN_PROGRESS\n      type: object\n      x-stoplight:\n        id: 6c15cb29289e9\n      properties:\n        status:\n          type: string\n          description: Status of the Pipeline Validation Event\n      x-internal: true\n    PipelineValidationUUIDResponseBody:\n      title: Pipeline Validation UUID Response Body\n      description: Contains the UUID of the Pipeline Validation Event that's started\n      x-examples:\n        example-get:\n          uuid: abcdef123\n      type: object\n      properties:\n        uuid:\n          type: string\n          description: UUID of the Pipeline Validation Event\n      x-internal: true\n      x-stoplight:\n        id: d9465007d1ed7\n    PipelineListResponseBody:\n      title: Pipeline List Response Body\n      x-stoplight:\n        id: kaxl2v3p6i4wx\n      description: Pipeline List response body\n      x-examples:\n        example-summary:\n          slug: example_pipeline\n          name: Example Pipeline\n          description: This is an Example Pipeline\n          tags:\n            example-tag-1: example-tag-1-value\n            example-tag-2: example-tag-2-value\n          created: 1234567890\n          updated: 1234567890\n          modules: CD\n          recent_execution_info:\n            - executor_info:\n                trigger_type: NOOP\n                username: harness_user\n                email: noreply@harness.io\n              execution_id: example_execution_slug\n              execution_status: Running\n              started: 1234567890\n              ended: 1234567890\n              run_number: 5\n          store_type: REMOTE\n          connector_ref: example_connector\n          valid: true\n          git_details:\n            object_id: example_object\n            branch_name: branch\n            file_path: /folder/file.json\n            repo_name: example_repository\n            commit_id: abcd123\n            file_url: www.repo/folder/file.com\n            repo_url: www.repo.com\n      type: object\n      properties:\n        slug:\n          type: string\n          description: Pipeline identifier\n          pattern: '^[a-zA-Z_][0-9a-zA-Z_$]{0,127}$'\n          minLength: 1\n          maxLength: 128\n        name:\n          type: string\n          description: Pipeline name\n          pattern: '^[a-zA-Z_][0-9a-zA-Z-_ ]{0,63}$'\n          minLength: 1\n          maxLength: 64\n        description:\n          type: string\n          maxLength: 1024\n          description: Pipeline description\n        tags:\n          type: object\n          additionalProperties:\n            type: string\n          maxProperties: 128\n          description: Pipeline tags\n        created:\n          type: integer\n          description: Creation timestamp for Pipeline.\n          format: int64\n        updated:\n          type: integer\n          description: Last modification timestamp for Pipeline.\n          format: int64\n        modules:\n          type: array\n          description: Modules utilised in the Pipeline.\n          uniqueItems: true\n          items:\n            type: string\n        recent_execution_info:\n          type: array\n          description: Array of recent Execution information\n          items:\n            $ref: '#/components/schemas/RecentExecutionInfo'\n        store_type:\n          type: string\n          description: Specifies whether the Entity is to be stored in Git or not (for Git Experience).\n          enum:\n            - INLINE\n            - REMOTE\n        connector_ref:\n          type: string\n          description: Identifier of the Harness Connector used for CRUD operations on the Entity (for Git Experience).\n        valid:\n          type: boolean\n          description: Specifies whether Pipeline is a valid or not.\n        git_details:\n          $ref: '#/components/schemas/GitDetails'\n    PipelineCreateRequestBody:\n      title: Pipeline Create Request Body\n      x-stoplight:\n        id: enghevjhz64ca\n      type: object\n      description: 'Pipeline request body object '\n      x-examples:\n        example-pipeline:\n          pipeline_yaml: |\n            pipeline:\n              allowStageExecutions: false\n              stages:\n                - stage:\n                    name: Example Build Stage\n                    identifier: example_build_stage\n                    description: ''\n                    type: Approval\n                    spec:\n                      execution:\n                        steps:\n                          - step:\n                              name: Approval Step\n                              identifier: Approval_Step\n                              type: HarnessApproval\n                              timeout: 1d\n                              spec:\n                                approvalMessage: |-\n                                  Please review the following information\n                                  and approve the pipeline progression\n                                includePipelineExecutionHistory: true\n                                approvers:\n                                  minimumCount: 1\n                                  disallowPipelineExecutor: false\n                                  userGroups: \u003c+input\u003e\n                                approverInputs: []\n                          - step:\n                              type: ShellScript\n                              name: ShellScript Step\n                              identifier: ShellScript_Step\n                              spec:\n                                shell: Bash\n                                onDelegate: true\n                                source:\n                                  type: Inline\n                                  spec:\n                                    script: \u003c+input\u003e\n                                environmentVariables: []\n                                outputVariables: []\n                                executionTarget: {}\n                              timeout: 10m\n                    tags: {}\n                - stage:\n                    name: Example Deploy Stage\n                    identifier: example_deploy_stage\n                    description: ''\n                    type: Deployment\n                    spec:\n                      serviceConfig:\n                        serviceRef: \u003c+input\u003e\n                        serviceDefinition:\n                          spec:\n                            variables: []\n                          type: Kubernetes\n                      infrastructure:\n                        environmentRef: \u003c+input\u003e\n                        infrastructureDefinition:\n                          type: KubernetesDirect\n                          spec:\n                            connectorRef: \u003c+input\u003e\n                            namespace: \u003c+input\u003e\n                            releaseName: release-\u003c+INFRA_KEY\u003e\n                        allowSimultaneousDeployments: false\n                      execution:\n                        steps:\n                          - step:\n                              name: Rollout Deployment\n                              identifier: rolloutDeployment\n                              type: K8sRollingDeploy\n                              timeout: 10m\n                              spec:\n                                skipDryRun: false\n                        rollbackSteps:\n                          - step:\n                              name: Rollback Rollout Deployment\n                              identifier: rollbackRolloutDeployment\n                              type: K8sRollingRollback\n                              timeout: 10m\n                              spec: {}\n                    tags: {}\n                    failureStrategies:\n                      - onFailure:\n                          errors:\n                            - AllErrors\n                          action:\n                            type: StageRollback\n          slug: example_pipeline\n          name: ExamplePipeline\n          description: Pipeline Description\n          tags:\n            example-tag-1: example-tag-1-value\n            example-tag-2: example-tag-2-value\n          git_details:\n            branch_name: branch\n            file_path: /folder/file.json\n            commit_message: Added Harness Git Experience\n            base_branch: old_branch\n            connector_ref: git_connector\n            store_type: REMOTE\n            repo_name: example_repository\n      properties:\n        pipeline_yaml:\n          type: string\n          description: Pipeline YAML (to be passed as a String).\n        slug:\n          type: string\n          pattern: '^[a-zA-Z_][0-9a-zA-Z_$]{0,127}$'\n          minLength: 1\n          maxLength: 128\n          description: Pipeline identifier\n        name:\n          type: string\n          pattern: '^[a-zA-Z_][0-9a-zA-Z-_ ]{0,63}$'\n          minLength: 1\n          maxLength: 64\n          description: Pipeline name\n        description:\n          type: string\n          maxLength: 1024\n          description: Pipeline description\n        tags:\n          type: object\n          additionalProperties:\n            type: string\n          maxProperties: 128\n          description: Pipeline tags\n        git_details:\n          $ref: '#/components/schemas/GitCreateDetails'\n      required:\n        - pipeline_yaml\n        - slug\n        - name\n    PipelineCreateResponseBody:\n      title: Pipeline Create Response Body\n      x-stoplight:\n        id: 70uk481o3cw8j\n      type: object\n      description: Pipeline response body\n      x-examples:\n        example-pipeline:\n          slug: example_pipeline\n      properties:\n        slug:\n          type: string\n          description: Pipeline identifier\n          pattern: '^[a-zA-Z_][0-9a-zA-Z_$]{0,127}$'\n          minLength: 1\n          maxLength: 128\n    YAMLSchemaErrorWrapper:\n      title: YAML Schema Error Wrapper\n      x-stoplight:\n        id: 64bisstgjyjfh\n      type: object\n      description: YAML schema error.\n      properties:\n        message:\n          type: string\n          description: Error message\n        message_fqn:\n          type: string\n          description: Error message with FQN\n        stage_info:\n          $ref: '#/components/schemas/NodeInfo'\n          description: Stage where the error occcurred.\n        step_info:\n          $ref: '#/components/schemas/NodeInfo'\n          description: Step where the error occcurred.\n        fqn:\n          type: string\n          description: Fully Qualified Name as per YAML\n        hint_message:\n          type: string\n          description: Hint message\n      x-examples:\n        example-schema-error:\n          message: something is incorrect\n          message_fqn: something is incorrect at pipeline.name\n          stage_info:\n            slug: example_stage\n            type: stage\n            name: Example Stage\n            fqn: pipeline.stages.stage\n          step_info:\n            slug: example_step\n            type: string\n            name: string\n            fqn: pipeline.steps.step\n          fqn: pipeline.name\n          hint_message: try changing something\n    NodeInfo:\n      title: Entity Details\n      x-stoplight:\n        id: wgx64fjolzlcr\n      type: object\n      description: Entity details\n      x-examples:\n        example-node-info:\n          slug: example_stage\n          type: stage\n          name: name\n          fqn: pipeline.stages.stage1.name\n      properties:\n        slug:\n          type: string\n          pattern: '^[a-zA-Z_][0-9a-zA-Z_$]{0,63}$'\n          minLength: 1\n          maxLength: 64\n          description: Entity identifier\n        type:\n          type: string\n          description: Type of Entity\n        name:\n          type: string\n          pattern: '^[a-zA-Z_][0-9a-zA-Z-_ ]{0,63}$'\n          minLength: 1\n          maxLength: 64\n          description: Name of Entity\n        fqn:\n          type: string\n          description: Fully Qualified Name\n    RecentExecutionInfo:\n      title: Recent Execution Information\n      x-stoplight:\n        id: bfup5ytbj94pn\n      type: object\n      description: Recent Execution information of the Pipeline.\n      properties:\n        executor_info:\n          $ref: '#/components/schemas/ExecutorInfo'\n        execution_id:\n          type: string\n          pattern: '^[a-zA-Z_][0-9a-zA-Z_$]{0,63}$'\n          minLength: 1\n          maxLength: 64\n          description: Execution identifier\n        execution_status:\n          type: string\n          description: Last Execution status of the Pipeline.\n          enum:\n            - Running\n            - AsyncWaiting\n            - TaskWaiting\n            - TimedWaiting\n            - Failed\n            - Errored\n            - IgnoreFailed\n            - NotStarted\n            - Expired\n            - Aborted\n            - Discontinuing\n            - Queued\n            - Paused\n            - ResourceWaiting\n            - InterventionWaiting\n            - ApprovalWaiting\n            - Success\n            - Suspended\n            - Skipped\n            - Pausing\n            - ApprovalRejected\n            - InputWaiting\n            - NOT_STARTED\n            - INTERVENTION_WAITING\n            - APPROVAL_WAITING\n            - APPROVAL_REJECTED\n            - Waiting\n        started:\n          type: integer\n          format: int64\n          description: Start timestamp of Execution\n        ended:\n          type: integer\n          format: int64\n          description: End timestamp of Execution\n        run_number:\n          type: integer\n          format: int32\n          description: The Execution number of this Pipeline.\n          example: 0\n      x-examples:\n        example-recent:\n          executor_info:\n            trigger_type: NOOP\n            username: harness_user\n            email: noreply@harness.io\n          execution_id: example_execution_slug\n          execution_status: Running\n          started: 1234567890\n          ended: 1234567890\n          run_number: 5\n    ExecutorInfo:\n      title: Executor Information\n      x-stoplight:\n        id: 41793mh9py33c\n      type: object\n      description: Information regarding Executor of Pipeline.\n      properties:\n        trigger_type:\n          type: string\n          description: Trigger type\n          enum:\n            - NOOP\n            - MANUAL\n            - WEBHOOK\n            - WEBHOOK_CUSTOM\n            - SCHEDULER_CRON\n        username:\n          type: string\n          description: Username of the Executor.\n        email:\n          type: string\n          description: Email address of the Executor.\n      x-examples:\n        example-executor:\n          trigger_type: NOOP\n          username: harness_user\n          email: noreply@harness.io\n    GitCreateDetails:\n      title: Create Git Details\n      x-stoplight:\n        id: 36li0g4pug41q\n      type: object\n      description: Contains parameters related to creating an Entity for Git Experience.\n      x-examples:\n        example-create-git:\n          branch_name: branch\n          file_path: /folder/file.json\n          commit_message: Added Harness Git Experience\n          base_branch: old_branch\n          connector_ref: git_connector\n          store_type: REMOTE\n          repo_name: example_repository\n      properties:\n        branch_name:\n          type: string\n          description: Name of the branch.\n        file_path:\n          type: string\n          description: File path of the Entity in the repository.\n        commit_message:\n          type: string\n          description: Commit message used for the merge commit.\n        base_branch:\n          type: string\n          description: Name of the default branch (this checks out a new branch titled by branch_name).\n        connector_ref:\n          type: string\n          description: Identifier of the Harness Connector used for CRUD operations on the Entity.\n        store_type:\n          type: string\n          description: Specifies whether the Entity is to be stored in Git or not.\n          enum:\n            - INLINE\n            - REMOTE\n        repo_name:\n          type: string\n          description: Name of the repository.\n    GitUpdateDetails:\n      title: Update Git Details\n      x-stoplight:\n        id: cko6b02f6trvt\n      type: object\n      description: Contains parameters related to updating an Entity for Git Experience.\n      x-examples:\n        example-update-git:\n          branch_name: branch\n          commit_message: Added Harness Git Experience\n          last_object_id: abcdXYZ\n          base_branch: old_branch\n          last_commit_id: abcdXYZ\n          connector_ref: git_connector\n          store_type: REMOTE\n          repo_name: example_repository\n      properties:\n        branch_name:\n          type: string\n          description: Name of the branch.\n        commit_message:\n          type: string\n          description: Commit message used for the merge commit.\n        last_object_id:\n          type: string\n          description: Last object identifier (for Github only).\n        base_branch:\n          type: string\n          description: Name of the default branch (this checks out a new branch titled by branch_name).\n        last_commit_id:\n          type: string\n          description: Last commit identifier.\n        connector_ref:\n          type: string\n          description: Identifier of the Harness Connector used for CRUD operations on the Entity.\n        store_type:\n          type: string\n          enum:\n            - INLINE\n            - REMOTE\n          description: Specifies whether the Entity is to be stored in Git or not.\n        repo_name:\n          type: string\n          description: Name of the repository.\n    PipelineUpdateRequestBody:\n      title: Pipeline Update Request Body\n      x-stoplight:\n        id: u6xvv15ghw7kk\n      type: object\n      description: 'Pipeline request body object '\n      x-examples:\n        example-pipeline:\n          pipeline_yaml: |\n            pipeline:\n              allowStageExecutions: false\n              stages:\n                - stage:\n                    name: Example Build Stage\n                    identifier: example_build_stage\n                    description: ''\n                    type: Approval\n                    spec:\n                      execution:\n                        steps:\n                          - step:\n                              name: Approval Step\n                              identifier: Approval_Step\n                              type: HarnessApproval\n                              timeout: 1d\n                              spec:\n                                approvalMessage: |-\n                                  Please review the following information\n                                  and approve the pipeline progression\n                                includePipelineExecutionHistory: true\n                                approvers:\n                                  minimumCount: 1\n                                  disallowPipelineExecutor: false\n                                  userGroups: \u003c+input\u003e\n                                approverInputs: []\n                          - step:\n                              type: ShellScript\n                              name: ShellScript Step\n                              identifier: ShellScript_Step\n                              spec:\n                                shell: Bash\n                                onDelegate: true\n                                source:\n                                  type: Inline\n                                  spec:\n                                    script: \u003c+input\u003e\n                                environmentVariables: []\n                                outputVariables: []\n                                executionTarget: {}\n                              timeout: 10m\n                    tags: {}\n                - stage:\n                    name: Example Deploy Stage\n                    identifier: example_deploy_stage\n                    description: ''\n                    type: Deployment\n                    spec:\n                      serviceConfig:\n                        serviceRef: \u003c+input\u003e\n                        serviceDefinition:\n                          spec:\n                            variables: []\n                          type: Kubernetes\n                      infrastructure:\n                        environmentRef: \u003c+input\u003e\n                        infrastructureDefinition:\n                          type: KubernetesDirect\n                          spec:\n                            connectorRef: \u003c+input\u003e\n                            namespace: \u003c+input\u003e\n                            releaseName: release-\u003c+INFRA_KEY\u003e\n                        allowSimultaneousDeployments: false\n                      execution:\n                        steps:\n                          - step:\n                              name: Rollout Deployment\n                              identifier: rolloutDeployment\n                              type: K8sRollingDeploy\n                              timeout: 10m\n                              spec:\n                                skipDryRun: false\n                        rollbackSteps:\n                          - step:\n                              name: Rollback Rollout Deployment\n                              identifier: rollbackRolloutDeployment\n                              type: K8sRollingRollback\n                              timeout: 10m\n                              spec: {}\n                    tags: {}\n                    failureStrategies:\n                      - onFailure:\n                          errors:\n                            - AllErrors\n                          action:\n                            type: StageRollback\n          slug: example_pipeline\n          name: ExamplePipeline\n          description: Pipeline Description\n          tags:\n            example-tag-1: example-tag-1-value\n            example-tag-2: example-tag-2-value\n          git_details:\n            branch_name: branch\n            commit_message: Added Harness Git Experience\n            last_object_id: abcdXYZ\n            base_branch: old_branch\n            last_commit_id: abcdXYZ\n            connector_ref: git_connector\n            store_type: REMOTE\n            repo_name: example_repository\n      properties:\n        pipeline_yaml:\n          type: string\n          description: Pipeline YAML (to be passed as a String).\n        slug:\n          type: string\n          pattern: '^[a-zA-Z_][0-9a-zA-Z_$]{0,127}$'\n          minLength: 1\n          maxLength: 128\n          description: Pipeline identifier\n        name:\n          type: string\n          pattern: '^[a-zA-Z_][0-9a-zA-Z-_ ]{0,63}$'\n          minLength: 1\n          maxLength: 64\n          description: Pipeline name\n        description:\n          type: string\n          maxLength: 1024\n          description: Pipeline description\n        tags:\n          type: object\n          additionalProperties:\n            type: string\n          maxProperties: 128\n          description: Pipeline tags\n        git_details:\n          $ref: '#/components/schemas/GitUpdateDetails'\n      required:\n        - pipeline_yaml\n        - slug\n        - name\n    CacheResponseMetadataDTO:\n      title: CacheResponseMetadataDTO\n      x-stoplight:\n        id: 8l1kpcrxe390j\n      type: object\n      properties:\n        cache_state:\n          type: string\n          enum:\n            - VALID_CACHE\n            - STALE_CACHE\n            - UNKNOWN\n          description: Tells the state of cache.\n        ttl_left:\n          type: integer\n          format: int64\n          description: Time left till cache expriry.\n        last_updated_at:\n          type: integer\n          format: int64\n          description: Time when the cache was last updated at.\n      x-examples:\n        example-1:\n          cache_state: VALID_CACHE\n          ttl_left: 9223372036854776000\n          last_updated_at: 9223372036854776000\n    InputSetCreateRequestBody:\n      title: Input Set Create Request Body\n      x-stoplight:\n        id: hoene5knwaoi1\n      type: object\n      description: Input Set create request body\n      x-examples:\n        example-input-set:\n          input_set_yaml: |-\n            inputSet:\n                pipeline:\n                    identifier: Example_Pipeline\n                    stages:\n                        - stage:\n                              identifier: Example_Stage\n                              type: Approval\n                              spec:\n                                  execution:\n                                      steps:\n                                          - step:\n                                                identifier: Approval_Step\n                                                type: HarnessApproval\n                                                spec:\n                                                    approvers:\n                                                        userGroups:\n                                                            - account.Admins\n                                          - step:\n                                                identifier: Shellscript_Step\n                                                type: ShellScript\n                                                spec:\n                                                    source:\\n                                            type: Inline\n                                                        spec:\\n                                                script: echo \"ShellScript\"\n                        - stage:\n                              identifier: Sample_Deploy_Stage\n                              type: Deployment\n                              spec:\n                                  serviceConfig:\n                                      serviceRef: Service1\n                                  infrastructure:\n                                      environmentRef: Env1\n                                      infrastructureDefinition:\n                                          type: KubernetesDirect\n                                          spec:\n                                              connectorRef: account.harnessciplatform\n                                              namespace: sample\n          slug: example_input_set\n          name: ExampleInputSet\n          description: Input Set Description\n          tags:\n            property1: example-tag-1-value\n            property2: example-tag-2-value\n          git_details:\n            branch_name: branch\n            file_path: /folder/file.json\n            commit_message: Added Harness Git Experience\n            base_branch: old_branch\n            connector_ref: git_connector\n            store_type: INLINE\n            repo_name: example_repository\n      properties:\n        input_set_yaml:\n          type: string\n          description: Input Set YAML (to be passed as a String).\n        slug:\n          type: string\n          pattern: '^[a-zA-Z_][0-9a-zA-Z_$]{0,63}$'\n          minLength: 1\n          maxLength: 64\n          description: Input Set identifier\n        name:\n          type: string\n          pattern: '^[a-zA-Z_][0-9a-zA-Z-_ ]{0,63}$'\n          minLength: 1\n          maxLength: 64\n          description: Input Set name\n        description:\n          type: string\n          maxLength: 1024\n          description: Input Set description\n        tags:\n          type: object\n          additionalProperties:\n            type: string\n          maxProperties: 128\n          description: Input Set tags\n        git_details:\n          $ref: '#/components/schemas/GitCreateDetails'\n      required:\n        - input_set_yaml\n        - slug\n        - name\n    InputSetResponseBody:\n      title: Input Set Response Body\n      x-stoplight:\n        id: vtg1ivgq0e7fm\n      type: object\n      description: Response body for Input Set\n      properties:\n        input_set_yaml:\n          type: string\n          description: Input Set YAML (returned as a String).\n        slug:\n          type: string\n          description: Input Set identifier\n          pattern: '^[a-zA-Z_][0-9a-zA-Z_$]{0,63}$'\n          minLength: 1\n          maxLength: 64\n        name:\n          type: string\n          description: Input Set name\n          pattern: '^[a-zA-Z_][0-9a-zA-Z-_ ]{0,63}$'\n          minLength: 1\n          maxLength: 64\n        org:\n          type: string\n          pattern: '^[a-zA-Z_][0-9a-zA-Z_$]{0,63}$'\n          minLength: 1\n          maxLength: 64\n          description: Organization identifier\n        project:\n          type: string\n          pattern: '^[a-zA-Z_][0-9a-zA-Z_$]{0,63}$'\n          minLength: 1\n          maxLength: 64\n          description: Project identifier\n        description:\n          type: string\n          maxLength: 1024\n          description: Input Set description\n        tags:\n          type: object\n          additionalProperties:\n            type: string\n          maxProperties: 128\n          description: Input Set tags\n        git_details:\n          $ref: '#/components/schemas/GitDetails'\n        created:\n          type: integer\n          description: Creation timestamp for Input Set.\n          format: int64\n        updated:\n          type: integer\n          description: Last modification timestamp for Input Set.\n          format: int64\n        error_details:\n          $ref: '#/components/schemas/InputSetErrorDetails'\n      x-examples:\n        example-input-set:\n          input_set_yaml: example_input_set_yaml\n          slug: example_input_set\n          name: Example Input Set\n          org: example_org\n          project: example_project\n          description: InputSet Description\n          tags:\n            example-tag-1: example-tag-1-value\n            example-tag-2: example-tag-2-value\n          git_details:\n            object_id: example_object\n            branch_name: branch\n            file_path: /folder/file.json\n            repo_name: example_repository\n            commit_id: abcd123\n            file_url: www.repo/folder/file.com\n            repo_url: www.repo.com\n          created: 1234567890\n          updated: 9876543210\n          error_details:\n            valid: false\n            message: Some fields in the Input Set are invalid.\n            outdated: true\n            error_pipeline_yaml: |\n              serviceConfig: \"pipeline.stages.example_deploy_stage.spec.serviceConfig\"\n            fqn_errors:\n              - fqn: pipeline.stages.example_deploy_stage.spec.serviceConfig\n                errors:\n                  - field_name: serviceConfig\n                    message: Field not a runtime input\n                    identifier_of_error_source: example_input_set\n            invalid_refs:\n              - example_invalid_input_set\n    InputSetErrorDetails:\n      title: Input Set Error Details\n      x-stoplight:\n        id: iib7daxu8erd3\n      type: object\n      description: Error details regarding Input Sets.\n      properties:\n        valid:\n          type: boolean\n          description: Specifies whether Input Set is a valid or not.\n        message:\n          type: string\n          description: Failure message for Input Set.\n        outdated:\n          type: boolean\n          description: Input Set is outdated with respect to the Pipeline or not.\n        error_pipeline_yaml:\n          type: string\n          description: 'If an Input Set save fails, this field contains the Pipeline YAML as a String, with the field values replaced by a UUID.'\n        fqn_errors:\n          type: array\n          items:\n            $ref: '#/components/schemas/FQNtoError'\n        invalid_refs:\n          type: array\n          description: List of Input Set References that are invalid.\n          items:\n            type: string\n      x-examples:\n        example-input-set-err:\n          valid: false\n          message: Some fields in the Input Set are invalid.\n          outdated: true\n          error_pipeline_yaml: |\n            serviceConfig: \"pipeline.stages.example_deploy_stage.spec.serviceConfig\"\n          fqn_errors:\n            - fqn: pipeline.stages.example_deploy_stage.spec.serviceConfig\n              errors:\n                - field_name: serviceConfig\n                  message: Field not a runtime input\n                  identifier_of_error_source: example_input_set\n          invalid_refs:\n            - example_invalid_input_set\n    FQNtoError:\n      title: FQN to Error\n      x-stoplight:\n        id: s583pocm5mz55\n      type: object\n      description: FQN to error response mapper.\n      x-examples:\n        example-fqn-map:\n          fqn: pipeline.stages.example_deploy_stage.spec.serviceConfig\n          errors:\n            - field_name: serviceConfig\n              message: Field not a runtime input\n              identifier_of_error_source: example_input_set\n      properties:\n        fqn:\n          type: string\n          description: Fully Qualified Name\n        errors:\n          type: array\n          description: Errors in FQN\n          items:\n            $ref: '#/components/schemas/InputSetError'\n    InputSetError:\n      title: Input Set Error\n      x-stoplight:\n        id: h61gwwmbz926g\n      type: object\n      description: Input Set error\n      properties:\n        field_name:\n          type: string\n          description: Field name that has an error.\n        message:\n          type: string\n          description: Error description\n        identifier_of_error_source:\n          type: string\n          description: Identifier of Input Set\n      x-examples:\n        example-error:\n          field_name: serviceConfig\n          message: Field not a runtime input\n          identifier_of_error_source: example_input_set\n    InputSetUpdateRequestBody:\n      title: Input Set Update Request Body\n      x-stoplight:\n        id: solgy345qd998\n      type: object\n      description: Input Set update request body\n      x-examples:\n        example-input-set:\n          input_set_yaml: |-\n            inputSet:\n                pipeline:\n                    identifier: Example_Pipeline\n                    stages:\n                        - stage:\n                              identifier: Example_Stage\n                              type: Approval\n                              spec:\n                                  execution:\n                                      steps:\n                                          - step:\n                                                identifier: Approval_Step\n                                                type: HarnessApproval\n                                                spec:\n                                                    approvers:\n                                                        userGroups:\n                                                            - account.Admins\n                                          - step:\n                                                identifier: Shellscript_Step\n                                                type: ShellScript\n                                                spec:\n                                                    source:\\n                                            type: Inline\n                                                        spec:\\n                                                script: echo \"ShellScript\"\n                        - stage:\n                              identifier: Sample_Deploy_Stage\n                              type: Deployment\n                              spec:\n                                  serviceConfig:\n                                      serviceRef: Service1\n                                  infrastructure:\n                                      environmentRef: Env1\n                                      infrastructureDefinition:\n                                          type: KubernetesDirect\n                                          spec:\n                                              connectorRef: account.harnessciplatform\n                                              namespace: sample\n          slug: example_input_set\n          name: ExampleInputSet\n          description: Input Set Description\n          tags:\n            property1: example-tag-1-value\n            property2: example-tag-2-value\n          git_details:\n            branch_name: branch\n            commit_message: Added Harness Git Experience\n            last_object_id: abcdXYZ\n            base_branch: old_branch\n            last_commit_id: abcdXYZ\n            parent_entity_connector_ref: git_connector\n            parent_entity_repo_name: example_repository\n      properties:\n        input_set_yaml:\n          type: string\n          description: Input Set YAML (to be passed as a String).\n        slug:\n          type: string\n          pattern: '^[a-zA-Z_][0-9a-zA-Z_$]{0,63}$'\n          minLength: 1\n          maxLength: 64\n          description: Input Set identifier\n        name:\n          type: string\n          pattern: '^[a-zA-Z_][0-9a-zA-Z-_ ]{0,63}$'\n          minLength: 1\n          maxLength: 64\n          description: Input Set name\n        description:\n          type: string\n          maxLength: 1024\n          description: Input Set description\n        tags:\n          type: object\n          additionalProperties:\n            type: string\n          maxProperties: 128\n          description: Input Set tags\n        git_details:\n          $ref: '#/components/schemas/InputSetGitUpdateDetails'\n      required:\n        - input_set_yaml\n        - slug\n        - name\n    InputSetGitUpdateDetails:\n      title: InputSetGitUpdateDetails\n      x-stoplight:\n        id: tqctl4ilqdk9r\n      type: object\n      description: Contains parameters related to updating an Input Set for Git Experience.\n      x-examples:\n        example-update-git:\n          branch_name: branch\n          commit_message: Added Harness Git Experience\n          last_object_id: abcdXYZ\n          base_branch: old_branch\n          last_commit_id: abcdXYZ\n          parent_entity_connector_ref: git_connector\n          parent_entity_repo_name: example_repository\n      properties:\n        branch_name:\n          type: string\n          description: Name of the branch.\n        commit_message:\n          type: string\n          description: Commit message used for the merge commit.\n        last_object_id:\n          type: string\n          description: Last object identifier (for Github only).\n        base_branch:\n          type: string\n          description: Name of the default branch (this checks out a new branch titled by branch_name).\n        last_commit_id:\n          type: string\n          description: Last commit identifier.\n        parent_entity_connector_ref:\n          type: string\n          description: Connector reference for Parent Entity (Pipeline).\n        parent_entity_repo_name:\n          type: string\n          description: Repository name for Parent Entity (Pipeline).\n    InputsResponseBody:\n      title: Inputs Response Body\n      x-stoplight:\n        id: opv8b35dycaey\n      type: object\n      properties:\n        inputs:\n          type: object\n        repository:\n          type: object\n          properties:\n            reference:\n              type: object\n              properties:\n                type:\n                  type: object\n                value:\n                  type: object\n      x-examples:\n        example-inputs-response:\n          inputs:\n            key1:\n              prompt: false\n              required: false\n              default: golang\n              type: string\n              desc: sample desc\n            key2:\n              prompt: true\n              required: true\n              type: string\n              desc: sample desc\n            key3:\n              prompt: false\n              required: false\n              type: number\n            key4:\n              prompt: false\n              required: true\n              type: secret\n              desc: sample desc\n              enums:\n                - enum1\n                - enum2\n          repository:\n            reference:\n              type:\n                prompt: false\n                required: true\n                type: string\n                enums:\n                  - enum1\n                  - enum2\n                  - enum3\n              value:\n                prompt: false\n                required: true\n                type: string\n      description: Response Body for Pipeline Inputs\n  securitySchemes:\n    x-api-key:\n      name: x-api-key\n      type: apiKey\n      in: header\n      description: API key is a token provided while making the API calls. This is used to authenticate the client at the exposed endpoint.\n  parameters:\n    Limit:\n      name: limit\n      in: query\n      required: false\n      schema:\n        type: integer\n        default: 30\n        maximum: 100\n      description: 'Pagination: Number of items to return.'\n    PageIndex:\n      name: page\n      in: query\n      required: false\n      schema:\n        type: integer\n        default: 0\n      description: 'Pagination page number strategy: Specify the page number within the paginated collection related to the number of items on each page.'\n    SearchTerm:\n      name: search_term\n      in: query\n      required: false\n      schema:\n        type: string\n      description: This would be used to filter resources having attributes matching the search term.\n    OrgParam:\n      name: org\n      in: path\n      required: true\n      schema:\n        type: string\n      description: Organization identifier\n    ProjectParam:\n      name: project\n      in: path\n      required: true\n      schema:\n        type: string\n      description: Project identifier\n    AccountHeader:\n      name: Harness-Account\n      in: header\n      required: false\n      schema:\n        type: string\n      description: 'Slug field of the account the resource is scoped to. This is required for Authorization methods other than the x-api-key header. If you are using the x-api-key header, this can be skipped.'\n    Branch:\n      name: branch_name\n      in: query\n      required: false\n      schema:\n        type: string\n      description: Name of the branch (for Git Experience).\n    PipelineParam:\n      name: pipeline\n      in: path\n      required: true\n      schema:\n        type: string\n      description: Pipeline identifier\n    Sort:\n      name: sort\n      in: query\n      required: false\n      schema:\n        type: string\n        enum:\n          - name\n          - updated\n      description: Parameter on the basis of which sorting is done.\n    Order:\n      name: order\n      in: query\n      required: false\n      schema:\n        type: string\n        enum:\n          - ASC\n          - DESC\n      description: Order on the basis of which sorting is done.\n    UuidParam:\n      name: uuid\n      in: path\n      required: true\n      schema:\n        type: string\n      description: UUID\n    InputSetParam:\n      name: input-set\n      in: path\n      required: true\n      schema:\n        type: string\n      description: Input Set identifier\n    PipelineInputSetParam:\n      name: pipeline\n      in: query\n      required: true\n      schema:\n        type: string\n      description: Pipeline identifier for the Input Set.\n  responses:\n    PipelineCreateResponseBody:\n      description: Pipeline response body\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/PipelineCreateResponseBody'\n          examples:\n            example-pipeline:\n              value:\n                slug: example_pipeline\n        application/yaml:\n          schema:\n            $ref: '#/components/schemas/PipelineCreateResponseBody'\n          examples:\n            example-pipeline:\n              value: |\n                slug: example_pipeline\n    PipelineValidationResponseBody:\n      description: Pipeline Validation response body\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/PipelineValidationResponseBody'\n        application/yaml:\n          schema:\n            $ref: '#/components/schemas/PipelineValidationResponseBody'\n    PipelineValidationUUIDResponseBody:\n      description: Contains the UUID of the Pipeline Validation Event that's started\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/PipelineValidationUUIDResponseBody'\n        application/yaml:\n          schema:\n            $ref: '#/components/schemas/PipelineValidationUUIDResponseBody'\n    PipelineGetResponseBody:\n      description: Pipeline response body\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/PipelineGetResponseBody'\n          examples:\n            example-response:\n              value:\n                pipeline_yaml: example_yaml_text\n                template_applied_pipeline_yaml: example_yaml_text_with_template\n                slug: example_pipeline\n                name: ExamplePipeline\n                org: example_org\n                project: example_project\n                description: Pipeline Description\n                tags:\n                  example-tag-1: example-tag-1-value\n                  example-tag-2: example-tag-2-value\n                modules:\n                  - cd\n                git_details:\n                  object_id: example_object\n                  branch_name: branch\n                  file_path: /folder/file.json\n                  repo_name: example_repository\n                  commit_id: abcd123\n                  file_url: www.repo/folder/file.com\n                  repo_url: www.repo.com\n                valid: true\n                yaml_error_wrapper:\n                  message: something is incorrect\n                  message_fqn: something is incorrect at pipeline.name\n                  stage_info:\n                    slug: example_stage\n                    type: stage\n                    name: Example Stage\n                    fqn: pipeline.stages.stage\n                  step_info:\n                    slug: example_step\n                    type: string\n                    name: string\n                    fqn: pipeline.steps.step\n                  fqn: pipeline.name\n                  hint_message: try changing something\n                cache_response_metadata:\n                  cache_state: VALID_CACHE\n                  ttl_left: 9223372036854776000\n                  last_updated_at: 9223372036854776000\n                created: 1234567890\n                updated: 1234567890\n        application/yaml:\n          schema:\n            $ref: '#/components/schemas/PipelineGetResponseBody'\n          examples:\n            example-response:\n              value: |\n                pipeline_yaml: example_yaml_text\n                template_applied_pipeline_yaml: example_yaml_text_with_template\n                slug: example_pipeline\n                name: ExamplePipeline\n                org: example_org\n                project: example_project\n                description: Pipeline Description\n                tags:\n                  example-tag-1: example-tag-1-value\n                  example-tag-2: example-tag-2-value\n                modules:\n                  - cd\n                git_details:\n                  object_id: example_object\n                  branch_name: branch\n                  file_path: /folder/file.json\n                  repo_name: example_repository\n                  commit_id: abcd123\n                  file_url: www.repo/folder/file.com\n                  repo_url: www.repo.com\n                valid: true\n                yaml_error_wrapper:\n                  message: something is incorrect\n                  message_fqn: something is incorrect at pipeline.name\n                  stage_info:\n                    slug: example_stage\n                    type: stage\n                    name: Example Stage\n                    fqn: pipeline.stages.stage\n                  step_info:\n                    slug: example_step\n                    type: string\n                    name: string\n                    fqn: pipeline.steps.step\n                  fqn: pipeline.name\n                  hint_message: try changing something\n                cache_response_metadata:\n                  cache_state: VALID_CACHE\n                  ttl_left: 9223372036854776000\n                  last_updated_at: 9223372036854776000\n                created: 1234567890\n                updated: 1234567890\n    PipelineListResponseBody:\n      description: Response body for List Pipelines.\n      content:\n        application/json:\n          schema:\n            description: Response body for List Pipelines.\n            type: array\n            items:\n              $ref: '#/components/schemas/PipelineListResponseBody'\n          examples:\n            example-list-response:\n              value:\n                - slug: example_pipeline\n                  name: Example Pipeline\n                  description: This is an Example Pipeline\n                  tags:\n                    example-tag-1: example-tag-1-value\n                    example-tag-2: example-tag-2-value\n                  created: 1234567890\n                  updated: 1234567890\n                  modules:\n                    - CD\n                  recent_execution_info:\n                    - executor_info:\n                        trigger_type: NOOP\n                        username: harness_user\n                        email: noreply@harness.io\n                      execution_id: example_execution_slug\n                      execution_status: Running\n                      started: 1234567890\n                      ended: 1234567890\n                      run_number: 5\n                  store_type: REMOTE\n                  connector_ref: example_connector\n                  valid: true\n                  git_details:\n                    object_id: example_object\n                    branch_name: branch\n                    file_path: /folder/file.json\n                    repo_name: example_repository\n                    commit_id: abcd123\n                    file_url: www.repo/folder/file.com\n                    repo_url: www.repo.com\n        application/yaml:\n          schema:\n            description: Response body for List Pipelines.\n            type: array\n            items:\n              $ref: '#/components/schemas/PipelineListResponseBody'\n          examples:\n            example-list-response:\n              value: |\n                - slug: example_pipeline\n                  name: Example Pipeline\n                  description: This is an Example Pipeline\n                  tags:\n                    example-tag-1: example-tag-1-value\n                    example-tag-2: example-tag-2-value\n                  created: 1234567890\n                  updated: 1234567890\n                  modules:\n                    - CD\n                  recent_execution_info:\n                    - executor_info:\n                        trigger_type: NOOP\n                        username: harness_user\n                        email: noreply@harness.io\n                      execution_id: example_execution_slug\n                      execution_status: Running\n                      started: 1234567890\n                      ended: 1234567890\n                      run_number: 5\n                  store_type: REMOTE\n                  connector_ref: example_connector\n                  valid: true\n                  git_details:\n                    object_id: example_object\n                    branch_name: branch\n                    file_path: /folder/file.json\n                    repo_name: example_repository\n                    commit_id: abcd123\n                    file_url: www.repo/folder/file.com\n                    repo_url: www.repo.com\n      headers:\n        Link:\n          schema:\n            type: string\n          description: 'Links to related resources, in the format defined by [RFC 5988](https://tools.ietf.org/html/rfc5988#section-5). This will include a link with relation type `next` to the next page, if there is a next page.'\n          examples:\n            sample:\n              value: '\u003c/v1/orgs/{org}/projects/{project}/pipelines?page=2\u0026limit=1\u003e; rel=\"next\", \u003c/v1/orgs/{org}/projects/{project}/pipelines?page=1\u0026limit=1\u003e; rel=\"self\", \u003c/v1/orgs/{org}/projects/{project}/pipelines?page=0\u0026limit=1\u003e; rel=\"previous\", '\n    InputSetResponseBody:\n      description: Input Set response body\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/InputSetResponseBody'\n          examples:\n            example-input-set:\n              value:\n                input_set_yaml: example_input_set_yaml\n                slug: example_input_set\n                name: Example Input Set\n                org: example_org\n                project: example_project\n                description: InputSet Description\n                tags:\n                  example-tag-1: example-tag-1-value\n                  example-tag-2: example-tag-2-value\n                git_details:\n                  object_id: example_object\n                  branch_name: branch\n                  file_path: /folder/file.json\n                  repo_name: example_repository\n                  commit_id: abcd123\n                  file_url: www.repo/folder/file.com\n                  repo_url: www.repo.com\n                created: 1234567890\n                updated: 9876543210\n                error_details:\n                  valid: false\n                  message: Some fields in the Input Set are invalid.\n                  outdated: true\n                  error_pipeline_yaml: |\n                    serviceConfig: \"pipeline.stages.example_deploy_stage.spec.serviceConfig\"\n                  fqn_errors:\n                    - fqn: pipeline.stages.example_deploy_stage.spec.serviceConfig\n                      errors:\n                        - field_name: serviceConfig\n                          message: Field not a runtime input\n                          identifier_of_error_source: example_input_set\n                  invalid_refs:\n                    - example_invalid_input_set\n        application/yaml:\n          schema:\n            $ref: '#/components/schemas/InputSetResponseBody'\n          examples:\n            example-input-set:\n              value: |\n                input_set_yaml: example_input_set_yaml\n                slug: example_input_set\n                name: Example Input Set\n                org: example_org\n                project: example_project\n                description: InputSet Description\n                tags:\n                  example-tag-1: example-tag-1-value\n                  example-tag-2: example-tag-2-value\n                git_details:\n                  object_id: example_object\n                  branch_name: branch\n                  file_path: /folder/file.json\n                  repo_name: example_repository\n                  commit_id: abcd123\n                  file_url: www.repo/folder/file.com\n                  repo_url: www.repo.com\n                created: 1234567890\n                updated: 9876543210\n                error_details:\n                  valid: false\n                  message: Some fields in the Input Set are invalid.\n                  outdated: true\n                  error_pipeline_yaml: |\n                    serviceConfig: \"pipeline.stages.example_deploy_stage.spec.serviceConfig\"\n                  fqn_errors:\n                    - fqn: pipeline.stages.example_deploy_stage.spec.serviceConfig\n                      errors:\n                        - field_name: serviceConfig\n                          message: Field not a runtime input\n                          identifier_of_error_source: example_input_set\n                  invalid_refs:\n                    - example_invalid_input_set\n    InputSetListResponseBody:\n      description: Input Set response body\n      content:\n        application/json:\n          schema:\n            type: array\n            items:\n              $ref: '#/components/schemas/InputSetResponseBody'\n          examples:\n            example-input-sets:\n              value:\n                - input_set_yaml: example_input_set_yaml\n                  slug: example_input_set\n                  name: Example Input Set\n                  org: example_org\n                  project: example_project\n                  description: InputSet Description\n                  tags:\n                    example-tag-1: example-tag-1-value\n                    example-tag-2: example-tag-2-value\n                  git_details:\n                    object_id: example_object\n                    branch_name: branch\n                    file_path: /folder/file.json\n                    repo_name: example_repository\n                    commit_id: abcd123\n                    file_url: www.repo/folder/file.com\n                    repo_url: www.repo.com\n                  created: 1234567890\n                  updated: 9876543210\n                  error_details:\n                    valid: false\n                    message: Some fields in the Input Set are invalid.\n                    outdated: true\n                    error_pipeline_yaml: |\n                      serviceConfig: \"pipeline.stages.example_deploy_stage.spec.serviceConfig\"\n                    fqn_errors:\n                      - fqn: pipeline.stages.example_deploy_stage.spec.serviceConfig\n                        errors:\n                          - field_name: serviceConfig\n                            message: Field not a runtime input\n                            identifier_of_error_source: example_input_set\n                    invalid_refs:\n                      - example_invalid_input_set\n        application/yaml:\n          schema:\n            type: array\n            items:\n              $ref: '#/components/schemas/InputSetResponseBody'\n          examples:\n            example-input-sets:\n              value: |\n                - input_set_yaml: example_input_set_yaml\n                  slug: example_input_set\n                  name: Example Input Set\n                  org: example_org\n                  project: example_project\n                  description: InputSet Description\n                  tags:\n                    example-tag-1: example-tag-1-value\n                    example-tag-2: example-tag-2-value\n                  git_details:\n                    object_id: example_object\n                    branch_name: branch\n                    file_path: /folder/file.json\n                    repo_name: example_repository\n                    commit_id: abcd123\n                    file_url: www.repo/folder/file.com\n                    repo_url: www.repo.com\n                  created: 1234567890\n                  updated: 9876543210\n                  error_details:\n                    valid: false\n                    message: Some fields in the Input Set are invalid.\n                    outdated: true\n                    error_pipeline_yaml: |\n                      serviceConfig: \"pipeline.stages.example_deploy_stage.spec.serviceConfig\"\n                    fqn_errors:\n                      - fqn: pipeline.stages.example_deploy_stage.spec.serviceConfig\n                        errors:\n                          - field_name: serviceConfig\n                            message: Field not a runtime input\n                            identifier_of_error_source: example_input_set\n                    invalid_refs:\n                      - example_invalid_input_set\n      headers:\n        Link:\n          schema:\n            type: string\n          description: 'Links to related resources, in the format defined by [RFC 5988](https://tools.ietf.org/html/rfc5988#section-5). This will include a link with relation type `next` to the next page, if there is a next page.'\n          examples:\n            sample:\n              value: '\u003c/v1/orgs/{org}/projects/{project}/pipelines/{pipeline}/input-sets?page=2\u0026limit=1\u003e; rel=\"next\", \u003c/v1/orgs/{org}/projects/{project}/pipelines/{pipeline}/input-sets?page=1\u0026limit=1\u003e; rel=\"self\", \u003c/v1/orgs/{org}/projects/{project}/pipelines/{pipeline}/input-sets?page=0\u0026limit=1\u003e; rel=\"previous\", '\n    InputsResponseBody:\n      description: Inputs Response Body\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/InputsResponseBody'\n          examples:\n            inputs-response-body:\n              value:\n                inputs:\n                  key1:\n                    prompt: false\n                    required: false\n                    default: golang\n                    type: string\n                    desc: sample desc\n                  key2:\n                    prompt: true\n                    required: true\n                    type: string\n                    desc: sample desc\n                  key3:\n                    prompt: false\n                    required: false\n                    type: number\n                  key4:\n                    prompt: false\n                    required: true\n                    type: secret\n                    desc: sample desc\n                    enums:\n                      - enum1\n                      - enum2\n                repository:\n                  reference:\n                    type:\n                      prompt: false\n                      required: true\n                      type: string\n                      enums:\n                        - enum1\n                        - enum2\n                        - enum3\n                    value:\n                      prompt: false\n                      required: true\n                      type: string\n  requestBodies:\n    PipelineCreateRequestBody:\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/PipelineCreateRequestBody'\n          examples:\n            example-pipeline:\n              value:\n                pipeline_yaml: |\n                  pipeline:\n                    allowStageExecutions: false\n                    stages:\n                      - stage:\n                          name: Example Build Stage\n                          identifier: example_build_stage\n                          description: ''\n                          type: Approval\n                          spec:\n                            execution:\n                              steps:\n                                - step:\n                                    name: Approval Step\n                                    identifier: Approval_Step\n                                    type: HarnessApproval\n                                    timeout: 1d\n                                    spec:\n                                      approvalMessage: |-\n                                        Please review the following information\n                                        and approve the pipeline progression\n                                      includePipelineExecutionHistory: true\n                                      approvers:\n                                        minimumCount: 1\n                                        disallowPipelineExecutor: false\n                                        userGroups: \u003c+input\u003e\n                                      approverInputs: []\n                                - step:\n                                    type: ShellScript\n                                    name: ShellScript Step\n                                    identifier: ShellScript_Step\n                                    spec:\n                                      shell: Bash\n                                      onDelegate: true\n                                      source:\n                                        type: Inline\n                                        spec:\n                                          script: \u003c+input\u003e\n                                      environmentVariables: []\n                                      outputVariables: []\n                                      executionTarget: {}\n                                    timeout: 10m\n                          tags: {}\n                      - stage:\n                          name: Example Deploy Stage\n                          identifier: example_deploy_stage\n                          description: ''\n                          type: Deployment\n                          spec:\n                            serviceConfig:\n                              serviceRef: \u003c+input\u003e\n                              serviceDefinition:\n                                spec:\n                                  variables: []\n                                type: Kubernetes\n                            infrastructure:\n                              environmentRef: \u003c+input\u003e\n                              infrastructureDefinition:\n                                type: KubernetesDirect\n                                spec:\n                                  connectorRef: \u003c+input\u003e\n                                  namespace: \u003c+input\u003e\n                                  releaseName: release-\u003c+INFRA_KEY\u003e\n                              allowSimultaneousDeployments: false\n                            execution:\n                              steps:\n                                - step:\n                                    name: Rollout Deployment\n                                    identifier: rolloutDeployment\n                                    type: K8sRollingDeploy\n                                    timeout: 10m\n                                    spec:\n                                      skipDryRun: false\n                              rollbackSteps:\n                                - step:\n                                    name: Rollback Rollout Deployment\n                                    identifier: rollbackRolloutDeployment\n                                    type: K8sRollingRollback\n                                    timeout: 10m\n                                    spec: {}\n                          tags: {}\n                          failureStrategies:\n                            - onFailure:\n                                errors:\n                                  - AllErrors\n                                action:\n                                  type: StageRollback\n                slug: example_pipeline\n                name: ExamplePipeline\n                description: Pipeline Description\n                tags:\n                  example-tag-1: example-tag-1-value\n                  example-tag-2: example-tag-2-value\n                git_details:\n                  branch_name: branch\n                  file_path: /folder/file.json\n                  commit_message: Added Harness Git Experience\n                  base_branch: old_branch\n                  connector_ref: git_connector\n                  store_type: REMOTE\n                  repo_name: example_repository\n        application/yaml:\n          schema:\n            $ref: '#/components/schemas/PipelineCreateRequestBody'\n          examples:\n            example-pipeline:\n              value: |\n                pipeline_yaml: 'pipeline: allowStageExecutions: false stages: - stage: name: Example Build Stage identifier: example_build_stage description: '''' type: Approval spec: execution: steps: - step: name: Approval Step identifier: Approval_Step type: HarnessApproval timeout: 1d spec: approvalMessage: |- Please review the following information and approve the pipeline progression includePipelineExecutionHistory: true approvers: minimumCount: 1 disallowPipelineExecutor: false userGroups: \u003c+input\u003e approverInputs: [] - step: type: ShellScript name: ShellScript Step identifier: ShellScript_Step spec: shell: Bash onDelegate: true source: type: Inline spec: script: \u003c+input\u003e environmentVariables: [] outputVariables: [] executionTarget: {} timeout: 10m tags: {} - stage: name: Example Deploy Stage identifier: example_deploy_stage description: '''' type: Deployment spec: serviceConfig: serviceRef: \u003c+input\u003e serviceDefinition: spec: variables: [] type: Kubernetes infrastructure: environmentRef: \u003c+input\u003e infrastructureDefinition: type: KubernetesDirect spec: connectorRef: \u003c+input\u003e namespace: \u003c+input\u003e releaseName: release-\u003c+INFRA_KEY\u003e allowSimultaneousDeployments: false execution: steps: - step: name: Rollout Deployment identifier: rolloutDeployment type: K8sRollingDeploy timeout: 10m spec: skipDryRun: false rollbackSteps: - step: name: Rollback Rollout Deployment identifier: rollbackRolloutDeployment type: K8sRollingRollback timeout: 10m spec: {} tags: {} failureStrategies: - onFailure: errors: - AllErrors action: type: StageRollback'\n                slug: example_pipeline\n                name: ExamplePipeline\n                description: Pipeline Description\n                tags: \n                  example-tag-1: example-tag-1-value\n                  example-tag-2: example-tag-2-value\n                git_details:\n                  branch_name: branch\n                  file_path: /folder/file.json\n                  commit_message: Added Harness Git Experience\n                  base_branch: old_branch\n                  connector_ref: git_connector\n                  store_type: REMOTE\n                  repo_name: example_repository\n      description: Pipeline request body\n      required: true\n    PipelineUpdateRequestBody:\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/PipelineUpdateRequestBody'\n          examples:\n            example-pipeline:\n              value:\n                pipeline_yaml: |\n                  pipeline:\n                    allowStageExecutions: false\n                    stages:\n                      - stage:\n                          name: Example Build Stage\n                          identifier: example_build_stage\n                          description: ''\n                          type: Approval\n                          spec:\n                            execution:\n                              steps:\n                                - step:\n                                    name: Approval Step\n                                    identifier: Approval_Step\n                                    type: HarnessApproval\n                                    timeout: 1d\n                                    spec:\n                                      approvalMessage: |-\n                                        Please review the following information\n                                        and approve the pipeline progression\n                                      includePipelineExecutionHistory: true\n                                      approvers:\n                                        minimumCount: 1\n                                        disallowPipelineExecutor: false\n                                        userGroups: \u003c+input\u003e\n                                      approverInputs: []\n                                - step:\n                                    type: ShellScript\n                                    name: ShellScript Step\n                                    identifier: ShellScript_Step\n                                    spec:\n                                      shell: Bash\n                                      onDelegate: true\n                                      source:\n                                        type: Inline\n                                        spec:\n                                          script: \u003c+input\u003e\n                                      environmentVariables: []\n                                      outputVariables: []\n                                      executionTarget: {}\n                                    timeout: 10m\n                          tags: {}\n                      - stage:\n                          name: Example Deploy Stage\n                          identifier: example_deploy_stage\n                          description: ''\n                          type: Deployment\n                          spec:\n                            serviceConfig:\n                              serviceRef: \u003c+input\u003e\n                              serviceDefinition:\n                                spec:\n                                  variables: []\n                                type: Kubernetes\n                            infrastructure:\n                              environmentRef: \u003c+input\u003e\n                              infrastructureDefinition:\n                                type: KubernetesDirect\n                                spec:\n                                  connectorRef: \u003c+input\u003e\n                                  namespace: \u003c+input\u003e\n                                  releaseName: release-\u003c+INFRA_KEY\u003e\n                              allowSimultaneousDeployments: false\n                            execution:\n                              steps:\n                                - step:\n                                    name: Rollout Deployment\n                                    identifier: rolloutDeployment\n                                    type: K8sRollingDeploy\n                                    timeout: 10m\n                                    spec:\n                                      skipDryRun: false\n                              rollbackSteps:\n                                - step:\n                                    name: Rollback Rollout Deployment\n                                    identifier: rollbackRolloutDeployment\n                                    type: K8sRollingRollback\n                                    timeout: 10m\n                                    spec: {}\n                          tags: {}\n                          failureStrategies:\n                            - onFailure:\n                                errors:\n                                  - AllErrors\n                                action:\n                                  type: StageRollback\n                slug: example_pipeline\n                name: ExamplePipeline\n                description: Pipeline Description\n                tags:\n                  example-tag-1: example-tag-1-value\n                  example-tag-2: example-tag-2-value\n                git_details:\n                  branch_name: branch\n                  commit_message: Added Harness Git Experience\n                  last_object_id: abcdXYZ\n                  base_branch: old_branch\n                  last_commit_id: abcdXYZ\n                  connector_ref: git_connector\n                  store_type: REMOTE\n                  repo_name: example_repository\n        application/yaml:\n          schema:\n            $ref: '#/components/schemas/PipelineUpdateRequestBody'\n          examples:\n            example-pipeline:\n              value: |\n                pipeline_yaml: 'pipeline: allowStageExecutions: false stages: - stage: name: Example Build Stage identifier: example_build_stage description: '''' type: Approval spec: execution: steps: - step: name: Approval Step identifier: Approval_Step type: HarnessApproval timeout: 1d spec: approvalMessage: |- Please review the following information and approve the pipeline progression includePipelineExecutionHistory: true approvers: minimumCount: 1 disallowPipelineExecutor: false userGroups: \u003c+input\u003e approverInputs: [] - step: type: ShellScript name: ShellScript Step identifier: ShellScript_Step spec: shell: Bash onDelegate: true source: type: Inline spec: script: \u003c+input\u003e environmentVariables: [] outputVariables: [] executionTarget: {} timeout: 10m tags: {} - stage: name: Example Deploy Stage identifier: example_deploy_stage description: '''' type: Deployment spec: serviceConfig: serviceRef: \u003c+input\u003e serviceDefinition: spec: variables: [] type: Kubernetes infrastructure: environmentRef: \u003c+input\u003e infrastructureDefinition: type: KubernetesDirect spec: connectorRef: \u003c+input\u003e namespace: \u003c+input\u003e releaseName: release-\u003c+INFRA_KEY\u003e allowSimultaneousDeployments: false execution: steps: - step: name: Rollout Deployment identifier: rolloutDeployment type: K8sRollingDeploy timeout: 10m spec: skipDryRun: false rollbackSteps: - step: name: Rollback Rollout Deployment identifier: rollbackRolloutDeployment type: K8sRollingRollback timeout: 10m spec: {} tags: {} failureStrategies: - onFailure: errors: - AllErrors action: type: StageRollback'\n                slug: example_pipeline\n                name: ExamplePipeline\n                description: Pipeline Description\n                tags: \n                  example-tag-1: example-tag-1-value\n                  example-tag-2: example-tag-2-value\n                git_details:\n                  branch_name: branch\n                  commit_message: Added Harness Git Experience\n                  last_object_id: abcdXYZ\n                  base_branch: old_branch\n                  last_commit_id: abcdXYZ\n      description: Pipeline request body\n      required: true\n    InputSetCreateRequestBody:\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/InputSetCreateRequestBody'\n          examples:\n            example-input:\n              value:\n                input_set_yaml: |-\n                  inputSet:\n                      pipeline:\n                          identifier: Example_Pipeline\n                          stages:\n                              - stage:\n                                    identifier: Example_Stage\n                                    type: Approval\n                                    spec:\n                                        execution:\n                                            steps:\n                                                - step:\n                                                      identifier: Approval_Step\n                                                      type: HarnessApproval\n                                                      spec:\n                                                          approvers:\n                                                              userGroups:\n                                                                  - account.Admins\n                                                - step:\n                                                      identifier: Shellscript_Step\n                                                      type: ShellScript\n                                                      spec:\n                                                          source:\\n                                            type: Inline\n                                                              spec:\\n                                                script: echo \"ShellScript\"\n                              - stage:\n                                    identifier: Sample_Deploy_Stage\n                                    type: Deployment\n                                    spec:\n                                        serviceConfig:\n                                            serviceRef: Service1\n                                        infrastructure:\n                                            environmentRef: Env1\n                                            infrastructureDefinition:\n                                                type: KubernetesDirect\n                                                spec:\n                                                    connectorRef: account.harnessciplatform\n                                                    namespace: sample\n                slug: example_input_set\n                name: ExampleInputSet\n                description: Input Set Description\n                tags:\n                  property1: example-tag-1-value\n                  property2: example-tag-2-value\n                git_details:\n                  branch_name: branch\n                  file_path: /folder/file.json\n                  commit_message: Added Harness Git Experience\n                  base_branch: old_branch\n                  connector_ref: git_connector\n                  store_type: REMOTE\n                  repo_name: example_repository\n        application/yaml:\n          schema:\n            $ref: '#/components/schemas/InputSetCreateRequestBody'\n          examples:\n            example-input:\n              value: |\n                input_set_yaml: |-\n                  inputSet:\n                      pipeline:\n                          identifier: Example_Pipeline\n                          stages:\n                              - stage:\n                                    identifier: Example_Stage\n                                    type: Approval\n                                    spec:\n                                        execution:\n                                            steps:\n                                                - step:\n                                                      identifier: Approval_Step\n                                                      type: HarnessApproval\n                                                      spec:\n                                                          approvers:\n                                                              userGroups:\n                                                                  - account.Admins\n                                                - step:\n                                                      identifier: Shellscript_Step\n                                                      type: ShellScript\n                                                      spec:\n                                                          source:\\n                                            type: Inline\n                                                              spec:\\n                                                script: echo \"ShellScript\"\n                              - stage:\n                                    identifier: Sample_Deploy_Stage\n                                    type: Deployment\n                                    spec:\n                                        serviceConfig:\n                                            serviceRef: Service1\n                                        infrastructure:\n                                            environmentRef: Env1\n                                            infrastructureDefinition:\n                                                type: KubernetesDirect\n                                                spec:\n                                                    connectorRef: account.harnessciplatform\n                                                    namespace: sample\n                slug: example_input_set\n                name: ExampleInputSet\n                description: Input Set Description\n                tags:\n                  property1: example-tag-1-value\n                  property2: example-tag-2-value\n                git_details:\n                  branch_name: branch\n                  file_path: /folder/file.json\n                  commit_message: Added Harness Git Experience\n                  base_branch: old_branch\n                  connector_ref: git_connector\n                  store_type: INLINE\n                  repo_name: example_repository\n      description: Input Set create request body.\n      required: true\n    InputSetUpdateRequestBody:\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/InputSetUpdateRequestBody'\n          examples:\n            example-input:\n              value:\n                input_set_yaml: |-\n                  inputSet:\n                      pipeline:\n                          identifier: Example_Pipeline\n                          stages:\n                              - stage:\n                                    identifier: Example_Stage\n                                    type: Approval\n                                    spec:\n                                        execution:\n                                            steps:\n                                                - step:\n                                                      identifier: Approval_Step\n                                                      type: HarnessApproval\n                                                      spec:\n                                                          approvers:\n                                                              userGroups:\n                                                                  - account.Admins\n                                                - step:\n                                                      identifier: Shellscript_Step\n                                                      type: ShellScript\n                                                      spec:\n                                                          source:\\n                                            type: Inline\n                                                              spec:\\n                                                script: echo \"ShellScript\"\n                              - stage:\n                                    identifier: Sample_Deploy_Stage\n                                    type: Deployment\n                                    spec:\n                                        serviceConfig:\n                                            serviceRef: Service1\n                                        infrastructure:\n                                            environmentRef: Env1\n                                            infrastructureDefinition:\n                                                type: KubernetesDirect\n                                                spec:\n                                                    connectorRef: account.harnessciplatform\n                                                    namespace: sample\n                slug: example_input_set\n                name: ExampleInputSet\n                description: Input Set Description\n                tags:\n                  property1: example-tag-1-value\n                  property2: example-tag-2-value\n                git_details:\n                  branch_name: branch\n                  commit_message: Added Harness Git Experience\n                  last_object_id: abcdXYZ\n                  base_branch: old_branch\n                  last_commit_id: abcdXYZ\n                  parent_entity_connector_ref: git_connector\n                  parent_entity_repo_name: example_repository\n        application/yaml:\n          schema:\n            $ref: '#/components/schemas/InputSetUpdateRequestBody'\n          examples:\n            example-input:\n              value: |\n                input_set_yaml: |-\n                  inputSet:\n                      pipeline:\n                          identifier: Example_Pipeline\n                          stages:\n                              - stage:\n                                    identifier: Example_Stage\n                                    type: Approval\n                                    spec:\n                                        execution:\n                                            steps:\n                                                - step:\n                                                      identifier: Approval_Step\n                                                      type: HarnessApproval\n                                                      spec:\n                                                          approvers:\n                                                              userGroups:\n                                                                  - account.Admins\n                                                - step:\n                                                      identifier: Shellscript_Step\n                                                      type: ShellScript\n                                                      spec:\n                                                          source:\\n                                            type: Inline\n                                                              spec:\\n                                                script: echo \"ShellScript\"\n                              - stage:\n                                    identifier: Sample_Deploy_Stage\n                                    type: Deployment\n                                    spec:\n                                        serviceConfig:\n                                            serviceRef: Service1\n                                        infrastructure:\n                                            environmentRef: Env1\n                                            infrastructureDefinition:\n                                                type: KubernetesDirect\n                                                spec:\n                                                    connectorRef: account.harnessciplatform\n                                                    namespace: sample\n                slug: example_input_set\n                name: ExampleInputSet\n                description: Input Set Description\n                tags:\n                  property1: example-tag-1-value\n                  property2: example-tag-2-value\n                git_details:\n                  branch_name: branch\n                  commit_message: Added Harness Git Experience\n                  last_object_id: abcdXYZ\n                  base_branch: old_branch\n                  last_commit_id: abcdXYZ\n                  parent_entity_connector_ref: git_connector\n                  parent_entity_repo_name: example_repository\n      description: Input Set update request body\n      required: true\n",
			"canonicalURL": "/github.com/harness/harness-core@6b21e1651a16ea54fc204f61157959589dfad0d1/-/blob/pipeline-service/contracts/openapi/v1/openapi.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/harness/harness-core/blob/6b21e1651a16ea54fc204f61157959589dfad0d1/pipeline-service/contracts/openapi/v1/openapi.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "parse: parse spec: parse path items: path \"/v1/orgs/{org}/projects/{project}/pipelines/{pipeline}\": get: operation \"get-pipeline\": parameters: parse parameter \"validate_async\": parse schema: at pipeline-service/contracts/openapi/v1/openapi.yaml:178:22: parse default: expected type \"boolean\", got \"string\""
}