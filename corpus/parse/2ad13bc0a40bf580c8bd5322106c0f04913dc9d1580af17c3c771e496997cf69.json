{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/networknt/model-config"
		},
		"file": {
			"name": "openapi.yaml",
			"size": 0,
			"path": "rest/openapi/partner-server/openapi.yaml",
			"byteSize": 4741,
			"content": "openapi: 3.0.0\ninfo:\n  version: 1.0.0\n  title: Partner Server for Light Blockchain\n  license:\n    name: MIT\nservers:\n  - url: 'http://partner.networknt.com'\npaths:\n  '/transactions/{currency}':\n    get:\n      summary: List latest transactions\n      operationId: queryTxs\n      tags:\n        - txs\n      parameters:\n        - name: currency\n          in: path\n          description: Currency name of for the blockchain\n          required: true\n          schema:\n            type: string\n            enum: [taiji]\n        - name: limit\n          in: query\n          description: How many items to return at one time (max 100 and default 10) \n          required: false\n          schema:\n            type: integer\n            format: int32\n        - name: offset\n          in: query\n          description: Offset of transactions (default 0 which is from the last transaction)\n          required: false\n          schema:\n            type: integer\n            format: int32\n      security:\n        - tx_auth:\n            - 'tx.r'\n      responses:\n        '200':\n          description: A paged array of txs\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/Transaction'\n              example:\n                - currency: taiji\n                  c: \n                  - '0xd8f64a42b57be0d565f385378db2f6bf324ce14a594afc05de90436e9ce01f60'\n                  d: \n                  - '0xd8f64a42b57be0d565f385378db2f6bf324ce14a594afc05de90436e9ce01f60'\n                  - '0xd8f64a42b57be0d565f385378db2f6bf324ce14a594afc05de90436e9ce01f60'\n                - currency: taiji\n                  c: \n                  - '0xd8f64a42b57be0d565f385378db2f6bf324ce14a594afc05de90436e9ce01f60'\n                  d:\n                  - '0xd8f64a42b57be0d565f385378db2f6bf324ce14a594afc05de90436e9ce01f60'\n    post:\n      summary: Create a list of new transactions in a batch\n      operationId: createTransactions\n      parameters:\n        - name: currency\n          in: path\n          description: Currency name of for the blockchain\n          required: true\n          schema:\n            type: string\n            enum: [taiji]\n      requestBody:\n        description: Transactions in encoded format to add to the blockchain\n        required: true\n        content:\n          application/json:\n            schema:\n              type: array\n              items:\n                $ref: '#/components/schemas/Transaction' \n      tags:\n        - txs\n      security:\n        - tx_auth:\n            - 'tx.r'\n            - 'tx.w'\n      responses:\n        '201':\n          description: Null response\n  '/transaction':\n    post:\n      summary: Create a single transaction with a list of credit entries and debit entries\n      operationId: createTransaction\n      requestBody:\n        description: Transaction in encoded format to add to the blockchain\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Transaction' \n      tags:\n        - transactions\n      security:\n        - tx_auth:\n            - 'tx.r'\n            - 'tx.w'\n      responses:\n        '201':\n          description: Null response\n    \n  '/transaction/{txId}':\n    get:\n      summary: Info for a specific transaction\n      operationId: getTransactionById\n      tags:\n        - txs\n      parameters:\n        - name: txId\n          in: path\n          required: true\n          description: The id of the transaction to retrieve\n          schema:\n            type: string\n      security:\n        - petstore_auth:\n            - 'tx.r'\n      responses:\n        '200':\n          description: Expected response to a valid request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Transaction'\n              example:\n                id: 1\n                name: Jessica Right\n                tag: pet\ncomponents:\n  securitySchemes:\n    tx_auth:\n      type: oauth2\n      description: This API uses OAuth 2 with the client credential grant flow.\n      flows:\n        clientCredentials:\n          tokenUrl: 'https://localhost:6882/token'\n          scopes:\n            'tx.r': query txs\n            'tx.w': create tx\n  schemas:\n    Transaction:\n      properties:\n        currency: \n          type: string\n          enum: [taiji]\n        d:\n          type: array\n          items: \n            $ref: '#/components/schemas/LedgerEntry'\n        c:\n          type: array\n          items: \n            $ref: '#/components/schemas/LedgerEntry'\n    LedgerEntry:\n      properties:\n        address: \n          type: string\n        signedEntry:\n          type: string\n",
			"canonicalURL": "/github.com/networknt/model-config@3fea561d7982c217c1d5d35c1193eac78a7fdcef/-/blob/rest/openapi/partner-server/openapi.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/networknt/model-config/blob/3fea561d7982c217c1d5d35c1193eac78a7fdcef/rest/openapi/partner-server/openapi.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "parse: parse spec: parse operations: path \"/transaction/{txId}\": at 1:1192: get: operation \"getTransactionById\": at 1:1199: security: unknown security schema \"petstore_auth\""
}