{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/dyte-in/docs"
		},
		"file": {
			"name": "v1.yaml",
			"size": 0,
			"path": "static/api/v1.yaml",
			"byteSize": 95047,
			"content": "openapi: 3.0.0\ninfo:\n  version: 0.1.0\n  title: Dyte Rest API\nservers:\n  - url: \"https://api.cluster.dyte.in/v1/\"\n    description: Production server\npaths:\n  \"/organizations/{organizationId}/stats\":\n    summary: Get stats\n    description: Get all stats\n    get:\n      summary: Get all stats\n      tags:\n        - Stats\n      description: \u003e\n        Get stats for the current organization like total minutes, total sessions and\n        stats for each session\n      operationId: getOrgStats\n      parameters:\n        - name: organizationId\n          in: path\n          description: ID of organization\n          required: true\n          schema:\n            type: string\n            format: uuid\n        - name: startTime\n          in: query\n          description: Get stats for rooms that were created only between startTime and endTime\n          schema:\n            type: string\n            format: date-time\n        - name: endTime\n          in: query\n          description: Get stats for rooms that were created only between startTime and endTime\n          schema:\n            type: string\n            format: date-time\n      responses:\n        \"200\":\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/GetStatsResponseSchema\"\n              example: |\n                {\n                  \"success\": true,\n                  \"totalMinutes\": 0,\n                  \"totalSessions\": 1,\n                  \"totalRecordingMinutes\": 0,\n                  \"dayStats\": [{\n                    \"day\": \"2021-03-21T00:00:00.000Z\",\n                    \"totalMinutes\": 0,\n                    \"totalSessions\": 1,\n                    \"totalRecordingMinutes\": 0\n                  }]\n                }\n        \"422\":\n          description: Invalid Org ID supplied\n      security:\n        - api_key: []\n  \"/organizations/{organizationId}/meetings/{meetingId}/analytics\":\n    summary: Get meeting analytics\n    description: Get analytics (peer events) for a meeting\n    get:\n      summary: Get analytics (peer events) for a meeting\n      tags:\n        - Stats\n      description: \u003e\n        Get analytics for a meeting, i.e, the list of peer events (joining and leaving), grouped by client specific IDs of each peer\n      operationId: getMeetingAnalytics\n      parameters:\n        - name: organizationId\n          in: path\n          description: ID of organization\n          required: true\n          schema:\n            type: string\n            format: uuid\n        - name: meetingId\n          in: path\n          description: ID of meeting\n          required: true\n          schema:\n            type: string\n            format: uuid\n        - name: startTime\n          in: query\n          description: Get peer events only between startTime and endTime\n          schema:\n            type: string\n            format: date-time\n        - name: endTime\n          in: query\n          description: Get peer events only between startTime and endTime\n          schema:\n            type: string\n            format: date-time\n        - name: clientSpecificId\n          in: query\n          description: Get peer events only for client with the specified clientSpecificId\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/GetStatsResponseSchema\"\n              example: |\n                {\n                  \"success\": true,\n                  \"analytics\": {\n                      \"client-1\": {\n                          \"events\": [\n                              {\n                                  \"event\": \"PEER_JOINING\",\n                                  \"time\": \"2021-08-17T17:20:59.182Z\",\n                                  \"details\": {}\n                              },\n                              {\n                                  \"event\": \"PEER_LEAVING\",\n                                  \"time\": \"2021-08-17T17:27:03.570Z\",\n                                  \"details\": {\n                                      \"minutesConsumed\": 6.073133333333334\n                                  }\n                              }\n                          ],\n                          \"totalMinutes\": 6.073133333333334\n                      },\n                      \"client-2\": {\n                          \"events\": [\n                              {\n                                  \"event\": \"PEER_JOINING\",\n                                  \"time\": \"2021-08-17T17:25:54.568Z\",\n                                  \"details\": {}\n                              },\n                              {\n                                  \"event\": \"PEER_LEAVING\",\n                                  \"time\": \"2021-08-17T17:26:22.618Z\",\n                                  \"details\": {\n                                      \"minutesConsumed\": 0.4675\n                                  }\n                              },\n                              {\n                                  \"event\": \"PEER_JOINING\",\n                                  \"time\": \"2021-08-17T17:26:39.846Z\",\n                                  \"details\": {}\n                              },\n                              {\n                                  \"event\": \"PEER_LEAVING\",\n                                  \"time\": \"2021-08-17T17:26:52.150Z\",\n                                  \"details\": {\n                                      \"minutesConsumed\": 0.20506666666666667\n                                  }\n                              }\n                          ],\n                          \"totalMinutes\": 0.6725666666666668\n                      },\n                      \"c1\": {\n                          \"events\": [\n                              {\n                                  \"event\": \"PEER_JOINING\",\n                                  \"time\": \"2021-08-24T05:18:05.335Z\",\n                                  \"details\": {}\n                              },\n                              {\n                                  \"event\": \"PEER_LEAVING\",\n                                  \"time\": \"2021-08-24T05:20:30.892Z\",\n                                  \"details\": {\n                                      \"minutesConsumed\": 2.42595\n                                  }\n                              },\n                              {\n                                  \"event\": \"PEER_JOINING\",\n                                  \"time\": \"2021-08-24T05:20:31.943Z\",\n                                  \"details\": {}\n                              },\n                              {\n                                  \"event\": \"PEER_LEAVING\",\n                                  \"time\": \"2021-08-24T05:21:30.834Z\",\n                                  \"details\": {\n                                      \"minutesConsumed\": 0.9815166666666667\n                                  }\n                              },\n                              {\n                                  \"event\": \"PEER_JOINING\",\n                                  \"time\": \"2021-08-24T05:27:34.422Z\",\n                                  \"details\": {}\n                              },\n                              {\n                                  \"event\": \"PEER_LEAVING\",\n                                  \"time\": \"2021-08-24T05:28:32.365Z\",\n                                  \"details\": {\n                                      \"minutesConsumed\": 0.9657166666666667\n                                  }\n                              },\n                              {\n                                  \"event\": \"PEER_JOINING\",\n                                  \"time\": \"2021-08-24T05:28:37.354Z\",\n                                  \"details\": {}\n                              },\n                              {\n                                  \"event\": \"PEER_LEAVING\",\n                                  \"time\": \"2021-08-24T05:30:08.796Z\",\n                                  \"details\": {\n                                      \"minutesConsumed\": 1.5240333333333334\n                                  }\n                              },\n                              {\n                                  \"event\": \"PEER_JOINING\",\n                                  \"time\": \"2021-08-24T05:30:09.532Z\",\n                                  \"details\": {}\n                              },\n                              {\n                                  \"event\": \"PEER_LEAVING\",\n                                  \"time\": \"2021-08-24T05:30:16.164Z\",\n                                  \"details\": {\n                                      \"minutesConsumed\": 0.11053333333333333\n                                  }\n                              }\n                          ],\n                          \"totalMinutes\": 6.007750000000001\n                      },\n                      \"c2\": {\n                          \"events\": [\n                              {\n                                  \"event\": \"PEER_JOINING\",\n                                  \"time\": \"2021-08-24T05:18:47.614Z\",\n                                  \"details\": {}\n                              },\n                              {\n                                  \"event\": \"PEER_LEAVING\",\n                                  \"time\": \"2021-08-24T05:20:30.973Z\",\n                                  \"details\": {\n                                      \"minutesConsumed\": 1.72265\n                                  }\n                              },\n                              {\n                                  \"event\": \"PEER_JOINING\",\n                                  \"time\": \"2021-08-24T05:20:31.890Z\",\n                                  \"details\": {}\n                              },\n                              {\n                                  \"event\": \"PEER_LEAVING\",\n                                  \"time\": \"2021-08-24T05:21:28.266Z\",\n                                  \"details\": {\n                                      \"minutesConsumed\": 0.9396\n                                  }\n                              }\n                          ],\n                          \"totalMinutes\": 2.6622500000000002\n                      }\n                  }\n                }\n      security:\n        - api_key: []\n  \"/organizations/{organizationId}/analytics\":\n    summary: Get Organization Peer analytics\n    description: Get analytics (peer events) across all meetings in the current organization\n    get:\n      summary: Get analytics (peer events) across all meetings in the current organization\n      tags:\n        - Stats\n      description: \u003e\n        Get analytics for all meetings in an org, i.e, the list of peer events (joining and leaving), grouped by client specific IDs of each peer\n      operationId: getOrgAnalytics\n      parameters:\n        - name: organizationId\n          in: path\n          description: ID of organization\n          required: true\n          schema:\n            type: string\n            format: uuid\n        - name: startTime\n          in: query\n          description: Get peer events only between startTime and endTime\n          schema:\n            type: string\n            format: date-time\n        - name: endTime\n          in: query\n          description: Get peer events only between startTime and endTime\n          schema:\n            type: string\n            format: date-time\n        - name: clientSpecificId\n          in: query\n          description: Get peer events only for client with the specified clientSpecificId\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/GetStatsResponseSchema\"\n              example: |\n                {\n                  \"success\": true,\n                  \"analytics\": {\n                      \"client-1\": {\n                          \"events\": [\n                              {\n                                  \"event\": \"PEER_JOINING\",\n                                  \"time\": \"2021-08-17T17:20:59.182Z\",\n                                  \"details\": {}\n                              },\n                              {\n                                  \"event\": \"PEER_LEAVING\",\n                                  \"time\": \"2021-08-17T17:27:03.570Z\",\n                                  \"details\": {\n                                      \"minutesConsumed\": 6.073133333333334\n                                  }\n                              }\n                          ],\n                          \"totalMinutes\": 6.073133333333334\n                      },\n                      \"client-2\": {\n                          \"events\": [\n                              {\n                                  \"event\": \"PEER_JOINING\",\n                                  \"time\": \"2021-08-17T17:25:54.568Z\",\n                                  \"details\": {}\n                              },\n                              {\n                                  \"event\": \"PEER_LEAVING\",\n                                  \"time\": \"2021-08-17T17:26:22.618Z\",\n                                  \"details\": {\n                                      \"minutesConsumed\": 0.4675\n                                  }\n                              },\n                              {\n                                  \"event\": \"PEER_JOINING\",\n                                  \"time\": \"2021-08-17T17:26:39.846Z\",\n                                  \"details\": {}\n                              },\n                              {\n                                  \"event\": \"PEER_LEAVING\",\n                                  \"time\": \"2021-08-17T17:26:52.150Z\",\n                                  \"details\": {\n                                      \"minutesConsumed\": 0.20506666666666667\n                                  }\n                              }\n                          ],\n                          \"totalMinutes\": 0.6725666666666668\n                      },\n                      \"c1\": {\n                          \"events\": [\n                              {\n                                  \"event\": \"PEER_JOINING\",\n                                  \"time\": \"2021-08-24T05:18:05.335Z\",\n                                  \"details\": {}\n                              },\n                              {\n                                  \"event\": \"PEER_LEAVING\",\n                                  \"time\": \"2021-08-24T05:20:30.892Z\",\n                                  \"details\": {\n                                      \"minutesConsumed\": 2.42595\n                                  }\n                              },\n                              {\n                                  \"event\": \"PEER_JOINING\",\n                                  \"time\": \"2021-08-24T05:20:31.943Z\",\n                                  \"details\": {}\n                              },\n                              {\n                                  \"event\": \"PEER_LEAVING\",\n                                  \"time\": \"2021-08-24T05:21:30.834Z\",\n                                  \"details\": {\n                                      \"minutesConsumed\": 0.9815166666666667\n                                  }\n                              },\n                              {\n                                  \"event\": \"PEER_JOINING\",\n                                  \"time\": \"2021-08-24T05:27:34.422Z\",\n                                  \"details\": {}\n                              },\n                              {\n                                  \"event\": \"PEER_LEAVING\",\n                                  \"time\": \"2021-08-24T05:28:32.365Z\",\n                                  \"details\": {\n                                      \"minutesConsumed\": 0.9657166666666667\n                                  }\n                              },\n                              {\n                                  \"event\": \"PEER_JOINING\",\n                                  \"time\": \"2021-08-24T05:28:37.354Z\",\n                                  \"details\": {}\n                              },\n                              {\n                                  \"event\": \"PEER_LEAVING\",\n                                  \"time\": \"2021-08-24T05:30:08.796Z\",\n                                  \"details\": {\n                                      \"minutesConsumed\": 1.5240333333333334\n                                  }\n                              },\n                              {\n                                  \"event\": \"PEER_JOINING\",\n                                  \"time\": \"2021-08-24T05:30:09.532Z\",\n                                  \"details\": {}\n                              },\n                              {\n                                  \"event\": \"PEER_LEAVING\",\n                                  \"time\": \"2021-08-24T05:30:16.164Z\",\n                                  \"details\": {\n                                      \"minutesConsumed\": 0.11053333333333333\n                                  }\n                              }\n                          ],\n                          \"totalMinutes\": 6.007750000000001\n                      },\n                      \"c2\": {\n                          \"events\": [\n                              {\n                                  \"event\": \"PEER_JOINING\",\n                                  \"time\": \"2021-08-24T05:18:47.614Z\",\n                                  \"details\": {}\n                              },\n                              {\n                                  \"event\": \"PEER_LEAVING\",\n                                  \"time\": \"2021-08-24T05:20:30.973Z\",\n                                  \"details\": {\n                                      \"minutesConsumed\": 1.72265\n                                  }\n                              },\n                              {\n                                  \"event\": \"PEER_JOINING\",\n                                  \"time\": \"2021-08-24T05:20:31.890Z\",\n                                  \"details\": {}\n                              },\n                              {\n                                  \"event\": \"PEER_LEAVING\",\n                                  \"time\": \"2021-08-24T05:21:28.266Z\",\n                                  \"details\": {\n                                      \"minutesConsumed\": 0.9396\n                                  }\n                              }\n                          ],\n                          \"totalMinutes\": 2.6622500000000002\n                      }\n                  }\n                }\n      security:\n        - api_key: []\n  \"/organizations/{organizationId}/recordings\":\n    summary: Get recording stats\n    description: Get all recording stats\n    get:\n      summary: Get all recording stats\n      tags:\n        - Stats\n      description: \u003e\n        Get recording stats for the current organization like roomName, status, start time and\n        endtime\n      operationId: getRecordingStats\n      parameters:\n        - name: organizationId\n          in: path\n          description: ID of organization\n          required: true\n          schema:\n            type: string\n            format: uuid\n        - name: startTime\n          in: query\n          description: Get recording stats for recordings that were started only between startTime and endTime\n          schema:\n            type: string\n            format: date-time\n        - name: endTime\n          in: query\n          description: Get recording stats for recordings that were started only between startTime and endTime\n          schema:\n            type: string\n            format: date-time\n        - in: query\n          name: offset\n          schema:\n            type: integer\n          description: \u003e-\n            The number of items to skip before starting to collect the result\n            set\n        - in: query\n          name: limit\n          schema:\n            type: integer\n          description: The numbers of items to return\n      responses:\n        \"200\":\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/RecordingStatsSchema\"\n              example: |\n                {\n                  \"success\": true,\n                  \"message\": \"\",\n                  \"data\": {\n                    \"total\": 1,\n                    \"recordingStats\": [{\n                      \"status\":\"RECORDING\",\n                      \"startedTime\":\"2021-03-23T21:57:59.608Z\",\n                      \"stoppedTime\":null,\n                      \"roomName\":\"onyx-produce\"\n                    }]\n                  }\n                }\n        \"422\":\n          description: Invalid Org ID supplied\n      security:\n        - api_key: []\n  \"/organizations/{organizationId}/rooms\":\n    summary: Get Rooms\n    description: Get all rooms\n    get:\n      summary: Get all rooms\n      tags:\n        - Stats\n      description: |\n        Get rooms for the current organization\n      operationId: getOrgRooms\n      parameters:\n        - name: organizationId\n          in: path\n          description: ID of organization\n          required: true\n          schema:\n            type: string\n            format: uuid\n        - name: startTime\n          in: query\n          description: Get rooms that were created only between startTime and endTime\n          schema:\n            type: string\n            format: date-time\n        - name: endTime\n          in: query\n          description: Get rooms that were created only between startTime and endTime\n          schema:\n            type: string\n            format: date-time\n        - in: query\n          name: offset\n          schema:\n            type: integer\n          description: \u003e-\n            The number of items to skip before starting to collect the result\n            set\n        - in: query\n          name: limit\n          schema:\n            type: integer\n          description: The numbers of items to return\n      responses:\n        \"200\":\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/OrgRoomsResponse\"\n              example: |\n                {\n                  \"success\": true,\n                  \"message\": \"\",\n                  \"data\": {\n                    \"total\": 10,\n                    \"rooms\": [{\n                        \"id\": \"1c0a34cd-76cb-48b1-8be0-30afa2831565\",\n                        \"roomUUID\": \"123e4567-e89b-12d3-a456-426614174000\",\n                        \"roomURL\": \"brick-fibula\",\n                        \"roomDisplayTitle\": \"An example meeting\",\n                        \"createdBy\": \"Steve Jobs\",\n                        \"maxUsers\": 10,\n                        \"currentUsers\": 3,\n                        \"minutesConsumed\": 100,\n                        \"createdAt\": \"2021-01-11T15:58:29.266Z\",\n                        \"updatedAt\": \"2021-01-11T15:59:29.266Z\"\n                      }]\n                  }\n                }\n        \"422\":\n          description: Invalid Org ID supplied\n      security:\n        - api_key: []\n  \"/organizations/{organizationId}/meetings/{meetingId}/rooms\":\n    summary: Get meeting rooms\n    description: Get all meeting rooms\n    get:\n      summary: Get all meeting rooms\n      tags:\n        - Stats\n      description: |\n        Get rooms for the current organization meeting\n      operationId: getMeetingRooms\n      parameters:\n        - name: organizationId\n          in: path\n          description: ID of organization\n          required: true\n          schema:\n            type: string\n            format: uuid\n        - name: meetingId\n          in: path\n          description: ID of meeting\n          required: true\n          schema:\n            type: string\n            format: uuid\n      responses:\n        \"200\":\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/OrgMeetingRoomsResponse\"\n              example: |\n                {\n                  \"success\": true,\n                  \"message\": \"\",\n                  \"data\": {\n                    \"rooms\": [{\n                        \"id\": \"1c0a34cd-76cb-48b1-8be0-30afa2831565\",\n                        \"roomUUID\": \"123e4567-e89b-12d3-a456-426614174000\",\n                        \"roomURL\": \"brick-fibula\",\n                        \"roomDisplayTitle\": \"An example meeting\",\n                        \"createdBy\": \"Steve Jobs\",\n                        \"maxUsers\": 10,\n                        \"currentUsers\": 3,\n                        \"minutesConsumed\": 100,\n                        \"createdAt\": \"2021-01-11T15:58:29.266Z\",\n                        \"updatedAt\": \"2021-01-11T15:59:29.266Z\"\n                      }]\n                  }\n                }\n        \"422\":\n          description: Invalid Org ID or Meeting ID supplied\n      security:\n        - api_key: []\n  \"/organizations/{organizationId}/users\":\n    summary: Organization Users\n    description: Organization Users\n    get:\n      summary: Get all users\n      tags:\n        - Team Management\n      description: |\n        Get users for the current organization with their roles in it\n      operationId: getAllOrgUsers\n      parameters:\n        - name: organizationId\n          in: path\n          description: ID of organization\n          required: true\n          schema:\n            type: string\n            format: uuid\n        - in: query\n          name: offset\n          schema:\n            type: integer\n          description: \u003e-\n            The number of items to skip before starting to collect the result\n            set\n        - in: query\n          name: limit\n          schema:\n            type: integer\n          description: The numbers of items to return\n      responses:\n        \"200\":\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/GetUsersResponse\"\n              example: |\n                {\n                  \"success\": true,\n                  \"message\": \"\",\n                  \"data\": {\n                    \"total\": 2,\n                    \"users\": [\n                      {\n                        \"id\": \"1c0a34cd-76cb-48b1-8be0-30afa2831565\",\n                        \"name\": \"Master\",\n                        \"email\": \"dev@dyte.in\",\n                        \"createdAt\": \"2021-01-11T15:58:29.266Z\",\n                        \"role\": \"Owner\"\n                      },\n                      {\n                        \"id\": \"b1633745-4077-47e2-951e-83614ca9a69b\",\n                        \"name\": \"Kushagra Vaish\",\n                        \"email\": \"client-id-2@Kyt-test.dyte.in\",\n                        \"createdAt\": \"2021-01-11T17:40:11.311Z\",\n                        \"role\": \"Client\"\n                      }\n                    ]\n                  }\n                }\n        \"422\":\n          description: Invalid Org ID supplied\n      security:\n        - api_key: []\n  \"/organizations/{organizationId}/user\":\n    summary: Give user access to the current organization\n    post:\n      summary: Give user access to the current organization\n      description: |\n        Give user access to the current organization as owner\n      tags:\n        - Team Management\n      operationId: addOrgUser\n      parameters:\n        - name: organizationId\n          in: path\n          description: ID of organization\n          required: true\n          schema:\n            type: string\n            format: uuid\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/AddOrgUserBody\"\n            example: |\n              {\n                \"email\": \"dev@dyte.in\",\n                \"role\": \"Owner\"\n              }\n      responses:\n        \"200\":\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/APIResponse\"\n              example: |\n                {\n                  \"success\": true,\n                  \"message\": \"\",\n                  \"data\": {}\n                }\n        \"422\":\n          description: Invalid Org ID supplied\n      security:\n        - api_key: []\n  \"/organizations/{organizationId}/meeting\":\n    summary: Create meeting\n    post:\n      summary: Create meeting\n      description: |\n        Create a meeting for the current organization\n      tags:\n        - Meetings\n      operationId: createMeeting\n      parameters:\n        - name: organizationId\n          in: path\n          description: ID of organization\n          required: true\n          schema:\n            type: string\n            format: uuid\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/CreateMeetingRequestBody\"\n            example: |\n              {\n                \"title\": \"Monday Sprint Planning\",\n                \"authorization\":{\n                    \"waitingRoom\":true\n                }\n              }\n      responses:\n        \"200\":\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/CreateMeetingResponse\"\n              example: |\n                {\n                  \"success\": true,\n                  \"message\": \"\",\n                  \"data\": {\n                    \"meeting\": {\n                      \"id\": \"cddfd4a8-d6fb-4d15-be6b-269c6dedfa70\",\n                      \"title\": \"Monday Sprint planning\",\n                      \"roomName\": \"octagonal-trip\",\n                      \"status\": \"LIVE\",\n                      \"createdAt\": \"2021-01-11T17:38:30.697Z\",\n                      \"participants\": []\n                    }\n                  }\n                }\n        \"422\":\n          description: Invalid Org ID supplied\n      security:\n        - api_key: []\n  \"/organizations/{organizationId}/meetings\":\n    summary: Meetings\n    get:\n      summary: Get all meetings\n      description: |\n        Get meetings for that organization\n      tags:\n        - Meetings\n      operationId: getAllMeetings\n      parameters:\n        - name: organizationId\n          in: path\n          description: ID of organization\n          required: true\n          schema:\n            type: string\n            format: uuid\n        - in: query\n          name: offset\n          schema:\n            type: integer\n          description: \u003e-\n            The number of items to skip before starting to collect the result\n            set\n        - in: query\n          name: limit\n          schema:\n            type: integer\n          description: The numbers of items to return\n        - in: query\n          name: search\n          schema:\n            type: string\n          description: Filters meeting with title or room name matching the search term\n        - in: query\n          name: startTime\n          schema:\n            type: string\n            format: date-time\n          description: Filters meeting with meeting created after startTime\n        - in: query\n          name: startTime\n          schema:\n            type: string\n            format: date-time\n          description: Filters meeting with meeting created before endTime\n      responses:\n        \"200\":\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/GetMeetingsResponse\"\n              example: |\n                {\n                  \"success\": true,\n                  \"message\": \"\",\n                  \"data\": {\n                    \"total\": 2,\n                    \"meetings\": [\n                      {\n                        \"id\": \"cddfd4a8-d6fb-4d15-be6b-269c6dedfa70\",\n                        \"title\": \"new meeting\",\n                        \"roomName\": \"octagonal-trip\",\n                        \"status\": \"LIVE\",\n                        \"createdAt\": \"2021-01-11T17:38:30.697Z\"\n                      },\n                      {\n                        \"id\": \"de3c4102-6ff9-4ba7-b98a-53df934ee305\",\n                        \"title\": \"new meeting\",\n                        \"roomName\": \"nonstop-flight\",\n                        \"status\": \"LIVE\",\n                        \"createdAt\": \"2021-01-11T16:31:28.336Z\"\n                      }\n                    ]\n                  }\n                }\n        \"422\":\n          description: Invalid Org ID supplied\n      security:\n        - api_key: []\n  \"/organizations/{organizationId}/meetings/{meetingId}\":\n    summary: Get a meeting using meeting ID\n    get:\n      summary: Get a meeting using meeting ID\n      description: |\n        Get a specific meeting in the current organization\n      tags:\n        - Meetings\n      operationId: getMeeting\n      parameters:\n        - name: organizationId\n          in: path\n          description: ID of organization\n          required: true\n          schema:\n            type: string\n            format: uuid\n        - name: meetingId\n          in: path\n          description: ID for the meeting\n          required: true\n          schema:\n            type: string\n            format: uuid\n      responses:\n        \"200\":\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/GetMeetingResponse\"\n              example: |\n                {\n                  \"success\": true,\n                  \"message\": \"\",\n                  \"data\": {\n                    \"meeting\": {\n                      \"id\": \"cddfd4a8-d6fb-4d15-be6b-269c6dedfa70\",\n                      \"title\": \"new meeting\",\n                      \"roomName\": \"octagonal-trip\",\n                      \"status\": \"LIVE\",\n                      \"createdAt\": \"2021-01-11T17:38:30.697Z\"\n                    }\n                  }\n                }\n        \"422\":\n          description: Invalid Org ID supplied\n      security:\n        - api_key: []\n    put:\n      summary: Update a meeting in the current organization\n      description: |\n        Updates a specific meeting in the current organization\n      tags:\n        - Meetings\n      operationId: updateMeeting\n      parameters:\n        - name: organizationId\n          in: path\n          description: ID of organization\n          required: true\n          schema:\n            type: string\n            format: uuid\n        - name: meetingId\n          in: path\n          description: ID for the meeting\n          required: true\n          schema:\n            type: string\n            format: uuid\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/UpdateMeetingRequestBody\"\n            example: |\n              {\n                \"title\": \"Tuesday Sprint Planning\",\n                \"status\": \"CLOSED\"\n              }\n      responses:\n        \"200\":\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/GetMeetingResponse\"\n              example: |\n                {\n                  \"success\": true,\n                  \"message\": \"meeting updated\",\n                  \"data\": {\n                    \"meeting\": {\n                      \"id\": \"cddfd4a8-d6fb-4d15-be6b-269c6dedfa70\",\n                      \"title\": \"Tuesday Sprint Planning\",\n                      \"roomName\": \"octagonal-trip\",\n                      \"status\": \"Closed\",\n                      \"createdAt\": \"2021-01-11T17:38:30.697Z\"\n                    }\n                  }\n                }\n        \"422\":\n          description: Invalid Org ID supplied\n      security:\n        - api_key: []\n  \"/organizations/{organizationId}/meetings/{meetingId}/participant\":\n    summary: Add a participant\n    post:\n      summary: Add a particpant\n      description: |\n        Add a particpant for a specific meeting\n      tags:\n        - Meetings\n      operationId: addParticipant\n      parameters:\n        - name: organizationId\n          in: path\n          description: ID of organization\n          required: true\n          schema:\n            type: string\n            format: uuid\n        - name: meetingId\n          in: path\n          description: ID for the meeting\n          required: true\n          schema:\n            type: string\n            format: uuid\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/AddParticipantBody\"\n      responses:\n        \"200\":\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/AddParticipantResponse\"\n              example: |\n                {\n                  \"success\":true,\n                  \"message\":\"\",\n                  \"data\": {\n                    \"authResponse\": {\n                      \"userAdded\": true,\n                      \"authToken\": \"eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6ImFmNjIzMjhiLTMxYjgtNDNkZi1iOTU4LTk2NzhlOTQ4ZWYwYSIsImxvZ2dlZEluIjp0cnVlLCJpYXQiOjE2MTAzMjA3OTgsImV4cCI6MTYxMDQwNzE5OH0.cQ9WsmDpKy4FRE7i7is4iDVH5ObphHq-C2CqBkomlFl9gGMACrbDs9J35uvrRk8Pv2CT-fqr1tVGrhcEDMKKWae-ugML1D-Cq64oRXqTb2Lk2RRQIGSWXFRe3264GOVL38l61XVltDSKh7cRTCuds-MfT1vCd9SYi-VDA328xVGWPPk22hM7MDvUnPmZaKv0ngEJjj0Z0TrBAaAXZKEnLtjTy06uut6Fi57qOdKr400U3pCCn55sGVDJusQsrqF4oBizRNMcrjeikGbDZghUMn_DiSIZ_Dk7JIXK6lGRqJKCrYwwe7WUJmjXEnFTdFIXYQLYODhQcvvy0P39vwPqBA\"\n                    }\n                  }\n                }\n        \"422\":\n          description: Invalid Org ID supplied\n      security:\n        - api_key: []\n  ? \"/organizations/{organizationId}/meetings/{meetingId}/participant/{participantId}\"\n  : summary: participant\n    delete:\n      summary: Delete a particpant\n      description: |\n        Delete a particpant for a specific meeting\n      tags:\n        - Meetings\n      operationId: deleteParticipant\n      parameters:\n        - name: organizationId\n          in: path\n          description: ID of organization\n          required: true\n          schema:\n            type: string\n            format: uuid\n        - name: meetingId\n          in: path\n          description: ID for the meeting\n          required: true\n          schema:\n            type: string\n            format: uuid\n        - name: participantId\n          in: path\n          description: ID for the participant\n          required: true\n          schema:\n            type: string\n            format: uuid\n      responses:\n        \"200\":\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/APIResponse\"\n              example: |\n                {\n                  \"success\":true,\n                  \"message\":\"participant deleted\",\n                }\n        \"422\":\n          description: Invalid Org ID supplied\n      security:\n        - api_key: []\n  \"/organizations/{organizationId}/meetings/{meetingId}/participants\":\n    summary: Add a participant\n    get:\n      summary: Get All Participant\n      description: |\n        Get all particpants for a specific meeting\n      tags:\n        - Meetings\n      operationId: getAllParticipants\n      parameters:\n        - name: organizationId\n          in: path\n          description: ID of organization\n          required: true\n          schema:\n            type: string\n            format: uuid\n        - name: meetingId\n          in: path\n          description: ID for the meeting\n          required: true\n          schema:\n            type: string\n            format: uuid\n        - in: query\n          name: offset\n          schema:\n            type: integer\n          description: \u003e-\n            The number of items to skip before starting to collect the result\n            set\n        - in: query\n          name: limit\n          schema:\n            type: integer\n          description: The numbers of items to return\n      responses:\n        \"200\":\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/GetParticipantsResponse\"\n              example: |\n                {\n                  \"success\": true,\n                  \"message\": \"\",\n                  \"data\": {\n                    \"total\": 1,\n                    \"participants\": [\n                      {\n                        \"id\": \"b1633745-4077-47e2-951e-83614ca9a69b\",\n                        \"name\": \"Kushagra Vaish\",\n                        \"picture\": null,\n                        \"email\": \"client-id-2@Kyt-test.dyte.in\",\n                        \"createdAt\": \"2021-01-11T17:40:11.337Z\"\n                      }\n                    ]\n                  }\n                }\n        \"422\":\n          description: Invalid Org ID supplied\n      security:\n        - api_key: []\n  \"/organizations/{organizationId}/preset\":\n    summary: Add a preset\n    post:\n      summary: Add a preset\n      description: |\n        Add a preset for the current organization\n      tags:\n        - Presets\n      operationId: addPreset\n      parameters:\n        - name: organizationId\n          in: path\n          description: ID of organization\n          required: true\n          schema:\n            type: string\n            format: uuid\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/CreatePresetRequestBody\"\n      responses:\n        \"200\":\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/APIResponse\"\n              example: |\n                {\n                  \"success\": true,\n                  \"message\": \"\",\n                  \"data\": {\n                    \"preset\": {\n                      \"name\": \"preset_teacher\",\n                      \"description\": \"Preset for teachers\",\n                      \"s3URL\": \"https://dyte-uploads.s3.ap-south-1.amazonaws.com/b0021c1e-d96e-45ca-8c87-021921c69ca1/preset_teacher.json\",\n                      \"organization\": {\n                        \"id\": \"b0021c1e-d96e-45ca-8c87-021921c69ca1\",\n                        \"name\": \"test\",\n                        \"description\": \"Testing account\"\n                      },\n                      \"id\": \"3dfe526a-f7e1-446c-b462-0105513cd532\"\n                    }\n                  }\n                }\n        \"422\":\n          description: Invalid Org ID supplied\n      security:\n        - api_key: []\n  \"/organizations/{organizationId}/presets\":\n    summary: Get all presets\n    get:\n      summary: Get all presets\n      description: |\n        Get all presets for the current organization\n      tags:\n        - Presets\n      operationId: getAllPresets\n      parameters:\n        - name: organizationId\n          in: path\n          description: ID of organization\n          required: true\n          schema:\n            type: string\n            format: uuid\n        - in: query\n          name: offset\n          schema:\n            type: integer\n          description: \u003e-\n            The number of items to skip before starting to collect the result\n            set\n        - in: query\n          name: limit\n          schema:\n            type: integer\n          description: The numbers of items to return\n      responses:\n        \"200\":\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/APIResponse\"\n              example: |\n                {\n                  \"success\": true,\n                  \"message\": \"\",\n                  \"data\": {\n                    \"total\": 7,\n                    \"presets\": [\n                      {\n                        \"id\": \"3dfe526a-f7e1-446c-b462-0105513cd532\",\n                        \"name\": \"preset_teacher\",\n                        \"description\": \"Preset for teachers\",\n                        \"s3URL\": \"https://dyte-uploads.s3.ap-south-1.amazonaws.com/b0021c1e-d96e-45ca-8c87-021921c69ca1/preset_teacher.json\"\n                      },\n                      {\n                        \"id\": \"3dfe526a-f7e1-446c-b462-0105513cd532\",\n                        \"name\": \"preset_student\",\n                        \"description\": \"Preset for students\",\n                        \"s3URL\": \"https://dyte-uploads.s3.ap-south-1.amazonaws.com/b0021c1e-d96e-45ca-8c87-021921c69ca1/preset_teacher.json\"\n                      }\n                    ]\n                  }\n                }\n        \"422\":\n          description: Invalid Org ID supplied\n      security:\n        - api_key: []\n  \"/organizations/{organizationId}/preset-role\":\n    summary: Add a role\n    post:\n      summary: Add a role\n      description: |\n        Add a role for the current organization\n      tags:\n        - Roles\n      operationId: addRole\n      parameters:\n        - name: organizationId\n          in: path\n          description: ID of organization\n          required: true\n          schema:\n            type: string\n            format: uuid\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/CreatePresetRoleRequestBody\"\n      responses:\n        \"200\":\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/APIResponse\"\n              example: |\n                {\n                  \"success\": true,\n                  \"message\": \"\",\n                  \"data\": {\n                    \"role\": {\n                      \"name\": \"hidden-student\",\n                      \"description\": \"Hidden student\",\n                      \"s3URL\": \"https://dyte-configs.s3.ap-south-1.amazonaws.com/4dd942ea-80d1-4cf8-ad34-9eb058f231fe/roles/preset_teacher.json\",\n                      \"id\": \"ca95d742-3326-4807-80f8-a8b9c54cb38d\"\n                    },\n                    \"override\": false\n                  }\n                }\n        \"422\":\n          description: Invalid Org ID supplied\n      security:\n        - api_key: []\n  \"/organizations/{organizationId}/preset-roles\":\n    summary: Get all roles\n    get:\n      summary: Get all roles\n      description: |\n        Get all roles for the current organization\n      tags:\n        - Roles\n      operationId: getRoles\n      parameters:\n        - name: organizationId\n          in: path\n          description: ID of organization\n          required: true\n          schema:\n            type: string\n            format: uuid\n        - in: query\n          name: offset\n          schema:\n            type: integer\n          description: \u003e-\n            The number of items to skip before starting to collect the result\n            set\n        - in: query\n          name: limit\n          schema:\n            type: integer\n          description: The numbers of items to return\n      responses:\n        \"200\":\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/APIResponse\"\n              example: |\n                {\n                  \"success\": true,\n                  \"message\": \"\",\n                  \"data\": {\n                    \"total\": 2,\n                    \"roles\": [\n                      {\n                        \"id\": \"6483d3be-ca80-4b95-b7fd-9cdc32188501\",\n                        \"name\": \"host\",\n                        \"s3URL\": \"https://dyte-configs.s3.ap-south-1.amazonaws.com/default/roles/host.json\",\n                        \"description\": \"Default host role\"\n                      },\n                      {\n                        \"id\": \"656597ee-c71a-4b52-9f8a-2f19faf85c47\",\n                        \"name\": \"participant\",\n                        \"s3URL\": \"https://dyte-configs.s3.ap-south-1.amazonaws.com/default/roles/participant.json\",\n                        \"description\": \"Default participant role\"\n                      }\n                    ]\n                  }\n                }\n        \"422\":\n          description: Invalid Org ID supplied\n      security:\n        - api_key: []\n  \"/organizations/{organizationId}/meetings/{meetingId}/recording\":\n    summary: Start a recording for a meeting ID\n    post:\n      summary: Start a recording for a meeting ID\n      description: |\n        Start a recording for a given meeting using its ID\n      tags:\n        - Recording\n      operationId: startRecording\n      parameters:\n        - name: organizationId\n          in: path\n          description: ID of organization\n          required: true\n          schema:\n            type: string\n            format: uuid\n        - name: meetingId\n          in: path\n          description: ID for the meeting\n          required: true\n          schema:\n            type: string\n            format: uuid\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/StartRecordingRequestBody\"\n      responses:\n        \"200\":\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/APIResponse\"\n              example: |\n                {\n                  \"data\": {\n                    \"recording\": {\n                      \"status\": \"INVOKED\",\n                      \"downloadUrlExpiry\": null,\n                      \"downloadUrl\": null,\n                      \"startedTime\": null,\n                      \"stoppedTime\": null,\n                      \"id\": \"12352ba4-e41c-450e-a467-0ca3229225a3\",\n                      \"outputFileName\": \"room_name_1612521000945.mp4\"\n                    }\n                  },\n                  \"message\": \"Recording started\",\n                  \"success\": true\n                }\n        \"422\":\n          description: Invalid Org ID supplied\n      security:\n        - api_key: []\n  \"/organizations/{organizationId}/rooms/{roomName}/recording\":\n    summary: Start a recording with room name\n    post:\n      summary: Start a recording with room name\n      description: |\n        Start a recording for a given meeting using a room name\n      tags:\n        - Recording\n      operationId: startRecordingWithRoomName\n      parameters:\n        - name: organizationId\n          in: path\n          description: ID of organization\n          required: true\n          schema:\n            type: string\n            format: uuid\n        - name: roomName\n          in: path\n          description: room name for the meeting\n          required: true\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/StartRecordingRequestBody\"\n      responses:\n        \"200\":\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/APIResponse\"\n              example: |\n                {\n                  \"data\": {\n                    \"recording\": {\n                      \"status\": \"INVOKED\",\n                      \"downloadUrlExpiry\": null,\n                      \"downloadUrl\": null,\n                      \"startedTime\": null,\n                      \"stoppedTime\": null,\n                      \"id\": \"12352ba4-e41c-450e-a467-0ca3229225a3\",\n                      \"outputFileName\": \"room_name_1612521000945.mp4\"\n                    }\n                  },\n                  \"message\": \"Recording started\",\n                  \"success\": true\n                }\n        \"422\":\n          description: Invalid Org ID supplied\n      security:\n        - api_key: []\n  \"/organizations/{organizationId}/meetings/{meetingId}/recordings\":\n    summary: Get all recordings\n    get:\n      summary: Get all recordings\n      description: |\n        Get all recordings for a given meeting\n      tags:\n        - Recording\n      operationId: getAllRecordings\n      parameters:\n        - name: organizationId\n          in: path\n          description: ID of organization\n          required: true\n          schema:\n            type: string\n            format: uuid\n        - name: meetingId\n          in: path\n          description: ID for the meeting\n          required: true\n          schema:\n            type: string\n            format: uuid\n        - in: query\n          name: offset\n          schema:\n            type: integer\n          description: \u003e-\n            The number of items to skip before starting to collect the result\n            set\n        - in: query\n          name: limit\n          schema:\n            type: integer\n          description: The numbers of items to return\n      responses:\n        \"200\":\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/APIResponse\"\n              example: |\n                {\n                  \"message\": \"\",\n                  \"success\": true,\n                  \"data\": {\n                    \"total\": 2,\n                    \"recordings\": [\n                      {\n                        \"id\": \"fbf69dd8-768f-4b1b-949f-0463dc96ed98\",\n                        \"downloadUrlExpiry\": \"2021-01-21T21:23:34.480Z\",\n                        \"downloadUrl\": \"https://dyte-recordings.s3.ap-south-1.amazonaws.com/some_url\",\n                        \"status\": \"UPLOADED\",\n                        \"startedTime\": \"2021-01-21T19:22:27.539Z\",\n                        \"stoppedTime\": \"2021-01-21T19:23:34.490Z\"\n                      },\n                      {\n                        \"id\": \"37ea3784-97e6-41f8-b4fa-efc7c0656294\",\n                        \"downloadUrlExpiry\": null,\n                        \"downloadUrl\": null,\n                        \"status\": \"RECORDING\",\n                        \"startedTime\": \"2021-01-21T19:33:07.283Z\",\n                        \"stoppedTime\": null\n                      }\n                    ]\n                  }\n                }\n        \"422\":\n          description: Invalid Org ID or Meeting ID supplied\n      security:\n        - api_key: []\n  ? \"/organizations/{organizationId}/meetings/{meetingId}/recordings/{recordingId}\"\n  : summary: Get/update a specific recording\n    get:\n      summary: Get recording\n      description: |\n        Get a recording for a given meeting\n      tags:\n        - Recording\n      operationId: getRecording\n      parameters:\n        - name: organizationId\n          in: path\n          description: ID of organization\n          required: true\n          schema:\n            type: string\n            format: uuid\n        - name: meetingId\n          in: path\n          description: ID for the meeting\n          required: true\n          schema:\n            type: string\n            format: uuid\n        - name: recordingId\n          in: path\n          description: ID for the recording\n          required: true\n          schema:\n            type: string\n            format: uuid\n      responses:\n        \"200\":\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/APIResponse\"\n              example: |\n                {\n                  \"message\": \"\",\n                  \"success\": true,\n                  \"data\": {\n                    \"recording\": {\n                      \"id\": \"fbf69dd8-768f-4b1b-949f-0463dc96ed98\",\n                      \"downloadUrlExpiry\": null,\n                      \"downloadUrl\": null,\n                      \"status\": \"UPLOADING\",\n                      \"startedTime\": \"2021-01-21T19:22:27.539Z\",\n                      \"stoppedTime\": \"2021-01-21T19:23:34.490Z\"\n                    }\n                  }\n                }\n        \"422\":\n          description: Invalid Org ID or Meeting ID supplied\n      security:\n        - api_key: []\n    put:\n      summary: Update/Stop recording\n      description: |\n        Update/Stop a recording for a given meeting\n      tags:\n        - Recording\n      operationId: updateRecording\n      parameters:\n        - name: organizationId\n          in: path\n          description: ID of organization\n          required: true\n          schema:\n            type: string\n            format: uuid\n        - name: meetingId\n          in: path\n          description: ID for the meeting\n          required: true\n          schema:\n            type: string\n            format: uuid\n        - name: recordingId\n          in: path\n          description: ID for the meeting\n          required: true\n          schema:\n            type: string\n            format: uuid\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/UpdateRecordingRequestBody\"\n      responses:\n        \"200\":\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/APIResponse\"\n              example: |\n                {\n                  \"data\": {\n                    \"recording\": {\n                      \"id\": \"12352ba4-e41c-450e-a467-0ca3229225a3\",\n                      \"downloadUrlExpiry\": null,\n                      \"downloadUrl\": null,\n                      \"status\": \"UPLOADING\",\n                      \"startedTime\": \"2021-01-21T20:25:36.194Z\",\n                      \"stoppedTime\": \"2021-01-21T20:27:23.180Z\"\n                    }\n                  },\n                  \"message\": \"Recording stopped\",\n                  \"success\": true\n                }\n        \"422\":\n          description: Invalid Org ID supplied\n      security:\n        - api_key: []\n  \"/organizations/{organizationId}/rooms/{roomName}/recordings/{recordingId}\":\n    summary: Update a specific recording given a room name\n    put:\n      summary: Update/Stop recording\n      description: |\n        Update/Stop a recording for a given meeting using a room name\n      tags:\n        - Recording\n      operationId: updateRecordingWithRoomName\n      parameters:\n        - name: organizationId\n          in: path\n          description: ID of organization\n          required: true\n          schema:\n            type: string\n            format: uuid\n        - name: roomName\n          in: path\n          description: room name for the meeting\n          required: true\n          schema:\n            type: string\n        - name: recordingId\n          in: path\n          description: ID for the meeting\n          required: true\n          schema:\n            type: string\n            format: uuid\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/UpdateRecordingRequestBody\"\n      responses:\n        \"200\":\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/APIResponse\"\n              example: |\n                {\n                  \"data\": {\n                    \"recording\": {\n                      \"id\": \"12352ba4-e41c-450e-a467-0ca3229225a3\",\n                      \"downloadUrlExpiry\": null,\n                      \"downloadUrl\": null,\n                      \"status\": \"UPLOADING\",\n                      \"startedTime\": \"2021-01-21T20:25:36.194Z\",\n                      \"stoppedTime\": \"2021-01-21T20:27:23.180Z\"\n                    }\n                  },\n                  \"message\": \"Recording stopped\",\n                  \"success\": true\n                }\n        \"422\":\n          description: Invalid Org ID supplied\n      security:\n        - api_key: []\n  \"/organizations/{organizationId}/rooms/{roomName}/active-recording\":\n    summary: Get active recordings for a room\n    get:\n      summary: Get all Get active recordings for a room\n      description: |\n        Get all Get active recordings for a room\n      tags:\n        - Recording\n      operationId: getActiveRecording\n      parameters:\n        - name: organizationId\n          in: path\n          description: ID of organization\n          required: true\n          schema:\n            type: string\n            format: uuid\n        - name: roomName\n          in: path\n          description: room name of the meeting\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/APIResponse\"\n              example: |\n                {\n                  \"success\":true,\n                  \"data\":{\n                    \"recording\":{\n                        \"status\":\"INVOKED\",\n                        \"outputFileName\":\"aboard-saw_1620021373339.mp4\",\n                        \"downloadUrlExpiry\":null,\n                        \"roomUUID\":null,\n                        \"downloadUrl\":null,\n                        \"errMessage\":null,\n                        \"startedTime\":null,\n                        \"stoppedTime\":null,\n                        \"id\":\"290e505d-75ed-406b-8792-fd97cad7dbaf\"\n                    }\n                  }\n                }\n        \"422\":\n          description: Invalid Org ID supplied\n      security:\n        - api_key: []\n  \"/organizations/{organizationId}/webhook\":\n    summary: Add a webhook\n    post:\n      summary: Add a webhook\n      description: |\n        Add a webhook for the current organization\n      tags:\n        - Webhooks\n      operationId: addWebHook\n      parameters:\n        - name: organizationId\n          in: path\n          description: ID of organization\n          required: true\n          schema:\n            type: string\n            format: uuid\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/WebhookRequestBody\"\n      responses:\n        \"200\":\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/APIResponse\"\n              example: |\n                {\n                  \"success\": true,\n                  \"data\": {\n                      \"webhook\": {\n                        \"id\": \"a3044f50-a805-457d-a237-b243d1381b1c\",\n                        \"name\": \"myWebhook1\",\n                        \"url\": \"https://myOrganization.com/webhook\",\n                        \"events\": [\n                            \"meeting.started\",\n                            \"meeting.ended\",\n                            \"meeting.participantJoined\",\n                            \"meeting.participantLeft\",\n                            \"recording.statusUpdate\"\n                        ],\n                        \"organizationId\": \"a784edbb-d96d-4fb0-98c7-8f5c8e4c6b9d\"\n                      }\n                    }\n                }\n        \"422\":\n          description: Invalid Org ID supplied\n      security:\n        - api_key: []\n  \"/organizations/{organizationId}/webhooks\":\n    summary: Get all webhooks\n    get:\n      summary: Get all webhooks\n      description: |\n        Get all webhooks for the current organization\n      tags:\n        - Webhooks\n      operationId: getWebhooks\n      parameters:\n        - name: organizationId\n          in: path\n          description: ID of organization\n          required: true\n          schema:\n            type: string\n            format: uuid\n      responses:\n        \"200\":\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/APIResponse\"\n              example: |\n                {\n                  \"success\":true,\n                  \"data\":{\n                    \"webhooks\":[\n                      {\n                        \"id\":\"a3044f50-a805-457d-a237-b243d1381b1c\",\n                        \"name\":\"myWebhook1\",\n                        \"url\":\"https://myOrganization.com/webhook\",\n                        \"events\":[\n                          \"meeting.started\",\n                          \"meeting.ended\",\n                          \"meeting.participantJoined\",\n                          \"meeting.participantLeft\",\n                          \"recording.statusUpdate\"\n                        ],\n                        \"organizationId\":\"a784edbb-d96d-4fb0-98c7-8f5c8e4c6b9d\"\n                      },\n                      {\n                        \"id\":\"4ef7fb10-d76b-42fa-8158-60ae44f1cfe3\",\n                        \"name\":\"myWebhook2\",\n                        \"url\":\"https://myOrganization.com/webhook2\",\n                        \"events\":[\n                          \"meeting.started\",\n                          \"meeting.ended\",\n                          \"recording.statusUpdate\"\n                        ],\n                        \"organizationId\":\"a784edbb-d96d-4fb0-98c7-8f5c8e4c6b9d\"\n                      }\n                    ]\n                  }\n                }\n        \"422\":\n          description: Invalid Org ID supplied\n      security:\n        - api_key: []\n  \"/organizations/{organizationId}/webhooks/{webhookId}\":\n    summary: webhook\n    get:\n      summary: Get webhook\n      description: |\n        Get a webhook for the current organization\n      tags:\n        - Webhooks\n      operationId: getWebhook\n      parameters:\n        - name: organizationId\n          in: path\n          description: ID of organization\n          required: true\n          schema:\n            type: string\n            format: uuid\n        - name: webhookId\n          in: path\n          description: ID of webhook\n          required: true\n          schema:\n            type: string\n            format: uuid\n      responses:\n        \"200\":\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/APIResponse\"\n              example: |\n                {\n                  \"success\":true,\n                  \"data\":{\n                    \"webhook\":{\n                      \"id\":\"a3044f50-a805-457d-a237-b243d1381b1c\",\n                      \"name\":\"myWebhook1\",\n                      \"url\":\"https://myOrganization.com/webhook\",\n                      \"events\":[\n                        \"meeting.started\",\n                        \"meeting.ended\",\n                        \"meeting.participantJoined\",\n                        \"meeting.participantLeft\",\n                        \"recording.statusUpdate\"\n                      ],\n                      \"organizationId\":\"a784edbb-d96d-4fb0-98c7-8f5c8e4c6b9d\"\n                    }\n                  }\n                }\n        \"422\":\n          description: Invalid Org ID supplied\n      security:\n        - api_key: []\n    put:\n      summary: Update webhook\n      description: |\n        Update a webhook for the current organization\n      tags:\n        - Webhooks\n      operationId: deleteWebhook\n      parameters:\n        - name: organizationId\n          in: path\n          description: ID of organization\n          required: true\n          schema:\n            type: string\n            format: uuid\n        - name: webhookId\n          in: path\n          description: ID of webhook\n          required: true\n          schema:\n            type: string\n            format: uuid\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/WebhookRequestBody\"\n      responses:\n        \"200\":\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/APIResponse\"\n              example: |\n                {\n                  \"success\":true,\n                  \"data\":{\n                    \"webhook\":{\n                      \"id\":\"a3044f50-a805-457d-a237-b243d1381b1c\",\n                      \"name\":\"myWebhook1\",\n                      \"url\":\"https://myOrganization.com/webhook\",\n                      \"events\":[\n                        \"meeting.started\",\n                        \"meeting.ended\",\n                        \"meeting.participantJoined\",\n                        \"meeting.participantLeft\",\n                        \"recording.statusUpdate\"\n                      ],\n                      \"organizationId\":\"a784edbb-d96d-4fb0-98c7-8f5c8e4c6b9d\"\n                    }\n                  }\n                }\n        \"422\":\n          description: Invalid Org ID supplied\n      security:\n        - api_key: []\n    delete:\n      summary: Delete webhook\n      description: |\n        Delete the specific webhook for the current organization\n      tags:\n        - Webhooks\n      operationId: updateWebhook\n      parameters:\n        - name: organizationId\n          in: path\n          description: ID of organization\n          required: true\n          schema:\n            type: string\n            format: uuid\n        - name: webhookId\n          in: path\n          description: ID of webhook\n          required: true\n          schema:\n            type: string\n            format: uuid\n      responses:\n        \"200\":\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/APIResponse\"\n              example: |\n                {\n                  \"success\":true,\n                  \"data\":{\n                    \"webhook\":{\n                      \"id\":\"a3044f50-a805-457d-a237-b243d1381b1c\"\n                    }\n                  }\n                }\n        \"422\":\n          description: Invalid Org ID supplied\n      security:\n        - api_key: []\n  \"/organizations/{organizationId}/webhooks/{webhookId}/logs\":\n    summary: webhook\n    get:\n      summary: Get all logs for requests sent out for a specific webhook\n      description: |\n        Get all logs for requests sent out for a specific webhook\n      tags:\n        - Webhooks\n      operationId: getWebhookLogs\n      parameters:\n        - name: organizationId\n          in: path\n          description: ID of organization\n          required: true\n          schema:\n            type: string\n            format: uuid\n        - name: webhookId\n          in: path\n          description: ID of webhook\n          required: true\n          schema:\n            type: string\n            format: uuid\n        - name: startTime\n          in: query\n          description: Get logs only after startTime\n          required: true\n          schema:\n            type: number\n            format: date-time\n        - name: endTime\n          in: query\n          description: Get logs only before endTime\n          required: true\n          schema:\n            type: number\n            format: date-time\n        - in: query\n          name: offset\n          schema:\n            type: integer\n          description: \u003e-\n            The number of items to skip before starting to collect the result\n            set\n        - in: query\n          name: limit\n          schema:\n            type: integer\n          description: The numbers of items to return\n\n      responses:\n        \"200\":\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/APIResponse\"\n              example: |\n                {\n                  \"success\": true,\n                  \"logs\": [\n                      {\n                          \"webhookId\": \"1ed88ebb-01ee-41b7-9aca-e8fa4955c4fc\",\n                          \"name\": \"nisi do labore reprehenderit\",\n                          \"logId\": \"b251164d-7f05-42a2-a6b9-9338507ef98b\",\n                          \"headers\": {\n                              \"dyte-signature\": \"UlSKQ9/ISi3vcisrfqh1J+vwwoCPLKC0Pz/ecOD57y/vuaMEfY2CdbT9M8sXo1qCb0ySN5XF8NZbokbdX4JjcK8q3txRCfu286H9pwLmPJ29KvBJDZ9ERSPOCbWOx0mnH2bKKTSrtRrOptcR1f6sID+C5HTaP9J9AUj+Nf3HlN9v4qArFfC0UxxSHpodi64i4uD2mwkN4TvWeDAycJlRei4/O1pJz623afYNqMnKEwnDGpRQNoMQ9CNZS1ZB7WZ/QsemwBOvl3JxwjeTiW3za/SDQB5b7BP8aUlQEjVPCklxZB9hV7UQIW9xxGVu7yKwmgcORxoIv6bvCUJmLFEzxw==\"\n                          },\n                          \"payload\": {\n                              \"event\": \"meeting.participantJoined\",\n                              \"meeting\": {\n                                  \"id\": \"5ba742c2-3530-4354-8db9-50c6084ff858\",\n                                  \"title\": \"hello-kitty3\",\n                                  \"status\": \"LIVE\",\n                                  \"roomName\": \"sneaky-meteorology\",\n                                  \"createdAt\": \"2021-04-14T15:55:00.859Z\",\n                                  \"organizedBy\": \"Rishit\"\n                              },\n                              \"participant\": {\n                                  \"peerId\": \"5c516751-e8a4-4f13-9866-1c75dae9d6f9\",\n                                  \"userDisplayName\": \"asd\"\n                              },\n                              \"participants\": [\n                                  {\n                                      \"id\": \"ccba299d-984b-4d98-85de-b63d22e32e78\",\n                                      \"name\": \"asdads\",\n                                      \"email\": \"f65c0d16-bc71-434f-a8cf-10911308801b@anon.dyte.in\",\n                                      \"picture\": null,\n                                      \"createdAt\": \"2021-04-14T15:56:57.863Z\"\n                                  },\n                                  {\n                                      \"id\": \"420b185b-8c60-418b-b572-bc624f3e7a1d\",\n                                      \"name\": \"Rishit Bansal\",\n                                      \"email\": \"8c46c6e2-1998-4e97-ae5a-234c29cacdb3@anon.dyte.in\",\n                                      \"picture\": null,\n                                      \"createdAt\": \"2021-04-14T15:55:49.550Z\"\n                                  },\n                                  {\n                                      \"id\": \"8f3be8db-bcb0-4196-a11a-fa2c5cf2dff3\",\n                                      \"name\": \"9a8d48e8-8a20-4263-a060-8c07838367ad\",\n                                      \"email\": \"recorder@dyte.in\",\n                                      \"picture\": null,\n                                      \"createdAt\": \"2021-04-14T15:57:05.639Z\"\n                                  },\n                                  {\n                                      \"id\": \"f85f275b-b522-424a-90d4-ebffd52b4df9\",\n                                      \"name\": \"asd\",\n                                      \"email\": \"3ad0ae2b-aeaa-4239-88cc-f3e3854c95de@anon.dyte.in\",\n                                      \"picture\": null,\n                                      \"createdAt\": \"2021-08-17T17:18:19.366Z\"\n                                  },\n                                  {\n                                      \"id\": \"ee37e785-114d-4d8d-9279-ca23207ac7b7\",\n                                      \"name\": \"Hello\",\n                                      \"email\": \"client-1@Rishit.dyte.in\",\n                                      \"picture\": null,\n                                      \"createdAt\": \"2021-08-17T17:20:16.968Z\"\n                                  },\n                                  {\n                                      \"id\": \"57ee9918-8958-450b-9b5b-41cf20f63607\",\n                                      \"name\": \"asd\",\n                                      \"email\": \"453b35d4-7660-46c8-8889-9e67f7aefba3@anon.dyte.in\",\n                                      \"picture\": null,\n                                      \"createdAt\": \"2021-08-17T17:24:20.662Z\"\n                                  },\n                                  {\n                                      \"id\": \"0b9d734f-4874-45c0-a31b-d4f877df43ef\",\n                                      \"name\": \"Hello\",\n                                      \"email\": \"client-2@Rishit.dyte.in\",\n                                      \"picture\": null,\n                                      \"createdAt\": \"2021-08-17T17:23:39.410Z\"\n                                  },\n                                  {\n                                      \"id\": \"dc688a2d-2d83-495f-8558-43c349718c9a\",\n                                      \"name\": \"Hello\",\n                                      \"email\": \"client-3@Rishit.dyte.in\",\n                                      \"picture\": null,\n                                      \"createdAt\": \"2021-08-19T05:41:10.206Z\"\n                                  },\n                                  {\n                                      \"id\": \"f09753f0-05b4-46ff-a163-8c31b43931cd\",\n                                      \"name\": \"Hello\",\n                                      \"email\": \"client-4@Rishit.dyte.in\",\n                                      \"picture\": null,\n                                      \"createdAt\": \"2021-08-19T05:43:19.988Z\"\n                                  },\n                                  {\n                                      \"id\": \"ab68e32b-72da-4db6-a20b-09998aba6ff6\",\n                                      \"name\": \"asdasd\",\n                                      \"email\": \"9f4e4dde-77c6-4d7c-9a19-9a4b81e01ef6@anon.dyte.in\",\n                                      \"picture\": null,\n                                      \"createdAt\": \"2021-08-19T05:44:46.342Z\"\n                                  },\n                                  {\n                                      \"id\": \"f403ef02-b162-49ac-b141-b83fad8c3bde\",\n                                      \"name\": \"asd\",\n                                      \"email\": \"e52a830e-0483-4725-bd1a-c7f7d3450ead@anon.dyte.in\",\n                                      \"picture\": null,\n                                      \"createdAt\": \"2021-08-19T05:45:21.364Z\"\n                                  }\n                              ]\n                          },\n                          \"timestamp\": \"2021-08-19T06:37:33.405Z\",\n                          \"statusCode\": 502\n                      },\n                      {\n                          \"webhookId\": \"1ed88ebb-01ee-41b7-9aca-e8fa4955c4fc\",\n                          \"name\": \"nisi do labore reprehenderit\",\n                          \"logId\": \"70e8afa6-248c-4ff8-a6d3-1259bc8158bf\",\n                          \"headers\": {\n                              \"dyte-signature\": \"ornHjWIdsJY7HCbZt7dG7bJv+pdp1NHwxLhZTFQl17j6xFvf7XJEgpiD9jXYrZQTcFdSiTTo/pbXlWoPEn3Z2gmOdf9vMSpN0BCnG+xC+mpnmrAjQJ2EitZndVxeKVk39JM+f0RZXUAl6mwPrmlPetT4PmUJ9B7Gha9sFYY/l7RMH/a8lPufdidkq2GW7gpyDMaB5t+NTKe9aT8WD0vEn9X6YmsHQDie28Su9d65F6b6w6HA1yFbMAUPGcAkzurUDn6Cp8eiPtOp7AsgDqmVv+9oQXUGZhdhaSIzgLyh6aRoYmF2T9l3h3yBu9K6skJPx5toXBdIoil/Lk9WdmTgig==\"\n                          },\n                          \"payload\": {\n                              \"event\": \"meeting.participantLeft\",\n                              \"meeting\": {\n                                  \"id\": \"5ba742c2-3530-4354-8db9-50c6084ff858\",\n                                  \"title\": \"hello-kitty3\",\n                                  \"status\": \"LIVE\",\n                                  \"roomName\": \"sneaky-meteorology\",\n                                  \"createdAt\": \"2021-04-14T15:55:00.859Z\",\n                                  \"organizedBy\": \"Rishit\"\n                              },\n                              \"participant\": {\n                                  \"peerId\": \"5c516751-e8a4-4f13-9866-1c75dae9d6f9\",\n                                  \"userDisplayName\": \"asd\"\n                              },\n                              \"participants\": [\n                                  {\n                                      \"id\": \"ccba299d-984b-4d98-85de-b63d22e32e78\",\n                                      \"name\": \"asdads\",\n                                      \"email\": \"f65c0d16-bc71-434f-a8cf-10911308801b@anon.dyte.in\",\n                                      \"picture\": null,\n                                      \"createdAt\": \"2021-04-14T15:56:57.863Z\"\n                                  },\n                                  {\n                                      \"id\": \"420b185b-8c60-418b-b572-bc624f3e7a1d\",\n                                      \"name\": \"Rishit Bansal\",\n                                      \"email\": \"8c46c6e2-1998-4e97-ae5a-234c29cacdb3@anon.dyte.in\",\n                                      \"picture\": null,\n                                      \"createdAt\": \"2021-04-14T15:55:49.550Z\"\n                                  },\n                                  {\n                                      \"id\": \"8f3be8db-bcb0-4196-a11a-fa2c5cf2dff3\",\n                                      \"name\": \"9a8d48e8-8a20-4263-a060-8c07838367ad\",\n                                      \"email\": \"recorder@dyte.in\",\n                                      \"picture\": null,\n                                      \"createdAt\": \"2021-04-14T15:57:05.639Z\"\n                                  },\n                                  {\n                                      \"id\": \"f85f275b-b522-424a-90d4-ebffd52b4df9\",\n                                      \"name\": \"asd\",\n                                      \"email\": \"3ad0ae2b-aeaa-4239-88cc-f3e3854c95de@anon.dyte.in\",\n                                      \"picture\": null,\n                                      \"createdAt\": \"2021-08-17T17:18:19.366Z\"\n                                  },\n                                  {\n                                      \"id\": \"ee37e785-114d-4d8d-9279-ca23207ac7b7\",\n                                      \"name\": \"Hello\",\n                                      \"email\": \"client-1@Rishit.dyte.in\",\n                                      \"picture\": null,\n                                      \"createdAt\": \"2021-08-17T17:20:16.968Z\"\n                                  },\n                                  {\n                                      \"id\": \"57ee9918-8958-450b-9b5b-41cf20f63607\",\n                                      \"name\": \"asd\",\n                                      \"email\": \"453b35d4-7660-46c8-8889-9e67f7aefba3@anon.dyte.in\",\n                                      \"picture\": null,\n                                      \"createdAt\": \"2021-08-17T17:24:20.662Z\"\n                                  },\n                                  {\n                                      \"id\": \"0b9d734f-4874-45c0-a31b-d4f877df43ef\",\n                                      \"name\": \"Hello\",\n                                      \"email\": \"client-2@Rishit.dyte.in\",\n                                      \"picture\": null,\n                                      \"createdAt\": \"2021-08-17T17:23:39.410Z\"\n                                  },\n                                  {\n                                      \"id\": \"dc688a2d-2d83-495f-8558-43c349718c9a\",\n                                      \"name\": \"Hello\",\n                                      \"email\": \"client-3@Rishit.dyte.in\",\n                                      \"picture\": null,\n                                      \"createdAt\": \"2021-08-19T05:41:10.206Z\"\n                                  },\n                                  {\n                                      \"id\": \"f09753f0-05b4-46ff-a163-8c31b43931cd\",\n                                      \"name\": \"Hello\",\n                                      \"email\": \"client-4@Rishit.dyte.in\",\n                                      \"picture\": null,\n                                      \"createdAt\": \"2021-08-19T05:43:19.988Z\"\n                                  },\n                                  {\n                                      \"id\": \"ab68e32b-72da-4db6-a20b-09998aba6ff6\",\n                                      \"name\": \"asdasd\",\n                                      \"email\": \"9f4e4dde-77c6-4d7c-9a19-9a4b81e01ef6@anon.dyte.in\",\n                                      \"picture\": null,\n                                      \"createdAt\": \"2021-08-19T05:44:46.342Z\"\n                                  },\n                                  {\n                                      \"id\": \"f403ef02-b162-49ac-b141-b83fad8c3bde\",\n                                      \"name\": \"asd\",\n                                      \"email\": \"e52a830e-0483-4725-bd1a-c7f7d3450ead@anon.dyte.in\",\n                                      \"picture\": null,\n                                      \"createdAt\": \"2021-08-19T05:45:21.364Z\"\n                                  }\n                              ]\n                          },\n                          \"timestamp\": \"2021-08-19T06:44:51.774Z\",\n                          \"statusCode\": 200\n                      }\n                  ]\n                }\n      security:\n        - api_key: []\ncomponents:\n  schemas:\n    AddParticipantBody:\n      type: object\n      required:\n        - clientSpecificId\n      properties:\n        clientSpecificId:\n          type: string\n        userDetails:\n          type: object\n          properties:\n            name:\n              type: string\n            picture:\n              type: string\n              format: url\n        presetName:\n          type: string\n        roleName:\n          type: string\n    CreateMeetingRequestBody:\n      type: object\n      properties:\n        title:\n          type: string\n        presetName:\n          type: string\n          description: Preset to be used for all participants of this meeting\n        recordOnStart:\n          type: boolean\n          description: Start recording the meeting as soon as the meeting starts. False by default.\n        authorization:\n          type: object\n          properties:\n            waitingRoom:\n              type: boolean\n              description: Host can accept/reject the participants joining the meeting. False by default.\n            closed:\n              type: boolean\n              description: Invite only meeting. Requires a valid auth token to join the meeting. False by default.\n    CreatePresetRequestBody:\n      type: object\n      required:\n        - name\n        - preset\n      properties:\n        name:\n          type: string\n        description:\n          type: string\n        preset:\n          type: object\n    CreatePresetRoleRequestBody:\n      type: object\n      required:\n        - name\n        - role\n      properties:\n        name:\n          type: string\n        description:\n          type: string\n        role:\n          type: object\n    UpdateMeetingRequestBody:\n      type: object\n      properties:\n        title:\n          type: string\n        presetName:\n          type: string\n        status:\n          type: string\n          enum:\n              - LIVE\n              - CLOSED\n    StartRecordingRequestBody:\n      type: object\n      properties:\n        storageConfig:\n          type: object\n          required:\n            - type\n            - accessKey\n            - secret\n            - bucket\n            - region\n          properties:\n            type:\n              type: string\n              enum:\n                - aws\n                - digitalocean\n            accessKey:\n              type: string\n            secret:\n              type: string\n            region:\n              type: string\n            bucket:\n              type: string\n            path:\n              type: string\n        videoConfig:\n          type: object\n          properties:\n            codec:\n              type: string\n              enum:\n                - H264\n                - VP8\n                - VP9\n        liveStreamingConfig:\n          type: object\n          description: \u003e-\n            Object containing configuration regarding livestreaming the meeting\n            video to a platform that supports RTMP input. Note that livestreaming\n            is only supported if the codec for the recording is H.264.\n          properties:\n            rtmpUrl:\n              type: string\n              format: url\n    UpdateRecordingRequestBody:\n      type: object\n      required:\n        - recordingAction\n      properties:\n        recordingAction:\n          type: string\n          enum:\n            - stop\n    WebhookRequestBody:\n      type: object\n      required:\n        - name\n        - url\n        - events\n      properties:\n        name:\n          type: string\n        url:\n          type: string\n          format: url\n        events:\n          type: array\n          items:\n            type: string\n            enum:\n              - meeting.started\n              - meeting.ended\n              - meeting.participantJoined\n              - meeting.participantLeft\n              - recording.statusUpdate\n    AddOrgUserBody:\n      type: object\n      required:\n        - email\n        - role\n      properties:\n        email:\n          type: string\n          format: email\n        role:\n          type: string\n          enum:\n            - Owner\n    APIResponse:\n      type: object\n      properties:\n        succces:\n          type: boolean\n        message:\n          type: string\n        data:\n          type: object\n    GetStatsResponseSchema:\n      type: object\n      properties:\n        succces:\n          type: boolean\n        totalMinutes:\n          type: integer\n        totalSessions:\n          type: integer\n        totalRecordingMinutes:\n          type: integer\n        dayStats:\n          type: array\n          items:\n            type: object\n            properties:\n              totalMinutes:\n                type: integer\n              totalSessions:\n                type: integer\n              totalRecordingMinutes:\n                type: integer\n              day:\n                type: string\n                format: date-time\n    RecordingStatsSchema:\n      allOf:\n        - $ref: \"#/components/schemas/APIResponse\"\n      type: object\n      properties:\n        data:\n          type: object\n          properties:\n            total:\n              type: integer\n            recordingStats:\n              type: array\n              items:\n                type: object\n                properties:\n                  startedTime:\n                    type: string\n                    format: date-time\n                    nullable: true\n                  stoppedTime:\n                    type: string\n                    format: date-time\n                    nullable: true\n                  roomName:\n                    type: string\n                  status:\n                    type: string\n                    enum:\n                      - INVOKED\n                      - RECORDING\n                      - UPLOADING\n                      - UPLOADED\n                      - ERRORED\n    RoomStatsBody:\n      type: array\n      items:\n        type: object\n        properties:\n          createdAt:\n            type: string\n            format: date-time\n          updatedAt:\n            type: string\n            format: date-time\n          minutesConsumed:\n            type: integer\n          id:\n            type: string\n            format: uuid\n          roomUUID:\n            type: string\n            format: uuid\n          roomURL:\n            type: string\n          roomDisplayTitle:\n            type: string\n          maxUsers:\n            type: integer\n          currentUsers:\n            type: integer\n          createdBy:\n            type: string\n    OrgRoomsResponse:\n      allOf:\n        - $ref: \"#/components/schemas/APIResponse\"\n      type: object\n      properties:\n        data:\n          type: object\n          properties:\n            total:\n              type: integer\n            rooms:\n              $ref: \"#/components/schemas/RoomStatsBody\"\n    OrgMeetingRoomsResponse:\n      allOf:\n        - $ref: \"#/components/schemas/APIResponse\"\n      type: object\n      properties:\n        data:\n          type: object\n          properties:\n            rooms:\n              $ref: \"#/components/schemas/RoomStatsBody\"\n    GetUsersResponse:\n      allOf:\n        - $ref: \"#/components/schemas/APIResponse\"\n      type: object\n      properties:\n        data:\n          type: object\n          properties:\n            users:\n              type: array\n              items:\n                $ref: \"#/components/schemas/OrgUser\"\n    GetMeetingsResponse:\n      allOf:\n        - $ref: \"#/components/schemas/APIResponse\"\n      type: object\n      properties:\n        data:\n          type: object\n          properties:\n            meetings:\n              type: array\n              items:\n                $ref: \"#/components/schemas/Meeting\"\n    GetMeetingResponse:\n      allOf:\n        - $ref: \"#/components/schemas/APIResponse\"\n      type: object\n      properties:\n        data:\n          type: object\n          properties:\n            meeting:\n              $ref: \"#/components/schemas/Meeting\"\n    CreateMeetingResponse:\n      allOf:\n        - $ref: \"#/components/schemas/APIResponse\"\n      type: object\n      properties:\n        data:\n          type: object\n          properties:\n            meeting:\n              $ref: \"#/components/schemas/Meeting\"\n    AddParticipantResponse:\n      allOf:\n        - $ref: \"#/components/schemas/APIResponse\"\n      type: object\n      properties:\n        data:\n          type: object\n          properties:\n            authResponse:\n              $ref: \"#/components/schemas/AuthResponse\"\n    GetParticipantsResponse:\n      allOf:\n        - $ref: \"#/components/schemas/APIResponse\"\n      type: object\n      properties:\n        data:\n          type: object\n          properties:\n            participants:\n              type: array\n              items:\n                $ref: \"#/components/schemas/Participant\"\n    OrgUser:\n      type: object\n      properties:\n        id:\n          type: string\n          format: uuid\n        name:\n          type: string\n        email:\n          type: string\n          format: email\n        createdAt:\n          type: string\n          format: date-time\n        role:\n          type: string\n          enum:\n            - Owner\n            - Client\n            - Member\n    Participant:\n      type: object\n      properties:\n        id:\n          type: string\n          format: uuid\n        name:\n          type: string\n        email:\n          type: string\n          format: email\n        picture:\n          type: string\n          format: url\n        createdAt:\n          type: string\n          format: date-time\n    AuthResponse:\n      type: object\n      properties:\n        userAdded:\n          type: boolean\n        id:\n          type: string\n        authToken:\n          type: string\n    Meeting:\n      type: object\n      properties:\n        id:\n          type: string\n          format: uuid\n        title:\n          type: string\n        roomName:\n          type: string\n        status:\n          type: string\n          enum:\n            - LIVE\n            - CREATED\n        createdAt:\n          type: string\n          format: date-time\n  securitySchemes:\n    api_key:\n      type: apiKey\n      name: Authorization\n      in: header\n",
			"canonicalURL": "/github.com/dyte-in/docs@606dfd4c5bb929b426db662fd4fb1912df07c9d9/-/blob/static/api/v1.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/dyte-in/docs/blob/606dfd4c5bb929b426db662fd4fb1912df07c9d9/static/api/v1.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "parse: parse spec: parse operations: path \"/organizations/{organizationId}/meetings\": get: operation \"getAllMeetings\": parameters: at 1:15308: duplicate parameter: \"startTime\" in \"query\""
}