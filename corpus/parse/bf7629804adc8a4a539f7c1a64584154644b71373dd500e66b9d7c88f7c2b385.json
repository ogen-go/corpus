{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/ngageoint/scale"
		},
		"file": {
			"name": "strike.yml",
			"size": 0,
			"path": "scale/docs/rest/v6/strike.yml",
			"byteSize": 8922,
			"content": "openapi: \"3.0.0\"\ninfo:\n  title: Strike Services\n  version: v6\npaths:\n  /strikes:\n    get:\n      operationId: _rest_v6_strike_list\n      summary: Strike List\n      description: Returns a list of all strike processes\n      parameters:\n        - in: query\n          name: page\n          schema:\n            type: integer\n          description: The page of the results to return. Defaults to 1.\n        - in: query\n          name: page_size\n          schema:\n            type: integer\n          description: The size of the page to use for pagination of results.\n            Defaults to 100, and can be anywhere from 1-1000.\n        - in: query\n          name: started\n          schema:\n            type: string\n            format: date-time\n          description: The start of the time range to query\n        - in: query\n          name: ended\n          schema:\n            type: string\n            format: date-time\n          description: End of the time range to query, defaults to the current time\n        - in: query\n          name: name\n          schema:\n            type: string\n          description: Return only Strike processes with a given name.\n            Duplicate it to filter by multiple values.\n        - in: query\n          name: order\n          schema:\n            type: string\n          description: \"One or more fields to use when ordering the results.\n                        Duplicate it to multi-sort, (ex: order=host_name\u0026order=created)\n                        Nested objects require a delimiter (ex: order=source_file__created)\n                        Prefix fields with a dash to reverse the sort, (ex: order=-created)\"\n      responses:\n        '200':\n          description: 200 response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/strike_list'\n    post:\n      operationId: _rest_v6_strike_create\n      summary: Create Strike\n      description: Creates a new Strike process and places it onto the queue.\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/strike_post'\n      responses:\n        '201':\n          description: The 201 CREATED response indicates a successful request\n\n  /strikes/{id}/:\n    get:\n      operationId: _rest_v6_strike_details\n      summary: Strike Details\n      description: Returns a specific strike process and all its related model information\n      parameters:\n        - in: path\n          name: id\n          schema:\n            type: integer\n          description: id of an existing strike process\n      responses:\n        '200':\n          description: 200 response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/strike_details'\n    patch:\n      operationId: _rest_v6_strike_edit\n      summary: Edit Strike\n      description: Edits an existing Strike process with associated configuration.\n      parameters:\n        - in: path\n          name: id\n          schema:\n            type: integer\n          description: id of an existing strike process\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/strike_post'\n      responses:\n        '204':\n          description: The 204 No content response indicates a successful edit\n\n  /strikes/validation/:\n    post:\n      operationId: _rest_v6_strike_validate\n      summary: Validate Strike\n      description: Validates a new Strike process configuration without actually saving it.\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/strike_post'\n      responses:\n        '200':\n          description: The 200 OK response indicates a valid strike configuration\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/validation'\n\ncomponents:\n  schemas:\n    strike_list:\n      title: Strike List\n      type: object\n      properties:\n        count:\n          type: integer\n          description: The total number of results that match the query parameters\n          example: 10\n        next:\n          type: string\n          format: uri\n          description: A URL to the next page of results.\n          example: null\n        previous:\n          type: string\n          format: uri\n          description: A URL to the previous page of results.\n          example: null\n        results:\n          type: array\n          items:\n            $ref: '#/components/schemas/strike_base'\n          description: List of strike process objects\n\n    strike_base:\n      title: Strike Base\n      type: object\n      properties:\n        id:\n          type: integer\n          description: The unique identifier of the model. Can be passed to the details API call\n          example: 4\n        name:\n          type: string\n          description: The identifying name of the Strike process used for queries.\n          example: my-strike-process\n        title:\n          type: string\n          description: The human readable display name of the Strike process.\n          example: My Strike Process\n        description:\n          type: string\n          description: A longer description of the Strike process.\n          example: This is my Strike process for detecting my favorite files!\n        job:\n          $ref: '#/components/schemas/job_base'\n        created:\n          type: string\n          format: date-time\n          description: When the associated database model was initially created.\n          example: 2015-09-10T15:24:53.503Z\n        last_modified:\n          type: string\n          format: date-time\n          description: When the associated database model was last saved.\n          example: 2015-09-10T15:24:53.987Z\n\n    strike_post:\n      title: Strike Post\n      type: object\n      required: [title, configuration]\n      properties:\n        title:\n          type: string\n          description: The human readable display name of the Strike process.\n            This will be used to generate the name field\n          example: My Strike Process\n        description:\n          type: string\n          description: A longer description of the Strike process.\n          example: This is my Strike process for detecting my favorite files!\n        configuration:\n          $ref: '#/components/schemas/strike_config'\n\n    strike_details:\n      allOf:\n        - ref: '#/components/schemas/strike_base'\n        - title: Strike Details\n        - type: object\n          properties:\n            configuration:\n              $ref: '#/components/schemas/strike_config'\n\n    strike_config:\n      title: Strike Configuration\n      type: object\n      properties:\n        workspace:\n          type: string\n          description: The workspace field is a required string that specifies the name of the\n            workspace that is being scanned. The type of the workspace (its broker type) will determine which types of monitor can be used.\n          example: my-host-workspace\n        monitor:\n          oneOf:\n          - $ref: '#/components/schemas/dir_monitor'\n          - $ref: '#/components/schemas/s3_monitor'\n        files_to_ingest:\n          type: array\n          items:\n            $ref: '#/components/schemas/ingest_file'\n          description: List of ingest objects\n        recipe:\n          type: object\n          properties:\n            name:\n              type: string\n              description: Specifies the name of the recipe the Scan will attempt\n                to start when the file is ingested.\n              example: my-recipe\n            revision_num:\n              type: integer\n              description: Optional. Specifies the revision number of the recipe\n                 the Strike will attempt to start when the file is ingested.\n              example: 1\n\n    validation:\n      title: Validation\n      type: object\n      properties:\n        is_valid:\n          type: boolean\n          description: The given element is valid\n          example: true\n        errors:\n          type: array\n          items:\n            $ref: '#/components/schemas/validation_error'\n        warnings:\n          type: array\n          items:\n            $ref: '#/components/schemas/validation_warning'\n\n    validation_error:\n      title: Validation Error\n      type: object\n      properties:\n        name:\n          type: string\n          description: The name of the error\n        description:\n          type: string\n          description: A description of the validation error\n\n    validation_warning:\n      title: Validation Warning\n      type: object\n      properties:\n        name:\n          type: string\n          description: The name of the warning\n        description:\n          type: string\n          description: A description of the warning"
		}
	},
	"Error": "parse: parse spec: parse components: schemas: \"strike_list\": parse schema: property \"results\": parse schema: item: parse schema: resolve \"#/components/schemas/strike_base\": parse schema: property \"job\": parse schema: resolve \"#/components/schemas/job_base\": find schema: resolve \"#/components/schemas/job_base\": can't find value for \"components/schemas/job_base\""
}