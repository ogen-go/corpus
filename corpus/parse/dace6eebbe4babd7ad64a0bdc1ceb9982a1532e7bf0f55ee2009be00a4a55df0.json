{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/plantbreeding/BrAPI"
		},
		"file": {
			"name": "Studies_GET_POST.yaml",
			"size": 0,
			"path": "Specification/BrAPI-Core/Studies/Studies_GET_POST.yaml",
			"byteSize": 4984,
			"content": "info:\n  title: BrAPI\n  version: ''\nopenapi: 3.0.0\npaths:\n  /studies:\n    get:\n      summary: Get a filtered list of Studies\n      description: |-\n        Get list of studies\n        \n        StartDate and endDate should be ISO-8601 format for dates\n      parameters:\n      - description: Filter based on study type unique identifier\n        in: query\n        name: studyType\n        required: false\n        schema:\n          type: string\n      - description: Filter by location\n        in: query\n        name: locationDbId\n        required: false\n        schema:\n          type: string\n      - description: Filter by season or year\n        in: query\n        name: seasonDbId\n        required: false\n        schema:\n          type: string\n      - description: Filter by study code\n        in: query\n        name: studyCode\n        required: false\n        schema:\n          type: string\n      - description: Filter by study PUI\n        in: query\n        name: studyPUI\n        required: false\n        schema:\n          type: string\n      - description: Filter by observation variable DbId\n        in: query\n        name: observationVariableDbId\n        required: false\n        schema:\n          type: string\n      - description: A flag to indicate if a Study is currently active and ongoing\n        in: query\n        name: active\n        required: false\n        schema:\n          type: boolean\n      - description: Name of the field to sort by.\n        in: query\n        name: sortBy\n        required: false\n        schema:\n          enum:\n          - studyDbId\n          - trialDbId\n          - programDbId\n          - locationDbId\n          - seasonDbId\n          - studyType\n          - studyName\n          - studyLocation\n          - programName\n          type: string\n      - description: Sort order direction. Ascending/Descending.\n        in: query\n        name: sortOrder\n        required: false\n        schema:\n          enum:\n          - asc\n          - ASC\n          - desc\n          - DESC\n          type: string\n      - $ref: '#/components/parameters/commonCropName'\n      - $ref: '#/components/parameters/programDbId'\n      - $ref: '#/components/parameters/trialDbId'\n      - $ref: '#/components/parameters/studyDbId'\n      - $ref: '#/components/parameters/studyName'\n      - $ref: '#/components/parameters/germplasmDbId'\n      - $ref: '#/components/parameters/externalReferenceID' \n      - $ref: '#/components/parameters/externalReferenceId'\n      - $ref: '#/components/parameters/externalReferenceSource'\n      - $ref: '#/components/parameters/page'\n      - $ref: '#/components/parameters/pageSize'\n      - $ref: '#/components/parameters/authorizationHeader'\n      responses:\n        '200':\n          $ref: '#/components/responses/StudyListResponse'\n        '400':\n          $ref: '#/components/responses/400BadRequest'\n        '401':\n          $ref: '#/components/responses/401Unauthorized'\n        '403':\n          $ref: '#/components/responses/403Forbidden'\n      tags:\n      - Studies\n    post:\n      summary: Create new Studies. \n      description: |-\n        Create new studies\n        \n        Implementation Notes\n        \n        StartDate and endDate should be ISO-8601 format for dates\n        \n        `studyDbId` is generated by the server.\n      parameters:\n      - $ref: '#/components/parameters/authorizationHeader'\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: array\n              items: \n                $ref: '#/components/schemas/StudyNewRequest'\n      responses:\n        '200':\n          $ref: '#/components/responses/StudyListResponse'\n        '400':\n          $ref: '#/components/responses/400BadRequest'\n        '401':\n          $ref: '#/components/responses/401Unauthorized'\n        '403':\n          $ref: '#/components/responses/403Forbidden'\n      tags: \n      - Studies\ncomponents:\n  responses:\n    StudyListResponse:\n      content:\n        application/json:\n          schema:\n            title: StudyListResponse\n            properties:\n              '@context':\n                $ref: '#/components/schemas/Context'\n              metadata:\n                $ref: '#/components/schemas/metadata'\n              result:\n                properties:\n                  data:\n                    description: The `data` array is part of the BrAPI standard List Response JSON container. `data` will always contain the primary list of objects being returned by a BrAPI endpoint. `data` is also the only array impacted by the `metadata.pagination` details. When the pagination parameters change, the `data` array will reflect those changes in the JSON response.\n                    items:\n                      $ref: '#/components/schemas/Study'\n                    type: array\n                required:\n                - data\n                type: object\n            required:\n            - metadata\n            - result\n            type: object\n      description: OK\n      headers: {}\n      \n",
			"canonicalURL": "/github.com/plantbreeding/BrAPI@99a2ff6e980fc6b34c5675fe27b7608d0bbf2d4e/-/blob/Specification/BrAPI-Core/Studies/Studies_GET_POST.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/plantbreeding/BrAPI/blob/99a2ff6e980fc6b34c5675fe27b7608d0bbf2d4e/Specification/BrAPI-Core/Studies/Studies_GET_POST.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "parse: parse spec: parse components: responses: \"StudyListResponse\": content: application/json: schema: parse schema: property \"@context\": at Specification/BrAPI-Core/Studies/Studies_GET_POST.yaml:145:23: $ref: resolve \"#/components/schemas/Context\": resolve: can't find value for \"components/schemas/Context\""
}