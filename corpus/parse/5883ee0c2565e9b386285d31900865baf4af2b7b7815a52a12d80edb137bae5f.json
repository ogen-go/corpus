{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/cablelabs/lpwanserver"
		},
		"file": {
			"name": "device.yml",
			"size": 0,
			"path": "docs/openapi/endpoints/device.yml",
			"byteSize": 8162,
			"content": "openapi: 3.0.0\ninfo:\n  version: 1.2.1\n  title: An include file to define Device endpoints\n  license:\n    name: Apache 2.0\npaths:\n  /api/devices:\n    post:\n      operationId: createDevice\n      summary: Create a Device\n      description: Create a Device\n      parameters: []\n      security:\n        - bearer_token: []\n      tags:\n        - Device\n      requestBody:\n        $ref: '#/components/requestBodies/CreateDeviceInput'\n      responses:\n        '200':\n          description: Device created\n          content:\n            application/json:\n              schema:\n                $ref: '../api.yml#/components/schemas/ResourceCreatedResponse'\n        '403':\n          description: Authenticated user not allowed to perform this operation\n        '400':\n          description: Bad request\n    get:\n      operationId: listDevices\n      summary: List Devices\n      description: List Devices\n      parameters:\n        - $ref: '../api.yml#/components/parameters/offsetParam'\n        - $ref: '../api.yml#/components/parameters/limitParam'\n        - $ref: '../api.yml#/components/parameters/nameSearch'\n        - name: companyId\n          in: query\n          required: false\n          schema:\n            type: string\n        - name: applicationId\n          in: query\n          required: false\n          schema:\n            type: string\n      security:\n        - bearer_token: []\n      tags:\n        - Device\n      responses:\n        '200':\n          description: Query response with totalCount and list of records\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ListDeviceResponse'\n        '403':\n          description: Authenticated user not allowed to perform this operation\n        '400':\n          description: Bad request\n  /api/devices/{id}:\n    parameters:\n      - $ref: '../api.yml#/components/parameters/idParam'\n    get:\n      operationId: loadDevice\n      summary: Get Device\n      description: Get Device\n      parameters: []\n      security:\n        - bearer_token: []\n      tags:\n        - Device\n      responses:\n        '200':\n          description: Device record\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DeviceResponse'\n        '403':\n          description: Authenticated user not allowed to perform this operation\n        '404':\n          description: Device not found\n    put:\n      operationId: updateDevice\n      summary: Update Device\n      description: Update Device\n      parameters: []\n      security:\n        - bearer_token: []\n      tags:\n        - Device\n      requestBody:\n        $ref: '#/components/requestBodies/UpdateDeviceInput'\n      responses:\n        '204':\n          description: Device update succeeded\n        '400':\n          description: Bad request\n        '403':\n          description: Authenticated user not allowed to perform this operation\n        '404':\n          description: Device not found\n    delete:\n      operationId: deleteDevice\n      summary: Delete Device\n      description: Delete Device\n      parameters: []\n      security:\n        - bearer_token: []\n      tags:\n        - Device\n      responses:\n        '204':\n          description: Device record was deleted\n        '403':\n          description: Authenticated user not allowed to perform this operation\n        '404':\n          description: Device not found\n  /api/devices/{id}/downlinks:\n    parameters:\n      - $ref: '../api.yml#/components/parameters/idParam'\n    post:\n      operationId: receiveDownlink\n      summary: Send downlink\n      description: Send a unicast downlink to one device\n      parameters: []\n      security:\n        - bearer_token: []\n      tags:\n        - Device\n      requestBody:\n        $ref: '#/components/requestBodies/UnicastDownlinkInput'\n      responses:\n        '200':\n          description: Downlink was sent. Response contains logs from remote networks.\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  type: string\n        '403':\n          description: Authenticated user not allowed to perform this operation\n        '404':\n          description: Device not found\n  /api/ip-device-uplinks:\n    post:\n      operationId: receiveIpDeviceUplink\n      summary: IP-based device uplink\n      description: Submit an uplink from an IP-based device.  TLS authentication required. Client certificate must contain devEUI as the subject CN.\n      parameters: []\n      security: []\n      tags:\n        - Device\n      requestBody:\n        $ref: '#/components/requestBodies/IpUplinkInput'\n      responses:\n        '204':\n          description: Uplink received\n        '403':\n          description: Unable to authenticate device by it's client certificate\n  /api/ip-device-downlinks:\n    get:\n      operationId: listIpDeviceDownlinks\n      summary: Get IP device downlinks\n      description: Get a list of all downlinks for an IP-based device. TLS authentication required. Client certificate must contain devEUI as the subject CN.  Long-polling supported.\n      parameters:\n        - name: prefer\n          in: header\n          description: Use 'wait=n' as the header value, where n is seconds.  If no downlinks available at time of request, request will wait for n seconds before returning.\n          required: false\n          schema:\n            type: string\n      security: []\n      tags:\n        - Device\n      responses:\n        '200':\n          description: List of downlinks\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  type: object\n        '403':\n          description: Unable to authenticate device by it's client certificate\ncomponents:\n  schemas:\n    Device:\n      type: object\n      properties:\n        name:\n          type: string\n          description: The Device's name\n        description:\n          type: string\n          description: The Device's description\n        deviceModel:\n          type: string\n          description: The Device's Model information\n        applicationId:\n          type: string\n          description: The ID of the Application to which the device belongs\n    DeviceResponse:\n       allOf:\n        - $ref: '#/components/schemas/Device'\n        - type: object\n          properties:\n            id:\n              type: string\n    ListDeviceResponse:\n      allOf:\n        - $ref: '../api.yml#/components/schemas/ListResponse'\n        - type: object\n          properties:\n            records:\n              type: array\n              items:\n                $ref: '#/components/schemas/DeviceResponse'\n              default: []\n  requestBodies:\n    CreateDeviceInput:\n      content:\n        application/json:\n          schema:\n            allOf:\n              - $ref: '#/components/schemas/Device'\n              - type: object\n                required:\n                  - name\n                  - description\n                  - applicationId\n                  - deviceModel\n      description: Device to be created\n      required: true\n    UpdateDeviceInput:\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/Device'\n      description: Device properties to be updated\n      required: true\n    UnicastDownlinkInput:\n      content:\n        application/json:\n          schema:\n            type: object\n            required:\n              - fCnt\n              - fPort\n            properties:\n              fCnt:\n                type: integer\n                format: int32\n                description: Application's downlink frame counter\n              fPort:\n                type: integer\n                format: int32\n                description: The intended port for LoRa devices\n              data:\n                type: string\n                description: Any string to send as data to the device\n              jsonData:\n                type: object\n                description: A JSON object to send to the device\n    IpUplinkInput:\n      content:\n        application/json:\n          schema:\n            type: object\n"
		}
	},
	"Error": "parse: parse spec: parse components: schemas: \"ListDeviceResponse\": parse schema: allOf: [0]: parse schema: resolve \"../api.yml#/components/schemas/ListResponse\": external \"../api.yml\": file: local file reference is not allowed"
}