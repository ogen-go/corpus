{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/vinceh121/gmcserver"
		},
		"file": {
			"name": "api.yml",
			"size": 0,
			"path": "api.yml",
			"byteSize": 11523,
			"content": "openapi: 3.0.3\ninfo:\n  title: \"GMCServer Backend API\"\n  version: 0.1.0\n  license:\n    name: GNU Affero General Public License v3.0 or later\n    url: https://www.gnu.org/licenses/agpl-3.0-standalone.html\n  contact:\n    name: vinceh121\n    email: contact@vinceh121.me\n    url: https://vinceh121.me\nservers:\n  - url: https://gmc.vinceh121.me/api/v1\npaths:\n  /user/{userId}:\n    get:\n      description: Fetch a user\n      parameters:\n        - name: userId\n          in: path\n          required: true\n          example: \"5ed7d9b8de22630a0105e7bf\"\n          schema:\n            type: string\n      responses:\n        '200':\n          description: Successfully fetched a user\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/user\"\n        '400':\n          description: Format error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/errorResult\"\n        '404':\n          description: No user by that ID\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/errorResult\"\n  /user/me:\n    get:\n      description: Fetch the currently logged in user\n      responses:\n        '200':\n          description: Successfully fetched current user\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/user\"\n        '404':\n          description: User not logged in\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/errorResult\"\n    put:\n      description: Update current user\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: \"#components/schemas/updateUser\"\n      responses:\n        '200':\n          description: Successfully updated user\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/errorResult\"\n        '409':\n          description: Username or email is already taken\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/errorResult\"\n        '403':\n          description: When changing password, current password failed to validate\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/errorResult\"\n    delete:\n      description: Delete current user\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n             type: object\n             properties:\n               password:\n                type: string\n      responses:\n        '200':\n          description: Successfully deleted user\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/errorResult\"\n        '400':\n          description: Password field missing\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/errorResult\"\n        '403':\n          description: Password failed to validate\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/errorResult\"\n  /device:\n    post:\n      description: Create device\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/device\"\n      responses:\n        '200':\n          description: Successfully created device\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/device\"\n        '400':\n          description: Format error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/errorResult\"\n        '403':\n          description: Not authenticated\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/errorResult\"\n        '406':\n          description: Device limit reached\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/errorResult\"\n  /device/{deviceId}:\n    get:\n      description: Get a device by ID\n      parameters:\n        - name: deviceId\n          in: path\n          required: true\n          example: \"5ed7d9b8de22630a0105e7c0\"\n          schema:\n            type: string\n      responses:\n        '200':\n          description: Successfully fetched device\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/device\"\n        '404':\n          description: No device by that ID\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/errorResult\"\n  /device/{deviceId}/timeline:\n    get:\n      description: Get a device's records timeline\n      parameters:\n        - name: deviceId\n          in: path\n          required: true\n          example: \"5ed7d9b8de22630a0105e7c0\"\n          schema:\n            type: string\n        - name: start\n          in: query\n          schema:\n            type: integer\n        - name: end\n          in: query\n          schema:\n            type: integer\n        - name: full\n          in: query\n          schema:\n            type: boolean\n      responses:\n        '200':\n          description: Sucessfully fetched device timeline\n          content:\n            'application/json':\n              schema:\n                type: array\n                items:\n                  $ref: \"#/components/schemas/record\"\n  /device/{deviceId}/stats/{field}:\n    get:\n      description: Get statistical information for a specific field\n      parameters:\n        - name: deviceId\n          in: path\n          required: true\n          example: \"5ed7d9b8de22630a0105e7c0\"\n          schema:\n            type: string\n        - name: field\n          in: path\n          required: true\n          example: \"cpm\"\n          schema:\n            type: string\n        - name: start\n          in: query\n          schema:\n            type: integer\n        - name: end\n          in: query\n          schema:\n            type: integer\n      responses:\n        '200':\n          description: Successfully calculated stats\n          content:\n            'application/json':\n              schema:\n                $ref: \"#/compenents/schemas/deviceStats\"\n        '204':\n          description: No records withing constraints\n          content:\n            'application/json':\n              schema:\n                $ref: \"#/components/schemas/errorResult\"\ncomponents:\n  schemas:\n    location:\n      type: array\n      nullable: true\n      maxItems: 2\n      minItems: 2\n      items:\n        type: number\n    partialUser:\n      type: object\n      properties:\n        id:\n          type: string\n        username:\n          type: string\n        admin:\n          type: boolean\n    device:\n      type: object\n      discriminator:\n        propertyName: own\n        mapping:\n          \"true\": ownedDevice\n          \"false\": device\n      properties:\n        id:\n          type: string\n        model:\n          type: string\n          nullable: true\n        name:\n          type: string\n        importedFrom:\n          type: string\n          nullable: true\n        location:\n          $ref: \"#/components/schemas/location\"\n        owner:\n          $ref: \"#/components/schemas/partialUser\"\n        disabled:\n          type: boolean\n        own:\n          type: boolean\n    ownedDevice:\n      allOf:\n        - $ref: \"#components/schemas/device\"\n        - type: object\n          properties:\n            gmcId:\n              type: integer\n            lastEmailAlert:\n              type: integer\n            stdDevAlertLimit:\n              type: integer\n            proxiesSettings: ### TODO\n              type: object\n    mapDevice:\n      type: object\n      properties:\n        id:\n          type: string\n        name:\n          type: string\n        location:\n          $ref: \"#/components/schemas/location\"\n        cpm:\n          type: number\n    user:\n      type: object\n      discriminator:\n        propertyName: self\n        mapping:\n          \"true\": selfUser\n          \"false\": user\n      properties:\n        id:\n          type: string\n        username:\n          type: string\n        admin:\n          type: boolean\n        self:\n          type: boolean\n        devices:\n          type: array\n          items:\n            $ref: \"#/components/schemas/device\"\n    selfUser:\n      allOf:\n        - $ref: \"#components/schemas/user\"\n        - type: object\n          properties:\n            email:\n              type: string\n            deviceLimit:\n              type: integer\n            gmcId:\n              type: integer\n            mfa:\n              type: boolean\n            alertEmails:\n              type: boolean\n    updateUser:\n      allOf:\n        - $ref: \"#components/schemas/user\"\n        - type: object\n          properties:\n            newPassword:\n              type: string\n            currentPassword:\n              type: string\n              description: Only required if newPassword is defined\n    instanceInfo:\n      type: object\n      properties:\n        host:\n          type: string\n        name:\n          type: string\n        about:\n          type: string\n        captcha:\n          type: boolean\n    record:\n      properties:\n        id:\n          type: string\n        deviceId:\n          type: string\n        cpm:\n          type: number\n          nullable: true\n        acpm:\n          nullable: true\n        usv:\n          type: number\n          nullable: true\n        co2:\n          type: number\n          nullable: true\n        hcho:\n          type: number\n          nullable: true\n        tmp:\n          type: number\n          nullable: true\n        ap:\n          type: number\n          nullable: true\n        hmdt:\n          type: number\n          nullable: true\n        accy:\n          type: number\n          nullable: true\n        date:\n          type: integer\n          nullable: true\n        ip:\n          type: string\n          nullable: true\n        type:\n          type: string\n          nullable: true\n        location:\n          $ref: \"#/components/schemas/location\"\n    errorResult:\n      type: object\n      properties:\n        status:\n          type: integer\n        description:\n          type: string\n          nullable: true\n        extras:\n          type: object\n          nullable: true\n    proxyRadmon:\n      type: object\n      properties:\n        user:\n          type: string\n        password:\n          type: string\n    proxySafecast:\n      type: object\n      properties:\n        apiKey:\n          type: string\n        deviceId:\n          type: integer\n    proxyGmcmap:\n      type: object\n      properties:\n        userId:\n          type: integer\n        deviceId:\n          type: integer\n    proxySettings:\n      type: object\n      anyOf:\n        - $ref: \"#/components/schemas/proxyRadmon\"\n        - $ref: \"#/components/schemas/proxySafecast\"\n        - $ref: \"#/components/schemas/proxyGmcmap\"\n    deviceStats:\n      type: object\n      properties:\n        field:\n          type: string\n        device:\n          type: string\n        avg:\n          type: number\n        min:\n          type: number\n        max:\n          type: number\n        stdDev:\n          type: number\n        sampleSize:\n          type: number\n\n"
		}
	},
	"Error": "parse: parse spec: paths: /device/{deviceId}/stats/{field}: get: operation \"\": responses: 200: content: \"application/json\": schema: parse schema: reference \"#/compenents/schemas/deviceStats\": resolve reference \"#/compenents/schemas/deviceStats\": invalid schema reference \"#/compenents/schemas/deviceStats\""
}