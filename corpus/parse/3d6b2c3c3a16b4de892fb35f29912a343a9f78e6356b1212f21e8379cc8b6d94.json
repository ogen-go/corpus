{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/Curb-v2/third-party-app-integration"
		},
		"file": {
			"name": "api-v4.yml",
			"size": 0,
			"path": "docs/api-v4.yml",
			"byteSize": 147319,
			"content": "openapi: \"3.0.0\"\ninfo:\n  version: 4.0.0\n  title: Curb Public API\n  description: \"\n    This API is designed both for Curb end-users or for developers looking to build an end-user facing application, as well as for our partner fleet organizations.  Authentication is performed via Auth0.  Once you have an access token, you can interact with this API clicking the \\\"Authorize\\\" button below.\n    \\n\\n\n    If you are looking for realtime data, that is documented separately.\"\n  license:\n    name: MIT\nservers:\n  - url: https://app.staging.energycurb.com/api/v4\n  - url: https://app.energycurb.com/api/v4\nsecurity:\n  - bearerAuth: []\n\npaths: \n  /user:\n    get:\n      summary: Show the current user\n      operationId: getUser\n      tags:\n        - User\n      responses: \n        '200':\n          description: Valid request\n          content:\n            application/json:    \n              schema:\n                type: object\n                properties:\n                  accepted_eula:\n                    type: boolean\n                  accepted_hazard_warning:\n                    type: boolean\n                  accepted_provider_agreement:\n                    type: boolean\n                  default_location:\n                    type: string\n                    format: uuid\n                    nullable: true\n                  dt_created:\n                    type: string\n                    format: date-time\n                  dt_modified:\n                    type: string\n                    format: date-time\n                  email_address:\n                    type: string\n                    format: email\n                  live_data_unit:\n                    type: string\n                    nullable: true\n                  phone_number:\n                    type: string\n                    nullable: true\n                  user_type:\n                    type: string\n                    enum: [homeowner]\n                  useraccess_set:\n                    type: array\n                    items:\n                      $ref: \"#/components/schemas/UserAccess\"\n                  auth0:\n                    $ref: \"#/components/schemas/Auth0User\"\n                example:\n                  user_id: \"auth0|5fa1f61691dfd60072b812dc\"\n                  notificationsettings:\n                    user: \"auth0|5fa1f61691dfd60072b812dc\"\n                    dt_created: \"2020-12-14T22:44:37.392543Z\"\n                    dt_modified: \"2020-12-14T22:44:37.392577Z\"\n                    notification_types:\n                      - direct\n                      - solar_status\n                      - hub_status\n                  useraccess_set:\n                  - location:\n                      id: bb2a7430-3143-44b6-9f0d-22890b2c7f92\n                      dt_created: '2019-01-28T17:13:49.593389Z'\n                      dt_modified: '2021-11-22T22:48:13.475634Z'\n                      organization: curb\n                      label: Main House\n                      country: USA\n                      state: TX\n                      city: Austin\n                      postcode: '78744'\n                      address: 1234 Grey Stone Drive\n                      geocode: 30.19631100,-97.73080700\n                      timezone: America/Chicago\n                    installation:\n                    access_level: full\n                    fleet:\n                    id: 5dad292c-31d0-4f2b-9f55-bf755a821ecc\n                  dt_created: '2020-11-04T00:31:06.263067Z'\n                  dt_modified: '2021-11-22T22:51:34.077206Z'\n                  name: Test User\n                  user_type: homeowner\n                  phone_number: \"+15125551234\"\n                  email_address: test+staging@energycurb.com\n                  provider: curb\n                  accepted_eula: true\n                  walkthrough_complete: false\n                  accepted_provider_agreement: false\n                  accepted_hazard_warning: false\n                  default_location:\n                  live_data_unit: w      \n                  auth0:\n                    nickname: \"test+staging\"\n                    name: \"test+staging@energycurb.com\"\n                    picture: \"https://s.gravatar.com/avatar/af23e57041db34ef2b83c2c8e40b29cf?s=480\u0026r=pg\u0026d=https%3A%2F%2Fcdn.auth0.com%2Favatars%2Fte.png\"\n                    updated_at: \"2021-11-22T22:41:56.756Z\"\n                    email: \"test+staging@energycurb.com\"\n                    email_verified: false\n                    iss: \"https://staging-energycurb.auth0.com/\"\n                    sub: \"auth0|5fa1f61691dfd60072b812dc\"\n                    aud: \"BZO5TDNSZ7IOTSNvkkmGlZp34fV9NzRg\"\n                    iat: 1638487783\n                    exp: 1638523783\n                    at_hash: \"LJuQt8v_wkPtYrupOSot-w\"\n                    created_at: \"2020-11-04T00:30:14.847Z\"\n                    identities:\n                      - user_id: \"5fa1f61691dfd60072b812dc\"\n                        provider: \"auth0\"\n                        connection: \"Users\"\n                        isSocial: false\n                    user_id: \"auth0|5fa1f61691dfd60072b812dc\"\n                    last_ip: \"136.49.149.11\"\n                    last_login: \"2021-11-22T22:41:56.756Z\"\n                    logins_count: 32      \n    patch:\n      summary: Update the current user\n      description: This endpoint allows end users to update their user data.  This endpoint is only available for users, not for organizations\n      operationId: updateUser\n      tags:\n        - User\n      requestBody:\n        required: true\n        content:\n          application/json:            \n            schema:\n              $ref: '#/components/schemas/User'\n            example:\n              name: Test User\n              phone_number: \"+15125551234\"\n\n      responses: \n        '200':\n          description: Valid request\n          content:\n            application/json:    \n              schema:\n                type: object\n                $ref: '#/components/schemas/User'\n                example:\n                  user_id: \"auth0|5fa1f61691dfd60072b812dc\"\n                  notificationsettings:\n                    user: \"auth0|5fa1f61691dfd60072b812dc\"\n                    dt_created: \"2020-12-14T22:44:37.392543Z\"\n                    dt_modified: \"2020-12-14T22:44:37.392577Z\"\n                    notification_types:\n                      - direct\n                      - solar_status\n                      - hub_status\n                  useraccess_set:\n                  - location:\n                      id: bb2a7430-3143-44b6-9f0d-22890b2c7f92\n                      dt_created: '2019-01-28T17:13:49.593389Z'\n                      dt_modified: '2021-11-22T22:48:13.475634Z'\n                      organization: curb\n                      label: Main House\n                      country: USA\n                      state: TX\n                      city: Austin\n                      postcode: '78744'\n                      address: 1234 Grey Stone Drive\n                      geocode: 30.19631100,-97.73080700\n                      timezone: America/Chicago\n                    installation:\n                    access_level: full\n                    fleet:\n                    id: 5dad292c-31d0-4f2b-9f55-bf755a821ecc\n                  dt_created: '2020-11-04T00:31:06.263067Z'\n                  dt_modified: '2021-11-22T22:51:34.077206Z'\n                  name: Test User\n                  user_type: homeowner\n                  phone_number: \"+15125551234\"\n                  email_address: test+staging@energycurb.com\n                  provider: curb\n                  accepted_eula: true\n                  walkthrough_complete: false\n                  accepted_provider_agreement: false\n                  accepted_hazard_warning: false\n                  default_location:\n                  live_data_unit: w      \n                  auth0:\n                    nickname: \"test+staging\"\n                    name: \"test+staging@energycurb.com\"\n                    picture: \"https://s.gravatar.com/avatar/af23e57041db34ef2b83c2c8e40b29cf?s=480\u0026r=pg\u0026d=https%3A%2F%2Fcdn.auth0.com%2Favatars%2Fte.png\"\n                    updated_at: \"2021-11-22T22:41:56.756Z\"\n                    email: \"test+staging@energycurb.com\"\n                    email_verified: false\n                    iss: \"https://staging-energycurb.auth0.com/\"\n                    sub: \"auth0|5fa1f61691dfd60072b812dc\"\n                    aud: \"BZO5TDNSZ7IOTSNvkkmGlZp34fV9NzRg\"\n                    iat: 1638487783\n                    exp: 1638523783\n                    at_hash: \"LJuQt8v_wkPtYrupOSot-w\"\n                    created_at: \"2020-11-04T00:30:14.847Z\"\n                    identities:\n                      - user_id: \"5fa1f61691dfd60072b812dc\"\n                        provider: \"auth0\"\n                        connection: \"Users\"\n                        isSocial: false\n                    user_id: \"auth0|5fa1f61691dfd60072b812dc\"\n                    last_ip: \"136.49.149.11\"\n                    last_login: \"2021-11-22T22:41:56.756Z\"\n                    logins_count: 32                                        \n  /locations:\n    get:\n      summary: List locations to which the given user has access\n      operationId: listLocationsForUser\n      tags:\n        - Configuration\n      parameters:\n        - in: query\n          name: page_size\n          schema:\n            type: integer\n      responses:\n        '200':\n          description: Successful request\n          content:\n            application/json:    \n              schema:\n                type: object\n                properties:\n                  count: \n                    type: integer\n                  prev:\n                    type: string\n                    format: url\n                  next:\n                    type: string\n                    format: url\n                  results: \n                    type: array\n                    items: \n                      $ref: \"#/components/schemas/Location\"\n                example:\n                  count: 1\n                  prev: null\n                  next: null\n                  results: \n                    - id: bb2a7430-3143-44b6-9f0d-22890b2c7f92\n                      dt_created: '2019-01-28T17:13:49.593389Z'\n                      dt_modified: '2021-11-22T22:48:13.475634Z'\n                      organization: curb\n                      label: Main House\n                      country: USA\n                      state: TX\n                      city: Austin\n                      postcode: '78744'\n                      address: 1234 Grey Stone Drive\n                      geocode: 30.19631100,-97.73080700\n                      timezone: America/Chicago\n  /locations/{location_id}:\n    get:\n      summary: Get a location by location id\n      operationId: getLocation\n      parameters:\n        - in: path\n          name: location_id\n          schema:\n            type: string\n            format: uuid\n          required: true\n      tags:\n        - Configuration\n      responses:\n        '200':\n          description: Successful request\n          content:\n            application/json:    \n              schema:\n                type: object\n                $ref: \"#/components/schemas/Location\"\n              example: \n                id: bb2a7430-3143-44b6-9f0d-22890b2c7f92\n                dt_created: '2019-01-28T17:13:49.593389Z'\n                dt_modified: '2021-11-22T22:48:13.475634Z'\n                organization: curb\n                label: Main House\n                country: USA\n                state: TX\n                city: Austin\n                postcode: '78744'\n                address: 1234 Grey Stone Drive\n                geocode: 30.19631100,-97.73080700\n                timezone: America/Chicago\n    patch:\n      summary: Update a location by location id\n      operationId: updateLocation\n      parameters:\n        - in: path\n          name: location_id\n          schema:\n            type: string\n            format: uuid\n          required: true      \n      tags:\n        - Configuration\n      requestBody:\n        required: true\n        content:\n          application/json:            \n            schema:\n              $ref: '#/components/schemas/Location'\n            example:\n              label: Guest house\n      responses:\n        '200':\n          description: Successful request\n          content:\n            application/json:    \n              schema:\n                type: object\n                $ref: \"#/components/schemas/Location\"\n              example: \n                organization: curb\n                label: Main House\n                country: USA\n                state: TX\n                city: Austin\n                postcode: '78744'\n                address: 1234 Grey Stone Drive\n                geocode: 30.19631100,-97.73080700\n                timezone: America/Chicago                \n\n  /locations/{location_id}/detail:\n    get:\n      summary: Get additional details for a location by location id\n      description: This endpoint describes additional details for a location, such as when it was activated, when its most recent sample was posted, if it currently has Curb devices that are online, and if the location has production or batteries enabled.    \n      operationId: getLocationDetails\n      parameters:\n        - in: path\n          name: location_id\n          schema:\n            type: string\n            format: uuid\n          required: true\n      tags:\n        - Configuration\n      responses:\n        '200':\n          description: Successful request\n          content:\n            application/json:    \n              schema:\n                type: object\n                $ref: \"#/components/schemas/LocationDetail\"\n              example: \n                id: bb2a7430-3143-44b6-9f0d-22890b2c7f92\n                dt_last_sample_received: '2022-02-09T18:48:00.000Z'\n                dt_active_since: '2020-02-12T04:48:06.000Z'\n                active_now: true\n                has_mains: true\n                has_production: true\n                has_battery: false\n                has_consumption: true\n                installations_count: 1\n                fleet: curb\n\n  /locations/{location_id}/installations:\n    get:\n      summary: List installations for a location\n      operationId: listInstallationsForLocation\n      parameters:\n        - in: path\n          name: location_id\n          schema:\n            type: string\n            format: uuid\n          required: true      \n      tags:\n        - Configuration\n      responses:\n        '200':\n          description: Successful request\n          content:\n            application/json:    \n              schema:\n                type: object          \n                properties:\n                  count: \n                    type: integer\n                  prev:\n                    type: string\n                    format: url\n                  next:\n                    type: string\n                    format: url\n                  results: \n                    type: array\n                    items: \n                      $ref: \"#/components/schemas/Installation\"\n                example:\n                  count: 1\n                  prev: null\n                  next: null\n                  results: \n                    - dt_created: '2019-01-28T17:13:49.593389Z'\n                      dt_modified: '2021-11-22T22:48:13.475634Z'\n                      hub: crhs5ma2\n                      location: bb2a7430-3143-44b6-9f0d-22890b2c7f92\n                      fleet: curb\n                      organization: curb\n                      state: active\n                      dt_state_changed: '2021-05-11T18:15:33.042826Z'\n\n  /locations/{location_id}/registers:\n    get:\n      summary: List registers for a location\n      operationId: listRegistersForLocation\n      parameters:\n        - in: path\n          name: location_id\n          schema:\n            type: string\n            format: uuid\n          required: true      \n      tags:\n        - Configuration\n      responses:\n        '200':\n          description: Successful request\n          content:\n            application/json:    \n              schema:\n                type: object          \n                properties:\n                  count: \n                    type: integer\n                  prev:\n                    type: string\n                    format: url\n                  next:\n                    type: string\n                    format: url\n                  results: \n                    type: array\n                    items: \n                      $ref: \"#/components/schemas/Register\"\n                example:\n                  count: 18\n                  next:\n                  previous:\n                  results:\n                  - id: fb86a932-5be1-4e98-a077-802e56ea139c\n                    dt_created: '2018-05-05T20:36:15.259971Z'\n                    dt_modified: '2019-07-19T23:23:02.541447Z'\n                    organization: curb\n                    label: HVAC1 Office Guest\n                    number: 0\n                    circuit_type: consumption\n                    multiplier: 2\n                    inverted: false\n                    installation: crhs5ma2\n                    clamp_definition: XIAMEN30\n                    group: 0\n                    channel: 0\n                    grid: false\n                    production: false\n                    battery: false\n                    circuit_number: 12\n                  - id: 8491c141-2753-44a0-9e3d-d44fdae25b37\n                    dt_created: '2018-04-25T19:19:33.389580Z'\n                    dt_modified: '2019-07-19T23:23:30.902210Z'\n                    organization: curb\n                    label: HVAC2 Master Downstairs\n                    number: 1\n                    circuit_type: consumption\n                    multiplier: 2\n                    inverted: false\n                    installation: crhs5ma2\n                    clamp_definition: XIAMEN30\n                    group: 0\n                    channel: 1\n                    grid: false\n                    production: false\n                    battery: false\n                    circuit_number: 13\n                  - id: 9dade1b9-e01d-4724-9e96-b42e6ba210d2\n                    dt_created: '2018-04-25T19:19:33.492263Z'\n                    dt_modified: '2019-07-19T23:23:48.259279Z'\n                    organization: curb\n                    label: Water Heater\n                    number: 2\n                    circuit_type: consumption\n                    multiplier: 2\n                    inverted: false\n                    installation: crhs5ma2\n                    clamp_definition: XIAMEN30\n                    group: 0\n                    channel: 2\n                    grid: false\n                    production: false\n                    battery: false\n                    circuit_number: 8\n                  - id: ff88d41a-2378-44fb-acc6-5f26a70b872a\n                    dt_created: '2018-04-25T19:19:33.619658Z'\n                    dt_modified: '2019-01-18T00:12:47.574238Z'\n                    organization: curb\n                    label: Master Lgt Out\n                    number: 3\n                    circuit_type: consumption\n                    multiplier: 1\n                    inverted: false\n                    installation: crhs5ma2\n                    clamp_definition: XIAMEN30\n                    group: 0\n                    channel: 3\n                    grid: false\n                    production: false\n                    battery: false\n                    circuit_number: 16\n                  - id: e6505f03-ef05-4590-91a6-4d694bcde87c\n                    dt_created: '2018-04-25T19:19:33.750621Z'\n                    dt_modified: '2019-04-06T16:30:20.145982Z'\n                    organization: curb\n                    label: LR Lgt/LR SR Out\n                    number: 4\n                    circuit_type: consumption\n                    multiplier: 1\n                    inverted: false\n                    installation: crhs5ma2\n                    clamp_definition: XIAMEN30\n                    group: 0\n                    channel: 4\n                    grid: false\n                    production: false\n                    battery: false\n                    circuit_number: 20\n                  - id: a03c9b7a-dbf9-4ac2-8c06-040096dff964\n                    dt_created: '2018-04-25T19:19:33.857545Z'\n                    dt_modified: '2019-07-19T23:32:13.265039Z'\n                    organization: curb\n                    label: Main A\n                    number: 5\n                    circuit_type: main\n                    multiplier: 1\n                    inverted: false\n                    installation: crhs5ma2\n                    clamp_definition: XIAMEN100\n                    group: 0\n                    channel: 5\n                    grid: true\n                    production: false\n                    battery: false\n                    circuit_number: 21\n                  - id: 5bff5b13-9ab5-4cf7-816d-779be9130870\n                    dt_created: '2018-05-05T20:36:16.149460Z'\n                    dt_modified: '2019-07-19T23:25:28.483046Z'\n                    organization: curb\n                    label: Dryer\n                    number: 6\n                    circuit_type: consumption\n                    multiplier: 2\n                    inverted: false\n                    installation: crhs5ma2\n                    clamp_definition: XIAMEN50\n                    group: 1\n                    channel: 0\n                    grid: false\n                    production: false\n                    battery: false\n                    circuit_number:\n                  - id: 5e0c1180-4172-402d-ad83-3e4b0a4cd5a5\n                    dt_created: '2018-04-25T19:19:33.950872Z'\n                    dt_modified: '2019-07-19T23:25:50.787879Z'\n                    organization: curb\n                    label: Washing Machine\n                    number: 7\n                    circuit_type: consumption\n                    multiplier: 1\n                    inverted: false\n                    installation: crhs5ma2\n                    clamp_definition: XIAMEN30\n                    group: 1\n                    channel: 1\n                    grid: false\n                    production: false\n                    battery: false\n                    circuit_number: 1\n                  - id: a7fdf8c2-5f65-402a-ad13-5bcf5991ca6d\n                    dt_created: '2018-04-25T19:19:34.157020Z'\n                    dt_modified: '2019-07-19T23:26:12.194469Z'\n                    organization: curb\n                    label: EVSE\n                    number: 8\n                    circuit_type: consumption\n                    multiplier: 2\n                    inverted: false\n                    installation: crhs5ma2\n                    clamp_definition: XIAMEN50\n                    group: 1\n                    channel: 2\n                    grid: false\n                    production: false\n                    battery: false\n                    circuit_number: 14\n                  - id: b60e3fb0-9f95-41b4-9745-15065c75173e\n                    dt_created: '2018-04-25T19:19:34.260954Z'\n                    dt_modified: '2019-07-19T23:26:43.768516Z'\n                    organization: curb\n                    label: Refrig MW DW\n                    number: 9\n                    circuit_type: consumption\n                    multiplier: 1\n                    inverted: false\n                    installation: crhs5ma2\n                    clamp_definition: XIAMEN30\n                    group: 1\n                    channel: 3\n                    grid: false\n                    production: false\n                    battery: false\n                    circuit_number: 3\n                  - id: 54307de7-2396-4f47-ae88-40d7923ad047\n                    dt_created: '2018-04-25T19:19:34.386771Z'\n                    dt_modified: '2020-02-07T21:49:53.746539Z'\n                    organization: curb\n                    label: PowerWall B\n                    number: 10\n                    circuit_type: breaker_side_battery\n                    multiplier: 2\n                    inverted: false\n                    installation: crhs5ma2\n                    clamp_definition: XIAMEN30\n                    group: 1\n                    channel: 4\n                    grid: false\n                    production: false\n                    battery: true\n                    circuit_number: 5\n                  - id: '08018513-b603-485e-9626-9b9a035f20c0'\n                    dt_created: '2018-04-25T19:19:34.520272Z'\n                    dt_modified: '2019-01-20T01:39:06.050297Z'\n                    organization: curb\n                    label: Off Gst Kit DR SR Lgt\n                    number: 11\n                    circuit_type: consumption\n                    multiplier: 1\n                    inverted: false\n                    installation: crhs5ma2\n                    clamp_definition: XIAMEN30\n                    group: 1\n                    channel: 5\n                    grid: false\n                    production: false\n                    battery: false\n                    circuit_number: 7\n                  - id: 4bd5ac09-7df6-4120-8982-e1d57f4b61c2\n                    dt_created: '2018-04-25T19:19:34.642976Z'\n                    dt_modified: '2019-07-19T23:28:25.162138Z'\n                    organization: curb\n                    label: Dining Out\n                    number: 12\n                    circuit_type: consumption\n                    multiplier: 1\n                    inverted: false\n                    installation: crhs5ma2\n                    clamp_definition: XIAMEN30\n                    group: 2\n                    channel: 0\n                    grid: false\n                    production: false\n                    battery: false\n                    circuit_number: 4\n                  - id: ee67b067-2a22-4712-ad3a-56a71c40a736\n                    dt_created: '2018-04-25T19:19:35.013548Z'\n                    dt_modified: '2019-07-19T23:28:44.350430Z'\n                    organization: curb\n                    label: Kitchen Out\n                    number: 13\n                    circuit_type: consumption\n                    multiplier: 1\n                    inverted: false\n                    installation: crhs5ma2\n                    clamp_definition: XIAMEN30\n                    group: 2\n                    channel: 1\n                    grid: false\n                    production: false\n                    battery: false\n                    circuit_number: 6\n                  - id: 82c275da-942f-486c-9c84-f908d0ee4add\n                    dt_created: '2018-04-25T19:19:35.532341Z'\n                    dt_modified: '2019-07-19T23:29:09.757005Z'\n                    organization: curb\n                    label: Stove\n                    number: 14\n                    circuit_type: consumption\n                    multiplier: 2\n                    inverted: false\n                    installation: crhs5ma2\n                    clamp_definition: XIAMEN50\n                    group: 2\n                    channel: 2\n                    grid: false\n                    production: false\n                    battery: false\n                    circuit_number:\n                  - id: 4f42c600-f114-428d-938f-80fc659a08b4\n                    dt_created: '2018-04-25T19:19:35.666843Z'\n                    dt_modified: '2019-07-19T23:29:43.454398Z'\n                    organization: curb\n                    label: Bath Carport Out\n                    number: 15\n                    circuit_type: consumption\n                    multiplier: 1\n                    inverted: false\n                    installation: crhs5ma2\n                    clamp_definition: XIAMEN30\n                    group: 3\n                    channel: 0\n                    grid: false\n                    production: false\n                    battery: false\n                    circuit_number: 8\n                  - id: 925e2cc7-4859-45fc-9126-b2f81be8c225\n                    dt_created: '2018-04-25T19:19:35.781764Z'\n                    dt_modified: '2020-10-21T19:08:48.266944Z'\n                    organization: curb\n                    label: PV\n                    number: 16\n                    circuit_type: breaker_side_production\n                    multiplier: 2\n                    inverted: false\n                    installation: crhs5ma2\n                    clamp_definition: XIAMEN50\n                    group: 3\n                    channel: 1\n                    grid: false\n                    production: true\n                    battery: false\n                    circuit_number: 5\n                  - id: 138980f0-c74d-4c82-92f9-44f29aa3e122\n                    dt_created: '2018-04-25T19:19:35.888931Z'\n                    dt_modified: '2020-08-27T20:40:43.857489Z'\n                    organization: curb\n                    label: Main B\n                    number: 17\n                    circuit_type: main\n                    multiplier: 1\n                    inverted: false\n                    installation: crhs5ma2\n                    clamp_definition: XIAMEN100\n                    group: 3\n                    channel: 2\n                    grid: true\n                    production: false\n                    battery: false\n                    circuit_number: 7\n\n  /locations/{location_id}/query-channels:\n    get:\n      summary: List all query channels for a given location\n      description: | \n        This endpoint describes all queryable data channels for a given location.  A query channel can be a single register (which maps to a single CT sensor), a category (eg. HVAC), a phase, or a summation derived from multiple readings (eg. \"Grid net\", \"Total production\", \"Unmeasured consumption\", etc).  Here are the definitions of the `metrics` values for each query channel.  The availability of these metrics depends on the type of CT sensors of its associated registers.\n        * `p` - Real power. Watts (W)\n        * `e` - Total energy. Watt-hours (Wh)\n        * `i` - RMS current. Amperes (A)\n        * `s` - Apparent power. Volt-amperes (VA)\n        * `q` - Reactive power. Volt-amperes (var)\n        * `v` - RMS Voltage. Volts (V).  __Only available on high-accuracy sensors.__\n        * `f` - Frequency. Hertz (Hz).  __Only available on high-accuracy sensors.__\n        * `pf` - Power factor. Unitless. __Only available on high-accuracy sensors.__\n        * `th` - Standard total harmonic distortion. Percent (%). __Only available on high-accuracy sensors.__\n        * `tg` - Group total harmonic distortion. Percent (%). __Only available on high-accuracy sensors.__\n        * `ts` - Sub group total harmonic distortion. Percent (%). __Only available on high-accuracy sensors.__\n      operationId: listQueryChannelsForLocation\n      parameters:\n        - in: path\n          name: location_id\n          schema:\n            type: string\n            format: uuid\n          required: true      \n      tags:\n        - Configuration\n      responses:\n        '200':\n          description: Successful request\n          content:\n            application/json:    \n              schema:\n                type: array\n                items:\n                  $ref: \"#/components/schemas/QueryChannel\"\n              example:\n                - \n                  id: r0\n                  metrics:\n                    - p\n                    - i\n                    - s\n                    - q\n                  type: register\n                  name: Kitchen Out\n                  ref:\n                    id: ee67b067-2a22-4712-ad3a-56a71c40a736\n                    dt_created: '2018-04-25T19:19:35.013548Z'\n                    dt_modified: '2019-07-19T23:28:44.350430Z'\n                    organization: curb\n                    label: Kitchen Out\n                    number: 13\n                    circuit_type: consumption\n                    multiplier: 1\n                    inverted: false\n                    installation: crhs5ma2\n                    clamp_definition: XIAMEN30\n                    group: 2\n                    channel: 1\n                    grid: false\n                    production: false\n                    battery: false\n                    circuit_number: 6\n                - \n                  id: c0\n                  metrics:\n                    - p\n                    - i\n                    - s\n                    - q\n                  type: category\n                  name: HVAC\n                  ref:\n                    id: CoolingAndHeating\n                    name: HVAC\n                - \n                  id: s0\n                  metrics:\n                    - p\n                    - i\n                    - s\n                    - q\n                  type: summation\n                  name: Grid net\n                  ref:\n                    id: grid-net\n                    name: Grid net                    \n                    \n  /locations/{location_id}/billing:\n    get:\n      summary: Get billing info for a location\n      operationId: getLocationBilling\n      parameters:\n        - in: path\n          name: location_id\n          schema:\n            type: string\n            format: uuid\n          required: true      \n      tags:\n        - Billing\n      responses:\n        '200':\n          description: Successful request\n          content:\n            application/json:    \n              schema:\n                type: object\n                $ref: \"#/components/schemas/LocationBilling\"\n              example:\n                day_of_month: 1\n                dt_created: '2018-04-25T18:38:38.689367Z'\n                dt_modified: '2018-12-31T16:38:03.074348Z'\n                genability_account_id: 1747afc3-d399-45f8-bba4-8b0f98eda69a\n                location: fbd3b186-19f6-40c0-ab65-cd44016543b7\n                simple_currency_code: USD\n                simple_kwh_price: 0.1\n                type: simple\n                tariff:\n                  billingPeriod: \"MONTHLY\"\n                  currency: \"USD\"\n                  customerClass: null\n                  customerLikelihood: null\n                  endDate: null\n                  lseId: 1862\n                  lseName: \"Tucson Electric Power Co\"\n                  masterTariffId: 3196451\n                  tariffCode: \"TRREST\"\n                  tariffName: \"Residential Time-of-Use\"\n                  timeZone: \"America/Phoenix\"\n\n  /locations/{location_id}/historical:\n    get:\n      summary: Get historical samples for a location in a given time range\n      description: \"This endpoint is used to get time series data for a location.\n        \\n\\n\n        You must define a query range by using either `from_now_range` or both the `start` and `end` query parameters.  More on how to define that range [here](https://github.com/Curb-v2/third-party-app-integration#curb-integrations).\n        \\n\\n\n        The response schema can vary greatly depending on the `group_by` query parameter.  The default value is `timestamp` which groups all readings together by timestamp.  If you want a time series for each Register in the location, use a `group_by` parameter of `register`\n        \\n\\n\n        \"\n      operationId: getHistoricalForLocation\n      tags:\n        - Historical\n      parameters:\n        - in: path\n          name: location_id\n          schema:\n            type: string\n            format: uuid\n          required: true  \n        - in: query\n          name: resolution\n          schema:\n            type: string\n            enum: [m, 5m, h, d]\n          description: The sample resolution for the query.  These are fixed to the `m` for minutes, `5m` for five minutes, `h` for hours, and `d` for days.  If omitted, the coarsest (largest) resolution that effectively covers the queried range will be used.\n        - in: query\n          name: interval_size\n          schema:\n            type: string\n          description: \"\n            This parameter specifies a custom interval duration for the timeseries response.  Use this if you want to use an interval size that does __not__ match one of our fixed data resolutions.  Importantly, when you use a \\\"resolution\\\" value of `d`, that represents a midnight to midnight day in UTC, not in the local timezone.  However, if you use an \\\"interval_size\\\" of `1d`, it will create intervals localized to the location's timezone.  The same applies for weeks or months.\n            \\n\\n\n            When omitted, the API will return time series intervals matching the \\\"resolution\\\" of the request.  However, when using a \\\"resolution\\\" of \\\"d\\\", those samples are always representing a day in UTC.\n            \\n\\n\n            Using this parameter has implications with `page_size`, please check the `page_size` docs below.\"\n          examples:\n            15m:\n              summary: 15-minute intervals\n              value: \"15m\"\n            1d:\n              summary: 1-day intervals\n              value: \"1d\"\n            2w:\n              summary: 2-week intervals\n              value: \"2w\"\n        - in: query\n          name: describe_intervals\n          schema:\n            type: boolean\n            default: true\n          description: \"\n            When set to true, this will include an array of the interval bands used for this request.  \n            \\n\\n\n            This parameter is only applicable when `interval_size` is used.  See more details on the HistoricalTimeSeriesResponse schema\"              \n        - in: query\n          name: from_now_range\n          schema:\n            type: string\n          description: \"\n            A shorthand option for describing a date range from the current time.  For example \\\"3h\\\" will query for a date range of 3 hours ago to now, \\\"1mo\\\" will query from one month (30 days) ago to now.  More on time ranges in our full API docs.\n            \\n\\n\n            Required if not using `start` and `end` to describe a range.\"\n        - in: query\n          name: start\n          schema:\n            oneOf:\n              - type: integer\n                format: unix-timestamp\n              - type: string\n                format: date-time\n          description: \"\n            A date-time string describing the start of the range to query.  \n            \\n\\n\n            Historical samples are stored with the timestamp representing the __start__ of the range they are measuring.  For example, an hourly average sample measuring between 10:00am - 11:00am will be tagged with the timestamp of 10am.\n            \\n\\n\n            Therefore, if you use a `start` query of 10:01am, that will __not__ include the 10:00am - 11:00am averaged sample.\n            \\n\\n\n            Required if not using `from_now_range`\"\n          examples:\n            timestamp: \n              summary: Using a unix timestamp\n              value: 1638982800\n            dateTime:\n              summary: Using a date time ISO string\n              value: '2021-12-08T17:00:00.000Z'  \n        - in: query\n          name: end\n          schema:\n            oneOf:\n              - type: integer\n                format: unix-timestamp\n              - type: string\n                format: date-time\n          description: \"\n            A date-time string describing the end of the range to query.  \n            \\n\\n\n            Historical samples are stored with the timestamp representing the __start__ of the range they are measuring.  For example, an hourly average sample measuring between 10:00am - 11:00am will be tagged with the timestamp of 10am.\n            \\n\\n\n            Therefore, if you use an `end` query of 10:00am, that __will__ include the entirety of 10:00am - 11:00am averaged sample.\n            \\n\\n\n            Required if not using `from_now_range`\"\n          examples:\n            timestamp: \n              summary: Using a unix timestamp\n              value: 1638982800\n            dateTime:\n              summary: Using a date time ISO string\n              value: '2021-12-08T17:00:00.000Z'\n        - in: query\n          name: page_size\n          schema:\n            type: integer\n            default: 500\n            minimum: 1\n            maximum: 1000\n          description: \"\n            The maximum number of items to query.  If this number is smaller than the number of items in the queried range, the response will be paginated using `next` and `previous` URLs.\n            \\n\\n\n            This value refers to the number of underlying items to request, but if you use this in conjunction with `interval_size`, the number of items in the response can be smaller than `page_size`.  For example, if using an `interval_size` of `20m` and a `page_size` of `500`, the API will fetch 500 5-minute intervals from which to aggregate into only 125 20-minute averaged intervals.\"\n        - in: query\n          name: metrics\n          schema:\n            type: string\n            enum: [w, kwh, i, cost, cost_30d]\n            default: w\n          description: By default, the only quantitative metric that will be returned is power (watts).  You can also query \"i\" to query current (amps), \"kwh\" to query energy over the duration of the sample period, \"cost\" over the sample period\", and `cost_30d` which will use the location's utility information to compute a 30-day cost for a given power usage.  You can specify multiple metrics by comma-separating the different values (eg. \"w,kwh,cost_30d\")\n        - in: query\n          name: include_totals\n          schema:\n            type: boolean\n            default: false\n          allowEmptyValue: true\n          description: When true, this parameter tells the API to include totals in the response.  These totals include `net` (net grid impact) and `cons` (consumption), and possibly `prod` (production) and `batt` (battery) if those services are enabled at the location.\n        - in: query\n          name: include_cost\n          schema:\n            type: boolean\n            default: false\n          allowEmptyValue: true\n          description: When true, this parameter tells the API to calculate an estimated 30-day cost for each register in the response.  Setting this to true is equivalent to adding \"cost,cost_30d\" into the `metrics` parameter.  A negative cost should be interpreted as a credit.\n        - in: query\n          name: group_by\n          schema:\n            type: string\n            enum: [register, timestamp, category]\n            default: timestamp\n          description: \"\n            This parameter determines how the returned data is organized.  The default is \\\"timestamp\\\" which is typically the most compact historical data format.  \n            \\n\\n\n            If you want to easily access data grouped by \\\"register\\\", perhaps for consumers who only want to examine a subset of registers, or would like to create a per-register visualization.\n            \\n\\n\n            There is also \\\"category\\\" which is similar, but registers of the same category are grouped together and their values summed.\n            \\n\\n\n            Using \\\"timestamp\\\" will group together all data for a given timestamp.  This is typically the most compact historical data format.\"\n        # - in: query\n        #   name: fill_all_gaps\n        #   schema:\n        #     type: boolean\n        #     default: false\n        #   allowEmptyValue: true\n        #   description: \"\n        #     This option tells the API how to handle gaps in the data for the defined range.  If true, this will force the API to return a synthetic time series object for every timestamp in the defined range/resolution.  Some consumers may wish to have some value returned for 100% of the queried range, which is what this parameter does.\n        #     \\n\\n\n        #     Without this parameter, the API will not include any synthetic time series objects for times that we have no data.  However, bear in mind that for locations which have more than one Curb device, it is possible to have \\\"partial\\\" gaps, which is when there is data for some hubs and not others for a given timestamp.  These partial gaps will always be filled regardless of if `fill_all_gaps` is true.\n        #     \\n\\n\n        #     This parameter is often used in combination with the `interpolate` parameter to ensure numeric data is returned for every timestamp in the queried range.\"\n        - in: query\n          name: interpolate\n          schema:\n            type: boolean\n            default: false\n          allowEmptyValue: true\n          description: \"\n            This option tells the API what values it should use when creating a synthetic time series object.  Synthetic time series objects are created for when there is missing data for one or more devices in a location.\n            \\n\\n\n            When this parameter is false (as it is by default), all numeric values in synthetic time series objects will be set to `null`.  When this parameter is true, all numeric values in time series objects will be interpolated from nearby real data.\n            \\n\\n\n            This parameter is often used in combination with the `fill_all_gaps` parameter to ensure numeric data is returned for every timestamp in the queried range.\"\n        - in: query\n          name: omit_registers\n          schema:\n            type: boolean\n            default: false\n          allowEmptyValue: true\n          description: Set to true in order to omit the \\\"registers\\\" array from the response.  This can significantly reduce the response size.\n        - in: query\n          name: omit_units\n          schema:\n            type: boolean\n            default: false\n          allowEmptyValue: true\n          description: Set to true in order to omit the \\\"units\\\" array from the response.\"\n      responses: \n        '200':\n          description: Successful request\n          content:\n            application/json:    \n              schema:\n                $ref: '#/components/schemas/HistoricalTimeSeriesResponse'            \n              examples:\n                group_by=timestamp:\n                  value:\n                    count: 3\n                    real_samples_count: 3\n                    synthetic_samples_count: 0\n                    previous: null,\n                    next: null,\n                    start: 1639936800\n                    end: 1639937699\n                    interval_seconds: 300\n                    resolution: 5m\n                    hubs:\n                    - crhs5ma2\n                    units:\n                    - key: w\n                      name: real power\n                      unit: W\n                    registers:\n                    - id: 834a9909-f367-4987-9601-725d705d6dd8\n                      label: Main A Phase\n                      group: 0\n                      channel: 0\n                      grid: true\n                      production: false\n                      battery: false\n                    - id: 3ab156f8-d5b2-4587-963b-dd21cb9a1da5\n                      label: Solar A Phase\n                      group: 0\n                      channel: 1\n                      grid: false\n                      production: true\n                      battery: false\n                    - id: a7d66f16-79d0-46aa-b4f9-33095dfc1586\n                      label:\n                      group: 0\n                      channel: 2\n                      grid: false\n                      production: false\n                      battery: false\n                    - id: 36787ec9-dbbd-49cc-ae78-dbbf0f5308e4\n                      label: HVAC compressor\n                      group: 0\n                      channel: 3\n                      grid: false\n                      production: false\n                      battery: false\n                    - id: e4f10942-47bb-4894-84c5-04666fc8cab7\n                      label:\n                      group: 0\n                      channel: 4\n                      grid: false\n                      production: false\n                      battery: false\n                    - id: 939f08bd-f3c7-4e7f-a8b2-f63d8c3ecaed\n                      label:\n                      group: 0\n                      channel: 5\n                      grid: false\n                      production: false\n                      battery: false\n                    - id: 80fed2bc-840f-4395-8dca-585523884953\n                      label: Main B Phase\n                      group: 1\n                      channel: 0\n                      grid: true\n                      production: false\n                      battery: false\n                    - id: b4260e18-66a5-4cf8-bece-5b50e23ef4b3\n                      label: Solar B Phase\n                      group: 1\n                      channel: 1\n                      grid: false\n                      production: true\n                      battery: false\n                    - id: cb104ac5-3ddd-4b14-8153-3e8475bc7672\n                      label:\n                      group: 1\n                      channel: 2\n                      grid: false\n                      production: false\n                      battery: false\n                    - id: ec2158d7-8085-4aac-96c9-a939b5c5c8ca\n                      label:\n                      group: 1\n                      channel: 3\n                      grid: false\n                      production: false\n                      battery: false\n                    - id: 45ab969e-0457-4e06-8bd5-df8ad8a634d9\n                      label:\n                      group: 1\n                      channel: 4\n                      grid: false\n                      production: false\n                      battery: false\n                    - id: 49e1624a-ce44-4fa8-8ce7-26ea6b57a6eb\n                      label:\n                      group: 1\n                      channel: 5\n                      grid: false\n                      production: false\n                      battery: false\n                    - id: ea626128-24b5-458a-b3ab-348eb2024c86\n                      label:\n                      group: 2\n                      channel: 0\n                      grid: false\n                      production: false\n                      battery: false\n                    - id: 7cfe8a54-cfdf-43f0-93b2-6bb6f4b55254\n                      label:\n                      group: 2\n                      channel: 1\n                      grid: false\n                      production: false\n                      battery: false\n                    - id: 03021d86-0dc3-4b5d-a3dc-537949127b3c\n                      label:\n                      group: 2\n                      channel: 2\n                      grid: false\n                      production: false\n                      battery: false\n                    - id: 29f0239f-c53a-4ebe-8641-861c13ed15b1\n                      label:\n                      group: 3\n                      channel: 0\n                      grid: false\n                      production: false\n                      battery: false\n                    - id: 75659e6f-2767-4bfe-ba94-3e0f2d58ec0b\n                      label:\n                      group: 3\n                      channel: 1\n                      grid: false\n                      production: false\n                      battery: false\n                    - id: dbd87692-f0d4-48be-8086-e8fe11ca79a6\n                      label:\n                      group: 3\n                      channel: 2\n                      grid: false\n                      production: false\n                      battery: false\n                    - id: __OTHER__\n                      label: Other\n                      grid: false\n                      production: false\n                      battery: false\n                      other: true\n                    results:\n                    - t: 1639936800\n                      r:\n                        w:\n                        - -529\n                        - -666\n                        - 0\n                        - 0\n                        - 0\n                        - 0\n                        - -569\n                        - -673\n                        - 0\n                        - 0\n                        - 0\n                        - 0\n                        - 0\n                        - 0\n                        - 0\n                        - 0\n                        - 0\n                        - 0\n                        - 241\n                      tot:\n                        net:\n                          w: -1098\n                        cons:\n                          w: 241\n                        prod:\n                          w: -1339\n                    - t: 1639937100\n                      r:\n                        w:\n                        - -508\n                        - -684\n                        - 0\n                        - 0\n                        - 0\n                        - 0\n                        - -583\n                        - -691\n                        - 0\n                        - 0\n                        - 0\n                        - 0\n                        - 0\n                        - 0\n                        - 0\n                        - 0\n                        - 0\n                        - 0\n                        - 284\n                      tot:\n                        net:\n                          w: -1091\n                        cons:\n                          w: 284\n                        prod:\n                          w: -1375\n                    - t: 1639937400\n                      r:\n                        w:\n                        - -461\n                        - -792\n                        - 0\n                        - 0\n                        - 0\n                        - 0\n                        - -691\n                        - -796\n                        - 0\n                        - 0\n                        - 0\n                        - 0\n                        - 0\n                        - 0\n                        - 0\n                        - 0\n                        - 0\n                        - 0\n                        - 436\n                      tot:\n                        net:\n                          w: -1152\n                        cons:\n                          w: 436\n                        prod:\n                          w: -1588\n                group_by=register:\n                  value:\n                    count: 3\n                    real_samples_count: 3\n                    synthetic_samples_count: 0\n                    previous: null,\n                    next: null,\n                    start: 1639936800\n                    end: 1639937699\n                    interval_seconds: 300                    \n                    resolution: 5m\n                    hubs:\n                    - crhs5ma2\n                    units:\n                    - key: w\n                      name: real power\n                      unit: W\n                    results:\n                      registers:\n                      - register:\n                          id: 834a9909-f367-4987-9601-725d705d6dd8\n                          label: Main A Phase\n                          group: 0\n                          channel: 0\n                          grid: true\n                          production: false\n                          battery: false\n                        values:\n                        - unit: w\n                          series:\n                          - - 1639936800\n                            - -529\n                          - - 1639937100\n                            - -508\n                          - - 1639937400\n                            - -461\n                      - register:\n                          id: 3ab156f8-d5b2-4587-963b-dd21cb9a1da5\n                          label: Solar A Phase\n                          group: 0\n                          channel: 1\n                          grid: false\n                          production: true\n                          battery: false\n                        values:\n                        - unit: w\n                          series:\n                          - - 1639936800\n                            - -666\n                          - - 1639937100\n                            - -684\n                          - - 1639937400\n                            - -792\n                      - register:\n                          id: a7d66f16-79d0-46aa-b4f9-33095dfc1586\n                          label:\n                          group: 0\n                          channel: 2\n                          grid: false\n                          production: false\n                          battery: false\n                        values:\n                        - unit: w\n                          series:\n                          - - 1639936800\n                            - 0\n                          - - 1639937100\n                            - 0\n                          - - 1639937400\n                            - 0\n                      - register:\n                          id: 36787ec9-dbbd-49cc-ae78-dbbf0f5308e4\n                          label: HVAC compressor\n                          group: 0\n                          channel: 3\n                          grid: false\n                          production: false\n                          battery: false\n                        values:\n                        - unit: w\n                          series:\n                          - - 1639936800\n                            - 0\n                          - - 1639937100\n                            - 0\n                          - - 1639937400\n                            - 0\n                      - register:\n                          id: e4f10942-47bb-4894-84c5-04666fc8cab7\n                          label:\n                          group: 0\n                          channel: 4\n                          grid: false\n                          production: false\n                          battery: false\n                        values:\n                        - unit: w\n                          series:\n                          - - 1639936800\n                            - 0\n                          - - 1639937100\n                            - 0\n                          - - 1639937400\n                            - 0\n                      - register:\n                          id: 939f08bd-f3c7-4e7f-a8b2-f63d8c3ecaed\n                          label:\n                          group: 0\n                          channel: 5\n                          grid: false\n                          production: false\n                          battery: false\n                        values:\n                        - unit: w\n                          series:\n                          - - 1639936800\n                            - 0\n                          - - 1639937100\n                            - 0\n                          - - 1639937400\n                            - 0\n                      - register:\n                          id: 80fed2bc-840f-4395-8dca-585523884953\n                          label: Main B Phase\n                          group: 1\n                          channel: 0\n                          grid: true\n                          production: false\n                          battery: false\n                        values:\n                        - unit: w\n                          series:\n                          - - 1639936800\n                            - -569\n                          - - 1639937100\n                            - -583\n                          - - 1639937400\n                            - -691\n                      - register:\n                          id: b4260e18-66a5-4cf8-bece-5b50e23ef4b3\n                          label: Solar B Phase\n                          group: 1\n                          channel: 1\n                          grid: false\n                          production: true\n                          battery: false\n                        values:\n                        - unit: w\n                          series:\n                          - - 1639936800\n                            - -673\n                          - - 1639937100\n                            - -691\n                          - - 1639937400\n                            - -796\n                      - register:\n                          id: cb104ac5-3ddd-4b14-8153-3e8475bc7672\n                          label:\n                          group: 1\n                          channel: 2\n                          grid: false\n                          production: false\n                          battery: false\n                        values:\n                        - unit: w\n                          series:\n                          - - 1639936800\n                            - 0\n                          - - 1639937100\n                            - 0\n                          - - 1639937400\n                            - 0\n                      - register:\n                          id: ec2158d7-8085-4aac-96c9-a939b5c5c8ca\n                          label:\n                          group: 1\n                          channel: 3\n                          grid: false\n                          production: false\n                          battery: false\n                        values:\n                        - unit: w\n                          series:\n                          - - 1639936800\n                            - 0\n                          - - 1639937100\n                            - 0\n                          - - 1639937400\n                            - 0\n                      - register:\n                          id: 45ab969e-0457-4e06-8bd5-df8ad8a634d9\n                          label:\n                          group: 1\n                          channel: 4\n                          grid: false\n                          production: false\n                          battery: false\n                        values:\n                        - unit: w\n                          series:\n                          - - 1639936800\n                            - 0\n                          - - 1639937100\n                            - 0\n                          - - 1639937400\n                            - 0\n                      - register:\n                          id: 49e1624a-ce44-4fa8-8ce7-26ea6b57a6eb\n                          label:\n                          group: 1\n                          channel: 5\n                          grid: false\n                          production: false\n                          battery: false\n                        values:\n                        - unit: w\n                          series:\n                          - - 1639936800\n                            - 0\n                          - - 1639937100\n                            - 0\n                          - - 1639937400\n                            - 0\n                      - register:\n                          id: ea626128-24b5-458a-b3ab-348eb2024c86\n                          label:\n                          group: 2\n                          channel: 0\n                          grid: false\n                          production: false\n                          battery: false\n                        values:\n                        - unit: w\n                          series:\n                          - - 1639936800\n                            - 0\n                          - - 1639937100\n                            - 0\n                          - - 1639937400\n                            - 0\n                      - register:\n                          id: 7cfe8a54-cfdf-43f0-93b2-6bb6f4b55254\n                          label:\n                          group: 2\n                          channel: 1\n                          grid: false\n                          production: false\n                          battery: false\n                        values:\n                        - unit: w\n                          series:\n                          - - 1639936800\n                            - 0\n                          - - 1639937100\n                            - 0\n                          - - 1639937400\n                            - 0\n                      - register:\n                          id: 03021d86-0dc3-4b5d-a3dc-537949127b3c\n                          label:\n                          group: 2\n                          channel: 2\n                          grid: false\n                          production: false\n                          battery: false\n                        values:\n                        - unit: w\n                          series:\n                          - - 1639936800\n                            - 0\n                          - - 1639937100\n                            - 0\n                          - - 1639937400\n                            - 0\n                      - register:\n                          id: 29f0239f-c53a-4ebe-8641-861c13ed15b1\n                          label:\n                          group: 3\n                          channel: 0\n                          grid: false\n                          production: false\n                          battery: false\n                        values:\n                        - unit: w\n                          series:\n                          - - 1639936800\n                            - 0\n                          - - 1639937100\n                            - 0\n                          - - 1639937400\n                            - 0\n                      - register:\n                          id: 75659e6f-2767-4bfe-ba94-3e0f2d58ec0b\n                          label:\n                          group: 3\n                          channel: 1\n                          grid: false\n                          production: false\n                          battery: false\n                        values:\n                        - unit: w\n                          series:\n                          - - 1639936800\n                            - 0\n                          - - 1639937100\n                            - 0\n                          - - 1639937400\n                            - 0\n                      - register:\n                          id: dbd87692-f0d4-48be-8086-e8fe11ca79a6\n                          label:\n                          group: 3\n                          channel: 2\n                          grid: false\n                          production: false\n                          battery: false\n                        values:\n                        - unit: w\n                          series:\n                          - - 1639936800\n                            - 0\n                          - - 1639937100\n                            - 0\n                          - - 1639937400\n                            - 0\n                      - register:\n                          id: __OTHER__\n                          label: Other\n                          grid: false\n                          production: false\n                          battery: false\n                          other: true\n                        values:\n                        - unit: w\n                          series:\n                          - - 1639936800\n                            - 241\n                          - - 1639937100\n                            - 284\n                          - - 1639937400\n                            - 436\n                      totals:\n                      - type: net\n                        values:\n                        - unit: w\n                          series:\n                          - - 1639936800\n                            - -1098\n                          - - 1639937100\n                            - -1091\n                          - - 1639937400\n                            - -1152\n                      - type: cons\n                        values:\n                        - unit: w\n                          series:\n                          - - 1639936800\n                            - 241\n                          - - 1639937100\n                            - 284\n                          - - 1639937400\n                            - 436\n                      - type: prod\n                        values:\n                        - unit: w\n                          series:\n                          - - 1639936800\n                            - -1339\n                          - - 1639937100\n                            - -1375\n                          - - 1639937400\n                            - -1588\n                interval_size=1d:\n                  value:\n                    count: 4\n                    real_samples_count: 90\n                    synthetic_samples_count: 0\n                    start: 1659934800\n                    end: 1660258799\n                    previous:\n                    next:\n                    resolution: h\n                    resolution_seconds: 3600\n                    hubs:\n                    - crhs5ma2\n                    units:\n                    - key: w\n                      name: real power\n                      unit: W\n                    registers:\n                    - id: 834a9909-f367-4987-9601-725d705d6dd8\n                      label: Main A Phase\n                      group: 0\n                      channel: 0\n                      grid: true\n                      production: false\n                      battery: false\n                      circuit_type: main\n                    - id: 3ab156f8-d5b2-4587-963b-dd21cb9a1da5\n                      label: Solar A Phase\n                      group: 0\n                      channel: 1\n                      grid: false\n                      production: true\n                      battery: false\n                      circuit_type: breaker_side_production\n                    - id: a7d66f16-79d0-46aa-b4f9-33095dfc1586\n                      label:\n                      group: 0\n                      channel: 2\n                      grid: false\n                      production: false\n                      battery: false\n                      circuit_type: consumption\n                    - id: 36787ec9-dbbd-49cc-ae78-dbbf0f5308e4\n                      label: HVAC compressor\n                      group: 0\n                      channel: 3\n                      grid: false\n                      production: false\n                      battery: false\n                      circuit_type: consumption\n                    - id: e4f10942-47bb-4894-84c5-04666fc8cab7\n                      label:\n                      group: 0\n                      channel: 4\n                      grid: false\n                      production: false\n                      battery: false\n                      circuit_type: consumption\n                    - id: 939f08bd-f3c7-4e7f-a8b2-f63d8c3ecaed\n                      label:\n                      group: 0\n                      channel: 5\n                      grid: false\n                      production: false\n                      battery: false\n                      circuit_type: consumption\n                    - id: 80fed2bc-840f-4395-8dca-585523884953\n                      label: Main B Phase\n                      group: 1\n                      channel: 0\n                      grid: true\n                      production: false\n                      battery: false\n                      circuit_type: main\n                    - id: b4260e18-66a5-4cf8-bece-5b50e23ef4b3\n                      label: Solar B Phase\n                      group: 1\n                      channel: 1\n                      grid: false\n                      production: true\n                      battery: false\n                      circuit_type: breaker_side_production\n                    - id: cb104ac5-3ddd-4b14-8153-3e8475bc7672\n                      label:\n                      group: 1\n                      channel: 2\n                      grid: false\n                      production: false\n                      battery: false\n                      circuit_type: consumption\n                    - id: ec2158d7-8085-4aac-96c9-a939b5c5c8ca\n                      label:\n                      group: 1\n                      channel: 3\n                      grid: false\n                      production: false\n                      battery: false\n                      circuit_type: consumption\n                    - id: 45ab969e-0457-4e06-8bd5-df8ad8a634d9\n                      label:\n                      group: 1\n                      channel: 4\n                      grid: false\n                      production: false\n                      battery: false\n                      circuit_type: consumption\n                    - id: 49e1624a-ce44-4fa8-8ce7-26ea6b57a6eb\n                      label:\n                      group: 1\n                      channel: 5\n                      grid: false\n                      production: false\n                      battery: false\n                      circuit_type: consumption\n                    - id: ea626128-24b5-458a-b3ab-348eb2024c86\n                      label:\n                      group: 2\n                      channel: 0\n                      grid: false\n                      production: false\n                      battery: false\n                      circuit_type: consumption\n                    - id: 7cfe8a54-cfdf-43f0-93b2-6bb6f4b55254\n                      label:\n                      group: 2\n                      channel: 1\n                      grid: false\n                      production: false\n                      battery: false\n                      circuit_type: consumption\n                    - id: 03021d86-0dc3-4b5d-a3dc-537949127b3c\n                      label:\n                      group: 2\n                      channel: 2\n                      grid: false\n                      production: false\n                      battery: false\n                      circuit_type: consumption\n                    - id: 29f0239f-c53a-4ebe-8641-861c13ed15b1\n                      label:\n                      group: 3\n                      channel: 0\n                      grid: false\n                      production: false\n                      battery: false\n                      circuit_type: consumption\n                    - id: 75659e6f-2767-4bfe-ba94-3e0f2d58ec0b\n                      label:\n                      group: 3\n                      channel: 1\n                      grid: false\n                      production: false\n                      battery: false\n                      circuit_type: consumption\n                    - id: dbd87692-f0d4-48be-8086-e8fe11ca79a6\n                      label:\n                      group: 3\n                      channel: 2\n                      grid: false\n                      production: false\n                      battery: false\n                      circuit_type: consumption\n                    - id: __OTHER__\n                      label: Other\n                      grid: false\n                      production: false\n                      battery: false\n                      other: true\n                      circuit_type: other\n                    results:\n                    - t: 1659934800\n                      r:\n                        w:\n                        - 251.25\n                        - -270.125\n                        - 0\n                        - 651.833\n                        - 0\n                        - 0\n                        - 247.708\n                        - -273.375\n                        - 0\n                        - 0\n                        - 0\n                        - 0\n                        - 0\n                        - 0\n                        - 0\n                        - 0\n                        - 0\n                        - 0\n                        - 390.625\n                      tot:\n                        net:\n                          w: 498.958\n                        cons:\n                          w: 1042.46\n                        prod:\n                          w: -543.5\n                    - t: 1660021200\n                      r:\n                        w:\n                        - 242.75\n                        - -330.917\n                        - 0\n                        - 709.792\n                        - 0\n                        - 0\n                        - 230.417\n                        - -334.917\n                        - 0\n                        - 0\n                        - 0\n                        - 0\n                        - 0\n                        - 0\n                        - 0\n                        - 0\n                        - 0\n                        - 0\n                        - 429.208\n                      tot:\n                        net:\n                          w: 473.167\n                        cons:\n                          w: 1139\n                        prod:\n                          w: -665.833\n                    - t: 1660107600\n                      r:\n                        w:\n                        - 261.792\n                        - -312.917\n                        - 0\n                        - 732.917\n                        - 0\n                        - 0\n                        - 250.708\n                        - -316.375\n                        - 0\n                        - 0\n                        - 0\n                        - 0\n                        - 0\n                        - 0\n                        - 0\n                        - 0\n                        - 0\n                        - 0\n                        - 408.875\n                      tot:\n                        net:\n                          w: 512.5\n                        cons:\n                          w: 1141.79\n                        prod:\n                          w: -629.292\n                    - t: 1660194000\n                      r:\n                        w:\n                        - 115.875\n                        - -280.958\n                        - 0\n                        - 504.958\n                        - 0\n                        - 0\n                        - 105.875\n                        - -283.667\n                        - 0\n                        - 0\n                        - 0\n                        - 0\n                        - 0\n                        - 0\n                        - 0\n                        - 0\n                        - 0\n                        - 0\n                        - 281.417\n                      tot:\n                        net:\n                          w: 221.75\n                        cons:\n                          w: 786.375\n                        prod:\n                          w: -564.625\n\n        '400':\n          description: Bad request\n        '404':\n          description: No historical data found\n\n  /locations/{location_id}/historical/latest:\n    get:\n      summary: Get the latest historical sample for a location\n      description: \"This endpoint is the same as the `/locations/{location_id}/historical` endpoint, but it only returns the most recent sample for the given resolution.  The default resolution is minutes.  It does not require a date range query.\n        \\n\\n\n        Use `check_hub_online` parameter to allow data for offline hubs to be returned\n        \"\n      operationId: getHistoricalLatestForLocation\n      tags:\n        - Historical\n      parameters:\n        - in: path\n          name: location_id\n          schema:\n            type: string\n            format: uuid\n          required: true  \n        - in: query\n          name: resolution\n          schema:\n            type: string\n            enum: [m, 5m, h, d]\n            default: m\n          description: The sample resolution for the query.  These are fixed to the `m` for minutes, `5m` for five minutes, `h` for hours, and `d` for days.  Default is m\n        - in: query\n          name: check_hub_online\n          schema:\n            type: boolean\n            default: false\n          allowEmptyValue: true            \n          description: If true (which is default), this will only return latest samples for devices that are online.  Set to false to allow offline hubs to be reported.\n        - in: query\n          name: metric\n          schema:\n            type: string\n            enum: [w, i, cost_30d, \"w,cost_30d\"]\n            default: w\n          description: By default, the only quantitative metric that will be returned is power (watts).  You can also query \"i\" to query current (amps), and `cost_30d` which will use the location's utility information to compute a 30d cost for a given power usage.  You can specify multiple metrics by comma-separating the different values (eg. \"w,cost_30d\")\n        - in: query\n          name: include_totals\n          schema:\n            type: boolean\n            default: false\n          allowEmptyValue: true\n          description: When true, this parameter tells the API to include totals in the response.  These totals include `net` (net grid impact) and `cons` (consumption), and possibly `prod` (production) and `batt` (battery) if those services are enabled at the location.\n        - in: query\n          name: group_by\n          schema:\n            type: string\n            enum: [register, timestamp, category]\n            default: register\n          description: \"\n            This parameter determines how the returned data is organized.  The default is \\\"register\\\", which is perhaps for consumers who only want to examine a subset of registers, or would like to create a per-register visualization.\n            \\n\\n\n            There is also \\\"category\\\" which is similar, but registers of the same category are grouped together and their values summed.\n            \\n\\n\n            Using \\\"timestamp\\\" will group together all data for a given timestamp.  This is typically the most compact historical data format.\n            \\n\\n\n            More on these formats in our full API docs\"\n        - in: query\n          name: fill_all_gaps\n          schema:\n            type: boolean\n            default: false\n          allowEmptyValue: true\n          description: \"\n            This option tells the API how to handle gaps in the data for the defined range.  If true, this will force the API to return a synthetic time series object for every timestamp in the defined range/resolution.  Some consumers may wish to have some value returned for 100% of the queried range, which is what this parameter does.\n            \\n\\n\n            Without this parameter, the API will not include any synthetic time series objects for times that we have no data.  However, bear in mind that for locations which have more than one Curb device, it is possible to have \\\"partial\\\" gaps, which is when there is data for some hubs and not others for a given timestamp.  These partial gaps will always be filled regardless of if `fill_all_gaps` is true.\n            \\n\\n\n            This parameter is often used in combination with the `interpolate` parameter to ensure numeric data is returned for every timestamp in the queried range.\"\n        - in: query\n          name: interpolate\n          schema:\n            type: boolean\n            default: false\n          allowEmptyValue: true\n          description: \"\n            This option tells the API what values it should use when creating a synthetic time series object.  Synthetic time series objects are created for \\\"partial\\\" gaps (when there is data for some hubs and not others in a multi-hub location for a given timestamp), or when the `fill_all_gaps` parameter above is set to true.\n            \\n\\n\n            When this parameter is false (as it is by default), all numeric values in synthetic time series objects will be set to `null`.  When this parameter is true, all numeric values in time series objects will be interpolated from nearby real data.\n            \\n\\n\n            This parameter is often used in combination with the `fill_all_gaps` parameter to ensure numeric data is returned for every timestamp in the queried range.\"\n        - in: query\n          name: omit_registers\n          schema:\n            type: boolean\n            default: false\n          allowEmptyValue: true\n          description: Set to true in order to omit the \\\"registers\\\" array from the response.  This can significantly reduce the response size.\n        - in: query\n          name: omit_units\n          schema:\n            type: boolean\n            default: false\n          allowEmptyValue: true\n          description: Set to true in order to omit the \\\"units\\\" array from the response.\"\n      responses: \n        '200':\n          description: Successful request\n          content:\n            application/json:    \n              example:\n                count: 1\n                real_samples_count: 1\n                synthetic_samples_count: 0\n                start: 1640144100\n                end: 1640144159\n                resolution: m\n                hubs:\n                - crhs5ma2\n                units:\n                - key: w\n                  name: real power\n                  unit: W\n                registers:\n                - id: 834a9909-f367-4987-9601-725d705d6dd8\n                  label: Main A Phase\n                  group: 0\n                  channel: 0\n                  grid: true\n                  production: false\n                  battery: false\n                - id: 3ab156f8-d5b2-4587-963b-dd21cb9a1da5\n                  label: Solar A Phase\n                  group: 0\n                  channel: 1\n                  grid: false\n                  production: true\n                  battery: false\n                - id: a7d66f16-79d0-46aa-b4f9-33095dfc1586\n                  label:\n                  group: 0\n                  channel: 2\n                  grid: false\n                  production: false\n                  battery: false\n                - id: 36787ec9-dbbd-49cc-ae78-dbbf0f5308e4\n                  label: HVAC compressor\n                  group: 0\n                  channel: 3\n                  grid: false\n                  production: false\n                  battery: false\n                - id: e4f10942-47bb-4894-84c5-04666fc8cab7\n                  label:\n                  group: 0\n                  channel: 4\n                  grid: false\n                  production: false\n                  battery: false\n                - id: 939f08bd-f3c7-4e7f-a8b2-f63d8c3ecaed\n                  label:\n                  group: 0\n                  channel: 5\n                  grid: false\n                  production: false\n                  battery: false\n                - id: 80fed2bc-840f-4395-8dca-585523884953\n                  label: Main B Phase\n                  group: 1\n                  channel: 0\n                  grid: true\n                  production: false\n                  battery: false\n                - id: b4260e18-66a5-4cf8-bece-5b50e23ef4b3\n                  label: Solar B Phase\n                  group: 1\n                  channel: 1\n                  grid: false\n                  production: true\n                  battery: false\n                - id: cb104ac5-3ddd-4b14-8153-3e8475bc7672\n                  label:\n                  group: 1\n                  channel: 2\n                  grid: false\n                  production: false\n                  battery: false\n                - id: ec2158d7-8085-4aac-96c9-a939b5c5c8ca\n                  label:\n                  group: 1\n                  channel: 3\n                  grid: false\n                  production: false\n                  battery: false\n                - id: 45ab969e-0457-4e06-8bd5-df8ad8a634d9\n                  label:\n                  group: 1\n                  channel: 4\n                  grid: false\n                  production: false\n                  battery: false\n                - id: 49e1624a-ce44-4fa8-8ce7-26ea6b57a6eb\n                  label:\n                  group: 1\n                  channel: 5\n                  grid: false\n                  production: false\n                  battery: false\n                - id: ea626128-24b5-458a-b3ab-348eb2024c86\n                  label:\n                  group: 2\n                  channel: 0\n                  grid: false\n                  production: false\n                  battery: false\n                - id: 7cfe8a54-cfdf-43f0-93b2-6bb6f4b55254\n                  label:\n                  group: 2\n                  channel: 1\n                  grid: false\n                  production: false\n                  battery: false\n                - id: 03021d86-0dc3-4b5d-a3dc-537949127b3c\n                  label:\n                  group: 2\n                  channel: 2\n                  grid: false\n                  production: false\n                  battery: false\n                - id: 29f0239f-c53a-4ebe-8641-861c13ed15b1\n                  label:\n                  group: 3\n                  channel: 0\n                  grid: false\n                  production: false\n                  battery: false\n                - id: 75659e6f-2767-4bfe-ba94-3e0f2d58ec0b\n                  label:\n                  group: 3\n                  channel: 1\n                  grid: false\n                  production: false\n                  battery: false\n                - id: dbd87692-f0d4-48be-8086-e8fe11ca79a6\n                  label:\n                  group: 3\n                  channel: 2\n                  grid: false\n                  production: false\n                  battery: false\n                - id: __OTHER__\n                  label: Other\n                  grid: false\n                  production: false\n                  battery: false\n                  other: true\n                results:\n                - t: 1640144100\n                  r:\n                    w:\n                    - 54\n                    - 0\n                    - 0\n                    - 0\n                    - 0\n                    - 0\n                    - 382\n                    - 0\n                    - 0\n                    - 0\n                    - 0\n                    - 0\n                    - 0\n                    - 0\n                    - 0\n                    - 0\n                    - 0\n                    - 0\n                    - 436\n        '400':\n          description: Bad request\n        '404':\n          description: No historical data found\n\n  /locations/{location_id}/aggregate:\n    get:\n      summary: Get aggregated data for a location in a given time range.\n      description: This endpoint is most commonly used to determine the total energy (kWh) consumed/produced over a given time period.\n      operationId: getAggregateForLocation\n      tags:\n        - Historical\n      parameters:\n        - in: path\n          name: location_id\n          schema:\n            type: string\n            format: uuid\n          required: true  \n        - in: query\n          name: resolution\n          schema:\n            type: string\n            enum: [m, 5m, h, d]\n          description: The sample resolution for the query.  These are fixed to the `m` for minutes, `5m` for five minutes, `h` for hours, and `d` for days.  If omitted, the coarsest (largest) resolution that effectively covers the queried range will be used.\n        - in: query\n          name: from_now_range\n          schema:\n            type: string\n          description: \"\n            A shorthand option for describing a date range from the current time.  For example \\\"3h\\\" will query for a date range of 3 hours ago to now, \\\"1mo\\\" will query from one month (30 days) ago to now.  More on time ranges in our full API docs.\n            \\n\\n\n            Required if not using `start` and `end` to describe a range.\"\n        - in: query\n          name: start\n          schema:\n            oneOf:\n              - type: integer\n                format: unix-timestamp\n              - type: string\n                format: date-time\n          description: \"\n            A date-time string describing the start of the range to query.  \n            \\n\\n\n            Historical samples are stored with the timestamp representing the __start__ of the range they are measuring.  For example, an hourly average sample measuring between 10:00am - 11:00am will be tagged with the timestamp of 10am.\n            \\n\\n\n            Therefore, if you use a `start` query of 10:01am, that will __not__ include the 10:00am - 11:00am averaged sample.\n            \\n\\n\n            Required if not using `from_now_range`\"\n          examples:\n            timestamp: \n              summary: Using a unix timestamp\n              value: 1638982800\n            dateTime:\n              summary: Using a date time ISO string\n              value: '2021-12-08T17:00:00.000Z'  \n        - in: query\n          name: end\n          schema:\n            oneOf:\n              - type: integer\n                format: unix-timestamp\n              - type: string\n                format: date-time\n          description: \"\n            A date-time string describing the end of the range to query.  \n            \\n\\n\n            Historical samples are stored with the timestamp representing the __start__ of the range they are measuring.  For example, an hourly average sample measuring between 10:00am - 11:00am will be tagged with the timestamp of 10am.\n            \\n\\n\n            Therefore, if you use an `end` query of 10:00am, that __will__ include the entirety of 10:00am - 11:00am averaged sample.\n            \\n\\n\n            Required if not using `from_now_range`\"\n          examples:\n            timestamp: \n              summary: Using a unix timestamp\n              value: 1638982800\n            dateTime:\n              summary: Using a date time ISO string\n              value: '2021-12-08T17:00:00.000Z'\n        - in: query\n          name: metric\n          schema:\n            type: string\n            enum: [w, i, cost_30d, \"w,cost_30d\"]\n            default: w\n          description: By default, the only quantitative metric that will be returned is power (watts).  You can also query \"i\" to query current (amps), and `cost_30d` which will use the location's utility information to compute a 30d cost for a given power usage.  You can specify multiple metrics by comma-separating the different values (eg. \"w,cost_30d\")\n        - in: query\n          name: include_cost\n          schema:\n            type: boolean\n            default: false\n          allowEmptyValue: true\n          description: When true, this parameter tells the API to calculate an estimated cost for each register in the response.  This cost is based on the energy consumed/produced and the utility plan that has been selected for this location.  A negative cost should be interpreted as a credit.\n        - in: query\n          name: include_totals\n          schema:\n            type: boolean\n            default: false\n          allowEmptyValue: true\n          description: When true, this parameter tells the API to include totals in the response.  These totals include `grid_net`, `consumption`, `production`, `battery`.  By default, this value will be false and only the individual registers will be returned.\n        - in: query\n          name: group_by\n          schema:\n            type: string\n            enum: [register, category]\n            default: register\n          description: \"\n            This parameter determines how the returned data is organized.  The default is \\\"register\\\", which is perhaps for consumers who only want to examine a subset of registers, or would like to create a per-register visualization.\n            \\n\\n\n            There is also \\\"category\\\" which is similar, but registers of the same category are grouped together and their values summed.\n            \\n\\n\n            More on these formats in our full API docs\"\n      responses: \n        '200':\n          description: Successful request\n          content:\n            application/json:    \n              example:\n                samples_count: 24\n                start: 1640034000\n                end: 1640120399\n                hubs:\n                - crhs5ma2\n                resolution: h\n                units:\n                - key: kwh\n                  name: energy\n                  unit: kWh\n                - key: avg\n                  name: average real power\n                  unit: W\n                - key: min\n                  name: minimum real power\n                  unit: W\n                - key: max\n                  name: maximum real power\n                  unit: W\n                results:\n                  registers:\n                  - avg: -140\n                    min: 338\n                    max: -1044\n                    sum: -3352\n                    kwh: -3.37\n                    register:\n                      id: 834a9909-f367-4987-9601-725d705d6dd8\n                      label: Main A Phase\n                      group: 0\n                      channel: 0\n                      grid: true\n                      production: false\n                      battery: false\n                      circuit_type: main\n                  - avg: -286\n                    min: 0\n                    max: -1116\n                    sum: -6854\n                    kwh: -6.826\n                    register:\n                      id: 3ab156f8-d5b2-4587-963b-dd21cb9a1da5\n                      label: Solar A Phase\n                      group: 0\n                      channel: 1\n                      grid: false\n                      production: true\n                      battery: false\n                      circuit_type: breaker_side_production\n                  - avg: 0\n                    min: 0\n                    max: 0\n                    sum: 0\n                    kwh: 0\n                    register:\n                      id: a7d66f16-79d0-46aa-b4f9-33095dfc1586\n                      label:\n                      group: 0\n                      channel: 2\n                      grid: false\n                      production: false\n                      battery: false\n                      circuit_type: consumption\n                  - avg: 0\n                    min: 0\n                    max: 0\n                    sum: 14\n                    kwh: 0\n                    register:\n                      id: 36787ec9-dbbd-49cc-ae78-dbbf0f5308e4\n                      label: HVAC compressor\n                      group: 0\n                      channel: 3\n                      grid: false\n                      production: false\n                      battery: false\n                      circuit_type: consumption\n                  - avg: 0\n                    min: 0\n                    max: 0\n                    sum: 0\n                    kwh: 0\n                    register:\n                      id: e4f10942-47bb-4894-84c5-04666fc8cab7\n                      label:\n                      group: 0\n                      channel: 4\n                      grid: false\n                      production: false\n                      battery: false\n                      circuit_type: consumption\n                  - avg: 0\n                    min: 0\n                    max: 0\n                    sum: 0\n                    kwh: 0\n                    register:\n                      id: 939f08bd-f3c7-4e7f-a8b2-f63d8c3ecaed\n                      label:\n                      group: 0\n                      channel: 5\n                      grid: false\n                      production: false\n                      battery: false\n                      circuit_type: consumption\n                  - avg: -72\n                    min: 331\n                    max: -958\n                    sum: -1717\n                    kwh: -1.728\n                    register:\n                      id: 80fed2bc-840f-4395-8dca-585523884953\n                      label: Main B Phase\n                      group: 1\n                      channel: 0\n                      grid: true\n                      production: false\n                      battery: false\n                      circuit_type: main\n                  - avg: -291\n                    min: 0\n                    max: -1123\n                    sum: -6973\n                    kwh: -6.998\n                    register:\n                      id: b4260e18-66a5-4cf8-bece-5b50e23ef4b3\n                      label: Solar B Phase\n                      group: 1\n                      channel: 1\n                      grid: false\n                      production: true\n                      battery: false\n                      circuit_type: breaker_side_production\n                  - avg: 0\n                    min: 0\n                    max: 0\n                    sum: 0\n                    kwh: 0\n                    register:\n                      id: cb104ac5-3ddd-4b14-8153-3e8475bc7672\n                      label:\n                      group: 1\n                      channel: 2\n                      grid: false\n                      production: false\n                      battery: false\n                      circuit_type: consumption\n                  - avg: 0\n                    min: 0\n                    max: 0\n                    sum: 0\n                    kwh: 0\n                    register:\n                      id: ec2158d7-8085-4aac-96c9-a939b5c5c8ca\n                      label:\n                      group: 1\n                      channel: 3\n                      grid: false\n                      production: false\n                      battery: false\n                      circuit_type: consumption\n                  - avg: 0\n                    min: 0\n                    max: 0\n                    sum: 0\n                    kwh: 0\n                    register:\n                      id: 45ab969e-0457-4e06-8bd5-df8ad8a634d9\n                      label:\n                      group: 1\n                      channel: 4\n                      grid: false\n                      production: false\n                      battery: false\n                      circuit_type: consumption\n                  - avg: 0\n                    min: 0\n                    max: 0\n                    sum: 0\n                    kwh: 0\n                    register:\n                      id: 49e1624a-ce44-4fa8-8ce7-26ea6b57a6eb\n                      label:\n                      group: 1\n                      channel: 5\n                      grid: false\n                      production: false\n                      battery: false\n                      circuit_type: consumption\n                  - avg: 0\n                    min: 0\n                    max: 0\n                    sum: 0\n                    kwh: 0\n                    register:\n                      id: ea626128-24b5-458a-b3ab-348eb2024c86\n                      label:\n                      group: 2\n                      channel: 0\n                      grid: false\n                      production: false\n                      battery: false\n                      circuit_type: consumption\n                  - avg: 0\n                    min: 0\n                    max: 0\n                    sum: 0\n                    kwh: 0\n                    register:\n                      id: 7cfe8a54-cfdf-43f0-93b2-6bb6f4b55254\n                      label:\n                      group: 2\n                      channel: 1\n                      grid: false\n                      production: false\n                      battery: false\n                      circuit_type: consumption\n                  - avg: 0\n                    min: 0\n                    max: 0\n                    sum: 0\n                    kwh: 0\n                    register:\n                      id: 03021d86-0dc3-4b5d-a3dc-537949127b3c\n                      label:\n                      group: 2\n                      channel: 2\n                      grid: false\n                      production: false\n                      battery: false\n                      circuit_type: consumption\n                  - avg: 0\n                    min: 0\n                    max: 0\n                    sum: 0\n                    kwh: 0\n                    register:\n                      id: 29f0239f-c53a-4ebe-8641-861c13ed15b1\n                      label:\n                      group: 3\n                      channel: 0\n                      grid: false\n                      production: false\n                      battery: false\n                      circuit_type: consumption\n                  - avg: 0\n                    min: 0\n                    max: 0\n                    sum: 0\n                    kwh: 0\n                    register:\n                      id: 75659e6f-2767-4bfe-ba94-3e0f2d58ec0b\n                      label:\n                      group: 3\n                      channel: 1\n                      grid: false\n                      production: false\n                      battery: false\n                      circuit_type: consumption\n                  - avg: 0\n                    min: 0\n                    max: 0\n                    sum: 0\n                    kwh: 0\n                    register:\n                      id: dbd87692-f0d4-48be-8086-e8fe11ca79a6\n                      label:\n                      group: 3\n                      channel: 2\n                      grid: false\n                      production: false\n                      battery: false\n                      circuit_type: consumption\n                  - avg: 365\n                    kwh: 8.726\n                    register:\n                      id: __OTHER__\n                      label: Other\n                      grid: false\n                      production: false\n                      battery: false\n                      other: true\n                      circuit_type: other\n                  totals:\n                  - type: net\n                    kwh: -5.098\n                  - type: cons\n                    kwh: 8.726\n                  - type: prod\n                    kwh: -13.824\n        '400':\n          description: Bad request\n        '404':\n          description: No historical data found\n\n  /locations/{location_id}/localized_bands:\n    get:\n      summary: Get a series of date ranges that are localized to the location's timezone.\n      description: \"\n        This is a convenience endpoint that allows consumers to compute a series of date \\\"bands\\\" which can be of any arbitrary size.  \n        \\n\\n\n        Importantly, if the band size is in units of days, weeks, or months, it will automatically return date ranges that map to the start and end of those times based on the location's timezone.\n        \\n\\n\n        It is most commonly used when you want to make a series of `/aggregate` calls covering a large range of time.  For example, you may want to show the last 7 days of usage for a location grouped by day, in which case you would use a `from_now_range` of \\\"7d\\\", and a `band_size` of \\\"1d\\\"\"\n      operationId: getLocalizedBandsForLocation\n      tags:\n        - Historical\n      parameters:\n        - in: path\n          name: location_id\n          schema:\n            type: string\n            format: uuid\n          required: true    \n        - in: query\n          name: from_now_range\n          schema:\n            type: string\n          description: A shorthand option for describing a date range from the current time.  For example \\\"3h\\\" will query for a date range of 3 hours ago to now, \\\"1mo\\\" will query from one month (30 days) ago to now.  More on time ranges in our full API docs.\n        - in: query\n          name: band_size\n          schema:\n            type: string\n          description: A timestring describing the size of the bands you wish returned.  For example, if you want bands that are one day duration, use \"1d\".  You can also use units of \"m\" (minutes), \"h\" (hours), \"d\" (days), \"w\" (weeks), \"mo\" (months), or \"y\" (years).\n          required: true\n        - in: query\n          name: start\n          schema:\n            oneOf:\n              - type: integer\n                format: unix-timestamp\n              - type: string\n                format: date-time\n          description: A date-time string describing the start of the range to query\n          examples:\n            timestamp: \n              summary: Using a unix timestamp\n              value: 1638982800\n            dateTime:\n              summary: Using a date time ISO string\n              value: '2021-12-08T17:00:00.000Z'  \n        - in: query\n          name: end\n          schema:\n            oneOf:\n              - type: integer\n                format: unix-timestamp\n              - type: string\n                format: date-time\n          description: A date-time string describing the end of the range to query.  \n          examples:\n            timestamp: \n              summary: Using a unix timestamp\n              value: 1638982800\n            dateTime:\n              summary: Using a date time ISO string\n              value: '2021-12-08T17:00:00.000Z'           \n      responses:\n        '200':\n          description: Successful request\n          content:\n            application/json:    \n              schema:\n                type: object\n                properties:\n                  count:\n                    type: integer\n                  results:\n                    type: array\n                    items: \n                      type: object\n                      $ref: \"#/components/schemas/LocalizedBand\"\n              example:\n                count: 8\n                results:\n                - start: '2021-12-15T06:00:00.000Z'\n                  end: '2021-12-16T05:59:59.000Z'\n                  partial: false\n                  resolution: h\n                - start: '2021-12-16T06:00:00.000Z'\n                  end: '2021-12-17T05:59:59.000Z'\n                  partial: false\n                  resolution: h\n                - start: '2021-12-17T06:00:00.000Z'\n                  end: '2021-12-18T05:59:59.000Z'\n                  partial: false\n                  resolution: h\n                - start: '2021-12-18T06:00:00.000Z'\n                  end: '2021-12-19T05:59:59.000Z'\n                  partial: false\n                  resolution: h\n                - start: '2021-12-19T06:00:00.000Z'\n                  end: '2021-12-20T05:59:59.000Z'\n                  partial: false\n                  resolution: h\n                - start: '2021-12-20T06:00:00.000Z'\n                  end: '2021-12-21T05:59:59.000Z'\n                  partial: false\n                  resolution: h\n                - start: '2021-12-21T06:00:00.000Z'\n                  end: '2021-12-22T05:59:59.000Z'\n                  partial: false\n                  resolution: h\n                - start: '2021-12-22T06:00:00.000Z'\n                  end: '2021-12-23T01:21:53.000Z'\n                  partial: true\n                  resolution: h\n\n  # /locations/{location_id}/kwh_ranges:\n  #   get:\n  #     summary: Get energy (kWh) totals for a flexible tie \n  #     description: \"\n  #       This is a convenience endpoint that returns a series of energy (kWh) over a time range grouped in arbitrary band sizes.  For example, a consumer could request 15 minute energy totals for a location in the last 24 hours.  When using band sizes in units of days, the API will automatically determine the start and end of the day based on the location timezone\n  #       \\n\\n\n  #       This endpoint is particularly useful for creating a dataset for kWh bar charts\"\n  #     operationId: getKwhRangesForLocation\n  #     tags:\n  #       - Historical\n  #     parameters:\n  #       - in: path\n  #         name: location_id\n  #         schema:\n  #           type: string\n  #           format: uuid\n  #         required: true  \n  #       - in: query\n  #         name: from_now_range\n  #         schema:\n  #           type: string\n  #         description: \"\n  #           A shorthand option for describing a date range from the current time.  For example \\\"3h\\\" will query for a date range of 3 hours ago to now, \\\"1mo\\\" will query from one month (30 days) ago to now.  More on time ranges in our full API docs.\n  #           \\n\\n\n  #           Required if not using `start` and `end` to describe a range.\"\n  #       - in: query\n  #         name: start\n  #         schema:\n  #           oneOf:\n  #             - type: integer\n  #               format: unix-timestamp\n  #             - type: string\n  #               format: date-time\n  #         description: \"\n  #           A date-time string describing the start of the range to query.  \n  #           \\n\\n\n  #           Historical samples are stored with the timestamp representing the __start__ of the range they are measuring.  For example, an hourly average sample measuring between 10:00am - 11:00am will be tagged with the timestamp of 10am.\n  #           \\n\\n\n  #           Therefore, if you use a `start` query of 10:01am, that will __not__ include the 10:00am - 11:00am averaged sample.\n  #           \\n\\n\n  #           Required if not using `from_now_range`\"\n  #         examples:\n  #           timestamp: \n  #             summary: Using a unix timestamp\n  #             value: 1638982800\n  #           dateTime:\n  #             summary: Using a date time ISO string\n  #             value: '2021-12-08T17:00:00.000Z'  \n  #       - in: query\n  #         name: end\n  #         schema:\n  #           oneOf:\n  #             - type: integer\n  #               format: unix-timestamp\n  #             - type: string\n  #               format: date-time\n  #         description: \"\n  #           A date-time string describing the end of the range to query.  \n  #           \\n\\n\n  #           Historical samples are stored with the timestamp representing the __start__ of the range they are measuring.  For example, an hourly average sample measuring between 10:00am - 11:00am will be tagged with the timestamp of 10am.\n  #           \\n\\n\n  #           Therefore, if you use an `end` query of 10:00am, that __will__ include the entirety of 10:00am - 11:00am averaged sample.\n  #           \\n\\n\n  #           Required if not using `from_now_range`\"\n  #         examples:\n  #           timestamp: \n  #             summary: Using a unix timestamp\n  #             value: 1638982800\n  #           dateTime:\n  #             summary: Using a date time ISO string\n  #             value: '2021-12-08T17:00:00.000Z'\n  #       - in: query\n  #         name: band_size\n  #         schema:\n  #           type: string\n  #           default: false\n  #         required: true\n  #         description: A range time string defining the band size of each kwh total returned in the range.  For example, if you want 30 min totals for your queried range, use \"30m\".\n  #       - in: query\n  #         name: include_totals\n  #         schema:\n  #           type: boolean\n  #           default: false\n  #         allowEmptyValue: true\n  #         description: When true, this parameter tells the API to include totals in the response.  These totals include `grid_net`, `consumption`, `production`, `battery`.  By default, this value will be false and only the individual registers will be returned.\n  #       - in: query\n  #         name: group_by\n  #         schema:\n  #           type: string\n  #           enum: [register, category]\n  #           default: register\n  #         description: \"\n  #           This parameter determines how the returned data is organized.  The default is \\\"register\\\", which is perhaps for consumers who only want to examine a subset of registers, or would like to create a per-register visualization.\n  #           \\n\\n\n  #           There is also \\\"category\\\" which is similar, but registers of the same category are grouped together and their values summed.\n  #           \\n\\n\n  #           More on these formats in our full API docs\"\n  #     responses: \n  #       '200':\n  #         description: Successful request\n  #         content:\n  #           application/json:    \n  #             schema:\n  #               type: object\n\n  # /categories:\n  #   get:\n  #     summary: Get all register categories\n  #     operationId: listRegisters\n  #     tags:\n  #       - Categories\n  #     responses:\n  #       '200':\n  #         description: Successful request\n  #         content:\n  #           application/json:\n  #             schema:\n  #               type: object\n\n  # /categories/{category_id}:\n  #   get:\n  #     summary: Get a register category\n  #     operationId: getCategory\n  #     tags:\n  #       - Categories\n  #     parameters:\n  #       - in: path\n  #         name: category_id\n  #         schema:\n  #           type: string\n  #         required: true\n  #     responses:\n  #       '200':\n  #         description: Successful request\n  #         content:\n  #           application/json:\n  #             schema:\n  #               type: object\n\n  /locations/{location_id}/energy-score/latest:\n    get:\n      summary: Get the latest daily energy score for a location.\n      description: \"\n        An energy score is a number given to each location to describe their energy usage relative to their baseline.  They are calculated once per day for all locations.\n        \\n\n        This endpoint returns the latest daily energy score for a location\"\n      operationId: getDailyEnergyScoreForLocation\n      tags:\n        - Energy Score\n      parameters:\n        - in: path\n          name: location_id\n          schema:\n            type: string\n            format: uuid\n          required: true\n      responses:\n        '200':\n          description: Successful request\n          content:\n            application/json:\n              schema: \n                $ref: \"#/components/schemas/EnergyScore\"\n              example:\n                location: 8cccef48-0917-4d85-8ec0-7d3590c73ffa\n                date: 1642485600\n                season: 2021-winter\n                behavioral: 129.59\n                total: 129.59\n                weather_related: 129.59\n                kwh:\n                  behavioral: 2.59\n                  uncategorized: 2.484\n                  categories:\n                    Places-Garage: 0.108\n\n  /locations/{location_id}/energy-score:\n    get:\n      summary: Query daily energy scores for a location for a given time range.\n      description: \"\n        An energy score is a number given to each location to describe their energy usage relative to their baseline.  They are calculated once per day for all locations.\n        \\n\n        This endpoint returns energy scores for a location in the queried range\"\n      operationId: listEnergyScoresForLocation\n      tags:\n        - Energy Score\n      parameters:\n        - in: path\n          name: location_id\n          schema:\n            type: string\n            format: uuid\n          required: true    \n        - in: query\n          name: from_now_range\n          schema:\n            type: string\n          description: A shorthand option for describing a date range from the current time.  For example \\\"3h\\\" will query for a date range of 3 hours ago to now, \\\"1mo\\\" will query from one month (30 days) ago to now.  More on time ranges in our full API docs.\n        - in: query\n          name: start\n          schema:\n            oneOf:\n              - type: integer\n                format: unix-timestamp\n              - type: string\n                format: date-time\n          description: A date-time string describing the start of the range to query\n          examples:\n            timestamp: \n              summary: Using a unix timestamp\n              value: 1638982800\n            dateTime:\n              summary: Using a date time ISO string\n              value: '2021-12-08T17:00:00.000Z'  \n        - in: query\n          name: end\n          schema:\n            oneOf:\n              - type: integer\n                format: unix-timestamp\n              - type: string\n                format: date-time\n          description: A date-time string describing the end of the range to query.  \n          examples:\n            timestamp: \n              summary: Using a unix timestamp\n              value: 1638982800\n            dateTime:\n              summary: Using a date time ISO string\n              value: '2021-12-08T17:00:00.000Z'              \n      responses:\n        '200':\n          description: Successful request\n          content:\n            application/json:\n              schema: \n                type: object\n                properties:\n                  count: \n                    type: integer\n                  results:\n                    type: array\n                    items: \n                      type: object\n                      $ref: \"#/components/schemas/EnergyScore\"                      \n              example:\n                count: 2\n                results:\n                - location: 8cccef48-0917-4d85-8ec0-7d3590c73ffa\n                  date: 1642464000\n                  season: 2021-winter\n                  behavioral: 113.95\n                  total: 113.95\n                  weather_related: 113.95\n                  kwh:\n                    behavioral: 6.296\n                    uncategorized: 6.019\n                    categories:\n                      MajorAppliances-Range: 0.158\n                      Places-Garage: 0.119\n                - location: 8cccef48-0917-4d85-8ec0-7d3590c73ffa\n                  date: 1642485600\n                  season: 2021-winter\n                  behavioral: 129.59\n                  total: 129.59\n                  weather_related: 129.59\n                  kwh:\n                    behavioral: 2.59\n                    uncategorized: 2.484\n                    categories:\n                      Places-Garage: 0.108\n\n  /locations/{location_id}/bill-estimation:\n    get:\n      summary: Estimate the energy bill for a given location and time range\n      description: \"\n        __This endpoint requires the `cost_calculation` API scope, which is only available to privileged clients__\n        \\n\\n\n        This endpoint runs a bill estimation calculation for a given location and time range.  The estimation takes into account the selected utility for the location including taxes and other fixed costs.\n        \\n\\n\n        The time range can include time in the future, and if the \\\"projected\\\" parameter is set to true, it will estimate future usage data to calculated the estimated bill\"\n      operationId: getBillEstimationForLocation\n      tags:\n        - Billing\n      parameters:\n        - in: path\n          name: location_id\n          schema:\n            type: string\n            format: uuid\n          required: true\n        - in: query\n          name: from_now_range\n          schema:\n            type: string\n          description: A shorthand option for describing a date range from the current time.  For example \\\"3h\\\" will query for a date range of 3 hours ago to now, \\\"1mo\\\" will query from one month (30 days) ago to now.  More on time ranges in our full API docs.\n        - in: query\n          name: start\n          schema:\n            oneOf:\n              - type: integer\n                format: unix-timestamp\n              - type: string\n                format: date-time\n          description: A date-time string describing the start of the range to query\n          examples:\n            timestamp: \n              summary: Using a unix timestamp\n              value: 1638982800\n            dateTime:\n              summary: Using a date time ISO string\n              value: '2021-12-08T17:00:00.000Z'  \n        - in: query\n          name: end\n          schema:\n            oneOf:\n              - type: integer\n                format: unix-timestamp\n              - type: string\n                format: date-time\n          description: A date-time string describing the end of the range to query.  \n          examples:\n            timestamp: \n              summary: Using a unix timestamp\n              value: 1638982800\n            dateTime:\n              summary: Using a date time ISO string\n              value: '2021-12-08T17:00:00.000Z'    \n        - in: query\n          name: projected\n          schema:\n            type: boolean\n          description: \"\n            If true and the queried time range is in the future, this will use projected values to estimate the bill.  \n            \\n\n            Some part of the queried time range must include time for which we have real historical data.  If you \"\n      responses:\n        '200':\n          description: Successful request\n          content:\n            application/json:\n              example:\n                calculatedCostId: 83f650ff-54ee-495d-9033-8a96e4967d83\n                masterTariffId: 80693\n                tariffName: Residential\n                totalCost: 8.1\n                fromDateTime: '2021-12-01T00:00:00-06:00'\n                toDateTime: '2021-12-19T21:00:00-06:00'\n                currency: USD\n                summary:\n                  subTotalCost: 7.72\n                  taxCost: 0.38\n                  totalCost: 8.1\n                  adjustedTotalCost: 8.1\n                  kWh: 21.99\n                  kW: 0.84\n                  SOLAR_PV:\n                    systemSize: 15\n                accuracy: 100\n                items:\n                - fromDateTime: '2021-12-01T00:00:00-06:00'\n                  toDateTime: '2022-01-01T00:00:00-06:00'\n                  quantityKey: fixed\n                  rateAmount: 6.08870968\n                  itemQuantity: 1\n                  cost: 6.08870968\n                  chargeType: FIXED_PRICE\n                - fromDateTime: '2021-12-01T00:00:00-06:00'\n                  toDateTime: '2022-01-01T00:00:00-06:00'\n                  quantityKey: consumption\n                  rateAmount: 0.074\n                  itemQuantity: 21.989\n                  cost: 1.627186\n                  chargeType: CONSUMPTION_BASED\n                - fromDateTime: '2021-12-01T00:00:00-06:00'\n                  toDateTime: '2022-01-01T00:00:00-06:00'\n                  quantityKey: quantity\n                  rateAmount: -0.05906048\n                  itemQuantity: 0\n                  cost: 0\n                  chargeType: QUANTITY\n                - fromDateTime: '2021-12-01T00:00:00-06:00'\n                  toDateTime: '2022-01-01T00:00:00-06:00'\n                  quantityKey: tax\n                  rateAmount: 0.05\n                  itemQuantity: 7.71589568\n                  cost: 0.38579478\n                  chargeType: TAX\n                assumptions:\n                - keyName: tariffId\n                  dataType: INTEGER\n                  fromDateTime: '2021-12-01T00:00:00-06:00'\n                  toDateTime: '2021-12-19T21:00:00-06:00'\n                  dataValue: '3395617'\n                - keyName: cityLimits\n                  displayName: Service Area (Inside/outside city limits)\n                  description: Has service inside or outside city limits\n                  dataType: STRING\n                  fromDateTime: '2021-12-01T00:00:00-06:00'\n                  toDateTime: '2021-12-19T21:00:00-06:00'\n                  dataValue: Inside\n                  accuracy: 80\n                - keyName: solarSystemOutput\n                  displayName: Solar System Output (kWh)\n                  description: Solar System Output (kWh)\n                  dataType: DECIMAL\n                  fromDateTime: '2021-12-01T00:00:00-06:00'\n                  toDateTime: '2021-12-19T21:00:00-06:00'\n                  dataValue: '0'\n                  accuracy: 80\n                - keyName: systemSize\n                  displayName: System Size\n                  description: Nameplate capacity (kW).\n                  dataType: DECIMAL\n                  fromDateTime: '2021-12-01T00:00:00-06:00'\n                  toDateTime: '2021-12-19T21:00:00-06:00'\n                  dataValue: '15'\n                  accuracy: 100\n\n  /locations/{location_id}/bill-estimation/current:\n    get:\n      summary: Estimate the current energy bill for a given location, optionally projected through the end of the billing period\n      description: \"\n        __This endpoint requires the `cost_calculation` API scope, which is only available to privileged clients__\n        \\n\\n\n        This endpoint runs a bill estimation calculation for a given location.  The estimation takes into account the selected utility for the location including taxes and other fixed costs.  It also takes into account the billing start date associated with the location (defaults to the first of the month)\n        \\n\\n\n        Oftentimes with this endpoint, the \\\"projected\\\" parameter is set to true, which will use estimated usage through the end of the billing period\"        \n      operationId: getCurrentBillEstimationForLocation\n      tags:\n        - Billing\n      parameters:\n        - in: path\n          name: location_id\n          schema:\n            type: string\n            format: uuid\n          required: true\n        - in: query\n          name: projected\n          schema:\n            type: boolean\n          description: If true, this will use projected values to estimate the bill through the end of the billing period \n      responses:\n        '200':\n          description: Successful request\n          content:\n            application/json:\n              example:\n                calculatedCostId: 83f650ff-54ee-495d-9033-8a96e4967d83\n                masterTariffId: 80693\n                tariffName: Residential\n                totalCost: 8.1\n                fromDateTime: '2021-12-01T00:00:00-06:00'\n                toDateTime: '2021-12-19T21:00:00-06:00'\n                currency: USD\n                summary:\n                  subTotalCost: 7.72\n                  taxCost: 0.38\n                  totalCost: 8.1\n                  adjustedTotalCost: 8.1\n                  kWh: 21.99\n                  kW: 0.84\n                  SOLAR_PV:\n                    systemSize: 15\n                accuracy: 100\n                items:\n                - fromDateTime: '2021-12-01T00:00:00-06:00'\n                  toDateTime: '2022-01-01T00:00:00-06:00'\n                  quantityKey: fixed\n                  rateAmount: 6.08870968\n                  itemQuantity: 1\n                  cost: 6.08870968\n                  chargeType: FIXED_PRICE\n                - fromDateTime: '2021-12-01T00:00:00-06:00'\n                  toDateTime: '2022-01-01T00:00:00-06:00'\n                  quantityKey: consumption\n                  rateAmount: 0.074\n                  itemQuantity: 21.989\n                  cost: 1.627186\n                  chargeType: CONSUMPTION_BASED\n                - fromDateTime: '2021-12-01T00:00:00-06:00'\n                  toDateTime: '2022-01-01T00:00:00-06:00'\n                  quantityKey: quantity\n                  rateAmount: -0.05906048\n                  itemQuantity: 0\n                  cost: 0\n                  chargeType: QUANTITY\n                - fromDateTime: '2021-12-01T00:00:00-06:00'\n                  toDateTime: '2022-01-01T00:00:00-06:00'\n                  quantityKey: tax\n                  rateAmount: 0.05\n                  itemQuantity: 7.71589568\n                  cost: 0.38579478\n                  chargeType: TAX\n                assumptions:\n                - keyName: tariffId\n                  dataType: INTEGER\n                  fromDateTime: '2021-12-01T00:00:00-06:00'\n                  toDateTime: '2021-12-19T21:00:00-06:00'\n                  dataValue: '3395617'\n                - keyName: cityLimits\n                  displayName: Service Area (Inside/outside city limits)\n                  description: Has service inside or outside city limits\n                  dataType: STRING\n                  fromDateTime: '2021-12-01T00:00:00-06:00'\n                  toDateTime: '2021-12-19T21:00:00-06:00'\n                  dataValue: Inside\n                  accuracy: 80\n                - keyName: solarSystemOutput\n                  displayName: Solar System Output (kWh)\n                  description: Solar System Output (kWh)\n                  dataType: DECIMAL\n                  fromDateTime: '2021-12-01T00:00:00-06:00'\n                  toDateTime: '2021-12-19T21:00:00-06:00'\n                  dataValue: '0'\n                  accuracy: 80\n                - keyName: systemSize\n                  displayName: System Size\n                  description: Nameplate capacity (kW).\n                  dataType: DECIMAL\n                  fromDateTime: '2021-12-01T00:00:00-06:00'\n                  toDateTime: '2021-12-19T21:00:00-06:00'\n                  dataValue: '15'\n                  accuracy: 100\n\n# END PATHS\ncomponents:\n  securitySchemes:\n    bearerAuth:\n      type: http\n      scheme: bearer\n      bearerFormat: JWT    \n  schemas:\n    User:\n      type: object\n      properties: \n        accepted_eula:\n          type: boolean\n        accepted_hazard_warning:\n          type: boolean\n        accepted_provider_agreement:\n          type: boolean\n        default_location:\n          type: string\n          format: uuid\n          nullable: true\n        dt_created:\n          type: string\n          format: date-time\n        dt_modified:\n          type: string\n          format: date-time\n        email_address:\n          type: string\n          format: email\n        live_data_unit:\n          type: string\n          nullable: true\n        phone_number:\n          type: string\n          nullable: true\n        user_type:\n          type: string\n          enum: [homeowner]\n        useraccess_set:\n          type: array\n          items:\n            $ref: \"#/components/schemas/UserAccess\"        \n        auth0User:\n          type: object\n          $ref: \"#/components/schemas/Auth0User\"        \n    Auth0User:\n      type: object\n      properties:\n        created_at: \n          type: string\n          format: date-time\n        updated_at: \n          type: string\n          format: date-time\n        user_id:\n          type: string\n        email:\n          type: string\n          format: email\n        email_verified:\n          type: boolean\n        iat:\n          type: integer\n          description: Unix timestamp\n        exp:\n          type: integer\n          description: Unix timestamp\n        iss:\n          type: string\n          format: url\n        impersonated:\n          type: boolean\n        last_ip: \n          type: string\n        last_login: \n          type: string\n          format: date-time\n        last_password_reset: \n          type: string\n          format: date-time\n        logins_count:\n          type: integer\n        picture:\n          type: string\n          format: url\n    Location:\n      type: object\n      properties: \n        id:\n          type: string\n          format: uuid\n        dt_created: \n          type: string\n          format: date-time\n        dt_modified: \n          type: string\n          format: date-time\n        organization: \n          type: string\n        label: \n          type: string\n        country: \n          type: string\n          format: iso3-country-code\n        state: \n          type: string\n        city: \n          type: string          \n        postcode: \n          type: string\n        address: \n          type: string\n        geocode: \n          type: string\n          format: geocode\n        timezone: \n          type: string\n          format: timezone\n      required:\n        - id\n        - dt_created\n        - dt_modified\n        \n    LocationDetail:\n      type: object\n      properties: \n        id:\n          type: string\n          format: uuid\n        dt_last_sample_received:\n          type: string\n          format: date-time\n        dt_active_since:\n          type: string\n          format: date-time\n        active_now:\n          type: boolean\n        has_mains:\n          type: boolean\n        has_production:\n          type: boolean\n        has_battery:\n          type: boolean\n        has_consumption:\n          type: boolean\n        installations_count:\n          type: integer\n        fleet:\n          type: string \n          nullable: true\n\n    Installation:\n      type: object\n      properties:\n        hub:\n          type: string\n          format: hub-id\n        location:\n          type: string\n          format: uuid\n        fleet:\n          type: string\n        organization:\n          type: string\n        state:\n          type: string\n          enum: [free, in_process, pending, active]\n        label:\n          type: string          \n        dt_claimed: \n          type: string\n          format: date-time\n        dt_state_changed: \n          type: string\n          format: date-time\n        dt_created: \n          type: string\n          format: date-time\n        dt_modified: \n          type: string\n          format: date-time\n      required:\n        - hub\n        - fleet\n        - state\n        - location\n        - dt_created\n        - dt_modified\n\n    Register:\n      type: object\n      properties:\n        id: \n          type: string\n          format: uuid\n        dt_created:\n          type: string\n          format: date-time\n        dt_modified: \n          type: string\n          format: date-time\n        label: \n          type: string\n        number:\n          type: integer\n        circuit_type: \n          type: string\n          enum: [main, consumption, other, breaker_side_production, line_side_production, breaker_side_battery, line_side_battery]\n        multiplier:\n          type: integer\n          enum: [1, 2, 3]\n        inverted:\n          type: boolean          \n        installation: \n          type: string\n          format: hub-id\n        clamp_definition:\n          type: string          \n        group: \n          type: integer\n        channel: \n          type: integer\n        grid: \n          type: boolean\n        production: \n          type: boolean\n        battery:\n          type: boolean\n        circuit_number:\n          type: integer\n      required:\n        - id\n        - dt_created\n        - dt_modified\n        - number\n        - circuit_type\n        - multiplier\n        - inverted\n        - installation\n        - clamp_definition\n        - group\n        - channel\n        - grid\n        - production\n        - battery\n        - circuit_number\n\n    LocationBilling: \n      type: object\n      properties: \n        dt_created: \n          type: string\n          format: date-time\n        dt_modified: \n          type: string\n          format: date-time\n        day_of_month: \n          type: integer\n        type:\n          type: string\n          enum: [simple, utility]\n        simple_kwh_price:        \n          type: number\n          format: float\n        location:\n          type: string\n          format: uuid\n        genability_account_id:\n          type: string\n          format: uuid\n        simple_currency_code:\n          type: string\n          format: currency-code\n        tariff: \n          type: object\n          $ref: \"#/components/schemas/Tariff\"\n\n    Tariff:\n      type: object\n      properties:\n        billingPeriod: \n          type: string\n        currency: \n          type: string\n        customerClass: \n          type: string\n          nullable: true\n        customerLikelihood: \n          type: number\n          format: float\n          nullable: true\n        endDate:  \n          type: string\n          format: date-time\n          nullable: true\n        lseId: \n          type: integer\n        lseName: \n          type: string\n        masterTariffId: \n          type: integer\n        tariffCode: \n          type: string\n        tariffName: \n          type: string\n        timeZone: \n          type: string\n          format: timezone\n\n    UserAccess: \n      type: object\n      properties: \n        id: \n          type: string\n          format: uuid\n        user: \n          type: string\n          format: uuid\n        location: \n          oneOf: \n            - type: string\n            - $ref: \"#/components/schemas/Location\"\n          nullable: true\n        installation:\n          oneOf: \n            - type: string\n            - $ref: \"#/components/schemas/Installation\"\n          nullable: true\n        fleet:\n          type: string\n          nullable: true\n      required:\n        - id\n        - user\n\n    UnitDefinition:\n      type: object\n      properties:\n        key:\n          type: string\n        name:\n          type: string\n        unit:\n          type: string\n      required:\n        - key\n        - name\n        - unit\n        \n    IntervalBandDefinition:\n      type: object\n      properties:\n        range:\n          type: array\n          minLength: 2\n          maxLength: 2\n          items:\n            type: integer\n            format: Unix timestamp\n          description: The first item represents the start of the interval, and the second item represents the end of the interval\n        seconds:\n          type: integer\n        sample_count:\n          type: integer\n        incomplete:\n          type: boolean\n          description: This is true only when the end of this interval is in the future\n      required:\n        - range\n        - seconds\n        - sample_count\n\n    HistoricalTimeSeriesResponse:\n      type: object\n      properties:\n        count: \n          type: integer        \n        real_samples_count: \n          type: integer\n        synthetic_samples_count: \n          type: integer\n        start: \n          type: integer\n          format: Unix timestamp\n        end: \n          type: integer\n          format: Unix-timestamp\n        previous:\n          type: string\n          format: url\n          nullable: true\n          description: Absolute URL of previous page of results.  If no previous page exists, this will be null\n        next:\n          type: string\n          format: url\n          nullable: true\n          description: Absolute URL of next page of results.  If no next page exists, this will be null\n        interval_seconds:\n          type: integer\n          nullable: true\n        interval_bands:\n          type: array\n          items:\n            type: object\n            $ref: \"#/components/schemas/IntervalBandDefinition\"\n        resolution: \n          type: string\n          enum: [m, 5m, h, d]\n        hubs:\n          type: array\n          items:\n            type: string\n            format: Hub serial\n        units:\n          type: array\n          items:\n            type: object\n            $ref: \"#/components/schemas/UnitDefinition\"\n        registers:\n          type: array\n          items:\n            type: object\n            $ref: \"#/components/schemas/Register\"\n        results:\n          type: object\n          items:\n            type: object\n            $ref: \"#/components/schemas/HistoricalTimeSeriesResultsByTimestamp\"\n      required:\n        - count\n        - real_samples_count\n        - synthetic_samples_count\n        - start\n        - end\n        - previous\n        - next\n        - resolution\n        - hubs\n        - results\n\n    HistoricalTimeSeriesResultsByTimestamp:\n      type: array\n      items:\n        type: object\n        properties:\n          t: \n            type: integer\n            format: Unix timestamp\n          r:\n            type: object\n            properties:\n              w: \n                type: array\n                items:\n                  type: integer\n              i:\n                type: array\n                items:\n                  type: number\n              cost_30d:\n                type: array\n                items:\n                  type: number\n          tot:\n            type: object\n            properties:\n              net:\n                type: object\n                properties:\n                  w: \n                    type: integer\n                  i: \n                    type: number\n                  cost_30d: \n                    type: number\n\n    SingleItemTimeSeries:\n      type: array\n      items: \n        type: array\n        items:\n          oneOf:\n            - type: integer\n              format: Unix timestamp\n            - type: number\n              format: Curb data reading\n            \n    HistoricalTimeSeriesResultsByRegister:\n      type: object\n      properties:\n        registers:  \n          type: array\n          items: \n            type: object\n            properties:\n              register: \n                $ref: \"#/components/schemas/Register\"\n              values: \n                type: array\n                items:\n                  type: object\n                  properties: \n                    unit:\n                      type: string\n                      enum: [w, i, cost_30d]\n                    series:                     \n                      $ref: \"#/components/schemas/SingleItemTimeSeries\"\n        totals:\n          type: array\n          items:\n            type: object\n            properties:\n              type:\n                type: string\n                enum: [\"net\", \"cons\", \"prod\", \"batt\"]\n              values: \n                type: array\n                items:\n                  type: object\n                  properties: \n                    unit:\n                      type: string\n                      enum: [w, i, cost_30d]\n                    series:                     \n                      $ref: \"#/components/schemas/SingleItemTimeSeries\"\n\n    LocalizedBand:\n      type: object\n      properties:\n        start:\n          type: string\n          format: date-time\n        end:\n          type: string\n          format: date-time\n        partial:\n          type: boolean\n          description: Has this band not yet completed\n        resolution:\n          type: string\n          enum: [m, 5m, h, d]\n          \n    CategoryReference:\n      type: object\n      properties:\n        id:\n          type: string\n        name:\n          type: string\n          \n    SummationReference:\n      type: object\n      properties:\n        id:\n          type: string\n        name:\n          type: string\n          enum: [\n            grid-net,\n            total-consumption,\n            total-production,\n            total-battery,\n            unmeasured-consumption\n          ]\n          \n    QueryChannel:\n      type: object\n      required:\n        - id\n        - metrics\n        - type\n        - name\n        - ref\n      properties:\n        id:\n          type: string\n          description: This is the id that is sent to the historical or live data service to request data on this channel. It starts with \"r\" for register channels, \"c\" for category channels, or \"s\" for summation channels\n          \n        metrics:\n          type: array\n          description: An array of supported metrics this channel supports.  \n          items:\n            type: string\n            enum: [w, e, i, s, q, v, f, pf, th, tg, ts]\n        type:\n          type: string\n          enum: [register, category, summation]\n        name:\n          type: string\n        ref:\n          oneOf:\n            - \n              $ref: '#/components/schemas/Register'\n            - $ref: '#/components/schemas/CategoryReference'\n            - $ref: '#/components/schemas/SummationReference'\n\n    EnergyScore:\n      type: object\n      properties:\n        location:\n          type: string\n          format: uuid\n        date:\n          type: integer\n          format: unix-timestamp\n        season:\n          type: string\n        behavioral:\n          type: number\n        total:\n          type: number\n        weather_related:\n          type: number\n        kwh:\n          type: object\n          properties:\n            behavioral:\n              type: number\n            uncategorized:\n              type: number\n            categories:\n              type: object\n              additionalProperties: \n                type: number\n",
			"canonicalURL": "/github.com/Curb-v2/third-party-app-integration@7c72ddac3bd80a6737382a1771a6cda342c50c71/-/blob/docs/api-v4.yml",
			"externalURLs": [
				{
					"url": "https://github.com/Curb-v2/third-party-app-integration/blob/7c72ddac3bd80a6737382a1771a6cda342c50c71/docs/api-v4.yml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "parse: parse spec: parse components: schemas: \"HistoricalTimeSeriesResponse\": resolve \"#/components/schemas/HistoricalTimeSeriesResponse\": property \"results\": at docs/api-v4.yml:3749:13: items: object cannot contain 'items' field"
}