{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/kubeshop/kusk-gateway"
		},
		"file": {
			"name": "api_server_api.yaml",
			"size": 0,
			"path": "cmd/kusk/manifests/api_server_api.yaml",
			"byteSize": 23344,
			"content": "\n---\napiVersion: gateway.kusk.io/v1alpha1\nkind: API\nmetadata:\n  name: kusk-gateway-api\n  namespace: kusk-system\n  labels:\n    kusk-managed: \"true\"\nspec:\n  fleet:\n    name: kusk-gateway-private-envoy-fleet\n    namespace: kusk-system\n  spec: |\n    components:\n      schemas:\n        ApiItem:\n          properties:\n            fleet:\n              $ref: '#/components/schemas/ApiItem_Fleet'\n            name:\n              type: string\n            namespace:\n              type: string\n            service:\n              $ref: '#/components/schemas/ApiItem_Service'\n            version:\n              type: string\n          required:\n          - name\n          - namespace\n          - fleet\n          - service\n          - version\n          type: object\n        ApiItem_Fleet:\n          properties:\n            name:\n              type: string\n            namespace:\n              type: string\n          required:\n          - name\n          - namespace\n          type: object\n        ApiItem_Service:\n          properties:\n            name:\n              type: string\n            namespace:\n              type: string\n          required:\n          - name\n          - namespace\n          type: object\n        EnvoyFleetItem:\n          properties:\n            apis:\n              items:\n                $ref: '#/components/schemas/ApiItem_Fleet'\n              type: array\n            name:\n              type: string\n            namespace:\n              type: string\n            services:\n              items:\n                $ref: '#/components/schemas/ServiceItem'\n              type: array\n            staticRoutes:\n              items:\n                $ref: '#/components/schemas/StaticRouteItem_Fleet'\n              type: array\n          required:\n          - name\n          - namespace\n          type: object\n        NamespaceItem:\n          properties:\n            name:\n              type: string\n          type: object\n        ServiceItem:\n          properties:\n            name:\n              type: string\n            namespace:\n              type: string\n            ports:\n              items:\n                $ref: '#/components/schemas/ServicePortItem'\n              type: array\n            serviceType:\n              enum:\n              - ClusterIP\n              - LoadBalancer\n              type: string\n            status:\n              enum:\n              - available\n              - unavailable\n              type: string\n          required:\n          - name\n          - namespace\n          - serviceType\n          - ports\n          type: object\n        ServicePortItem:\n          properties:\n            name:\n              type: string\n            nodePort:\n              type: integer\n            port:\n              type: integer\n            protocol:\n              type: string\n            targetPort:\n              type: string\n          required:\n          - name\n          - port\n          - targetPort\n          type: object\n        StaticRouteItem:\n          properties:\n            envoyFleetName:\n              type: string\n            envoyFleetNamespace:\n              type: string\n            name:\n              type: string\n            namespace:\n              type: string\n          required:\n          - name\n          - namespace\n          type: object\n        StaticRouteItem_Fleet:\n          properties:\n            name:\n              type: string\n            namespace:\n              type: string\n          required:\n          - name\n          - namespace\n          type: object\n    externalDocs:\n      description: Find out more about Kusk-Gateway\n      url: https://kubeshop.github.io/kusk-gateway/\n    info:\n      description: This is the Kusk Gateway Management API\n      title: kusk-gateway-api\n      version: 1.0.0\n    openapi: 3.0.0\n    paths:\n      /apis:\n        get:\n          description: Returns the list of APIs available in the cluster\n          operationId: getApis\n          parameters:\n          - description: optional filter on fleet\n            in: query\n            name: fleetname\n            schema:\n              type: string\n          - description: optional filter on fleet\n            in: query\n            name: fleetnamespace\n            schema:\n              type: string\n          - description: optional filter on namespace\n            in: query\n            name: namespace\n            schema:\n              type: string\n          responses:\n            \"200\":\n              content:\n                application/json:\n                  schema:\n                    items:\n                      $ref: '#/components/schemas/ApiItem'\n                    type: array\n              description: a list of apis\n          summary: Get a list of APIs\n          tags:\n          - apis\n        post:\n          description: Deploys a new API to the cluster\n          operationId: deployApi\n          requestBody:\n            content:\n              application/json:\n                schema:\n                  properties:\n                    envoyFleetName:\n                      type: string\n                    envoyFleetNamespace:\n                      type: string\n                    name:\n                      type: string\n                    namespace:\n                      type: string\n                    openapi:\n                      type: string\n                  type: object\n            description: API content that needs to be deployed\n            required: true\n          responses:\n            \"201\":\n              description: API deployed\n            \"400\":\n              content:\n                application/json:\n                  schema:\n                    type: string\n              description: The content of the API is malformed\n          summary: Deploy new API\n          tags:\n          - apis\n      /apis/{namespace}/{name}:\n        delete:\n          operationId: deleteApi\n          parameters:\n          - in: path\n            name: namespace\n            required: true\n            schema:\n              default: default\n              type: string\n          - in: path\n            name: name\n            required: true\n            schema:\n              type: string\n          responses:\n            \"204\":\n              description: api item deleted\n            \"404\":\n              description: api item not found\n          summary: Delete an API instance by namespace and name\n          tags:\n          - apis\n        get:\n          operationId: getApi\n          parameters:\n          - in: path\n            name: namespace\n            required: true\n            schema:\n              default: default\n              type: string\n          - in: path\n            name: name\n            required: true\n            schema:\n              type: string\n          responses:\n            \"200\":\n              content:\n                application/json:\n                  schema:\n                    $ref: '#/components/schemas/ApiItem'\n              description: API item\n            \"404\":\n              description: API item not found\n          summary: Get an API instance by namespace and name\n          tags:\n          - apis\n        put:\n          description: Updates an existing API in the cluster\n          operationId: updateApi\n          parameters:\n          - in: path\n            name: namespace\n            required: true\n            schema:\n              default: default\n              type: string\n          - in: path\n            name: name\n            required: true\n            schema:\n              type: string\n          requestBody:\n            content:\n              application/json:\n                schema:\n                  properties:\n                    envoyFleetName:\n                      type: string\n                    envoyFleetNamespace:\n                      type: string\n                    name:\n                      type: string\n                    namespace:\n                      type: string\n                    openapi:\n                      type: string\n                  type: object\n            description: API content that needs to be updated\n            required: true\n          responses:\n            \"201\":\n              description: API deployed\n            \"400\":\n              content:\n                application/json:\n                  schema:\n                    type: string\n              description: The content of the API is malformed\n            \"404\":\n              description: API not found\n          summary: Update an existing API\n          tags:\n          - apis\n      /apis/{namespace}/{name}/crd:\n        get:\n          operationId: getApiCRD\n          parameters:\n          - in: path\n            name: namespace\n            required: true\n            schema:\n              default: default\n              type: string\n          - in: path\n            name: name\n            required: true\n            schema:\n              type: string\n          responses:\n            \"200\":\n              content:\n                application/json:\n                  schema:\n                    type: object\n              description: returns the CRD of the API ( Raw Api Spec )\n            \"404\":\n              description: API CRD not found\n          summary: Get API CRD from cluster\n          tags:\n          - apis\n      /apis/{namespace}/{name}/definition:\n        get:\n          operationId: getApiDefinition\n          parameters:\n          - in: path\n            name: namespace\n            required: true\n            schema:\n              default: default\n              type: string\n          - in: path\n            name: name\n            required: true\n            schema:\n              type: string\n          responses:\n            \"200\":\n              content:\n                application/json:\n                  schema:\n                    type: object\n              description: API definition item\n            \"404\":\n              description: API definition not found\n          summary: Get API definition ( Post-Processed version )\n          tags:\n          - apis\n      /fleets:\n        get:\n          description: Returns a list of envoy fleets that are available in the cluster\n          operationId: getEnvoyFleets\n          parameters:\n          - description: optional filter on namespace\n            in: query\n            name: namespace\n            schema:\n              type: string\n          responses:\n            \"200\":\n              content:\n                application/json:\n                  schema:\n                    items:\n                      $ref: '#/components/schemas/EnvoyFleetItem'\n                    type: array\n              description: list of envoy fleets\n          summary: Get a list of envoy fleets\n          tags:\n          - fleets\n        post:\n          operationId: createFleet\n          requestBody:\n            content:\n              application/json:\n                schema:\n                  $ref: '#/components/schemas/ServiceItem'\n            description: create fleet content\n            required: true\n          responses:\n            \"200\":\n              content:\n                application/json:\n                  schema:\n                    $ref: '#/components/schemas/EnvoyFleetItem'\n              description: created fleet\n            \"400\":\n              content:\n                application/json:\n                  schema:\n                    type: string\n              description: The content of the API is malformed\n          summary: create new fleet\n          tags:\n          - create new fleet\n      /fleets/{namespace}/{name}:\n        delete:\n          operationId: deleteFleet\n          parameters:\n          - in: path\n            name: namespace\n            required: true\n            schema:\n              default: default\n              type: string\n          - in: path\n            name: name\n            required: true\n            schema:\n              type: string\n          responses:\n            \"204\":\n              description: fleet item deleted\n            \"404\":\n              description: fleet item not found\n          summary: Delete a Fleet instance by namespace and name\n          tags:\n          - fleets\n        get:\n          description: Returns an object containing info about the envoy fleet corresponding\n            to the namespace and name\n          operationId: getEnvoyFleet\n          parameters:\n          - description: the namespace of the fleet\n            in: path\n            name: namespace\n            required: true\n            schema:\n              type: string\n          - description: the name of the fleet\n            in: path\n            name: name\n            required: true\n            schema:\n              type: string\n          responses:\n            \"200\":\n              content:\n                application/json:\n                  schema:\n                    $ref: '#/components/schemas/EnvoyFleetItem'\n              description: envoy fleet details\n            \"404\":\n              description: Envoy fleet not found by namespace-name combination\n          summary: Get details for a single envoy fleet\n          tags:\n          - fleets\n      /fleets/{namespace}/{name}/crd:\n        get:\n          operationId: getEnvoyFleetCRD\n          parameters:\n          - in: path\n            name: namespace\n            required: true\n            schema:\n              default: default\n              type: string\n          - in: path\n            name: name\n            required: true\n            schema:\n              type: string\n          responses:\n            \"200\":\n              content:\n                application/json:\n                  schema:\n                    type: object\n              description: Envoy fleet CRD\n            \"404\":\n              description: Envoy fleet CRD not found\n          summary: Get envoy fleet CRD\n          tags:\n          - fleets\n      /logs:\n        get:\n          operationId: getEnvoyFleetLogs\n          parameters:\n          - in: query\n            name: namespace\n            schema:\n              default: kusk-system\n              type: string\n          - in: query\n            name: name\n            schema:\n              type: string\n              default: kusk-gateway-envoy-fleet\n          responses:\n            \"200\":\n              content:\n                application/json:\n                  schema:\n                    type: object\n              description: Envoy fleet logs\n            \"404\":\n              description: Envoy fleet logs not found\n          summary: Get envoy fleet logs\n          tags:\n          - fleets\n        x-kusk:\n          upstream:\n            rewrite:\n              pattern: ^/api\n              substitution: \"\"\n            service:\n              name: kusk-gateway-api\n              namespace: kusk-system\n              port: 8081\n          websocket: true\n      /namespaces:\n        get:\n          description: Returns a list of namespaces\n          operationId: getNamespaces\n          responses:\n            \"200\":\n              content:\n                application/json:\n                  schema:\n                    items:\n                      $ref: '#/components/schemas/NamespaceItem'\n                    type: array\n              description: list of namespaces\n          summary: Get a list of namespaces\n          tags:\n          - namespaces\n      /services:\n        get:\n          description: Returns the list of services available in the cluster that are\n            related to kusk-gateway\n          operationId: getServices\n          parameters:\n          - description: optional filter on namespace\n            in: query\n            name: namespace\n            schema:\n              type: string\n          responses:\n            \"200\":\n              content:\n                application/json:\n                  schema:\n                    items:\n                      $ref: '#/components/schemas/ServiceItem'\n                    type: array\n              description: list of services\n          summary: Get a list of services handled by kusk-gateway\n          tags:\n          - services\n      /services/{namespace}/{name}:\n        get:\n          description: Returns an object containing info about the service corresponding\n            to the namespace and name\n          operationId: getService\n          parameters:\n          - in: path\n            name: namespace\n            required: true\n            schema:\n              type: string\n          - in: path\n            name: name\n            required: true\n            schema:\n              type: string\n          responses:\n            \"200\":\n              content:\n                application/json:\n                  schema:\n                    $ref: '#/components/schemas/ServiceItem'\n              description: service details\n            \"404\":\n              description: Service not found by namespace-name combination\n          summary: Get details for a single service\n          tags:\n          - services\n      /staticroutes:\n        get:\n          description: Returns a list of static routes\n          operationId: getStaticRoutes\n          parameters:\n          - description: optional filter on namespace\n            in: query\n            name: namespace\n            schema:\n              type: string\n          responses:\n            \"200\":\n              content:\n                application/json:\n                  schema:\n                    items:\n                      $ref: '#/components/schemas/StaticRouteItem'\n                    type: array\n              description: list of static routes\n          summary: Get a list of static routes\n          tags:\n          - static routes\n        post:\n          operationId: createStaticRoute\n          requestBody:\n            content:\n              application/json:\n                schema:\n                  properties:\n                    envoyFleetName:\n                      type: string\n                    envoyFleetNamespace:\n                      type: string\n                    name:\n                      type: string\n                    namespace:\n                      type: string\n                    openapi:\n                      type: string\n                  type: object\n            description: static route content\n            required: true\n          responses:\n            \"200\":\n              content:\n                application/json:\n                  schema:\n                    $ref: '#/components/schemas/StaticRouteItem'\n              description: created static route\n            \"400\":\n              content:\n                application/json:\n                  schema:\n                    type: string\n              description: The content of the API is malformed\n          summary: create new static route\n          tags:\n          - create new static route\n      /staticroutes/{namespace}/{name}:\n        delete:\n          operationId: deleteStaticRoute\n          parameters:\n          - in: path\n            name: namespace\n            required: true\n            schema:\n              default: default\n              type: string\n          - in: path\n            name: name\n            required: true\n            schema:\n              type: string\n          responses:\n            \"204\":\n              description: staticRoute item deleted\n            \"404\":\n              description: staticRoute item not found\n          summary: Delete a StaticRoute by namespace and name\n          tags:\n          - static Route\n        get:\n          description: Returns an object containing info about the static route corresponding\n            to the namespace and name\n          operationId: getStaticRoute\n          parameters:\n          - description: the namespace of the static route\n            in: path\n            name: namespace\n            required: true\n            schema:\n              type: string\n          - description: the name of the static route\n            in: path\n            name: name\n            required: true\n            schema:\n              type: string\n          responses:\n            \"200\":\n              content:\n                application/json:\n                  schema:\n                    $ref: '#/components/schemas/StaticRouteItem'\n              description: get static route details\n            \"404\":\n              description: Static Route not found by namespace-name combination\n          summary: Get details for a single static route\n          tags:\n          - static routes\n        put:\n          operationId: updateStaticRoute\n          parameters:\n          - in: path\n            name: namespace\n            required: true\n            schema:\n              default: default\n              type: string\n          - in: path\n            name: name\n            required: true\n            schema:\n              type: string\n          requestBody:\n            content:\n              application/json:\n                schema:\n                  properties:\n                    envoyFleetName:\n                      type: string\n                    envoyFleetNamespace:\n                      type: string\n                    name:\n                      type: string\n                    namespace:\n                      type: string\n                    openapi:\n                      type: string\n                  type: object\n            description: static route content\n            required: true\n          responses:\n            \"201\":\n              content:\n                application/json:\n                  schema:\n                    $ref: '#/components/schemas/StaticRouteItem'\n              description: static route updated\n            \"400\":\n              content:\n                application/json:\n                  schema:\n                    type: string\n              description: The content of the static route is malformed\n            \"404\":\n              description: static route not found\n          summary: Update a static route by namespace and name\n          tags:\n          - static routes\n      /staticroutes/{namespace}/{name}/crd:\n        get:\n          operationId: getStaticRouteCRD\n          parameters:\n          - in: path\n            name: namespace\n            required: true\n            schema:\n              default: default\n              type: string\n          - in: path\n            name: name\n            required: true\n            schema:\n              type: string\n          responses:\n            \"200\":\n              content:\n                application/json:\n                  schema:\n                    type: object\n              description: Static route CRD\n            \"404\":\n              description: Static route CRD not found\n          summary: Get static route CRD\n          tags:\n          - static routes\n    servers:\n    - description: My local endpoint mockup\n      url: http://localhost:8080\n    tags:\n    - description: Get the list of the APIs\n      name: apis\n    - description: Get the list of all services\n      name: services\n    - description: Get the list of all envoy fleets\n      name: fleets\n    - description: Get the list of all static routes\n      name: static routes\n    x-kusk:\n      path:\n        prefix: /api\n      upstream:\n        rewrite:\n          pattern: ^/api\n          substitution: \"\"\n        service:\n          name: kusk-gateway-api\n          namespace: kusk-system\n          port: 80\n",
			"canonicalURL": "/github.com/kubeshop/kusk-gateway@5f154f54721faab0857b86a41f77402e2bdfc7af/-/blob/cmd/kusk/manifests/api_server_api.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/kubeshop/kusk-gateway/blob/5f154f54721faab0857b86a41f77402e2bdfc7af/cmd/kusk/manifests/api_server_api.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "parse: parse spec: parse version: at cmd/kusk/manifests/api_server_api.yaml:3:1: invalid version: invalid major version: strconv.Atoi: parsing \"\": invalid syntax"
}