{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/plantbreeding/BrAPI"
		},
		"file": {
			"name": "ServerInfo_GET.yaml",
			"size": 0,
			"path": "Specification/BrAPI-Core/ServerInfo/ServerInfo_GET.yaml",
			"byteSize": 2889,
			"content": "info:\n  title: BrAPI\n  version: ''\nopenapi: 3.0.0\npaths:\n  /serverinfo:\n    get:\n      description: |-\n        Implementation Notes\n        \n        Having a consistent structure for the path string of each call is very \n        important for teams to be able to connect and find errors. Read more on Github.\n        \n        Here are the rules for the path of each call that should be returned\n        \n        Every word in the call path should match the documentation exactly, both in \n        spelling and capitalization. Note that path strings are all lower case, but \n        path parameters are camel case.\n        \n        Each path should start relative to \\\"/\\\" and therefore should not include \\\"/\\\"\n        \n        No leading or trailing slashes (\\\"/\\\") \n        \n        Path parameters are wrapped in curly braces (\\\"{}\\\"). The name of the path parameter \n        should be spelled exactly as it is specified in the documentation.\n        \n        Examples \n        \n        GOOD   \"call\": \"germplasm/{germplasmDbId}/pedigree\" \n        \n        BAD    \"call\": \"germplasm/{id}/pedigree\"\n        \n        BAD    \"call\": \"germplasm/{germplasmDBid}/pedigree\" \n        \n        BAD    \"call\": \"brapi/v2/germplasm/{germplasmDbId}/pedigree\" \n        \n        BAD    \"call\": \"/germplasm/{germplasmDbId}/pedigree/\" \n        \n        BAD    \"call\": \"germplasm/<germplasmDbId>/pedigree\"\n      parameters:\n      - description: Filter the list of endpoints based on the response content type.\n        in: query\n        name: contentType\n        required: false\n        schema:\n          $ref: '#/components/schemas/ContentTypes'\n      - description: |-\n          **Deprecated in v2.1** Please use `contentType`. Github issue number #443\n          <br>The data format supported by the call.\n        deprecated: true\n        in: query\n        name: dataType\n        required: false\n        schema:\n          $ref: '#/components/schemas/ContentTypes'\n      - $ref: '#/components/parameters/authorizationHeader'\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                properties:\n                  '@context':\n                    $ref: '#/components/schemas/Context'\n                  metadata:\n                    $ref: '#/components/schemas/metadata'\n                  result:\n                    $ref: '#/components/schemas/ServerInfo'\n                required:\n                - metadata\n                - result\n                title: ServerInfoResponse\n                type: object\n          description: OK\n          headers: {}\n        '400':\n          $ref: '#/components/responses/400BadRequest'\n        '401':\n          $ref: '#/components/responses/401Unauthorized'\n        '403':\n          $ref: '#/components/responses/403Forbidden'\n      summary: Get the list of implemented Calls\n      tags:\n      - Server Info\n",
			"canonicalURL": "/github.com/plantbreeding/BrAPI@a45723dba8753a1c1177ec8f7759d57ebcf5f5b1/-/blob/Specification/BrAPI-Core/ServerInfo/ServerInfo_GET.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/plantbreeding/BrAPI/blob/a45723dba8753a1c1177ec8f7759d57ebcf5f5b1/Specification/BrAPI-Core/ServerInfo/ServerInfo_GET.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "parse: parse spec: parse operations: path \"/serverinfo\": at 1:81: get: at 1:88: parameters: parse parameter \"contentType\": at 1:1239: schema: at 1:1381: parse schema: resolve \"#/components/schemas/ContentTypes\": find schema: resolve \"#/components/schemas/ContentTypes\": can't find value for \"components/schemas/ContentTypes\""
}