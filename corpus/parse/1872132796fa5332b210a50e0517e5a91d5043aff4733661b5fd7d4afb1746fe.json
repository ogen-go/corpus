{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/restful-ma/thresholds"
		},
		"file": {
			"name": "amazonaws.com-apigatewayv2-2018-11-29-swagger.yaml",
			"size": 0,
			"path": "benchmark-repository/openapi/amazonaws.com-apigatewayv2-2018-11-29-swagger.yaml",
			"byteSize": 198722,
			"content": "openapi: 3.0.0\ninfo:\n  version: 2018-11-29\n  x-release: v4\n  title: AmazonApiGatewayV2\n  description: Amazon API Gateway V2\n  x-logo:\n    url: https://twitter.com/awscloud/profile_image?size=original\n    backgroundColor: \"#FFFFFF\"\n  termsOfService: https://aws.amazon.com/service-terms/\n  contact:\n    name: Mike Ralphson\n    email: mike.ralphson@gmail.com\n    url: https://github.com/mermade/aws2openapi\n    x-twitter: PermittedSoc\n  license:\n    name: Apache 2.0 License\n    url: http://www.apache.org/licenses/\n  x-providerName: amazonaws.com\n  x-serviceName: apigatewayv2\n  x-origin:\n    - contentType: application/json\n      url: https://raw.githubusercontent.com/aws/aws-sdk-js/master/apis/apigatewayv2-2018-11-29.normal.json\n      converter:\n        url: https://github.com/mermade/aws2openapi\n        version: 1.0.0\n      x-apisguru-direct: true\n  x-apiClientRegistration:\n    url: https://portal.aws.amazon.com/gp/aws/developer/registration/index.html?nc2=h_ct\n  x-apisguru-categories:\n    - cloud\n  x-preferred: true\nexternalDocs:\n  description: Amazon Web Services documentation\n  url: https://docs.aws.amazon.com/apigateway/\nx-hasEquivalentPaths: true\nsecurity:\n  - hmac: []\npaths:\n  /v2/apis:\n    post:\n      operationId: CreateApi\n      description: Creates an Api resource.\n      responses:\n        \"201\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/CreateApiResponse\"\n        \"480\":\n          description: NotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/NotFoundException\"\n        \"481\":\n          description: TooManyRequestsException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/TooManyRequestsException\"\n        \"482\":\n          description: BadRequestException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/BadRequestException\"\n        \"483\":\n          description: ConflictException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ConflictException\"\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              required:\n                - name\n                - protocolType\n                - routeSelectionExpression\n              properties:\n                apiKeySelectionExpression:\n                  description: An expression used to extract information at runtime. See \u003ca\n                    href=\"https://docs.aws.amazon.com/apigateway/latest/developerguide/apigateway-websocket-api-selection-expressions.html#apigateway-websocket-api-apikey-selection-expressions\"\u003eSelection\n                    Expressions\u003c/a\u003e for more information.\n                  type: string\n                description:\n                  description: A string with a length between [0-1024].\n                  type: string\n                disableSchemaValidation:\n                  description: Avoid validating models when creating a deployment.\n                  type: boolean\n                name:\n                  description: A string with a length between [1-128].\n                  type: string\n                protocolType:\n                  description: \"\"\n                  type: string\n                  enum:\n                    - WEBSOCKET\n                routeSelectionExpression:\n                  description: An expression used to extract information at runtime. See \u003ca\n                    href=\"https://docs.aws.amazon.com/apigateway/latest/developerguide/apigateway-websocket-api-selection-expressions.html#apigateway-websocket-api-apikey-selection-expressions\"\u003eSelection\n                    Expressions\u003c/a\u003e for more information.\n                  type: string\n                version:\n                  description: A string with a length between [1-64].\n                  type: string\n                tags:\n                  description: The key-value map of strings. The valid character set is\n                    [a-zA-Z+-=._:/]. The tag key can be up to 128 characters and\n                    must not start with aws:. The tag value can be up to 256\n                    characters..\n                  type: object\n                  additionalProperties:\n                    $ref: \"#/components/schemas/StringWithLengthBetween1And1600\"\n        required: true\n    parameters:\n      - $ref: \"#/components/parameters/X-Amz-Content-Sha256\"\n      - $ref: \"#/components/parameters/X-Amz-Date\"\n      - $ref: \"#/components/parameters/X-Amz-Algorithm\"\n      - $ref: \"#/components/parameters/X-Amz-Credential\"\n      - $ref: \"#/components/parameters/X-Amz-Security-Token\"\n      - $ref: \"#/components/parameters/X-Amz-Signature\"\n      - $ref: \"#/components/parameters/X-Amz-SignedHeaders\"\n    get:\n      operationId: GetApis\n      description: Gets a collection of Api resources.\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/GetApisResponse\"\n        \"480\":\n          description: NotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/NotFoundException\"\n        \"481\":\n          description: TooManyRequestsException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/TooManyRequestsException\"\n        \"482\":\n          description: BadRequestException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/BadRequestException\"\n      parameters:\n        - name: maxResults\n          in: query\n          required: false\n          description: The maximum number of elements to be returned for this resource.\n          schema:\n            type: string\n        - name: nextToken\n          in: query\n          required: false\n          description: \u003e-\n            The next page of elements from this collection. Not valid for the\n            last element of\n             the collection.\n          schema:\n            type: string\n  \"/v2/domainnames/{domainName}/apimappings\":\n    post:\n      operationId: CreateApiMapping\n      description: Creates an API mapping.\n      responses:\n        \"201\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/CreateApiMappingResponse\"\n        \"480\":\n          description: NotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/NotFoundException\"\n        \"481\":\n          description: TooManyRequestsException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/TooManyRequestsException\"\n        \"482\":\n          description: BadRequestException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/BadRequestException\"\n        \"483\":\n          description: ConflictException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ConflictException\"\n      parameters:\n        - name: domainName\n          in: path\n          required: true\n          description: The domain name.\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              required:\n                - apiId\n                - stage\n              properties:\n                apiId:\n                  description: The identifier.\n                  type: string\n                apiMappingKey:\n                  description: \u003e-\n                    After evaulating a selection expression, the result is\n                    compared against one or\n                     more selection keys to find a matching key. See \u003ca href=\"https://docs.aws.amazon.com/apigateway/latest/developerguide/apigateway-websocket-api-selection-expressions.html#apigateway-websocket-api-apikey-selection-expressions\"\u003eSelection Expressions\u003c/a\u003e for a list of expressions and each expression's\n                     associated selection key type.\n                  type: string\n                stage:\n                  description: A string with a length between [1-128].\n                  type: string\n        required: true\n    parameters:\n      - $ref: \"#/components/parameters/X-Amz-Content-Sha256\"\n      - $ref: \"#/components/parameters/X-Amz-Date\"\n      - $ref: \"#/components/parameters/X-Amz-Algorithm\"\n      - $ref: \"#/components/parameters/X-Amz-Credential\"\n      - $ref: \"#/components/parameters/X-Amz-Security-Token\"\n      - $ref: \"#/components/parameters/X-Amz-Signature\"\n      - $ref: \"#/components/parameters/X-Amz-SignedHeaders\"\n    get:\n      operationId: GetApiMappings\n      description: The API mappings.\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/GetApiMappingsResponse\"\n        \"480\":\n          description: NotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/NotFoundException\"\n        \"481\":\n          description: TooManyRequestsException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/TooManyRequestsException\"\n        \"482\":\n          description: BadRequestException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/BadRequestException\"\n      parameters:\n        - name: domainName\n          in: path\n          required: true\n          description: The domain name.\n          schema:\n            type: string\n        - name: maxResults\n          in: query\n          required: false\n          description: The maximum number of elements to be returned for this resource.\n          schema:\n            type: string\n        - name: nextToken\n          in: query\n          required: false\n          description: \u003e-\n            The next page of elements from this collection. Not valid for the\n            last element of\n             the collection.\n          schema:\n            type: string\n  \"/v2/apis/{apiId}/authorizers\":\n    post:\n      operationId: CreateAuthorizer\n      description: Creates an Authorizer for an API.\n      responses:\n        \"201\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/CreateAuthorizerResponse\"\n        \"480\":\n          description: NotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/NotFoundException\"\n        \"481\":\n          description: TooManyRequestsException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/TooManyRequestsException\"\n        \"482\":\n          description: BadRequestException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/BadRequestException\"\n        \"483\":\n          description: ConflictException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ConflictException\"\n      parameters:\n        - name: apiId\n          in: path\n          required: true\n          description: The API identifier.\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              required:\n                - authorizerType\n                - authorizerUri\n                - identitySource\n                - name\n              properties:\n                authorizerCredentialsArn:\n                  description: Represents an Amazon Resource Name (ARN).\n                  type: string\n                authorizerResultTtlInSeconds:\n                  description: An integer with a value between [0-3600].\n                  type: integer\n                  minimum: -2147483648\n                  maximum: 2147483647\n                authorizerType:\n                  description: \u003e-\n                    The authorizer type. Currently the only valid value is\n                    REQUEST, for a\n                     Lambda function using incoming request parameters.\n                  type: string\n                  enum:\n                    - REQUEST\n                authorizerUri:\n                  description: A string representation of a URI with a length between\n                    [1-2048].\n                  type: string\n                identitySource:\n                  description: \u003e-\n                    The identity source for which authorization is requested.\n                    For the REQUEST\n                     authorizer, this is required when authorization caching is enabled. The value is a\n                     comma-separated string of one or more mapping expressions of the specified request\n                     parameters. For example, if an Auth header, a Name query string parameter are defined\n                     as identity sources, this value is $method.request.header.Auth,\n                     $method.request.querystring.Name. These parameters will be used to derive\n                     the authorization caching key and to perform runtime validation of the REQUEST\n                     authorizer by verifying all of the identity-related request parameters are present,\n                     not null and non-empty. Only when this is true does the authorizer invoke the\n                     authorizer Lambda function, otherwise, it returns a 401 Unauthorized\n                     response without calling the Lambda function. The valid value is a string of\n                     comma-separated mapping expressions of the specified request parameters. When the\n                     authorization caching is not enabled, this property is optional.\n                  type: array\n                  items:\n                    $ref: \"#/components/schemas/__string\"\n                identityValidationExpression:\n                  description: A string with a length between [0-1024].\n                  type: string\n                name:\n                  description: A string with a length between [1-128].\n                  type: string\n                providerArns:\n                  description: For REQUEST authorizer, this is not defined.\n                  type: array\n                  items:\n                    $ref: \"#/components/schemas/Arn\"\n        required: true\n    parameters:\n      - $ref: \"#/components/parameters/X-Amz-Content-Sha256\"\n      - $ref: \"#/components/parameters/X-Amz-Date\"\n      - $ref: \"#/components/parameters/X-Amz-Algorithm\"\n      - $ref: \"#/components/parameters/X-Amz-Credential\"\n      - $ref: \"#/components/parameters/X-Amz-Security-Token\"\n      - $ref: \"#/components/parameters/X-Amz-Signature\"\n      - $ref: \"#/components/parameters/X-Amz-SignedHeaders\"\n    get:\n      operationId: GetAuthorizers\n      description: Gets the Authorizers for an API.\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/GetAuthorizersResponse\"\n        \"480\":\n          description: NotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/NotFoundException\"\n        \"481\":\n          description: TooManyRequestsException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/TooManyRequestsException\"\n        \"482\":\n          description: BadRequestException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/BadRequestException\"\n      parameters:\n        - name: apiId\n          in: path\n          required: true\n          description: The API identifier.\n          schema:\n            type: string\n        - name: maxResults\n          in: query\n          required: false\n          description: The maximum number of elements to be returned for this resource.\n          schema:\n            type: string\n        - name: nextToken\n          in: query\n          required: false\n          description: \u003e-\n            The next page of elements from this collection. Not valid for the\n            last element of\n             the collection.\n          schema:\n            type: string\n  \"/v2/apis/{apiId}/deployments\":\n    post:\n      operationId: CreateDeployment\n      description: Creates a Deployment for an API.\n      responses:\n        \"201\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/CreateDeploymentResponse\"\n        \"480\":\n          description: NotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/NotFoundException\"\n        \"481\":\n          description: TooManyRequestsException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/TooManyRequestsException\"\n        \"482\":\n          description: BadRequestException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/BadRequestException\"\n        \"483\":\n          description: ConflictException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ConflictException\"\n      parameters:\n        - name: apiId\n          in: path\n          required: true\n          description: The API identifier.\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                description:\n                  description: A string with a length between [0-1024].\n                  type: string\n                stageName:\n                  description: A string with a length between [1-128].\n                  type: string\n        required: true\n    parameters:\n      - $ref: \"#/components/parameters/X-Amz-Content-Sha256\"\n      - $ref: \"#/components/parameters/X-Amz-Date\"\n      - $ref: \"#/components/parameters/X-Amz-Algorithm\"\n      - $ref: \"#/components/parameters/X-Amz-Credential\"\n      - $ref: \"#/components/parameters/X-Amz-Security-Token\"\n      - $ref: \"#/components/parameters/X-Amz-Signature\"\n      - $ref: \"#/components/parameters/X-Amz-SignedHeaders\"\n    get:\n      operationId: GetDeployments\n      description: Gets the Deployments for an API.\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/GetDeploymentsResponse\"\n        \"480\":\n          description: NotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/NotFoundException\"\n        \"481\":\n          description: TooManyRequestsException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/TooManyRequestsException\"\n        \"482\":\n          description: BadRequestException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/BadRequestException\"\n      parameters:\n        - name: apiId\n          in: path\n          required: true\n          description: The API identifier.\n          schema:\n            type: string\n        - name: maxResults\n          in: query\n          required: false\n          description: The maximum number of elements to be returned for this resource.\n          schema:\n            type: string\n        - name: nextToken\n          in: query\n          required: false\n          description: \u003e-\n            The next page of elements from this collection. Not valid for the\n            last element of\n             the collection.\n          schema:\n            type: string\n  /v2/domainnames:\n    post:\n      operationId: CreateDomainName\n      description: Creates a domain name.\n      responses:\n        \"201\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/CreateDomainNameResponse\"\n        \"480\":\n          description: NotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/NotFoundException\"\n        \"481\":\n          description: TooManyRequestsException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/TooManyRequestsException\"\n        \"482\":\n          description: BadRequestException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/BadRequestException\"\n        \"483\":\n          description: ConflictException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ConflictException\"\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              required:\n                - domainName\n              properties:\n                domainName:\n                  description: A string with a length between [1-512].\n                  type: string\n                domainNameConfigurations:\n                  description: The domain name configurations.\n                  type: array\n                  items:\n                    $ref: \"#/components/schemas/DomainNameConfiguration\"\n                tags:\n                  description: The key-value map of strings. The valid character set is\n                    [a-zA-Z+-=._:/]. The tag key can be up to 128 characters and\n                    must not start with aws:. The tag value can be up to 256\n                    characters..\n                  type: object\n                  additionalProperties:\n                    $ref: \"#/components/schemas/StringWithLengthBetween1And1600\"\n        required: true\n    parameters:\n      - $ref: \"#/components/parameters/X-Amz-Content-Sha256\"\n      - $ref: \"#/components/parameters/X-Amz-Date\"\n      - $ref: \"#/components/parameters/X-Amz-Algorithm\"\n      - $ref: \"#/components/parameters/X-Amz-Credential\"\n      - $ref: \"#/components/parameters/X-Amz-Security-Token\"\n      - $ref: \"#/components/parameters/X-Amz-Signature\"\n      - $ref: \"#/components/parameters/X-Amz-SignedHeaders\"\n    get:\n      operationId: GetDomainNames\n      description: Gets the domain names for an AWS account.\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/GetDomainNamesResponse\"\n        \"480\":\n          description: NotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/NotFoundException\"\n        \"481\":\n          description: TooManyRequestsException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/TooManyRequestsException\"\n        \"482\":\n          description: BadRequestException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/BadRequestException\"\n      parameters:\n        - name: maxResults\n          in: query\n          required: false\n          description: The maximum number of elements to be returned for this resource.\n          schema:\n            type: string\n        - name: nextToken\n          in: query\n          required: false\n          description: \u003e-\n            The next page of elements from this collection. Not valid for the\n            last element of\n             the collection.\n          schema:\n            type: string\n  \"/v2/apis/{apiId}/integrations\":\n    post:\n      operationId: CreateIntegration\n      description: Creates an Integration.\n      responses:\n        \"201\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/CreateIntegrationResponse\"\n        \"480\":\n          description: NotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/NotFoundException\"\n        \"481\":\n          description: TooManyRequestsException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/TooManyRequestsException\"\n        \"482\":\n          description: BadRequestException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/BadRequestException\"\n        \"483\":\n          description: ConflictException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ConflictException\"\n      parameters:\n        - name: apiId\n          in: path\n          required: true\n          description: The API identifier.\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              required:\n                - integrationType\n              properties:\n                connectionId:\n                  description: A string with a length between [1-1024].\n                  type: string\n                connectionType:\n                  description: Represents a connection type.\n                  type: string\n                  enum:\n                    - INTERNET\n                    - VPC_LINK\n                contentHandlingStrategy:\n                  description: Specifies how to handle response payload content type\n                    conversions.\n                  type: string\n                  enum:\n                    - CONVERT_TO_BINARY\n                    - CONVERT_TO_TEXT\n                credentialsArn:\n                  description: Represents an Amazon Resource Name (ARN).\n                  type: string\n                description:\n                  description: A string with a length between [0-1024].\n                  type: string\n                integrationMethod:\n                  description: A string with a length between [1-64].\n                  type: string\n                integrationType:\n                  description: Represents an API method integration type.\n                  type: string\n                  enum:\n                    - AWS\n                    - HTTP\n                    - MOCK\n                    - HTTP_PROXY\n                    - AWS_PROXY\n                integrationUri:\n                  description: A string representation of a URI with a length between\n                    [1-2048].\n                  type: string\n                passthroughBehavior:\n                  description: Represents passthrough behavior for an integration response.\n                  type: string\n                  enum:\n                    - WHEN_NO_MATCH\n                    - NEVER\n                    - WHEN_NO_TEMPLATES\n                requestParameters:\n                  description: \u003e-\n                    A key-value map specifying response parameters that are\n                    passed to the method\n                     response from the backend. The key is a method response header parameter name and the\n                     mapped value is an integration response header value, a static value enclosed within\n                     a pair of single quotes, or a JSON expression from the integration response body. The\n                     mapping key must match the pattern of method.response.header.{name}, where name is a\n                     valid and unique header name. The mapped non-static value must match the pattern of\n                     integration.response.header.{name} or integration.response.body.{JSON-expression},\n                     where name is a valid and unique response header name and JSON-expression is a valid\n                     JSON expression without the $ prefix.\n                  type: object\n                  additionalProperties:\n                    $ref: \"#/components/schemas/StringWithLengthBetween1And512\"\n                requestTemplates:\n                  description: \u003e-\n                    A mapping of identifier keys to templates. The value is an\n                    actual template script.\n                     The key is typically a SelectionKey which is chosen based on evaluating\n                     a selection expression.\n                  type: object\n                  additionalProperties:\n                    $ref: \"#/components/schemas/StringWithLengthBetween0And32K\"\n                templateSelectionExpression:\n                  description: An expression used to extract information at runtime. See \u003ca\n                    href=\"https://docs.aws.amazon.com/apigateway/latest/developerguide/apigateway-websocket-api-selection-expressions.html#apigateway-websocket-api-apikey-selection-expressions\"\u003eSelection\n                    Expressions\u003c/a\u003e for more information.\n                  type: string\n                timeoutInMillis:\n                  description: An integer with a value between [50-29000].\n                  type: integer\n                  minimum: -2147483648\n                  maximum: 2147483647\n        required: true\n    parameters:\n      - $ref: \"#/components/parameters/X-Amz-Content-Sha256\"\n      - $ref: \"#/components/parameters/X-Amz-Date\"\n      - $ref: \"#/components/parameters/X-Amz-Algorithm\"\n      - $ref: \"#/components/parameters/X-Amz-Credential\"\n      - $ref: \"#/components/parameters/X-Amz-Security-Token\"\n      - $ref: \"#/components/parameters/X-Amz-Signature\"\n      - $ref: \"#/components/parameters/X-Amz-SignedHeaders\"\n    get:\n      operationId: GetIntegrations\n      description: Gets the Integrations for an API.\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/GetIntegrationsResponse\"\n        \"480\":\n          description: NotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/NotFoundException\"\n        \"481\":\n          description: TooManyRequestsException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/TooManyRequestsException\"\n        \"482\":\n          description: BadRequestException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/BadRequestException\"\n      parameters:\n        - name: apiId\n          in: path\n          required: true\n          description: The API identifier.\n          schema:\n            type: string\n        - name: maxResults\n          in: query\n          required: false\n          description: The maximum number of elements to be returned for this resource.\n          schema:\n            type: string\n        - name: nextToken\n          in: query\n          required: false\n          description: \u003e-\n            The next page of elements from this collection. Not valid for the\n            last element of\n             the collection.\n          schema:\n            type: string\n  \"/v2/apis/{apiId}/integrations/{integrationId}/integrationresponses\":\n    post:\n      operationId: CreateIntegrationResponse\n      description: Creates an IntegrationResponses.\n      responses:\n        \"201\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/CreateIntegrationResponseResponse\"\n        \"480\":\n          description: NotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/NotFoundException\"\n        \"481\":\n          description: TooManyRequestsException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/TooManyRequestsException\"\n        \"482\":\n          description: BadRequestException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/BadRequestException\"\n        \"483\":\n          description: ConflictException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ConflictException\"\n      parameters:\n        - name: apiId\n          in: path\n          required: true\n          description: The API identifier.\n          schema:\n            type: string\n        - name: integrationId\n          in: path\n          required: true\n          description: The integration ID.\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              required:\n                - integrationResponseKey\n              properties:\n                contentHandlingStrategy:\n                  description: Specifies how to handle response payload content type\n                    conversions.\n                  type: string\n                  enum:\n                    - CONVERT_TO_BINARY\n                    - CONVERT_TO_TEXT\n                integrationResponseKey:\n                  description: \u003e-\n                    After evaulating a selection expression, the result is\n                    compared against one or\n                     more selection keys to find a matching key. See \u003ca href=\"https://docs.aws.amazon.com/apigateway/latest/developerguide/apigateway-websocket-api-selection-expressions.html#apigateway-websocket-api-apikey-selection-expressions\"\u003eSelection Expressions\u003c/a\u003e for a list of expressions and each expression's\n                     associated selection key type.\n                  type: string\n                responseParameters:\n                  description: \u003e-\n                    A key-value map specifying response parameters that are\n                    passed to the method\n                     response from the backend. The key is a method response header parameter name and the\n                     mapped value is an integration response header value, a static value enclosed within\n                     a pair of single quotes, or a JSON expression from the integration response body. The\n                     mapping key must match the pattern of method.response.header.{name}, where name is a\n                     valid and unique header name. The mapped non-static value must match the pattern of\n                     integration.response.header.{name} or integration.response.body.{JSON-expression},\n                     where name is a valid and unique response header name and JSON-expression is a valid\n                     JSON expression without the $ prefix.\n                  type: object\n                  additionalProperties:\n                    $ref: \"#/components/schemas/StringWithLengthBetween1And512\"\n                responseTemplates:\n                  description: \u003e-\n                    A mapping of identifier keys to templates. The value is an\n                    actual template script.\n                     The key is typically a SelectionKey which is chosen based on evaluating\n                     a selection expression.\n                  type: object\n                  additionalProperties:\n                    $ref: \"#/components/schemas/StringWithLengthBetween0And32K\"\n                templateSelectionExpression:\n                  description: An expression used to extract information at runtime. See \u003ca\n                    href=\"https://docs.aws.amazon.com/apigateway/latest/developerguide/apigateway-websocket-api-selection-expressions.html#apigateway-websocket-api-apikey-selection-expressions\"\u003eSelection\n                    Expressions\u003c/a\u003e for more information.\n                  type: string\n        required: true\n    parameters:\n      - $ref: \"#/components/parameters/X-Amz-Content-Sha256\"\n      - $ref: \"#/components/parameters/X-Amz-Date\"\n      - $ref: \"#/components/parameters/X-Amz-Algorithm\"\n      - $ref: \"#/components/parameters/X-Amz-Credential\"\n      - $ref: \"#/components/parameters/X-Amz-Security-Token\"\n      - $ref: \"#/components/parameters/X-Amz-Signature\"\n      - $ref: \"#/components/parameters/X-Amz-SignedHeaders\"\n    get:\n      operationId: GetIntegrationResponses\n      description: Gets the IntegrationResponses for an Integration.\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/GetIntegrationResponsesResponse\"\n        \"480\":\n          description: NotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/NotFoundException\"\n        \"481\":\n          description: TooManyRequestsException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/TooManyRequestsException\"\n        \"482\":\n          description: BadRequestException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/BadRequestException\"\n      parameters:\n        - name: apiId\n          in: path\n          required: true\n          description: The API identifier.\n          schema:\n            type: string\n        - name: integrationId\n          in: path\n          required: true\n          description: The integration ID.\n          schema:\n            type: string\n        - name: maxResults\n          in: query\n          required: false\n          description: The maximum number of elements to be returned for this resource.\n          schema:\n            type: string\n        - name: nextToken\n          in: query\n          required: false\n          description: \u003e-\n            The next page of elements from this collection. Not valid for the\n            last element of\n             the collection.\n          schema:\n            type: string\n  \"/v2/apis/{apiId}/models\":\n    post:\n      operationId: CreateModel\n      description: Creates a Model for an API.\n      responses:\n        \"201\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/CreateModelResponse\"\n        \"480\":\n          description: NotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/NotFoundException\"\n        \"481\":\n          description: TooManyRequestsException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/TooManyRequestsException\"\n        \"482\":\n          description: BadRequestException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/BadRequestException\"\n        \"483\":\n          description: ConflictException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ConflictException\"\n      parameters:\n        - name: apiId\n          in: path\n          required: true\n          description: The API identifier.\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              required:\n                - name\n                - schema\n              properties:\n                contentType:\n                  description: A string with a length between [1-256].\n                  type: string\n                description:\n                  description: A string with a length between [0-1024].\n                  type: string\n                name:\n                  description: A string with a length between [1-128].\n                  type: string\n                schema:\n                  description: A string with a length between [0-32768].\n                  type: string\n        required: true\n    parameters:\n      - $ref: \"#/components/parameters/X-Amz-Content-Sha256\"\n      - $ref: \"#/components/parameters/X-Amz-Date\"\n      - $ref: \"#/components/parameters/X-Amz-Algorithm\"\n      - $ref: \"#/components/parameters/X-Amz-Credential\"\n      - $ref: \"#/components/parameters/X-Amz-Security-Token\"\n      - $ref: \"#/components/parameters/X-Amz-Signature\"\n      - $ref: \"#/components/parameters/X-Amz-SignedHeaders\"\n    get:\n      operationId: GetModels\n      description: Gets the Models for an API.\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/GetModelsResponse\"\n        \"480\":\n          description: NotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/NotFoundException\"\n        \"481\":\n          description: TooManyRequestsException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/TooManyRequestsException\"\n        \"482\":\n          description: BadRequestException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/BadRequestException\"\n      parameters:\n        - name: apiId\n          in: path\n          required: true\n          description: The API identifier.\n          schema:\n            type: string\n        - name: maxResults\n          in: query\n          required: false\n          description: The maximum number of elements to be returned for this resource.\n          schema:\n            type: string\n        - name: nextToken\n          in: query\n          required: false\n          description: \u003e-\n            The next page of elements from this collection. Not valid for the\n            last element of\n             the collection.\n          schema:\n            type: string\n  \"/v2/apis/{apiId}/routes\":\n    post:\n      operationId: CreateRoute\n      description: Creates a Route for an API.\n      responses:\n        \"201\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/CreateRouteResponse\"\n        \"480\":\n          description: NotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/NotFoundException\"\n        \"481\":\n          description: TooManyRequestsException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/TooManyRequestsException\"\n        \"482\":\n          description: BadRequestException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/BadRequestException\"\n        \"483\":\n          description: ConflictException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ConflictException\"\n      parameters:\n        - name: apiId\n          in: path\n          required: true\n          description: The API identifier.\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              required:\n                - routeKey\n              properties:\n                apiKeyRequired:\n                  description: Specifies whether an API key is required for the route.\n                  type: boolean\n                authorizationScopes:\n                  description: \u003e-\n                    A list of authorization scopes configured on a route. The\n                    scopes are used with a\n                     COGNITO_USER_POOLS authorizer to authorize the method invocation. The authorization\n                     works by matching the route scopes against the scopes parsed from the access token in\n                     the incoming request. The method invocation is authorized if any route scope matches\n                     a claimed scope in the access token. Otherwise, the invocation is not authorized.\n                     When the route scope is configured, the client must provide an access token instead\n                     of an identity token for authorization purposes.\n                  type: array\n                  items:\n                    $ref: \"#/components/schemas/StringWithLengthBetween1And64\"\n                authorizationType:\n                  description: \u003e-\n                    The authorization type. Valid values are NONE for open\n                    access,\n                     AWS_IAM for using AWS IAM permissions, and CUSTOM for\n                     using a Lambda authorizer.\n                  type: string\n                  enum:\n                    - NONE\n                    - AWS_IAM\n                    - CUSTOM\n                authorizerId:\n                  description: The identifier.\n                  type: string\n                modelSelectionExpression:\n                  description: An expression used to extract information at runtime. See \u003ca\n                    href=\"https://docs.aws.amazon.com/apigateway/latest/developerguide/apigateway-websocket-api-selection-expressions.html#apigateway-websocket-api-apikey-selection-expressions\"\u003eSelection\n                    Expressions\u003c/a\u003e for more information.\n                  type: string\n                operationName:\n                  description: A string with a length between [1-64].\n                  type: string\n                requestModels:\n                  description: The route models.\n                  type: object\n                  additionalProperties:\n                    $ref: \"#/components/schemas/StringWithLengthBetween1And128\"\n                requestParameters:\n                  description: The route parameters.\n                  type: object\n                  additionalProperties:\n                    $ref: \"#/components/schemas/ParameterConstraints\"\n                routeKey:\n                  description: \u003e-\n                    After evaulating a selection expression, the result is\n                    compared against one or\n                     more selection keys to find a matching key. See \u003ca href=\"https://docs.aws.amazon.com/apigateway/latest/developerguide/apigateway-websocket-api-selection-expressions.html#apigateway-websocket-api-apikey-selection-expressions\"\u003eSelection Expressions\u003c/a\u003e for a list of expressions and each expression's\n                     associated selection key type.\n                  type: string\n                routeResponseSelectionExpression:\n                  description: An expression used to extract information at runtime. See \u003ca\n                    href=\"https://docs.aws.amazon.com/apigateway/latest/developerguide/apigateway-websocket-api-selection-expressions.html#apigateway-websocket-api-apikey-selection-expressions\"\u003eSelection\n                    Expressions\u003c/a\u003e for more information.\n                  type: string\n                target:\n                  description: A string with a length between [1-128].\n                  type: string\n        required: true\n    parameters:\n      - $ref: \"#/components/parameters/X-Amz-Content-Sha256\"\n      - $ref: \"#/components/parameters/X-Amz-Date\"\n      - $ref: \"#/components/parameters/X-Amz-Algorithm\"\n      - $ref: \"#/components/parameters/X-Amz-Credential\"\n      - $ref: \"#/components/parameters/X-Amz-Security-Token\"\n      - $ref: \"#/components/parameters/X-Amz-Signature\"\n      - $ref: \"#/components/parameters/X-Amz-SignedHeaders\"\n    get:\n      operationId: GetRoutes\n      description: Gets the Routes for an API.\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/GetRoutesResponse\"\n        \"480\":\n          description: NotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/NotFoundException\"\n        \"481\":\n          description: TooManyRequestsException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/TooManyRequestsException\"\n        \"482\":\n          description: BadRequestException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/BadRequestException\"\n      parameters:\n        - name: apiId\n          in: path\n          required: true\n          description: The API identifier.\n          schema:\n            type: string\n        - name: maxResults\n          in: query\n          required: false\n          description: The maximum number of elements to be returned for this resource.\n          schema:\n            type: string\n        - name: nextToken\n          in: query\n          required: false\n          description: \u003e-\n            The next page of elements from this collection. Not valid for the\n            last element of\n             the collection.\n          schema:\n            type: string\n  \"/v2/apis/{apiId}/routes/{routeId}/routeresponses\":\n    post:\n      operationId: CreateRouteResponse\n      description: Creates a RouteResponse for a Route.\n      responses:\n        \"201\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/CreateRouteResponseResponse\"\n        \"480\":\n          description: NotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/NotFoundException\"\n        \"481\":\n          description: TooManyRequestsException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/TooManyRequestsException\"\n        \"482\":\n          description: BadRequestException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/BadRequestException\"\n        \"483\":\n          description: ConflictException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ConflictException\"\n      parameters:\n        - name: apiId\n          in: path\n          required: true\n          description: The API identifier.\n          schema:\n            type: string\n        - name: routeId\n          in: path\n          required: true\n          description: The route ID.\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              required:\n                - routeResponseKey\n              properties:\n                modelSelectionExpression:\n                  description: An expression used to extract information at runtime. See \u003ca\n                    href=\"https://docs.aws.amazon.com/apigateway/latest/developerguide/apigateway-websocket-api-selection-expressions.html#apigateway-websocket-api-apikey-selection-expressions\"\u003eSelection\n                    Expressions\u003c/a\u003e for more information.\n                  type: string\n                responseModels:\n                  description: The route models.\n                  type: object\n                  additionalProperties:\n                    $ref: \"#/components/schemas/StringWithLengthBetween1And128\"\n                responseParameters:\n                  description: The route parameters.\n                  type: object\n                  additionalProperties:\n                    $ref: \"#/components/schemas/ParameterConstraints\"\n                routeResponseKey:\n                  description: \u003e-\n                    After evaulating a selection expression, the result is\n                    compared against one or\n                     more selection keys to find a matching key. See \u003ca href=\"https://docs.aws.amazon.com/apigateway/latest/developerguide/apigateway-websocket-api-selection-expressions.html#apigateway-websocket-api-apikey-selection-expressions\"\u003eSelection Expressions\u003c/a\u003e for a list of expressions and each expression's\n                     associated selection key type.\n                  type: string\n        required: true\n    parameters:\n      - $ref: \"#/components/parameters/X-Amz-Content-Sha256\"\n      - $ref: \"#/components/parameters/X-Amz-Date\"\n      - $ref: \"#/components/parameters/X-Amz-Algorithm\"\n      - $ref: \"#/components/parameters/X-Amz-Credential\"\n      - $ref: \"#/components/parameters/X-Amz-Security-Token\"\n      - $ref: \"#/components/parameters/X-Amz-Signature\"\n      - $ref: \"#/components/parameters/X-Amz-SignedHeaders\"\n    get:\n      operationId: GetRouteResponses\n      description: Gets the RouteResponses for a Route.\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/GetRouteResponsesResponse\"\n        \"480\":\n          description: NotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/NotFoundException\"\n        \"481\":\n          description: TooManyRequestsException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/TooManyRequestsException\"\n        \"482\":\n          description: BadRequestException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/BadRequestException\"\n      parameters:\n        - name: apiId\n          in: path\n          required: true\n          description: The API identifier.\n          schema:\n            type: string\n        - name: maxResults\n          in: query\n          required: false\n          description: The maximum number of elements to be returned for this resource.\n          schema:\n            type: string\n        - name: nextToken\n          in: query\n          required: false\n          description: \u003e-\n            The next page of elements from this collection. Not valid for the\n            last element of\n             the collection.\n          schema:\n            type: string\n        - name: routeId\n          in: path\n          required: true\n          description: The route ID.\n          schema:\n            type: string\n  \"/v2/apis/{apiId}/stages\":\n    post:\n      operationId: CreateStage\n      description: Creates a Stage for an API.\n      responses:\n        \"201\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/CreateStageResponse\"\n        \"480\":\n          description: NotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/NotFoundException\"\n        \"481\":\n          description: TooManyRequestsException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/TooManyRequestsException\"\n        \"482\":\n          description: BadRequestException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/BadRequestException\"\n        \"483\":\n          description: ConflictException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ConflictException\"\n      parameters:\n        - name: apiId\n          in: path\n          required: true\n          description: The API identifier.\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              required:\n                - stageName\n              properties:\n                accessLogSettings:\n                  description: Settings for logging access in a stage.\n                  type: object\n                  properties:\n                    DestinationArn:\n                      $ref: \"#/components/schemas/Arn\"\n                    Format:\n                      $ref: \"#/components/schemas/StringWithLengthBetween1And1024\"\n                clientCertificateId:\n                  description: The identifier.\n                  type: string\n                defaultRouteSettings:\n                  description: Represents a collection of route settings.\n                  type: object\n                  properties:\n                    DataTraceEnabled:\n                      $ref: \"#/components/schemas/__boolean\"\n                    DetailedMetricsEnabled:\n                      $ref: \"#/components/schemas/__boolean\"\n                    LoggingLevel:\n                      $ref: \"#/components/schemas/LoggingLevel\"\n                    ThrottlingBurstLimit:\n                      $ref: \"#/components/schemas/__integer\"\n                    ThrottlingRateLimit:\n                      $ref: \"#/components/schemas/__double\"\n                deploymentId:\n                  description: The identifier.\n                  type: string\n                description:\n                  description: A string with a length between [0-1024].\n                  type: string\n                routeSettings:\n                  description: The route settings map.\n                  type: object\n                  additionalProperties:\n                    $ref: \"#/components/schemas/RouteSettings\"\n                stageName:\n                  description: A string with a length between [1-128].\n                  type: string\n                stageVariables:\n                  description: The stage variable map.\n                  type: object\n                  additionalProperties:\n                    $ref: \"#/components/schemas/StringWithLengthBetween0And2048\"\n                tags:\n                  description: The key-value map of strings. The valid character set is\n                    [a-zA-Z+-=._:/]. The tag key can be up to 128 characters and\n                    must not start with aws:. The tag value can be up to 256\n                    characters..\n                  type: object\n                  additionalProperties:\n                    $ref: \"#/components/schemas/StringWithLengthBetween1And1600\"\n        required: true\n    parameters:\n      - $ref: \"#/components/parameters/X-Amz-Content-Sha256\"\n      - $ref: \"#/components/parameters/X-Amz-Date\"\n      - $ref: \"#/components/parameters/X-Amz-Algorithm\"\n      - $ref: \"#/components/parameters/X-Amz-Credential\"\n      - $ref: \"#/components/parameters/X-Amz-Security-Token\"\n      - $ref: \"#/components/parameters/X-Amz-Signature\"\n      - $ref: \"#/components/parameters/X-Amz-SignedHeaders\"\n    get:\n      operationId: GetStages\n      description: Gets the Stages for an API.\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/GetStagesResponse\"\n        \"480\":\n          description: NotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/NotFoundException\"\n        \"481\":\n          description: TooManyRequestsException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/TooManyRequestsException\"\n        \"482\":\n          description: BadRequestException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/BadRequestException\"\n      parameters:\n        - name: apiId\n          in: path\n          required: true\n          description: The API identifier.\n          schema:\n            type: string\n        - name: maxResults\n          in: query\n          required: false\n          description: The maximum number of elements to be returned for this resource.\n          schema:\n            type: string\n        - name: nextToken\n          in: query\n          required: false\n          description: \u003e-\n            The next page of elements from this collection. Not valid for the\n            last element of\n             the collection.\n          schema:\n            type: string\n  \"/v2/apis/{apiId}\":\n    delete:\n      operationId: DeleteApi\n      description: Deletes an Api resource.\n      responses:\n        \"204\":\n          description: Success\n        \"480\":\n          description: NotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/NotFoundException\"\n        \"481\":\n          description: TooManyRequestsException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/TooManyRequestsException\"\n      parameters:\n        - name: apiId\n          in: path\n          required: true\n          description: The API identifier.\n          schema:\n            type: string\n    parameters:\n      - $ref: \"#/components/parameters/X-Amz-Content-Sha256\"\n      - $ref: \"#/components/parameters/X-Amz-Date\"\n      - $ref: \"#/components/parameters/X-Amz-Algorithm\"\n      - $ref: \"#/components/parameters/X-Amz-Credential\"\n      - $ref: \"#/components/parameters/X-Amz-Security-Token\"\n      - $ref: \"#/components/parameters/X-Amz-Signature\"\n      - $ref: \"#/components/parameters/X-Amz-SignedHeaders\"\n    get:\n      operationId: GetApi\n      description: Gets an Api resource.\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/GetApiResponse\"\n        \"480\":\n          description: NotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/NotFoundException\"\n        \"481\":\n          description: TooManyRequestsException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/TooManyRequestsException\"\n      parameters:\n        - name: apiId\n          in: path\n          required: true\n          description: The API identifier.\n          schema:\n            type: string\n    patch:\n      operationId: UpdateApi\n      description: Updates an Api resource.\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/UpdateApiResponse\"\n        \"480\":\n          description: NotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/NotFoundException\"\n        \"481\":\n          description: TooManyRequestsException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/TooManyRequestsException\"\n        \"482\":\n          description: BadRequestException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/BadRequestException\"\n        \"483\":\n          description: ConflictException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ConflictException\"\n      parameters:\n        - name: apiId\n          in: path\n          required: true\n          description: The API identifier.\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                apiKeySelectionExpression:\n                  description: An expression used to extract information at runtime. See \u003ca\n                    href=\"https://docs.aws.amazon.com/apigateway/latest/developerguide/apigateway-websocket-api-selection-expressions.html#apigateway-websocket-api-apikey-selection-expressions\"\u003eSelection\n                    Expressions\u003c/a\u003e for more information.\n                  type: string\n                description:\n                  description: A string with a length between [0-1024].\n                  type: string\n                disableSchemaValidation:\n                  description: Avoid validating models when creating a deployment.\n                  type: boolean\n                name:\n                  description: A string with a length between [1-128].\n                  type: string\n                routeSelectionExpression:\n                  description: An expression used to extract information at runtime. See \u003ca\n                    href=\"https://docs.aws.amazon.com/apigateway/latest/developerguide/apigateway-websocket-api-selection-expressions.html#apigateway-websocket-api-apikey-selection-expressions\"\u003eSelection\n                    Expressions\u003c/a\u003e for more information.\n                  type: string\n                version:\n                  description: A string with a length between [1-64].\n                  type: string\n        required: true\n  \"/v2/domainnames/{domainName}/apimappings/{apiMappingId}\":\n    delete:\n      operationId: DeleteApiMapping\n      description: Deletes an API mapping.\n      responses:\n        \"204\":\n          description: Success\n        \"480\":\n          description: NotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/NotFoundException\"\n        \"481\":\n          description: TooManyRequestsException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/TooManyRequestsException\"\n        \"482\":\n          description: BadRequestException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/BadRequestException\"\n      parameters:\n        - name: apiMappingId\n          in: path\n          required: true\n          description: The API mapping identifier.\n          schema:\n            type: string\n        - name: domainName\n          in: path\n          required: true\n          description: The domain name.\n          schema:\n            type: string\n    parameters:\n      - $ref: \"#/components/parameters/X-Amz-Content-Sha256\"\n      - $ref: \"#/components/parameters/X-Amz-Date\"\n      - $ref: \"#/components/parameters/X-Amz-Algorithm\"\n      - $ref: \"#/components/parameters/X-Amz-Credential\"\n      - $ref: \"#/components/parameters/X-Amz-Security-Token\"\n      - $ref: \"#/components/parameters/X-Amz-Signature\"\n      - $ref: \"#/components/parameters/X-Amz-SignedHeaders\"\n    get:\n      operationId: GetApiMapping\n      description: The API mapping.\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/GetApiMappingResponse\"\n        \"480\":\n          description: NotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/NotFoundException\"\n        \"481\":\n          description: TooManyRequestsException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/TooManyRequestsException\"\n        \"482\":\n          description: BadRequestException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/BadRequestException\"\n      parameters:\n        - name: apiMappingId\n          in: path\n          required: true\n          description: The API mapping identifier.\n          schema:\n            type: string\n        - name: domainName\n          in: path\n          required: true\n          description: The domain name.\n          schema:\n            type: string\n    patch:\n      operationId: UpdateApiMapping\n      description: The API mapping.\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/UpdateApiMappingResponse\"\n        \"480\":\n          description: NotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/NotFoundException\"\n        \"481\":\n          description: TooManyRequestsException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/TooManyRequestsException\"\n        \"482\":\n          description: BadRequestException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/BadRequestException\"\n        \"483\":\n          description: ConflictException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ConflictException\"\n      parameters:\n        - name: apiMappingId\n          in: path\n          required: true\n          description: The API mapping identifier.\n          schema:\n            type: string\n        - name: domainName\n          in: path\n          required: true\n          description: The domain name.\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              required:\n                - apiId\n              properties:\n                apiId:\n                  description: The identifier.\n                  type: string\n                apiMappingKey:\n                  description: \u003e-\n                    After evaulating a selection expression, the result is\n                    compared against one or\n                     more selection keys to find a matching key. See \u003ca href=\"https://docs.aws.amazon.com/apigateway/latest/developerguide/apigateway-websocket-api-selection-expressions.html#apigateway-websocket-api-apikey-selection-expressions\"\u003eSelection Expressions\u003c/a\u003e for a list of expressions and each expression's\n                     associated selection key type.\n                  type: string\n                stage:\n                  description: A string with a length between [1-128].\n                  type: string\n        required: true\n  \"/v2/apis/{apiId}/authorizers/{authorizerId}\":\n    delete:\n      operationId: DeleteAuthorizer\n      description: Deletes an Authorizer.\n      responses:\n        \"204\":\n          description: Success\n        \"480\":\n          description: NotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/NotFoundException\"\n        \"481\":\n          description: TooManyRequestsException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/TooManyRequestsException\"\n      parameters:\n        - name: apiId\n          in: path\n          required: true\n          description: The API identifier.\n          schema:\n            type: string\n        - name: authorizerId\n          in: path\n          required: true\n          description: The authorizer identifier.\n          schema:\n            type: string\n    parameters:\n      - $ref: \"#/components/parameters/X-Amz-Content-Sha256\"\n      - $ref: \"#/components/parameters/X-Amz-Date\"\n      - $ref: \"#/components/parameters/X-Amz-Algorithm\"\n      - $ref: \"#/components/parameters/X-Amz-Credential\"\n      - $ref: \"#/components/parameters/X-Amz-Security-Token\"\n      - $ref: \"#/components/parameters/X-Amz-Signature\"\n      - $ref: \"#/components/parameters/X-Amz-SignedHeaders\"\n    get:\n      operationId: GetAuthorizer\n      description: Gets an Authorizer.\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/GetAuthorizerResponse\"\n        \"480\":\n          description: NotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/NotFoundException\"\n        \"481\":\n          description: TooManyRequestsException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/TooManyRequestsException\"\n      parameters:\n        - name: apiId\n          in: path\n          required: true\n          description: The API identifier.\n          schema:\n            type: string\n        - name: authorizerId\n          in: path\n          required: true\n          description: The authorizer identifier.\n          schema:\n            type: string\n    patch:\n      operationId: UpdateAuthorizer\n      description: Updates an Authorizer.\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/UpdateAuthorizerResponse\"\n        \"480\":\n          description: NotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/NotFoundException\"\n        \"481\":\n          description: TooManyRequestsException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/TooManyRequestsException\"\n        \"482\":\n          description: BadRequestException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/BadRequestException\"\n        \"483\":\n          description: ConflictException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ConflictException\"\n      parameters:\n        - name: apiId\n          in: path\n          required: true\n          description: The API identifier.\n          schema:\n            type: string\n        - name: authorizerId\n          in: path\n          required: true\n          description: The authorizer identifier.\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                authorizerCredentialsArn:\n                  description: Represents an Amazon Resource Name (ARN).\n                  type: string\n                authorizerResultTtlInSeconds:\n                  description: An integer with a value between [0-3600].\n                  type: integer\n                  minimum: -2147483648\n                  maximum: 2147483647\n                authorizerType:\n                  description: \u003e-\n                    The authorizer type. Currently the only valid value is\n                    REQUEST, for a\n                     Lambda function using incoming request parameters.\n                  type: string\n                  enum:\n                    - REQUEST\n                authorizerUri:\n                  description: A string representation of a URI with a length between\n                    [1-2048].\n                  type: string\n                identitySource:\n                  description: \u003e-\n                    The identity source for which authorization is requested.\n                    For the REQUEST\n                     authorizer, this is required when authorization caching is enabled. The value is a\n                     comma-separated string of one or more mapping expressions of the specified request\n                     parameters. For example, if an Auth header, a Name query string parameter are defined\n                     as identity sources, this value is $method.request.header.Auth,\n                     $method.request.querystring.Name. These parameters will be used to derive\n                     the authorization caching key and to perform runtime validation of the REQUEST\n                     authorizer by verifying all of the identity-related request parameters are present,\n                     not null and non-empty. Only when this is true does the authorizer invoke the\n                     authorizer Lambda function, otherwise, it returns a 401 Unauthorized\n                     response without calling the Lambda function. The valid value is a string of\n                     comma-separated mapping expressions of the specified request parameters. When the\n                     authorization caching is not enabled, this property is optional.\n                  type: array\n                  items:\n                    $ref: \"#/components/schemas/__string\"\n                identityValidationExpression:\n                  description: A string with a length between [0-1024].\n                  type: string\n                name:\n                  description: A string with a length between [1-128].\n                  type: string\n                providerArns:\n                  description: For REQUEST authorizer, this is not defined.\n                  type: array\n                  items:\n                    $ref: \"#/components/schemas/Arn\"\n        required: true\n  \"/v2/apis/{apiId}/deployments/{deploymentId}\":\n    delete:\n      operationId: DeleteDeployment\n      description: Deletes a Deployment.\n      responses:\n        \"204\":\n          description: Success\n        \"480\":\n          description: NotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/NotFoundException\"\n        \"481\":\n          description: TooManyRequestsException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/TooManyRequestsException\"\n      parameters:\n        - name: apiId\n          in: path\n          required: true\n          description: The API identifier.\n          schema:\n            type: string\n        - name: deploymentId\n          in: path\n          required: true\n          description: The deployment ID.\n          schema:\n            type: string\n    parameters:\n      - $ref: \"#/components/parameters/X-Amz-Content-Sha256\"\n      - $ref: \"#/components/parameters/X-Amz-Date\"\n      - $ref: \"#/components/parameters/X-Amz-Algorithm\"\n      - $ref: \"#/components/parameters/X-Amz-Credential\"\n      - $ref: \"#/components/parameters/X-Amz-Security-Token\"\n      - $ref: \"#/components/parameters/X-Amz-Signature\"\n      - $ref: \"#/components/parameters/X-Amz-SignedHeaders\"\n    get:\n      operationId: GetDeployment\n      description: Gets a Deployment.\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/GetDeploymentResponse\"\n        \"480\":\n          description: NotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/NotFoundException\"\n        \"481\":\n          description: TooManyRequestsException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/TooManyRequestsException\"\n      parameters:\n        - name: apiId\n          in: path\n          required: true\n          description: The API identifier.\n          schema:\n            type: string\n        - name: deploymentId\n          in: path\n          required: true\n          description: The deployment ID.\n          schema:\n            type: string\n    patch:\n      operationId: UpdateDeployment\n      description: Updates a Deployment.\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/UpdateDeploymentResponse\"\n        \"480\":\n          description: NotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/NotFoundException\"\n        \"481\":\n          description: TooManyRequestsException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/TooManyRequestsException\"\n        \"482\":\n          description: BadRequestException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/BadRequestException\"\n        \"483\":\n          description: ConflictException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ConflictException\"\n      parameters:\n        - name: apiId\n          in: path\n          required: true\n          description: The API identifier.\n          schema:\n            type: string\n        - name: deploymentId\n          in: path\n          required: true\n          description: The deployment ID.\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                description:\n                  description: A string with a length between [0-1024].\n                  type: string\n        required: true\n  \"/v2/domainnames/{domainName}\":\n    delete:\n      operationId: DeleteDomainName\n      description: Deletes a domain name.\n      responses:\n        \"204\":\n          description: Success\n        \"480\":\n          description: NotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/NotFoundException\"\n        \"481\":\n          description: TooManyRequestsException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/TooManyRequestsException\"\n      parameters:\n        - name: domainName\n          in: path\n          required: true\n          description: The domain name.\n          schema:\n            type: string\n    parameters:\n      - $ref: \"#/components/parameters/X-Amz-Content-Sha256\"\n      - $ref: \"#/components/parameters/X-Amz-Date\"\n      - $ref: \"#/components/parameters/X-Amz-Algorithm\"\n      - $ref: \"#/components/parameters/X-Amz-Credential\"\n      - $ref: \"#/components/parameters/X-Amz-Security-Token\"\n      - $ref: \"#/components/parameters/X-Amz-Signature\"\n      - $ref: \"#/components/parameters/X-Amz-SignedHeaders\"\n    get:\n      operationId: GetDomainName\n      description: Gets a domain name.\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/GetDomainNameResponse\"\n        \"480\":\n          description: NotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/NotFoundException\"\n        \"481\":\n          description: TooManyRequestsException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/TooManyRequestsException\"\n      parameters:\n        - name: domainName\n          in: path\n          required: true\n          description: The domain name.\n          schema:\n            type: string\n    patch:\n      operationId: UpdateDomainName\n      description: Updates a domain name.\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/UpdateDomainNameResponse\"\n        \"480\":\n          description: NotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/NotFoundException\"\n        \"481\":\n          description: TooManyRequestsException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/TooManyRequestsException\"\n        \"482\":\n          description: BadRequestException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/BadRequestException\"\n        \"483\":\n          description: ConflictException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ConflictException\"\n      parameters:\n        - name: domainName\n          in: path\n          required: true\n          description: The domain name.\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                domainNameConfigurations:\n                  description: The domain name configurations.\n                  type: array\n                  items:\n                    $ref: \"#/components/schemas/DomainNameConfiguration\"\n        required: true\n  \"/v2/apis/{apiId}/integrations/{integrationId}\":\n    delete:\n      operationId: DeleteIntegration\n      description: Deletes an Integration.\n      responses:\n        \"204\":\n          description: Success\n        \"480\":\n          description: NotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/NotFoundException\"\n        \"481\":\n          description: TooManyRequestsException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/TooManyRequestsException\"\n      parameters:\n        - name: apiId\n          in: path\n          required: true\n          description: The API identifier.\n          schema:\n            type: string\n        - name: integrationId\n          in: path\n          required: true\n          description: The integration ID.\n          schema:\n            type: string\n    parameters:\n      - $ref: \"#/components/parameters/X-Amz-Content-Sha256\"\n      - $ref: \"#/components/parameters/X-Amz-Date\"\n      - $ref: \"#/components/parameters/X-Amz-Algorithm\"\n      - $ref: \"#/components/parameters/X-Amz-Credential\"\n      - $ref: \"#/components/parameters/X-Amz-Security-Token\"\n      - $ref: \"#/components/parameters/X-Amz-Signature\"\n      - $ref: \"#/components/parameters/X-Amz-SignedHeaders\"\n    get:\n      operationId: GetIntegration\n      description: Gets an Integration.\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/GetIntegrationResponse\"\n        \"480\":\n          description: NotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/NotFoundException\"\n        \"481\":\n          description: TooManyRequestsException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/TooManyRequestsException\"\n      parameters:\n        - name: apiId\n          in: path\n          required: true\n          description: The API identifier.\n          schema:\n            type: string\n        - name: integrationId\n          in: path\n          required: true\n          description: The integration ID.\n          schema:\n            type: string\n    patch:\n      operationId: UpdateIntegration\n      description: Updates an Integration.\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/UpdateIntegrationResponse\"\n        \"480\":\n          description: NotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/NotFoundException\"\n        \"481\":\n          description: TooManyRequestsException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/TooManyRequestsException\"\n        \"482\":\n          description: BadRequestException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/BadRequestException\"\n        \"483\":\n          description: ConflictException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ConflictException\"\n      parameters:\n        - name: apiId\n          in: path\n          required: true\n          description: The API identifier.\n          schema:\n            type: string\n        - name: integrationId\n          in: path\n          required: true\n          description: The integration ID.\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                connectionId:\n                  description: A string with a length between [1-1024].\n                  type: string\n                connectionType:\n                  description: Represents a connection type.\n                  type: string\n                  enum:\n                    - INTERNET\n                    - VPC_LINK\n                contentHandlingStrategy:\n                  description: Specifies how to handle response payload content type\n                    conversions.\n                  type: string\n                  enum:\n                    - CONVERT_TO_BINARY\n                    - CONVERT_TO_TEXT\n                credentialsArn:\n                  description: Represents an Amazon Resource Name (ARN).\n                  type: string\n                description:\n                  description: A string with a length between [0-1024].\n                  type: string\n                integrationMethod:\n                  description: A string with a length between [1-64].\n                  type: string\n                integrationType:\n                  description: Represents an API method integration type.\n                  type: string\n                  enum:\n                    - AWS\n                    - HTTP\n                    - MOCK\n                    - HTTP_PROXY\n                    - AWS_PROXY\n                integrationUri:\n                  description: A string representation of a URI with a length between\n                    [1-2048].\n                  type: string\n                passthroughBehavior:\n                  description: Represents passthrough behavior for an integration response.\n                  type: string\n                  enum:\n                    - WHEN_NO_MATCH\n                    - NEVER\n                    - WHEN_NO_TEMPLATES\n                requestParameters:\n                  description: \u003e-\n                    A key-value map specifying response parameters that are\n                    passed to the method\n                     response from the backend. The key is a method response header parameter name and the\n                     mapped value is an integration response header value, a static value enclosed within\n                     a pair of single quotes, or a JSON expression from the integration response body. The\n                     mapping key must match the pattern of method.response.header.{name}, where name is a\n                     valid and unique header name. The mapped non-static value must match the pattern of\n                     integration.response.header.{name} or integration.response.body.{JSON-expression},\n                     where name is a valid and unique response header name and JSON-expression is a valid\n                     JSON expression without the $ prefix.\n                  type: object\n                  additionalProperties:\n                    $ref: \"#/components/schemas/StringWithLengthBetween1And512\"\n                requestTemplates:\n                  description: \u003e-\n                    A mapping of identifier keys to templates. The value is an\n                    actual template script.\n                     The key is typically a SelectionKey which is chosen based on evaluating\n                     a selection expression.\n                  type: object\n                  additionalProperties:\n                    $ref: \"#/components/schemas/StringWithLengthBetween0And32K\"\n                templateSelectionExpression:\n                  description: An expression used to extract information at runtime. See \u003ca\n                    href=\"https://docs.aws.amazon.com/apigateway/latest/developerguide/apigateway-websocket-api-selection-expressions.html#apigateway-websocket-api-apikey-selection-expressions\"\u003eSelection\n                    Expressions\u003c/a\u003e for more information.\n                  type: string\n                timeoutInMillis:\n                  description: An integer with a value between [50-29000].\n                  type: integer\n                  minimum: -2147483648\n                  maximum: 2147483647\n        required: true\n  \"/v2/apis/{apiId}/integrations/{integrationId}/integrationresponses/{integrationResponseId}\":\n    delete:\n      operationId: DeleteIntegrationResponse\n      description: Deletes an IntegrationResponses.\n      responses:\n        \"204\":\n          description: Success\n        \"480\":\n          description: NotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/NotFoundException\"\n        \"481\":\n          description: TooManyRequestsException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/TooManyRequestsException\"\n      parameters:\n        - name: apiId\n          in: path\n          required: true\n          description: The API identifier.\n          schema:\n            type: string\n        - name: integrationId\n          in: path\n          required: true\n          description: The integration ID.\n          schema:\n            type: string\n        - name: integrationResponseId\n          in: path\n          required: true\n          description: The integration response ID.\n          schema:\n            type: string\n    parameters:\n      - $ref: \"#/components/parameters/X-Amz-Content-Sha256\"\n      - $ref: \"#/components/parameters/X-Amz-Date\"\n      - $ref: \"#/components/parameters/X-Amz-Algorithm\"\n      - $ref: \"#/components/parameters/X-Amz-Credential\"\n      - $ref: \"#/components/parameters/X-Amz-Security-Token\"\n      - $ref: \"#/components/parameters/X-Amz-Signature\"\n      - $ref: \"#/components/parameters/X-Amz-SignedHeaders\"\n    get:\n      operationId: GetIntegrationResponse\n      description: Gets an IntegrationResponses.\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/GetIntegrationResponseResponse\"\n        \"480\":\n          description: NotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/NotFoundException\"\n        \"481\":\n          description: TooManyRequestsException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/TooManyRequestsException\"\n      parameters:\n        - name: apiId\n          in: path\n          required: true\n          description: The API identifier.\n          schema:\n            type: string\n        - name: integrationId\n          in: path\n          required: true\n          description: The integration ID.\n          schema:\n            type: string\n        - name: integrationResponseId\n          in: path\n          required: true\n          description: The integration response ID.\n          schema:\n            type: string\n    patch:\n      operationId: UpdateIntegrationResponse\n      description: Updates an IntegrationResponses.\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/UpdateIntegrationResponseResponse\"\n        \"480\":\n          description: NotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/NotFoundException\"\n        \"481\":\n          description: TooManyRequestsException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/TooManyRequestsException\"\n        \"482\":\n          description: BadRequestException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/BadRequestException\"\n        \"483\":\n          description: ConflictException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ConflictException\"\n      parameters:\n        - name: apiId\n          in: path\n          required: true\n          description: The API identifier.\n          schema:\n            type: string\n        - name: integrationId\n          in: path\n          required: true\n          description: The integration ID.\n          schema:\n            type: string\n        - name: integrationResponseId\n          in: path\n          required: true\n          description: The integration response ID.\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                contentHandlingStrategy:\n                  description: Specifies how to handle response payload content type\n                    conversions.\n                  type: string\n                  enum:\n                    - CONVERT_TO_BINARY\n                    - CONVERT_TO_TEXT\n                integrationResponseKey:\n                  description: \u003e-\n                    After evaulating a selection expression, the result is\n                    compared against one or\n                     more selection keys to find a matching key. See \u003ca href=\"https://docs.aws.amazon.com/apigateway/latest/developerguide/apigateway-websocket-api-selection-expressions.html#apigateway-websocket-api-apikey-selection-expressions\"\u003eSelection Expressions\u003c/a\u003e for a list of expressions and each expression's\n                     associated selection key type.\n                  type: string\n                responseParameters:\n                  description: \u003e-\n                    A key-value map specifying response parameters that are\n                    passed to the method\n                     response from the backend. The key is a method response header parameter name and the\n                     mapped value is an integration response header value, a static value enclosed within\n                     a pair of single quotes, or a JSON expression from the integration response body. The\n                     mapping key must match the pattern of method.response.header.{name}, where name is a\n                     valid and unique header name. The mapped non-static value must match the pattern of\n                     integration.response.header.{name} or integration.response.body.{JSON-expression},\n                     where name is a valid and unique response header name and JSON-expression is a valid\n                     JSON expression without the $ prefix.\n                  type: object\n                  additionalProperties:\n                    $ref: \"#/components/schemas/StringWithLengthBetween1And512\"\n                responseTemplates:\n                  description: \u003e-\n                    A mapping of identifier keys to templates. The value is an\n                    actual template script.\n                     The key is typically a SelectionKey which is chosen based on evaluating\n                     a selection expression.\n                  type: object\n                  additionalProperties:\n                    $ref: \"#/components/schemas/StringWithLengthBetween0And32K\"\n                templateSelectionExpression:\n                  description: An expression used to extract information at runtime. See \u003ca\n                    href=\"https://docs.aws.amazon.com/apigateway/latest/developerguide/apigateway-websocket-api-selection-expressions.html#apigateway-websocket-api-apikey-selection-expressions\"\u003eSelection\n                    Expressions\u003c/a\u003e for more information.\n                  type: string\n        required: true\n  \"/v2/apis/{apiId}/models/{modelId}\":\n    delete:\n      operationId: DeleteModel\n      description: Deletes a Model.\n      responses:\n        \"204\":\n          description: Success\n        \"480\":\n          description: NotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/NotFoundException\"\n        \"481\":\n          description: TooManyRequestsException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/TooManyRequestsException\"\n      parameters:\n        - name: apiId\n          in: path\n          required: true\n          description: The API identifier.\n          schema:\n            type: string\n        - name: modelId\n          in: path\n          required: true\n          description: The model ID.\n          schema:\n            type: string\n    parameters:\n      - $ref: \"#/components/parameters/X-Amz-Content-Sha256\"\n      - $ref: \"#/components/parameters/X-Amz-Date\"\n      - $ref: \"#/components/parameters/X-Amz-Algorithm\"\n      - $ref: \"#/components/parameters/X-Amz-Credential\"\n      - $ref: \"#/components/parameters/X-Amz-Security-Token\"\n      - $ref: \"#/components/parameters/X-Amz-Signature\"\n      - $ref: \"#/components/parameters/X-Amz-SignedHeaders\"\n    get:\n      operationId: GetModel\n      description: Gets a Model.\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/GetModelResponse\"\n        \"480\":\n          description: NotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/NotFoundException\"\n        \"481\":\n          description: TooManyRequestsException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/TooManyRequestsException\"\n      parameters:\n        - name: apiId\n          in: path\n          required: true\n          description: The API identifier.\n          schema:\n            type: string\n        - name: modelId\n          in: path\n          required: true\n          description: The model ID.\n          schema:\n            type: string\n    patch:\n      operationId: UpdateModel\n      description: Updates a Model.\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/UpdateModelResponse\"\n        \"480\":\n          description: NotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/NotFoundException\"\n        \"481\":\n          description: TooManyRequestsException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/TooManyRequestsException\"\n        \"482\":\n          description: BadRequestException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/BadRequestException\"\n        \"483\":\n          description: ConflictException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ConflictException\"\n      parameters:\n        - name: apiId\n          in: path\n          required: true\n          description: The API identifier.\n          schema:\n            type: string\n        - name: modelId\n          in: path\n          required: true\n          description: The model ID.\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                contentType:\n                  description: A string with a length between [1-256].\n                  type: string\n                description:\n                  description: A string with a length between [0-1024].\n                  type: string\n                name:\n                  description: A string with a length between [1-128].\n                  type: string\n                schema:\n                  description: A string with a length between [0-32768].\n                  type: string\n        required: true\n  \"/v2/apis/{apiId}/routes/{routeId}\":\n    delete:\n      operationId: DeleteRoute\n      description: Deletes a Route.\n      responses:\n        \"204\":\n          description: Success\n        \"480\":\n          description: NotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/NotFoundException\"\n        \"481\":\n          description: TooManyRequestsException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/TooManyRequestsException\"\n      parameters:\n        - name: apiId\n          in: path\n          required: true\n          description: The API identifier.\n          schema:\n            type: string\n        - name: routeId\n          in: path\n          required: true\n          description: The route ID.\n          schema:\n            type: string\n    parameters:\n      - $ref: \"#/components/parameters/X-Amz-Content-Sha256\"\n      - $ref: \"#/components/parameters/X-Amz-Date\"\n      - $ref: \"#/components/parameters/X-Amz-Algorithm\"\n      - $ref: \"#/components/parameters/X-Amz-Credential\"\n      - $ref: \"#/components/parameters/X-Amz-Security-Token\"\n      - $ref: \"#/components/parameters/X-Amz-Signature\"\n      - $ref: \"#/components/parameters/X-Amz-SignedHeaders\"\n    get:\n      operationId: GetRoute\n      description: Gets a Route.\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/GetRouteResponse\"\n        \"480\":\n          description: NotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/NotFoundException\"\n        \"481\":\n          description: TooManyRequestsException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/TooManyRequestsException\"\n      parameters:\n        - name: apiId\n          in: path\n          required: true\n          description: The API identifier.\n          schema:\n            type: string\n        - name: routeId\n          in: path\n          required: true\n          description: The route ID.\n          schema:\n            type: string\n    patch:\n      operationId: UpdateRoute\n      description: Updates a Route.\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/UpdateRouteResponse\"\n        \"480\":\n          description: NotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/NotFoundException\"\n        \"481\":\n          description: TooManyRequestsException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/TooManyRequestsException\"\n        \"482\":\n          description: BadRequestException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/BadRequestException\"\n        \"483\":\n          description: ConflictException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ConflictException\"\n      parameters:\n        - name: apiId\n          in: path\n          required: true\n          description: The API identifier.\n          schema:\n            type: string\n        - name: routeId\n          in: path\n          required: true\n          description: The route ID.\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                apiKeyRequired:\n                  description: Specifies whether an API key is required for the route.\n                  type: boolean\n                authorizationScopes:\n                  description: \u003e-\n                    A list of authorization scopes configured on a route. The\n                    scopes are used with a\n                     COGNITO_USER_POOLS authorizer to authorize the method invocation. The authorization\n                     works by matching the route scopes against the scopes parsed from the access token in\n                     the incoming request. The method invocation is authorized if any route scope matches\n                     a claimed scope in the access token. Otherwise, the invocation is not authorized.\n                     When the route scope is configured, the client must provide an access token instead\n                     of an identity token for authorization purposes.\n                  type: array\n                  items:\n                    $ref: \"#/components/schemas/StringWithLengthBetween1And64\"\n                authorizationType:\n                  description: \u003e-\n                    The authorization type. Valid values are NONE for open\n                    access,\n                     AWS_IAM for using AWS IAM permissions, and CUSTOM for\n                     using a Lambda authorizer.\n                  type: string\n                  enum:\n                    - NONE\n                    - AWS_IAM\n                    - CUSTOM\n                authorizerId:\n                  description: The identifier.\n                  type: string\n                modelSelectionExpression:\n                  description: An expression used to extract information at runtime. See \u003ca\n                    href=\"https://docs.aws.amazon.com/apigateway/latest/developerguide/apigateway-websocket-api-selection-expressions.html#apigateway-websocket-api-apikey-selection-expressions\"\u003eSelection\n                    Expressions\u003c/a\u003e for more information.\n                  type: string\n                operationName:\n                  description: A string with a length between [1-64].\n                  type: string\n                requestModels:\n                  description: The route models.\n                  type: object\n                  additionalProperties:\n                    $ref: \"#/components/schemas/StringWithLengthBetween1And128\"\n                requestParameters:\n                  description: The route parameters.\n                  type: object\n                  additionalProperties:\n                    $ref: \"#/components/schemas/ParameterConstraints\"\n                routeKey:\n                  description: \u003e-\n                    After evaulating a selection expression, the result is\n                    compared against one or\n                     more selection keys to find a matching key. See \u003ca href=\"https://docs.aws.amazon.com/apigateway/latest/developerguide/apigateway-websocket-api-selection-expressions.html#apigateway-websocket-api-apikey-selection-expressions\"\u003eSelection Expressions\u003c/a\u003e for a list of expressions and each expression's\n                     associated selection key type.\n                  type: string\n                routeResponseSelectionExpression:\n                  description: An expression used to extract information at runtime. See \u003ca\n                    href=\"https://docs.aws.amazon.com/apigateway/latest/developerguide/apigateway-websocket-api-selection-expressions.html#apigateway-websocket-api-apikey-selection-expressions\"\u003eSelection\n                    Expressions\u003c/a\u003e for more information.\n                  type: string\n                target:\n                  description: A string with a length between [1-128].\n                  type: string\n        required: true\n  \"/v2/apis/{apiId}/routes/{routeId}/routeresponses/{routeResponseId}\":\n    delete:\n      operationId: DeleteRouteResponse\n      description: Deletes a RouteResponse.\n      responses:\n        \"204\":\n          description: Success\n        \"480\":\n          description: NotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/NotFoundException\"\n        \"481\":\n          description: TooManyRequestsException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/TooManyRequestsException\"\n      parameters:\n        - name: apiId\n          in: path\n          required: true\n          description: The API identifier.\n          schema:\n            type: string\n        - name: routeId\n          in: path\n          required: true\n          description: The route ID.\n          schema:\n            type: string\n        - name: routeResponseId\n          in: path\n          required: true\n          description: The route response ID.\n          schema:\n            type: string\n    parameters:\n      - $ref: \"#/components/parameters/X-Amz-Content-Sha256\"\n      - $ref: \"#/components/parameters/X-Amz-Date\"\n      - $ref: \"#/components/parameters/X-Amz-Algorithm\"\n      - $ref: \"#/components/parameters/X-Amz-Credential\"\n      - $ref: \"#/components/parameters/X-Amz-Security-Token\"\n      - $ref: \"#/components/parameters/X-Amz-Signature\"\n      - $ref: \"#/components/parameters/X-Amz-SignedHeaders\"\n    get:\n      operationId: GetRouteResponse\n      description: Gets a RouteResponse.\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/GetRouteResponseResponse\"\n        \"480\":\n          description: NotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/NotFoundException\"\n        \"481\":\n          description: TooManyRequestsException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/TooManyRequestsException\"\n      parameters:\n        - name: apiId\n          in: path\n          required: true\n          description: The API identifier.\n          schema:\n            type: string\n        - name: routeId\n          in: path\n          required: true\n          description: The route ID.\n          schema:\n            type: string\n        - name: routeResponseId\n          in: path\n          required: true\n          description: The route response ID.\n          schema:\n            type: string\n    patch:\n      operationId: UpdateRouteResponse\n      description: Updates a RouteResponse.\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/UpdateRouteResponseResponse\"\n        \"480\":\n          description: NotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/NotFoundException\"\n        \"481\":\n          description: TooManyRequestsException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/TooManyRequestsException\"\n        \"482\":\n          description: BadRequestException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/BadRequestException\"\n        \"483\":\n          description: ConflictException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ConflictException\"\n      parameters:\n        - name: apiId\n          in: path\n          required: true\n          description: The API identifier.\n          schema:\n            type: string\n        - name: routeId\n          in: path\n          required: true\n          description: The route ID.\n          schema:\n            type: string\n        - name: routeResponseId\n          in: path\n          required: true\n          description: The route response ID.\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                modelSelectionExpression:\n                  description: An expression used to extract information at runtime. See \u003ca\n                    href=\"https://docs.aws.amazon.com/apigateway/latest/developerguide/apigateway-websocket-api-selection-expressions.html#apigateway-websocket-api-apikey-selection-expressions\"\u003eSelection\n                    Expressions\u003c/a\u003e for more information.\n                  type: string\n                responseModels:\n                  description: The route models.\n                  type: object\n                  additionalProperties:\n                    $ref: \"#/components/schemas/StringWithLengthBetween1And128\"\n                responseParameters:\n                  description: The route parameters.\n                  type: object\n                  additionalProperties:\n                    $ref: \"#/components/schemas/ParameterConstraints\"\n                routeResponseKey:\n                  description: \u003e-\n                    After evaulating a selection expression, the result is\n                    compared against one or\n                     more selection keys to find a matching key. See \u003ca href=\"https://docs.aws.amazon.com/apigateway/latest/developerguide/apigateway-websocket-api-selection-expressions.html#apigateway-websocket-api-apikey-selection-expressions\"\u003eSelection Expressions\u003c/a\u003e for a list of expressions and each expression's\n                     associated selection key type.\n                  type: string\n        required: true\n  \"/v2/apis/{apiId}/stages/{stageName}\":\n    delete:\n      operationId: DeleteStage\n      description: Deletes a Stage.\n      responses:\n        \"204\":\n          description: Success\n        \"480\":\n          description: NotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/NotFoundException\"\n        \"481\":\n          description: TooManyRequestsException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/TooManyRequestsException\"\n      parameters:\n        - name: apiId\n          in: path\n          required: true\n          description: The API identifier.\n          schema:\n            type: string\n        - name: stageName\n          in: path\n          required: true\n          description: The stage name.\n          schema:\n            type: string\n    parameters:\n      - $ref: \"#/components/parameters/X-Amz-Content-Sha256\"\n      - $ref: \"#/components/parameters/X-Amz-Date\"\n      - $ref: \"#/components/parameters/X-Amz-Algorithm\"\n      - $ref: \"#/components/parameters/X-Amz-Credential\"\n      - $ref: \"#/components/parameters/X-Amz-Security-Token\"\n      - $ref: \"#/components/parameters/X-Amz-Signature\"\n      - $ref: \"#/components/parameters/X-Amz-SignedHeaders\"\n    get:\n      operationId: GetStage\n      description: Gets a Stage.\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/GetStageResponse\"\n        \"480\":\n          description: NotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/NotFoundException\"\n        \"481\":\n          description: TooManyRequestsException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/TooManyRequestsException\"\n      parameters:\n        - name: apiId\n          in: path\n          required: true\n          description: The API identifier.\n          schema:\n            type: string\n        - name: stageName\n          in: path\n          required: true\n          description: The stage name.\n          schema:\n            type: string\n    patch:\n      operationId: UpdateStage\n      description: Updates a Stage.\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/UpdateStageResponse\"\n        \"480\":\n          description: NotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/NotFoundException\"\n        \"481\":\n          description: TooManyRequestsException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/TooManyRequestsException\"\n        \"482\":\n          description: BadRequestException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/BadRequestException\"\n        \"483\":\n          description: ConflictException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ConflictException\"\n      parameters:\n        - name: apiId\n          in: path\n          required: true\n          description: The API identifier.\n          schema:\n            type: string\n        - name: stageName\n          in: path\n          required: true\n          description: The stage name.\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                accessLogSettings:\n                  description: Settings for logging access in a stage.\n                  type: object\n                  properties:\n                    DestinationArn:\n                      $ref: \"#/components/schemas/Arn\"\n                    Format:\n                      $ref: \"#/components/schemas/StringWithLengthBetween1And1024\"\n                clientCertificateId:\n                  description: The identifier.\n                  type: string\n                defaultRouteSettings:\n                  description: Represents a collection of route settings.\n                  type: object\n                  properties:\n                    DataTraceEnabled:\n                      $ref: \"#/components/schemas/__boolean\"\n                    DetailedMetricsEnabled:\n                      $ref: \"#/components/schemas/__boolean\"\n                    LoggingLevel:\n                      $ref: \"#/components/schemas/LoggingLevel\"\n                    ThrottlingBurstLimit:\n                      $ref: \"#/components/schemas/__integer\"\n                    ThrottlingRateLimit:\n                      $ref: \"#/components/schemas/__double\"\n                deploymentId:\n                  description: The identifier.\n                  type: string\n                description:\n                  description: A string with a length between [0-1024].\n                  type: string\n                routeSettings:\n                  description: The route settings map.\n                  type: object\n                  additionalProperties:\n                    $ref: \"#/components/schemas/RouteSettings\"\n                stageVariables:\n                  description: The stage variable map.\n                  type: object\n                  additionalProperties:\n                    $ref: \"#/components/schemas/StringWithLengthBetween0And2048\"\n        required: true\n  \"/v2/apis/{apiId}/models/{modelId}/template\":\n    get:\n      operationId: GetModelTemplate\n      description: Gets a model template.\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/GetModelTemplateResponse\"\n        \"480\":\n          description: NotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/NotFoundException\"\n        \"481\":\n          description: TooManyRequestsException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/TooManyRequestsException\"\n      parameters:\n        - name: apiId\n          in: path\n          required: true\n          description: The API identifier.\n          schema:\n            type: string\n        - name: modelId\n          in: path\n          required: true\n          description: The model ID.\n          schema:\n            type: string\n    parameters:\n      - $ref: \"#/components/parameters/X-Amz-Content-Sha256\"\n      - $ref: \"#/components/parameters/X-Amz-Date\"\n      - $ref: \"#/components/parameters/X-Amz-Algorithm\"\n      - $ref: \"#/components/parameters/X-Amz-Credential\"\n      - $ref: \"#/components/parameters/X-Amz-Security-Token\"\n      - $ref: \"#/components/parameters/X-Amz-Signature\"\n      - $ref: \"#/components/parameters/X-Amz-SignedHeaders\"\n  \"/v2/tags/{resource-arn}\":\n    get:\n      operationId: GetTags\n      description: Gets the Tags for an API.\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/GetTagsResponse\"\n        \"480\":\n          description: NotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/NotFoundException\"\n        \"481\":\n          description: TooManyRequestsException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/TooManyRequestsException\"\n        \"482\":\n          description: BadRequestException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/BadRequestException\"\n        \"483\":\n          description: ConflictException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ConflictException\"\n      parameters:\n        - name: resource-arn\n          in: path\n          required: true\n          description: \"\"\n          schema:\n            type: string\n    parameters:\n      - $ref: \"#/components/parameters/X-Amz-Content-Sha256\"\n      - $ref: \"#/components/parameters/X-Amz-Date\"\n      - $ref: \"#/components/parameters/X-Amz-Algorithm\"\n      - $ref: \"#/components/parameters/X-Amz-Credential\"\n      - $ref: \"#/components/parameters/X-Amz-Security-Token\"\n      - $ref: \"#/components/parameters/X-Amz-Signature\"\n      - $ref: \"#/components/parameters/X-Amz-SignedHeaders\"\n    post:\n      operationId: TagResource\n      description: Tag an APIGW resource\n      responses:\n        \"201\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/TagResourceResponse\"\n        \"480\":\n          description: NotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/NotFoundException\"\n        \"481\":\n          description: TooManyRequestsException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/TooManyRequestsException\"\n        \"482\":\n          description: BadRequestException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/BadRequestException\"\n        \"483\":\n          description: ConflictException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ConflictException\"\n      parameters:\n        - name: resource-arn\n          in: path\n          required: true\n          description: \"AWS resource arn \"\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                tags:\n                  description: The key-value map of strings. The valid character set is\n                    [a-zA-Z+-=._:/]. The tag key can be up to 128 characters and\n                    must not start with aws:. The tag value can be up to 256\n                    characters..\n                  type: object\n                  additionalProperties:\n                    $ref: \"#/components/schemas/StringWithLengthBetween1And1600\"\n        required: true\n  \"/v2/tags/{resource-arn}#tagKeys\":\n    delete:\n      operationId: UntagResource\n      description: Untag an APIGW resource\n      responses:\n        \"204\":\n          description: Success\n        \"480\":\n          description: NotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/NotFoundException\"\n        \"481\":\n          description: TooManyRequestsException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/TooManyRequestsException\"\n        \"482\":\n          description: BadRequestException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/BadRequestException\"\n        \"483\":\n          description: ConflictException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ConflictException\"\n      parameters:\n        - name: resource-arn\n          in: path\n          required: true\n          description: \"AWS resource arn \"\n          schema:\n            type: string\n        - name: tagKeys\n          in: query\n          required: true\n          description: The Tag keys to delete\n          schema:\n            type: array\n            items:\n              type: string\n    parameters:\n      - $ref: \"#/components/parameters/X-Amz-Content-Sha256\"\n      - $ref: \"#/components/parameters/X-Amz-Date\"\n      - $ref: \"#/components/parameters/X-Amz-Algorithm\"\n      - $ref: \"#/components/parameters/X-Amz-Credential\"\n      - $ref: \"#/components/parameters/X-Amz-Security-Token\"\n      - $ref: \"#/components/parameters/X-Amz-Signature\"\n      - $ref: \"#/components/parameters/X-Amz-SignedHeaders\"\nservers:\n  - url: http://apigateway.{region}.amazonaws.com\n    variables:\n      region:\n        description: The AWS region\n        enum:\n          - us-east-1\n          - us-east-2\n          - us-west-1\n          - us-west-2\n          - us-gov-west-1\n          - us-gov-east-1\n          - ca-central-1\n          - eu-north-1\n          - eu-west-1\n          - eu-west-2\n          - eu-west-3\n          - eu-central-1\n          - ap-northeast-1\n          - ap-northeast-2\n          - ap-northeast-3\n          - ap-southeast-1\n          - ap-southeast-2\n          - ap-south-1\n          - sa-east-1\n        default: us-east-1\n    description: The AmazonApiGatewayV2 multi-region endpoint\n  - url: https://apigateway.{region}.amazonaws.com\n    variables:\n      region:\n        description: The AWS region\n        enum:\n          - us-east-1\n          - us-east-2\n          - us-west-1\n          - us-west-2\n          - us-gov-west-1\n          - us-gov-east-1\n          - ca-central-1\n          - eu-north-1\n          - eu-west-1\n          - eu-west-2\n          - eu-west-3\n          - eu-central-1\n          - ap-northeast-1\n          - ap-northeast-2\n          - ap-northeast-3\n          - ap-southeast-1\n          - ap-southeast-2\n          - ap-south-1\n          - sa-east-1\n        default: us-east-1\n    description: The AmazonApiGatewayV2 multi-region endpoint\n  - url: http://apigateway.{region}.amazonaws.com.cn\n    variables:\n      region:\n        description: The AWS region\n        enum:\n          - cn-north-1\n          - cn-northwest-1\n        default: cn-north-1\n    description: The AmazonApiGatewayV2 endpoint for China (Beijing) and China (Ningxia)\n  - url: https://apigateway.{region}.amazonaws.com.cn\n    variables:\n      region:\n        description: The AWS region\n        enum:\n          - cn-north-1\n          - cn-northwest-1\n        default: cn-north-1\n    description: The AmazonApiGatewayV2 endpoint for China (Beijing) and China (Ningxia)\ncomponents:\n  parameters:\n    X-Amz-Content-Sha256:\n      name: X-Amz-Content-Sha256\n      in: header\n      required: false\n      schema:\n        type: string\n    X-Amz-Date:\n      name: X-Amz-Date\n      in: header\n      required: false\n      schema:\n        type: string\n    X-Amz-Algorithm:\n      name: X-Amz-Algorithm\n      in: header\n      required: false\n      schema:\n        type: string\n    X-Amz-Credential:\n      name: X-Amz-Credential\n      in: header\n      required: false\n      schema:\n        type: string\n    X-Amz-Security-Token:\n      name: X-Amz-Security-Token\n      in: header\n      required: false\n      schema:\n        type: string\n    X-Amz-Signature:\n      name: X-Amz-Signature\n      in: header\n      required: false\n      schema:\n        type: string\n    X-Amz-SignedHeaders:\n      name: X-Amz-SignedHeaders\n      in: header\n      required: false\n      schema:\n        type: string\n  securitySchemes:\n    hmac:\n      type: apiKey\n      name: Authorization\n      in: header\n      description: Amazon Signature authorization v4\n      x-amazon-apigateway-authtype: awsSigv4\n  schemas:\n    CreateApiResponse:\n      type: object\n      properties:\n        ApiEndpoint:\n          $ref: \"#/components/schemas/__string\"\n        ApiId:\n          $ref: \"#/components/schemas/Id\"\n        ApiKeySelectionExpression:\n          $ref: \"#/components/schemas/SelectionExpression\"\n        CreatedDate:\n          $ref: \"#/components/schemas/__timestampIso8601\"\n        Description:\n          $ref: \"#/components/schemas/StringWithLengthBetween0And1024\"\n        DisableSchemaValidation:\n          $ref: \"#/components/schemas/__boolean\"\n        Name:\n          $ref: \"#/components/schemas/StringWithLengthBetween1And128\"\n        ProtocolType:\n          $ref: \"#/components/schemas/ProtocolType\"\n        RouteSelectionExpression:\n          $ref: \"#/components/schemas/SelectionExpression\"\n        Version:\n          $ref: \"#/components/schemas/StringWithLengthBetween1And64\"\n        Warnings:\n          $ref: \"#/components/schemas/__listOf__string\"\n        Tags:\n          $ref: \"#/components/schemas/Tags\"\n    StringWithLengthBetween1And1600:\n      type: string\n      description: A string with a length between [1-1600].\n    NotFoundException: {}\n    TooManyRequestsException: {}\n    BadRequestException: {}\n    ConflictException: {}\n    CreateApiMappingResponse:\n      type: object\n      properties:\n        ApiId:\n          $ref: \"#/components/schemas/Id\"\n        ApiMappingId:\n          $ref: \"#/components/schemas/Id\"\n        ApiMappingKey:\n          $ref: \"#/components/schemas/SelectionKey\"\n        Stage:\n          $ref: \"#/components/schemas/StringWithLengthBetween1And128\"\n    CreateAuthorizerResponse:\n      type: object\n      properties:\n        AuthorizerCredentialsArn:\n          $ref: \"#/components/schemas/Arn\"\n        AuthorizerId:\n          $ref: \"#/components/schemas/Id\"\n        AuthorizerResultTtlInSeconds:\n          $ref: \"#/components/schemas/IntegerWithLengthBetween0And3600\"\n        AuthorizerType:\n          $ref: \"#/components/schemas/AuthorizerType\"\n        AuthorizerUri:\n          $ref: \"#/components/schemas/UriWithLengthBetween1And2048\"\n        IdentitySource:\n          $ref: \"#/components/schemas/IdentitySourceList\"\n        IdentityValidationExpression:\n          $ref: \"#/components/schemas/StringWithLengthBetween0And1024\"\n        Name:\n          $ref: \"#/components/schemas/StringWithLengthBetween1And128\"\n        ProviderArns:\n          $ref: \"#/components/schemas/ProviderArnList\"\n    __string:\n      type: string\n    Arn:\n      type: string\n      description: Represents an Amazon Resource Name (ARN).\n    CreateDeploymentResponse:\n      type: object\n      properties:\n        CreatedDate:\n          $ref: \"#/components/schemas/__timestampIso8601\"\n        DeploymentId:\n          $ref: \"#/components/schemas/Id\"\n        DeploymentStatus:\n          $ref: \"#/components/schemas/DeploymentStatus\"\n        DeploymentStatusMessage:\n          $ref: \"#/components/schemas/__string\"\n        Description:\n          $ref: \"#/components/schemas/StringWithLengthBetween0And1024\"\n    CreateDomainNameResponse:\n      type: object\n      properties:\n        ApiMappingSelectionExpression:\n          $ref: \"#/components/schemas/SelectionExpression\"\n        DomainName:\n          $ref: \"#/components/schemas/StringWithLengthBetween1And512\"\n        DomainNameConfigurations:\n          $ref: \"#/components/schemas/DomainNameConfigurations\"\n        Tags:\n          $ref: \"#/components/schemas/Tags\"\n    DomainNameConfiguration:\n      type: object\n      properties:\n        ApiGatewayDomainName:\n          $ref: \"#/components/schemas/__string\"\n        CertificateArn:\n          $ref: \"#/components/schemas/Arn\"\n        CertificateName:\n          $ref: \"#/components/schemas/StringWithLengthBetween1And128\"\n        CertificateUploadDate:\n          $ref: \"#/components/schemas/__timestampIso8601\"\n        EndpointType:\n          $ref: \"#/components/schemas/EndpointType\"\n        HostedZoneId:\n          $ref: \"#/components/schemas/__string\"\n        SecurityPolicy:\n          $ref: \"#/components/schemas/SecurityPolicy\"\n        DomainNameStatus:\n          $ref: \"#/components/schemas/DomainNameStatus\"\n        DomainNameStatusMessage:\n          $ref: \"#/components/schemas/__string\"\n      description: The domain name configuration.\n    CreateIntegrationResponse:\n      type: object\n      properties:\n        ConnectionId:\n          $ref: \"#/components/schemas/StringWithLengthBetween1And1024\"\n        ConnectionType:\n          $ref: \"#/components/schemas/ConnectionType\"\n        ContentHandlingStrategy:\n          $ref: \"#/components/schemas/ContentHandlingStrategy\"\n        CredentialsArn:\n          $ref: \"#/components/schemas/Arn\"\n        Description:\n          $ref: \"#/components/schemas/StringWithLengthBetween0And1024\"\n        IntegrationId:\n          $ref: \"#/components/schemas/Id\"\n        IntegrationMethod:\n          $ref: \"#/components/schemas/StringWithLengthBetween1And64\"\n        IntegrationResponseSelectionExpression:\n          $ref: \"#/components/schemas/SelectionExpression\"\n        IntegrationType:\n          $ref: \"#/components/schemas/IntegrationType\"\n        IntegrationUri:\n          $ref: \"#/components/schemas/UriWithLengthBetween1And2048\"\n        PassthroughBehavior:\n          $ref: \"#/components/schemas/PassthroughBehavior\"\n        RequestParameters:\n          $ref: \"#/components/schemas/IntegrationParameters\"\n        RequestTemplates:\n          $ref: \"#/components/schemas/TemplateMap\"\n        TemplateSelectionExpression:\n          $ref: \"#/components/schemas/SelectionExpression\"\n        TimeoutInMillis:\n          $ref: \"#/components/schemas/IntegerWithLengthBetween50And29000\"\n    StringWithLengthBetween1And512:\n      type: string\n      description: A string with a length between [1-512].\n    StringWithLengthBetween0And32K:\n      type: string\n      description: A string with a length between [0-32768].\n    CreateIntegrationResponseResponse:\n      type: object\n      properties:\n        ContentHandlingStrategy:\n          $ref: \"#/components/schemas/ContentHandlingStrategy\"\n        IntegrationResponseId:\n          $ref: \"#/components/schemas/Id\"\n        IntegrationResponseKey:\n          $ref: \"#/components/schemas/SelectionKey\"\n        ResponseParameters:\n          $ref: \"#/components/schemas/IntegrationParameters\"\n        ResponseTemplates:\n          $ref: \"#/components/schemas/TemplateMap\"\n        TemplateSelectionExpression:\n          $ref: \"#/components/schemas/SelectionExpression\"\n    CreateModelResponse:\n      type: object\n      properties:\n        ContentType:\n          $ref: \"#/components/schemas/StringWithLengthBetween1And256\"\n        Description:\n          $ref: \"#/components/schemas/StringWithLengthBetween0And1024\"\n        ModelId:\n          $ref: \"#/components/schemas/Id\"\n        Name:\n          $ref: \"#/components/schemas/StringWithLengthBetween1And128\"\n        Schema:\n          $ref: \"#/components/schemas/StringWithLengthBetween0And32K\"\n    CreateRouteResponse:\n      type: object\n      properties:\n        ApiKeyRequired:\n          $ref: \"#/components/schemas/__boolean\"\n        AuthorizationScopes:\n          $ref: \"#/components/schemas/AuthorizationScopes\"\n        AuthorizationType:\n          $ref: \"#/components/schemas/AuthorizationType\"\n        AuthorizerId:\n          $ref: \"#/components/schemas/Id\"\n        ModelSelectionExpression:\n          $ref: \"#/components/schemas/SelectionExpression\"\n        OperationName:\n          $ref: \"#/components/schemas/StringWithLengthBetween1And64\"\n        RequestModels:\n          $ref: \"#/components/schemas/RouteModels\"\n        RequestParameters:\n          $ref: \"#/components/schemas/RouteParameters\"\n        RouteId:\n          $ref: \"#/components/schemas/Id\"\n        RouteKey:\n          $ref: \"#/components/schemas/SelectionKey\"\n        RouteResponseSelectionExpression:\n          $ref: \"#/components/schemas/SelectionExpression\"\n        Target:\n          $ref: \"#/components/schemas/StringWithLengthBetween1And128\"\n    StringWithLengthBetween1And64:\n      type: string\n      description: A string with a length between [1-64].\n    StringWithLengthBetween1And128:\n      type: string\n      description: A string with a length between [1-128].\n    ParameterConstraints:\n      type: object\n      properties:\n        Required:\n          $ref: \"#/components/schemas/__boolean\"\n      description: \u003e-\n        Validation constraints imposed on parameters of a request (path, query\n        string,\n         headers).\n    CreateRouteResponseResponse:\n      type: object\n      properties:\n        ModelSelectionExpression:\n          $ref: \"#/components/schemas/SelectionExpression\"\n        ResponseModels:\n          $ref: \"#/components/schemas/RouteModels\"\n        ResponseParameters:\n          $ref: \"#/components/schemas/RouteParameters\"\n        RouteResponseId:\n          $ref: \"#/components/schemas/Id\"\n        RouteResponseKey:\n          $ref: \"#/components/schemas/SelectionKey\"\n    CreateStageResponse:\n      type: object\n      properties:\n        AccessLogSettings:\n          $ref: \"#/components/schemas/AccessLogSettings\"\n        ClientCertificateId:\n          $ref: \"#/components/schemas/Id\"\n        CreatedDate:\n          $ref: \"#/components/schemas/__timestampIso8601\"\n        DefaultRouteSettings:\n          $ref: \"#/components/schemas/RouteSettings\"\n        DeploymentId:\n          $ref: \"#/components/schemas/Id\"\n        Description:\n          $ref: \"#/components/schemas/StringWithLengthBetween0And1024\"\n        LastUpdatedDate:\n          $ref: \"#/components/schemas/__timestampIso8601\"\n        RouteSettings:\n          $ref: \"#/components/schemas/RouteSettingsMap\"\n        StageName:\n          $ref: \"#/components/schemas/StringWithLengthBetween1And128\"\n        StageVariables:\n          $ref: \"#/components/schemas/StageVariablesMap\"\n        Tags:\n          $ref: \"#/components/schemas/Tags\"\n    StringWithLengthBetween1And1024:\n      type: string\n      description: A string with a length between [1-1024].\n    __boolean:\n      type: boolean\n    LoggingLevel:\n      type: string\n      enum:\n        - ERROR\n        - INFO\n        - \"false\"\n      description: The logging level.\n    __integer:\n      type: integer\n    __double:\n      type: number\n      format: double\n    RouteSettings:\n      type: object\n      properties:\n        DataTraceEnabled:\n          $ref: \"#/components/schemas/__boolean\"\n        DetailedMetricsEnabled:\n          $ref: \"#/components/schemas/__boolean\"\n        LoggingLevel:\n          $ref: \"#/components/schemas/LoggingLevel\"\n        ThrottlingBurstLimit:\n          $ref: \"#/components/schemas/__integer\"\n        ThrottlingRateLimit:\n          $ref: \"#/components/schemas/__double\"\n      description: Represents a collection of route settings.\n    StringWithLengthBetween0And2048:\n      type: string\n      description: A string with a length between [0-2048].\n    GetApiResponse:\n      type: object\n      properties:\n        ApiEndpoint:\n          $ref: \"#/components/schemas/__string\"\n        ApiId:\n          $ref: \"#/components/schemas/Id\"\n        ApiKeySelectionExpression:\n          $ref: \"#/components/schemas/SelectionExpression\"\n        CreatedDate:\n          $ref: \"#/components/schemas/__timestampIso8601\"\n        Description:\n          $ref: \"#/components/schemas/StringWithLengthBetween0And1024\"\n        DisableSchemaValidation:\n          $ref: \"#/components/schemas/__boolean\"\n        Name:\n          $ref: \"#/components/schemas/StringWithLengthBetween1And128\"\n        ProtocolType:\n          $ref: \"#/components/schemas/ProtocolType\"\n        RouteSelectionExpression:\n          $ref: \"#/components/schemas/SelectionExpression\"\n        Version:\n          $ref: \"#/components/schemas/StringWithLengthBetween1And64\"\n        Warnings:\n          $ref: \"#/components/schemas/__listOf__string\"\n        Tags:\n          $ref: \"#/components/schemas/Tags\"\n    GetApiMappingResponse:\n      type: object\n      properties:\n        ApiId:\n          $ref: \"#/components/schemas/Id\"\n        ApiMappingId:\n          $ref: \"#/components/schemas/Id\"\n        ApiMappingKey:\n          $ref: \"#/components/schemas/SelectionKey\"\n        Stage:\n          $ref: \"#/components/schemas/StringWithLengthBetween1And128\"\n    GetApiMappingsResponse:\n      type: object\n      properties:\n        Items:\n          $ref: \"#/components/schemas/__listOfApiMapping\"\n        NextToken:\n          $ref: \"#/components/schemas/NextToken\"\n    GetApisResponse:\n      type: object\n      properties:\n        Items:\n          $ref: \"#/components/schemas/__listOfApi\"\n        NextToken:\n          $ref: \"#/components/schemas/NextToken\"\n    GetAuthorizerResponse:\n      type: object\n      properties:\n        AuthorizerCredentialsArn:\n          $ref: \"#/components/schemas/Arn\"\n        AuthorizerId:\n          $ref: \"#/components/schemas/Id\"\n        AuthorizerResultTtlInSeconds:\n          $ref: \"#/components/schemas/IntegerWithLengthBetween0And3600\"\n        AuthorizerType:\n          $ref: \"#/components/schemas/AuthorizerType\"\n        AuthorizerUri:\n          $ref: \"#/components/schemas/UriWithLengthBetween1And2048\"\n        IdentitySource:\n          $ref: \"#/components/schemas/IdentitySourceList\"\n        IdentityValidationExpression:\n          $ref: \"#/components/schemas/StringWithLengthBetween0And1024\"\n        Name:\n          $ref: \"#/components/schemas/StringWithLengthBetween1And128\"\n        ProviderArns:\n          $ref: \"#/components/schemas/ProviderArnList\"\n    GetAuthorizersResponse:\n      type: object\n      properties:\n        Items:\n          $ref: \"#/components/schemas/__listOfAuthorizer\"\n        NextToken:\n          $ref: \"#/components/schemas/NextToken\"\n    GetDeploymentResponse:\n      type: object\n      properties:\n        CreatedDate:\n          $ref: \"#/components/schemas/__timestampIso8601\"\n        DeploymentId:\n          $ref: \"#/components/schemas/Id\"\n        DeploymentStatus:\n          $ref: \"#/components/schemas/DeploymentStatus\"\n        DeploymentStatusMessage:\n          $ref: \"#/components/schemas/__string\"\n        Description:\n          $ref: \"#/components/schemas/StringWithLengthBetween0And1024\"\n    GetDeploymentsResponse:\n      type: object\n      properties:\n        Items:\n          $ref: \"#/components/schemas/__listOfDeployment\"\n        NextToken:\n          $ref: \"#/components/schemas/NextToken\"\n    GetDomainNameResponse:\n      type: object\n      properties:\n        ApiMappingSelectionExpression:\n          $ref: \"#/components/schemas/SelectionExpression\"\n        DomainName:\n          $ref: \"#/components/schemas/StringWithLengthBetween1And512\"\n        DomainNameConfigurations:\n          $ref: \"#/components/schemas/DomainNameConfigurations\"\n        Tags:\n          $ref: \"#/components/schemas/Tags\"\n    GetDomainNamesResponse:\n      type: object\n      properties:\n        Items:\n          $ref: \"#/components/schemas/__listOfDomainName\"\n        NextToken:\n          $ref: \"#/components/schemas/NextToken\"\n    GetIntegrationResponse:\n      type: object\n      properties:\n        ConnectionId:\n          $ref: \"#/components/schemas/StringWithLengthBetween1And1024\"\n        ConnectionType:\n          $ref: \"#/components/schemas/ConnectionType\"\n        ContentHandlingStrategy:\n          $ref: \"#/components/schemas/ContentHandlingStrategy\"\n        CredentialsArn:\n          $ref: \"#/components/schemas/Arn\"\n        Description:\n          $ref: \"#/components/schemas/StringWithLengthBetween0And1024\"\n        IntegrationId:\n          $ref: \"#/components/schemas/Id\"\n        IntegrationMethod:\n          $ref: \"#/components/schemas/StringWithLengthBetween1And64\"\n        IntegrationResponseSelectionExpression:\n          $ref: \"#/components/schemas/SelectionExpression\"\n        IntegrationType:\n          $ref: \"#/components/schemas/IntegrationType\"\n        IntegrationUri:\n          $ref: \"#/components/schemas/UriWithLengthBetween1And2048\"\n        PassthroughBehavior:\n          $ref: \"#/components/schemas/PassthroughBehavior\"\n        RequestParameters:\n          $ref: \"#/components/schemas/IntegrationParameters\"\n        RequestTemplates:\n          $ref: \"#/components/schemas/TemplateMap\"\n        TemplateSelectionExpression:\n          $ref: \"#/components/schemas/SelectionExpression\"\n        TimeoutInMillis:\n          $ref: \"#/components/schemas/IntegerWithLengthBetween50And29000\"\n    GetIntegrationResponseResponse:\n      type: object\n      properties:\n        ContentHandlingStrategy:\n          $ref: \"#/components/schemas/ContentHandlingStrategy\"\n        IntegrationResponseId:\n          $ref: \"#/components/schemas/Id\"\n        IntegrationResponseKey:\n          $ref: \"#/components/schemas/SelectionKey\"\n        ResponseParameters:\n          $ref: \"#/components/schemas/IntegrationParameters\"\n        ResponseTemplates:\n          $ref: \"#/components/schemas/TemplateMap\"\n        TemplateSelectionExpression:\n          $ref: \"#/components/schemas/SelectionExpression\"\n    GetIntegrationResponsesResponse:\n      type: object\n      properties:\n        Items:\n          $ref: \"#/components/schemas/__listOfIntegrationResponse\"\n        NextToken:\n          $ref: \"#/components/schemas/NextToken\"\n    GetIntegrationsResponse:\n      type: object\n      properties:\n        Items:\n          $ref: \"#/components/schemas/__listOfIntegration\"\n        NextToken:\n          $ref: \"#/components/schemas/NextToken\"\n    GetModelResponse:\n      type: object\n      properties:\n        ContentType:\n          $ref: \"#/components/schemas/StringWithLengthBetween1And256\"\n        Description:\n          $ref: \"#/components/schemas/StringWithLengthBetween0And1024\"\n        ModelId:\n          $ref: \"#/components/schemas/Id\"\n        Name:\n          $ref: \"#/components/schemas/StringWithLengthBetween1And128\"\n        Schema:\n          $ref: \"#/components/schemas/StringWithLengthBetween0And32K\"\n    GetModelTemplateResponse:\n      type: object\n      properties:\n        Value:\n          $ref: \"#/components/schemas/__string\"\n    GetModelsResponse:\n      type: object\n      properties:\n        Items:\n          $ref: \"#/components/schemas/__listOfModel\"\n        NextToken:\n          $ref: \"#/components/schemas/NextToken\"\n    GetRouteResponse:\n      type: object\n      properties:\n        ApiKeyRequired:\n          $ref: \"#/components/schemas/__boolean\"\n        AuthorizationScopes:\n          $ref: \"#/components/schemas/AuthorizationScopes\"\n        AuthorizationType:\n          $ref: \"#/components/schemas/AuthorizationType\"\n        AuthorizerId:\n          $ref: \"#/components/schemas/Id\"\n        ModelSelectionExpression:\n          $ref: \"#/components/schemas/SelectionExpression\"\n        OperationName:\n          $ref: \"#/components/schemas/StringWithLengthBetween1And64\"\n        RequestModels:\n          $ref: \"#/components/schemas/RouteModels\"\n        RequestParameters:\n          $ref: \"#/components/schemas/RouteParameters\"\n        RouteId:\n          $ref: \"#/components/schemas/Id\"\n        RouteKey:\n          $ref: \"#/components/schemas/SelectionKey\"\n        RouteResponseSelectionExpression:\n          $ref: \"#/components/schemas/SelectionExpression\"\n        Target:\n          $ref: \"#/components/schemas/StringWithLengthBetween1And128\"\n    GetRouteResponseResponse:\n      type: object\n      properties:\n        ModelSelectionExpression:\n          $ref: \"#/components/schemas/SelectionExpression\"\n        ResponseModels:\n          $ref: \"#/components/schemas/RouteModels\"\n        ResponseParameters:\n          $ref: \"#/components/schemas/RouteParameters\"\n        RouteResponseId:\n          $ref: \"#/components/schemas/Id\"\n        RouteResponseKey:\n          $ref: \"#/components/schemas/SelectionKey\"\n    GetRouteResponsesResponse:\n      type: object\n      properties:\n        Items:\n          $ref: \"#/components/schemas/__listOfRouteResponse\"\n        NextToken:\n          $ref: \"#/components/schemas/NextToken\"\n    GetRoutesResponse:\n      type: object\n      properties:\n        Items:\n          $ref: \"#/components/schemas/__listOfRoute\"\n        NextToken:\n          $ref: \"#/components/schemas/NextToken\"\n    GetStageResponse:\n      type: object\n      properties:\n        AccessLogSettings:\n          $ref: \"#/components/schemas/AccessLogSettings\"\n        ClientCertificateId:\n          $ref: \"#/components/schemas/Id\"\n        CreatedDate:\n          $ref: \"#/components/schemas/__timestampIso8601\"\n        DefaultRouteSettings:\n          $ref: \"#/components/schemas/RouteSettings\"\n        DeploymentId:\n          $ref: \"#/components/schemas/Id\"\n        Description:\n          $ref: \"#/components/schemas/StringWithLengthBetween0And1024\"\n        LastUpdatedDate:\n          $ref: \"#/components/schemas/__timestampIso8601\"\n        RouteSettings:\n          $ref: \"#/components/schemas/RouteSettingsMap\"\n        StageName:\n          $ref: \"#/components/schemas/StringWithLengthBetween1And128\"\n        StageVariables:\n          $ref: \"#/components/schemas/StageVariablesMap\"\n        Tags:\n          $ref: \"#/components/schemas/Tags\"\n    GetStagesResponse:\n      type: object\n      properties:\n        Items:\n          $ref: \"#/components/schemas/__listOfStage\"\n        NextToken:\n          $ref: \"#/components/schemas/NextToken\"\n    GetTagsResponse:\n      type: object\n      properties:\n        Tags:\n          $ref: \"#/components/schemas/__mapOf__string\"\n    TagResourceResponse:\n      type: object\n      properties: {}\n    UpdateApiResponse:\n      type: object\n      properties:\n        ApiEndpoint:\n          $ref: \"#/components/schemas/__string\"\n        ApiId:\n          $ref: \"#/components/schemas/Id\"\n        ApiKeySelectionExpression:\n          $ref: \"#/components/schemas/SelectionExpression\"\n        CreatedDate:\n          $ref: \"#/components/schemas/__timestampIso8601\"\n        Description:\n          $ref: \"#/components/schemas/StringWithLengthBetween0And1024\"\n        DisableSchemaValidation:\n          $ref: \"#/components/schemas/__boolean\"\n        Name:\n          $ref: \"#/components/schemas/StringWithLengthBetween1And128\"\n        ProtocolType:\n          $ref: \"#/components/schemas/ProtocolType\"\n        RouteSelectionExpression:\n          $ref: \"#/components/schemas/SelectionExpression\"\n        Version:\n          $ref: \"#/components/schemas/StringWithLengthBetween1And64\"\n        Warnings:\n          $ref: \"#/components/schemas/__listOf__string\"\n        Tags:\n          $ref: \"#/components/schemas/Tags\"\n    UpdateApiMappingResponse:\n      type: object\n      properties:\n        ApiId:\n          $ref: \"#/components/schemas/Id\"\n        ApiMappingId:\n          $ref: \"#/components/schemas/Id\"\n        ApiMappingKey:\n          $ref: \"#/components/schemas/SelectionKey\"\n        Stage:\n          $ref: \"#/components/schemas/StringWithLengthBetween1And128\"\n    UpdateAuthorizerResponse:\n      type: object\n      properties:\n        AuthorizerCredentialsArn:\n          $ref: \"#/components/schemas/Arn\"\n        AuthorizerId:\n          $ref: \"#/components/schemas/Id\"\n        AuthorizerResultTtlInSeconds:\n          $ref: \"#/components/schemas/IntegerWithLengthBetween0And3600\"\n        AuthorizerType:\n          $ref: \"#/components/schemas/AuthorizerType\"\n        AuthorizerUri:\n          $ref: \"#/components/schemas/UriWithLengthBetween1And2048\"\n        IdentitySource:\n          $ref: \"#/components/schemas/IdentitySourceList\"\n        IdentityValidationExpression:\n          $ref: \"#/components/schemas/StringWithLengthBetween0And1024\"\n        Name:\n          $ref: \"#/components/schemas/StringWithLengthBetween1And128\"\n        ProviderArns:\n          $ref: \"#/components/schemas/ProviderArnList\"\n    UpdateDeploymentResponse:\n      type: object\n      properties:\n        CreatedDate:\n          $ref: \"#/components/schemas/__timestampIso8601\"\n        DeploymentId:\n          $ref: \"#/components/schemas/Id\"\n        DeploymentStatus:\n          $ref: \"#/components/schemas/DeploymentStatus\"\n        DeploymentStatusMessage:\n          $ref: \"#/components/schemas/__string\"\n        Description:\n          $ref: \"#/components/schemas/StringWithLengthBetween0And1024\"\n    UpdateDomainNameResponse:\n      type: object\n      properties:\n        ApiMappingSelectionExpression:\n          $ref: \"#/components/schemas/SelectionExpression\"\n        DomainName:\n          $ref: \"#/components/schemas/StringWithLengthBetween1And512\"\n        DomainNameConfigurations:\n          $ref: \"#/components/schemas/DomainNameConfigurations\"\n        Tags:\n          $ref: \"#/components/schemas/Tags\"\n    UpdateIntegrationResponse:\n      type: object\n      properties:\n        ConnectionId:\n          $ref: \"#/components/schemas/StringWithLengthBetween1And1024\"\n        ConnectionType:\n          $ref: \"#/components/schemas/ConnectionType\"\n        ContentHandlingStrategy:\n          $ref: \"#/components/schemas/ContentHandlingStrategy\"\n        CredentialsArn:\n          $ref: \"#/components/schemas/Arn\"\n        Description:\n          $ref: \"#/components/schemas/StringWithLengthBetween0And1024\"\n        IntegrationId:\n          $ref: \"#/components/schemas/Id\"\n        IntegrationMethod:\n          $ref: \"#/components/schemas/StringWithLengthBetween1And64\"\n        IntegrationResponseSelectionExpression:\n          $ref: \"#/components/schemas/SelectionExpression\"\n        IntegrationType:\n          $ref: \"#/components/schemas/IntegrationType\"\n        IntegrationUri:\n          $ref: \"#/components/schemas/UriWithLengthBetween1And2048\"\n        PassthroughBehavior:\n          $ref: \"#/components/schemas/PassthroughBehavior\"\n        RequestParameters:\n          $ref: \"#/components/schemas/IntegrationParameters\"\n        RequestTemplates:\n          $ref: \"#/components/schemas/TemplateMap\"\n        TemplateSelectionExpression:\n          $ref: \"#/components/schemas/SelectionExpression\"\n        TimeoutInMillis:\n          $ref: \"#/components/schemas/IntegerWithLengthBetween50And29000\"\n    UpdateIntegrationResponseResponse:\n      type: object\n      properties:\n        ContentHandlingStrategy:\n          $ref: \"#/components/schemas/ContentHandlingStrategy\"\n        IntegrationResponseId:\n          $ref: \"#/components/schemas/Id\"\n        IntegrationResponseKey:\n          $ref: \"#/components/schemas/SelectionKey\"\n        ResponseParameters:\n          $ref: \"#/components/schemas/IntegrationParameters\"\n        ResponseTemplates:\n          $ref: \"#/components/schemas/TemplateMap\"\n        TemplateSelectionExpression:\n          $ref: \"#/components/schemas/SelectionExpression\"\n    UpdateModelResponse:\n      type: object\n      properties:\n        ContentType:\n          $ref: \"#/components/schemas/StringWithLengthBetween1And256\"\n        Description:\n          $ref: \"#/components/schemas/StringWithLengthBetween0And1024\"\n        ModelId:\n          $ref: \"#/components/schemas/Id\"\n        Name:\n          $ref: \"#/components/schemas/StringWithLengthBetween1And128\"\n        Schema:\n          $ref: \"#/components/schemas/StringWithLengthBetween0And32K\"\n    UpdateRouteResponse:\n      type: object\n      properties:\n        ApiKeyRequired:\n          $ref: \"#/components/schemas/__boolean\"\n        AuthorizationScopes:\n          $ref: \"#/components/schemas/AuthorizationScopes\"\n        AuthorizationType:\n          $ref: \"#/components/schemas/AuthorizationType\"\n        AuthorizerId:\n          $ref: \"#/components/schemas/Id\"\n        ModelSelectionExpression:\n          $ref: \"#/components/schemas/SelectionExpression\"\n        OperationName:\n          $ref: \"#/components/schemas/StringWithLengthBetween1And64\"\n        RequestModels:\n          $ref: \"#/components/schemas/RouteModels\"\n        RequestParameters:\n          $ref: \"#/components/schemas/RouteParameters\"\n        RouteId:\n          $ref: \"#/components/schemas/Id\"\n        RouteKey:\n          $ref: \"#/components/schemas/SelectionKey\"\n        RouteResponseSelectionExpression:\n          $ref: \"#/components/schemas/SelectionExpression\"\n        Target:\n          $ref: \"#/components/schemas/StringWithLengthBetween1And128\"\n    UpdateRouteResponseResponse:\n      type: object\n      properties:\n        ModelSelectionExpression:\n          $ref: \"#/components/schemas/SelectionExpression\"\n        ResponseModels:\n          $ref: \"#/components/schemas/RouteModels\"\n        ResponseParameters:\n          $ref: \"#/components/schemas/RouteParameters\"\n        RouteResponseId:\n          $ref: \"#/components/schemas/Id\"\n        RouteResponseKey:\n          $ref: \"#/components/schemas/SelectionKey\"\n    UpdateStageResponse:\n      type: object\n      properties:\n        AccessLogSettings:\n          $ref: \"#/components/schemas/AccessLogSettings\"\n        ClientCertificateId:\n          $ref: \"#/components/schemas/Id\"\n        CreatedDate:\n          $ref: \"#/components/schemas/__timestampIso8601\"\n        DefaultRouteSettings:\n          $ref: \"#/components/schemas/RouteSettings\"\n        DeploymentId:\n          $ref: \"#/components/schemas/Id\"\n        Description:\n          $ref: \"#/components/schemas/StringWithLengthBetween0And1024\"\n        LastUpdatedDate:\n          $ref: \"#/components/schemas/__timestampIso8601\"\n        RouteSettings:\n          $ref: \"#/components/schemas/RouteSettingsMap\"\n        StageName:\n          $ref: \"#/components/schemas/StringWithLengthBetween1And128\"\n        StageVariables:\n          $ref: \"#/components/schemas/StageVariablesMap\"\n        Tags:\n          $ref: \"#/components/schemas/Tags\"\n    AccessLogSettings:\n      type: object\n      properties:\n        DestinationArn:\n          $ref: \"#/components/schemas/Arn\"\n        Format:\n          $ref: \"#/components/schemas/StringWithLengthBetween1And1024\"\n      description: Settings for logging access in a stage.\n    Id:\n      type: string\n      description: The identifier.\n    SelectionExpression:\n      type: string\n      description: An expression used to extract information at runtime. See \u003ca\n        href=\"https://docs.aws.amazon.com/apigateway/latest/developerguide/apigateway-websocket-api-selection-expressions.html#apigateway-websocket-api-apikey-selection-expressions\"\u003eSelection\n        Expressions\u003c/a\u003e for more information.\n    __timestampIso8601:\n      type: string\n      format: date-time\n    StringWithLengthBetween0And1024:\n      type: string\n      description: A string with a length between [0-1024].\n    ProtocolType:\n      type: string\n      enum:\n        - WEBSOCKET\n      description: \"\"\n    __listOf__string:\n      type: array\n      items:\n        $ref: \"#/components/schemas/__string\"\n    Tags:\n      type: object\n      additionalProperties:\n        $ref: \"#/components/schemas/StringWithLengthBetween1And1600\"\n    Api:\n      type: object\n      required:\n        - RouteSelectionExpression\n        - ProtocolType\n        - Name\n      properties:\n        ApiEndpoint:\n          $ref: \"#/components/schemas/__string\"\n        ApiId:\n          $ref: \"#/components/schemas/Id\"\n        ApiKeySelectionExpression:\n          $ref: \"#/components/schemas/SelectionExpression\"\n        CreatedDate:\n          $ref: \"#/components/schemas/__timestampIso8601\"\n        Description:\n          $ref: \"#/components/schemas/StringWithLengthBetween0And1024\"\n        DisableSchemaValidation:\n          $ref: \"#/components/schemas/__boolean\"\n        Name:\n          $ref: \"#/components/schemas/StringWithLengthBetween1And128\"\n        ProtocolType:\n          $ref: \"#/components/schemas/ProtocolType\"\n        RouteSelectionExpression:\n          $ref: \"#/components/schemas/SelectionExpression\"\n        Version:\n          $ref: \"#/components/schemas/StringWithLengthBetween1And64\"\n        Warnings:\n          $ref: \"#/components/schemas/__listOf__string\"\n        Tags:\n          $ref: \"#/components/schemas/Tags\"\n      description: Represents an API.\n    SelectionKey:\n      type: string\n      description: \u003e-\n        After evaulating a selection expression, the result is compared against\n        one or\n         more selection keys to find a matching key. See \u003ca href=\"https://docs.aws.amazon.com/apigateway/latest/developerguide/apigateway-websocket-api-selection-expressions.html#apigateway-websocket-api-apikey-selection-expressions\"\u003eSelection Expressions\u003c/a\u003e for a list of expressions and each expression's\n         associated selection key type.\n    ApiMapping:\n      type: object\n      required:\n        - Stage\n        - ApiId\n      properties:\n        ApiId:\n          $ref: \"#/components/schemas/Id\"\n        ApiMappingId:\n          $ref: \"#/components/schemas/Id\"\n        ApiMappingKey:\n          $ref: \"#/components/schemas/SelectionKey\"\n        Stage:\n          $ref: \"#/components/schemas/StringWithLengthBetween1And128\"\n      description: Represents an API mapping.\n    AuthorizationScopes:\n      type: array\n      description: \u003e-\n        A list of authorization scopes configured on a route. The scopes are\n        used with a\n         COGNITO_USER_POOLS authorizer to authorize the method invocation. The authorization\n         works by matching the route scopes against the scopes parsed from the access token in\n         the incoming request. The method invocation is authorized if any route scope matches\n         a claimed scope in the access token. Otherwise, the invocation is not authorized.\n         When the route scope is configured, the client must provide an access token instead\n         of an identity token for authorization purposes.\n      items:\n        $ref: \"#/components/schemas/StringWithLengthBetween1And64\"\n    AuthorizationType:\n      type: string\n      enum:\n        - NONE\n        - AWS_IAM\n        - CUSTOM\n      description: |-\n        The authorization type. Valid values are NONE for open access,\n         AWS_IAM for using AWS IAM permissions, and CUSTOM for\n         using a Lambda authorizer.\n    IntegerWithLengthBetween0And3600:\n      type: integer\n      description: An integer with a value between [0-3600].\n      minimum: -2147483648\n      maximum: 2147483647\n    AuthorizerType:\n      type: string\n      enum:\n        - REQUEST\n      description: |-\n        The authorizer type. Currently the only valid value is REQUEST, for a\n         Lambda function using incoming request parameters.\n    UriWithLengthBetween1And2048:\n      type: string\n      description: A string representation of a URI with a length between [1-2048].\n    IdentitySourceList:\n      type: array\n      description: \u003e-\n        The identity source for which authorization is requested. For the\n        REQUEST\n         authorizer, this is required when authorization caching is enabled. The value is a\n         comma-separated string of one or more mapping expressions of the specified request\n         parameters. For example, if an Auth header, a Name query string parameter are defined\n         as identity sources, this value is $method.request.header.Auth,\n         $method.request.querystring.Name. These parameters will be used to derive\n         the authorization caching key and to perform runtime validation of the REQUEST\n         authorizer by verifying all of the identity-related request parameters are present,\n         not null and non-empty. Only when this is true does the authorizer invoke the\n         authorizer Lambda function, otherwise, it returns a 401 Unauthorized\n         response without calling the Lambda function. The valid value is a string of\n         comma-separated mapping expressions of the specified request parameters. When the\n         authorization caching is not enabled, this property is optional.\n      items:\n        $ref: \"#/components/schemas/__string\"\n    ProviderArnList:\n      type: array\n      description: For REQUEST authorizer, this is not defined.\n      items:\n        $ref: \"#/components/schemas/Arn\"\n    Authorizer:\n      type: object\n      required:\n        - Name\n      properties:\n        AuthorizerCredentialsArn:\n          $ref: \"#/components/schemas/Arn\"\n        AuthorizerId:\n          $ref: \"#/components/schemas/Id\"\n        AuthorizerResultTtlInSeconds:\n          $ref: \"#/components/schemas/IntegerWithLengthBetween0And3600\"\n        AuthorizerType:\n          $ref: \"#/components/schemas/AuthorizerType\"\n        AuthorizerUri:\n          $ref: \"#/components/schemas/UriWithLengthBetween1And2048\"\n        IdentitySource:\n          $ref: \"#/components/schemas/IdentitySourceList\"\n        IdentityValidationExpression:\n          $ref: \"#/components/schemas/StringWithLengthBetween0And1024\"\n        Name:\n          $ref: \"#/components/schemas/StringWithLengthBetween1And128\"\n        ProviderArns:\n          $ref: \"#/components/schemas/ProviderArnList\"\n      description: Represents an authorizer.\n    ConnectionType:\n      type: string\n      enum:\n        - INTERNET\n        - VPC_LINK\n      description: Represents a connection type.\n    ContentHandlingStrategy:\n      type: string\n      enum:\n        - CONVERT_TO_BINARY\n        - CONVERT_TO_TEXT\n      description: Specifies how to handle response payload content type conversions.\n    CreateApiMappingRequest:\n      type: object\n      required:\n        - Stage\n        - ApiId\n      properties:\n        ApiId:\n          $ref: \"#/components/schemas/Id\"\n        ApiMappingKey:\n          $ref: \"#/components/schemas/SelectionKey\"\n        Stage:\n          $ref: \"#/components/schemas/StringWithLengthBetween1And128\"\n    CreateApiRequest:\n      type: object\n      required:\n        - RouteSelectionExpression\n        - ProtocolType\n        - Name\n      properties:\n        ApiKeySelectionExpression:\n          $ref: \"#/components/schemas/SelectionExpression\"\n        Description:\n          $ref: \"#/components/schemas/StringWithLengthBetween0And1024\"\n        DisableSchemaValidation:\n          $ref: \"#/components/schemas/__boolean\"\n        Name:\n          $ref: \"#/components/schemas/StringWithLengthBetween1And128\"\n        ProtocolType:\n          $ref: \"#/components/schemas/ProtocolType\"\n        RouteSelectionExpression:\n          $ref: \"#/components/schemas/SelectionExpression\"\n        Version:\n          $ref: \"#/components/schemas/StringWithLengthBetween1And64\"\n        Tags:\n          $ref: \"#/components/schemas/Tags\"\n    CreateAuthorizerRequest:\n      type: object\n      required:\n        - AuthorizerUri\n        - AuthorizerType\n        - IdentitySource\n        - Name\n      properties:\n        AuthorizerCredentialsArn:\n          $ref: \"#/components/schemas/Arn\"\n        AuthorizerResultTtlInSeconds:\n          $ref: \"#/components/schemas/IntegerWithLengthBetween0And3600\"\n        AuthorizerType:\n          $ref: \"#/components/schemas/AuthorizerType\"\n        AuthorizerUri:\n          $ref: \"#/components/schemas/UriWithLengthBetween1And2048\"\n        IdentitySource:\n          $ref: \"#/components/schemas/IdentitySourceList\"\n        IdentityValidationExpression:\n          $ref: \"#/components/schemas/StringWithLengthBetween0And1024\"\n        Name:\n          $ref: \"#/components/schemas/StringWithLengthBetween1And128\"\n        ProviderArns:\n          $ref: \"#/components/schemas/ProviderArnList\"\n    CreateDeploymentRequest:\n      type: object\n      properties:\n        Description:\n          $ref: \"#/components/schemas/StringWithLengthBetween0And1024\"\n        StageName:\n          $ref: \"#/components/schemas/StringWithLengthBetween1And128\"\n    DeploymentStatus:\n      type: string\n      enum:\n        - PENDING\n        - FAILED\n        - DEPLOYED\n      description: Represents a deployment status.\n    DomainNameConfigurations:\n      type: array\n      description: The domain name configurations.\n      items:\n        $ref: \"#/components/schemas/DomainNameConfiguration\"\n    CreateDomainNameRequest:\n      type: object\n      required:\n        - DomainName\n      properties:\n        DomainName:\n          $ref: \"#/components/schemas/StringWithLengthBetween1And512\"\n        DomainNameConfigurations:\n          $ref: \"#/components/schemas/DomainNameConfigurations\"\n        Tags:\n          $ref: \"#/components/schemas/Tags\"\n    IntegrationType:\n      type: string\n      enum:\n        - AWS\n        - HTTP\n        - MOCK\n        - HTTP_PROXY\n        - AWS_PROXY\n      description: Represents an API method integration type.\n    PassthroughBehavior:\n      type: string\n      enum:\n        - WHEN_NO_MATCH\n        - NEVER\n        - WHEN_NO_TEMPLATES\n      description: Represents passthrough behavior for an integration response.\n    IntegrationParameters:\n      type: object\n      description: \u003e-\n        A key-value map specifying response parameters that are passed to the\n        method\n         response from the backend. The key is a method response header parameter name and the\n         mapped value is an integration response header value, a static value enclosed within\n         a pair of single quotes, or a JSON expression from the integration response body. The\n         mapping key must match the pattern of method.response.header.{name}, where name is a\n         valid and unique header name. The mapped non-static value must match the pattern of\n         integration.response.header.{name} or integration.response.body.{JSON-expression},\n         where name is a valid and unique response header name and JSON-expression is a valid\n         JSON expression without the $ prefix.\n      additionalProperties:\n        $ref: \"#/components/schemas/StringWithLengthBetween1And512\"\n    TemplateMap:\n      type: object\n      description: \u003e-\n        A mapping of identifier keys to templates. The value is an actual\n        template script.\n         The key is typically a SelectionKey which is chosen based on evaluating\n         a selection expression.\n      additionalProperties:\n        $ref: \"#/components/schemas/StringWithLengthBetween0And32K\"\n    IntegerWithLengthBetween50And29000:\n      type: integer\n      description: An integer with a value between [50-29000].\n      minimum: -2147483648\n      maximum: 2147483647\n    CreateIntegrationRequest:\n      type: object\n      required:\n        - IntegrationType\n      properties:\n        ConnectionId:\n          $ref: \"#/components/schemas/StringWithLengthBetween1And1024\"\n        ConnectionType:\n          $ref: \"#/components/schemas/ConnectionType\"\n        ContentHandlingStrategy:\n          $ref: \"#/components/schemas/ContentHandlingStrategy\"\n        CredentialsArn:\n          $ref: \"#/components/schemas/Arn\"\n        Description:\n          $ref: \"#/components/schemas/StringWithLengthBetween0And1024\"\n        IntegrationMethod:\n          $ref: \"#/components/schemas/StringWithLengthBetween1And64\"\n        IntegrationType:\n          $ref: \"#/components/schemas/IntegrationType\"\n        IntegrationUri:\n          $ref: \"#/components/schemas/UriWithLengthBetween1And2048\"\n        PassthroughBehavior:\n          $ref: \"#/components/schemas/PassthroughBehavior\"\n        RequestParameters:\n          $ref: \"#/components/schemas/IntegrationParameters\"\n        RequestTemplates:\n          $ref: \"#/components/schemas/TemplateMap\"\n        TemplateSelectionExpression:\n          $ref: \"#/components/schemas/SelectionExpression\"\n        TimeoutInMillis:\n          $ref: \"#/components/schemas/IntegerWithLengthBetween50And29000\"\n    CreateIntegrationResponseRequest:\n      type: object\n      required:\n        - IntegrationResponseKey\n      properties:\n        ContentHandlingStrategy:\n          $ref: \"#/components/schemas/ContentHandlingStrategy\"\n        IntegrationResponseKey:\n          $ref: \"#/components/schemas/SelectionKey\"\n        ResponseParameters:\n          $ref: \"#/components/schemas/IntegrationParameters\"\n        ResponseTemplates:\n          $ref: \"#/components/schemas/TemplateMap\"\n        TemplateSelectionExpression:\n          $ref: \"#/components/schemas/SelectionExpression\"\n    StringWithLengthBetween1And256:\n      type: string\n      description: A string with a length between [1-256].\n    CreateModelRequest:\n      type: object\n      required:\n        - Schema\n        - Name\n      properties:\n        ContentType:\n          $ref: \"#/components/schemas/StringWithLengthBetween1And256\"\n        Description:\n          $ref: \"#/components/schemas/StringWithLengthBetween0And1024\"\n        Name:\n          $ref: \"#/components/schemas/StringWithLengthBetween1And128\"\n        Schema:\n          $ref: \"#/components/schemas/StringWithLengthBetween0And32K\"\n    RouteModels:\n      type: object\n      description: The route models.\n      additionalProperties:\n        $ref: \"#/components/schemas/StringWithLengthBetween1And128\"\n    RouteParameters:\n      type: object\n      description: The route parameters.\n      additionalProperties:\n        $ref: \"#/components/schemas/ParameterConstraints\"\n    CreateRouteRequest:\n      type: object\n      required:\n        - RouteKey\n      properties:\n        ApiKeyRequired:\n          $ref: \"#/components/schemas/__boolean\"\n        AuthorizationScopes:\n          $ref: \"#/components/schemas/AuthorizationScopes\"\n        AuthorizationType:\n          $ref: \"#/components/schemas/AuthorizationType\"\n        AuthorizerId:\n          $ref: \"#/components/schemas/Id\"\n        ModelSelectionExpression:\n          $ref: \"#/components/schemas/SelectionExpression\"\n        OperationName:\n          $ref: \"#/components/schemas/StringWithLengthBetween1And64\"\n        RequestModels:\n          $ref: \"#/components/schemas/RouteModels\"\n        RequestParameters:\n          $ref: \"#/components/schemas/RouteParameters\"\n        RouteKey:\n          $ref: \"#/components/schemas/SelectionKey\"\n        RouteResponseSelectionExpression:\n          $ref: \"#/components/schemas/SelectionExpression\"\n        Target:\n          $ref: \"#/components/schemas/StringWithLengthBetween1And128\"\n    CreateRouteResponseRequest:\n      type: object\n      required:\n        - RouteResponseKey\n      properties:\n        ModelSelectionExpression:\n          $ref: \"#/components/schemas/SelectionExpression\"\n        ResponseModels:\n          $ref: \"#/components/schemas/RouteModels\"\n        ResponseParameters:\n          $ref: \"#/components/schemas/RouteParameters\"\n        RouteResponseKey:\n          $ref: \"#/components/schemas/SelectionKey\"\n    RouteSettingsMap:\n      type: object\n      description: The route settings map.\n      additionalProperties:\n        $ref: \"#/components/schemas/RouteSettings\"\n    StageVariablesMap:\n      type: object\n      description: The stage variable map.\n      additionalProperties:\n        $ref: \"#/components/schemas/StringWithLengthBetween0And2048\"\n    CreateStageRequest:\n      type: object\n      required:\n        - StageName\n      properties:\n        AccessLogSettings:\n          $ref: \"#/components/schemas/AccessLogSettings\"\n        ClientCertificateId:\n          $ref: \"#/components/schemas/Id\"\n        DefaultRouteSettings:\n          $ref: \"#/components/schemas/RouteSettings\"\n        DeploymentId:\n          $ref: \"#/components/schemas/Id\"\n        Description:\n          $ref: \"#/components/schemas/StringWithLengthBetween0And1024\"\n        RouteSettings:\n          $ref: \"#/components/schemas/RouteSettingsMap\"\n        StageName:\n          $ref: \"#/components/schemas/StringWithLengthBetween1And128\"\n        StageVariables:\n          $ref: \"#/components/schemas/StageVariablesMap\"\n        Tags:\n          $ref: \"#/components/schemas/Tags\"\n    DeleteApiMappingRequest:\n      type: object\n      properties: {}\n    DeleteApiRequest:\n      type: object\n      properties: {}\n    DeleteAuthorizerRequest:\n      type: object\n      properties: {}\n    DeleteDeploymentRequest:\n      type: object\n      properties: {}\n    DeleteDomainNameRequest:\n      type: object\n      properties: {}\n    DeleteIntegrationRequest:\n      type: object\n      properties: {}\n    DeleteIntegrationResponseRequest:\n      type: object\n      properties: {}\n    DeleteModelRequest:\n      type: object\n      properties: {}\n    DeleteRouteRequest:\n      type: object\n      properties: {}\n    DeleteRouteResponseRequest:\n      type: object\n      properties: {}\n    DeleteStageRequest:\n      type: object\n      properties: {}\n    Deployment:\n      type: object\n      properties:\n        CreatedDate:\n          $ref: \"#/components/schemas/__timestampIso8601\"\n        DeploymentId:\n          $ref: \"#/components/schemas/Id\"\n        DeploymentStatus:\n          $ref: \"#/components/schemas/DeploymentStatus\"\n        DeploymentStatusMessage:\n          $ref: \"#/components/schemas/__string\"\n        Description:\n          $ref: \"#/components/schemas/StringWithLengthBetween0And1024\"\n      description: |-\n        An immutable representation of an API that can be called by users. A\n         Deployment must be associated with a Stage for it to be\n         callable over the internet.\n    DomainName:\n      type: object\n      required:\n        - DomainName\n      properties:\n        ApiMappingSelectionExpression:\n          $ref: \"#/components/schemas/SelectionExpression\"\n        DomainName:\n          $ref: \"#/components/schemas/StringWithLengthBetween1And512\"\n        DomainNameConfigurations:\n          $ref: \"#/components/schemas/DomainNameConfigurations\"\n        Tags:\n          $ref: \"#/components/schemas/Tags\"\n      description: Represents a domain name.\n    EndpointType:\n      type: string\n      enum:\n        - REGIONAL\n        - EDGE\n      description: Represents an endpoint type.\n    SecurityPolicy:\n      type: string\n      enum:\n        - TLS_1_0\n        - TLS_1_2\n      description: The Transport Layer Security (TLS) version of the security policy for\n        this domain name. The valid values are TLS_1_0 and TLS_1_2.\n    DomainNameStatus:\n      type: string\n      enum:\n        - AVAILABLE\n        - UPDATING\n      description: The status of the domain name migration. The valid values are AVAILABLE\n        and UPDATING. If the status is UPDATING, the domain cannot be modified\n        further until the existing operation is complete. If it is AVAILABLE,\n        the domain can be updated.\n    GetApiMappingRequest:\n      type: object\n      properties: {}\n    GetApiMappingsRequest:\n      type: object\n      properties: {}\n    __listOfApiMapping:\n      type: array\n      items:\n        $ref: \"#/components/schemas/ApiMapping\"\n    NextToken:\n      type: string\n      description: \u003e-\n        The next page of elements from this collection. Not valid for the last\n        element of\n         the collection.\n    GetApiRequest:\n      type: object\n      properties: {}\n    GetApisRequest:\n      type: object\n      properties: {}\n    __listOfApi:\n      type: array\n      items:\n        $ref: \"#/components/schemas/Api\"\n    GetAuthorizerRequest:\n      type: object\n      properties: {}\n    GetAuthorizersRequest:\n      type: object\n      properties: {}\n    __listOfAuthorizer:\n      type: array\n      items:\n        $ref: \"#/components/schemas/Authorizer\"\n    GetDeploymentRequest:\n      type: object\n      properties: {}\n    GetDeploymentsRequest:\n      type: object\n      properties: {}\n    __listOfDeployment:\n      type: array\n      items:\n        $ref: \"#/components/schemas/Deployment\"\n    GetDomainNameRequest:\n      type: object\n      properties: {}\n    GetDomainNamesRequest:\n      type: object\n      properties: {}\n    __listOfDomainName:\n      type: array\n      items:\n        $ref: \"#/components/schemas/DomainName\"\n    GetIntegrationRequest:\n      type: object\n      properties: {}\n    GetIntegrationResponseRequest:\n      type: object\n      properties: {}\n    GetIntegrationResponsesRequest:\n      type: object\n      properties: {}\n    __listOfIntegrationResponse:\n      type: array\n      items:\n        $ref: \"#/components/schemas/IntegrationResponse\"\n    GetIntegrationsRequest:\n      type: object\n      properties: {}\n    __listOfIntegration:\n      type: array\n      items:\n        $ref: \"#/components/schemas/Integration\"\n    GetModelRequest:\n      type: object\n      properties: {}\n    GetModelTemplateRequest:\n      type: object\n      properties: {}\n    GetModelsRequest:\n      type: object\n      properties: {}\n    __listOfModel:\n      type: array\n      items:\n        $ref: \"#/components/schemas/Model\"\n    GetRouteRequest:\n      type: object\n      properties: {}\n    GetRouteResponseRequest:\n      type: object\n      properties: {}\n    GetRouteResponsesRequest:\n      type: object\n      properties: {}\n    __listOfRouteResponse:\n      type: array\n      items:\n        $ref: \"#/components/schemas/RouteResponse\"\n    GetRoutesRequest:\n      type: object\n      properties: {}\n    __listOfRoute:\n      type: array\n      items:\n        $ref: \"#/components/schemas/Route\"\n    GetStageRequest:\n      type: object\n      properties: {}\n    GetStagesRequest:\n      type: object\n      properties: {}\n    __listOfStage:\n      type: array\n      items:\n        $ref: \"#/components/schemas/Stage\"\n    Integration:\n      type: object\n      properties:\n        ConnectionId:\n          $ref: \"#/components/schemas/StringWithLengthBetween1And1024\"\n        ConnectionType:\n          $ref: \"#/components/schemas/ConnectionType\"\n        ContentHandlingStrategy:\n          $ref: \"#/components/schemas/ContentHandlingStrategy\"\n        CredentialsArn:\n          $ref: \"#/components/schemas/Arn\"\n        Description:\n          $ref: \"#/components/schemas/StringWithLengthBetween0And1024\"\n        IntegrationId:\n          $ref: \"#/components/schemas/Id\"\n        IntegrationMethod:\n          $ref: \"#/components/schemas/StringWithLengthBetween1And64\"\n        IntegrationResponseSelectionExpression:\n          $ref: \"#/components/schemas/SelectionExpression\"\n        IntegrationType:\n          $ref: \"#/components/schemas/IntegrationType\"\n        IntegrationUri:\n          $ref: \"#/components/schemas/UriWithLengthBetween1And2048\"\n        PassthroughBehavior:\n          $ref: \"#/components/schemas/PassthroughBehavior\"\n        RequestParameters:\n          $ref: \"#/components/schemas/IntegrationParameters\"\n        RequestTemplates:\n          $ref: \"#/components/schemas/TemplateMap\"\n        TemplateSelectionExpression:\n          $ref: \"#/components/schemas/SelectionExpression\"\n        TimeoutInMillis:\n          $ref: \"#/components/schemas/IntegerWithLengthBetween50And29000\"\n      description: Represents an integration.\n    IntegrationResponse:\n      type: object\n      required:\n        - IntegrationResponseKey\n      properties:\n        ContentHandlingStrategy:\n          $ref: \"#/components/schemas/ContentHandlingStrategy\"\n        IntegrationResponseId:\n          $ref: \"#/components/schemas/Id\"\n        IntegrationResponseKey:\n          $ref: \"#/components/schemas/SelectionKey\"\n        ResponseParameters:\n          $ref: \"#/components/schemas/IntegrationParameters\"\n        ResponseTemplates:\n          $ref: \"#/components/schemas/TemplateMap\"\n        TemplateSelectionExpression:\n          $ref: \"#/components/schemas/SelectionExpression\"\n      description: Represents an integration response.\n    GetTagsRequest:\n      type: object\n      properties: {}\n    __mapOf__string:\n      type: object\n      additionalProperties:\n        $ref: \"#/components/schemas/__string\"\n    Model:\n      type: object\n      required:\n        - Name\n      properties:\n        ContentType:\n          $ref: \"#/components/schemas/StringWithLengthBetween1And256\"\n        Description:\n          $ref: \"#/components/schemas/StringWithLengthBetween0And1024\"\n        ModelId:\n          $ref: \"#/components/schemas/Id\"\n        Name:\n          $ref: \"#/components/schemas/StringWithLengthBetween1And128\"\n        Schema:\n          $ref: \"#/components/schemas/StringWithLengthBetween0And32K\"\n      description: \u003e-\n        Represents a data model for an API. See \u003ca\n        href=\"https://docs.aws.amazon.com/apigateway/latest/developerguide/models-mappings.html\"\u003eCreate\n        Models and Mapping Templates for Request and Response\n         Mappings\u003c/a\u003e.\n    Route:\n      type: object\n      required:\n        - RouteKey\n      properties:\n        ApiKeyRequired:\n          $ref: \"#/components/schemas/__boolean\"\n        AuthorizationScopes:\n          $ref: \"#/components/schemas/AuthorizationScopes\"\n        AuthorizationType:\n          $ref: \"#/components/schemas/AuthorizationType\"\n        AuthorizerId:\n          $ref: \"#/components/schemas/Id\"\n        ModelSelectionExpression:\n          $ref: \"#/components/schemas/SelectionExpression\"\n        OperationName:\n          $ref: \"#/components/schemas/StringWithLengthBetween1And64\"\n        RequestModels:\n          $ref: \"#/components/schemas/RouteModels\"\n        RequestParameters:\n          $ref: \"#/components/schemas/RouteParameters\"\n        RouteId:\n          $ref: \"#/components/schemas/Id\"\n        RouteKey:\n          $ref: \"#/components/schemas/SelectionKey\"\n        RouteResponseSelectionExpression:\n          $ref: \"#/components/schemas/SelectionExpression\"\n        Target:\n          $ref: \"#/components/schemas/StringWithLengthBetween1And128\"\n      description: Represents a route.\n    RouteResponse:\n      type: object\n      required:\n        - RouteResponseKey\n      properties:\n        ModelSelectionExpression:\n          $ref: \"#/components/schemas/SelectionExpression\"\n        ResponseModels:\n          $ref: \"#/components/schemas/RouteModels\"\n        ResponseParameters:\n          $ref: \"#/components/schemas/RouteParameters\"\n        RouteResponseId:\n          $ref: \"#/components/schemas/Id\"\n        RouteResponseKey:\n          $ref: \"#/components/schemas/SelectionKey\"\n      description: Represents a route response.\n    Stage:\n      type: object\n      required:\n        - StageName\n      properties:\n        AccessLogSettings:\n          $ref: \"#/components/schemas/AccessLogSettings\"\n        ClientCertificateId:\n          $ref: \"#/components/schemas/Id\"\n        CreatedDate:\n          $ref: \"#/components/schemas/__timestampIso8601\"\n        DefaultRouteSettings:\n          $ref: \"#/components/schemas/RouteSettings\"\n        DeploymentId:\n          $ref: \"#/components/schemas/Id\"\n        Description:\n          $ref: \"#/components/schemas/StringWithLengthBetween0And1024\"\n        LastUpdatedDate:\n          $ref: \"#/components/schemas/__timestampIso8601\"\n        RouteSettings:\n          $ref: \"#/components/schemas/RouteSettingsMap\"\n        StageName:\n          $ref: \"#/components/schemas/StringWithLengthBetween1And128\"\n        StageVariables:\n          $ref: \"#/components/schemas/StageVariablesMap\"\n        Tags:\n          $ref: \"#/components/schemas/Tags\"\n      description: Represents an API stage.\n    TagResourceRequest:\n      type: object\n      properties:\n        Tags:\n          $ref: \"#/components/schemas/Tags\"\n    UntagResourceRequest:\n      type: object\n      properties: {}\n    UpdateApiMappingRequest:\n      type: object\n      required:\n        - ApiId\n      properties:\n        ApiId:\n          $ref: \"#/components/schemas/Id\"\n        ApiMappingKey:\n          $ref: \"#/components/schemas/SelectionKey\"\n        Stage:\n          $ref: \"#/components/schemas/StringWithLengthBetween1And128\"\n    UpdateApiRequest:\n      type: object\n      properties:\n        ApiKeySelectionExpression:\n          $ref: \"#/components/schemas/SelectionExpression\"\n        Description:\n          $ref: \"#/components/schemas/StringWithLengthBetween0And1024\"\n        DisableSchemaValidation:\n          $ref: \"#/components/schemas/__boolean\"\n        Name:\n          $ref: \"#/components/schemas/StringWithLengthBetween1And128\"\n        RouteSelectionExpression:\n          $ref: \"#/components/schemas/SelectionExpression\"\n        Version:\n          $ref: \"#/components/schemas/StringWithLengthBetween1And64\"\n    UpdateAuthorizerRequest:\n      type: object\n      properties:\n        AuthorizerCredentialsArn:\n          $ref: \"#/components/schemas/Arn\"\n        AuthorizerResultTtlInSeconds:\n          $ref: \"#/components/schemas/IntegerWithLengthBetween0And3600\"\n        AuthorizerType:\n          $ref: \"#/components/schemas/AuthorizerType\"\n        AuthorizerUri:\n          $ref: \"#/components/schemas/UriWithLengthBetween1And2048\"\n        IdentitySource:\n          $ref: \"#/components/schemas/IdentitySourceList\"\n        IdentityValidationExpression:\n          $ref: \"#/components/schemas/StringWithLengthBetween0And1024\"\n        Name:\n          $ref: \"#/components/schemas/StringWithLengthBetween1And128\"\n        ProviderArns:\n          $ref: \"#/components/schemas/ProviderArnList\"\n    UpdateDeploymentRequest:\n      type: object\n      properties:\n        Description:\n          $ref: \"#/components/schemas/StringWithLengthBetween0And1024\"\n    UpdateDomainNameRequest:\n      type: object\n      properties:\n        DomainNameConfigurations:\n          $ref: \"#/components/schemas/DomainNameConfigurations\"\n    UpdateIntegrationRequest:\n      type: object\n      properties:\n        ConnectionId:\n          $ref: \"#/components/schemas/StringWithLengthBetween1And1024\"\n        ConnectionType:\n          $ref: \"#/components/schemas/ConnectionType\"\n        ContentHandlingStrategy:\n          $ref: \"#/components/schemas/ContentHandlingStrategy\"\n        CredentialsArn:\n          $ref: \"#/components/schemas/Arn\"\n        Description:\n          $ref: \"#/components/schemas/StringWithLengthBetween0And1024\"\n        IntegrationMethod:\n          $ref: \"#/components/schemas/StringWithLengthBetween1And64\"\n        IntegrationType:\n          $ref: \"#/components/schemas/IntegrationType\"\n        IntegrationUri:\n          $ref: \"#/components/schemas/UriWithLengthBetween1And2048\"\n        PassthroughBehavior:\n          $ref: \"#/components/schemas/PassthroughBehavior\"\n        RequestParameters:\n          $ref: \"#/components/schemas/IntegrationParameters\"\n        RequestTemplates:\n          $ref: \"#/components/schemas/TemplateMap\"\n        TemplateSelectionExpression:\n          $ref: \"#/components/schemas/SelectionExpression\"\n        TimeoutInMillis:\n          $ref: \"#/components/schemas/IntegerWithLengthBetween50And29000\"\n    UpdateIntegrationResponseRequest:\n      type: object\n      properties:\n        ContentHandlingStrategy:\n          $ref: \"#/components/schemas/ContentHandlingStrategy\"\n        IntegrationResponseKey:\n          $ref: \"#/components/schemas/SelectionKey\"\n        ResponseParameters:\n          $ref: \"#/components/schemas/IntegrationParameters\"\n        ResponseTemplates:\n          $ref: \"#/components/schemas/TemplateMap\"\n        TemplateSelectionExpression:\n          $ref: \"#/components/schemas/SelectionExpression\"\n    UpdateModelRequest:\n      type: object\n      properties:\n        ContentType:\n          $ref: \"#/components/schemas/StringWithLengthBetween1And256\"\n        Description:\n          $ref: \"#/components/schemas/StringWithLengthBetween0And1024\"\n        Name:\n          $ref: \"#/components/schemas/StringWithLengthBetween1And128\"\n        Schema:\n          $ref: \"#/components/schemas/StringWithLengthBetween0And32K\"\n    UpdateRouteRequest:\n      type: object\n      properties:\n        ApiKeyRequired:\n          $ref: \"#/components/schemas/__boolean\"\n        AuthorizationScopes:\n          $ref: \"#/components/schemas/AuthorizationScopes\"\n        AuthorizationType:\n          $ref: \"#/components/schemas/AuthorizationType\"\n        AuthorizerId:\n          $ref: \"#/components/schemas/Id\"\n        ModelSelectionExpression:\n          $ref: \"#/components/schemas/SelectionExpression\"\n        OperationName:\n          $ref: \"#/components/schemas/StringWithLengthBetween1And64\"\n        RequestModels:\n          $ref: \"#/components/schemas/RouteModels\"\n        RequestParameters:\n          $ref: \"#/components/schemas/RouteParameters\"\n        RouteKey:\n          $ref: \"#/components/schemas/SelectionKey\"\n        RouteResponseSelectionExpression:\n          $ref: \"#/components/schemas/SelectionExpression\"\n        Target:\n          $ref: \"#/components/schemas/StringWithLengthBetween1And128\"\n    UpdateRouteResponseRequest:\n      type: object\n      properties:\n        ModelSelectionExpression:\n          $ref: \"#/components/schemas/SelectionExpression\"\n        ResponseModels:\n          $ref: \"#/components/schemas/RouteModels\"\n        ResponseParameters:\n          $ref: \"#/components/schemas/RouteParameters\"\n        RouteResponseKey:\n          $ref: \"#/components/schemas/SelectionKey\"\n    UpdateStageRequest:\n      type: object\n      properties:\n        AccessLogSettings:\n          $ref: \"#/components/schemas/AccessLogSettings\"\n        ClientCertificateId:\n          $ref: \"#/components/schemas/Id\"\n        DefaultRouteSettings:\n          $ref: \"#/components/schemas/RouteSettings\"\n        DeploymentId:\n          $ref: \"#/components/schemas/Id\"\n        Description:\n          $ref: \"#/components/schemas/StringWithLengthBetween0And1024\"\n        RouteSettings:\n          $ref: \"#/components/schemas/RouteSettingsMap\"\n        StageVariables:\n          $ref: \"#/components/schemas/StageVariablesMap\"\n"
		}
	},
	"Error": "parse: parse spec: parse operations: paths: /v2/tags/{resource-arn}#tagKeys: delete: operation \"UntagResource\": parse path \"/v2/tags/{resource-arn}#tagKeys\": path MUST NOT contain a fragment"
}