{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/sunabak0/realworld-kotlin-springboot-jdbc"
		},
		"file": {
			"name": "openapi.yml",
			"size": 0,
			"path": "e2e/openapi.yml",
			"byteSize": 37429,
			"content": "#\n# Original\n# https://github.com/gothinkster/realworld/blob/main/api/openapi.yml\n#\n\n#\n# OpenAPI Object: openapi\n#\n# 型\n# - string\n# 必須？\n# - Yes\n# URL\n# - https://spec.openapis.org/oas/v3.0.1#openapi-object\n#\nopenapi: 3.0.1\n\n#\n# OpenAPI Object: info\n#\n# 型\n# - InfoObject\n# 必須？\n# - Yes\n# URL\n# - https://spec.openapis.org/oas/v3.0.1#openapi-object\n# 概要\n# - APIに関するメタデータ\n# InfoObjectの詳細\n# - https://spec.openapis.org/oas/v3.0.1#info-object\n#\ninfo:\n  title: Conduit API\n  description: Conduit API\n  contact:\n    name: RealWorld\n    url: https://realworld.io\n  license:\n    name: MIT License\n    url: https://opensource.org/licenses/MIT\n  version: 1.0.0\n\n#\n# OpenAPI Object: servers\n#\n# 型\n# - [Server Object]\n# 必須？\n# - No\n# URL\n# - https://spec.openapis.org/oas/v3.0.1#openapi-object\n# 概要\n# - ターゲットサーバへの接続情報を提供するServer Objectの配列\n# Server Objectの詳細\n# - https://spec.openapis.org/oas/v3.0.1#server-object\n#\nservers:\n  - url: /api\n\n#\n# OpenAPI Object: paths\n#\n# 型\n# - Paths Object\n# 必須？\n# - Yes\n# URL\n# - https://spec.openapis.org/oas/v3.0.1#openapi-object\n# 概要\n# - 利用可能なパスと操作内容\n# Paths Objectの詳細\n# - https://spec.openapis.org/oas/v3.0.1#paths-object\n#\npaths:\n\n  #\n  # Paths Object\n  #\n  # 概要\n  # - 1つのパスで利用可能な操作\n  # - 空でもよい\n  # - どんなURLがあるかの公開はされる\n  /users/login:\n    #\n    # Paths Object: get/put/post/delete/options/head/patch/trace\n    #\n    post:\n\n      #\n      # Paths Object: tags\n      #\n      # 型\n      # - [string]\n      # 必須？\n      # - No\n      # URL\n      # - https://spec.openapis.org/oas/v3.0.1#operation-object\n      # 概要\n      # - APIドキュメントのグループ化・フィルタ等の制御のためのタグリスト\n      #\n      tags:\n        - User and Authentication\n\n      #\n      # Paths Object: summary\n      #\n      # 型\n      # - string\n      # 必須？\n      # - No\n      # URL\n      # - https://spec.openapis.org/oas/v3.0.1#operation-object\n      # 概要\n      # - 操作の内容のサマリー\n      #\n      summary: Existing user login\n\n      #\n      # Paths Object: description\n      #\n      # 型\n      # - string\n      # 必須？\n      # - No\n      # URL\n      # - https://spec.openapis.org/oas/v3.0.1#operation-object\n      # 概要\n      # - 説明(CommonMark形式が使える)\n      # - CommonMarkは、Markdownの仕様が決まってない人たちが作った軽量マークアップ言語\n      #\n      description: Login for existing user\n\n      #\n      # Paths Object: operationId\n      #\n      # 型\n      # - string\n      # 必須？\n      # - No\n      # URL\n      # - https://spec.openapis.org/oas/v3.0.1#operation-object\n      # 概要\n      # - 操作の識別子(ユニークな文字列)\n      # - CommonMarkは、Markdownの仕様が決まってない人たちが作った軽量マークアップ言語\n      #\n      operationId: Login\n\n      #\n      # Paths Object: requestBody\n      #\n      # 型\n      # - Request Body Object\n      # - or Reference Object\n      # 必須？\n      # - No\n      # URL\n      # - https://spec.openapis.org/oas/v3.0.1#operation-object\n      # 概要\n      # - 操作のリクエストボディ\n      # - CommonMarkは、Markdownの仕様が決まってない人たちが作った軽量マークアップ言語\n      # Request Body Objectの詳細\n      # - https://spec.openapis.org/oas/v3.0.1#request-body-object\n      # Reference Objectの詳細\n      # - https://spec.openapis.org/oas/v3.0.1#reference-object\n      # 見分け方\n      # - Topのkeyに \"content\" があるとRequest Body Object\n      # - Topのkeyに \"$ref\" があるとReference Object\n      #\n      requestBody:\n        description: Credentials to use\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/LoginUserRequest'\n        required: true\n\n      #\n      # Paths Object: responses\n      #\n      # 型\n      # - Responses Object\n      # 必須？\n      # - Yes\n      # URL\n      # - https://spec.openapis.org/oas/v3.0.1#operation-object\n      # 概要\n      # - この操作に返される可能性があるレスポンスのリスト\n      # Responses Objectの詳細\n      # - https://spec.openapis.org/oas/v3.0.1#responses-object\n      #\n      responses:\n        200:\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/UserResponse'\n        401:\n          description: Unauthorized\n          content: {}\n        422:\n          description: Unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GenericErrorModel'\n\n      #\n      # Paths Object: x-codegen-request-body-name\n      #\n      # Referenceには無い\n      # 値を変更してもSwagger UIには出てこない\n      #\n      # \u003e この操作に x-codegen-request-body-name フィールドが定義されている場合、その値が入力の名前になります。 それ以外の場合、その名前は body になります。\n      # 参考\n      # - https://www.ibm.com/docs/ja/baw/20.x?topic=service-invoking-rest#taskd80585e327\n      #\n      x-codegen-request-body-name: body\n  /users:\n    post:\n      tags:\n        - User and Authentication\n      summary: Register a new user\n      description: Register a new user\n      operationId: CreateUser\n      requestBody:\n        description: Details of the new user to register\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/NewUserRequest'\n        required: true\n      responses:\n        201:\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/UserResponse'\n        422:\n          description: Unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GenericErrorModel'\n      x-codegen-request-body-name: body\n  /user:\n    get:\n      tags:\n        - User and Authentication\n      summary: Get current user\n      description: Gets the currently logged-in user\n      operationId: GetCurrentUser\n      #\n      # Operation Object: parameters\n      #\n      # 型\n      # - Parameter Object\n      # - or Reference Object\n      # URL\n      # - https://spec.openapis.org/oas/v3.0.1#operation-object\n      # 概要\n      # - パラメータのリスト\n      # Parameter Objectの詳細\n      # - https://spec.openapis.org/oas/v3.0.1#parameter-object\n      #\n      # 自前追加\n      #\n      parameters:\n        - name: Authorization\n          in: header\n          description: セッション用JWT\n          required: true\n          schema:\n            $ref: '#/components/securitySchemes/Token'\n      responses:\n        200:\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/UserResponse'\n        401:\n          description: Unauthorized\n          content: {}\n        422:\n          description: Unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GenericErrorModel'\n      security:\n        - Token: []\n    put:\n      tags:\n        - User and Authentication\n      summary: Update current user\n      description: Updated user information for current user\n      operationId: UpdateCurrentUser\n      #\n      # 自前追加(TODO: 共通化できたらしたい)\n      #\n      parameters:\n        - name: Authorization\n          in: header\n          description: セッション用JWT\n          required: true\n          schema:\n            $ref: '#/components/securitySchemes/Token'\n      requestBody:\n        description: User details to update. At least **one** field is required.\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/UpdateUserRequest'\n        required: true\n      responses:\n        200:\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/UserResponse'\n        401:\n          description: Unauthorized\n          content: {}\n        422:\n          description: Unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GenericErrorModel'\n      security:\n        - Token: []\n      x-codegen-request-body-name: body\n  /profiles/{username}:\n    get:\n      tags:\n        - Profile\n      summary: Get a profile\n      description: Get a profile of a user of the system. Auth is optional\n      operationId: GetProfileByUsername\n      parameters:\n        - name: Authorization\n          in: header\n          description: セッション用JWT\n          required: false\n          schema:\n            $ref: '#/components/securitySchemes/Token'\n        - name: username\n          in: path\n          description: Username of the profile to get\n          required: true\n          schema:\n            type: string\n      responses:\n        200:\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ProfileResponse'\n        401:\n          description: Unauthorized\n          content: {}\n        422:\n          description: Unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GenericErrorModel'\n  /profiles/{username}/follow:\n    post:\n      tags:\n        - Profile\n      summary: Follow a user\n      description: Follow a user by username\n      operationId: FollowUserByUsername\n      parameters:\n        # 自前追加\n        - name: Authorization\n          in: header\n          description: セッション用JWT\n          required: true\n          schema:\n            $ref: '#/components/securitySchemes/Token'\n        - name: username\n          in: path\n          description: Username of the profile you want to follow\n          required: true\n          schema:\n            type: string\n      responses:\n        200:\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ProfileResponse'\n        401:\n          description: Unauthorized\n          content: {}\n        422:\n          description: Unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GenericErrorModel'\n      security:\n        - Token: []\n    delete:\n      tags:\n        - Profile\n      summary: Unfollow a user\n      description: Unfollow a user by username\n      operationId: UnfollowUserByUsername\n      parameters:\n        # 自前追加\n        - name: Authorization\n          in: header\n          description: セッション用JWT\n          required: true\n          schema:\n            $ref: '#/components/securitySchemes/Token'\n        - name: username\n          in: path\n          description: Username of the profile you want to unfollow\n          required: true\n          schema:\n            type: string\n      responses:\n        200:\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ProfileResponse'\n        401:\n          description: Unauthorized\n          content: {}\n        422:\n          description: Unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GenericErrorModel'\n      security:\n        - Token: []\n  /articles/feed:\n    get:\n      tags:\n        - Articles\n      summary: Get recent articles from users you follow\n      description: Get most recent articles from users you follow. Use query parameters\n        to limit. Auth is required\n      operationId: GetArticlesFeed\n      parameters:\n        # 自前追加\n        - name: Authorization\n          in: header\n          description: セッション用JWT\n          required: true\n          schema:\n            $ref: '#/components/securitySchemes/Token'\n        - name: limit\n          in: query\n          description: Limit number of articles returned (default is 20)\n          schema:\n            type: integer\n            default: 20\n        - name: offset\n          in: query\n          description: Offset/skip number of articles (default is 0)\n          schema:\n            type: integer\n            default: 0\n      responses:\n        200:\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/MultipleArticlesResponse'\n        401:\n          description: Unauthorized\n          content: {}\n        422:\n          description: Unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GenericErrorModel'\n      security:\n        - Token: []\n  /articles:\n    get:\n      tags:\n        - Articles\n      summary: Get recent articles globally\n      description: Get most recent articles globally. Use query parameters to filter\n        results. Auth is optional\n      operationId: GetArticles\n      parameters:\n        #\n        # 自前追加\n        #\n        - name: Authorization\n          in: header\n          description: セッション用JWT\n          required: false\n          schema:\n            $ref: '#/components/securitySchemes/Token'\n        - name: tag\n          in: query\n          description: Filter by tag\n          schema:\n            type: string\n        - name: author\n          in: query\n          description: Filter by author (username)\n          schema:\n            type: string\n        - name: favorited\n          in: query\n          description: Filter by favorites of a user (username)\n          schema:\n            type: string\n        - name: limit\n          in: query\n          description: Limit number of articles returned (default is 20)\n          schema:\n            type: integer\n            default: 20\n        - name: offset\n          in: query\n          description: Offset/skip number of articles (default is 0)\n          schema:\n            type: integer\n            default: 0\n      responses:\n        200:\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/MultipleArticlesResponse'\n        401:\n          description: Unauthorized\n          content: {}\n        422:\n          description: Unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GenericErrorModel'\n    post:\n      tags:\n        - Articles\n      summary: Create an article\n      description: Create an article. Auth is required\n      operationId: CreateArticle\n      # 自前追加\n      parameters:\n        - name: Authorization\n          in: header\n          description: セッション用JWT\n          required: true\n          schema:\n            $ref: '#/components/securitySchemes/Token'\n      requestBody:\n        description: Article to create\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/NewArticleRequest'\n        required: true\n      responses:\n        201:\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/SingleArticleResponse'\n        401:\n          description: Unauthorized\n          content: {}\n        422:\n          description: Unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GenericErrorModel'\n      security:\n        - Token: []\n      x-codegen-request-body-name: article\n  /articles/{slug}:\n    get:\n      tags:\n        - Articles\n      summary: Get an article\n      description: Get an article. Auth not required\n      operationId: GetArticle\n      parameters:\n        #\n        # 自前追加\n        #\n        - name: Authorization\n          in: header\n          description: セッション用JWT\n          required: false\n          schema:\n            $ref: '#/components/securitySchemes/Token'\n        - name: slug\n          in: path\n          description: Slug of the article to get\n          required: true\n          schema:\n            type: string\n      responses:\n        200:\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/SingleArticleResponse'\n        422:\n          description: Unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GenericErrorModel'\n    put:\n      tags:\n        - Articles\n      summary: Update an article\n      description: Update an article. Auth is required\n      operationId: UpdateArticle\n      parameters:\n        # 自前追加\n        - name: Authorization\n          in: header\n          description: セッション用JWT\n          required: true\n          schema:\n            $ref: '#/components/securitySchemes/Token'\n        - name: slug\n          in: path\n          description: Slug of the article to update\n          required: true\n          schema:\n            type: string\n      requestBody:\n        description: Article to update\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/UpdateArticleRequest'\n        required: true\n      responses:\n        200:\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/SingleArticleResponse'\n        401:\n          description: Unauthorized\n          content: {}\n        422:\n          description: Unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GenericErrorModel'\n      security:\n        - Token: []\n      x-codegen-request-body-name: article\n    delete:\n      tags:\n        - Articles\n      summary: Delete an article\n      description: Delete an article. Auth is required\n      operationId: DeleteArticle\n      parameters:\n        # 自前追加\n        - name: Authorization\n          in: header\n          description: セッション用JWT\n          required: true\n          schema:\n            $ref: '#/components/securitySchemes/Token'\n        - name: slug\n          in: path\n          description: Slug of the article to delete\n          required: true\n          schema:\n            type: string\n      responses:\n        200:\n          description: OK\n          content: {}\n        401:\n          description: Unauthorized\n          content: {}\n        422:\n          description: Unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GenericErrorModel'\n      security:\n        - Token: []\n  /articles/{slug}/comments:\n    get:\n      tags:\n        - Comments\n      summary: Get comments for an article\n      description: Get the comments for an article. Auth is optional\n      operationId: GetArticleComments\n      parameters:\n        # 自前追加\n        - name: Authorization\n          in: header\n          description: セッション用JWT\n          required: false\n          schema:\n            $ref: '#/components/securitySchemes/Token'\n        - name: slug\n          in: path\n          description: Slug of the article that you want to get comments for\n          required: true\n          schema:\n            type: string\n      responses:\n        200:\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/MultipleCommentsResponse'\n        401:\n          description: Unauthorized\n          content: {}\n        422:\n          description: Unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GenericErrorModel'\n    post:\n      tags:\n        - Comments\n      summary: Create a comment for an article\n      description: Create a comment for an article. Auth is required\n      operationId: CreateArticleComment\n      parameters:\n        # 自前追加\n        - name: Authorization\n          in: header\n          description: セッション用JWT\n          required: true\n          schema:\n            $ref: '#/components/securitySchemes/Token'\n        - name: slug\n          in: path\n          description: Slug of the article that you want to create a comment for\n          required: true\n          schema:\n            type: string\n      requestBody:\n        description: Comment you want to create\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/NewCommentRequest'\n        required: true\n      responses:\n        200:\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/SingleCommentResponse'\n        401:\n          description: Unauthorized\n          content: {}\n        422:\n          description: Unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GenericErrorModel'\n      security:\n        - Token: []\n      x-codegen-request-body-name: comment\n  /articles/{slug}/comments/{id}:\n    delete:\n      tags:\n        - Comments\n      summary: Delete a comment for an article\n      description: Delete a comment for an article. Auth is required\n      operationId: DeleteArticleComment\n      parameters:\n        # 自前追加\n        - name: Authorization\n          in: header\n          description: セッション用JWT\n          required: true\n          schema:\n            $ref: '#/components/securitySchemes/Token'\n        - name: slug\n          in: path\n          description: Slug of the article that you want to delete a comment for\n          required: true\n          schema:\n            type: string\n        - name: id\n          in: path\n          description: ID of the comment you want to delete\n          required: true\n          schema:\n            type: integer\n      responses:\n        200:\n          description: OK\n          content: {}\n        401:\n          description: Unauthorized\n          content: {}\n        422:\n          description: Unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GenericErrorModel'\n      security:\n        - Token: []\n  /articles/{slug}/favorite:\n    post:\n      tags:\n        - Favorites\n      summary: Favorite an article\n      description: Favorite an article. Auth is required\n      operationId: CreateArticleFavorite\n      parameters:\n        # 自前追加\n        - name: Authorization\n          in: header\n          description: セッション用JWT\n          required: true\n          schema:\n            $ref: '#/components/securitySchemes/Token'\n        - name: slug\n          in: path\n          description: Slug of the article that you want to favorite\n          required: true\n          schema:\n            type: string\n      responses:\n        200:\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/SingleArticleResponse'\n        401:\n          description: Unauthorized\n          content: {}\n        422:\n          description: Unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GenericErrorModel'\n      security:\n        - Token: []\n    delete:\n      tags:\n        - Favorites\n      summary: Unfavorite an article\n      description: Unfavorite an article. Auth is required\n      operationId: DeleteArticleFavorite\n      parameters:\n        # 自前追加\n        - name: Authorization\n          in: header\n          description: セッション用JWT\n          required: true\n          schema:\n            $ref: '#/components/securitySchemes/Token'\n        - name: slug\n          in: path\n          description: Slug of the article that you want to unfavorite\n          required: true\n          schema:\n            type: string\n      responses:\n        200:\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/SingleArticleResponse'\n        401:\n          description: Unauthorized\n          content: {}\n        422:\n          description: Unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GenericErrorModel'\n      security:\n        - Token: []\n  /tags:\n    get:\n      summary: Get tags\n      description: Get tags. Auth not required\n      responses:\n        200:\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/TagsResponse'\n        422:\n          description: Unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GenericErrorModel'\n\n#\n# OpenAPI Object: components\n#\n# 型\n# - Components Object\n# 必須？\n# - No\n# URL\n# - https://spec.openapis.org/oas/v3.0.1#openapi-object\n# 概要\n# - スキーマに関する共通化するための要素\n# Components Objectの詳細\n# - https://spec.openapis.org/oas/v3.0.1#components-object\n#\ncomponents:\n\n  #\n  # Components Object: schemas\n  #\n  # 型\n  # - Map[string, Schema Object or Reference Object]\n  #   - Key\n  #     - String\n  #   - Value\n  #     - Schema Object\n  #     - or Reference Object\n  # 必須？\n  # - No\n  # URL\n  # - https://spec.openapis.org/oas/v3.0.1#openapi-object\n  # 概要\n  # - スキーマに関する共通化するための要素\n  # Schema Objectの詳細\n  # - https://spec.openapis.org/oas/v3.0.1#schema-object\n  # Reference Objectの詳細\n  # - https://spec.openapis.org/oas/v3.0.1#reference-object\n  #\n  schemas:\n\n    #\n    # Schema Object\n    #\n    # 入出力データ型の定義で利用\n    # JSON Schemaの拡張サブセット\n    # 基本はJSON Schema に準じる\n    #\n    LoginUser:\n\n      #\n      # (From JSON Schema Validation)\n      # Schema Object: required\n      #\n      # 型\n      # - [string]\n      # 必須？\n      # - No\n      # URL\n      # - https://json-schema.org/draft/2020-12/json-schema-validation.html#name-required\n      #   - (ドラフト版-期限: 18 December 2022)\n      # 概要\n      # - 省略したら空配列\n      # - 要素はユニークである必要がある\n      #\n      required:\n        - email\n        - password\n\n      #\n      # (JSON Schema ValidationのものをOpenAPI用にカスタマイズ)\n      # Schema Object: type\n      #\n      # 型\n      # - string\n      #   - \"null\"\n      #   - or \"boolean\"\n      #   - or \"object\"\n      #   - or \"array\" (複数の型はサポートしていない)\n      #   - or \"number\"\n      #   - or \"string\"\n      # - 小数部が0である任意の数値であるinteger(OpenAPIではサポートなし)\n      # 必須？\n      # - Yes\n      # URL\n      # - https://json-schema.org/draft/2020-12/json-schema-validation.html#name-type\n      #   - JSON Schema Validation\n      #   - (ドラフト版-期限: 18 December 2022)\n      # - https://spec.openapis.org/oas/v3.0.1#schema-object\n      #   - OpenAPI\n      # 概要\n      # - インスタンスの型と一致してればOK\n      #   - ほとんどのケースで \"object\" が選択されそう\n      #\n      type: object\n\n      #\n      # (From JSON Schema Core)\n      # Schema Object: properties\n      #\n      # 型\n      # - object\n      # 必須？\n      # - 謎(多分No)\n      # URL\n      # - https://json-schema.org/draft/2020-12/json-schema-core.html#section-10.3.2.1\n      #   - JSON Schema Core\n      #   - (ドラフト版-期限: 18 December 2022)\n      # - https://spec.openapis.org/oas/v3.0.1#schema-object\n      #   - OpenAPI\n      # 概要\n      # - プロパティ\n      # - 有効なJSON Schemaである必要がある\n      # - 省略すると、空のオブジェクト\n      #\n      properties:\n        email:\n          type: string\n        password:\n          type: string\n          format: password\n\n    LoginUserRequest:\n      required:\n        - user\n      type: object\n      properties:\n        user:\n          $ref: '#/components/schemas/LoginUser'\n    NewUser:\n      required:\n        - email\n        - password\n        - username\n      type: object\n      properties:\n        username:\n          type: string\n        email:\n          type: string\n        password:\n          type: string\n          format: password\n    NewUserRequest:\n      required:\n        - user\n      type: object\n      properties:\n        user:\n          $ref: '#/components/schemas/NewUser'\n    User:\n      required:\n        - bio\n        - email\n        - image\n        - token\n        - username\n      type: object\n      properties:\n        email:\n          type: string\n        token:\n          type: string\n        username:\n          type: string\n        bio:\n          type: string\n        image:\n          type: string\n    UserResponse:\n      required:\n        - user\n      type: object\n      properties:\n        user:\n          $ref: '#/components/schemas/User'\n    UpdateUser:\n      type: object\n      properties:\n        email:\n          type: string\n        token:\n          type: string\n        username:\n          type: string\n        bio:\n          type: string\n        image:\n          type: string\n    UpdateUserRequest:\n      required:\n        - user\n      type: object\n      properties:\n        user:\n          $ref: '#/components/schemas/UpdateUser'\n    ProfileResponse:\n      required:\n        - profile\n      type: object\n      properties:\n        profile:\n          $ref: '#/components/schemas/Profile'\n    Profile:\n      required:\n        - bio\n        - following\n        - image\n        - username\n      type: object\n      properties:\n        username:\n          type: string\n        bio:\n          type: string\n        image:\n          type: string\n        following:\n          type: boolean\n    Article:\n      required:\n        - author\n        - body\n        - createdAt\n        - description\n        - favorited\n        - favoritesCount\n        - slug\n        - tagList\n        - title\n        - updatedAt\n      type: object\n      properties:\n        slug:\n          type: string\n        title:\n          type: string\n        description:\n          type: string\n        body:\n          type: string\n        tagList:\n          type: array\n          items:\n            type: string\n        createdAt:\n          type: string\n          format: date-time\n        updatedAt:\n          type: string\n          format: date-time\n        favorited:\n          type: boolean\n        favoritesCount:\n          type: integer\n        author:\n          $ref: '#/components/schemas/Profile'\n    SingleArticleResponse:\n      required:\n        - article\n      type: object\n      properties:\n        article:\n          $ref: '#/components/schemas/Article'\n    MultipleArticlesResponse:\n      required:\n        - articles\n        - articlesCount\n      type: object\n      properties:\n        articles:\n          type: array\n          items:\n            $ref: '#/components/schemas/Article'\n        articlesCount:\n          type: integer\n    NewArticle:\n      required:\n        - body\n        - description\n        - title\n      type: object\n      properties:\n        title:\n          type: string\n        description:\n          type: string\n        body:\n          type: string\n        tagList:\n          type: array\n          items:\n            type: string\n    NewArticleRequest:\n      required:\n        - article\n      type: object\n      properties:\n        article:\n          $ref: '#/components/schemas/NewArticle'\n    UpdateArticle:\n      type: object\n      properties:\n        title:\n          type: string\n        description:\n          type: string\n        body:\n          type: string\n    UpdateArticleRequest:\n      required:\n        - article\n      type: object\n      properties:\n        article:\n          $ref: '#/components/schemas/UpdateArticle'\n    Comment:\n      required:\n        - author\n        - body\n        - createdAt\n        - id\n        - updatedAt\n      type: object\n      properties:\n        id:\n          type: integer\n        createdAt:\n          type: string\n          format: date-time\n        updatedAt:\n          type: string\n          format: date-time\n        body:\n          type: string\n        author:\n          $ref: '#/components/schemas/Profile'\n    SingleCommentResponse:\n      required:\n        - comment\n      type: object\n      properties:\n        comment:\n          $ref: '#/components/schemas/Comment'\n    MultipleCommentsResponse:\n      required:\n        - comments\n      type: object\n      properties:\n        comments:\n          type: array\n          items:\n            $ref: '#/components/schemas/Comment'\n    NewComment:\n      required:\n        - body\n      type: object\n      properties:\n        body:\n          type: string\n    NewCommentRequest:\n      required:\n        - comment\n      type: object\n      properties:\n        comment:\n          $ref: '#/components/schemas/NewComment'\n    TagsResponse:\n      required:\n        - tags\n      type: object\n      properties:\n        tags:\n          type: array\n          items:\n            type: string\n    GenericErrorModel:\n      required:\n        - errors\n      type: object\n      properties:\n        errors:\n          required:\n            - body\n          type: object\n          properties:\n            body:\n              type: array\n              items:\n                type: string\n    #\n    # 自前追加\n    #\n    # '#/components/securitySchemes/Token' をschemeに設定した時\n    # Tokenモデルがないため、エラーになる\n    # TokenはStringでいいので定義する\n    #\n    Token:\n      type: string\n  #\n  # Components Object: securitySchemes\n  #\n  # 型\n  # - Map[string, Security Scheme Object or Reference Object]\n  #   - Key\n  #     - String\n  #   - Value\n  #     - Security Scheme Object\n  #     - or Reference Object\n  # 必須？\n  # - No\n  # URL\n  # - https://spec.openapis.org/oas/v3.0.1#openapi-object\n  # 概要\n  # - セキュリティスキーマに関する共通化するための要素\n  # Schema Objectの詳細\n  # - https://spec.openapis.org/oas/v3.0.1#schema-object\n  # Reference Objectの詳細\n  # - https://spec.openapis.org/oas/v3.0.1#reference-object\n  #\n  securitySchemes:\n\n    #\n    # Security Scheme Object\n    #\n    # 使用可能なセキュリティスキーム定義\n    # - HTTP認証\n    # - APIキー\n    #   - ヘッダ\n    #   - クエリパラメータ\n    # - OAuth2\n    #   - implicit\n    #   - password\n    #   - application\n    #   - access code\n    # - OIDC\n    #\n    Token:\n      #\n      # Security Scheme Object: type\n      #\n      # 型\n      # - string\n      #   - \"apiKey\"\n      #   - \"http\"\n      #   - \"oauth2\"\n      #   - \"openIdConnect\"\n      # 必須？\n      # - Yes\n      # URL\n      # - https://spec.openapis.org/oas/v3.0.1#security-scheme-object\n      # 概要\n      # - セキュリティスキームのタイプ\n      #\n      type: apiKey\n\n      #\n      # Security Scheme Object: description\n      #\n      # 型\n      # - string\n      # 必須？\n      # - No\n      # URL\n      # - https://spec.openapis.org/oas/v3.0.1#security-scheme-object\n      # 概要\n      # - セキュリティスキームの短い説明\n      # - CommonMarkが使える\n      #\n      description: \"For accessing the protected API resources, you must have received\\\n        \\ a a valid JWT token after registering or logging in. This JWT token must\\\n        \\ then be used for all protected resources by passing it in via the 'Authorization'\\\n        \\ header.\\n\\nA JWT token is generated by the API by either registering via\\\n        \\ /users or logging in via /users/login.\\n\\nThe following format must be in\\\n        \\ the 'Authorization' header :\\n\\n    Token xxxxxx.yyyyyyy.zzzzzz\\n    \\n\"\n\n      #\n      # Security Scheme Object: name\n      #\n      # 型\n      # - string\n      # 必須？\n      # - yes(apiKeyの時に限り)\n      # URL\n      # - https://spec.openapis.org/oas/v3.0.1#security-scheme-object\n      # 概要\n      # - apiKeyの時に適用される\n      # - 利用するパラメータの名前\n      # - 例: headerの時は \"Authorization: *****.*****.*****\" のAuthorizationがname\n      #\n      name: Authorization\n\n      #\n      # Security Scheme Object: in\n      #\n      # 型\n      # - string\n      #   - \"query\"\n      #   - \"header\"\n      #   - \"cookie\"\n      # 必須？\n      # - yes(apiKeyの時に限り)\n      # URL\n      # - https://spec.openapis.org/oas/v3.0.1#security-scheme-object\n      # 概要\n      # - apiKeyの時に適用される\n      # - APIキーの保持場所(クエリパラメータ or ヘッダ or クッキー)\n      #\n      in: header\n",
			"canonicalURL": "/github.com/sunabak0/realworld-kotlin-springboot-jdbc@5c394e8d9e8ca7af9c863f623fba4108c31ad6e5/-/blob/e2e/openapi.yml",
			"externalURLs": [
				{
					"url": "https://github.com/sunabak0/realworld-kotlin-springboot-jdbc/blob/5c394e8d9e8ca7af9c863f623fba4108c31ad6e5/e2e/openapi.yml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "parse: parse spec: parse path items: path \"/articles\": get: operation \"GetArticles\": parameters: parse parameter \"Authorization\": parse schema: $ref: resolve \"#/components/securitySchemes/Token\": at e2e/openapi.yml:1385:13: type: unexpected schema type: \"apiKey\""
}