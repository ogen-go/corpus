{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/optim-corp/cios-golang-sdk"
		},
		"file": {
			"name": "openapi.yml",
			"size": 0,
			"path": "openapi/openapi.yml",
			"byteSize": 133915,
			"content": "components:\n  securitySchemes:\n    bearerAuth:\n      bearerFormat: JWT\n      scheme: bearer\n      type: http\ninfo:\n  title: Cios Openapi\n  version: 1.0.1\nopenapi: 3.0.3\npaths:\n  /connect/token:\n    post:\n      operationId: refreshToken\n      requestBody:\n        content:\n          application/x-www-form-urlencoded:\n            schema:\n              $ref: ./components/auth-component.openapi.yml#/components/schemas/ConnectTokenRequest\n      responses:\n        200:\n          content:\n            application/json:\n              schema:\n                $ref: ./components/auth-component.openapi.yml#/components/schemas/ConnectTokenResponse\n          description: ''\n      security:\n      - basicAuth: []\n      tags:\n      - auth\n  /v2/channels:\n    get:\n      operationId: getChannels\n      parameters:\n      - $ref: ./components/parameters.yml#/components/parameters/name_query\n      - $ref: ./components/parameters.yml#/components/parameters/resource_owner_id\n      - $ref: ./components/parameters.yml#/components/parameters/label\n      - $ref: ./components/parameters.yml#/components/parameters/channel_protocol\n      - $ref: ./components/parameters.yml#/components/parameters/limit\n      - $ref: ./components/parameters.yml#/components/parameters/offset\n      - $ref: ./components/parameters.yml#/components/parameters/order\n      - $ref: ./components/parameters.yml#/components/parameters/order_by\n      - $ref: ./components/parameters.yml#/components/parameters/lang\n      - $ref: ./components/parameters.yml#/components/parameters/is_dev\n      - $ref: ./components/parameters.yml#/components/parameters/is_public\n      - $ref: ./components/parameters.yml#/components/parameters/messaging_enabled\n      - $ref: ./components/parameters.yml#/components/parameters/datastore_enabled\n      - $ref: ./components/parameters.yml#/components/parameters/messaging_persisted\n      responses:\n        200:\n          content:\n            application/json:\n              schema:\n                $ref: ./components/publishsublish-component.openapi.yml#/components/schemas/MultipleChannel\n          description: OK\n      security:\n      - bearerAuth: []\n      tags:\n      - PublishSubscribe\n    post:\n      operationId: createChannel\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: ./components/publishsublish-component.openapi.yml#/components/schemas/ChannelProposal\n        required: true\n      responses:\n        200:\n          content:\n            application/json:\n              schema:\n                $ref: ./components/publishsublish-component.openapi.yml#/components/schemas/SingleChannel\n          description: OK\n      security:\n      - bearerAuth: []\n      tags:\n      - PublishSubscribe\n  /v2/channels/{channel_id}:\n    delete:\n      operationId: deleteChannel\n      parameters:\n      - $ref: ./components/parameters.yml#/components/parameters/channel_id_required\n      responses:\n        200:\n          description: OK\n      security:\n      - bearerAuth: []\n      tags:\n      - PublishSubscribe\n    get:\n      operationId: getChannel\n      parameters:\n      - $ref: ./components/parameters.yml#/components/parameters/channel_id_required\n      - $ref: ./components/parameters.yml#/components/parameters/lang\n      - $ref: ./components/parameters.yml#/components/parameters/is_dev\n      responses:\n        200:\n          content:\n            application/json:\n              schema:\n                $ref: ./components/publishsublish-component.openapi.yml#/components/schemas/SingleChannel\n          description: OK\n      security:\n      - bearerAuth: []\n      tags:\n      - PublishSubscribe\n    patch:\n      operationId: updateChannel\n      parameters:\n      - $ref: ./components/parameters.yml#/components/parameters/channel_id_required\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: ./components/publishsublish-component.openapi.yml#/components/schemas/ChannelUpdateProposal\n        required: true\n      responses:\n        200:\n          content:\n            application/json:\n              schema:\n                $ref: ./components/publishsublish-component.openapi.yml#/components/schemas/MultipleChannel\n          description: OK\n      security:\n      - bearerAuth: []\n      tags:\n      - PublishSubscribe\n  /v2/collections/{collection_id}/archive:\n    post:\n      description: '指定した現場の時系列データをアーカイブし、アーカイブ・リストア状態をARCHIVEDにする。\n\n\n        Supported application type：Web, Native'\n      operationId: postCollectionArchive\n      parameters:\n      - $ref: ./components/parameters.yml#/components/parameters/collection_id\n      - $ref: ./components/parameters.yml#/components/parameters/resource_owner_id\n      responses:\n        '202':\n          description: リストア要求受付成功\n        '400':\n          $ref: ./components/responses.yml#/components/responses/BadRequest\n        '401':\n          $ref: ./components/responses.yml#/components/responses/InvalidToken\n        '403':\n          $ref: ./components/responses.yml#/components/responses/InsufficientScopes\n        '404':\n          $ref: ./components/responses.yml#/components/responses/NotFound\n        '409':\n          $ref: ./components/responses.yml#/components/responses/StatusMismatch\n        '500':\n          $ref: ./components/responses.yml#/components/responses/InternalServerError\n      security:\n      - bearerAuth: []\n      tags:\n      - Collection\n  /v2/collections/{collection_id}/recorded-dates:\n    get:\n      description: '指定した年月において、時系列データが存在する日付のリストを取得する。\n\n\n        時系列データ保存API、または、時系列データ保存(bulk upload)APIで保存された時系列データが存在する日付のみ取得対象であり、画像のみが存在する日付は取得されない。\n\n\n        Supported application type:Web, Native, Client'\n      operationId: getRecordedDates\n      parameters:\n      - $ref: ./components/parameters.yml#/components/parameters/collection_id\n      - $ref: ./components/parameters.yml#/components/parameters/resource_owner_id\n      - $ref: ./components/parameters.yml#/components/parameters/month_required\n      - $ref: ./components/parameters.yml#/components/parameters/gmt_offset\n      responses:\n        '200':\n          content:\n            application/json; charset=utf-8:\n              schema:\n                $ref: ./components/collection-component.openapi.yml#/components/schemas/RecordedDates\n          description: 取得成功\n        '400':\n          $ref: ./components/responses.yml#/components/responses/BadRequest\n        '401':\n          $ref: ./components/responses.yml#/components/responses/InvalidToken\n        '403':\n          $ref: ./components/responses.yml#/components/responses/InsufficientScopes\n        '404':\n          $ref: ./components/responses.yml#/components/responses/NotFound\n        '409':\n          $ref: ./components/responses.yml#/components/responses/StatusMismatch\n        '500':\n          $ref: ./components/responses.yml#/components/responses/InternalServerError\n      security:\n      - bearerAuth: []\n      tags:\n      - Collection\n  /v2/collections/{collection_id}/restore:\n    post:\n      description: '指定した現場の時系列データをリストアし、アーカイブ・リストア状態をREADYにする。\n\n\n        Supported application type：Web, Native'\n      operationId: postCollectionRestore\n      parameters:\n      - $ref: ./components/parameters.yml#/components/parameters/collection_id\n      - $ref: ./components/parameters.yml#/components/parameters/resource_owner_id\n      responses:\n        '202':\n          description: アーカイブ要求受付成功\n        '400':\n          $ref: ./components/responses.yml#/components/responses/BadRequest\n        '401':\n          $ref: ./components/responses.yml#/components/responses/InvalidToken\n        '403':\n          $ref: ./components/responses.yml#/components/responses/InsufficientScopes\n        '404':\n          $ref: ./components/responses.yml#/components/responses/NotFound\n        '409':\n          $ref: ./components/responses.yml#/components/responses/StatusMismatch\n        '500':\n          $ref: ./components/responses.yml#/components/responses/InternalServerError\n      security:\n      - bearerAuth: []\n      tags:\n      - Collection\n  /v2/collections/{collection_id}/search-latest:\n    post:\n      description: '最新データを取得する。\u003cbr\u003e\n\n        取得対象データはtimestampが最も新しいデータではなく`最後に送信されたデータ`となる。 \u003cbr\u003e\n\n        またbulk uploadされたデータは過去データの扱いの為この最新データ取得で取得されるデータには影響しない。 \u003cbr\u003e\n\n        projection=dataの場合は時系列データ保存API、imageかthumbnailの場合は画像保存APIで最後に保存されたものが取得対象となる。\n\n\n        Supported application type:Web, Native, Client'\n      operationId: postSearchLatest\n      parameters:\n      - $ref: ./components/parameters.yml#/components/parameters/collection_id\n      - $ref: ./components/parameters.yml#/components/parameters/resource_owner_id\n      - $ref: ./components/parameters.yml#/components/parameters/limit\n      - $ref: ./components/parameters.yml#/components/parameters/offset\n      - $ref: ./components/parameters.yml#/components/parameters/projection\n      - $ref: ./components/parameters.yml#/components/parameters/Accept-Encoding\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: ./components/collection-component.openapi.yml#/components/schemas/CollectionLatestRequest\n        required: true\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: ./components/collection-component.openapi.yml#/components/schemas/MultipleCollectionLatest\n          description: 取得成功\n        '400':\n          $ref: ./components/responses.yml#/components/responses/BadRequest\n        '401':\n          $ref: ./components/responses.yml#/components/responses/InvalidToken\n        '403':\n          $ref: ./components/responses.yml#/components/responses/InsufficientScopes\n        '404':\n          $ref: ./components/responses.yml#/components/responses/NotFound\n        '409':\n          $ref: ./components/responses.yml#/components/responses/StatusMismatch\n        '500':\n          $ref: ./components/responses.yml#/components/responses/InternalServerError\n      security:\n      - bearerAuth: []\n      tags:\n      - Collection\n  /v2/collections/{collection_id}/series:\n    post:\n      deprecated: true\n      description: 'データの保存、時系列データ存在確認への反映は非同期。\n\n\n        Supported application type: Web, Native, Client, Device'\n      operationId: postSeries\n      parameters:\n      - $ref: ./components/parameters.yml#/components/parameters/collection_id\n      - $ref: ./components/parameters.yml#/components/parameters/resource_owner_id\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: ./components/collection-component.openapi.yml#/components/schemas/SeriesRequest\n        required: true\n      responses:\n        '201':\n          description: 追加成功\n        '400':\n          $ref: ./components/responses.yml#/components/responses/BadRequest\n        '401':\n          $ref: ./components/responses.yml#/components/responses/InvalidToken\n        '403':\n          $ref: ./components/responses.yml#/components/responses/InsufficientScopes\n        '404':\n          $ref: ./components/responses.yml#/components/responses/NotFound\n        '409':\n          $ref: ./components/responses.yml#/components/responses/StatusMismatch\n        '500':\n          $ref: ./components/responses.yml#/components/responses/InternalServerError\n      security:\n      - bearerAuth: []\n      summary: 時系列データ保存\n      tags:\n      - Collection\n  /v2/collections/{collection_id}/series-bulk:\n    post:\n      deprecated: true\n      description: '複数のデータの保存、時系列データ存在確認への反映は非同期\n\n\n        Supported application type：Web, Native, Client, Device'\n      operationId: postSeriesBulk\n      parameters:\n      - $ref: ./components/parameters.yml#/components/parameters/collection_id\n      - $ref: ./components/parameters.yml#/components/parameters/resource_owner_id\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: ./components/collection-component.openapi.yml#/components/schemas/SeriesBulkRequest\n        required: true\n      responses:\n        '201':\n          description: 追加成功\n        '400':\n          $ref: ./components/responses.yml#/components/responses/BadRequest\n        '401':\n          $ref: ./components/responses.yml#/components/responses/InvalidToken\n        '403':\n          $ref: ./components/responses.yml#/components/responses/InsufficientScopes\n        '404':\n          $ref: ./components/responses.yml#/components/responses/NotFound\n        '409':\n          $ref: ./components/responses.yml#/components/responses/StatusMismatch\n        '500':\n          $ref: ./components/responses.yml#/components/responses/InternalServerError\n      security:\n      - bearerAuth: []\n      tags:\n      - Collection\n  /v2/collections/{collection_id}/series/{series_id}:\n    get:\n      deprecated: true\n      description: '期間・シリーズID等を指定して時系列データを取得する。\n\n\n        Supported application type:Web, Native, Client'\n      operationId: getSeries\n      parameters:\n      - $ref: ./components/parameters.yml#/components/parameters/collection_id\n      - $ref: ./components/parameters.yml#/components/parameters/series_id\n      - $ref: ./components/parameters.yml#/components/parameters/resource_owner_id\n      - $ref: ./components/parameters.yml#/components/parameters/Accept-Encoding\n      - $ref: ./components/parameters.yml#/components/parameters/time_range\n      - $ref: ./components/parameters.yml#/components/parameters/limit\n      - $ref: ./components/parameters.yml#/components/parameters/offset\n      - $ref: ./components/parameters.yml#/components/parameters/ascending\n      responses:\n        '200':\n          content:\n            application/json; charset=utf-8:\n              schema:\n                $ref: ./components/collection-component.openapi.yml#/components/schemas/MultipleSeriesDataLocationUnix\n          description: 取得成功\n          headers:\n            Content-Encoding:\n              description: 圧縮形式。リクエストヘッダで圧縮形式を指定した場合のみ。\n              explode: false\n              schema:\n                pattern: gzip\n                type: string\n              style: simple\n        '400':\n          $ref: ./components/responses.yml#/components/responses/BadRequest\n        '401':\n          $ref: ./components/responses.yml#/components/responses/InvalidToken\n        '403':\n          $ref: ./components/responses.yml#/components/responses/InsufficientScopes\n        '404':\n          $ref: ./components/responses.yml#/components/responses/NotFound\n        '409':\n          $ref: ./components/responses.yml#/components/responses/StatusMismatch\n        '500':\n          $ref: ./components/responses.yml#/components/responses/InternalServerError\n      security:\n      - bearerAuth: []\n      tags:\n      - Collection\n  /v2/collections/{collection_id}/series/{series_id}/aggregation:\n    post:\n      description: '期間・シリーズID等を指定して時系列データの計測値を集計する。\n\n\n        Supported application type:Web, Native, Client'\n      operationId: getSeriesAggregation\n      parameters:\n      - $ref: ./components/parameters.yml#/components/parameters/collection_id\n      - $ref: ./components/parameters.yml#/components/parameters/series_id\n      - $ref: ./components/parameters.yml#/components/parameters/resource_owner_id\n      - $ref: ./components/parameters.yml#/components/parameters/Accept-Encoding\n      - $ref: ./components/parameters.yml#/components/parameters/time_range\n      - $ref: ./components/parameters.yml#/components/parameters/interval\n      - $ref: ./components/parameters.yml#/components/parameters/ascending\n      requestBody:\n        content:\n          application/json:\n            schema:\n              items:\n                $ref: ./components/collection-component.openapi.yml#/components/schemas/SeriesAggregationRequest\n              type: array\n        required: true\n      responses:\n        '200':\n          content:\n            application/json; charset=utf-8:\n              schema:\n                $ref: ./components/collection-component.openapi.yml#/components/schemas/SeriesAggregations\n          description: 取得成功\n          headers:\n            Content-Encoding:\n              description: 圧縮形式。リクエストヘッダで圧縮形式を指定した場合のみ。\n              explode: false\n              schema:\n                pattern: gzip\n                type: string\n              style: simple\n        '400':\n          $ref: ./components/responses.yml#/components/responses/BadRequest\n        '401':\n          $ref: ./components/responses.yml#/components/responses/InvalidToken\n        '403':\n          $ref: ./components/responses.yml#/components/responses/InsufficientScopes\n        '404':\n          $ref: ./components/responses.yml#/components/responses/NotFound\n        '409':\n          $ref: ./components/responses.yml#/components/responses/StatusMismatch\n        '500':\n          $ref: ./components/responses.yml#/components/responses/InternalServerError\n      security:\n      - bearerAuth: []\n      tags:\n      - Collection\n  /v2/collections/{collection_id}/series/{series_id}/data:\n    get:\n      description: 'シリーズID、時刻を指定してサムネイル画像を取得する。\n\n\n        Supported application type:Web, Native, Client'\n      operationId: getTimeSeriesData\n      parameters:\n      - $ref: ./components/parameters.yml#/components/parameters/collection_id\n      - $ref: ./components/parameters.yml#/components/parameters/series_id\n      - $ref: ./components/parameters.yml#/components/parameters/resource_owner_id\n      - $ref: ./components/parameters.yml#/components/parameters/Accept-Encoding\n      - $ref: ./components/parameters.yml#/components/parameters/time_range\n      - $ref: ./components/parameters.yml#/components/parameters/limit\n      - $ref: ./components/parameters.yml#/components/parameters/offset\n      - $ref: ./components/parameters.yml#/components/parameters/ascending\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: ./components/collection-component.openapi.yml#/components/schemas/MultipleSeriesDataLocationUnix\n          description: 取得成功\n        '400':\n          $ref: ./components/responses.yml#/components/responses/BadRequest\n        '401':\n          $ref: ./components/responses.yml#/components/responses/InvalidToken\n        '403':\n          $ref: ./components/responses.yml#/components/responses/InsufficientScopes\n        '404':\n          $ref: ./components/responses.yml#/components/responses/NotFound\n        '409':\n          $ref: ./components/responses.yml#/components/responses/StatusMismatch\n        '500':\n          $ref: ./components/responses.yml#/components/responses/InternalServerError\n      security:\n      - bearerAuth: []\n      tags:\n      - Collection\n  /v2/collections/{collection_id}/series/{series_id}/data-bulk:\n    put:\n      description: '複数のデータの保存、時系列データ存在確認への反映は非同期\n\n\n        Supported application type：Web, Native, Client, Device'\n      operationId: createSeriesDataBulk\n      parameters:\n      - $ref: ./components/parameters.yml#/components/parameters/collection_id\n      - $ref: ./components/parameters.yml#/components/parameters/series_id\n      - $ref: ./components/parameters.yml#/components/parameters/resource_owner_id\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: ./components/collection-component.openapi.yml#/components/schemas/SeriesDataBulkRequest\n        required: true\n      responses:\n        '201':\n          description: 追加成功\n        '400':\n          $ref: ./components/responses.yml#/components/responses/BadRequest\n        '401':\n          $ref: ./components/responses.yml#/components/responses/InvalidToken\n        '403':\n          $ref: ./components/responses.yml#/components/responses/InsufficientScopes\n        '404':\n          $ref: ./components/responses.yml#/components/responses/NotFound\n        '409':\n          $ref: ./components/responses.yml#/components/responses/StatusMismatch\n        '500':\n          $ref: ./components/responses.yml#/components/responses/InternalServerError\n      security:\n      - bearerAuth: []\n      tags:\n      - Collection\n  /v2/collections/{collection_id}/series/{series_id}/images:\n    get:\n      description: 'シリーズID、期間等を指定してオリジナル画像の履歴を取得する。\n\n\n        Supported application type:Web, Native, Client'\n      operationId: getSeriesImages\n      parameters:\n      - $ref: ./components/parameters.yml#/components/parameters/collection_id\n      - $ref: ./components/parameters.yml#/components/parameters/series_id\n      - $ref: ./components/parameters.yml#/components/parameters/resource_owner_id\n      - $ref: ./components/parameters.yml#/components/parameters/Accept-Encoding\n      - $ref: ./components/parameters.yml#/components/parameters/time_range\n      - $ref: ./components/parameters.yml#/components/parameters/limit\n      - $ref: ./components/parameters.yml#/components/parameters/offset\n      - $ref: ./components/parameters.yml#/components/parameters/ascending\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: ./components/collection-component.openapi.yml#/components/schemas/MultipleSeriesImage\n          description: 取得成功\n        '400':\n          $ref: ./components/responses.yml#/components/responses/BadRequest\n        '401':\n          $ref: ./components/responses.yml#/components/responses/InvalidToken\n        '403':\n          $ref: ./components/responses.yml#/components/responses/InsufficientScopes\n        '404':\n          $ref: ./components/responses.yml#/components/responses/NotFound\n        '409':\n          $ref: ./components/responses.yml#/components/responses/StatusMismatch\n        '500':\n          $ref: ./components/responses.yml#/components/responses/InternalServerError\n      security:\n      - bearerAuth: []\n      tags:\n      - Collection\n  /v2/collections/{collection_id}/series/{series_id}/latest:\n    delete:\n      description: 'シリーズIDを指定して最新データを削除する。削除後は当該シリーズの最新データおよび画像は最新データ取得APIのレスポンスに含まれない。\u003cbr\u003e\n\n        Responseが500の場合、最新データまたは最新画像のいずれかが残っている可能性がある。\u003cbr\u003e\n\n        再度APIを実行してResponseが204であれば残ったリソースも削除できた状態となる。\n\n\n        Supported application type:Web, Native, Client, Device'\n      operationId: deleteSeriesLatest\n      parameters:\n      - $ref: ./components/parameters.yml#/components/parameters/collection_id\n      - $ref: ./components/parameters.yml#/components/parameters/series_id\n      - $ref: ./components/parameters.yml#/components/parameters/timestamp_path\n      - $ref: ./components/parameters.yml#/components/parameters/resource_owner_id\n      responses:\n        '204':\n          description: 削除成功\n        '400':\n          $ref: ./components/responses.yml#/components/responses/BadRequest\n        '401':\n          $ref: ./components/responses.yml#/components/responses/InvalidToken\n        '403':\n          $ref: ./components/responses.yml#/components/responses/InsufficientScopes\n        '404':\n          $ref: ./components/responses.yml#/components/responses/NotFound\n        '409':\n          $ref: ./components/responses.yml#/components/responses/StatusMismatch\n        '500':\n          $ref: ./components/responses.yml#/components/responses/InternalServerError\n      security:\n      - bearerAuth: []\n      tags:\n      - Collection\n  /v2/collections/{collection_id}/series/{series_id}/thumbnails:\n    get:\n      description: 'シリーズID、期間等を指定してサムネイル画像の履歴を取得する。\n\n\n        Supported application type:Web, Native, Client'\n      operationId: getSeriesThumbnails\n      parameters:\n      - $ref: ./components/parameters.yml#/components/parameters/collection_id\n      - $ref: ./components/parameters.yml#/components/parameters/series_id\n      - $ref: ./components/parameters.yml#/components/parameters/resource_owner_id\n      - $ref: ./components/parameters.yml#/components/parameters/Accept-Encoding\n      - $ref: ./components/parameters.yml#/components/parameters/time_range\n      - $ref: ./components/parameters.yml#/components/parameters/limit\n      - $ref: ./components/parameters.yml#/components/parameters/offset\n      - $ref: ./components/parameters.yml#/components/parameters/ascending\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: ./components/collection-component.openapi.yml#/components/schemas/MultipleSeriesImage\n          description: 取得成功\n        '400':\n          $ref: ./components/responses.yml#/components/responses/BadRequest\n        '401':\n          $ref: ./components/responses.yml#/components/responses/InvalidToken\n        '403':\n          $ref: ./components/responses.yml#/components/responses/InsufficientScopes\n        '404':\n          $ref: ./components/responses.yml#/components/responses/NotFound\n        '409':\n          $ref: ./components/responses.yml#/components/responses/StatusMismatch\n        '500':\n          $ref: ./components/responses.yml#/components/responses/InternalServerError\n      security:\n      - bearerAuth: []\n      tags:\n      - Collection\n  /v2/collections/{collection_id}/series/{series_id}/timestamp/{timestamp}/data:\n    put:\n      description: 'データの保存、時系列データ存在確認への反映は非同期。\n\n\n        Supported application type: Web, Native, Client, Device'\n      operationId: putSeries\n      parameters:\n      - $ref: ./components/parameters.yml#/components/parameters/collection_id\n      - $ref: ./components/parameters.yml#/components/parameters/series_id\n      - $ref: ./components/parameters.yml#/components/parameters/timestamp_path\n      - $ref: ./components/parameters.yml#/components/parameters/resource_owner_id\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: ./components/collection-component.openapi.yml#/components/schemas/SeriesDataRequest\n        required: true\n      responses:\n        '201':\n          description: 追加成功\n        '400':\n          $ref: ./components/responses.yml#/components/responses/BadRequest\n        '401':\n          $ref: ./components/responses.yml#/components/responses/InvalidToken\n        '403':\n          $ref: ./components/responses.yml#/components/responses/InsufficientScopes\n        '404':\n          $ref: ./components/responses.yml#/components/responses/NotFound\n        '409':\n          $ref: ./components/responses.yml#/components/responses/StatusMismatch\n        '500':\n          $ref: ./components/responses.yml#/components/responses/InternalServerError\n      security:\n      - bearerAuth: []\n      tags:\n      - Collection\n  /v2/collections/{collection_id}/series/{series_id}/timestamp/{timestamp}/image:\n    get:\n      description: 'シリーズID、時刻を指定してオリジナル画像を取得する。\n\n\n        Supported application type:Web, Native, Client'\n      operationId: getSeriesImage\n      parameters:\n      - $ref: ./components/parameters.yml#/components/parameters/collection_id\n      - $ref: ./components/parameters.yml#/components/parameters/series_id\n      - $ref: ./components/parameters.yml#/components/parameters/timestamp_path\n      - $ref: ./components/parameters.yml#/components/parameters/resource_owner_id\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: ./components/collection-component.openapi.yml#/components/schemas/SeriesDataBulkRequest\n        required: true\n      responses:\n        '200':\n          content:\n            image/jpeg:\n              schema:\n                description: JPEG形式の画像。\n                format: binary\n                type: string\n            image/png:\n              schema:\n                description: PNG形式の画像。\n                format: binary\n                type: string\n          description: 取得成功\n        '400':\n          $ref: ./components/responses.yml#/components/responses/BadRequest\n        '401':\n          $ref: ./components/responses.yml#/components/responses/InvalidToken\n        '403':\n          $ref: ./components/responses.yml#/components/responses/InsufficientScopes\n        '404':\n          $ref: ./components/responses.yml#/components/responses/NotFound\n        '409':\n          $ref: ./components/responses.yml#/components/responses/StatusMismatch\n        '500':\n          $ref: ./components/responses.yml#/components/responses/InternalServerError\n      security:\n      - bearerAuth: []\n      tags:\n      - Collection\n    put:\n      description: '画像を保存する。\n\n\n        レスポンスのhttpステータスが500となった場合、最新オリジナル画像、最新サムネイル画像、\n\n        オリジナル画像履歴、サムネイル画像履歴のうち一部だけが保存完了している可能性がある。\n\n        その場合は保存が完了した画像だけが画像取得APIで取得される状態となるが、\n\n        同じタイムスタンプで再度画像をアップロードすることで、それらの画像を上書きすることができる。\n\n\n        Supported application type: Web, Native, Client, Device'\n      operationId: createSeriesImage\n      parameters:\n      - $ref: ./components/parameters.yml#/components/parameters/collection_id\n      - $ref: ./components/parameters.yml#/components/parameters/series_id\n      - $ref: ./components/parameters.yml#/components/parameters/timestamp_path\n      - $ref: ./components/parameters.yml#/components/parameters/resource_owner_id\n      - $ref: ./components/parameters.yml#/components/parameters/is_latest\n      requestBody:\n        content:\n          image/jpeg:\n            schema:\n              description: JPEG形式の画像。サイズが1MBを超える場合はリクエスト不正とする。\n              format: binary\n              type: string\n          image/png:\n            schema:\n              description: PNG形式の画像。サイズが1MBを超える場合はリクエスト不正とする。\n              format: binary\n              type: string\n        required: true\n      responses:\n        '201':\n          description: 保存成功\n        '400':\n          $ref: ./components/responses.yml#/components/responses/BadRequest\n        '401':\n          $ref: ./components/responses.yml#/components/responses/InvalidToken\n        '403':\n          $ref: ./components/responses.yml#/components/responses/InsufficientScopes\n        '404':\n          $ref: ./components/responses.yml#/components/responses/NotFound\n        '409':\n          $ref: ./components/responses.yml#/components/responses/StatusMismatch\n        '500':\n          $ref: ./components/responses.yml#/components/responses/InternalServerError\n      security:\n      - bearerAuth: []\n      tags:\n      - Collection\n  /v2/collections/{collection_id}/series/{series_id}/timestamp/{timestamp}/thumbnail:\n    get:\n      description: 'シリーズID、時刻を指定してサムネイル画像を取得する。\n\n\n        Supported application type:Web, Native, Client'\n      operationId: getSeriesThumnbnail\n      parameters:\n      - $ref: ./components/parameters.yml#/components/parameters/collection_id\n      - $ref: ./components/parameters.yml#/components/parameters/series_id\n      - $ref: ./components/parameters.yml#/components/parameters/timestamp_path\n      - $ref: ./components/parameters.yml#/components/parameters/resource_owner_id\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: ./components/collection-component.openapi.yml#/components/schemas/SeriesDataBulkRequest\n        required: true\n      responses:\n        '200':\n          content:\n            image/jpeg:\n              schema:\n                description: JPEG形式の画像。\n                format: binary\n                type: string\n            image/png:\n              schema:\n                description: PNG形式の画像。\n                format: binary\n                type: string\n          description: 取得成功\n        '400':\n          $ref: ./components/responses.yml#/components/responses/BadRequest\n        '401':\n          $ref: ./components/responses.yml#/components/responses/InvalidToken\n        '403':\n          $ref: ./components/responses.yml#/components/responses/InsufficientScopes\n        '404':\n          $ref: ./components/responses.yml#/components/responses/NotFound\n        '409':\n          $ref: ./components/responses.yml#/components/responses/StatusMismatch\n        '500':\n          $ref: ./components/responses.yml#/components/responses/InternalServerError\n      security:\n      - bearerAuth: []\n      tags:\n      - Collection\n  /v2/collections/{collection_id}/status:\n    get:\n      description: 'アーカイブ・リストア状態を取得する。\n\n\n        アーカイブ・リストア状態遷移\n\n        ![](./images/archive-restore-state-transtition-diagram.png)\n\n\n        Supported application type：Web, Native'\n      operationId: getCollectionStatus\n      parameters:\n      - $ref: ./components/parameters.yml#/components/parameters/collection_id\n      - $ref: ./components/parameters.yml#/components/parameters/resource_owner_id\n      responses:\n        '200':\n          content:\n            application/json; charset=utf-8:\n              schema:\n                $ref: ./components/collection-component.openapi.yml#/components/schemas/CollectionStatus\n          description: 取得成功\n        '400':\n          $ref: ./components/responses.yml#/components/responses/BadRequest\n        '401':\n          $ref: ./components/responses.yml#/components/responses/InvalidToken\n        '403':\n          $ref: ./components/responses.yml#/components/responses/InsufficientScopes\n        '404':\n          $ref: ./components/responses.yml#/components/responses/NotFound\n        '500':\n          $ref: ./components/responses.yml#/components/responses/InternalServerError\n      security:\n      - bearerAuth: []\n      tags:\n      - Collection\n  /v2/contracts:\n    get:\n      description: 'SUPPORTED APPLICATION TYPE: クライアント\n\n        REQUIRED SCOPES: contract.read'\n      operationId: getContracts\n      parameters:\n      - $ref: ./components/parameters.yml#/components/parameters/page\n      - $ref: ./components/parameters.yml#/components/parameters/limit\n      - $ref: ./components/parameters.yml#/components/parameters/offset\n      responses:\n        200:\n          content:\n            application/json:\n              schema:\n                $ref: ./components/contract-component.openapi.yml#/components/schemas/MultipleContract\n          description: OK\n        400:\n          $ref: ./components/responses.yml#/components/responses/invalid_request\n        401:\n          $ref: ./components/responses.yml#/components/responses/invalid_token\n        403:\n          $ref: ./components/responses.yml#/components/responses/insufficient_scopes\n        500:\n          $ref: ./components/responses.yml#/components/responses/internal_server_error\n        503:\n          $ref: ./components/responses.yml#/components/responses/server_temporarily_unavailable\n      summary: 契約一覧情報を取得する\n      tags:\n      - contract\n  /v2/contracts/{contract_id}:\n    get:\n      description: contract.read\n      operationId: getContract\n      parameters:\n      - $ref: ./components/parameters.yml#/components/parameters/page\n      - $ref: ./components/parameters.yml#/components/parameters/limit\n      - $ref: ./components/parameters.yml#/components/parameters/offset\n      responses:\n        200:\n          content:\n            application/json:\n              schema:\n                $ref: ./components/contract-component.openapi.yml#/components/schemas/Contract\n          description: OK\n        400:\n          $ref: ./components/responses.yml#/components/responses/invalid_request\n        401:\n          $ref: ./components/responses.yml#/components/responses/invalid_token\n        403:\n          $ref: ./components/responses.yml#/components/responses/insufficient_scopes\n        500:\n          $ref: ./components/responses.yml#/components/responses/internal_server_error\n        503:\n          $ref: ./components/responses.yml#/components/responses/server_temporarily_unavailable\n      summary: 契約IDの契約情報を取得する\n      tags:\n      - contract\n  /v2/contracts/{contract_id}/users:\n    get:\n      description: contract.read\n      operationId: getContractUsers\n      parameters:\n      - $ref: ./components/parameters.yml#/components/parameters/contract_id\n      responses:\n        200:\n          content:\n            application/json:\n              schema:\n                $ref: ./components/contract-component.openapi.yml#/components/schemas/MultipleContractUser\n          description: OK\n        400:\n          $ref: ./components/responses.yml#/components/responses/invalid_request\n        401:\n          $ref: ./components/responses.yml#/components/responses/invalid_token\n        403:\n          $ref: ./components/responses.yml#/components/responses/insufficient_scopes\n        500:\n          $ref: ./components/responses.yml#/components/responses/internal_server_error\n        503:\n          $ref: ./components/responses.yml#/components/responses/server_temporarily_unavailable\n      summary: 契約IDの契約情報を取得する\n      tags:\n      - contract\n  /v2/contracts/{contract_id}/users/{user_id}:\n    get:\n      description: contract.read\n      operationId: getContractUser\n      parameters:\n      - $ref: ./components/parameters.yml#/components/parameters/contract_id\n      - $ref: ./components/parameters.yml#/components/parameters/user_id_path\n      responses:\n        200:\n          content:\n            application/json:\n              schema:\n                $ref: ./components/contract-component.openapi.yml#/components/schemas/ContractUser\n          description: OK\n        400:\n          $ref: ./components/responses.yml#/components/responses/invalid_request\n        401:\n          $ref: ./components/responses.yml#/components/responses/invalid_token\n        403:\n          $ref: ./components/responses.yml#/components/responses/insufficient_scopes\n        500:\n          $ref: ./components/responses.yml#/components/responses/internal_server_error\n        503:\n          $ref: ./components/responses.yml#/components/responses/server_temporarily_unavailable\n      summary: 契約IDの契約情報を取得する\n      tags:\n      - contract\n  /v2/datastore/channels:\n    get:\n      operationId: getDataStoreChannels\n      parameters:\n      - $ref: ./components/parameters.yml#/components/parameters/channel_protocol_id\n      - $ref: ./components/parameters.yml#/components/parameters/limit\n      - $ref: ./components/parameters.yml#/components/parameters/offset\n      - $ref: ./components/parameters.yml#/components/parameters/order\n      - $ref: ./components/parameters.yml#/components/parameters/order_by\n      responses:\n        200:\n          content:\n            application/json:\n              schema:\n                $ref: ./components/publishsublish-component.openapi.yml#/components/schemas/MultipleDataStoreChannel\n          description: OK\n      security:\n      - bearerAuth: []\n      tags:\n      - PublishSubscribe\n  /v2/datastore/channels/{channel_id}:\n    delete:\n      operationId: deleteDataStoreChannel\n      parameters:\n      - $ref: ./components/parameters.yml#/components/parameters/channel_id_required\n      responses:\n        200:\n          description: OK\n      security:\n      - bearerAuth: []\n      tags:\n      - PublishSubscribe\n    get:\n      operationId: getDataStoreChannel\n      parameters:\n      - $ref: ./components/parameters.yml#/components/parameters/channel_id_required\n      responses:\n        200:\n          content:\n            application/json:\n              schema:\n                $ref: ./components/publishsublish-component.openapi.yml#/components/schemas/SingleDataStoreChannel\n          description: OK\n      security:\n      - bearerAuth: []\n      tags:\n      - PublishSubscribe\n  /v2/datastore/channels/{channel_id}/object_latest:\n    get:\n      operationId: getDataStoreObjectDataLatest\n      parameters:\n      - $ref: ./components/parameters.yml#/components/parameters/channel_id_required\n      - $ref: ./components/parameters.yml#/components/parameters/packer_format\n      responses:\n        200:\n          content:\n            application/json:\n              schema: {}\n            application/octet-stream:\n              schema:\n                format: binary\n                type: string\n            application/xml:\n              schema: {}\n            text/plain:\n              schema:\n                type: string\n          description: OK\n      security:\n      - bearerAuth: []\n      tags:\n      - PublishSubscribe\n  /v2/datastore/channels/{channel_id}/objects:\n    get:\n      operationId: getDataStoreObjects\n      parameters:\n      - $ref: ./components/parameters.yml#/components/parameters/channel_id_required\n      - $ref: ./components/parameters.yml#/components/parameters/session_id_query\n      - $ref: ./components/parameters.yml#/components/parameters/channel_protocol_version\n      - $ref: ./components/parameters.yml#/components/parameters/channel_protocol_id\n      - $ref: ./components/parameters.yml#/components/parameters/label\n      - $ref: ./components/parameters.yml#/components/parameters/location\n      - $ref: ./components/parameters.yml#/components/parameters/location_range\n      - $ref: ./components/parameters.yml#/components/parameters/timestamp\n      - $ref: ./components/parameters.yml#/components/parameters/timestamp_range\n      - $ref: ./components/parameters.yml#/components/parameters/ascending\n      - $ref: ./components/parameters.yml#/components/parameters/offset\n      - $ref: ./components/parameters.yml#/components/parameters/limit\n      responses:\n        200:\n          content:\n            application/json:\n              schema:\n                $ref: ./components/publishsublish-component.openapi.yml#/components/schemas/MultipleDataStoreObject\n          description: OK\n      security:\n      - bearerAuth: []\n      tags:\n      - PublishSubscribe\n    post:\n      operationId: createDataStoreObject\n      parameters:\n      - $ref: ./components/parameters.yml#/components/parameters/channel_id_required\n      - $ref: ./components/parameters.yml#/components/parameters/channel_protocol_id\n      - $ref: ./components/parameters.yml#/components/parameters/channel_protocol_version\n      - $ref: ./components/parameters.yml#/components/parameters/session_id_query\n      - $ref: ./components/parameters.yml#/components/parameters/location\n      - $ref: ./components/parameters.yml#/components/parameters/timestamp\n      requestBody:\n        content:\n          application/octet-stream:\n            schema:\n              format: binary\n              type: string\n        required: true\n      responses:\n        200:\n          content:\n            application/json:\n              schema:\n                $ref: ./components/publishsublish-component.openapi.yml#/components/schemas/SingleDataStoreObject\n          description: OK\n      security:\n      - bearerAuth: []\n      tags:\n      - PublishSubscribe\n  /v2/datastore/channels/{channel_id}/objects/{object_id}:\n    delete:\n      operationId: deleteDataStoreObjectData\n      parameters:\n      - $ref: ./components/parameters.yml#/components/parameters/channel_id_required\n      - $ref: ./components/parameters.yml#/components/parameters/object_id_required\n      responses:\n        200:\n          content:\n            application/json:\n              schema:\n                $ref: ./components/publishsublish-component.openapi.yml#/components/schemas/MultipleDataStoreObject\n          description: OK\n      security:\n      - bearerAuth: []\n      tags:\n      - PublishSubscribe\n    get:\n      operationId: getDataStoreObjectData\n      parameters:\n      - $ref: ./components/parameters.yml#/components/parameters/channel_id_required\n      - $ref: ./components/parameters.yml#/components/parameters/object_id_required\n      - $ref: ./components/parameters.yml#/components/parameters/packer_format\n      responses:\n        200:\n          content:\n            application/json:\n              schema: {}\n            text/plain:\n              schema:\n                type: string\n          description: OK\n      security:\n      - bearerAuth: []\n      tags:\n      - PublishSubscribe\n  /v2/datastore/channels/{channel_id}/sessions:\n    get:\n      operationId: getDataStoreSessions\n      parameters:\n      - $ref: ./components/parameters.yml#/components/parameters/channel_id_required\n      - $ref: ./components/parameters.yml#/components/parameters/timestamp\n      - $ref: ./components/parameters.yml#/components/parameters/timestamp_range\n      - $ref: ./components/parameters.yml#/components/parameters/location_range\n      - $ref: ./components/parameters.yml#/components/parameters/location\n      - $ref: ./components/parameters.yml#/components/parameters/ascending\n      - $ref: ./components/parameters.yml#/components/parameters/offset\n      - $ref: ./components/parameters.yml#/components/parameters/limit\n      responses:\n        200:\n          content:\n            application/json:\n              schema:\n                $ref: ./components/publishsublish-component.openapi.yml#/components/schemas/MultipleSession\n          description: OK\n      security:\n      - bearerAuth: []\n      tags:\n      - PublishSubscribe\n  /v2/datastore/channels/{channel_id}/sessions/{session_id}:\n    delete:\n      operationId: deleteDataStoreSession\n      parameters:\n      - $ref: ./components/parameters.yml#/components/parameters/channel_id_required\n      - $ref: ./components/parameters.yml#/components/parameters/session_id_required\n      responses:\n        200:\n          description: OK\n      security:\n      - bearerAuth: []\n      tags:\n      - PublishSubscribe\n    get:\n      operationId: getDataStoreSession\n      parameters:\n      - $ref: ./components/parameters.yml#/components/parameters/channel_id_required\n      - $ref: ./components/parameters.yml#/components/parameters/session_id_required\n      responses:\n        200:\n          content:\n            application/json:\n              schema:\n                $ref: ./components/publishsublish-component.openapi.yml#/components/schemas/SingleSession\n          description: OK\n      security:\n      - bearerAuth: []\n      tags:\n      - PublishSubscribe\n  /v2/datastore/objects_latest:\n    post:\n      operationId: getDataStoreMultiObjectDataLatest\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: ./components/publishsublish-component.openapi.yml#/components/schemas/Ids\n        required: true\n      responses:\n        200:\n          content:\n            application/json:\n              schema:\n                $ref: ./components/publishsublish-component.openapi.yml#/components/schemas/MultipleDataStoreDataLatest\n          description: OK\n      security:\n      - bearerAuth: []\n      tags:\n      - PublishSubscribe\n  /v2/device_entities:\n    get:\n      operationId: getDeviceEntities\n      parameters:\n      - $ref: ./components/parameters.yml#/components/parameters/offset\n      - $ref: ./components/parameters.yml#/components/parameters/limit\n      - $ref: ./components/parameters.yml#/components/parameters/order\n      - $ref: ./components/parameters.yml#/components/parameters/order_by\n      - $ref: ./components/parameters.yml#/components/parameters/key_query\n      - $ref: ./components/parameters.yml#/components/parameters/serial_number_query\n      - $ref: ./components/parameters.yml#/components/parameters/device_id_query\n      - $ref: ./components/parameters.yml#/components/parameters/resource_owner_id\n      - $ref: ./components/parameters.yml#/components/parameters/component_key\n      - $ref: ./components/parameters.yml#/components/parameters/component_value\n      - $ref: ./components/parameters.yml#/components/parameters/is_flat\n      responses:\n        200:\n          content:\n            application/json:\n              schema:\n                $ref: ./components/deviceasset-component.openapi.yml#/components/schemas/MultipleDeviceModelEntity\n          description: Processing success\n        400:\n          $ref: ./components/responses.yml#/components/responses/BadRequest\n        401:\n          $ref: ./components/responses.yml#/components/responses/InvalidToken\n        403:\n          $ref: ./components/responses.yml#/components/responses/InsufficientScopes\n        500:\n          $ref: ./components/responses.yml#/components/responses/InternalServerError\n        503:\n          $ref: ./components/responses.yml#/components/responses/ServerTemporarilyUnavailable\n      tags:\n      - device-asset\n  /v2/device_entities/{key}:\n    delete:\n      operationId: deleteDeviceEntity\n      parameters:\n      - $ref: ./components/parameters.yml#/components/parameters/key\n      responses:\n        200:\n          description: Processing success\n        400:\n          $ref: ./components/responses.yml#/components/responses/BadRequest\n        401:\n          $ref: ./components/responses.yml#/components/responses/InvalidToken\n        403:\n          $ref: ./components/responses.yml#/components/responses/InsufficientScopes\n        404:\n          $ref: ./components/responses.yml#/components/responses/ResourceNotFound\n        500:\n          $ref: ./components/responses.yml#/components/responses/InternalServerError\n        503:\n          $ref: ./components/responses.yml#/components/responses/ServerTemporarilyUnavailable\n      tags:\n      - device-asset\n    get:\n      operationId: getDeviceEntity\n      parameters:\n      - $ref: ./components/parameters.yml#/components/parameters/key\n      responses:\n        200:\n          content:\n            application/json:\n              schema:\n                $ref: ./components/deviceasset-component.openapi.yml#/components/schemas/SingleDeviceModelsEntity\n          description: Processing success\n        400:\n          $ref: ./components/responses.yml#/components/responses/BadRequest\n        401:\n          $ref: ./components/responses.yml#/components/responses/InvalidToken\n        403:\n          $ref: ./components/responses.yml#/components/responses/InsufficientScopes\n        404:\n          $ref: ./components/responses.yml#/components/responses/ResourceNotFound\n        500:\n          $ref: ./components/responses.yml#/components/responses/InternalServerError\n        503:\n          $ref: ./components/responses.yml#/components/responses/ServerTemporarilyUnavailable\n      tags:\n      - device-asset\n    patch:\n      operationId: updateDeviceEntity\n      parameters:\n      - $ref: ./components/parameters.yml#/components/parameters/key\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: ./components/deviceasset-component.openapi.yml#/components/schemas/DeviceModelsEntity\n        required: true\n      responses:\n        200:\n          content:\n            application/json:\n              schema:\n                $ref: ./components/deviceasset-component.openapi.yml#/components/schemas/SingleDeviceModelsEntity\n          description: Processing success\n        400:\n          $ref: ./components/responses.yml#/components/responses/BadRequest\n        401:\n          $ref: ./components/responses.yml#/components/responses/InvalidToken\n        403:\n          $ref: ./components/responses.yml#/components/responses/InsufficientScopes\n        404:\n          $ref: ./components/responses.yml#/components/responses/ResourceNotFound\n        500:\n          $ref: ./components/responses.yml#/components/responses/InternalServerError\n        503:\n          $ref: ./components/responses.yml#/components/responses/ServerTemporarilyUnavailable\n      tags:\n      - device-asset\n  /v2/device_entities/{key}/components:\n    get:\n      operationId: getDeviceEntitiesComponents\n      parameters:\n      - $ref: ./components/parameters.yml#/components/parameters/key\n      - $ref: ./components/parameters.yml#/components/parameters/component_id_query\n      responses:\n        200:\n          content:\n            application/json:\n              schema:\n                $ref: ./components/deviceasset-component.openapi.yml#/components/schemas/MultipleDeviceEntitiesComponent\n          description: Processing success\n        400:\n          $ref: ./components/responses.yml#/components/responses/BadRequest\n        401:\n          $ref: ./components/responses.yml#/components/responses/InvalidToken\n        403:\n          $ref: ./components/responses.yml#/components/responses/InsufficientScopes\n        500:\n          $ref: ./components/responses.yml#/components/responses/InternalServerError\n        503:\n          $ref: ./components/responses.yml#/components/responses/ServerTemporarilyUnavailable\n      tags:\n      - device-asset\n    patch:\n      description: attributeが更新可能\n      operationId: updateDeviceEntitiesComponents\n      parameters:\n      - $ref: ./components/parameters.yml#/components/parameters/key\n      requestBody:\n        content:\n          application/json:\n            schema:\n              items:\n                $ref: ./components/deviceasset-component.openapi.yml#/components/schemas/DeviceEntitiesComponent\n              type: array\n        required: true\n      responses:\n        200:\n          description: Processing success\n        400:\n          $ref: ./components/responses.yml#/components/responses/BadRequest\n        401:\n          $ref: ./components/responses.yml#/components/responses/InvalidToken\n        403:\n          $ref: ./components/responses.yml#/components/responses/InsufficientScopes\n        404:\n          $ref: ./components/responses.yml#/components/responses/ResourceNotFound\n        500:\n          $ref: ./components/responses.yml#/components/responses/InternalServerError\n        503:\n          $ref: ./components/responses.yml#/components/responses/ServerTemporarilyUnavailable\n      tags:\n      - device-asset\n    post:\n      operationId: createDeviceEntitiesComponent\n      parameters:\n      - $ref: ./components/parameters.yml#/components/parameters/key\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: ./components/deviceasset-component.openapi.yml#/components/schemas/DeviceEntitiesComponent\n        required: true\n      responses:\n        200:\n          content:\n            application/json:\n              schema:\n                $ref: ./components/deviceasset-component.openapi.yml#/components/schemas/SingleDeviceEntitiesComponent\n          description: Processing success\n        400:\n          $ref: ./components/responses.yml#/components/responses/BadRequest\n        401:\n          $ref: ./components/responses.yml#/components/responses/InvalidToken\n        403:\n          $ref: ./components/responses.yml#/components/responses/InsufficientScopes\n        409:\n          $ref: ./components/responses.yml#/components/responses/Conflict\n        500:\n          $ref: ./components/responses.yml#/components/responses/InternalServerError\n        503:\n          $ref: ./components/responses.yml#/components/responses/ServerTemporarilyUnavailable\n      tags:\n      - device-asset\n  /v2/device_entities/{key}/components/{component_id}:\n    delete:\n      operationId: deleteDeviceEntitiesComponent\n      parameters:\n      - $ref: ./components/parameters.yml#/components/parameters/key\n      - $ref: ./components/parameters.yml#/components/parameters/component\n      - $ref: ./components/parameters.yml#/components/parameters/is_recursive\n      responses:\n        200:\n          description: Processing success\n        400:\n          $ref: ./components/responses.yml#/components/responses/BadRequest\n        401:\n          $ref: ./components/responses.yml#/components/responses/InvalidToken\n        403:\n          $ref: ./components/responses.yml#/components/responses/InsufficientScopes\n        404:\n          $ref: ./components/responses.yml#/components/responses/ResourceNotFound\n        500:\n          $ref: ./components/responses.yml#/components/responses/InternalServerError\n        503:\n          $ref: ./components/responses.yml#/components/responses/ServerTemporarilyUnavailable\n      tags:\n      - device-asset\n    get:\n      operationId: getDeviceEntitiesComponent\n      parameters:\n      - $ref: ./components/parameters.yml#/components/parameters/key\n      - $ref: ./components/parameters.yml#/components/parameters/component\n      responses:\n        200:\n          content:\n            application/json:\n              schema:\n                $ref: ./components/deviceasset-component.openapi.yml#/components/schemas/SingleDeviceEntitiesComponent\n          description: Processing success\n        400:\n          $ref: ./components/responses.yml#/components/responses/BadRequest\n        401:\n          $ref: ./components/responses.yml#/components/responses/InvalidToken\n        403:\n          $ref: ./components/responses.yml#/components/responses/InsufficientScopes\n        404:\n          $ref: ./components/responses.yml#/components/responses/ResourceNotFound\n        500:\n          $ref: ./components/responses.yml#/components/responses/InternalServerError\n        503:\n          $ref: ./components/responses.yml#/components/responses/ServerTemporarilyUnavailable\n      tags:\n      - device-asset\n    patch:\n      operationId: updateDeviceEntitiesComponent\n      parameters:\n      - $ref: ./components/parameters.yml#/components/parameters/key\n      - $ref: ./components/parameters.yml#/components/parameters/component\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: ./components/deviceasset-component.openapi.yml#/components/schemas/DeviceEntitiesComponentUpdateRequest\n      responses:\n        200:\n          content:\n            application/json:\n              schema:\n                $ref: ./components/deviceasset-component.openapi.yml#/components/schemas/SingleDeviceEntitiesComponent\n          description: Processing success\n        400:\n          $ref: ./components/responses.yml#/components/responses/BadRequest\n        401:\n          $ref: ./components/responses.yml#/components/responses/InvalidToken\n        403:\n          $ref: ./components/responses.yml#/components/responses/InsufficientScopes\n        404:\n          $ref: ./components/responses.yml#/components/responses/ResourceNotFound\n        500:\n          $ref: ./components/responses.yml#/components/responses/InternalServerError\n        503:\n          $ref: ./components/responses.yml#/components/responses/ServerTemporarilyUnavailable\n      tags:\n      - device-asset\n  /v2/device_entities/{key}/lifecycles:\n    get:\n      operationId: getDeviceEntitiesLifecycles\n      parameters:\n      - $ref: ./components/parameters.yml#/components/parameters/key\n      - $ref: ./components/parameters.yml#/components/parameters/offset\n      - $ref: ./components/parameters.yml#/components/parameters/limit\n      - $ref: ./components/parameters.yml#/components/parameters/order\n      - $ref: ./components/parameters.yml#/components/parameters/order_by\n      - $ref: ./components/parameters.yml#/components/parameters/event_kind\n      - $ref: ./components/parameters.yml#/components/parameters/event_mode\n      - $ref: ./components/parameters.yml#/components/parameters/event_type\n      - $ref: ./components/parameters.yml#/components/parameters/component_id\n      - $ref: ./components/parameters.yml#/components/parameters/before_id\n      - $ref: ./components/parameters.yml#/components/parameters/after_id\n      - $ref: ./components/parameters.yml#/components/parameters/start_event_at\n      - $ref: ./components/parameters.yml#/components/parameters/end_event_at\n      responses:\n        200:\n          content:\n            application/json:\n              schema:\n                $ref: ./components/deviceasset-component.openapi.yml#/components/schemas/MultipleLifeCycle\n          description: Processing success\n        400:\n          $ref: ./components/responses.yml#/components/responses/BadRequest\n        401:\n          $ref: ./components/responses.yml#/components/responses/InvalidToken\n        403:\n          $ref: ./components/responses.yml#/components/responses/InsufficientScopes\n        404:\n          $ref: ./components/responses.yml#/components/responses/ResourceNotFound\n        500:\n          $ref: ./components/responses.yml#/components/responses/InternalServerError\n        503:\n          $ref: ./components/responses.yml#/components/responses/ServerTemporarilyUnavailable\n      tags:\n      - device-asset\n    post:\n      operationId: createDeviceEntitiesLifecycle\n      parameters:\n      - $ref: ./components/parameters.yml#/components/parameters/key\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: ./components/deviceasset-component.openapi.yml#/components/schemas/LifeCycleRequest\n        required: true\n      responses:\n        200:\n          content:\n            application/json:\n              schema:\n                $ref: ./components/deviceasset-component.openapi.yml#/components/schemas/SingleLifeCycle\n          description: Processing success\n        400:\n          $ref: ./components/responses.yml#/components/responses/BadRequest\n        401:\n          $ref: ./components/responses.yml#/components/responses/InvalidToken\n        403:\n          $ref: ./components/responses.yml#/components/responses/InsufficientScopes\n        500:\n          $ref: ./components/responses.yml#/components/responses/InternalServerError\n        503:\n          $ref: ./components/responses.yml#/components/responses/ServerTemporarilyUnavailable\n      tags:\n      - device-asset\n  /v2/device_entities/{key}/lifecycles/{lifecycle_id}:\n    delete:\n      operationId: deleteDeviceEntitiesLifecycle\n      parameters:\n      - $ref: ./components/parameters.yml#/components/parameters/key\n      - $ref: ./components/parameters.yml#/components/parameters/lifecycle_id\n      responses:\n        200:\n          description: Processing success\n        400:\n          $ref: ./components/responses.yml#/components/responses/BadRequest\n        401:\n          $ref: ./components/responses.yml#/components/responses/InvalidToken\n        403:\n          $ref: ./components/responses.yml#/components/responses/InsufficientScopes\n        404:\n          $ref: ./components/responses.yml#/components/responses/ResourceNotFound\n        500:\n          $ref: ./components/responses.yml#/components/responses/InternalServerError\n        503:\n          $ref: ./components/responses.yml#/components/responses/ServerTemporarilyUnavailable\n      tags:\n      - device-asset\n    get:\n      operationId: getDeviceEntitiesLifecycle\n      parameters:\n      - $ref: ./components/parameters.yml#/components/parameters/key\n      - $ref: ./components/parameters.yml#/components/parameters/lifecycle_id\n      responses:\n        200:\n          content:\n            application/json:\n              schema:\n                $ref: ./components/deviceasset-component.openapi.yml#/components/schemas/SingleLifeCycle\n          description: Processing success\n        400:\n          $ref: ./components/responses.yml#/components/responses/BadRequest\n        401:\n          $ref: ./components//responses.yml#/components/responses/InvalidToken\n        403:\n          $ref: ./components/responses.yml#/components/responses/InsufficientScopes\n        404:\n          $ref: ./components/responses.yml#/components/responses/ResourceNotFound\n        500:\n          $ref: ./components/responses.yml#/components/responses/InternalServerError\n        503:\n          $ref: ./components/responses.yml#/components/responses/ServerTemporarilyUnavailable\n      tags:\n      - device-asset\n  /v2/device_models:\n    get:\n      operationId: getDeviceModels\n      parameters:\n      - $ref: ./components/parameters.yml#/components/parameters/offset\n      - $ref: ./components/parameters.yml#/components/parameters/limit\n      - $ref: ./components/parameters.yml#/components/parameters/order\n      - $ref: ./components/parameters.yml#/components/parameters/order_by\n      - $ref: ./components/parameters.yml#/components/parameters/name_query\n      - $ref: ./components/parameters.yml#/components/parameters/maker_id\n      - $ref: ./components/parameters.yml#/components/parameters/version\n      - $ref: ./components/parameters.yml#/components/parameters/resource_owner_id\n      - $ref: ./components/parameters.yml#/components/parameters/component_key\n      - $ref: ./components/parameters.yml#/components/parameters/component_value\n      responses:\n        200:\n          content:\n            application/json:\n              schema:\n                $ref: ./components/deviceasset-component.openapi.yml#/components/schemas/MultipleDeviceModel\n          description: Processing success\n        400:\n          $ref: ./components/responses.yml#/components/responses/BadRequest\n        401:\n          $ref: ./components/responses.yml#/components/responses/InvalidToken\n        403:\n          $ref: ./components/responses.yml#/components/responses/InsufficientScopes\n        500:\n          $ref: ./components/responses.yml#/components/responses/InternalServerError\n        501:\n          $ref: ./components/responses.yml#/components/responses/ServerTemporarilyUnavailable\n      security:\n      - bearerAuth: []\n      tags:\n      - device-asset\n    post:\n      operationId: createDeviceModel\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: ./components/deviceasset-component.openapi.yml#/components/schemas/DeviceModelRequest\n        required: true\n      responses:\n        200:\n          content:\n            application/json:\n              schema:\n                $ref: ./components/deviceasset-component.openapi.yml#/components/schemas/SingleDeviceModel\n          description: Processing success\n        400:\n          $ref: ./components/responses.yml#/components/responses/BadRequest\n        401:\n          $ref: ./components/responses.yml#/components/responses/InvalidToken\n        403:\n          $ref: ./components/responses.yml#/components/responses/InsufficientScopes\n        409:\n          $ref: ./components/responses.yml#/components/responses/Conflict\n        500:\n          $ref: ./components/responses.yml#/components/responses/InternalServerError\n        503:\n          $ref: ./components/responses.yml#/components/responses/ServerTemporarilyUnavailable\n      tags:\n      - device-asset\n  /v2/device_models/{name}:\n    delete:\n      operationId: deleteDeviceModel\n      parameters:\n      - $ref: ./components/parameters.yml#/components/parameters/name\n      responses:\n        200:\n          description: Processing success\n        400:\n          $ref: ./components/responses.yml#/components/responses/BadRequest\n        401:\n          $ref: ./components/responses.yml#/components/responses/InvalidToken\n        403:\n          $ref: ./components/responses.yml#/components/responses/InsufficientScopes\n        404:\n          $ref: ./components/responses.yml#/components/responses/ResourceNotFound\n        500:\n          $ref: ./components/responses.yml#/components/responses/InternalServerError\n        503:\n          $ref: ./components/responses.yml#/components/responses/ServerTemporarilyUnavailable\n      tags:\n      - device-asset\n    get:\n      operationId: getDeviceModel\n      parameters:\n      - $ref: ./components/parameters.yml#/components/parameters/name\n      responses:\n        200:\n          content:\n            application/json:\n              schema:\n                $ref: ./components/deviceasset-component.openapi.yml#/components/schemas/SingleDeviceModel\n          description: Processing success\n        400:\n          $ref: ./components/responses.yml#/components/responses/BadRequest\n        401:\n          $ref: ./components/responses.yml#/components/responses/InvalidToken\n        403:\n          $ref: ./components/responses.yml#/components/responses/InsufficientScopes\n        404:\n          $ref: ./components/responses.yml#/components/responses/ResourceNotFound\n        500:\n          $ref: ./components/responses.yml#/components/responses/InternalServerError\n        503:\n          $ref: ./components/responses.yml#/components/responses/ServerTemporarilyUnavailable\n      security:\n      - bearerAuth: []\n      tags:\n      - device-asset\n    patch:\n      description: maker_id, version及びcomponentsが更新可能\n      operationId: updateDeviceModel\n      parameters:\n      - $ref: ./components/parameters.yml#/components/parameters/name\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: ./components/deviceasset-component.openapi.yml#/components/schemas/DeviceModelUpdateRequest\n        required: true\n      responses:\n        200:\n          content:\n            application/json:\n              schema:\n                $ref: ./components/deviceasset-component.openapi.yml#/components/schemas/SingleDeviceModel\n          description: Processing success\n        400:\n          $ref: ./components/responses.yml#/components/responses/BadRequest\n        401:\n          $ref: ./components/responses.yml#/components/responses/InvalidToken\n        403:\n          $ref: ./components/responses.yml#/components/responses/InsufficientScopes\n        404:\n          $ref: ./components/responses.yml#/components/responses/ResourceNotFound\n        500:\n          $ref: ./components/responses.yml#/components/responses/InternalServerError\n        501:\n          $ref: ./components/responses.yml#/components/responses/ServerTemporarilyUnavailable\n      security:\n      - bearerAuth: []\n      tags:\n      - device-asset\n  /v2/device_models/{name}/components:\n    get:\n      operationId: getDeviceModelsComponents\n      parameters:\n      - $ref: ./components/parameters.yml#/components/parameters/name\n      responses:\n        200:\n          content:\n            application/json:\n              schema:\n                $ref: ./components/deviceasset-component.openapi.yml#/components/schemas/MultipleConstitutionComponent\n          description: Processing success\n        400:\n          $ref: ./components/responses.yml#/components/responses/BadRequest\n        401:\n          $ref: ./components/responses.yml#/components/responses/InvalidToken\n        403:\n          $ref: ./components/responses.yml#/components/responses/InsufficientScopes\n        404:\n          $ref: ./components/responses.yml#/components/responses/ResourceNotFound\n        500:\n          $ref: ./components/responses.yml#/components/responses/InternalServerError\n        503:\n          $ref: ./components/responses.yml#/components/responses/ServerTemporarilyUnavailable\n      security:\n      - bearerAuth: []\n      tags:\n      - device-asset\n  /v2/device_models/{name}/entities:\n    post:\n      operationId: createInventory\n      parameters:\n      - $ref: ./components/parameters.yml#/components/parameters/name\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: ./components/device-component.openapi.yml#/components/schemas/Inventory\n        required: true\n      responses:\n        200:\n          content:\n            application/json:\n              schema:\n                $ref: ./components/deviceasset-component.openapi.yml#/components/schemas/SingleDeviceModelsEntity\n          description: Processing success\n        400:\n          $ref: ./components/responses.yml#/components/responses/BadRequest\n        401:\n          $ref: ./components/responses.yml#/components/responses/InvalidToken\n        403:\n          $ref: ./components/responses.yml#/components/responses/InsufficientScopes\n        409:\n          $ref: ./components/responses.yml#/components/responses/Conflict\n        500:\n          $ref: ./components/responses.yml#/components/responses/InternalServerError\n        503:\n          $ref: ./components/responses.yml#/components/responses/ServerTemporarilyUnavailable\n      tags:\n      - device-asset\n  /v2/devices:\n    get:\n      description: 'SUPPORTED APPLICATION TYPE: Web, ネイティブ, クライアント\n\n        REQUIRED SCOPES: device.read'\n      operationId: getDevices\n      parameters:\n      - $ref: ./components/parameters.yml#/components/parameters/offset\n      - $ref: ./components/parameters.yml#/components/parameters/limit\n      - $ref: ./components/parameters.yml#/components/parameters/order\n      - $ref: ./components/parameters.yml#/components/parameters/order_by\n      - $ref: ./components/parameters.yml#/components/parameters/lang\n      - $ref: ./components/parameters.yml#/components/parameters/is_dev\n      - $ref: ./components/parameters.yml#/components/parameters/is_public\n      - $ref: ./components/parameters.yml#/components/parameters/resource_owner_id\n      - $ref: ./components/parameters.yml#/components/parameters/name_query\n      - $ref: ./components/parameters.yml#/components/parameters/id_number\n      - $ref: ./components/parameters.yml#/components/parameters/definition_id\n      - $ref: ./components/parameters.yml#/components/parameters/definition_tag\n      - $ref: ./components/parameters.yml#/components/parameters/inventory_key\n      - $ref: ./components/parameters.yml#/components/parameters/inventory_value\n      responses:\n        200:\n          content:\n            application/json:\n              schema:\n                $ref: ./components/device-component.openapi.yml#/components/schemas/MultipleDevice\n          description: ''\n      security:\n      - bearerAuth: []\n      summary: デバイスの一覧を取得する\n      tags:\n      - device\n    post:\n      description: \"SUPPORTED APPLICATION TYPE: Web, ネイティブ\\nREQUIRED SCOPES: user.profile\\n\\\n        * is_managedが managed または full_managed の場合\\n  * Request.body.client_id_listに設定されたID毎にアプリケーション種別がデバイスのOAuthClientが作成されます。(rsa_publickeyを指定する必要があります)\"\n      operationId: createDevice\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: ./components/device-component.openapi.yml#/components/schemas/DeviceInfo\n        required: true\n      responses:\n        200:\n          content:\n            application/json:\n              schema:\n                $ref: ./components/device-component.openapi.yml#/components/schemas/SingleDevice\n          description: ''\n      security:\n      - bearerAuth: []\n      summary: デバイスの登録\n      tags:\n      - device\n  /v2/devices/group_policies:\n    get:\n      operationId: getDevicePolicies\n      parameters:\n      - $ref: ./components/parameters.yml#/components/parameters/limit\n      - $ref: ./components/parameters.yml#/components/parameters/offset\n      - $ref: ./components/parameters.yml#/components/parameters/order\n      - $ref: ./components/parameters.yml#/components/parameters/order_by\n      - $ref: ./components/parameters.yml#/components/parameters/resource_owner_id\n      responses:\n        200:\n          content:\n            application/json:\n              schema:\n                $ref: ./components/device-component.openapi.yml#/components/schemas/MultipleDevicePolicy\n          description: OK\n      security:\n      - bearerAuth: []\n      tags:\n      - device\n    post:\n      operationId: createDevicePolicy\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: ./components/device-component.openapi.yml#/components/schemas/DevicePolicyRequest\n        required: true\n      responses:\n        200:\n          content:\n            application/json:\n              schema:\n                $ref: ./components/device-component.openapi.yml#/components/schemas/DevicePolicy\n          description: OK\n      security:\n      - bearerAuth: []\n      tags:\n      - device\n  /v2/devices/group_policies/{policy_id}:\n    delete:\n      operationId: deletePolicy\n      parameters:\n      - $ref: ./components/parameters.yml#/components/parameters/policy_id\n      responses:\n        200:\n          description: OK\n      security:\n      - bearerAuth: []\n      tags:\n      - device\n  /v2/devices/monitoring/latest:\n    post:\n      operationId: getDeviceMonitoringsLatest\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: ./components/device-component.openapi.yml#/components/schemas/DeviceMonitoringIDsRequest\n        required: true\n      responses:\n        200:\n          content:\n            application/json:\n              schema:\n                $ref: ./components/device-component.openapi.yml#/components/schemas/MultipleDeviceMonitoring\n          description: OK\n      security:\n      - bearerAuth: []\n      tags:\n      - device\n  /v2/devices/profile:\n    get:\n      operationId: getDeviceProfile\n      parameters:\n      - $ref: ./components/parameters.yml#/components/parameters/lang\n      - $ref: ./components/parameters.yml#/components/parameters/is_dev\n      responses:\n        200:\n          content:\n            application/json:\n              schema:\n                $ref: ./components/device-component.openapi.yml#/components/schemas/SingleDevice\n          description: OK\n      summary: device.profile\n      tags:\n      - device\n  /v2/devices/{device_id}:\n    delete:\n      operationId: deleteDevice\n      parameters:\n      - $ref: ./components/parameters.yml#/components/parameters/device_id_required\n      responses:\n        200:\n          description: ''\n      security:\n      - bearerAuth: []\n      tags:\n      - device\n    get:\n      description: 'SUPPORTED APPLICATION TYPE: Web, ネイティブ, クライアント\n\n        REQUIRED SCOPES: device.read'\n      operationId: getDevice\n      parameters:\n      - $ref: ./components/parameters.yml#/components/parameters/lang\n      - $ref: ./components/parameters.yml#/components/parameters/is_dev\n      - $ref: ./components/parameters.yml#/components/parameters/device_id_required\n      responses:\n        200:\n          content:\n            application/json:\n              schema:\n                $ref: ./components/device-component.openapi.yml#/components/schemas/SingleDevice\n          description: ''\n      security:\n      - bearerAuth: []\n      summary: 指定したidのデバイスの情報を取得する\n      tags:\n      - device\n    patch:\n      description: 'SUPPORTED APPLICATION TYPE: Web, ネイティブ, クライアント\n\n        REQUIRED SCOPES: device.write\n\n        * Request.body.client_id_listに設定されたアプリケーションクライアント毎にデバイスクライアントを作成します。\n\n        * is_managedをunmanagedに変更した場合は、device.client_listに登録されているデバイスクライアントをすべて削除します。(OAuthClient\n        APIを利用してデバイスクライアントの削除を行います)\n\n        * is_managedがfull_managedのデバイス管理エージェント固有のデバイスクライアントに関しては、ディアクティベーションでのみ削除可能です。'\n      operationId: updateDevice\n      parameters:\n      - $ref: ./components/parameters.yml#/components/parameters/device_id_required\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: ./components/device-component.openapi.yml#/components/schemas/DeviceUpdateRequest\n        required: true\n      responses:\n        200:\n          content:\n            application/json:\n              schema:\n                $ref: ./components/device-component.openapi.yml#/components/schemas/SingleDevice\n          description: ''\n      security:\n      - bearerAuth: []\n      summary: 指定したidのデバイス情報を更新する\n      tags:\n      - device\n  /v2/devices/{device_id}/device_clients:\n    post:\n      description: '* 指定したデバイスにクライアントを作成します。\n\n        * 指定したデバイスIDが存在しない場合は、エラー(404 Not Found)となります。\n\n        * 指定したデバイスにクライアントが存在しない状態で作成した場合、デバイス管理区分を一部管理に変更します。'\n      operationId: createDeviceClient\n      parameters:\n      - $ref: ./components/parameters.yml#/components/parameters/device_id\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: ./components/device-component.openapi.yml#/components/schemas/DeviceClientRequest\n        required: true\n      responses:\n        200:\n          content:\n            application/json:\n              schema:\n                $ref: ./components/device-component.openapi.yml#/components/schemas/DeviceClientList\n          description: OK\n      tags:\n      - device\n  /v2/devices/{device_id}/device_clients/{client_id}:\n    delete:\n      description: -| * 指定したアプリケーションクライアントIDに紐づくデバイスクライアントを削除します。 * 指定したデバイスID、またはアプリケーションクライアントIDが存在しない場合は、エラー(404\n        Not Found)となります。 * 指定したデバイスクライアントを削除後、デバイスに紐づくデバイスクライアントが存在しない場合は、デバイス管理区分を管理外に変更します。\n        * デバイス管理区分が完全管理のデバイス管理エージェント固有のデバイスクライアントに関しては、ディアクティベーションでのみ削除可能です。\n      operationId: deleteDeviceClient\n      parameters:\n      - $ref: ./components/parameters.yml#/components/parameters/device_id\n      - $ref: ./components/parameters.yml#/components/parameters/client_id\n      responses:\n        200:\n          description: OK\n      summary: device.write\n      tags:\n      - device\n    patch:\n      description: -| * 指定したアプリケーションクライアントIDに紐づくデバイスクライアントのRSA公開鍵を更新します。 * 指定したデバイスID、またはアプリケーションクライアントIDが存在しない場合は、エラー(404\n        Not Found)となります。\n      operationId: updateDeviceClient\n      parameters:\n      - $ref: ./components/parameters.yml#/components/parameters/device_id\n      - $ref: ./components/parameters.yml#/components/parameters/client_id\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: ./components/device-component.openapi.yml#/components/schemas/RsaPublicKey\n        required: true\n      responses:\n        200:\n          content:\n            application/json:\n              schema:\n                $ref: ./components/device-component.openapi.yml#/components/schemas/SingleDeviceClientList\n          description: OK\n      summary: device.write\n      tags:\n      - device\n  /v2/devices/{device_id}/inventory/latest:\n    get:\n      operationId: getDeviceInventoryLatest\n      parameters:\n      - $ref: ./components/parameters.yml#/components/parameters/device_id\n      responses:\n        200:\n          content:\n            application/json:\n              schema:\n                $ref: ./components/device-component.openapi.yml#/components/schemas/DeviceInventory\n          description: OK\n      security:\n      - bearerAuth: []\n      tags:\n      - device\n  /v2/devices/{device_id}/monitoring/latest:\n    get:\n      operationId: getDeviceMonitoringLatest\n      parameters:\n      - $ref: ./components/parameters.yml#/components/parameters/device_id\n      responses:\n        200:\n          content:\n            application/json:\n              schema:\n                $ref: ./components/device-component.openapi.yml#/components/schemas/SingleDeviceMonitoring\n          description: OK\n      security:\n      - bearerAuth: []\n      tags:\n      - device\n  /v2/file_storage/buckets:\n    get:\n      description: file_storage.read\n      operationId: getBuckets\n      parameters:\n      - $ref: ./components/parameters.yml#/components/parameters/limit\n      - $ref: ./components/parameters.yml#/components/parameters/offset\n      - $ref: ./components/parameters.yml#/components/parameters/order\n      - $ref: ./components/parameters.yml#/components/parameters/order_by\n      - $ref: ./components/parameters.yml#/components/parameters/resource_owner_id\n      - $ref: ./components/parameters.yml#/components/parameters/name_query\n      responses:\n        200:\n          content:\n            application/json:\n              schema:\n                $ref: ./components/filestorage-component.openapi.yml#/components/schemas/MultipleBucket\n          description: OK\n        400:\n          $ref: ./components/responses.yml#/components/responses/invalid_request\n        401:\n          $ref: ./components/responses.yml#/components/responses/invalid_token\n        403:\n          $ref: ./components/responses.yml#/components/responses/insufficient_scopes\n        500:\n          $ref: ./components/responses.yml#/components/responses/internal_server_error\n        503:\n          $ref: ./components/responses.yml#/components/responses/server_temporarily_unavailable\n      security:\n      - bearerAuth: []\n      tags:\n      - fileStorage\n    post:\n      description: file_storage.write\n      operationId: createBucket\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: ./components/filestorage-component.openapi.yml#/components/schemas/BucketRequest\n        required: true\n      responses:\n        200:\n          content:\n            application/json:\n              schema:\n                $ref: ./components/filestorage-component.openapi.yml#/components/schemas/SingleBucket\n          description: OK\n        400:\n          $ref: ./components/responses.yml#/components/responses/invalid_request\n        401:\n          $ref: ./components/responses.yml#/components/responses/invalid_token\n        403:\n          $ref: ./components/responses.yml#/components/responses/insufficient_scopes\n        409:\n          $ref: ./components/responses.yml#/components/responses/conflict_request\n        500:\n          $ref: ./components/responses.yml#/components/responses/internal_server_error\n        503:\n          $ref: ./components/responses.yml#/components/responses/server_temporarily_unavailable\n      security:\n      - bearerAuth: []\n      tags:\n      - fileStorage\n  /v2/file_storage/buckets/{bucket_id}:\n    delete:\n      description: file_storage.write\n      operationId: deleteBucket\n      parameters:\n      - $ref: ./components/parameters.yml#/components/parameters/bucket_id_required\n      responses:\n        200:\n          description: OK\n        400:\n          $ref: ./components/responses.yml#/components/responses/invalid_request\n        401:\n          $ref: ./components/responses.yml#/components/responses/invalid_token\n        403:\n          $ref: ./components/responses.yml#/components/responses/insufficient_scopes\n        404:\n          $ref: ./components/responses.yml#/components/responses/resource_not_found\n        409:\n          $ref: ./components/responses.yml#/components/responses/conflict_request\n        500:\n          $ref: ./components/responses.yml#/components/responses/internal_server_error\n        503:\n          $ref: ./components/responses.yml#/components/responses/server_temporarily_unavailable\n      security:\n      - bearerAuth: []\n      tags:\n      - fileStorage\n    get:\n      description: file_storage.read\n      operationId: getBucket\n      parameters:\n      - $ref: ./components/parameters.yml#/components/parameters/bucket_id_required\n      responses:\n        200:\n          content:\n            application/json:\n              schema:\n                $ref: ./components/filestorage-component.openapi.yml#/components/schemas/SingleBucket\n          description: OK\n        400:\n          $ref: ./components/responses.yml#/components/responses/invalid_request\n        401:\n          $ref: ./components/responses.yml#/components/responses/invalid_token\n        403:\n          $ref: ./components/responses.yml#/components/responses/insufficient_scopes\n        404:\n          $ref: ./components/responses.yml#/components/responses/resource_not_found\n        409:\n          $ref: ./components/responses.yml#/components/responses/conflict_request\n        500:\n          $ref: ./components/responses.yml#/components/responses/internal_server_error\n        503:\n          $ref: ./components/responses.yml#/components/responses/server_temporarily_unavailable\n      security:\n      - bearerAuth: []\n      tags:\n      - fileStorage\n    patch:\n      operationId: updateBucket\n      parameters:\n      - $ref: ./components/parameters.yml#/components/parameters/bucket_id_required\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: ./components/filestorage-component.openapi.yml#/components/schemas/BucketName\n        required: true\n      responses:\n        200:\n          description: OK\n        400:\n          $ref: ./components/responses.yml#/components/responses/invalid_request\n        401:\n          $ref: ./components/responses.yml#/components/responses/invalid_token\n        403:\n          $ref: ./components/responses.yml#/components/responses/insufficient_scopes\n        404:\n          $ref: ./components/responses.yml#/components/responses/resource_not_found\n        409:\n          $ref: ./components/responses.yml#/components/responses/conflict_request\n        500:\n          $ref: ./components/responses.yml#/components/responses/internal_server_error\n        503:\n          $ref: ./components/responses.yml#/components/responses/server_temporarily_unavailable\n      security:\n      - bearerAuth: []\n      tags:\n      - fileStorage\n  /v2/file_storage/buckets/{bucket_id}/create_directory:\n    post:\n      description: file_storage.write\n      operationId: createDirectory\n      parameters:\n      - $ref: ./components/parameters.yml#/components/parameters/bucket_id_required\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: ./components/filestorage-component.openapi.yml#/components/schemas/NodeRequest\n        required: true\n      responses:\n        200:\n          content:\n            application/json:\n              schema:\n                $ref: ./components/filestorage-component.openapi.yml#/components/schemas/SingleNode\n          description: ''\n        400:\n          $ref: ./components/responses.yml#/components/responses/invalid_request\n        401:\n          $ref: ./components/responses.yml#/components/responses/invalid_token\n        403:\n          $ref: ./components/responses.yml#/components/responses/insufficient_scopes\n        404:\n          $ref: ./components/responses.yml#/components/responses/resource_not_found\n        409:\n          $ref: ./components/responses.yml#/components/responses/conflict_request\n        500:\n          $ref: ./components/responses.yml#/components/responses/internal_server_error\n        503:\n          $ref: ./components/responses.yml#/components/responses/server_temporarily_unavailable\n      security:\n      - bearerAuth: []\n      tags:\n      - fileStorage\n  /v2/file_storage/buckets/{bucket_id}/download:\n    get:\n      description: file_storage.download\n      operationId: downloadFile\n      parameters:\n      - $ref: ./components/parameters.yml#/components/parameters/bucket_id_required\n      - $ref: ./components/parameters.yml#/components/parameters/node_id_query\n      - $ref: ./components/parameters.yml#/components/parameters/key_query\n      responses:\n        200:\n          content:\n            /*:\n              schema:\n                format: byte\n                type: string\n          description: OK\n        400:\n          $ref: ./components/responses.yml#/components/responses/invalid_request\n        401:\n          $ref: ./components/responses.yml#/components/responses/invalid_token\n        403:\n          $ref: ./components/responses.yml#/components/responses/insufficient_scopes\n        404:\n          $ref: ./components/responses.yml#/components/responses/resource_not_found\n        500:\n          $ref: ./components/responses.yml#/components/responses/internal_server_error\n        503:\n          $ref: ./components/responses.yml#/components/responses/server_temporarily_unavailable\n      security:\n      - bearerAuth: []\n      tags:\n      - fileStorage\n  /v2/file_storage/buckets/{bucket_id}/nodes:\n    get:\n      description: file_storage.read\n      operationId: getNodes\n      parameters:\n      - $ref: ./components/parameters.yml#/components/parameters/bucket_id_required\n      - $ref: ./components/parameters.yml#/components/parameters/parent_node_id\n      - $ref: ./components/parameters.yml#/components/parameters/recursive\n      - $ref: ./components/parameters.yml#/components/parameters/name_query\n      - $ref: ./components/parameters.yml#/components/parameters/key_query\n      - $ref: ./components/parameters.yml#/components/parameters/is_directory\n      - $ref: ./components/parameters.yml#/components/parameters/limit\n      - $ref: ./components/parameters.yml#/components/parameters/offset\n      - $ref: ./components/parameters.yml#/components/parameters/node_order_by\n      - $ref: ./components/parameters.yml#/components/parameters/order\n      responses:\n        200:\n          content:\n            application/json:\n              schema:\n                $ref: ./components/filestorage-component.openapi.yml#/components/schemas/MultipleNode\n          description: ''\n        400:\n          $ref: ./components/responses.yml#/components/responses/invalid_request\n        401:\n          $ref: ./components/responses.yml#/components/responses/invalid_token\n        403:\n          $ref: ./components/responses.yml#/components/responses/insufficient_scopes\n        404:\n          $ref: ./components/responses.yml#/components/responses/resource_not_found\n        409:\n          $ref: ./components/responses.yml#/components/responses/conflict_request\n        500:\n          $ref: ./components/responses.yml#/components/responses/internal_server_error\n        503:\n          $ref: ./components/responses.yml#/components/responses/server_temporarily_unavailable\n      security:\n      - bearerAuth: []\n      tags:\n      - fileStorage\n  /v2/file_storage/buckets/{bucket_id}/nodes/{node_id}:\n    delete:\n      description: file_storage.write\n      operationId: deleteNode\n      parameters:\n      - $ref: ./components/parameters.yml#/components/parameters/bucket_id_required\n      - $ref: ./components/parameters.yml#/components/parameters/node_id_required\n      - $ref: ./components/parameters.yml#/components/parameters/directory_size\n      responses:\n        200:\n          description: OK\n        400:\n          $ref: ./components/responses.yml#/components/responses/invalid_request\n        401:\n          $ref: ./components/responses.yml#/components/responses/invalid_token\n        403:\n          $ref: ./components/responses.yml#/components/responses/insufficient_scopes\n        404:\n          $ref: ./components/responses.yml#/components/responses/resource_not_found\n        500:\n          $ref: ./components/responses.yml#/components/responses/internal_server_error\n        503:\n          $ref: ./components/responses.yml#/components/responses/server_temporarily_unavailable\n      security:\n      - bearerAuth: []\n      tags:\n      - fileStorage\n    get:\n      description: file_storage.read\n      operationId: getNode\n      parameters:\n      - $ref: ./components/parameters.yml#/components/parameters/bucket_id_required\n      - $ref: ./components/parameters.yml#/components/parameters/node_id_required\n      - $ref: ./components/parameters.yml#/components/parameters/directory_size\n      responses:\n        200:\n          content:\n            application/json:\n              schema:\n                $ref: ./components/filestorage-component.openapi.yml#/components/schemas/SingleNode\n          description: ''\n        400:\n          $ref: ./components/responses.yml#/components/responses/invalid_request\n        401:\n          $ref: ./components/responses.yml#/components/responses/invalid_token\n        403:\n          $ref: ./components/responses.yml#/components/responses/insufficient_scopes\n        404:\n          $ref: ./components/responses.yml#/components/responses/resource_not_found\n        500:\n          $ref: ./components/responses.yml#/components/responses/internal_server_error\n        503:\n          $ref: ./components/responses.yml#/components/responses/server_temporarily_unavailable\n      security:\n      - bearerAuth: []\n      tags:\n      - fileStorage\n  /v2/file_storage/buckets/{bucket_id}/nodes/{node_id}/copy:\n    post:\n      operationId: copyNode\n      parameters:\n      - $ref: ./components/parameters.yml#/components/parameters/bucket_id_required\n      - $ref: ./components/parameters.yml#/components/parameters/node_id_required\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: ./components/filestorage-component.openapi.yml#/components/schemas/BucketEditBody\n        required: true\n      responses:\n        200:\n          content:\n            application/json:\n              schema:\n                $ref: ./components/filestorage-component.openapi.yml#/components/schemas/SingleNode\n          description: ''\n      security:\n      - bearerAuth: []\n      tags:\n      - fileStorage\n  /v2/file_storage/buckets/{bucket_id}/nodes/{node_id}/move:\n    post:\n      operationId: moveNode\n      parameters:\n      - $ref: ./components/parameters.yml#/components/parameters/bucket_id_required\n      - $ref: ./components/parameters.yml#/components/parameters/node_id_required\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: ./components/filestorage-component.openapi.yml#/components/schemas/BucketEditBody\n        required: true\n      responses:\n        200:\n          content:\n            application/json:\n              schema:\n                $ref: ./components/filestorage-component.openapi.yml#/components/schemas/SingleNode\n          description: ''\n      security:\n      - bearerAuth: []\n      tags:\n      - fileStorage\n  /v2/file_storage/buckets/{bucket_id}/nodes/{node_id}/rename:\n    post:\n      operationId: renameNode\n      parameters:\n      - $ref: ./components/parameters.yml#/components/parameters/bucket_id_required\n      - $ref: ./components/parameters.yml#/components/parameters/node_id_required\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: ./components/filestorage-component.openapi.yml#/components/schemas/NodeName\n        required: true\n      responses:\n        200:\n          content:\n            application/json:\n              schema:\n                $ref: ./components/filestorage-component.openapi.yml#/components/schemas/SingleNode\n          description: ''\n      security:\n      - bearerAuth: []\n      tags:\n      - fileStorage\n  /v2/file_storage/buckets/{bucket_id}/upload:\n    put:\n      description: file_storage.upload\n      operationId: uploadFile\n      parameters:\n      - $ref: ./components/parameters.yml#/components/parameters/bucket_id_required\n      - $ref: ./components/parameters.yml#/components/parameters/checksum\n      - $ref: ./components/parameters.yml#/components/parameters/name_query\n      - $ref: ./components/parameters.yml#/components/parameters/node_id_query\n      - $ref: ./components/parameters.yml#/components/parameters/key_query\n      - $ref: ./components/parameters.yml#/components/parameters/parent_node_id\n      - $ref: ./components/parameters.yml#/components/parameters/parent_key\n      - $ref: ./components/parameters.yml#/components/parameters/force\n      requestBody:\n        content:\n          application/octet-stream:\n            schema:\n              format: byte\n              type: string\n        required: true\n      responses:\n        200:\n          content:\n            application/json:\n              schema:\n                $ref: ./components/filestorage-component.openapi.yml#/components/schemas/SingleBucket\n          description: OK\n        400:\n          $ref: ./components/responses.yml#/components/responses/invalid_request\n        401:\n          $ref: ./components/responses.yml#/components/responses/invalid_token\n        403:\n          $ref: ./components/responses.yml#/components/responses/insufficient_scopes\n        404:\n          $ref: ./components/responses.yml#/components/responses/resource_not_found\n        409:\n          $ref: ./components/responses.yml#/components/responses/conflict_request\n        500:\n          $ref: ./components/responses.yml#/components/responses/internal_server_error\n        503:\n          $ref: ./components/responses.yml#/components/responses/server_temporarily_unavailable\n      security:\n      - bearerAuth: []\n      tags:\n      - fileStorage\n  /v2/geo/circles:\n    get:\n      operationId: getCircles\n      parameters:\n      - $ref: ./components/parameters.yml#/components/parameters/name_query\n      - $ref: ./components/parameters.yml#/components/parameters/label\n      - $ref: ./components/parameters.yml#/components/parameters/is_public\n      - $ref: ./components/parameters.yml#/components/parameters/resource_owner_id\n      - $ref: ./components/parameters.yml#/components/parameters/sort\n      - $ref: ./components/parameters.yml#/components/parameters/top\n      - $ref: ./components/parameters.yml#/components/parameters/skip\n      - $ref: ./components/parameters.yml#/components/parameters/lang\n      - $ref: ./components/parameters.yml#/components/parameters/is_dev\n      responses:\n        200:\n          content:\n            application/json:\n              schema:\n                $ref: ./components/geography-component.openapi.yml#/components/schemas/MultipleCircle\n          description: ''\n      security:\n      - bearerAuth: []\n      tags:\n      - geography\n    post:\n      operationId: createCircle\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: ./components/geography-component.openapi.yml#/components/schemas/Circle\n        required: true\n      responses:\n        200:\n          content:\n            application/json:\n              schema:\n                $ref: ./components/geography-component.openapi.yml#/components/schemas/SingleCircle\n          description: ''\n      security:\n      - bearerAuth: []\n      tags:\n      - geography\n  /v2/geo/circles/{circles_id}:\n    delete:\n      operationId: deleteCircle\n      parameters:\n      - $ref: ./components/parameters.yml#/components/parameters/circle_id_required\n      responses:\n        200:\n          description: ''\n      security:\n      - bearerAuth: []\n      tags:\n      - geography\n    get:\n      operationId: getCircle\n      parameters:\n      - $ref: ./components/parameters.yml#/components/parameters/circle_id_required\n      - $ref: ./components/parameters.yml#/components/parameters/lang\n      - $ref: ./components/parameters.yml#/components/parameters/is_dev\n      responses:\n        200:\n          content:\n            application/json:\n              schema:\n                $ref: ./components/geography-component.openapi.yml#/components/schemas/SingleCircle\n          description: ''\n      security:\n      - bearerAuth: []\n      tags:\n      - geography\n    patch:\n      operationId: updateCircle\n      parameters:\n      - $ref: ./components/parameters.yml#/components/parameters/circle_id_required\n      requestBody:\n        content:\n          application/json:\n            schema:\n              items:\n                $ref: ./components/general.yml#/components/schemas/DisplayInfo\n              type: array\n      responses:\n        200:\n          content:\n            application/json:\n              schema:\n                $ref: ./components/geography-component.openapi.yml#/components/schemas/SingleCircle\n          description: ''\n      security:\n      - bearerAuth: []\n      tags:\n      - geography\n  /v2/geo/points:\n    get:\n      operationId: getPoints\n      parameters:\n      - $ref: ./components/parameters.yml#/components/parameters/name_query\n      - $ref: ./components/parameters.yml#/components/parameters/label\n      - $ref: ./components/parameters.yml#/components/parameters/is_public\n      - $ref: ./components/parameters.yml#/components/parameters/resource_owner_id\n      - $ref: ./components/parameters.yml#/components/parameters/sort\n      - $ref: ./components/parameters.yml#/components/parameters/top\n      - $ref: ./components/parameters.yml#/components/parameters/skip\n      - $ref: ./components/parameters.yml#/components/parameters/lang\n      - $ref: ./components/parameters.yml#/components/parameters/is_dev\n      responses:\n        200:\n          content:\n            application/json:\n              schema:\n                $ref: ./components/geography-component.openapi.yml#/components/schemas/MultiplePoint\n          description: ''\n      security:\n      - bearerAuth: []\n      tags:\n      - geography\n    post:\n      operationId: createPoint\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: ./components/geography-component.openapi.yml#/components/schemas/PointRequest\n        required: true\n      responses:\n        200:\n          content:\n            application/json:\n              schema:\n                $ref: ./components/geography-component.openapi.yml#/components/schemas/SinglePoint\n          description: ''\n      security:\n      - bearerAuth: []\n      tags:\n      - geography\n  /v2/geo/points/{point_id}:\n    delete:\n      operationId: deletePoint\n      parameters:\n      - $ref: ./components/parameters.yml#/components/parameters/point_id_required\n      responses:\n        200:\n          content:\n            application/json:\n              schema:\n                $ref: ./components/geography-component.openapi.yml#/components/schemas/SinglePoint\n          description: ''\n      security:\n      - bearerAuth: []\n      tags:\n      - geography\n    get:\n      operationId: getPoint\n      parameters:\n      - $ref: ./components/parameters.yml#/components/parameters/point_id_required\n      - $ref: ./components/parameters.yml#/components/parameters/lang\n      - $ref: ./components/parameters.yml#/components/parameters/is_dev\n      responses:\n        200:\n          content:\n            application/json:\n              schema:\n                $ref: ./components/geography-component.openapi.yml#/components/schemas/SinglePoint\n          description: ''\n      security:\n      - bearerAuth: []\n      tags:\n      - geography\n    patch:\n      operationId: updatePoint\n      parameters:\n      - $ref: ./components/parameters.yml#/components/parameters/point_id_required\n      requestBody:\n        content:\n          application/json:\n            schema:\n              items:\n                $ref: ./components/general.yml#/components/schemas/DisplayInfo\n              type: array\n      responses:\n        200:\n          content:\n            application/json:\n              schema:\n                $ref: ./components/geography-component.openapi.yml#/components/schemas/SinglePoint\n          description: ''\n      security:\n      - bearerAuth: []\n      tags:\n      - geography\n  /v2/geo/routes:\n    get:\n      operationId: getRoutes\n      parameters:\n      - $ref: ./components/parameters.yml#/components/parameters/name_query\n      - $ref: ./components/parameters.yml#/components/parameters/label\n      - $ref: ./components/parameters.yml#/components/parameters/is_public\n      - $ref: ./components/parameters.yml#/components/parameters/resource_owner_id\n      - $ref: ./components/parameters.yml#/components/parameters/sort\n      - $ref: ./components/parameters.yml#/components/parameters/top\n      - $ref: ./components/parameters.yml#/components/parameters/skip\n      - $ref: ./components/parameters.yml#/components/parameters/lang\n      - $ref: ./components/parameters.yml#/components/parameters/is_dev\n      responses:\n        200:\n          content:\n            application/json:\n              schema:\n                $ref: ./components/geography-component.openapi.yml#/components/schemas/MultipleRoute\n          description: ''\n      security:\n      - bearerAuth: []\n      tags:\n      - geography\n    post:\n      operationId: createRoute\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: ./components/geography-component.openapi.yml#/components/schemas/Route\n        required: true\n      responses:\n        200:\n          content:\n            application/json:\n              schema:\n                $ref: ./components/geography-component.openapi.yml#/components/schemas/SingleRoute\n          description: ''\n      security:\n      - bearerAuth: []\n      tags:\n      - geography\n  /v2/geo/routes/{routes_id}:\n    delete:\n      operationId: deleteRoute\n      parameters:\n      - $ref: ./components/parameters.yml#/components/parameters/route_id_required\n      responses:\n        200:\n          description: ''\n      security:\n      - bearerAuth: []\n      tags:\n      - geography\n    get:\n      operationId: getRoute\n      parameters:\n      - $ref: ./components/parameters.yml#/components/parameters/route_id_required\n      - $ref: ./components/parameters.yml#/components/parameters/lang\n      - $ref: ./components/parameters.yml#/components/parameters/is_dev\n      responses:\n        200:\n          content:\n            application/json:\n              schema:\n                $ref: ./components/geography-component.openapi.yml#/components/schemas/SingleRoute\n          description: ''\n      security:\n      - bearerAuth: []\n      tags:\n      - geography\n    patch:\n      operationId: updateRoute\n      parameters:\n      - $ref: ./components/parameters.yml#/components/parameters/route_id_required\n      requestBody:\n        content:\n          application/json:\n            schema:\n              items:\n                $ref: ./components/general.yml#/components/schemas/DisplayInfo\n              type: array\n      responses:\n        200:\n          content:\n            application/json:\n              schema:\n                $ref: ./components/geography-component.openapi.yml#/components/schemas/SingleRoute\n          description: ''\n      security:\n      - bearerAuth: []\n      tags:\n      - geography\n  /v2/groups:\n    get:\n      description: group.read\n      operationId: getGroups\n      parameters:\n      - $ref: ./components/parameters.yml#/components/parameters/name_query\n      - $ref: ./components/parameters.yml#/components/parameters/parent_group_id\n      - $ref: ./components/parameters.yml#/components/parameters/state\n      - $ref: ./components/parameters.yml#/components/parameters/city\n      - $ref: ./components/parameters.yml#/components/parameters/address_1\n      - $ref: ./components/parameters.yml#/components/parameters/address_2\n      - $ref: ./components/parameters.yml#/components/parameters/group_type\n      - $ref: ./components/parameters.yml#/components/parameters/tags\n      - $ref: ./components/parameters.yml#/components/parameters/label\n      - $ref: ./components/parameters.yml#/components/parameters/domain\n      - $ref: ./components/parameters.yml#/components/parameters/offset\n      - $ref: ./components/parameters.yml#/components/parameters/limit\n      - $ref: ./components/parameters.yml#/components/parameters/group_order_by\n      - $ref: ./components/parameters.yml#/components/parameters/order\n      - $ref: ./components/parameters.yml#/components/parameters/includes\n      - $ref: ./components/parameters.yml#/components/parameters/page\n      responses:\n        200:\n          content:\n            application/json:\n              schema:\n                $ref: ./components/group-component.openapi.yml#/components/schemas/MultipleGroup\n          description: OK\n        400:\n          $ref: ./components/responses.yml#/components/responses/invalid_request\n        401:\n          $ref: ./components/responses.yml#/components/responses/invalid_token\n        403:\n          $ref: ./components/responses.yml#/components/responses/insufficient_scopes\n        500:\n          $ref: ./components/responses.yml#/components/responses/internal_server_error\n        503:\n          $ref: ./components/responses.yml#/components/responses/server_temporarily_unavailable\n      security:\n      - basicAuth: []\n      tags:\n      - group\n    post:\n      description: group.write\n      operationId: createGroup\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: ./components/group-component.openapi.yml#/components/schemas/GroupCreateRequest\n        required: true\n      responses:\n        200:\n          content:\n            application/json:\n              schema:\n                $ref: ./components/group-component.openapi.yml#/components/schemas/Group\n          description: OK\n        400:\n          $ref: ./components/responses.yml#/components/responses/invalid_request\n        403:\n          $ref: ./components/responses.yml#/components/responses/invalid_token\n        500:\n          $ref: ./components/responses.yml#/components/responses/internal_server_error\n        503:\n          $ref: ./components/responses.yml#/components/responses/server_temporarily_unavailable\n      security:\n      - basicAuth: []\n      tags:\n      - group\n  /v2/groups/{group_id}:\n    delete:\n      description: group.write\n      operationId: deleteGroup\n      parameters:\n      - $ref: ./components/parameters.yml#/components/parameters/group_id_required\n      responses:\n        200:\n          description: OK\n        400:\n          $ref: ./components/responses.yml#/components/responses/invalid_request\n        401:\n          $ref: ./components/responses.yml#/components/responses/invalid_token\n        403:\n          $ref: ./components/responses.yml#/components/responses/insufficient_scopes\n        500:\n          $ref: ./components/responses.yml#/components/responses/internal_server_error\n        503:\n          $ref: ./components/responses.yml#/components/responses/server_temporarily_unavailable\n      security:\n      - basicAuth: []\n      tags:\n      - group\n    get:\n      description: group.read\n      operationId: getGroup\n      parameters:\n      - $ref: ./components/parameters.yml#/components/parameters/group_id_required\n      - $ref: ./components/parameters.yml#/components/parameters/includes\n      responses:\n        200:\n          content:\n            application/json:\n              schema:\n                $ref: ./components/group-component.openapi.yml#/components/schemas/Group\n          description: OK\n        400:\n          $ref: ./components/responses.yml#/components/responses/invalid_request\n        401:\n          $ref: ./components/responses.yml#/components/responses/invalid_token\n        403:\n          $ref: ./components/responses.yml#/components/responses/insufficient_scopes\n        500:\n          $ref: ./components/responses.yml#/components/responses/internal_server_error\n        503:\n          $ref: ./components/responses.yml#/components/responses/server_temporarily_unavailable\n      security:\n      - basicAuth: []\n      tags:\n      - group\n    patch:\n      description: group.write\n      operationId: updateGroup\n      parameters:\n      - $ref: ./components/parameters.yml#/components/parameters/group_id_required\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: ./components/group-component.openapi.yml#/components/schemas/GroupUpdateRequest\n        required: true\n      responses:\n        200:\n          content:\n            application/json:\n              schema:\n                $ref: ./components/group-component.openapi.yml#/components/schemas/Group\n          description: OK\n        400:\n          $ref: ./components/responses.yml#/components/responses/invalid_request\n        401:\n          $ref: ./components/responses.yml#/components/responses/invalid_token\n        403:\n          $ref: ./components/responses.yml#/components/responses/insufficient_scopes\n        404:\n          $ref: ./components/responses.yml#/components/responses/resource_not_found\n        500:\n          $ref: ./components/responses.yml#/components/responses/internal_server_error\n        503:\n          $ref: ./components/responses.yml#/components/responses/server_temporarily_unavailable\n      security:\n      - basicAuth: []\n      tags:\n      - group\n    put:\n      description: group.write\n      operationId: replaceGroup\n      parameters:\n      - $ref: ./components/parameters.yml#/components/parameters/group_id_required\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: ./components/group-component.openapi.yml#/components/schemas/GroupReplaceRequest\n        required: true\n      responses:\n        200:\n          content:\n            application/json:\n              schema:\n                $ref: ./components/group-component.openapi.yml#/components/schemas/Group\n          description: OK\n        400:\n          $ref: ./components/responses.yml#/components/responses/invalid_request\n        401:\n          $ref: ./components/responses.yml#/components/responses/invalid_token\n        403:\n          $ref: ./components/responses.yml#/components/responses/insufficient_scopes\n        404:\n          $ref: ./components/responses.yml#/components/responses/resource_not_found\n        500:\n          $ref: ./components/responses.yml#/components/responses/internal_server_error\n        503:\n          $ref: ./components/responses.yml#/components/responses/server_temporarily_unavailable\n      security:\n      - basicAuth: []\n      tags:\n      - group\n  /v2/groups/{group_id}/invites:\n    post:\n      description: group.write\n      operationId: inviteGroup\n      parameters:\n      - $ref: ./components/parameters.yml#/components/parameters/group_id_required\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: ./components/group-component.openapi.yml#/components/schemas/GroupInviteRequest\n        required: true\n      responses:\n        200:\n          content:\n            application/json:\n              schema:\n                $ref: ./components/group-component.openapi.yml#/components/schemas/Member\n          description: OK\n        400:\n          $ref: ./components/responses.yml#/components/responses/invalid_request\n        401:\n          $ref: ./components/responses.yml#/components/responses/invalid_token\n        403:\n          $ref: ./components/responses.yml#/components/responses/insufficient_scopes\n        404:\n          $ref: ./components/responses.yml#/components/responses/resource_not_found\n        500:\n          $ref: ./components/responses.yml#/components/responses/internal_server_error\n        503:\n          $ref: ./components/responses.yml#/components/responses/server_temporarily_unavailable\n      security:\n      - basicAuth: []\n      tags:\n      - group\n  /v2/groups/{group_id}/members:\n    delete:\n      operationId: deleteMember\n      parameters:\n      - $ref: ./components/parameters.yml#/components/parameters/group_id_required\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: ./components/group-component.openapi.yml#/components/schemas/Members\n        required: true\n      responses:\n        200:\n          description: OK\n        400:\n          $ref: ./components/responses.yml#/components/responses/invalid_request\n        401:\n          $ref: ./components/responses.yml#/components/responses/invalid_token\n        403:\n          $ref: ./components/responses.yml#/components/responses/insufficient_scopes\n        404:\n          $ref: ./components/responses.yml#/components/responses/resource_not_found\n        500:\n          $ref: ./components/responses.yml#/components/responses/internal_server_error\n        503:\n          $ref: ./components/responses.yml#/components/responses/server_temporarily_unavailable\n      security:\n      - basicAuth: []\n      tags:\n      - group\n    get:\n      operationId: getMembers\n      parameters:\n      - $ref: ./components/parameters.yml#/components/parameters/group_id_required\n      - $ref: ./components/parameters.yml#/components/parameters/user_id\n      - $ref: ./components/parameters.yml#/components/parameters/name_query\n      - $ref: ./components/parameters.yml#/components/parameters/email\n      - $ref: ./components/parameters.yml#/components/parameters/primary\n      - $ref: ./components/parameters.yml#/components/parameters/phonetic_family_name\n      - $ref: ./components/parameters.yml#/components/parameters/phonetic_given_name\n      - $ref: ./components/parameters.yml#/components/parameters/role\n      - $ref: ./components/parameters.yml#/components/parameters/category\n      - $ref: ./components/parameters.yml#/components/parameters/tag\n      - $ref: ./components/parameters.yml#/components/parameters/includes\n      - $ref: ./components/parameters.yml#/components/parameters/page\n      - $ref: ./components/parameters.yml#/components/parameters/offset\n      - $ref: ./components/parameters.yml#/components/parameters/limit\n      - $ref: ./components/parameters.yml#/components/parameters/member_order_by\n      - $ref: ./components/parameters.yml#/components/parameters/order\n      responses:\n        200:\n          content:\n            application/json:\n              schema:\n                $ref: ./components/group-component.openapi.yml#/components/schemas/MultipleMemberInfo\n          description: OK\n        400:\n          $ref: ./components/responses.yml#/components/responses/invalid_request\n        401:\n          $ref: ./components/responses.yml#/components/responses/invalid_token\n        403:\n          $ref: ./components/responses.yml#/components/responses/insufficient_scopes\n        500:\n          $ref: ./components/responses.yml#/components/responses/internal_server_error\n        503:\n          $ref: ./components/responses.yml#/components/responses/server_temporarily_unavailable\n      security:\n      - basicAuth: []\n      tags:\n      - group\n    patch:\n      description: group.write\n      operationId: setMember\n      parameters:\n      - $ref: ./components/parameters.yml#/components/parameters/group_id_required\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: ./components/group-component.openapi.yml#/components/schemas/Member\n        required: true\n      responses:\n        200:\n          content:\n            application/json:\n              schema:\n                $ref: ./components/group-component.openapi.yml#/components/schemas/Member\n          description: OK\n        400:\n          $ref: ./components/responses.yml#/components/responses/invalid_request\n        401:\n          $ref: ./components/responses.yml#/components/responses/invalid_token\n        403:\n          $ref: ./components/responses.yml#/components/responses/insufficient_scopes\n        404:\n          $ref: ./components/responses.yml#/components/responses/resource_not_found\n        500:\n          $ref: ./components/responses.yml#/components/responses/internal_server_error\n        503:\n          $ref: ./components/responses.yml#/components/responses/server_temporarily_unavailable\n      security:\n      - basicAuth: []\n      tags:\n      - group\n    put:\n      description: group.write\n      operationId: updateMember\n      parameters:\n      - $ref: ./components/parameters.yml#/components/parameters/group_id_required\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: ./components/group-component.openapi.yml#/components/schemas/MultipleMember\n        required: true\n      responses:\n        200:\n          content:\n            application/json:\n              schema:\n                $ref: ./components/group-component.openapi.yml#/components/schemas/MultipleMember\n          description: OK\n        400:\n          $ref: ./components/responses.yml#/components/responses/invalid_request\n        401:\n          $ref: ./components/responses.yml#/components/responses/invalid_token\n        403:\n          $ref: ./components/responses.yml#/components/responses/insufficient_scopes\n        404:\n          $ref: ./components/responses.yml#/components/responses/resource_not_found\n        500:\n          $ref: ./components/responses.yml#/components/responses/internal_server_error\n        503:\n          $ref: ./components/responses.yml#/components/responses/server_temporarily_unavailable\n      security:\n      - basicAuth: []\n      tags:\n      - group\n  /v2/licenses/me:\n    get:\n      operationId: getMyLicenses\n      parameters:\n      - $ref: ./components/parameters.yml#/components/parameters/status\n      responses:\n        200:\n          content:\n            application/json:\n              schema:\n                $ref: ./components/license-component.openapi.yml#/components/schemas/MultipleLicense\n          description: OK\n        400:\n          $ref: ./components/responses.yml#/components/responses/invalid_request\n        401:\n          $ref: ./components/responses.yml#/components/responses/invalid_token\n        403:\n          $ref: ./components/responses.yml#/components/responses/insufficient_scopes\n        500:\n          $ref: ./components/responses.yml#/components/responses/internal_server_error\n        503:\n          $ref: ./components/responses.yml#/components/responses/server_temporarily_unavailable\n      tags:\n      - license\n  /v2/me:\n    get:\n      description: 'SUPPORTED APPLICATION TYPE: Web, ネイティブ\n\n        REQUIRED SCOPES: user.profile'\n      operationId: getMe\n      responses:\n        200:\n          content:\n            application/json:\n              schema:\n                $ref: ./components/account-component.openapi.yml#/components/schemas/Me\n          description: ''\n        400:\n          $ref: ./components/responses.yml#/components/responses/InvalidRequest\n        401:\n          $ref: ./components/responses.yml#/components/responses/InvalidToken\n        403:\n          $ref: ./components/responses.yml#/components/responses/InsufficientScopes\n        404:\n          $ref: ./components/responses.yml#/components/responses/ResourceNotFound\n        500:\n          $ref: ./components/responses.yml#/components/responses/InternalServerError\n        503:\n          $ref: ./components/responses.yml#/components/responses/ServerTemporarilyUnavailable\n      security:\n      - bearerAuth: []\n      summary: ログイン中のユーザープロフィールおよび所属する企業、参加するグループの一覧を取得する\n      tags:\n      - account\n  /v2/messaging:\n    get:\n      operationId: subscribeMessage\n      parameters:\n      - $ref: ./components/parameters.yml#/components/parameters/packer_format\n      - $ref: ./components/parameters.yml#/components/parameters/channel_id_query_required\n      responses:\n        200:\n          content:\n            application/octet-stream:\n              schema:\n                format: binary\n                type: string\n          description: OK\n      security:\n      - bearerAuth: []\n      tags:\n      - PublishSubscribe\n    post:\n      operationId: publishMessage\n      parameters:\n      - $ref: ./components/parameters.yml#/components/parameters/packer_format\n      - $ref: ./components/parameters.yml#/components/parameters/channel_id_query_required\n      requestBody:\n        content:\n          application/json:\n            schema: {}\n          application/octet-stream:\n            schema:\n              format: byte\n              type: string\n          application/xml:\n            schema:\n              type: object\n          text/plain:\n            schema:\n              type: string\n        required: false\n      responses:\n        200:\n          description: OK\n      security:\n      - bearerAuth: []\n      tags:\n      - PublishSubscribe\n  /v2/resource_owners:\n    get:\n      operationId: getResourceOwners\n      parameters:\n      - $ref: ./components/parameters.yml#/components/parameters/group_id\n      - $ref: ./components/parameters.yml#/components/parameters/user_id\n      - $ref: ./components/parameters.yml#/components/parameters/type\n      - $ref: ./components/parameters.yml#/components/parameters/page\n      - $ref: ./components/parameters.yml#/components/parameters/offset\n      - $ref: ./components/parameters.yml#/components/parameters/limit\n      - $ref: ./components/parameters.yml#/components/parameters/order_by\n      - $ref: ./components/parameters.yml#/components/parameters/order\n      responses:\n        200:\n          content:\n            application/json:\n              schema:\n                $ref: ./components/resourceowner-component.openapi.yml#/components/schemas/MultipleResourceOwner\n          description: ''\n      security:\n      - bearerAuth: []\n      tags:\n      - resource-owner\n  /v2/resource_owners/{resource_owner_id}:\n    get:\n      operationId: getResourceOwner\n      parameters:\n      - $ref: ./components/parameters.yml#/components/parameters/resource_owner_id_required\n      responses:\n        200:\n          content:\n            application/json:\n              schema:\n                $ref: ./components/resourceowner-component.openapi.yml#/components/schemas/ResourceOwner\n          description: ''\n      security:\n      - bearerAuth: []\n      tags:\n      - resource-owner\n  /v2/video_streams:\n    get:\n      operationId: getVideoStreamsList\n      parameters:\n      - $ref: ./components/parameters.yml#/components/parameters/resource_owner_id_query_required\n      - $ref: ./components/parameters.yml#/components/parameters/device_id_query\n      - $ref: ./components/parameters.yml#/components/parameters/is_enable\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: ./components/videostreaming-component.openapi.yml#/components/schemas/MultipleVideo\n          description: 成功\n      security:\n      - bearerAuth: []\n      tags:\n      - videostreaming-operations\n  /v2/video_streams/{video_id}:\n    get:\n      operationId: getVideoStreams\n      parameters:\n      - $ref: ./components/parameters.yml#/components/parameters/video_id\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: ./components/videostreaming-component.openapi.yml#/components/schemas/SingleVideo\n          description: 成功\n      security:\n      - bearerAuth: []\n      tags:\n      - videostreaming-operations\n    patch:\n      operationId: updateStreams\n      parameters:\n      - $ref: ./components/parameters.yml#/components/parameters/video_id\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: ./components/videostreaming-component.openapi.yml#/components/schemas/VideoUpdateRequest\n        required: true\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: ./components/videostreaming-component.openapi.yml#/components/schemas/SingleVideo\n          description: 成功\n      security:\n      - bearerAuth: []\n      tags:\n      - videostreaming-operations\n  /v2/video_streams/{video_id}/play:\n    post:\n      operationId: createVideoStreamsPlay\n      parameters:\n      - $ref: ./components/parameters.yml#/components/parameters/video_id\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: ./components/videostreaming-component.openapi.yml#/components/schemas/SingleRoom\n          description: 成功\n      security:\n      - bearerAuth: []\n      tags:\n      - videostreaming-operations\n  /v2/video_streams/{video_id}/stop:\n    post:\n      operationId: createVideoStreamsStop\n      parameters:\n      - $ref: ./components/parameters.yml#/components/parameters/video_id\n      responses:\n        '200':\n          description: 成功\n      security:\n      - bearerAuth: []\n      tags:\n      - videostreaming-operations\n  /v2/video_streams/{video_id}/thumbnail:\n    get:\n      operationId: getVideoStreamsThumbnail\n      parameters:\n      - $ref: ./components/parameters.yml#/components/parameters/video_id\n      responses:\n        '200':\n          content:\n            image/png:\n              schema:\n                format: binary\n                type: string\n          description: 成功\n      security:\n      - bearerAuth: []\n      tags:\n      - videostreaming-operations\n"
		}
	},
	"Error": "parse: parse spec: parse operations: paths: /v2/collections/{collection_id}/status: get: operation \"getCollectionStatus\": parameters: parse parameter \"\": resolve \"./components/parameters.yml#/components/parameters/collection_id\" reference: invalid parameter reference: \"./components/parameters.yml#/components/parameters/collection_id\""
}