{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/mrin9/RapiDoc"
		},
		"file": {
			"name": "oauth-vendor-extension.yaml",
			"size": 0,
			"path": "docs/specs/oauth-vendor-extension.yaml",
			"byteSize": 2436,
			"content": "openapi: 3.0.0\ninfo:\n  title: Petstore API\n  description: |\n    Example to show how to use `x-client-id`, `x-client-secret` and `x-default-scopes` vendor extensions to pre fill them in the UI.\n\n    Below is the Open API spec snippet that shows its usage,\n    and if you check the authentication section you will find that client-id and client-secret are pre-filled, the user just needs to click on `GET TOKEN`.\n    Also notice that the scope `dog-lover` is already checked\n    ```yaml\n      openapi: 3.0.0\n      ...\n      ...\n      components:\n        securitySchemes:\n          exampleOauth2Flow:\n            type: oauth2\n            x-client-id: my-client-id             # \u003c--- when provided it will be pre filled in RapiDoc UI\n            x-client-secret: my-client-secret     # \u003c--- when provided it will be pre filled in RapiDoc UI\n            x-default-scopes: [dog-lover]         # \u003c--- when provided scopes will be pre checked in RapiDoc UI\n            flows:\n              authorizationCode:\n                authorizationUrl: /authorize\n                tokenUrl: /access_token\n                scopes:\n                  dog-lover: \"always required\"\n                  owner: \"optional\"\n    ```\n  version: \"1.0\"\nsecurity:\n  - exampleOauth2Flow: []\npaths:\n  '/dogs':\n    get:\n      summary: Return an array of the petstore's dogs.\n      responses:\n        '200':\n          description: A successful request returns an array of dogs.\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  dogs:\n                    type: array\n                    example: \"[Rex, Lassie, Beethoven]\"\n        '401':\n          $ref: '#/components/responses/Unauthorized'\n        '500':\n          $ref: '#/components/responses/InternalServerError'\ncomponents:\n  securitySchemes:\n    exampleOauth2Flow:\n      type: oauth2\n      description: You authorize requests, by providing client credentials.\n      x-client-id: my-client-id\n      x-client-secret: my-client-secret\n      x-default-scopes:\n        - dog-lover\n      flows:\n        authorizationCode:\n          authorizationUrl: /authorize\n          tokenUrl: /access_token\n          scopes:\n            dog-lover: \"always required\"\n            owner: \"optional\"\n        clientCredentials:\n          tokenUrl: '/token'\n          scopes:\n            dog-lover: \"always required\"\n            owner: \"optional\"\n\n"
		}
	},
	"Error": "parse: parse spec: paths: /dogs: get: operation \"\": responses: 500: resolve \"#/components/responses/InternalServerError\" reference: component by reference \"#/components/responses/InternalServerError\" not found"
}