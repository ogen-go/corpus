{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/NCATS-Tangerine/translator-api-registry"
		},
		"file": {
			"name": "smartapi.yaml",
			"size": 0,
			"path": "EBIgene2phenotype/smartapi.yaml",
			"byteSize": 17554,
			"content": "---\nopenapi: 3.0.3\ninfo:\n  contact:\n    email: help@biothings.io\n    name: BioThings Team\n    x-id: https://github.com/biothings\n    x-role: responsible developers\n  description: Documentation of the EBIgene2phenotype query web services.\n  termsOfService: https://biothings.io/about\n  title: EBIgene2phenotype API\n  version: '2020-02-19'\n  x-translator:\n    infores: \"infores:biothings-ebi-gene2phenotype\"\n    component: KP\n    team:\n      - Service Provider\n    biolink-version: \"2.2.13\"\nservers:\n- description: Encrypted Production server\n  url: https://biothings.ncats.io/ebigene2phenotype\n  x-maturity: production\n- description: Production server\n  url: http://biothings.ncats.io/ebigene2phenotype\n  x-maturity: production\ntags:\n- name: gene\n- name: phenotype\n- name: annotation\n- name: query\n- name: translator\n- name: biothings\npaths:\n  \"/gene/{id}\":\n    get:\n      parameters:\n      - name: id\n        in: path\n        required: true\n        example: \"341\"\n        schema:\n          type: string\n      - \"$ref\": \"#/components/parameters/raw\"\n      - \"$ref\": \"#/components/parameters/rawquery\"\n      - \"$ref\": \"#/components/parameters/_source\"\n      - \"$ref\": \"#/components/parameters/size\"\n      - \"$ref\": \"#/components/parameters/dotfield\"\n      - \"$ref\": \"#/components/parameters/_sorted\"\n      - \"$ref\": \"#/components/parameters/always_list\"\n      - \"$ref\": \"#/components/parameters/allow_null\"\n      - \"$ref\": \"#/components/parameters/format\"\n      responses:\n        '200':\n          description: \"Success\"\n      #     content:\n      #       application/json:\n      #         schema:\n      #           \"$ref\": \"#/components/schemas/Gene\"\n      #     description: A matching gene object\n      #   '404':\n      #     description: A response indicating an unknown gene ID\n      # summary: Retrieve gene objects based on ID\n      tags:\n      - gene\n  \"/gene\":\n    post:\n    ## tricky because I found out https://pending.biothings.io/ebigene2phenotype/gene?id=341,4591\n    ##   with empty requestBody also seems to work...weird\n      parameters:\n      - \"$ref\": \"#/components/parameters/raw\"\n      - \"$ref\": \"#/components/parameters/rawquery\"\n      - \"$ref\": \"#/components/parameters/_source\"\n      - \"$ref\": \"#/components/parameters/size\"\n      - \"$ref\": \"#/components/parameters/dotfield\"\n      - \"$ref\": \"#/components/parameters/_sorted\"\n      - \"$ref\": \"#/components/parameters/always_list\"\n      - \"$ref\": \"#/components/parameters/allow_null\"\n      - \"$ref\": \"#/components/parameters/format\"\n      requestBody:\n        content:\n          application/json:\n            example:\n              ids:\n              - \"341\"\n              - \"4591\"\n            schema:\n              type: object\n              properties:\n                ids:\n                  description: 'multiple Gene IDs separated by comma. Note that\n                    currently we only take the input ids up to 1000 maximum, the rest\n                    will be omitted. Type: string (list). Max: 1000.'\n                  type: array\n                  items:\n                    type: string\n      responses:\n        '200':\n          description: \"Success\"\n        #   content:\n        #     application/json:\n        #       schema:\n        #         items:\n        #           \"$ref\": \"#/components/schemas/Gene\"\n        #         type: array\n        #   description: A list of matching gene objects\n        # '400':\n        #   content:\n        #     application/json:\n        #       schema:\n        #         \"$ref\": \"#/components/schemas/ErrorResult\"\n        #   description: A response indicating an improperly formatted query\n      tags:\n      - gene\n  \"/metadata\":\n    get:\n      parameters:\n      - \"$ref\": \"#/components/parameters/format\"\n      - \"$ref\": \"#/components/parameters/raw\"\n      - \"$ref\": \"#/components/parameters/dev\"\n      responses:\n        '200':\n          description: Success\n      summary: Get metadata about the data available from EBIgene2phenotype\n      tags:\n      - metadata\n  \"/metadata/fields\":\n    get:\n      parameters:\n      - \"$ref\": \"#/components/parameters/format\"\n      - \"$ref\": \"#/components/parameters/raw\"\n      - \"$ref\": \"#/components/parameters/search\"\n      - \"$ref\": \"#/components/parameters/prefix\"\n      responses:\n        '200':\n          description: Success\n      summary: Get metadata about the data fields available from a record\n      tags:\n      - metadata\n  \"/query\":\n    get:\n      parameters:\n      - name: q\n        description: Query string.\n        in: query\n        required: true\n        example: \"_id:6636\"\n        schema:\n          type: string\n      - \"$ref\": \"#/components/parameters/aggs\"\n      - \"$ref\": \"#/components/parameters/facet_size\"\n      - \"$ref\": \"#/components/parameters/from\"\n      - \"$ref\": \"#/components/parameters/userquery\"\n      - \"$ref\": \"#/components/parameters/sort\"\n      - \"$ref\": \"#/components/parameters/explain\"\n      - \"$ref\": \"#/components/parameters/fetch_all\"\n      - \"$ref\": \"#/components/parameters/scroll_id\"\n      - \"$ref\": \"#/components/parameters/raw\"\n      - \"$ref\": \"#/components/parameters/rawquery\"\n      - \"$ref\": \"#/components/parameters/_source\"\n      - \"$ref\": \"#/components/parameters/size\"\n      - \"$ref\": \"#/components/parameters/dotfield\"\n      - \"$ref\": \"#/components/parameters/_sorted\"\n      - \"$ref\": \"#/components/parameters/always_list\"\n      - \"$ref\": \"#/components/parameters/allow_null\"\n      - \"$ref\": \"#/components/parameters/format\"\n      responses:\n        '200':\n          description: Success\n      #     content:\n      #       application/json:\n      #         schema:\n      #           \"$ref\": \"#/components/schemas/QueryResult\"\n      #   '400':\n      #     content:\n      #       application/json:\n      #         schema:\n      #           \"$ref\": \"#/components/schemas/ErrorResult\"\n      #     description: A response indicating an improperly formatted query\n      # summary: Make queries and return matching gene hits. Supports JSONP and CORS\n      #   as well.\n      tags:\n      - query\n    post:\n      parameters:\n      - name: q\n        in: query\n        required: false\n        schema:\n          type: array\n          items:\n            type: string\n      - name: scopes\n        in: query\n        required: false\n        schema:\n          type: array\n          items:\n            type: string\n            default:\n            - _id\n      - \"$ref\": \"#/components/parameters/from\"\n      - \"$ref\": \"#/components/parameters/sort\"\n      - \"$ref\": \"#/components/parameters/raw\"\n      - \"$ref\": \"#/components/parameters/rawquery\"\n      - \"$ref\": \"#/components/parameters/_source\"\n      - \"$ref\": \"#/components/parameters/size\"\n      - \"$ref\": \"#/components/parameters/dotfield\"\n      - \"$ref\": \"#/components/parameters/_sorted\"\n      - \"$ref\": \"#/components/parameters/always_list\"\n      - \"$ref\": \"#/components/parameters/allow_null\"\n      - \"$ref\": \"#/components/parameters/format\"\n      requestBody:\n        content:\n          application/json:\n            example:\n              q:\n              - \"341\"\n              - \"6636\"\n              scopes:\n              - \"_id\"\n            schema:\n              type: object\n              properties:\n                q:\n                  type: array\n                  items:\n                    type: string\n                scopes:\n                  type: array\n                  items:\n                    type: string\n                from:\n                  type: integer\n                sort:\n                  type: array\n                  items:\n                    type: string\n      responses:\n        '200':\n          description: Success\n      #     content:\n      #       application/json:\n      #         schema:\n      #           \"$ref\": \"#/components/schemas/QueryPOSTResult\"\n      #   '400':\n      #     content:\n      #       application/json:\n      #         schema:\n      #           \"$ref\": \"#/components/schemas/ErrorResult\"\n      #     description: A response indicating an improperly formatted query\n      # summary: Make batch gene queries and return matching gene hits\n      tags:\n      - query\n      x-bte-kgs-operations:\n      - \"$ref\": \"#/components/x-bte-kgs-operations/gene_to_phenotype\"\n      - \"$ref\": \"#/components/x-bte-kgs-operations/phenotype_to_gene\"\n      - \"$ref\": \"#/components/x-bte-kgs-operations/gene_to_disease\"\n      - \"$ref\": \"#/components/x-bte-kgs-operations/disease_to_gene\"\ncomponents:\n  parameters:\n    _sorted:\n      name: _sorted\n      in: query\n      required: false\n      schema:\n        type: boolean\n        default: true\n    _source:\n      name: _source\n      in: query\n      required: false\n      schema:\n        type: array\n        items:\n          type: string\n    aggs:\n      name: aggs\n      in: query\n      required: false\n      schema:\n        type: array\n        items:\n          type: string\n    allow_null:\n      name: allow_null\n      in: query\n      required: false\n      schema:\n        type: array\n        items:\n          type: string\n    always_list:\n      name: always_list\n      in: query\n      required: false\n      schema:\n        type: array\n        items:\n          type: string\n    dev:\n      name: dev\n      in: query\n      required: false\n      schema:\n        type: boolean\n    dotfield:\n      name: dotfield\n      in: query\n      required: false\n      schema:\n        type: boolean\n    explain:\n      name: explain\n      in: query\n      required: false\n      schema:\n        type: boolean\n    facet_size:\n      name: facet_size\n      in: query\n      required: false\n      schema:\n        type: integer\n        default: 10\n    fetch_all:\n      name: fetch_all\n      in: query\n      required: false\n      schema:\n        type: boolean\n    format:\n      name: format\n      description: 'controls output format of server response, currently supports:\n        \"json\", \"jsonld\", \"html\". Type: string. Default: json.'\n      in: query\n      required: false\n      schema:\n        type: string\n        default: json\n    from:\n      name: from\n      in: query\n      required: false\n      schema:\n        type: integer\n    prefix:\n      name: prefix\n      in: query\n      required: false\n      schema:\n        type: string\n    raw:\n      name: raw\n      in: query\n      required: false\n      schema:\n        type: boolean\n    rawquery:\n      name: rawquery\n      in: query\n      required: false\n      schema:\n        type: boolean\n    scroll_id:\n      name: scroll_id\n      in: query\n      required: false\n      schema:\n        type: string\n    search:\n      name: search\n      in: query\n      required: false\n      schema:\n        type: string\n    size:\n      name: size\n      description: \"default: 10 objects/records in response\"\n      in: query\n      required: false\n      schema:\n        type: integer\n    sort:\n      name: sort\n      in: query\n      required: false\n      schema:\n        type: array\n        items:\n          type: string\n    userquery:\n      name: userquery\n      in: query\n      required: false\n      schema:\n        type: string\n  # schemas:\n  #   Gene:\n  #     properties:\n  #       _id:\n  #         type: string\n  #     required:\n  #     - _id\n  #     type: object\n  #   ErrorResult:\n  #     properties:\n  #       message:\n  #         type: string\n  #       success:\n  #         type: boolean\n  #     type: object\n  #   QueryPOSTResult:\n  #     items:\n  #       allOf:\n  #       - \"$ref\": \"#/components/schemas/Gene\"\n  #       - properties:\n  #           _score:\n  #             format: float\n  #             type: number\n  #           query:\n  #             type: string\n  #         type: object\n  #     type: array\n  #   QueryResult:\n  #     properties:\n  #       hits:\n  #         items:\n  #           \"$ref\": \"#/components/schemas/Gene\"\n  #         type: array\n  #       max_score:\n  #         format: float\n  #         type: number\n  #       took:\n  #         type: integer\n  #       total:\n  #         type: integer\n  #     type: object\n  #   int64_or_array:\n  #     oneOf:\n  #     - items:\n  #         format: int64\n  #         type: integer\n  #       type: array\n  #     - format: int64\n  #       type: integer\n  #   string_or_array:\n  #     oneOf:\n  #     - items:\n  #         type: string\n  #       type: array\n  #     - type: string\n  x-bte-kgs-operations:\n  ## not all records have phenotypes or disease IDs...\n  ## relationship is somewhat captured by DDD_category (and allelic_requirement, mutation_consequence)\n  ## not sure if \"panel\" is a \"source\"\n    gene_to_phenotype:\n    - inputSeparator: \",\"\n      supportBatch: true\n      inputs:\n      - id: HGNC\n        semantic: Gene\n      requestBody:\n        body:\n          q: \"{inputs[0]}\"  ## no prefix\n          scopes: _id\n        header: application/x-www-form-urlencoded\n      outputs:\n      - id: HP\n        semantic: PhenotypicFeature\n      parameters:\n        ## phenotypes has HP prefix\n        fields: \u003e-\n          gene2phenotype.DDD_category,\n          gene2phenotype.allelic_requirement,\n          gene2phenotype.disease.disease_mim,\n          gene2phenotype.disease.disease_name,\n          gene2phenotype.gene_disease_pair_entry_date,\n          gene2phenotype.mutation_consequence,\n          gene2phenotype.organ_specificity_list,\n          gene2phenotype.panel,\n          gene2phenotype.phenotypes,\n          gene2phenotype.pmids\n      predicate: related_to\n      source: \"infores:ebi-gene2phenotype\"\n      response_mapping:\n        \"$ref\": \"#/components/x-bte-response-mapping/pheno-object\"\n      # testExamples:\n      #   - qInput: \"HGNC:3806\"        ## FOXE1\n      #     oneOutput: \"HP:0010564\"    ## Bifid epiglottis\n    phenotype_to_gene:\n    - inputSeparator: \",\"\n      supportBatch: true\n      inputs:\n      - id: HP\n        semantic: PhenotypicFeature\n      requestBody:\n        body:\n          q: \"{inputs[0]}\"\n          scopes: gene2phenotype.phenotypes  ## has HP prefix\n        header: application/x-www-form-urlencoded\n      outputs:\n      - id: HGNC\n        semantic: Gene\n      parameters:\n        fields: _id   ## no prefix\n        size: '1000'  ## note size limit\n      predicate: related_to\n      source: \"infores:ebi-gene2phenotype\"\n      response_mapping:\n        \"$ref\": \"#/components/x-bte-response-mapping/gene-object\"\n      # testExamples:\n      #   - qInput: \"HP:0002808\"      ## Kyphosis\n      #     oneOutput: \"HGNC:2213\"    ## COL6A3\n    gene_to_disease:\n    - inputSeparator: \",\"\n      supportBatch: true\n      inputs:\n      - id: HGNC\n        semantic: Gene\n      requestBody:\n        body:\n          q: \"{inputs[0]}\"  ## no prefix\n          scopes: _id\n        header: application/x-www-form-urlencoded\n      outputs:\n      - id: OMIM\n        semantic: Disease\n      parameters:\n        ## diseases don't have prefix\n        fields: \u003e-\n          gene2phenotype.DDD_category,\n          gene2phenotype.allelic_requirement,\n          gene2phenotype.disease.disease_mim,\n          gene2phenotype.disease.disease_name,\n          gene2phenotype.gene_disease_pair_entry_date,\n          gene2phenotype.mutation_consequence,\n          gene2phenotype.organ_specificity_list,\n          gene2phenotype.panel,\n          gene2phenotype.phenotypes,\n          gene2phenotype.pmids\n      predicate: related_to\n      source: \"infores:ebi-gene2phenotype\"\n      response_mapping:\n        \"$ref\": \"#/components/x-bte-response-mapping/disease-object\"\n      # testExamples:\n      #   - qInput: \"HGNC:3806\"         ## FOXE1\n      #     oneOutput: \"OMIM:241850\"    ## Bamforth-Lazarus syndrome\n    disease_to_gene:\n    - inputSeparator: \",\"\n      supportBatch: true\n      inputs:\n      - id: OMIM\n        semantic: Disease\n      requestBody:\n        body:\n          q: \"{inputs[0]}\"\n          scopes: gene2phenotype.disease.disease_mim  ## no prefix\n        header: application/x-www-form-urlencoded\n      outputs:\n      - id: HGNC\n        semantic: Gene\n      parameters:\n        fields: _id   ## no prefix\n        size: '1000'  ## note size limit\n      predicate: related_to\n      source: \"infores:ebi-gene2phenotype\"\n      response_mapping:\n        \"$ref\": \"#/components/x-bte-response-mapping/gene-object\"\n      # testExamples:\n      #   - qInput: \"OMIM:255200\"      ## myopathy, centronuclear, 2\n      #     oneOutput: \"HGNC:1052\"    ## BIN1\n  x-bte-response-mapping:\n    pheno-object:\n      HP: gene2phenotype.phenotypes  ## has HP prefix\n      pubmed: gene2phenotype.pmids   ## no prefix\n      DDD_category: gene2phenotype.DDD_category\n      allelic_requirement: gene2phenotype.allelic_requirement\n      context_disease_omim_id: gene2phenotype.disease.disease_mim   ## no prefix\n      context_disease_name: gene2phenotype.disease.disease_name\n      gene_disease_pair_entry_date: gene2phenotype.gene_disease_pair_entry_date\n      mutation_consequence: gene2phenotype.mutation_consequence\n      context_organ_specificity_list: gene2phenotype.organ_specificity_list     ## array of keywords (not ids or curies)\n      panel: gene2phenotype.panel\n    gene-object:\n      HGNC: _id   ## no prefix\n    disease-object:\n      OMIM: gene2phenotype.disease.disease_mim   ## no prefix\n      pubmed: gene2phenotype.pmids   ## no prefix\n      DDD_category: gene2phenotype.DDD_category\n      allelic_requirement: gene2phenotype.allelic_requirement\n      gene_disease_pair_entry_date: gene2phenotype.gene_disease_pair_entry_date\n      mutation_consequence: gene2phenotype.mutation_consequence\n      context_organ_specificity_list: gene2phenotype.organ_specificity_list     ## array of keywords (not ids or curies)\n      panel: gene2phenotype.panel\n      related_phenotypes: gene2phenotype.phenotypes  ## has HP prefix\n"
		}
	},
	"Error": "parse: parse spec: parse operations: paths: /query: post: operation \"\": parameters: parse parameter \"scopes\": schema: parse schema: item: parse default: expected type \"string\", got \"array\""
}