{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/dcos/client-go"
		},
		"file": {
			"name": "dcos.yaml",
			"size": 0,
			"path": "openapi/dcos.yaml",
			"byteSize": 149092,
			"content": "openapi: 3.0.2\ninfo:\n  description: DC/OS API\n  title: DC/OS\n  version: 1.0.0\nservers:\n  - url: http://your-dcos-cluster.com\ntags:\n- description: DC/OS Secrets\n  name: secrets\n- description: DC/OS Cosmos Package Management\n  name: cosmos\n- name: IAM\n  description: DC/OS Identity and Access Management API\n- name: login\n  description: Login- and authentication-related endpoints\n- name: oidc\n  description: OpenID Connect endpoints, including provider management\n- name: users\n  description: User management endpoints\n- name: groups\n  description: Group management endpoints\n- name: permissions\n  description: Permission management endpoints\n- name: saml\n  description: SAML 2.0 endpoints, including provider management\n- name: ldap\n  description: Directory (LDAP) back-end configuration and interaction endpoints\n- name: edgelb\n  description: Create and manage load balancers with DCOS Edge LB API\n- name: metadata\n  description: DC/OS Cluster metadata\n- name: metronome\n  description: Create and manage scheduled Jobs with DCOS Metronome API\n- name: networking\n  description: Exposes the public IP addresses for nodes in a cluster\n- name: health\n  description: DC/OS Cluster health\n\npaths:\n  /secrets/v1/secret/{store}/{path-to-secret}:\n    delete:\n      description: Delete a secret.\n      operationId: delete-secret\n      parameters:\n      - description: The backend to delete the secret from.\n        explode: false\n        in: path\n        name: store\n        required: true\n        schema:\n          type: string\n        style: simple\n      - description: The path to the secret to delete.\n        explode: false\n        in: path\n        name: path-to-secret\n        required: true\n        schema:\n          type: string\n        style: simple\n      responses:\n        204:\n          description: Success.\n        403:\n          description: Forbidden.\n        404:\n          description: Secret not found.\n      summary: Delete a secret.\n      tags:\n      - secrets\n    get:\n      description: Read or list a secret from the store by its path.\n      operationId: get-secret\n      parameters:\n      - description: The backend store from which to get the secret.\n        explode: false\n        in: path\n        name: store\n        required: true\n        schema:\n          type: string\n        style: simple\n      - description: |\n          If set to true, list only secret keys.\n        explode: true\n        in: query\n        name: list\n        required: false\n        schema:\n          type: string\n        style: form\n      - description: The path to store the secret in.\n        explode: false\n        in: path\n        name: path-to-secret\n        required: true\n        schema:\n          type: string\n        style: simple\n      responses:\n        200:\n          content:\n            '*/*':\n              schema:\n                $ref: '#/components/schemas/SecretsV1Secret'\n          description: Response body contains secret authorized content.\n        400:\n          description: Unsupported Accept header.\n        403:\n          description: Forbidden.\n        404:\n          description: Secret not found.\n      summary: Read or list a secret from the store by its path.\n      tags:\n      - secrets\n    patch:\n      description: Update existing secret in the specified store.\n      operationId: update-secret\n      parameters:\n      - description: The backend to store the secret in.\n        explode: false\n        in: path\n        name: store\n        required: true\n        schema:\n          type: string\n        style: simple\n      - description: The path for the secret to update.\n        explode: false\n        in: path\n        name: path-to-secret\n        required: true\n        schema:\n          type: string\n        style: simple\n      requestBody:\n        $ref: '#/components/requestBodies/SecretsV1Secret'\n      responses:\n        204:\n          description: Secret updated.\n        403:\n          description: Forbidden.\n        404:\n          description: Secret not found.\n      summary: Update secret.\n      tags:\n      - secrets\n    put:\n      description: Create a secret in the store at the path.\n      operationId: create-secret\n      parameters:\n      - description: The backend to store the secret in.\n        explode: false\n        in: path\n        name: store\n        required: true\n        schema:\n          type: string\n        style: simple\n      - description: The path to store the secret in.\n        explode: false\n        in: path\n        name: path-to-secret\n        required: true\n        schema:\n          type: string\n        style: simple\n      requestBody:\n        $ref: '#/components/requestBodies/SecretsV1Secret'\n      responses:\n        201:\n          description: Secret created.\n        400:\n          description: Unsupported Content-Type header.\n        403:\n          description: Forbidden.\n        409:\n          description: Secret already exists.\n      summary: Create a secret in the store at the path.\n      tags:\n      - secrets\n  /acs/api/v1/acls:\n    get:\n      operationId: getACLs\n      summary: Retrieve all ACL objects.\n      description: Get array of `ACL` objects.\n      tags:\n        - IAM\n          # - permissions\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/IAMAcls\"\n  /acs/api/v1/acls/{rid}:\n    get:\n      operationId: getResourceACLs\n      summary: Retrieve ACL for a certain resource.\n      description: Retrieve single `ACL` object, for a specific resource.\n      tags:\n        - IAM\n          # - permissions\n      parameters:\n        - name: rid\n          in: path\n          required: true\n          description: The ID of the resource to retrieve the ACL for.\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: Success.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/IAMACL\"\n        default:\n          description: IAM Error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/IAMError\"\n    put:\n      operationId: createResourceACL\n      summary: Create ACL for a certain resource.\n      description: Create new ACL for resource with ID `rid` (description in body, no\n        permissions by default).\n      tags:\n        - IAM\n          # - permissions\n      parameters:\n        - name: rid\n          in: path\n          required: true\n          description: The ID of the resource for which the ACL should be created.\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/IAMACLCreate\"\n        required: true\n      responses:\n        \"201\":\n          description: ACL created.\n        \"409\":\n          description: Already exists (this resource already has an ACL set).\n        default:\n          description: IAM Error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/IAMError\"\n    patch:\n      operationId: updateResourceACL\n      summary: Update ACL for a certain resource.\n      description: Update ACL for resource with ID `rid`.\n      tags:\n        - IAM\n          # - permissions\n      parameters:\n        - name: rid\n          in: path\n          required: true\n          description: The ID of the resource for which the ACL should be created.\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/IAMACLUpdate\"\n        description: New ACL.\n        required: true\n      responses:\n        \"204\":\n          description: Success.\n        default:\n          description: IAM Error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/IAMError\"\n    delete:\n      operationId: deleteResourceACL\n      summary: Delete ACL for a certain resource.\n      description: Delete ACL of resource with ID `rid`.\n      tags:\n        - IAM\n          # - permissions\n      parameters:\n        - name: rid\n          in: path\n          required: true\n          description: The ID of resource for which the ACL should be deleted.\n          schema:\n            type: string\n      responses:\n        \"204\":\n          description: Success.\n        \"404\":\n          description: ACL not found.\n        default:\n          description: IAM Error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/IAMError\"\n  /acs/api/v1/acls/{rid}/groups/{gid}:\n    get:\n      operationId: getResourceGroupActions\n      summary: Get allowed actions for given resource and group.\n      description: Get allowed actions for given resource and group.\n      tags:\n        - IAM\n          # - permissions\n      parameters:\n        - name: rid\n          in: path\n          required: true\n          description: resource ID\n          schema:\n            type: string\n        - name: gid\n          in: path\n          required: true\n          description: group ID\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: Success.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/IAMActions\"\n        default:\n          description: IAM Error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/IAMError\"\n    delete:\n      operationId: forbidResourceGroupActions\n      summary: Forbid all actions of given group to given resource.\n      description: Forbid all actions of given group to given resource.\n      tags:\n        - IAM\n          # - permissions\n      parameters:\n        - name: rid\n          in: path\n          required: true\n          description: resource ID.\n          schema:\n            type: string\n        - name: gid\n          in: path\n          required: true\n          description: group ID.\n          schema:\n            type: string\n      responses:\n        \"204\":\n          description: Success.\n        default:\n          description: IAM Error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/IAMError\"\n  /acs/api/v1/acls/{rid}/groups/{gid}/{action}:\n    get:\n      operationId: getResourceGroupAction\n      summary: Query whether action is allowed or not.\n      description: Query whether action is allowed or not.\n      tags:\n        - IAM\n          # - permissions\n      parameters:\n        - name: rid\n          in: path\n          required: true\n          description: resource ID\n          schema:\n            type: string\n        - name: gid\n          in: path\n          required: true\n          description: group ID\n          schema:\n            type: string\n        - name: action\n          in: path\n          required: true\n          description: action name\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: Boolean answer in JSON response body.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/IAMActionAllowed\"\n        default:\n          description: IAM Error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/IAMError\"\n    put:\n      operationId: permitResourceGroupAction\n      summary: Permit single action for given resource and group.\n      description: Permit single action for given resource and group.\n      tags:\n        - IAM\n          # - permissions\n      parameters:\n        - name: rid\n          in: path\n          required: true\n          description: resource ID.\n          schema:\n            type: string\n        - name: gid\n          in: path\n          required: true\n          description: group ID.\n          schema:\n            type: string\n        - name: action\n          in: path\n          required: true\n          description: action name\n          schema:\n            type: string\n      responses:\n        \"204\":\n          description: Success.\n        default:\n          description: IAM Error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/IAMError\"\n    delete:\n      operationId: forbitResourceGroupAction\n      summary: Forbid single action for given resource and group.\n      description: Forbid single action for given resource and group.\n      tags:\n        - IAM\n          # - permissions\n      parameters:\n        - name: rid\n          in: path\n          required: true\n          description: resource ID.\n          schema:\n            type: string\n        - name: gid\n          in: path\n          required: true\n          description: group ID.\n          schema:\n            type: string\n        - name: action\n          in: path\n          required: true\n          description: action name\n          schema:\n            type: string\n      responses:\n        \"204\":\n          description: Success.\n        default:\n          description: IAM Error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/IAMError\"\n  /acs/api/v1/acls/{rid}/permissions:\n    get:\n      operationId: getResourcePermissions\n      summary: Retrieve all permissions for resource.\n      description: Retrieve all permissions that are set for a specific resource.\n      tags:\n        - IAM\n          # - permissions\n      parameters:\n        - name: rid\n          in: path\n          required: true\n          description: resource ID\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: Success.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/IAMACLPermissions\"\n        default:\n          description: IAM Error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/IAMError\"\n  /acs/api/v1/acls/{rid}/users/{uid}:\n    get:\n      operationId: getResourceUserActions\n      summary: Get allowed actions for given resource and user.\n      description: Get allowed actions for given resource and user.\n      tags:\n        - IAM\n          # - permissions\n      parameters:\n        - name: rid\n          in: path\n          required: true\n          description: resource ID\n          schema:\n            type: string\n        - name: uid\n          in: path\n          required: true\n          description: account ID\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: Success.\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  array:\n                    type: array\n                    items:\n                      $ref: \"#/components/schemas/IAMAction\"\n        default:\n          description: IAM Error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/IAMError\"\n    delete:\n      operationId: forbidResourceUserActions\n      summary: Forbid all actions of given account to given resource.\n      description: Forbid all actions of given account to given resource.\n      tags:\n        - IAM\n          # - permissions\n      parameters:\n        - name: rid\n          in: path\n          required: true\n          description: resource ID.\n          schema:\n            type: string\n        - name: uid\n          in: path\n          required: true\n          description: account ID.\n          schema:\n            type: string\n      responses:\n        \"204\":\n          description: Success.\n        default:\n          description: IAM Error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/IAMError\"\n  /acs/api/v1/acls/{rid}/users/{uid}/{action}:\n    get:\n      operationId: getResourceUserAction\n      summary: Query whether action is allowed or not.\n      description: Query whether action is allowed or not.\n      tags:\n        - IAM\n          # - permissions\n      parameters:\n        - name: rid\n          in: path\n          required: true\n          description: resource ID\n          schema:\n            type: string\n        - name: uid\n          in: path\n          required: true\n          description: account ID\n          schema:\n            type: string\n        - name: action\n          in: path\n          required: true\n          description: action name\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: Boolean answer in JSON response body.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/IAMActionAllowed\"\n        default:\n          description: IAM Error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/IAMError\"\n    put:\n      operationId: permitResourceUserAction\n      summary: Permit single action for given account and resource.\n      description: Permit single action for given account and resource.\n      tags:\n        - IAM\n          # - permissions\n      parameters:\n        - name: rid\n          in: path\n          required: true\n          description: resource ID.\n          schema:\n            type: string\n        - name: uid\n          in: path\n          required: true\n          description: account ID.\n          schema:\n            type: string\n        - name: action\n          in: path\n          required: true\n          description: action name\n          schema:\n            type: string\n      responses:\n        \"204\":\n          description: Success.\n        \"409\":\n          description: Already exists (this account already has this action).\n        default:\n          description: IAM Error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/IAMError\"\n    delete:\n      operationId: forbidResourceUserAction\n      summary: Forbid single action for given account and resource.\n      description: Forbid single action for given account and resource.\n      tags:\n        - IAM\n          # - permissions\n      parameters:\n        - name: rid\n          in: path\n          required: true\n          description: resource ID.\n          schema:\n            type: string\n        - name: uid\n          in: path\n          required: true\n          description: account ID.\n          schema:\n            type: string\n        - name: action\n          in: path\n          required: true\n          description: action name\n          schema:\n            type: string\n      responses:\n        \"204\":\n          description: Success.\n        default:\n          description: IAM Error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/IAMError\"\n  /acs/api/v1/auth/jwks:\n    get:\n      operationId: getJWKS\n      summary: Get the IAM's JSON Web Key Set (JWKS, according to RFCs 7517/7518).\n      description: \"This endpoint provides the IAM's JSON Web Key Set (JWKS), exposing\n        public key details required for the process of DC/OS authentication\n        token verification: the public key material can be used for verifying\n        authentication tokens signed by the IAM's private key. The DC/OS\n        authentication token is a JSON Web Token (JWT) of type RS256, and is\n        required to have the two claims `exp` and `uid`. For interpretation of\n        the data provided by the JWKS endpoint see\n        https://tools.ietf.org/html/rfc7517 and\n        https://tools.ietf.org/html/rfc7518.\"\n      tags:\n        - IAM\n      responses:\n        \"200\":\n          description: The response body contains a JSON Web Key Set document.\n        default:\n          description: IAM Error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/IAMError\"\n  /acs/api/v1/auth/login:\n    post:\n      operationId: login\n      summary: Log in (obtain a DC/OS authentication token).\n      description: \"Exchange user credentials (regular user account: uid and password;\n        service user account: uid and service login token) for a DC/OS\n        authentication token. The resulting DC/OS authentication token is an RFC\n        7519 JSON Web Token (JWT) of type RS256. It has a limited lifetime which\n        depends on the IAM configuration (only, i.e. the lifetime cannot be\n        chosen as part of the login HTTP request). The DC/OS authentication\n        token can be verified out-of-band using a standards-compliant RS256 JWT\n        verification procedure based on the long-lived public key material\n        presented by the IAM's /auth/jwks endpoint, and by requiring the two\n        claims `exp` and `uid` to be present.\"\n      tags:\n        - IAM\n        # - login\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/IAMLoginObject\"\n        description: uid \u0026 password or uid \u0026 service login token.\n        required: true\n      responses:\n        \"200\":\n          description: Login successful. The response body contains a JSON object providing\n            the authentication token.\n          headers:\n            Set-Cookie:\n              description: A cookie containing the auth token (implementation detail for\n                browser support, should not be of interest to general API\n                consumers).\n              schema:\n                type: string\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/IAMAuthToken\"\n        \"401\":\n          description: Login failed.\n        default:\n          description: IAM Error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/IAMError\"\n    get:\n      operationId: loginWithProvider\n      summary: Log in using an external identity provider.\n      description: Log in using an external identity provider (via e.g. OpenID Connect), as\n        specified via query parameter. This request initiates a single sign-on\n        flow.\n      tags:\n        - IAM\n          # - login\n      parameters:\n        - name: oidc-provider\n          description: OIDC provider ID\n          in: query\n          required: false\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: Redirect to the identity provider.\n  /acs/api/v1/auth/oidc/callback:\n    get:\n      operationId: openIDConnectCallbackURL\n      summary: OpenID Connect callback URL.\n      description: After successfully logging in to an OpenID Connect identity provider,\n        the end-user is being redirected back to the IAM via this callback URL.\n        API consumers are not required to explicitly interact with this\n        endpoint. This URL usually needs to be handed over to an OpenID Connect\n        provider (often called \"redirect\" or \"callback\" URL).\n      tags:\n        - IAM\n          # - oidc\n      responses:\n        \"302\":\n          description: OIDC authentication flow successful.\n        \"401\":\n          description: Problem in authentication flow.\n  /acs/api/v1/auth/oidc/providers:\n    get:\n      operationId: getOIDCProviders\n      summary: Get an overview for the configured OIDC providers.\n      description: Get an overview for the configured OIDC providers. The response contains\n        a JSON object, with each key being an OIDC provider ID, and each value\n        being the corresponding provider description string. This endpoint does\n        not expose sensitive provider configuration details.\n      tags:\n        - IAM\n          # - oidc\n      responses:\n        \"200\":\n          description: Success.\n  /acs/api/v1/auth/oidc/providers/{provider-id}:\n    get:\n      operationId: getOIDCProvider\n      summary: Get configuration for a specific provider.\n      description: Get configuration for a specific provider.\n      tags:\n        - IAM\n          # - oidc\n      parameters:\n        - name: provider-id\n          in: path\n          required: true\n          description: The ID of the OIDC provider to retrieve the config for.\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: Success.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/IAMOIDCProviderConfig\"\n        default:\n          description: IAM Error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/IAMError\"\n    put:\n      operationId: configureOIDCProvider\n      summary: Configure a new OIDC provider.\n      description: Set up OIDC provider with the ID as specified in the URL, and with the\n        config as specified via JSON in the request body.\n      tags:\n        - IAM\n          # - oidc\n      parameters:\n        - name: provider-id\n          in: path\n          required: true\n          description: The ID of the provider to create.\n          schema:\n            type: string\n      requestBody:\n        $ref: \"#/components/requestBodies/OIDCProviderConfig\"\n      responses:\n        \"201\":\n          description: Provider created.\n        \"409\":\n          description: Provider already exists.\n        default:\n          description: IAM Error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/IAMError\"\n    patch:\n      operationId: updateOIDCProvider\n      summary: Update OIDC provider config.\n      description: Update config for existing OIDC provider.\n      tags:\n        - IAM\n          # - oidc\n      parameters:\n        - name: provider-id\n          in: path\n          required: true\n          description: The ID of the provider to modify.\n          schema:\n            type: string\n      requestBody:\n        $ref: \"#/components/requestBodies/OIDCProviderConfig\"\n      responses:\n        \"204\":\n          description: Update applied.\n        \"400\":\n          description: Various errors (e.g. provider not yet configured).\n        default:\n          description: IAM Error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/IAMError\"\n    delete:\n      operationId: deleteOIDCProvider\n      summary: Delete provider.\n      description: Delete provider (disables authentication with that provider).\n      tags:\n        - IAM\n          # - oidc\n      parameters:\n        - name: provider-id\n          in: path\n          required: true\n          description: The ID of the OIDC provider to delete.\n          schema:\n            type: string\n      responses:\n        \"204\":\n          description: Success.\n        default:\n          description: IAM Error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/IAMError\"\n  /acs/api/v1/auth/saml/providers:\n    get:\n      operationId: getSAMLProviders\n      summary: Get an overview for the configured SAML 2.0 providers.\n      description: Get an overview for the configured SAML 2.0 providers. The response\n        contains a JSON object, with each key being a SAML provider ID, and each\n        value being the corresponding provider description string. This endpoint\n        does not expose sensitive provider configuration details.\n      tags:\n        - IAM\n          # - saml\n      responses:\n        \"200\":\n          description: Success.\n  /acs/api/v1/auth/saml/providers/{provider-id}:\n    get:\n      operationId: getSAMLProvider\n      summary: Get configuration for a specific SAML provider.\n      description: Get configuration for a specific SAML provider.\n      tags:\n        - IAM\n          # - saml\n      parameters:\n        - name: provider-id\n          in: path\n          required: true\n          description: The ID of the SAML provider to retrieve the config for.\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: Success.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/IAMSAMLProviderConfig\"\n        default:\n          description: IAM Error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/IAMError\"\n    put:\n      operationId: configureSAMLProvider\n      summary: Configure a new SAML provider.\n      description: Set up a SAML provider with the ID as specified in the URL, and with the\n        config as given by the JSON document in the request body.\n      tags:\n        - IAM\n          # - saml\n      parameters:\n        - name: provider-id\n          in: path\n          required: true\n          description: The ID of the provider to create.\n          schema:\n            type: string\n      requestBody:\n        $ref: \"#/components/requestBodies/SAMLProviderConfig\"\n      responses:\n        \"201\":\n          description: Provider created.\n        \"409\":\n          description: Provider already exists.\n        default:\n          description: IAM Error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/IAMError\"\n    patch:\n      operationId: updateSAMLProvider\n      summary: Update SAML provider config.\n      description: Update config for existing SAML provider.\n      tags:\n        - IAM\n          # - saml\n      parameters:\n        - name: provider-id\n          in: path\n          required: true\n          description: The ID of the provider to modify.\n          schema:\n            type: string\n      requestBody:\n        $ref: \"#/components/requestBodies/SAMLProviderConfig\"\n      responses:\n        \"204\":\n          description: Update applied.\n        default:\n          description: IAM Error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/IAMError\"\n    delete:\n      operationId: deleteSAMLProvider\n      summary: Delete provider.\n      description: Delete provider (disables authentication with that provider).\n      tags:\n        - IAM\n          # - saml\n      parameters:\n        - name: provider-id\n          in: path\n          required: true\n          description: The ID of the SAML provider to delete.\n          schema:\n            type: string\n      responses:\n        \"204\":\n          description: Success.\n        default:\n          description: IAM Error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/IAMError\"\n  /acs/api/v1/auth/saml/providers/{provider-id}/acs-callback:\n    post:\n      operationId: SAMLProviderACSCallbackEndpoint\n      summary: The SP ACS callback endpoint.\n      description: The IAM acts as SAML service provider (SP). As part of the\n        authentication flow, a SAML identity provider (IdP) makes the end-user\n        submit an authentication response to this endpoint.\n      tags:\n        - IAM\n          # - saml\n      parameters:\n        - name: provider-id\n          in: path\n          required: true\n          description: The ID of the provider the authentication response is meant for.\n          schema:\n            type: string\n      responses:\n        \"302\":\n          description: SAML authentication flow successful.\n        \"401\":\n          description: Problem in authentication flow.\n  /acs/api/v1/auth/saml/providers/{provider-id}/acs-callback-url:\n    get:\n      operationId: getSAMLProviderACSCallbackURL\n      summary: Get the authentication callback URL for this SP.\n      description: The IAM acts as SAML service provider (SP). A SAML identity provider\n        (IdP) usually requires to be configured with the Assertion Consumer\n        Service (ACS) callback URL of the SP (which is where the IdP makes the\n        end-user submit the authentication response).\n      tags:\n        - IAM\n          # - saml\n      parameters:\n        - name: provider-id\n          in: path\n          required: true\n          description: The ID of the SAML provider to retrieve the ACS callback URL for.\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: The response body contains a JSON object declaring the callback URL\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/IAMSAMLACSCallbackUrlObject\"\n  /acs/api/v1/auth/saml/providers/{provider-id}/sp-metadata:\n    get:\n      operationId: getSAMLProviderSPMetadata\n      summary: Get SP metadata (XML).\n      description: The IAM acts as SAML service provider (SP). This endpoint provides the\n        SP metadata as an XML document. Certain identity providers (IdPs) may\n        want to directly consume this document.\n      tags:\n        - IAM\n          # - saml\n      parameters:\n        - name: provider-id\n          in: path\n          required: true\n          description: The ID of the SAML provider to retrieve the metadata for.\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: The response body contains the metadata in UTF-8 encoding, setting\n            the Content-Type to `application/samlmetadata+xml`.\n          content:\n            application/samlmetadata+xml:\n              schema:\n                type: string\n            application/json:\n              # Workaround mandatory accept application/json (DCOS-53724)\n              schema:\n                type: string\n  /acs/api/v1/groups:\n    get:\n      operationId: getGroups\n      summary: Retrieve all group objects.\n      description: Retrieve array of `Group` objects.\n      tags:\n        - IAM\n          # - groups\n      responses:\n        \"200\":\n          description: Success.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/IAMGroups\"\n        default:\n          description: IAM Error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/IAMError\"\n  /acs/api/v1/groups/{gid}:\n    get:\n      operationId: getGroup\n      summary: Get single group object.\n      description: Get specific `Group` object.\n      tags:\n        - IAM\n          # - groups\n      parameters:\n        - name: gid\n          in: path\n          required: true\n          description: The ID of the group to retrieve.\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: Success.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/IAMGroup\"\n        default:\n          description: IAM Error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/IAMError\"\n    put:\n      operationId: createGroup\n      summary: Create a group.\n      description: Create a group.\n      tags:\n        - IAM\n          # - groups\n      parameters:\n        - name: gid\n          in: path\n          required: true\n          description: The ID of the group.\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/IAMGroupCreate\"\n        required: true\n      responses:\n        \"201\":\n          description: Group created.\n        \"409\":\n          description: Group exists.\n        default:\n          description: IAM Error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/IAMError\"\n    patch:\n      operationId: updateGroup\n      summary: Update group.\n      description: Update existing group (description).\n      tags:\n        - IAM\n          # - groups\n      parameters:\n        - name: gid\n          in: path\n          required: true\n          description: The ID of the group to modify.\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/IAMGroupUpdate\"\n        required: true\n      responses:\n        \"204\":\n          description: Update applied.\n        default:\n          description: IAM Error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/IAMError\"\n    delete:\n      operationId: deleteGroup\n      summary: Delete group.\n      description: Delete group.\n      tags:\n        - IAM\n          # - groups\n      parameters:\n        - name: gid\n          in: path\n          required: true\n          description: The ID of the group to delete.\n          schema:\n            type: string\n      responses:\n        \"204\":\n          description: Success\n        default:\n          description: IAM Error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/IAMError\"\n  /acs/api/v1/groups/{gid}/permissions:\n    get:\n      operationId: getGroupPermissions\n      summary: Retrieve group permissions.\n      description: Retrieve permissions of this group.\n      tags:\n        - IAM\n          # - groups\n      parameters:\n        - name: gid\n          in: path\n          required: true\n          description: The group ID.\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: Success.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/IAMGroupPermissions\"\n        default:\n          description: IAM Error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/IAMError\"\n  /acs/api/v1/groups/{gid}/users:\n    get:\n      operationId: getGroupUsers\n      summary: Retrieve members of a group.\n      description: Retrieve users that are member of this group. Allows to query service\n        accounts, defaults to list only user accounts.\n      tags:\n        - IAM\n          # - groups\n      parameters:\n        - name: gid\n          in: path\n          required: true\n          description: The group ID.\n          schema:\n            type: string\n        - name: type\n          in: query\n          description: If set to `service`, list only service accounts. If unset, default\n            to only listing user accounts members of a group.\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: Success.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/IAMGroupUsers\"\n        default:\n          description: IAM Error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/IAMError\"\n  /acs/api/v1/groups/{gid}/users/{uid}:\n    delete:\n      operationId: deleteGroupUser\n      summary: Delete user account from group.\n      description: Delete user account from group.\n      tags:\n        - IAM\n          # - groups\n      parameters:\n        - name: gid\n          in: path\n          required: true\n          description: The ID of the group to delete from.\n          schema:\n            type: string\n        - name: uid\n          in: path\n          required: true\n          description: The ID of the user account.\n          schema:\n            type: string\n      responses:\n        \"204\":\n          description: Success.\n        default:\n          description: IAM Error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/IAMError\"\n    put:\n      operationId: createGroupUser\n      summary: Add account to group.\n      description: Add account to group.\n      tags:\n        - IAM\n          # - groups\n      parameters:\n        - name: gid\n          in: path\n          required: true\n          description: The ID of the group to add the user account to.\n          schema:\n            type: string\n        - name: uid\n          description: The ID of the account to add.\n          in: path\n          required: true\n          schema:\n            type: string\n      responses:\n        \"204\":\n          description: Success\n        \"409\":\n          description: account is already part of the group.\n        default:\n          description: IAM Error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/IAMError\"\n  /acs/api/v1/ldap/config:\n    get:\n      operationId: getLDAPConfiguration\n      summary: Retrieve current LDAP configuration.\n      description: Retrieve current directory (LDAP) back-end configuration.\n      tags:\n        - IAM\n          # - ldap\n      responses:\n        \"200\":\n          description: The response body contains a JSON object providing the current\n            configuration.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/IAMLDAPConfiguration\"\n        default:\n          description: IAM Error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/IAMError\"\n    put:\n      operationId: createLDAPConfiguration\n      summary: Set new LDAP configuration.\n      description: Set new directory (LDAP) back-end configuration. Replace current\n        configuration, if existing.\n      tags:\n        - IAM\n          # - ldap\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/IAMLDAPConfiguration\"\n        description: JSON object containing the LDAP configuration details.\n        required: true\n      responses:\n        \"200\":\n          description: Configuration has been persisted. Basic validation tests passed, but\n            the directory service was not contacted. You're encouraged to now\n            perform a basic feature check against the directory back-end with\n            the newly set configuration by using the the config test endpoint.\n        default:\n          description: IAM Error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/IAMError\"\n    delete:\n      operationId: deleteLDAPConfiguration\n      summary: Delete current LDAP configuration.\n      description: Delete current directory (LDAP) back-end configuration. This deactivates\n        the LDAP authentication.\n      tags:\n        - IAM\n          # - ldap\n      responses:\n        \"204\":\n          description: Configuration deleted.\n        default:\n          description: IAM Error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/IAMError\"\n  /acs/api/v1/ldap/config/test:\n    post:\n      operationId: testLDAPBackendConnection\n      summary: Test connection to the LDAP back-end.\n      description: Perform basic feature tests. Verify that the current directory (LDAP)\n        configuration parameters allow for a successful connection to the\n        directory back-end. For instance, this endpoint simulates the procedure\n        for authentication via LDAP, but provides more useful feedback upon\n        failure than the actual login endpoint.\n      tags:\n        - IAM\n          # - ldap\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/IAMLDAPTestCredentials\"\n        description: JSON object containing `uid` and password of an LDAP user. For the\n          most expressive test result, choose credentials different from the\n          lookup credentials. The `uid` is the string the user is supposed to\n          log in with after successful LDAP back-end configuration.\n        required: true\n      responses:\n        \"200\":\n          description: Directory back-end was reached and all feature tests passed.\n          content:\n            \"*/*\":\n              schema:\n                $ref: \"#/components/schemas/IAMLDAPTestResultObject\"\n        \"502\":\n          description: Either there was a connection error or one of the feature tests\n            failed. To distinguish this response from a proxy-generated 502, a\n            JSON object is included in the response. It contains a message in\n            its `description` property, describing the problem in more detail.\n          content:\n            \"*/*\":\n              schema:\n                $ref: \"#/components/schemas/IAMLDAPTestResultObject\"\n        default:\n          description: IAM Error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/IAMError\"\n  /acs/api/v1/ldap/importgroup:\n    post:\n      operationId: importLDAPGroup\n      summary: Import an LDAP group.\n      description: Attempt to import a group of users from the configured directory (LDAP)\n        back-end. See docs/ldap.md for details on group import.\n      tags:\n        - IAM\n          # - ldap\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/IAMLDAPImportGroupObject\"\n        description: A JSON object specifying the name of the group to be imported. The\n          meaning of the name depends on the group search settings.\n        required: true\n      responses:\n        \"201\":\n          description: Success.\n        default:\n          description: IAM Error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/IAMError\"\n  /acs/api/v1/ldap/importuser:\n    post:\n      operationId: importLDAPUser\n      summary: Import an LDAP user.\n      description: Attempt to import a user from the configured directory (LDAP) back-end.\n      tags:\n        - IAM\n          # - ldap\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/IAMLDAPImportUserObject\"\n        description: 'A JSON object specifying the username (read: \"login\" or \"user ID\") of\n          the user that should be imported. That string is equivalent to the\n          `uid` the user is supposed to log in with after successful import. The\n          exact meaning of this string depends on the configured LDAP\n          authentication method.'\n        required: true\n      responses:\n        \"201\":\n          description: Success.\n        default:\n          description: IAM Error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/IAMError\"\n  /acs/api/v1/users:\n    get:\n      operationId: getUsers\n      summary: Retrieve all regular user accounts or service user accounts.\n      description: Retrieve `User` objects. By default the list consists of regular user\n        accounts, only. Alternatively, service user accounts may be requested\n        instead.\n      tags:\n        - IAM\n          # - users\n      parameters:\n        - name: type\n          in: query\n          description: If set to `service`, list only service user accounts. If unset,\n            default to only listing regular user accounts.\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: Success.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/IAMUsers\"\n        default:\n          description: IAM Error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/IAMError\"\n  /acs/api/v1/users/{uid}:\n    get:\n      operationId: getUser\n      summary: Get single user object.\n      description: Get specific `User` object.\n      tags:\n        - IAM\n          # - users\n      parameters:\n        - name: uid\n          in: path\n          required: true\n          description: The ID of the user object to retrieve.\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: Success.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/IAMUser\"\n        default:\n          description: IAM Error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/IAMError\"\n    put:\n      operationId: createUser\n      summary: Create user account.\n      description: Create user (uid in url, details incl. credentials in body).\n      tags:\n        - IAM\n          # - users\n      parameters:\n        - name: uid\n          in: path\n          required: true\n          description: The ID of the user account to create.\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/IAMUserCreate\"\n        description: Password/description.\n        required: true\n      responses:\n        \"201\":\n          description: User created.\n        \"409\":\n          description: User already exists.\n        default:\n          description: IAM Error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/IAMError\"\n    patch:\n      operationId: updateUser\n      summary: Update user account.\n      description: Update existing user account (meta data and/or password).\n      tags:\n        - IAM\n          # - users\n      parameters:\n        - name: uid\n          in: path\n          required: true\n          description: The ID of the user account to modify.\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/IAMUserUpdate\"\n        description: Password/description.\n        required: true\n      responses:\n        \"204\":\n          description: Update applied.\n        \"501\":\n          description: Not implemented for service user accounts.\n        default:\n          description: IAM Error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/IAMError\"\n    delete:\n      operationId: deleteUser\n      summary: Delete account.\n      description: Delete account.\n      tags:\n        - IAM\n          # - users\n      parameters:\n        - name: uid\n          in: path\n          required: true\n          description: The ID of the user account to delete.\n          schema:\n            type: string\n      responses:\n        \"204\":\n          description: Success.\n        \"400\":\n          description: Bad request.\n        \"404\":\n          description: User account not found.\n        default:\n          description: IAM Error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/IAMError\"\n  /acs/api/v1/users/{uid}/groups:\n    get:\n      operationId: getUserGroups\n      summary: Retrieve groups the user is member of.\n      description: Retrieve groups the user is member of.\n      tags:\n        - IAM\n          # - users\n      parameters:\n        - name: uid\n          in: path\n          required: true\n          description: The ID of the user.\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: Success.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/IAMUserGroups\"\n        default:\n          description: IAM Error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/IAMError\"\n  /acs/api/v1/users/{uid}/permissions:\n    get:\n      operationId: getUserPermissions\n      summary: Retrieve permissions an account has.\n      description: Retrieve the permissions for this account with direct permissions\n        distinguished from those that are obtained through group membership.\n      tags:\n        - IAM\n          # - users\n      parameters:\n        - name: uid\n          in: path\n          required: true\n          description: The id of the user.\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: Success.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/IAMUserPermissions\"\n        default:\n          description: IAM Error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/IAMError\"\n\n  /cosmos/service/describe:\n    post:\n      description: Describes a DC/OS Service\n      operationId: service-describe\n      requestBody:\n        content:\n          application/vnd.dcos.service.describe-request+json;charset=utf-8;version=v1:\n            schema:\n              $ref: '#/components/schemas/CosmosServiceDescribeV1Request'\n      responses:\n        200:\n          description: Request successful\n          content:\n            application/vnd.dcos.service.describe-response+json;charset=utf-8;version=v1:\n              schema:\n                $ref: '#/components/schemas/CosmosServiceDescribeV1Response'\n        400:\n          description: Request failed due to a bad request\n          content:\n            application/vnd.dcos.service.describe-response+json;charset=utf-8;version=v1:\n              schema:\n                $ref: '#/components/schemas/CosmosError'\n      tags:\n      - cosmos\n  /cosmos/service/update:\n    post:\n      description: Runs a service update.\n      operationId: service-update\n      requestBody:\n        content:\n          application/vnd.dcos.service.update-request+json;charset=utf-8;version=v1:\n            schema:\n              $ref: '#/components/schemas/CosmosServiceUpdateV1Request'\n        required: true\n      responses:\n        200:\n          description: Service update successful\n          content:\n            application/vnd.dcos.service.update-response+json;charset=utf-8;version=v1:\n              schema:\n                $ref: '#/components/schemas/CosmosServiceUpdateV1Response'\n        400:\n          description: Service update failed due to a bad request\n          content:\n            application/vnd.dcos.service.update-response+json;charset=utf-8;version=v1:\n              schema:\n                $ref: '#/components/schemas/CosmosError'\n        404:\n          description: Service update failed because the request contains non-existant information\n          content:\n            application/vnd.dcos.service.update-response+json;charset=utf-8;version=v1:\n              schema:\n                $ref: '#/components/schemas/CosmosError'\n        409:\n          description: Service update failed due to version conflict\n          content:\n            application/vnd.dcos.service.update-response+json;charset=utf-8;version=v1:\n              schema:\n                $ref: '#/components/schemas/CosmosError'\n      tags:\n      - cosmos\n\n  /package/describe:\n    post:\n      description: Show information about the package, including the required resources and configuration to start the service, and command line extensions that are included with the package.\n      operationId: package-describe\n      requestBody:\n        content:\n          application/vnd.dcos.package.describe-request+json;charset=utf-8;version=v1:\n            schema:\n              $ref: '#/components/schemas/CosmosPackageDescribeV1Request'\n      responses:\n        200:\n          description: Request successful\n          content:\n            application/vnd.dcos.package.describe-response+json;charset=utf-8;version=v3:\n              schema:\n                $ref: '#/components/schemas/CosmosPackageDescribeV3Response'\n        400:\n          description: Request failed due to a bad request\n          content:\n            application/vnd.dcos.package.error+json;charset=utf-8;version=v1:\n              schema:\n                $ref: '#/components/schemas/CosmosError'\n      tags:\n      - cosmos\n  /package/render:\n    post:\n      description: Generates the Marathon application definition for the package name, version, and optional configuration JSON object.\n      operationId: package-render\n      requestBody:\n        content:\n          application/vnd.dcos.package.render-request+json;charset=utf-8;version=v1:\n            schema:\n              $ref: '#/components/schemas/CosmosPackageRenderV1Request'\n      responses:\n        200:\n          description: Request successful\n          content:\n            application/vnd.dcos.package.render-response+json;charset=utf-8;version=v1:\n              schema:\n                $ref: '#/components/schemas/CosmosPackageRenderV1Response'\n        400:\n          description: Request failed due to a bad request\n          content:\n            application/vnd.dcos.package.error+json;charset=utf-8;version=v1:\n              schema:\n                $ref: '#/components/schemas/CosmosError'\n      tags:\n      - cosmos\n  /package/install:\n    post:\n      description: Runs a service from a Universe package.\n      operationId: package-install\n      requestBody:\n        content:\n          application/vnd.dcos.package.install-request+json;charset=utf-8;version=v1:\n            schema:\n              $ref: '#/components/schemas/CosmosPackageInstallV1Request'\n        required: true\n      responses:\n        200:\n          description: Package successfully installed\n          content:\n            application/vnd.dcos.package.install-response+json;charset=utf-8;version=v1:\n              schema:\n                $ref: '#/components/schemas/CosmosPackageInstallV1Response'\n        400:\n          description: Package could not be installed due to a bad request\n          content:\n            application/vnd.dcos.package.error+json;charset=utf-8;version=v1:\n              schema:\n                $ref: '#/components/schemas/CosmosError'\n        409:\n          description: Package could not be installed due to a version conflict\n          content:\n            application/vnd.dcos.package.error+json;charset=utf-8;version=v1:\n              schema:\n                $ref: '#/components/schemas/CosmosError'\n      tags:\n      - cosmos\n  /package/list:\n    post:\n      description: Lists all of the running DC/OS services started from a DC/OS package.\n      operationId: package-list\n      requestBody:\n        content:\n          application/vnd.dcos.package.list-request+json;charset=utf-8;version=v1:\n            schema:\n              $ref: '#/components/schemas/CosmosPackageListV1Request'\n      responses:\n        200:\n          description: Request successful\n          content:\n            application/vnd.dcos.package.list-response+json;charset=utf-8;version=v1:\n              schema:\n                $ref: '#/components/schemas/CosmosPackageListV1Response'\n        400:\n          description: Request failed due to a bad request\n          content:\n            application/vnd.dcos.package.error+json;charset=utf-8;version=v1:\n              schema:\n                $ref: '#/components/schemas/CosmosError'\n      tags:\n      - cosmos\n\n  /package/repository/add:\n    post:\n      description: |\n        Adds a package repository (for example Universe) for use by DC/OS. To add a package\n        repository to the beginning of the list set the index to zero (0). To add a package\n        repository to the end of the list do not specify an index.\n      operationId: package-repository-add\n      requestBody:\n        content:\n          application/vnd.dcos.package.repository.add-request+json;charset=utf-8;version=v1:\n            schema:\n              $ref: '#/components/schemas/CosmosPackageAddRepoV1Request'\n      responses:\n        200:\n          description: Adding a package repository was successful\n          content:\n            application/vnd.dcos.package.repository.add-response+json;charset=utf-8;version=v1:\n              schema:\n                $ref: '#/components/schemas/CosmosPackageAddRepoV1Response'\n        400:\n          description: Adding a package repository failed due to a bad request\n          content:\n            application/vnd.dcos.package.error+json;charset=utf-8;version=v1:\n              schema:\n                $ref: '#/components/schemas/CosmosError'\n        409:\n          description: Adding a package repository failed due to a version conflict\n          content:\n            application/vnd.dcos.package.error+json;charset=utf-8;version=v1:\n              schema:\n                $ref: '#/components/schemas/CosmosError'\n      tags:\n      - cosmos\n  /package/repository/delete:\n    post:\n      description: Deletes a package repository (for example Universe) from DC/OS.\n      operationId: package-repository-delete\n      requestBody:\n        content:\n          application/vnd.dcos.package.repository.delete-request+json;charset=utf-8;version=v1:\n            schema:\n              $ref: '#/components/schemas/CosmosPackageDeleteRepoV1Request'\n      responses:\n        200:\n          description: Deletion of package repository successful\n          content:\n            application/vnd.dcos.package.repository.delete-response+json;charset=utf-8;version=v1:\n              schema:\n                $ref: '#/components/schemas/CosmosPackageDeleteRepoV1Response'\n        400:\n          description: Deletion of package repository failed due to a bad request\n          content:\n            application/vnd.dcos.package.error+json;charset=utf-8;version=v1:\n              schema:\n                $ref: '#/components/schemas/CosmosError'\n        404:\n          description: Deletion of package repository failed because the package does not exist\n          content:\n            application/vnd.dcos.package.error+json;charset=utf-8;version=v1:\n              schema:\n                $ref: '#/components/schemas/CosmosError'\n      tags:\n      - cosmos\n  /package/repository/list:\n    post:\n      description: |\n        Enumerates the package repositories (for example Universe) that are already installed\n        and in-use by DC/OS.\n      operationId: package-repository-list\n      requestBody:\n        content:\n          application/vnd.dcos.package.repository.list-request+json;charset=utf-8;version=v1:\n            schema:\n              $ref: '#/components/schemas/CosmosPackageListRepoV1Request'\n        required: true\n      responses:\n         200:\n          description: The list of repositories available on DC/OS.\n          content:\n            application/vnd.dcos.package.repository.list-response+json;charset=utf-8;version=v1:\n              schema:\n                $ref: '#/components/schemas/CosmosPackageListRepoV1Response'\n\n      tags:\n      - cosmos\n  /package/list-versions:\n    post:\n      description: |\n        Lists the versions of a given package.\n      operationId: package-list-versions\n      requestBody:\n        content:\n          application/vnd.dcos.package.list-versions-request+json;charset=utf-8;version=v1:\n            schema:\n              $ref: '#/components/schemas/CosmosPackageListVersionsV1Request'\n        required: true\n      responses:\n        200:\n          description: List versions successful\n          content:\n            application/vnd.dcos.package.list-versions-response+json;charset=utf-8;version=v1:\n              schema:\n                $ref: '#/components/schemas/CosmosPackageListVersionsV1Response'\n        400:\n          description: List versions failed due to a bad request\n          content:\n            application/vnd.dcos.package.error+json;charset=utf-8;version=v1:\n              schema:\n                $ref: '#/components/schemas/CosmosError'\n        409:\n          description: List versions failed due to a version conflict\n          content:\n            application/vnd.dcos.package.error+json;charset=utf-8;version=v1:\n              schema:\n                $ref: '#/components/schemas/CosmosError'\n      tags:\n      - cosmos\n  /package/search:\n    post:\n      description: |\n        Lists all matching packages in the repository given a partial pattern.\n        The character \\'\\*\\' can be used to match any number of characters.\n      operationId: package-search\n      requestBody:\n        content:\n          application/vnd.dcos.package.search-request+json;charset=utf-8;version=v1:\n            schema:\n              $ref: '#/components/schemas/CosmosPackageSearchV1Request'\n        required: true\n      responses:\n        200:\n          description: Package search successful\n          content:\n            application/vnd.dcos.package.search-response+json;charset=utf-8;version=v1:\n              schema:\n                $ref: '#/components/schemas/CosmosPackageSearchV1Response'\n        400:\n          description: Package search failed due to a bad request\n          content:\n            application/vnd.dcos.package.error+json;charset=utf-8;version=v1:\n              schema:\n                $ref: '#/components/schemas/CosmosError'\n        409:\n          description: Package search failed due to a version conflict\n          content:\n            application/vnd.dcos.package.error+json;charset=utf-8;version=v1:\n              schema:\n                $ref: '#/components/schemas/CosmosError'\n      tags:\n      - cosmos\n  /package/uninstall:\n    post:\n      operationId: package-uninstall\n      parameters:\n      - explode: false\n        in: header\n        name: Accept\n        required: false\n        schema:\n          enum:\n          - application/vnd.dcos.package.uninstall-response+json;charset=utf-8;version=v1\n          type: string\n        style: simple\n      requestBody:\n        content:\n          application/vnd.dcos.package.uninstall-request+json;charset=utf-8;version=v1:\n            schema:\n              $ref: '#/components/schemas/CosmosPackageUninstallV1Request'\n        required: true\n      responses:\n        200:\n          description: Package successfully uninstalled\n          content:\n            application/vnd.dcos.package.uninstall-response+json;charset=utf-8;version=v1:\n              schema:\n                $ref: '#/components/schemas/CosmosPackageUninstallV1Response'\n        400:\n          description: Package could not be uninstalled due to a bad request\n          content:\n            application/vnd.dcos.package.error+json;charset=utf-8;version=v1:\n              schema:\n                $ref: '#/components/schemas/CosmosError'\n        404:\n          description: Package not found\n          content:\n            application/vnd.dcos.package.error+json;charset=utf-8;version=v1:\n              schema:\n                $ref: '#/components/schemas/CosmosError'\n        409:\n          description: Package could not be uninstalled due to a version conflict\n          content:\n            application/vnd.dcos.package.error+json;charset=utf-8;version=v1:\n              schema:\n                $ref: '#/components/schemas/CosmosError'\n      tags:\n      - cosmos\n\n  /service/edgelb/ping:\n    get:\n      description: Healthcheck endpoint.\n      operationId: Ping\n      tags:\n        - edgelb\n      responses:\n        \"200\":\n          description: Pong.\n          content:\n            text/plain:\n              schema:\n                type: string\n        default:\n          description: Unexpected error.\n          content:\n            text/plain:\n              schema:\n                type: string\n  /service/edgelb/version:\n    get:\n      description: Returns the installed Edge-LB package version.\n      operationId: Version\n      tags:\n        - edgelb\n      responses:\n        \"200\":\n          description: Version.\n          content:\n            text/plain:\n              schema:\n                type: string\n        default:\n          description: Unexpected error.\n          content:\n            text/plain:\n              schema:\n                type: string\n  /service/edgelb/config:\n    get:\n      description: Get the entire configuration object including v1 and v2 pools.\n      operationId: GetConfigContainer\n      tags:\n        - edgelb\n      responses:\n        \"200\":\n          description: A configuration object containing all load balancer pools.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/EdgelbConfigContainer\"\n        default:\n          description: Unexpected error.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/EdgelbError\"\n  /service/edgelb/pools/{name}:\n    get:\n      description: Returns a v1 or v2 load balancer pool based on a single name.\n      operationId: GetPoolContainer\n      tags:\n        - edgelb\n      parameters:\n        - name: name\n          in: path\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: Load balancer pool response.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/EdgelbPoolContainer\"\n        default:\n          description: Unexpected error.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/EdgelbError\"\n  /service/edgelb/v2/pools:\n    get:\n      description: Get all load balancer pools.\n      operationId: V2GetPools\n      tags:\n        - edgelb\n      responses:\n        \"200\":\n          description: An array of load balancer pools.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/EdgelbV2Pools\"\n        default:\n          description: Unexpected error.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/EdgelbError\"\n    post:\n      description: Creates a new load balancer pool.\n      operationId: V2CreatePool\n      tags:\n        - edgelb\n      requestBody:\n        $ref: \"#/components/requestBodies/EdgelbV2Pool\"\n      responses:\n        \"200\":\n          description: Load Balancer Pool response.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/EdgelbV2Pool\"\n        \"409\":\n          description: Conflict pool.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/EdgelbError\"\n        default:\n          description: Unexpected error.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/EdgelbError\"\n  /service/edgelb/v2/pools/{name}:\n    get:\n      description: Returns a v2 load balancer pool based on a single name.\n      operationId: V2GetPool\n      tags:\n        - edgelb\n      parameters:\n        - name: name\n          in: path\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: Load balancer pool response.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/EdgelbV2Pool\"\n        \"404\":\n          description: Pool not found.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/EdgelbError\"\n        default:\n          description: Unexpected error.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/EdgelbError\"\n    put:\n      description: Updates a new load balancer pool.\n      operationId: V2UpdatePool\n      tags:\n        - edgelb\n      parameters:\n        - name: name\n          in: path\n          required: true\n          schema:\n            type: string\n      requestBody:\n        $ref: \"#/components/requestBodies/EdgelbV2Pool\"\n      responses:\n        \"200\":\n          description: Load Balancer Pool response.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/EdgelbV2Pool\"\n        default:\n          description: Unexpected error.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/EdgelbError\"\n    delete:\n      description: Deletes a single load balancer pool based on the name supplied.\n      operationId: V2DeletePool\n      tags:\n        - edgelb\n      parameters:\n        - name: name\n          in: path\n          required: true\n          schema:\n            type: string\n      responses:\n        \"204\":\n          description: Load balancer deleted.\n        \"400\":\n          description: Bad request.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/EdgelbError\"\n        \"404\":\n          description: Pool not found.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/EdgelbError\"\n        default:\n          description: Unexpected error.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/EdgelbError\"\n  /metadata:\n    get:\n      description: Public IP and Cluster ID\n      operationId: Metadata\n      tags:\n        - metadata\n      responses:\n        \"200\":\n          description: Public IP and Cluster ID\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Metadata\"\n  /system/health/v1:\n    get:\n      description: Public IP and Cluster ID\n      operationId: V1SystemHealth\n      tags:\n        - health\n      responses:\n        \"200\":\n          description: DC/OS System health data\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/V1SystemHealth\"\n  /system/health/v1/nodes:\n    get:\n      description: Public IP and Cluster ID\n      operationId: V1SystemHealthNodes\n      tags:\n        - health\n      responses:\n        \"200\":\n          description: DC/OS System Nodes health data\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/V1SystemHealthNodes\"\n  /system/health/v1/units:\n    get:\n      description: Public IP and Cluster ID\n      operationId: V1SystemHealthUnits\n      tags:\n        - health\n      responses:\n        \"200\":\n          description: DC/OS System Units health data\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/V1SystemHealthUnits\"\n  /system/health/v1/report:\n    get:\n      description: Public IP and Cluster ID\n      operationId: V1SystemHealthReport\n      tags:\n        - health\n      responses:\n        \"200\":\n          description: DC/OS System Nodes and Units health data\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/V1SystemHealthReport\"\n  /service/metronome/v1/jobs:\n    get:\n      description: Get the list of all jobs.\n      operationId: V1GetJobs\n      tags:\n        - metronome\n      parameters:\n        - name: embeded\n          in: query\n          schema:\n            type: array\n            items:\n              $ref: \"#/components/schemas/MetronomeEmbeded\"\n      responses:\n         200:\n          description: The list of jobs.\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: \"#/components/schemas/MetronomeV1Job\"\n    post:\n      description: Create a new job.\n      operationId: V1CreateJob\n      tags:\n        - metronome\n      requestBody:\n        $ref: \"#/components/requestBodies/MetronomeV1Job\"\n      responses:\n        \"201\":\n          description: The job has been created.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/MetronomeV1Job\"\n        \"422\":\n          description: The given entity can not be processed due to validation errors.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/MetronomeV1Error\"\n  /service/metronome/v1/jobs/{jobId}:\n    get:\n      description: Get the job with id `jobId`. You can specify optional embed arguments to get more embedded information.\n      operationId: V1GetJob\n      tags:\n        - metronome\n      parameters:\n        - name: jobId\n          in: path\n          required: true\n          schema:\n            type: string\n        - name: embeded\n          in: query\n          schema:\n            type: array\n            items:\n              $ref: \"#/components/schemas/MetronomeEmbeded\"\n      responses:\n        \"200\":\n          description: Requested Job found.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/MetronomeV1Job\"\n        \"404\":\n          description: No job found for given `jobId`.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/MetronomeV1Error\"\n    put:\n      description: Update an existing job.\n      operationId: V1UpdateJob\n      tags:\n        - metronome\n      parameters:\n        - name: jobId\n          in: path\n          required: true\n          schema:\n            type: string\n      requestBody:\n        $ref: \"#/components/requestBodies/MetronomeV1Job\"\n      responses:\n        \"200\":\n          description: Job updated.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/MetronomeV1Job\"\n        \"404\":\n          description: No job found for given `jobId`.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/MetronomeV1Error\"\n        \"422\":\n          description: The given entity can not be processed due to validation errors.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/MetronomeV1Error\"\n    delete:\n      description: Delete a job. All data about that job will be deleted.\n      operationId: V1DeleteJob\n      tags:\n        - metronome\n      parameters:\n        - name: jobId\n          in: path\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: Job deleted.\n        \"404\":\n          description: No job found for given `jobId`.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/MetronomeV1Error\"\n  /service/metronome/v1/jobs/{jobId}/schedules:\n    get:\n      description: Get the list of all schedules for this jobId.\n      operationId: V1GetJobSchedules\n      tags:\n        - metronome\n      parameters:\n        - name: jobId\n          in: path\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: The list of schedules for this job.\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: \"#/components/schemas/MetronomeV1JobSchedule\"\n        \"401\":\n          description: Unauthorized. Authentication is enabled and you did not provide enough or wrong information to authenticate that request.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/MetronomeV1Error\"\n        \"403\":\n          description: Forbidden. Authorization is granted but the identity provided does not have sufficient access rights to perform that action.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/MetronomeV1Error\"\n    post:\n      description: Create a new schedule\n      operationId: V1CreateJobSchedules\n      tags:\n        - metronome\n      parameters:\n        - name: jobId\n          in: path\n          required: true\n          schema:\n            type: string\n      requestBody:\n        $ref: \"#/components/requestBodies/MetronomeV1JobSchedule\"\n      responses:\n        \"201\":\n          description: The schedule has been created.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/MetronomeV1JobSchedule\"\n        \"401\":\n          description: Unauthorized. Authentication is enabled and you did not provide enough or wrong information to authenticate that request.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/MetronomeV1Error\"\n        \"403\":\n          description: Forbidden. Authorization is granted but the identity provided does not have sufficient access rights to perform that action.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/MetronomeV1Error\"\n        \"422\":\n          description: The given entity can not be processed due to validation errors.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/MetronomeV1Error\"\n\n  /service/metronome/v1/jobs/{jobId}/schedules/{scheduleId}:\n    get:\n      description: Get the schedule for jobId with schedule scheduleId\n      operationId: V1GetJobSchedulesByScheduleId\n      tags:\n        - metronome\n      parameters:\n        - name: jobId\n          in: path\n          required: true\n          schema:\n            type: string\n        - name: scheduleId\n          in: path\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: The list of schedules for this job.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/MetronomeV1JobSchedule\"\n        \"401\":\n          description: Unauthorized. Authentication is enabled and you did not provide enough or wrong information to authenticate that request.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/MetronomeV1Error\"\n        \"403\":\n          description: Forbidden. Authorization is granted but the identity provided does not have sufficient access rights to perform that action.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/MetronomeV1Error\"\n        \"404\":\n          description: No schedule found for the given scheduleId.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/MetronomeV1Error\"\n    put:\n      description: Replaces an existing schedule.\n      operationId: V1PutJobSchedulesByScheduleId\n      tags:\n        - metronome\n      parameters:\n        - name: jobId\n          in: path\n          required: true\n          schema:\n            type: string\n        - name: scheduleId\n          in: path\n          required: true\n          schema:\n            type: string\n      requestBody:\n        $ref: \"#/components/requestBodies/MetronomeV1JobSchedule\"\n      responses:\n        \"401\":\n          description: Unauthorized. Authentication is enabled and you did not provide enough or wrong information to authenticate that request.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/MetronomeV1Error\"\n        \"403\":\n          description: Forbidden. Authorization is granted but the identity provided does not have sufficient access rights to perform that action.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/MetronomeV1Error\"\n        \"404\":\n          description: No schedule found for the given scheduleId.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/MetronomeV1Error\"\n        \"422\":\n          description: The given entity can not be processed due to validation errors.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/MetronomeV1Error\"\n    delete:\n      description: Destroy a schedule\n      operationId: V1DeleteJobSchedulesByScheduleId\n      tags:\n        - metronome\n      parameters:\n        - name: jobId\n          in: path\n          required: true\n          schema:\n            type: string\n        - name: scheduleId\n          in: path\n          required: true\n          schema:\n            type: string\n      responses:\n        \"401\":\n          description: Unauthorized. Authentication is enabled and you did not provide enough or wrong information to authenticate that request.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/MetronomeV1Error\"\n        \"403\":\n          description: Forbidden. Authorization is granted but the identity provided does not have sufficient access rights to perform that action.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/MetronomeV1Error\"\n        \"404\":\n          description: No schedule found for the given scheduleId.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/MetronomeV1Error\"\n  /service/metronome/v1/jobs/{jobId}/runs:\n    get:\n      description: Get the list of all runs for this jobId\n      operationId: V1GetJobIdRuns\n      tags:\n        - metronome\n      parameters:\n        - name: jobId\n          in: path\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: The list of schedules for this job.\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: \"#/components/schemas/MetronomeV1Job\"\n        \"401\":\n          description: Unauthorized. Authentication is enabled and you did not provide enough or wrong information to authenticate that request.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/MetronomeV1Error\"\n        \"403\":\n          description: Forbidden. Authorization is granted but the identity provided does not have sufficient access rights to perform that action.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/MetronomeV1Error\"\n    post:\n      description: Trigger a new job run.\n      operationId: V1StartJobRun\n      tags:\n        - metronome\n      parameters:\n        - name: jobId\n          in: path\n          required: true\n          schema:\n            type: string\n      responses:\n        \"201\":\n          description: The job run has been created.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/MetronomeV1Job\"\n        \"401\":\n          description: Unauthorized. Authentication is enabled and you did not provide enough or wrong information to authenticate that request.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/MetronomeV1Error\"\n        \"403\":\n          description: Forbidden. Authorization is granted but the identity provided does not have sufficient access rights to perform that action.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/MetronomeV1Error\"\n  /service/metronome/v1/jobs/{jobId}/runs/{runId}:\n    get:\n      description: Get the job run for job jobId with id runId.\n      operationId: V1GetJobRunByRunId\n      tags:\n        - metronome\n      parameters:\n        - name: jobId\n          in: path\n          required: true\n          schema:\n            type: string\n        - name: runId\n          in: path\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: The list of schedules for this job.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/MetronomeV1Job\"\n        \"401\":\n          description: Unauthorized. Authentication is enabled and you did not provide enough or wrong information to authenticate that request.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/MetronomeV1Error\"\n        \"403\":\n          description: Forbidden. Authorization is granted but the identity provided does not have sufficient access rights to perform that action.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/MetronomeV1Error\"\n        \"404\":\n          description: No run found for given runId.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/MetronomeV1Error\"\n  /service/metronome/v1/jobs/{jobId}/runs/{runId}/actions/stop:\n    post:\n      description: Stop an existing job run\n      operationId: V1StopJobRunByRunId\n      tags:\n        - metronome\n      parameters:\n        - name: jobId\n          in: path\n          required: true\n          schema:\n            type: string\n        - name: runId\n          in: path\n          required: true\n          schema:\n            type: string\n      responses:\n        \"401\":\n          description: Unauthorized. Authentication is enabled and you did not provide enough or wrong information to authenticate that request.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/MetronomeV1Error\"\n        \"403\":\n          description: Forbidden. Authorization is granted but the identity provided does not have sufficient access rights to perform that action.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/MetronomeV1Error\"\n        \"404\":\n          description: No run found for given runId.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/MetronomeV1Error\"\n  /net/v1/nodes:\n    get:\n      description: Exposes the public IP addresses for nodes in a cluster\n      operationId: V1Nodes\n      tags:\n        - networking\n      responses:\n        \"401\":\n          description: Unauthorized. Authentication is enabled and you did not provide enough or wrong information to authenticate that request.\n        \"200\":\n          description: public IP addresses for nodes in a cluster\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: \"#/components/schemas/NetworkingV1Node\"\n\ncomponents:\n  requestBodies:\n    SecretsV1Secret:\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/SecretsV1Secret'\n      description: Secret value.\n      required: true\n    OIDCProviderConfig:\n      content:\n        application/json:\n          schema:\n            $ref: \"#/components/schemas/IAMOIDCProviderConfig\"\n      description: Provider config JSON object\n      required: true\n    SAMLProviderConfig:\n      content:\n        application/json:\n          schema:\n            $ref: \"#/components/schemas/IAMSAMLProviderConfig\"\n      description: Provider config JSON object\n      required: true\n\n    EdgelbV2Pool:\n      content:\n        application/json:\n          schema:\n            $ref: \"#/components/schemas/EdgelbV2Pool\"\n      required: true\n    MetronomeV1Job:\n      content:\n        application/json:\n          schema:\n            $ref: \"#/components/schemas/MetronomeV1Job\"\n      required: true\n    MetronomeV1JobSchedule:\n      content:\n        application/json:\n          schema:\n            $ref: \"#/components/schemas/MetronomeV1JobSchedule\"\n      required: true\n\n  schemas:\n    SecretsV1Secret:\n      example:\n        value: value\n      properties:\n        value:\n          type: string\n      type: object\n    CosmosHashAlgo:\n      enum:\n      - sha256\n      type: string\n    CosmosPackageResourceAssets:\n      properties:\n        container:\n          $ref: '#/components/schemas/CosmosPackageResourceAssetsContainer'\n        uris:\n          additionalProperties:\n            type: string\n          type: object\n      type: object\n    CosmosPackageResourceCliBinaries:\n      minProperties: 1\n      properties:\n        darwin:\n          $ref: '#/components/schemas/CosmosPackageResourceCliOsBinaries'\n        linux:\n          $ref: '#/components/schemas/CosmosPackageResourceCliOsBinaries'\n        windows:\n          $ref: '#/components/schemas/CosmosPackageResourceCliOsBinaries'\n      type: object\n    CosmosPackageResourceCli:\n      properties:\n        binaries:\n          $ref: '#/components/schemas/CosmosPackageResourceCliBinaries'\n      type: object\n    CosmosPackageResourceCliArtifact:\n      properties:\n        contentHash:\n          items:\n            $ref: '#/components/schemas/CosmosHash'\n          minItems: 1\n          type: array\n        kind:\n          enum:\n          - executable\n          - zip\n          type: string\n        url:\n          format: uri\n          pattern: ^https?://\n          type: string\n      type: object\n    CosmosPackageCommand:\n      properties:\n        name:\n          type: string\n        pip:\n          description: '[Deprecated v3.x] An array of strings representing of the\n            requirements file to use for installing the subcommand for Pip. Each item\n            is interpreted as a line in the requirements file.'\n          items:\n            type: string\n          type: array\n      type: object\n    CosmosPackageDescribeV1Request:\n      properties:\n        packageName:\n          type: string\n        packageVersion:\n          type: string\n      required:\n      - packageName\n      type: object\n    CosmosPackageListV1Request:\n      properties:\n        packageName:\n          type: string\n        appId:\n          type: string\n      type: object\n    CosmosError:\n      properties:\n        type:\n          type: string\n        message:\n          type: string\n        data:\n          type: object\n      required:\n      - message\n      - type\n    CosmosHash:\n      properties:\n        algo:\n          $ref: '#/components/schemas/CosmosHashAlgo'\n        value:\n          type: string\n      type: object\n    CosmosPackageResourceImages:\n      properties:\n        icon-large:\n          description: PNG icon URL, preferably 256 by 256 pixels.\n          type: string\n        icon-medium:\n          description: PNG icon URL, preferably 128 by 128 pixels.\n          type: string\n        icon-small:\n          description: PNG icon URL, preferably 48 by 48 pixels.\n          type: string\n        screenshots:\n          items:\n            description: PNG screen URL, preferably 1024 by 1024 pixels.\n            type: string\n          type: array\n      type: object\n    CosmosPackageInstallV1Request:\n      properties:\n        appId:\n          type: string\n        options:\n          type: object\n        packageName:\n          type: string\n        packageVersion:\n          type: string\n      required:\n      - packageName\n      type: object\n    CosmosPackageInstallV1Response:\n      properties:\n        appId:\n          type: string\n        cli:\n          $ref: '#/components/schemas/CosmosPackageResourceCli'\n        packageName:\n          type: string\n        packageVersion:\n          type: string\n        postInstallNotes:\n          type: string\n      required:\n      - packageName\n      - packageVersion\n      type: object\n    CosmosPackageRenderV1Request:\n      properties:\n        appId:\n          type: string\n        options:\n          type: object\n        packageName:\n          type: string\n        packageVersion:\n          type: string\n      required:\n      - packageName\n      type: object\n    CosmosPackageRenderV1Response:\n      properties:\n        marathonJson:\n          type: object\n      required:\n      - marathonJson\n      type: object\n    CosmosPackageRepo:\n      properties:\n        name:\n          type: string\n        uri:\n          format: uri\n          pattern: ^https?://\n          type: string\n      required:\n      - name\n      - uri\n      type: object\n    CosmosPackageSearchV1Request:\n      properties:\n        query:\n          type: string\n      type: object\n    CosmosPackageSearchV1Response:\n      properties:\n        packages:\n          type: array\n          items:\n            $ref: '#/components/schemas/CosmosPackageSearchDetails'\n    CosmosPackageSearchDetails:\n      type: object\n      properties:\n        name:\n          type: \"string\"\n        currentVersion:\n          type: \"string\"\n        description:\n          type: \"string\"\n        framework:\n          type: \"boolean\"\n        selected:\n          type: \"boolean\"\n        images:\n          $ref: '#/components/schemas/CosmosPackageResourceImages'\n        tags:\n          items:\n            pattern: '^[^\\s]+$'\n            type: string\n          type: array\n        versions:\n          type: \"object\"\n      required:\n        - name\n        - currentVersion\n        - versions\n        - description\n        - framework\n        - tags\n    CosmosServiceUpdateV1Request:\n      properties:\n        appId:\n          type: string\n        options:\n          type: object\n        packageName:\n          type: string\n        packageVersion:\n          type: string\n        replace:\n          description: If true any stored configuration will be ignored when producing the updated service configuration.\n          type: boolean\n      required:\n      - appId\n      - replace\n      type: object\n    CosmosServiceUpdateV1Response:\n      properties:\n        marathonDeploymentId:\n          type: string\n        package:\n          $ref: '#/components/schemas/CosmosPackage'\n        resolvedOptions:\n          description: The result of merging the default package options with the user supplied options\n          type: object\n      required:\n      - marathonDeploymentId\n      - package\n      - resolvedOptions\n      type: object\n    CosmosPackageUninstallV1Request:\n      properties:\n        appId:\n          type: string\n        packageName:\n          type: string\n        all:\n          type: boolean\n      required:\n      - packageName\n      type: object\n    CosmosPackageUninstallV1Response:\n      properties:\n        results:\n          type: array\n          items:\n            type: object\n            properties:\n              appId:\n                type: string\n              packageName:\n                type: string\n              packageVersion:\n                type: string\n              postUninstallNotes:\n                type: string\n            required:\n            - appId\n            - packageName\n      required:\n      - results\n      type: object\n    CosmosPackageLicense:\n      properties:\n        name:\n          description: The name of the license. For example one of [Apache License Version 2.0 | MIT License | BSD License | Proprietary]\n          type: string\n        url:\n          format: uri\n          pattern: ^https?://\n          type: string\n      required:\n      - name\n      - url\n      type: object\n    CosmosPackageMarathon:\n      properties:\n        v2AppMustacheTemplate:\n          pattern: ^([A-Za-z0-9+/]{4})*([A-Za-z0-9+/]{4}|[A-Za-z0-9+/]{3}=|[A-Za-z0-9+/]{2}==)$\n          type: string\n      required:\n      - v2AppMustacheTemplate\n      type: object\n    CosmosPackageResourceCliOsBinaries:\n      properties:\n        x86-64:\n          $ref: '#/components/schemas/CosmosPackageResourceCliArtifact'\n      type: object\n    CosmosServiceDescribeV1Request:\n      properties:\n        appId:\n          type: string\n        managerId:\n          type: string\n      required:\n      - appId\n      - managerId\n      type: object\n    CosmosPackageDeleteRepoV1Request:\n      properties:\n        name:\n          type: string\n        uri:\n          format: uri\n          pattern: ^https?://\n          type: string\n      type: object\n    CosmosPackageDeleteRepoV1Response:\n      properties:\n        repositories:\n          items:\n            $ref: '#/components/schemas/CosmosPackageRepo'\n          type: array\n      required:\n      - repositories\n      type: object\n    CosmosPackageAddRepoV1Request:\n      properties:\n        name:\n          type: string\n        uri:\n          format: uri\n          pattern: ^https?://\n          type: string\n        index:\n          format: int32\n          minimum: 0\n          type: integer\n          nullable: true\n      required:\n      - name\n      - uri\n      type: object\n    CosmosPackageAddRepoV1Response:\n      properties:\n        repositories:\n          items:\n            $ref: '#/components/schemas/CosmosPackageRepo'\n          type: array\n      required:\n      - repositories\n      type: object\n    CosmosPackageListVersionsV1Request:\n      properties:\n        packageName:\n          type: string\n        includePackageVersions:\n          type: boolean\n      required:\n      - packageName\n      - includePackageVersions\n      type: object\n    CosmosPackageListVersionsV1Response:\n      properties:\n        results:\n          additionalProperties:\n            type: string\n          type: object\n      required:\n      - results\n      type: object\n    CosmosPackageListRepoV1Request:\n      type: object\n    CosmosPackageListRepoV1Response:\n      properties:\n        repositories:\n          items:\n            $ref: '#/components/schemas/CosmosPackageRepo'\n          type: array\n      required:\n      - repositories\n      type: object\n    CosmosServiceDescribeV1Response:\n      properties:\n        downgradesTo:\n          items:\n            type: string\n          type: array\n        package:\n          $ref: '#/components/schemas/CosmosPackage'\n        resolvedOptions:\n          description: The result of merging the default package options with the user supplied options\n          type: object\n        upgradesTo:\n          items:\n            type: string\n          type: array\n        userProvidedOptions:\n          description: The options the user provided to run the service\n          type: object\n      required:\n      - downgradesTo\n      - package\n      - upgradesTo\n      type: object\n    CosmosPackageResource:\n      properties:\n        assets:\n          $ref: '#/components/schemas/CosmosPackageResourceAssets'\n        cli:\n          $ref: '#/components/schemas/CosmosPackageResourceCli'\n        images:\n          $ref: '#/components/schemas/CosmosPackageResourceImages'\n      type: object\n    CosmosPackageDescribeV3Response:\n      properties:\n        package:\n          $ref: '#/components/schemas/CosmosPackage'\n      required:\n      - package\n      type: object\n    CosmosPackageListV1Response:\n      properties:\n        packages:\n          type: array\n          items:\n            $ref: '#/components/schemas/CosmosPackageListV1Package'\n      required:\n      - packages\n      type: object\n    CosmosPackageListV1Package:\n      properties:\n        appId:\n          type: string\n        packageInformation:\n          type: object\n          $ref: '#/components/schemas/CosmosPackageListV1PackageInformation'\n      type: object\n    CosmosPackageListV1PackageInformation:\n      properties:\n        appId:\n          type: string\n        packageDefinition:\n          type: object\n          $ref: '#/components/schemas/CosmosPackage'\n      type: object\n    CosmosPackage:\n      properties:\n        command:\n          $ref: '#/components/schemas/CosmosPackageCommand'\n        config:\n          # Setting additionalProperties to true causes a JSON unmarshalling error.\n          # In the future this property should be set to a JSON schema definition.\n          type: object\n        description:\n          type: string\n        downgradesTo:\n          description: List of versions that this package can downgrade to. If the property is a list containing the string '*', this package can downgrade to any version. If the property is not set or the empty list, this package cannot downgrade.\n          items:\n            type: string\n          type: array\n        framework:\n          default: false\n          description: True if this package installs a new Mesos framework.\n          type: boolean\n        licenses:\n          items:\n            $ref: '#/components/schemas/CosmosPackageLicense'\n          type: array\n        maintainer:\n          type: string\n        marathon:\n          $ref: '#/components/schemas/CosmosPackageMarathon'\n        minDcosReleaseVersion:\n          description: The minimum DC/OS Release Version the package can run on.\n          pattern: ^(?:0|[1-9][0-9]*)(?:\\.(?:0|[1-9][0-9]*))*$\n          type: string\n        name:\n          type: string\n        packagingVersion:\n          enum:\n          - \"5.0\"\n          type: string\n        postInstallNotes:\n          description: Post installation notes that would be useful to the user of this package.\n          type: string\n        postUninstallNotes:\n          description: Post uninstallation notes that would be useful to the user of this package.\n          type: string\n        preInstallNotes:\n          description: Pre installation notes that would be useful to the user of this package.\n          type: string\n        releaseVersion:\n          description: Corresponds to the revision index from the universe directory structure\n          format: int64\n          minimum: 0\n          type: integer\n        resource:\n          $ref: '#/components/schemas/CosmosPackageResource'\n        scm:\n          type: string\n        selected:\n          default: false\n          description: Flag indicating if the package is selected in search results\n          type: boolean\n        tags:\n          items:\n            pattern: ^[^\\s]+$\n            type: string\n          type: array\n        upgradesFrom:\n          description: List of versions that can upgrade to this package. If the property is a list containing the string '*', any version can upgrade to this package. If the property is not set or the empty list, no version can upgrade to this package.\n          items:\n            type: string\n          type: array\n        version:\n          pattern: ^[-a-zA-Z0-9.]+$\n          type: string\n        website:\n          type: string\n        manager:\n          $ref: '#/components/schemas/CosmosPackageManager'\n        lastUpdated:\n          description: When this DC/OS package was last updated\n          type: integer\n          format: int64\n      required:\n      - description\n      - maintainer\n      - name\n      - packagingVersion\n      - releaseVersion\n      - version\n      type: object\n    CosmosPackageManager:\n      properties:\n        packageName:\n          type: string\n        minPackageVersion:\n          type: string\n      type: object\n    CosmosPackageResourceAssetsContainer:\n      properties:\n        docker:\n          additionalProperties:\n            type: string\n          type: object\n    IAMLoginObject:\n      type: object\n      properties:\n        uid:\n          type: string\n        password:\n          type: string\n        token:\n          type: string\n    IAMAuthToken:\n      type: object\n      required:\n        - token\n      properties:\n        token:\n          type: string\n    IAMUser:\n      type: object\n      required:\n        - uid\n        - url\n        - description\n        - is_remote\n        - provider_type\n        - provider_id\n      properties:\n        uid:\n          type: string\n        url:\n          type: string\n        description:\n          type: string\n        is_remote:\n          type: boolean\n        is_service:\n          type: boolean\n        public_key:\n          type: string\n        provider_type:\n          type: string\n        provider_id:\n          type: string\n    IAMUsers:\n      type: object\n      properties:\n        array:\n          type: array\n          items:\n            $ref: \"#/components/schemas/IAMUser\"\n    IAMUserCreate:\n      type: object\n      properties:\n        description:\n          type: string\n        password:\n          type: string\n        public_key:\n          type: string\n        provider_type:\n          type: string\n        provider_id:\n          type: string\n        cluster_url:\n          type: string\n        creator_uid:\n          type: string\n    IAMUserUpdate:\n      type: object\n      properties:\n        description:\n          type: string\n        password:\n          type: string\n    IAMOIDCProviderConfig:\n      type: object\n      required:\n        - description\n        - issuer\n        - base_url\n        - client_secret\n        - client_id\n      properties:\n        description:\n          type: string\n        issuer:\n          type: string\n        base_url:\n          type: string\n        client_secret:\n          type: string\n        client_id:\n          type: string\n        verify_server_certificate:\n          type: boolean\n        ca_certs:\n          type: string\n    IAMAction:\n      type: object\n      required:\n        - name\n        - url\n      properties:\n        name:\n          type: string\n        url:\n          type: string\n    IAMActions:\n      type: object\n      properties:\n        array:\n          type: array\n          items:\n            $ref: \"#/components/schemas/IAMAction\"\n    IAMUserGroups:\n      type: object\n      properties:\n        array:\n          type: array\n          items:\n            type: object\n            required:\n              - group\n              - membershipurl\n            properties:\n              membershipurl:\n                type: string\n              group:\n                $ref: \"#/components/schemas/IAMGroup\"\n    IAMUserPermissions:\n      type: object\n      properties:\n        direct:\n          type: array\n          items:\n            type: object\n            required:\n              - rid\n              - description\n              - aclurl\n              - actions\n            properties:\n              rid:\n                type: string\n              description:\n                type: string\n              aclurl:\n                type: string\n              actions:\n                type: array\n                items:\n                  $ref: \"#/components/schemas/IAMAction\"\n        groups:\n          type: array\n          items:\n            type: object\n            required:\n              - rid\n              - gid\n              - description\n              - aclurl\n              - membershipurl\n              - actions\n            properties:\n              rid:\n                type: string\n              gid:\n                type: string\n              description:\n                type: string\n              aclurl:\n                type: string\n              membershipurl:\n                type: string\n              actions:\n                type: array\n                items:\n                  $ref: \"#/components/schemas/IAMAction\"\n    IAMGroup:\n      type: object\n      required:\n        - gid\n        - url\n        - description\n        - provider_type\n      properties:\n        gid:\n          type: string\n        url:\n          type: string\n        description:\n          type: string\n        provider_type:\n          type: string\n\n    IAMGroups:\n      type: object\n      properties:\n        array:\n          type: array\n          items:\n            $ref: \"#/components/schemas/IAMGroup\"\n\n    IAMGroupCreate:\n      type: object\n      required:\n        - description\n      properties:\n        description:\n          type: string\n        provider_type:\n          type: string\n    IAMGroupUpdate:\n      type: object\n      required:\n        - description\n      properties:\n        description:\n          type: string\n    IAMGroupUsers:\n      type: object\n      properties:\n        array:\n          type: array\n          items:\n            type: object\n            required:\n              - membershipurl\n              - user\n            properties:\n              membershipurl:\n                type: string\n              user:\n                $ref: \"#/components/schemas/IAMUser\"\n    IAMGroupPermissions:\n      type: object\n      properties:\n        array:\n          type: array\n          items:\n            type: object\n            required:\n              - rid\n              - description\n              - aclurl\n              - actions\n            properties:\n              rid:\n                type: string\n              description:\n                type: string\n              aclurl:\n                type: string\n              actions:\n                type: array\n                items:\n                  $ref: \"#/components/schemas/IAMAction\"\n    IAMACL:\n      type: object\n      required:\n        - rid\n        - url\n        - description\n      properties:\n        rid:\n          type: string\n        url:\n          type: string\n        description:\n          type: string\n\n    IAMAcls:\n      type: object\n      properties:\n        array:\n          type: array\n          items:\n            $ref: \"#/components/schemas/IAMACL\"\n\n    IAMACLCreate:\n      type: object\n      required:\n        - description\n      properties:\n        description:\n          type: string\n    IAMACLUpdate:\n      type: object\n      required:\n        - description\n      properties:\n        description:\n          type: string\n    IAMACLPermissions:\n      type: object\n      properties:\n        groups:\n          type: array\n          items:\n            type: object\n            required:\n              - gid\n              - groupurl\n              - actions\n            properties:\n              gid:\n                type: string\n              groupurl:\n                type: string\n              actions:\n                type: array\n                items:\n                  $ref: \"#/components/schemas/IAMAction\"\n        users:\n          type: array\n          items:\n            type: object\n            required:\n              - uid\n              - userurl\n              - actions\n            properties:\n              uid:\n                type: string\n              userurl:\n                type: string\n              actions:\n                type: array\n                items:\n                  $ref: \"#/components/schemas/IAMAction\"\n    IAMActionAllowed:\n      type: object\n      required:\n        - allowed\n      properties:\n        allowed:\n          type: boolean\n    IAMSAMLProviderConfig:\n      type: object\n      required:\n        - description\n        - idp_metadata\n        - sp_base_url\n      properties:\n        description:\n          type: string\n        idp_metadata:\n          type: string\n        sp_base_url:\n          type: string\n    IAMSAMLACSCallbackUrlObject:\n      type: object\n      required:\n        - acs-callback-url\n      properties:\n        acs-callback-url:\n          type: string\n    IAMLDAPUserSearchConfig:\n      type: object\n      required:\n        - search-base\n        - search-filter-template\n      properties:\n        search-base:\n          type: string\n        search-filter-template:\n          type: string\n    IAMLDAPGroupSearchConfig:\n      type: object\n      required:\n        - search-base\n        - search-filter-template\n      properties:\n        search-base:\n          type: string\n        search-filter-template:\n          type: string\n        member-attributes:\n          type: array\n          items:\n            type: string\n    IAMLDAPConfiguration:\n      type: object\n      required:\n        - host\n        - port\n        - enforce-starttls\n        - use-ldaps\n      properties:\n        host:\n          type: string\n        dntemplate:\n          type: string\n        port:\n          type: integer\n        enforce-starttls:\n          type: boolean\n        use-ldaps:\n          type: boolean\n        lookup-dn:\n          type: string\n        lookup-password:\n          type: string\n        user-search:\n          $ref: \"#/components/schemas/IAMLDAPUserSearchConfig\"\n        group-search:\n          $ref: \"#/components/schemas/IAMLDAPGroupSearchConfig\"\n        ca-certs:\n          type: string\n        client-cert:\n          type: string\n    IAMLDAPImportUserObject:\n      type: object\n      required:\n        - username\n      properties:\n        username:\n          type: string\n    IAMLDAPImportGroupObject:\n      type: object\n      required:\n        - groupname\n      properties:\n        groupname:\n          type: string\n    IAMLDAPTestCredentials:\n      type: object\n      required:\n        - uid\n        - password\n      properties:\n        uid:\n          type: string\n        password:\n          type: string\n    IAMLDAPTestResultObject:\n      type: object\n      required:\n        - code\n        - description\n      properties:\n        code:\n          type: string\n        description:\n          type: string\n    IAMError:\n      type: object\n      properties:\n        title:\n          type: string\n        description:\n          type: string\n        code:\n          $ref: '#/components/schemas/IAMErrorCode'\n    IAMErrorCode:\n      type: string\n      enum:\n        - ERR_ACL_EXISTS\n        - ERR_ACTION_NOT_YET_STORED\n        - ERR_CANNOT_IMPORT_USER\n        - ERR_GROUP_EXISTS\n        - ERR_GROUP_NOT_IN_ACL\n        - ERR_INVALID_ACTION\n        - ERR_INVALID_CREDENTIALS\n        - ERR_INVALID_CREDENTIALS_LDAP\n        - ERR_INVALID_DATA\n        - ERR_INVALID_GROUP_ID\n        - ERR_INVALID_PUBLIC_KEY\n        - ERR_INVALID_RESOURCE_ID\n        - ERR_INVALID_USER_ID\n        - ERR_IS_SUPERUSER_ACL\n        - ERR_IS_SUPERUSER_GROUP\n        - ERR_JWKS_NOT_IMPLEMENTED_FOR_HS256\n        - ERR_LDAP_AUTH_FAILED\n        - ERR_LDAP_CONFIG_INVALID\n        - ERR_LDAP_CONFIG_NOT_AVAILABLE\n        - ERR_LDAP_IMPORT\n        - ERR_LDAP_IMPORT_GROUP_NOT_FOUND\n        - ERR_LDAP_IMPORT_SEARCH_FAILED\n        - ERR_LDAP_IMPORT_USER_NOT_FOUND\n        - ERR_MISSING_QUERY_PARAMETERS\n        - ERR_NO_MORE_SUPERUSERS\n        - ERR_OIDC_PROVIDER_CONFIG_INVALID\n        - ERR_PERMISSION_EXISTS\n        - ERR_UNKNOWN_GROUP_ID\n        - ERR_UNKNOWN_RESOURCE_ID\n        - ERR_UNKNOWN_USER_ID\n        - ERR_USER_ALREADY_IN_GROUP\n        - ERR_USER_EXISTS\n        - ERR_USER_NOT_IN_ACL\n        - ERR_USER_NOT_IN_GROUP\n      x-enum-varnames:\n        - IAM_ERR_ACL_EXISTS\n        - IAM_ERR_ACTION_NOT_YET_STORED\n        - IAM_ERR_CANNOT_IMPORT_USER\n        - IAM_ERR_GROUP_EXISTS\n        - IAM_ERR_GROUP_NOT_IN_ACL\n        - IAM_ERR_INVALID_ACTION\n        - IAM_ERR_INVALID_CREDENTIALS\n        - IAM_ERR_INVALID_CREDENTIALS_LDAP\n        - IAM_ERR_INVALID_DATA\n        - IAM_ERR_INVALID_GROUP_ID\n        - IAM_ERR_INVALID_PUBLIC_KEY\n        - IAM_ERR_INVALID_RESOURCE_ID\n        - IAM_ERR_INVALID_USER_ID\n        - IAM_ERR_IS_SUPERUSER_ACL\n        - IAM_ERR_IS_SUPERUSER_GROUP\n        - IAM_ERR_JWKS_NOT_IMPLEMENTED_FOR_HS256\n        - IAM_ERR_LDAP_AUTH_FAILED\n        - IAM_ERR_LDAP_CONFIG_INVALID\n        - IAM_ERR_LDAP_CONFIG_NOT_AVAILABLE\n        - IAM_ERR_LDAP_IMPORT\n        - IAM_ERR_LDAP_IMPORT_GROUP_NOT_FOUND\n        - IAM_ERR_LDAP_IMPORT_SEARCH_FAILED\n        - IAM_ERR_LDAP_IMPORT_USER_NOT_FOUND\n        - IAM_ERR_MISSING_QUERY_PARAMETERS\n        - IAM_ERR_NO_MORE_SUPERUSERS\n        - IAM_ERR_OIDC_PROVIDER_CONFIG_INVALID\n        - IAM_ERR_PERMISSION_EXISTS\n        - IAM_ERR_UNKNOWN_GROUP_ID\n        - IAM_ERR_UNKNOWN_RESOURCE_ID\n        - IAM_ERR_UNKNOWN_USER_ID\n        - IAM_ERR_USER_ALREADY_IN_GROUP\n        - IAM_ERR_USER_EXISTS\n        - IAM_ERR_USER_NOT_IN_ACL\n        - IAM_ERR_USER_NOT_IN_GROUP\n    EdgelbV2Pool:\n      type: object\n      description: The pool contains information on resources that the pool needs. Changes\n        make to this section will relaunch the tasks.\n      properties:\n        poolHealthcheckGracePeriod:\n          description: Pool tasks healthcheck grace period (in seconds)\n          type: integer\n          format: int32\n          minimum: 1\n        poolHealthcheckInterval:\n          description: Pool tasks healthcheck interval (in seconds)\n          type: integer\n          format: int32\n          minimum: 1\n        poolHealthcheckMaxFail:\n          description: Pool tasks healthcheck maximum number of consecutive failures before\n            declaring as unhealthy\n          type: integer\n          format: int32\n          minimum: 1\n        poolHealthcheckTimeout:\n          description: Maximum amount of time that Mesos will wait for the healthcheck\n            container to finish executing\n          type: integer\n          format: int32\n          minimum: 2\n        apiVersion:\n          $ref: \"#/components/schemas/EdgelbAPIVersion\"\n        name:\n          type: string\n          description: The pool name.\n        namespace:\n          type: string\n          description: The DC/OS space (sometimes also referred to as a \"group\").\n        packageName:\n          type: string\n        packageVersion:\n          type: string\n        role:\n          type: string\n          description: Mesos role for load balancers. Defaults to \"slave_public\" so that\n            load balancers will be run on public agents. Use \"*\" to run load\n            balancers on private agents. Read more about Mesos roles at\n            http://mesos.apache.org/documentation/latest/roles/\n        principal:\n          type: string\n          description: Mesos principal for pool framework authentication. If omitted or\n            left blank, the service account used to install Edge-LB will be used\n            if present.\n        secretName:\n          type: string\n          description: Service account secret name for pool framework authentication. If\n            omitted or left blank, the service account used to install Edge-LB\n            will be used if present.\n        cpus:\n          type: number\n        cpusAdminOverhead:\n          type: number\n        mem:\n          type: integer\n          description: Memory requirements (in MB)\n          format: int32\n        memAdminOverhead:\n          type: integer\n          description: Memory requirements (in MB)\n          format: int32\n        disk:\n          type: integer\n          description: Disk size (in MB)\n          format: int32\n        count:\n          type: integer\n          format: int32\n          description: Number of load balancer instances in the pool.\n        constraints:\n          type: string\n          description: Marathon style constraints for load balancer instance placement.\n        ports:\n          type: array\n          description: \u003e-\n            Override ports to allocate for each load balancer instance. Defaults\n            to {{haproxy.frontends[].bindPort}} and\n              {{haproxy.stats.bindPort}}.\n            Use this field to pre-allocate all needed ports with or\n              without the frontends present. For example: [80, 443, 9090].\n            If the length of the ports array is not zero, only the\n              ports specified will be allocated by the pool scheduler.\n          items:\n            type: integer\n            format: int32\n        secrets:\n          type: array\n          description: DC/OS secrets.\n          items:\n            type: object\n            properties:\n              secret:\n                description: Secret name\n                type: string\n              file:\n                description: |-\n                  File name.\n                  The file \"myfile\" will be found at \"$SECRETS/myfile\"\n                type: string\n        environmentVariables:\n          type: object\n          description: \u003e-\n            Environment variables to pass to tasks.\n\n            Prefix with \"ELB_FILE_\" and it will be written to a file. For example, the contents of \"ELB_FILE_MYENV\" will be written to \"$ENVFILE/ELB_FILE_MYENV\".\n          additionalProperties:\n            type: string\n        autoCertificate:\n          type: boolean\n          description: \u003e-\n            Autogenerate a self-signed SSL/TLS certificate. It is not generated\n            by default.\n\n            It will be written to \"$AUTOCERT\".\n          x-go-name: AutoCertEnabled\n        virtualNetworks:\n          type: array\n          description: Virtual networks to join.\n          items:\n            type: object\n            properties:\n              name:\n                description: The name of the virtual network to join.\n                type: string\n              labels:\n                description: Labels to pass to the virtual network plugin.\n                additionalProperties:\n                  type: string\n        haproxy:\n          $ref: \"#/components/schemas/EdgelbV2Haproxy\"\n\n    EdgelbV2Pools:\n      type: array\n      items:\n        $ref: \"#/components/schemas/EdgelbV2Pool\"\n\n    EdgelbV2Haproxy:\n      type: object\n      properties:\n        stats:\n          $ref: \"#/components/schemas/EdgelbV2Stats\"\n        frontends:\n          description: Array of frontends.\n          type: array\n          items:\n            $ref: \"#/components/schemas/EdgelbV2Frontend\"\n        backends:\n          description: Array of backends.\n          type: array\n          items:\n            $ref: \"#/components/schemas/EdgelbV2Backend\"\n    EdgelbV2Stats:\n      type: object\n      properties:\n        bindAddress:\n          type: string\n        bindPort:\n          type: integer\n          format: int32\n    EdgelbV2Frontend:\n      type: object\n      description: The Frontend maps to the HAProxy frontend. This includes information\n        such as what addresses and ports to listen on, what SSL/TLS certificates\n        to use, and which backends to route to.\n      properties:\n        name:\n          description: Defaults to frontend_{{bindAddress}}_{{bindPort}}.\n          type: string\n        bindAddress:\n          description: Only use characters that are allowed in the frontend name. Known\n            invalid frontend name characters include \"*\", \"[\", and \"]\".\n          type: string\n        bindPort:\n          description: The port (e.g. 80 for HTTP or 443 for HTTPS) that this frontend will\n            bind to.\n          type: integer\n          format: int32\n        bindModifier:\n          description: Additional text to put in the bind field\n          type: string\n        certificates:\n          type: array\n          items:\n            description: \u003e-\n              SSL/TLS certificates in the load balancer.\n\n              For secrets, use \"$SECRETS/my_file_name\" For environment files, use \"$ENVFILE/my_file_name\" For autoCertificate, use \"$AUTOCERT\"\n            type: string\n        redirectToHttps:\n          type: object\n          description: Setting this to the empty object is enough to redirect all traffic\n            from HTTP (this frontend) to HTTPS (port 443).\n          nullable: true\n          properties:\n            except:\n              type: array\n              description: One may additionally set a whitelist of fields that must be\n                matched to allow HTTP.\n              items:\n                type: object\n                description: Boolean AND will be applied with every selected value\n                properties:\n                  host:\n                    type: string\n                    description: Match on host\n                  pathBeg:\n                    type: string\n                    description: Match on path\n        miscStrs:\n          description: Additional template lines inserted before use_backend\n          type: array\n          items:\n            type: string\n        protocol:\n          $ref: \"#/components/schemas/EdgelbV2Protocol\"\n        linkBackend:\n          type: object\n          description: This describes what backends to send traffic to. This can be\n            expressed with a variety of filters such as matching on the hostname\n            or the HTTP URL path.\n          properties:\n            defaultBackend:\n              type: string\n              description: This is default backend that is routed to if none of the other\n                filters are matched.\n            map:\n              type: array\n              description: This is an optional field that specifies a mapping to various\n                backends. These rules are applied in order.\n              items:\n                type: object\n                description: '\"backend\" and at least one of the condition fields must be\n                  filled out. If multiple conditions are filled out they will be\n                  combined with a boolean \"AND\".'\n                properties:\n                  backend:\n                    type: string\n                  hostEq:\n                    description: All lowercase.\n                    type: string\n                  hostReg:\n                    description: All lowercase. It is possible for a port (e.g.\n                      \"foo.com:80\") to be in this regex!\n                    type: string\n                  pathBeg:\n                    type: string\n                  pathEnd:\n                    type: string\n                  pathReg:\n                    type: string\n    EdgelbV2Backend:\n      type: object\n      properties:\n        name:\n          type: string\n          description: This is name that frontends refer to.\n        protocol:\n          $ref: \"#/components/schemas/EdgelbV2Protocol\"\n        rewriteHttp:\n          $ref: \"#/components/schemas/EdgelbV2RewriteHttp\"\n        balance:\n          description: Load balancing strategy. e.g. roundrobin, leastconn, etc.\n          type: string\n        customCheck:\n          type: object\n          description: This is used to specify alternate forms of healthchecks\n          properties:\n            httpchk:\n              type: boolean\n            httpchkMiscStr:\n              type: string\n            sslHelloChk:\n              type: boolean\n            miscStr:\n              type: string\n        miscStrs:\n          description: Additional template lines inserted before servers\n          type: array\n          items:\n            type: string\n        services:\n          description: Array of backend service selectors.\n          type: array\n          items:\n            $ref: \"#/components/schemas/EdgelbV2Service\"\n    EdgelbV2RewriteHttp:\n      type: object\n      properties:\n        host:\n          description: Set the host header value\n          type: string\n        path:\n          type: object\n          description: Rewrite the HTTP URL path. Adding a slash to fromPath usually is not\n            necessary.\n          properties:\n            fromPath:\n              type: string\n            toPath:\n              type: string\n        request:\n          $ref: \"#/components/schemas/EdgelbV2RewriteHttpRequest\"\n        response:\n          $ref: \"#/components/schemas/EdgelbV2RewriteHttpResponse\"\n        sticky:\n          type: object\n          description: \u003e-\n            Sticky sessions via a cookie.\n\n            To use the default values (recommended), set this field to the empty object.\n          properties:\n            enabled:\n              type: boolean\n            customStr:\n              type: string\n    EdgelbV2RewriteHttpRequest:\n      description: \u003e-\n        Rewrite the request.\n\n        To use the default values (recommended), set this field to the empty object.\n      type: object\n      properties:\n        forwardfor:\n          type: boolean\n        xForwardedPort:\n          type: boolean\n        xForwardedProtoHttpsIfTls:\n          type: boolean\n        setHostHeader:\n          type: boolean\n        rewritePath:\n          type: boolean\n    EdgelbV2RewriteHttpResponse:\n      description: \u003e-\n        Rewrite the response.\n\n        To use the default values (recommended), set this field to the empty object.\n      type: object\n      properties:\n        rewriteLocation:\n          type: boolean\n    EdgelbV2Service:\n      type: object\n      properties:\n        marathon:\n          type: object\n          properties:\n            serviceID:\n              description: Marathon pod or application ID.\n              type: string\n            serviceIDPattern:\n              type: string\n            containerName:\n              description: Marathon pod container name, optional unless using Marathon pods.\n              type: string\n            containerNamePattern:\n              type: string\n        mesos:\n          type: object\n          properties:\n            frameworkName:\n              description: Mesos framework name.\n              type: string\n            frameworkNamePattern:\n              type: string\n            frameworkID:\n              description: Mesos framework ID.\n              type: string\n            frameworkIDPattern:\n              type: string\n            taskName:\n              description: Mesos task name.\n              type: string\n            taskNamePattern:\n              type: string\n            taskID:\n              description: Mesos task ID.\n              type: string\n            taskIDPattern:\n              type: string\n        endpoint:\n          $ref: \"#/components/schemas/EdgelbV2Endpoint\"\n    EdgelbV2Endpoint:\n      type: object\n      properties:\n        type:\n          type: string\n          enum:\n            - AUTO_IP\n            - AGENT_IP\n            - CONTAINER_IP\n            - ADDRESS\n        miscStr:\n          description: Append arbitrary string to add to the end of the \"server\" directive.\n          type: string\n        check:\n          description: Enable health checks. These are by default TCP health checks. For\n            more options see \"customCheck\". These are required for DNS\n            resolution to function properly.\n          type: object\n          properties:\n            enabled:\n              type: boolean\n            customStr:\n              type: string\n        address:\n          description: Server address override, can be used to specify a cluster internal\n            address such as a VIP.\n          type: string\n        port:\n          type: integer\n          format: int32\n        portName:\n          type: string\n        allPorts:\n          type: boolean\n    EdgelbV2Protocol:\n      type: string\n      enum:\n        - HTTP\n        - HTTPS\n        - TCP\n        - TLS\n      x-enum-varnames:\n        - EdgelbV2ProtocolHTTP\n        - EdgelbV2ProtocolHTTPS\n        - EdgelbV2ProtocolTCP\n        - EdgelbV2ProtocolTLS\n    EdgelbAPIVersion:\n      type: string\n      enum:\n        - V1\n        - V2\n    EdgelbConfigContainer:\n      type: object\n      description: Object used internally as an interface to handle multple model versions.\n      properties:\n        pools:\n          type: array\n          description: Array of pool containers.\n          items:\n            $ref: \"#/components/schemas/EdgelbPoolContainer\"\n    EdgelbPoolContainer:\n      type: object\n      description: Object used internally as an interface to handle multple model versions.\n      properties:\n        apiVersion:\n          $ref: \"#/components/schemas/EdgelbAPIVersion\"\n        name:\n          type: string\n        namespace:\n          type: string\n        v2:\n          $ref: \"#/components/schemas/EdgelbV2Pool\"\n    EdgelbError:\n      type: object\n      properties:\n        code:\n          type: integer\n          format: int32\n        message:\n          type: string\n    Metadata:\n      type: object\n      properties:\n        PUBLIC_IPV4:\n          type: string\n          format: ipv4\n        CLUSTER_ID:\n          type: string\n          format: uuid\n    V1SystemHealth:\n      type: object\n      properties:\n        units:\n          type: array\n          items:\n            $ref: \"#/components/schemas/V1SystemHealthUnit\"\n        hostname:\n          type: string\n        ip:\n          type: string\n          format: ipv4\n        dcos_version:\n          type: string\n        node_role:\n          type: string\n        mesos_id:\n          type: string\n        dcos_diagnostics_version:\n          type: string\n    V1SystemHealthNodes:\n      type: object\n      properties:\n        nodes:\n          type: array\n          items:\n            $ref: \"#/components/schemas/V1SystemHealthNode\"\n    V1SystemHealthNode:\n      type: object\n      properties:\n        host_ip:\n          type: string\n        health:\n          type: int32\n        role:\n          type: string\n    V1SystemHealthUnit:\n      type: object\n      properties:\n        id:\n          type: string\n        health:\n          type: int32\n        output:\n          type: string\n        description:\n          type: string\n        help:\n          type: string\n        name:\n          type: string\n    V1SystemHealthUnits:\n      type: object\n      properties:\n        units:\n          type: array\n          items:\n            $ref: \"#/components/schemas/V1SystemHealthUnit\"\n    V1SystemHealthReport:\n      type: object\n      properties:\n        nodes:\n          type: array\n          items:\n            $ref: \"#/components/schemas/V1SystemHealthNode\"\n        units:\n          type: array\n          items:\n            $ref: \"#/components/schemas/V1SystemHealthUnit\"\n    MetronomeEmbeded:\n      type: string\n      enum:\n        - activeRuns\n        - schedules\n        - history\n        - historySummary\n      x-enum-varnames:\n        - METRONOME_EMBEDED_ACTIVE_RUNS\n        - METRONOME_EMBEDED_SCHEDULES\n        - METRONOME_EMBEDED_HISTORY\n        - METRONOME_EMBEDED_HISTORY_SUMMARY\n    MetronomeRestartPolicy:\n      type: string\n      enum:\n        - NEVER\n        - ON_FAILURE\n      x-enum-varnames:\n        - METRONOME_RESTART_POLICY_NEVER\n        - METRONOME_RESTART_POLICY_ON_FAILURE\n    MetronomeV1Job:\n      type: object\n      properties:\n        id:\n          type: string\n          pattern: '^([a-z0-9]([a-z0-9-]*[a-z0-9]+)*)([.][a-z0-9]([a-z0-9-]*[a-z0-9]+)*)*$'\n          minLength: 1\n          description: \u003e-\n            Unique identifier for the job consisting of a series of names separated by\n            dots. Each name must be at least 1 character and may only contain digits\n            (`0-9`), dashes (`-`), and lowercase letters (`a-z`). The name may not\n            begin or end with a dash.\n        description:\n          type: string\n          description: A description of this job.\n        labels:\n          type: object\n          description: \u003e-\n            Attaching metadata to jobs can be useful to expose additional information\n            to other services, so we added the ability to place labels on jobs (for\n            example, you could label jobs staging and production to mark services by\n            their position in the pipeline).\n          additionalProperties:\n            type: string\n        run:\n          type: object\n          description: A run specification\n          properties:\n            args:\n              items:\n                type: string\n              type: array\n              description: \u003e-\n                An array of strings that represents an alternative mode of specifying\n                the command to run. This was motivated by safe usage of containerizer\n                features like a custom Docker ENTRYPOINT. Either `cmd` or `args` must\n                be supplied. It is invalid to supply both `cmd` and `args` in the same\n                job.\n            artifacts:\n              type: array\n              description: \u003e-\n                Provided URIs are passed to Mesos fetcher module and resolved in\n                runtime.\n              items:\n                type: object\n                properties:\n                  uri:\n                    type: string\n                    description: URI to be fetched by Mesos fetcher module\n                  executable:\n                    type: boolean\n                    description: Set fetched artifact as executable\n                  extract:\n                    type: boolean\n                    description: Extract fetched artifact if supported by Mesos fetcher module\n                  cache:\n                    type: boolean\n                    description: Cache fetched artifact if supported by Mesos fetcher module\n                required:\n                  - uri\n            cmd:\n              description: \u003e-\n                The command that is executed.  This value is wrapped by Mesos via\n                `/bin/sh -c ${job.cmd}`.  Either `cmd` or `args` must be supplied. It\n                is invalid to supply both `cmd` and `args` in the same job.\n              type: string\n              minLength: 1\n            cpus:\n              type: number\n              format: double\n              description: \u003e-\n                The number of CPU shares this job needs per instance. This number does\n                not have to be integer, but can be a fraction.\n              minimum: 0.01\n            gpus:\n              type: integer\n              description: \u003e-\n                The number of GPU shares this job needs per instance. This number does\n                not have to be integer, but can be a fraction.\n              minimum: 0\n            disk:\n              type: integer\n              format: int64\n              description: \u003e-\n                How much disk space is needed for this job. This number does not have\n                to be an integer, but can be a fraction.\n              minimum: 0\n            ucr:\n              type: object\n              nullable: true\n              properties:\n                image:\n                  type: object\n                  properties:\n                    id:\n                      type: string\n                      description: The repository image name.\n                    kind:\n                      type: string\n                      description: The type of image\n                      enum:\n                        - docker\n                        - appc\n                      default: docker\n                    forcePull:\n                      type: boolean\n                      description: \u003e-\n                        The containerizer will pull the image from the registry, even\n                        if the image is already downloaded on the agent.\n                  required:\n                    - id\n                privileged:\n                  type: boolean\n                  description: Run this docker image in privileged mode\n              required:\n                - image\n            docker:\n              type: object\n              nullable: true\n              properties:\n                image:\n                  type: string\n                  description: The docker repository image name.\n                forcePullImage:\n                  type: boolean\n                  description: \u003e-\n                    The containerizer will pull the image from the registry, even if\n                    the image is already downloaded on the agent.\n                privileged:\n                  type: boolean\n                  description: Run this docker image in privileged mode\n                parameters:\n                  type: array\n                  description: ''\n                  items:\n                    type: object\n                    properties:\n                      key:\n                        type: string\n                      value:\n                        type: string\n                    required:\n                      - key\n                      - value\n              required:\n                - image\n            env:\n              type: object\n              x-patternProperties:\n                .*:\n                  oneOf:\n                    - $ref: \"#/components/schemas/MetronomeV1EnvSecret\"\n                    - type: string\n            maxLaunchDelay:\n              type: integer\n              minimum: 1\n              description: \u003e-\n                The number of seconds until the job needs to be running. If the\n                deadline is reached without successfully running the job, the job is\n                aborted.\n            mem:\n              type: integer\n              format: int64\n              description: The amount of memory in MB that is needed for the job per instance.\n              minimum: 32\n            placement:\n              type: object\n              nullable: true\n              properties:\n                constraints:\n                  type: array\n                  description: The array of constraints to place this job.\n                  nullable: true\n                  items:\n                    type: object\n                    properties:\n                      attribute:\n                        type: string\n                        description: The attribute name for this constraint.\n                      operator:\n                        type: string\n                        description: The operator for this constraint.\n                        enum:\n                          - IS\n                          - EQ\n                          - LIKE\n                          - UNLIKE\n                      value:\n                        type: string\n                        description: The value for this constraint.\n                    required:\n                      - attribute\n                      - operator\n            user:\n              type: string\n              description: The user to use to run the tasks on the agent.\n            taskKillGracePeriodSeconds:\n              type: number\n              description: \u003e-\n                Configures the number of seconds between escalating from SIGTERM to\n                SIGKILL when signalling tasks to terminate. Using this grace period,\n                tasks should perform orderly shut down immediately upon receiving\n                SIGTERM.\n            restart:\n              type: object\n              description: Defines the behavior if a task fails\n              nullable: true\n              properties:\n                policy:\n                  type: string\n                  description: \u003e-\n                    The policy to use if a job fails. NEVER will never try to relaunch\n                    a job. ON_FAILURE will try to start a job in case of failure.\n                  enum:\n                    - NEVER\n                    - ON_FAILURE\n                activeDeadlineSeconds:\n                  type: integer\n                  description: \u003e-\n                    If the job fails, how long should we try to restart the job. If no\n                    value is set, this means forever.\n              required:\n                - policy\n            volumes:\n              type: array\n              description: The list of volumes for this job.\n              items:\n                type: object\n                description: A volume definition for this job.\n                properties:\n                  containerPath:\n                    type: string\n                    description: The path of the volume in the container\n                    minLength: 1\n                  hostPath:\n                    type: string\n                    description: The path of the volume on the host\n                    minLength: 1\n                  mode:\n                    type: string\n                    description: Possible values are RO for ReadOnly and RW for Read/Write\n                    enum:\n                      - RO\n                      - RW\n                  secret:\n                    type: string\n                    description: References the secret that is used by this volume\n                    minLength: 1\n                required:\n                  - containerPath\n            secrets:\n              type: object\n              x-patternProperties:\n                .*:\n                  type: object\n                  description: An environment variable set to a secret\n                  properties:\n                    source:\n                      type: string\n                      description: \u003e-\n                        The name of the secret to refer to. At runtime, the value of\n                        the secret will be injected into the value of the variable.\n          required:\n            - cpus\n            - mem\n            - disk\n      required:\n        - id\n        - run\n    MetronomeV1Error:\n      type: object\n      properties:\n        message:\n          type: string\n        details:\n          type: array\n          items:\n            type: object\n            properties:\n              path:\n                type: string\n              errors:\n                type: array\n                items:\n                  type: string\n    MetronomeV1JobSchedule:\n      type: object\n      properties:\n        id:\n          type: string\n        cron:\n          type: string\n        concurrencyPolicy:\n          type: string\n          enum: [ALLOW,FORBID]\n        enabled:\n          type: boolean\n        startingDeadlineSeconds:\n          type: integer\n        timezone:\n          type: string\n    MetronomeV1EnvSecret:\n      type: object\n      additionalProperties:\n        $ref: \"#/components/schemas/MetronomeV1EnvSecret\"\n    MetronomeV1EnvSecretValue:\n      type: object\n      properties:\n        secret:\n          type: string\n    NetworkingV1Node:\n      type: object\n      properties:\n        updated:\n          type: string\n          format: date-time\n        private_ip:\n          type: string\n        public_ips:\n          type: array\n          items:\n            type: string\n        hostname:\n          type: string\n\n  securitySchemes:\n    token:\n      in: header\n      name: Authorization\n      type: apiKey\n"
		}
	},
	"Error": "parse: parse spec: paths: /system/health/v1/units: get: operation \"V1SystemHealthUnits\": responses: 200: content: \"application/json\": schema: parse schema: reference \"#/components/schemas/V1SystemHealthUnits\": parse schema: units: parse schema: item: parse schema: reference \"#/components/schemas/V1SystemHealthUnit\": parse schema: health: parse schema: unexpected schema type: \"int32\""
}