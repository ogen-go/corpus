{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/ioggstream/python-course"
		},
		"file": {
			"name": "ex-07-01-throttling-ok.yaml",
			"size": 0,
			"path": "connexion-101/notebooks/oas3/ex-07-01-throttling-ok.yaml",
			"byteSize": 4070,
			"content": "# Complete this file with the required informations\n#  using your swagger-editor. You should\n# - fix all the eventual error\n# - add the missing parameters\n# so that the file become a valid OAS3 spec.\nopenapi: 3.0.0\ninfo:\n  title: foo\n  version: \"0.1\"\n\n# One or more server\n#   You can add production, staging and test environments.\n#   We are using the custom `x-sandbox` to identify\n#   sandbox instances\nservers:\n  - description: Development server\n    url: https://localhost:8443/datetime/v1\n  - description: Test server\n    url: https://api.example.com/datetime/v1\n    x-sandbox: true\n    # The following custom parameter can be used\n    # to declare how to check the API.\n    x-healthCheck:\n      url: https://api.example.com/datetime/v1/status\n      interval: 300\n      timeout: 15\n\nx-commons:\n  throttling-headers: \u0026throttling-headers\n    X-RateLimit-Limit:\n      $ref: 'https://teamdigitale.github.io/openapi/0.0.5/definitions.yaml#/headers/X-RateLimit-Limit'\n    X-RateLimit-Remaining:\n      $ref: 'https://teamdigitale.github.io/openapi/0.0.5/definitions.yaml#/headers/X-RateLimit-Remaining'\n    X-RateLimit-Reset:\n      $ref: 'https://teamdigitale.github.io/openapi/0.0.5/definitions.yaml#/headers/X-RateLimit-Reset'\n\n\n  common-responses: \u0026common-responses\n    429:\n      $ref: \"#/components/responses/429TooManyRequests\"\n    503:\n      $ref: \"#/components/responses/503ServiceUnavailable\"\n\n#\n# Complete the /status path\n#\npaths:\n  /status:\n    get:\n      summary: Ritorna lo stato dell'applicazione.\n      description: |\n        Ritorna lo stato dell'applicazione. A scopo\n        di test, su base randomica puo' ritornare\n        un errore.\n      operationId: api.get_status\n      responses:\n        \u003c\u003c: *common-responses\n        '200':\n          description: |\n            Il server ha ritornato lo status. In caso di problemi\n            ritorna sempre un problem+json.\n          content:\n            application/problem+json:\n              schema:\n                $ref: \"#/components/schemas/Problem\"\n              example:\n                title: OK\n                status: 200\n                detail: The app is running smoothly.\n  /echo:  # TODO implement this\n    get:\n      security:\n      - myBasicAuth: []\n      parameters:\n      - $ref: '#/components/parameters/tz'\n      summary: Return the current timestamp in RFC3339\n      description: |\n        Return the current timestamp, in the specified\n        timezone. If the timezone does not\n        exist returns 400 Bad Request, specifying that\n        the given timezone is not in our database.\n      operationId: api.get_echo\n      responses:\n        \u003c\u003c: *common-responses\n        '200':\n          description: |\n            The current timestamp.\n          content:\n            application/problem+json:\n              schema:\n                $ref: \"#/components/schemas/Datetime\"\n              example:\n                datetime: 20010507T00:00:10Z\n        '400':\n           $ref: '#/components/responses/400BadRequest'\ncomponents:\n  securitySchemes:\n    myBasicAuth:\n     type: http\n     scheme: basic\n     x-basicInfoFunc: security.my_auth\n\n  parameters:\n    tz:\n      name: tz\n      in: query\n      schema:\n        $ref: '#/components/schemas/Timezone'\n  responses:\n    400BadRequest:\n      $ref: \"https://teamdigitale.github.io/openapi/0.0.5/definitions.yaml#/responses/400BadRequest\"\n    429TooManyRequests:\n      $ref: \"https://teamdigitale.github.io/openapi/0.0.5/definitions.yaml#/responses/429TooManyRequests\"\n    503ServiceUnavailable:\n      $ref: \"https://teamdigitale.github.io/openapi/0.0.5/definitions.yaml#/responses/503ServiceUnavailable\"\n  schemas:\n    Timezone:\n      description: |\n        A timezone in the form of continent/city\n        or \"UTC\".\n      type: string\n      example: Europe/Rome\n    Datetime:\n      required:\n      - timestamp\n      properties:\n        timestamp:\n          type: string\n          format: datetime\n          example: 2019-01-01T00:00:00Z\n    Problem:\n      $ref: 'https://teamdigitale.github.io/openapi/0.0.5/definitions.yaml#/schemas/Problem'\n",
			"canonicalURL": "/github.com/ioggstream/python-course@d5bc268234bd50d8414ce5b2dfb7498390514d49/-/blob/connexion-101/notebooks/oas3/ex-07-01-throttling-ok.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/ioggstream/python-course/blob/d5bc268234bd50d8414ce5b2dfb7498390514d49/connexion-101/notebooks/oas3/ex-07-01-throttling-ok.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "parse: parse spec: parse components: schemas: \"Problem\": resolve \"#/components/schemas/Problem\": at connexion-101/notebooks/oas3/ex-07-01-throttling-ok.yaml:132:13: $ref: resolve \"https://teamdigitale.github.io/openapi/0.0.5/definitions.yaml#/schemas/Problem\": get \"https://teamdigitale.github.io/openapi/0.0.5/definitions.yaml\": https: do: Get \"https://teamdigitale.github.io/openapi/0.0.5/definitions.yaml\": host \"teamdigitale.github.io\" is not allowed"
}