{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/Longi94/rl-loadout"
		},
		"file": {
			"name": "api_swagger.yml",
			"size": 0,
			"path": "backend/api_swagger.yml",
			"byteSize": 11949,
			"content": "openapi: 3.0.0\ninfo:\n  version: \"{{ version }}\"\n  title: 'Rocket Loadout Public API'\n  contact:\n    name: 'Rocket Loadout Discord'\n    url: https://discord.gg/c8cArY9\nservers:\n  - url: \"{{ server_host }}/api/v1\"\ntags:\n  - name: bodies\n  - name: wheels\n  - name: decals\n  - name: toppers\n  - name: antennas\npaths:\n  /bodies:\n    get:\n      summary: 'Get a list of bodies'\n      operationId: controllers.bodies.get\n      tags:\n        - bodies\n      responses:\n        200:\n          description: 'List of bodies'\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/Body'\n  /bodies/{id}:\n    get:\n      summary: 'Get a body'\n      operationId: controllers.bodies.get_by_id\n      tags:\n        - bodies\n      parameters:\n        - name: id\n          in: path\n          required: true\n          description: 'ID of the item (in-game item ID).'\n          example: 23\n          schema:\n            type: integer\n      responses:\n        200:\n          description: 'Body'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Body'\n        404:\n          description: 'Body not found'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n  /wheels:\n    get:\n      summary: 'Get a list of wheels'\n      operationId: controllers.wheels.get\n      tags:\n        - wheels\n      responses:\n        200:\n          description: 'List of wheels'\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/Wheel'\n  /wheels/{id}:\n    get:\n      summary: 'Get a wheel'\n      operationId: controllers.wheels.get_by_id\n      tags:\n        - wheels\n      parameters:\n        - name: id\n          in: path\n          required: true\n          description: 'ID of the item (in-game item ID).'\n          example: 376\n          schema:\n            type: integer\n      responses:\n        200:\n          description: 'Wheel'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Wheel'\n        404:\n          description: 'Wheel not found'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n  /decals:\n    get:\n      summary: 'Get a list of decals'\n      operationId: controllers.decals.get\n      tags:\n        - decals\n      responses:\n        200:\n          description: 'List of decals'\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/Decal'\n  /decals/{id}:\n    get:\n      summary: 'Get a decal'\n      operationId: controllers.decals.get_by_id\n      tags:\n        - decals\n      parameters:\n        - name: id\n          in: path\n          required: true\n          description: 'ID of the item (in-game item ID).'\n          example: 302\n          schema:\n            type: integer\n      responses:\n        200:\n          description: 'Decal'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Decal'\n        404:\n          description: 'Decal not found'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n  /toppers:\n    get:\n      summary: 'Get a list of toppers'\n      operationId: controllers.toppers.get\n      tags:\n        - toppers\n      responses:\n        200:\n          description: 'List of toppers'\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/Topper'\n  /toppers/{id}:\n    get:\n      summary: 'Get a topper'\n      operationId: controllers.toppers.get_by_id\n      tags:\n        - toppers\n      parameters:\n        - name: id\n          in: path\n          required: true\n          description: 'ID of the item (in-game item ID).'\n          example: 225\n          schema:\n            type: integer\n      responses:\n        200:\n          description: 'Topper'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Topper'\n        404:\n          description: 'Topper not found'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n  /antennas:\n    get:\n      summary: 'Get a list of antennas'\n      operationId: controllers.antennas.get\n      tags:\n        - antennas\n      responses:\n        200:\n          description: 'List of antennas'\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/Antenna'\n  /antennas/{id}:\n    get:\n      summary: 'Get a antenna'\n      operationId: controllers.antennas.get_by_id\n      tags:\n        - antennas\n      parameters:\n        - name: id\n          in: path\n          required: true\n          description: 'ID of the item (in-game item ID).'\n          example: 391\n          schema:\n            type: integer\n      responses:\n        200:\n          description: 'Antenna'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Antenna'\n        404:\n          description: 'Antenna not found'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\ncomponents:\n  securitySchemes:\n    ApiKeyAuth:\n      type: apiKey\n      in: query\n      name: key\n      x-apikeyInfoFunc: api.verify_api_key\n  schemas:\n    Error:\n      type: object\n      properties:\n        details:\n          type: string\n          description: 'Details of the error'\n          example: 'X not found'\n        status:\n          type: number\n          description: 'HTTP status code'\n          example: 404\n    Item:\n      type: object\n      required:\n        - id\n        - quality\n        - icon\n        - paintable\n      properties:\n        id:\n          type: integer\n          description: 'ID of the item'\n          example: 23\n        quality:\n          type: integer\n          description: 'Quality of the item. See https://github.com/Longi94/rl-loadout/blob/master/backend/rocket/quality.py'\n          example: 0\n        icon:\n          type: string\n          description: 'Path to the image icon of the item.'\n          example: 'body/Body_Octane/Body_Octane_Thumbnail.jpg'\n        paintable:\n          type: boolean\n          description: 'Whether is item normally can have painted attribute or not in the game.'\n          example: true\n    Body:\n      allOf:\n        - $ref: '#/components/schemas/Item'\n        - type: object\n          required:\n            - model\n          properties:\n            model:\n              type: string\n              description: 'Path to the GLTF model file of the body.'\n              example: 'body/Body_Octane/Body_Octane_SF.glb'\n            blank_skin:\n              type: string\n              description: 'Path to the RGBA blank skin map of the body.'\n              example: 'body/Body_Octane/Pepe_Body_BlankSkin_RGB.tga'\n            base_skin:\n              type: string\n              description: 'Path to the base texture of the body.'\n              example: 'body/Body_Octane/Pepe_Body_D.tga'\n            chassis_base:\n              type: string\n              description: 'Path to the base texture of the chassis. Null if this is included in the model.'\n              example: 'body/Body_Octane/Chasis_Pepe_D.tga'\n            chassis_n:\n              type: string\n              description: 'Normal map of the chassis. May act as the RGBA map for painting the chassis.'\n              example: 'body/Body_Octane/Chasis_Pepe_N.tga'\n            chassis_paintable:\n              type: boolean\n              description: 'True if the chassis part of the model can be painted.'\n              example: false\n    Wheel:\n      allOf:\n        - $ref: '#/components/schemas/Item'\n        - type: object\n          required:\n            - model\n          properties:\n            model:\n              type: string\n              description: 'Path to the GLTF model file of the wheel.'\n              example: 'wheel/WHEEL_Star/WHEEL_Star_SM.glb'\n            rim_base:\n              type: string\n              description: 'Path to the base texture of the rim.'\n              example: 'wheel/WHEEL_Star/OEM_D.tga'\n            rim_rgb_map:\n              type: string\n              description: 'Path to the RGBA map of the rim.'\n              example: 'wheel/WHEEL_Star/OEM_RGB.tga'\n            rim_n:\n              type: string\n              description: 'Path to the normal map of the rim.'\n              example: 'wheel/WHEEL_Star/OEM_N.tga'\n            tire_base:\n              type: string\n              description: 'Path to the base texture of the tire.'\n              example: 'wheel/WHEEL_Star/Tire_Swarm_Tyr_Diffuse.tga'\n            tire_n:\n              type: string\n              description: 'Path to the normal map of the tire.'\n              example: 'wheel/WHEEL_Star/Tire_Swarm_Tyr_Normal.tga'\n    Decal:\n      allOf:\n        - $ref: '#/components/schemas/Item'\n        - type: object\n          properties:\n            base_texture:\n              type: string\n              description: 'Path to the base texture.'\n              example: null\n            rgba_map:\n              type: string\n              description: 'Path to the RGBA map.'\n              example: 'textures/Pepe_Body_Flames_RGB.tga'\n            body_id:\n              type: integer\n              description: 'ID of the body this decal can be applied to. Null if universal.'\n              example: 23\n    Topper:\n      allOf:\n        - $ref: '#/components/schemas/Item'\n        - type: object\n          required:\n            - model\n          properties:\n            model:\n              type: string\n              description: 'Path to the GLTF model file of the topper.'\n              example: 'models/Hat_Beanie_SF.glb'\n            base_texture:\n              type: string\n              description: 'Path to the base texture of the topper. Null if the texture is in the gltf file.'\n              example: 'topper/Hat_Fez/Hat_Fez_Diffuse.tga'\n            rgba_map:\n              type: string\n              description: 'Path to the RGBA map of the topper if paintable.'\n              example: 'topper/Hat_Fez/Hat_Fez_CUSTOM.tga'\n            normal_map:\n              type: string\n              description: 'Path to the normal map of the topper.'\n              example: 'topper/Hat_Fez/Hat_Fez_Normal.tga'\n    Antenna:\n      allOf:\n        - $ref: '#/components/schemas/Item'\n        - type: object\n          required:\n            - model\n          properties:\n            model:\n              type: string\n              description: 'Path to the GLTF model file of the antenna head.'\n              example: 'antenna/Antenna_Bread/Antenna_Bread_SF.glb'\n            base_texture:\n              type: string\n              description: 'Path to the base texture of the antenna head. Null if the texture is in the gltf file.'\n              example: 'antenna/Antenna_Bread/AT_Bread_D.tga'\n            rgba_map:\n              type: string\n              description: 'Path to the RGBA map of the antenna head if paintable.'\n              example: null\n            normal_map:\n              type: string\n              description: 'Path to the normal map of the antenna.'\n              example: 'antenna/Antenna_Bread/AT_Bread_N.tga'\n            stick:\n              type: string\n              description: 'Path to the GLTF model file of the antenna stick'\n              example: 'antenna/sticks/Antenna_SK.glb'\n",
			"canonicalURL": "/github.com/Longi94/rl-loadout@07a248e16c8e5fb615ec4f8018631f3c622ac2a4/-/blob/backend/api_swagger.yml",
			"externalURLs": [
				{
					"url": "https://github.com/Longi94/rl-loadout/blob/07a248e16c8e5fb615ec4f8018631f3c622ac2a4/backend/api_swagger.yml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "parse: parse spec: parse servers: at 1:8812: invalid path: {{ server_host }}/api/v1"
}