{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/eeditiones/roaster"
		},
		"file": {
			"name": "api.json",
			"size": 0,
			"path": "test/app/api.json",
			"byteSize": 18183,
			"content": "{\n    \"openapi\": \"3.0.0\",\n    \"info\": {\n        \"version\": \"1.0.0\",\n        \"title\": \"Custom API\",\n        \"description\": \"This is the place to add your own path endpoints\"\n    },\n    \"servers\": [\n        {\n            \"description\": \"Endpoint for testing on localhost\",\n            \"url\": \"http://localhost:8080/exist/apps/roasted\"\n        }\n    ],\n    \"components\": {\n        \"securitySchemes\": {\n            \"basicAuth\": {\n                \"type\": \"http\",\n                \"scheme\": \"basic\"\n            },\n            \"cookieAuth\": {\n                \"type\": \"apiKey\",\n                \"name\": \"roasted.com.login\",\n                \"in\": \"cookie\"\n            }\n        }\n    },\n    \"paths\": {\n        \"/logout\": {\n            \"get\": {\n                \"operationId\": \"auth:logout\",\n                \"parameters\": [\n                    {\n                        \"name\": \"logout\",\n                        \"in\": \"query\",\n                        \"description\": \"Set to some value to log out the current user\",\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"OK\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"type\": \"object\",\n                                    \"properties\": {\n                                        \"success\": { \"type\": \"boolean\" }\n                                    }\n                                }\n                            }\n                        }\n                    },\n                    \"301\": {\n                        \"description\": \"Redirect with the logout parameter set.\",\n                        \"content\": {\n                            \"text/plain\": {\n                                \"schema\": {\n                                    \"type\": \"string\"\n                                }\n                            }\n                        }\n                    },\n                    \"401\": { \"description\": \"unauthorized\" }\n                }\n            }\n        },\n        \"/login\": {\n            \"post\": {\n                \"summary\": \"Login the user\",\n                \"description\": \"Login the given user\",\n                \"operationId\": \"auth:login\",\n                \"requestBody\": {\n                    \"required\": true,\n                    \"content\": {\n                        \"multipart/form-data\": {\n                            \"schema\": {\n                                \"type\": \"object\",\n                                \"nullable\": true,\n                                \"properties\": {\n                                    \"user\": {\n                                        \"description\": \"Name of the user\",\n                                        \"type\": \"string\"\n                                    },\n                                    \"password\": {\n                                        \"type\": \"string\",\n                                        \"format\": \"password\"\n                                    }\n                                }\n                            }\n                        },\n                        \"application/x-www-form-urlencoded\": {\n                            \"schema\": {\n                                \"type\": \"object\",\n                                \"nullable\": true,\n                                \"properties\": {\n                                    \"user\": {\n                                        \"description\": \"Name of the user\",\n                                        \"type\": \"string\"\n                                    },\n                                    \"password\": {\n                                        \"type\": \"string\",\n                                        \"format\": \"password\"\n                                    }\n                                }\n                            }\n                        }\n                    }\n                },\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"OK\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"type\": \"object\",\n                                    \"properties\": {\n                                        \"user\": { \"type\": \"string\" },\n                                        \"groups\": {\n                                            \"type\": \"array\",\n                                            \"items\": { \"type\": \"string\" }\n                                        },\n                                        \"dba\": { \"type\": \"boolean\" },\n                                        \"domain\": { \"type\": \"string\" }\n                                    }\n                                }\n                            }\n                        }\n                    },\n                    \"401\": {\n                        \"description\": \"Wrong user or password\"\n                    }\n                },\n                \"security\": [{ \"cookieAuth\": [] }]\n            }\n        },\n        \"/api/parameters\": {\n            \"get\": {\n                \"summary\": \"Test various parameter types passed in a GET\",\n                \"operationId\": \"rutil:debug\",\n                \"parameters\": [\n                    {\n                        \"name\": \"num\",\n                        \"in\": \"query\",\n                        \"schema\":{\n                            \"type\": \"number\"\n                        }\n                    },\n                    {\n                        \"name\": \"int\",\n                        \"in\": \"query\",\n                        \"schema\":{\n                            \"type\": \"integer\"\n                        }\n                    },\n                    {\n                        \"name\": \"bool\",\n                        \"in\": \"query\",\n                        \"schema\":{\n                            \"type\": \"boolean\"\n                        }\n                    },\n                    {\n                        \"name\": \"string\",\n                        \"in\": \"query\",\n                        \"schema\":{\n                            \"type\": \"string\"\n                        }\n                    },\n                    {\n                        \"name\": \"defaultParam\",\n                        \"in\": \"query\",\n                        \"schema\":{\n                            \"type\": \"string\",\n                            \"default\": \"abcdefg\"\n                        }\n                    },\n                    {\n                        \"name\": \"X-start\",\n                        \"in\": \"header\",\n                        \"schema\": {\n                            \"type\": \"integer\"\n                        }\n                    }\n                ],\n                \"responses\": {\n                    \"200\":{\n                        \"description\": \"JSON dump of request\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\":{\n                                    \"type\": \"object\"\n                                }\n                            }\n                        }\n                    }\n                }\n            },\n            \"post\": {\n                \"summary\": \"Test various parameter types passed in a POST\",\n                \"operationId\": \"rutil:debug\",\n                \"parameters\": [\n                    {\n                        \"name\": \"num\",\n                        \"in\": \"query\",\n                        \"schema\":{\n                            \"type\": \"number\"\n                        }\n                    },\n                    {\n                        \"name\": \"int\",\n                        \"in\": \"query\",\n                        \"schema\":{\n                            \"type\": \"integer\"\n                        }\n                    },\n                    {\n                        \"name\": \"bool\",\n                        \"in\": \"query\",\n                        \"schema\":{\n                            \"type\": \"boolean\"\n                        }\n                    },\n                    {\n                        \"name\": \"string\",\n                        \"in\": \"query\",\n                        \"schema\":{\n                            \"type\": \"string\"\n                        }\n                    },\n                    {\n                        \"name\": \"defaultParam\",\n                        \"in\": \"query\",\n                        \"schema\":{\n                            \"type\": \"string\",\n                            \"default\": \"abcdefg\"\n                        }\n                    },\n                    {\n                        \"name\": \"X-start\",\n                        \"in\": \"header\",\n                        \"schema\": {\n                            \"type\": \"integer\"\n                        }\n                    }\n                ],\n                \"responses\": {\n                    \"200\":{\n                        \"description\": \"JSON dump of request\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\":{\n                                    \"type\": \"object\"\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        },\n        \"/api/dates\": {\n            \"get\": {\n                \"summary\": \"Parameters sent with GET request\",\n                \"operationId\": \"api:date\",\n                \"parameters\": [\n                    {\n                        \"name\": \"date\",\n                        \"in\": \"query\",\n                        \"schema\":{\n                            \"type\": \"string\",\n                            \"format\": \"date\"\n                        }\n                    },\n                    {\n                        \"name\": \"dateTime\",\n                        \"in\": \"query\",\n                        \"schema\":{\n                            \"type\": \"string\",\n                            \"format\": \"date-time\"\n                        }\n                    }\n                ],\n                \"responses\": {\n                    \"200\":{\n                        \"description\": \"JSON dump of request\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\":{\n                                    \"type\": \"object\"\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        },\n        \"/api/paths/{path}\":{\n            \"get\": {\n                \"summary\": \"Parameter specified in last path component\",\n                \"operationId\": \"api:get-uploaded-data\",\n                \"parameters\": [\n                    {\n                        \"name\": \"path\",\n                        \"in\": \"path\",\n                        \"required\": true,\n                        \"schema\":{\n                            \"type\": \"string\"\n                        }\n                    }\n                ],\n                \"responses\": {\n                    \"200\":{\n                        \"description\": \"file contents, if found\",\n                        \"content\": {\n                            \"application/octet-stream\": {\n                                \"schema\": {\n                                    \"type\": \"string\",\n                                    \"format\": \"binary\"\n                                }\n                            }\n                        }\n                    },\n                    \"404\": {\n                        \"description\": \"File not found\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"type\": \"string\"\n                                }\n                            }\n                        }\n                    }\n                }\n            },\n            \"post\": {\n                \"summary\": \"Post body with several content-types\",\n                \"x-constraints\": {\n                    \"user\": \"admin\" \n                },\n                \"operationId\": \"api:upload-data\",\n                \"requestBody\": {\n                    \"required\": true,\n                    \"content\": {\n                        \"*/*\": {\n                            \"schema\": {\n                                \"type\": \"string\",\n                                \"format\": \"binary\"\n                            }\n                        }\n                    }\n                },\n                \"parameters\": [\n                    {\n                        \"name\": \"path\",\n                        \"in\": \"path\",\n                        \"required\": true,\n                        \"schema\":{\n                            \"type\": \"string\"\n                        }\n                    }\n                ],\n                \"responses\": {\n                    \"201\": {\n                        \"description\": \"Returns uploaded string\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"type\": \"string\"\n                                }\n                            }\n                        }\n                    },\n                    \"400\": {\n                        \"description\": \"Content was invalid\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"type\": \"string\"\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        },\n        \"/api/$op-er+ation*!\":{\n            \"get\": {\n                \"summary\": \"Get path using a $ character\",\n                \"operationId\": \"rutil:debug\",\n                \"responses\": {\n                    \"200\":{\n                        \"description\": \"JSON dump of request\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\":{\n                                    \"type\": \"object\"\n                                }\n                            }\n                        }\n                    }\n                }\n            },\n            \"post\": {\n                \"summary\": \"Post to path using a $ character\",\n                \"operationId\": \"rutil:debug\",\n                \"responses\": {\n                    \"200\":{\n                        \"description\": \"JSON dump of request\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\":{\n                                    \"type\": \"object\"\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        },\n        \"/api/errors\": {\n            \"get\": {\n                \"summary\": \"Reports an error via fn:error function\",\n                \"operationId\": \"api:error-triggered\",\n                \"responses\": {\n                    \"404\": {\n                        \"description\": \"Not found\",\n                        \"content\": {\n                            \"application/json\":{\n                                \"schema\": {\n                                    \"type\": \"object\"\n                                }\n                            }\n                        }\n                    }\n                }\n            },\n            \"post\": {\n                \"summary\": \"Reports a dynamic XQuery error\",\n                \"operationId\": \"api:error-dynamic\",\n                \"responses\": {\n                    \"500\": {\n                        \"description\": \"XQuery error\",\n                        \"content\": {\n                            \"application/json\":{\n                                \"schema\": {\n                                    \"type\": \"object\"\n                                }\n                            }\n                        }\n                    }\n                }\n            },\n            \"delete\": {\n                \"summary\": \"Reports an explicit error\",\n                \"operationId\": \"api:error-explicit\",\n                \"responses\": {\n                    \"500\": {\n                        \"description\": \"XQuery error\",\n                        \"content\": {\n                            \"application/xml\": {\n                                \"schema\": {\n                                    \"type\": \"string\"\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        },\n        \"/api/avatar\": {\n            \"get\": {\n                \"summary\": \"Retrieve avatar as SVG\",\n                \"operationId\": \"api:avatar\",\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"Not found\",\n                        \"content\": {\n                            \"image/svg+xml\":{\n                                \"schema\": {\n                                    \"type\": \"object\"\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        },\n        \"/api/errors/handle\": {\n            \"get\": {\n                \"summary\": \"Test error handler\",\n                \"operationId\": \"api:error-dynamic\",\n                \"x-error-handler\": \"api:handle-error\",\n                \"responses\": {\n                    \"500\": {\n                        \"description\": \"XQuery error\",\n                        \"content\": {\n                            \"text/html\": {\n                                \"schema\": {\n                                    \"type\": \"string\"\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    },\n    \"security\": [\n        {\n            \"cookieAuth\": []\n        },\n        {\n            \"basicAuth\": []\n        }\n    ]\n}",
			"canonicalURL": "/github.com/eeditiones/roaster@2450fd34380f3e79b002dcefad5d64588cb421b1/-/blob/test/app/api.json",
			"externalURLs": [
				{
					"url": "https://github.com/eeditiones/roaster/blob/2450fd34380f3e79b002dcefad5d64588cb421b1/test/app/api.json",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "parse: parse spec: parse operations: paths: /api/errors/handle: get: duplicate operationId: \"api:error-dynamic\""
}