{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/cablelabs/lpwanserver"
		},
		"file": {
			"name": "company.yml",
			"size": 0,
			"path": "docs/openapi/endpoints/company.yml",
			"byteSize": 4599,
			"content": "openapi: 3.0.0\ninfo:\n  version: 1.2.1\n  title: An include file to define Company endpoints\n  license:\n    name: Apache 2.0\npaths:\n  /api/companies:\n    post:\n      operationId: createCompany\n      summary: Create a Company\n      description: Create a Company, available only to system administrators\n      parameters: []\n      security:\n        - bearer_token: []\n      tags:\n        - Company\n      requestBody:\n        $ref: '#/components/requestBodies/CreateCompanyInput'\n      responses:\n        '200':\n          description: Company created\n          content:\n            application/json:\n              schema:\n                $ref: '../api.yml#/components/schemas/ResourceCreatedResponse'\n        '403':\n          description: Authenticated user not allowed to perform this operation\n        '400':\n          description: Bad request\n    get:\n      operationId: listCompanies\n      summary: List Companies\n      description: List Companies, restricted according to authenticated user\n      parameters:\n        - $ref: '../api.yml#/components/parameters/offsetParam'\n        - $ref: '../api.yml#/components/parameters/limitParam'\n        - $ref: '../api.yml#/components/parameters/nameSearch'\n      security:\n        - bearer_token: []\n      tags:\n        - Company\n      responses:\n        '200':\n          description: Query response with totalCount and list of records\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ListCompanyResponse'\n        '403':\n          description: Authenticated user not allowed to perform this operation\n        '400':\n          description: Bad request\n  /api/companies/{id}:\n    parameters:\n      - $ref: '../api.yml#/components/parameters/idParam'\n    get:\n      operationId: loadCompany\n      summary: Get Company\n      description: Get Company\n      parameters: []\n      security:\n        - bearer_token: []\n      tags:\n        - Company\n      responses:\n        '200':\n          description: Company record\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CompanyResponse'\n        '403':\n          description: Authenticated user not allowed to perform this operation\n        '404':\n          description: Company not found\n    put:\n      operationId: updateCompany\n      summary: Update Company\n      description: Update Company, available only to system administrators\n      parameters: []\n      security:\n        - bearer_token: []\n      tags:\n        - Company\n      requestBody:\n        $ref: '#/components/requestBodies/UpdateCompanyInput'\n      responses:\n        '204':\n          description: Company update succeeded\n        '400':\n          description: Bad request\n        '403':\n          description: Authenticated user not allowed to perform this operation\n        '404':\n          description: Company not found\n    delete:\n      operationId: deleteCompany\n      summary: Delete Company\n      description: Delete Company, available only to system administrators\n      parameters: []\n      security:\n        - bearer_token: []\n      tags:\n        - Company\n      responses:\n        '204':\n          description: Company record was deleted\n        '403':\n          description: Authenticated user not allowed to perform this operation\n        '404':\n          description: Company not found\ncomponents:\n  schemas:\n    Company:\n      type: object\n      properties:\n        name:\n          type: string\n        type:\n          type: string\n          enum:\n            - ADMIN\n            - VENDOR\n    CompanyResponse:\n       allOf:\n        - $ref: '#/components/schemas/Company'\n        - type: object\n          properties:\n            id:\n              type: string\n    ListCompanyResponse:\n      allOf:\n        - $ref: '../api.yml#/components/schemas/ListResponse'\n        - type: object\n          properties:\n            records:\n              type: array\n              items:\n                $ref: '#/components/schemas/CompanyResponse'\n              default: []\n  requestBodies:\n    CreateCompanyInput:\n      content:\n        application/json:\n          schema:\n            allOf:\n              - $ref: '#/components/schemas/Company'\n              - type: object\n                required:\n                  - name\n                  - type\n      description: Company to be created\n      required: true\n    UpdateCompanyInput:\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/Company'\n      description: Company properties to be updated\n      required: true\n"
		}
	},
	"Error": "parse: parse spec: parse components: schemas: \"ListCompanyResponse\": parse schema: allOf: [0]: parse schema: resolve \"../api.yml#/components/schemas/ListResponse\": find schema: external base \"../api.yml\" is not supported"
}