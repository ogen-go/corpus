{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/PaystackOSS/openapi"
		},
		"file": {
			"name": "paystack.yaml",
			"size": 0,
			"path": "dist/paystack.yaml",
			"byteSize": 147575,
			"content": "openapi: 3.0.1\ninfo:\n  title: Paystack\n  description: The OpenAPI specification of the Paystack API that merchants and developers can harness to build financial solutions in Africa.\n  version: 1.0.0\nservers:\n  - url: 'https://api.paystack.co'\n    description: Base API endpoint\ntags:\n  - name: Transaction\n  - name: Split\n  - name: Customer\n  - name: Dedicated Virtual Account\n  - name: Subaccount\n  - name: Plan\n  - name: Subscription\n  - name: Product\n  - name: Page\n  - name: Payment Request\n  - name: Settlement\n  - name: Transfer Recipient\n  - name: Transfer\n  - name: Balance\n  - name: Charge\n  - name: Bulk Charge\n  - name: Integration\n  - name: Refund\n  - name: Dispute\n  - name: Verification\npaths:\n  /transaction/initialize:\n    post:\n      tags:\n        - Transaction\n      summary: Initialize Transaction\n      operationId: transaction_initialize\n      description: Create a new transaction\n      requestBody:\n        content:\n          application/x-www-form-urlencoded:\n            schema:\n              $ref: '#/paths/~1transaction~1initialize/post/requestBody/content/application~1json/schema'\n          application/json:\n            schema:\n              type: object\n              required:\n                - email\n                - amount\n              properties:\n                email:\n                  description: Customer's email address\n                  type: string\n                  example: person@email.com\n                amount:\n                  description: 'Amount should be in kobo if currency is NGN, pesewas, if currency is GHS, and cents, if currency is ZAR'\n                  type: integer\n                  example: 10247\n                currency:\n                  description: The transaction currency\n                  type: string\n                  enum:\n                    - NGN\n                    - GHS\n                    - ZAR\n                    - USD\n                reference:\n                  description: 'Unique transaction reference. Only -, ., = and alphanumeric characters allowed.'\n                  type: string\n                  example: 123.uniq=ref-\n                callback_url:\n                  description: Fully qualified url. Use this to override the callback url provided on the dashboard for this transaction\n                  type: string\n                  example: 'https://example.com/'\n                plan:\n                  description: |-\n                    If transaction is to create a subscription to a predefined plan, provide plan code here. \n                    This would invalidate the value provided in amount\n                  type: string\n                  example: PLN_123wede\n                invoice_limit:\n                  description: Number of times to charge customer during subscription to plan\n                  type: integer\n                  example: 10\n                metadata:\n                  description: Stringified JSON object of custom data\n                  type: object\n                  example:\n                    metadata:\n                      cart_id: 398\n                      custom_fields:\n                        - display_name: Invoice ID\n                          variable_name: Invoice ID\n                          value: 209\n                        - display_name: Cart Items\n                          variable_name: cart_items\n                          value: '3 bananas, 12 mangoes'\n                channels:\n                  description: An array of payment channels to control what channels you want to make available to the user to make a payment with\n                  type: array\n                  enum:\n                    - card\n                    - bank\n                    - ussd\n                    - qr\n                    - eft\n                    - mobile_money\n                    - bank_transfer\n                split_code:\n                  description: The split code of the transaction split\n                  type: string\n                  example: SPL_123AbZ\n                subaccount:\n                  description: The code for the subaccount that owns the payment\n                  type: string\n                  example: ACCT_23abcdefgh\n                transaction_charge:\n                  description: |-\n                    A flat fee to charge the subaccount for a transaction. \n                    This overrides the split percentage set when the subaccount was created\n                  type: integer\n                  example: 12300\n                bearer:\n                  description: The bearer of the transaction charge\n                  type: string\n                  enum:\n                    - account\n                    - subaccount\n      responses:\n        '200':\n          description: Request successful\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/responses/Ok/content/application~1json/schema'\n              examples:\n                Initiailize Transaction:\n                  value:\n                    status: true\n                    message: Authorization URL created\n                    data:\n                      authorization_url: 'https://checkout.paystack.com/spnajmit2hgi2c1'\n                      access_code: spandaoende\n                      reference: ad123ada\n        '401':\n          $ref: '#/paths/~1page/get/responses/401'\n        default:\n          description: Server error\n  '/transaction/verify/{reference}':\n    get:\n      tags:\n        - Transaction\n      summary: Verify Transaction\n      operationId: transaction_verify\n      parameters:\n        - name: reference\n          in: path\n          description: The transaction reference to verify\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          $ref: '#/paths/~1product/post/responses/201'\n        '401':\n          $ref: '#/paths/~1page/get/responses/401'\n        '404':\n          $ref: '#/paths/~1page/get/responses/401'\n        default:\n          description: Server error\n  /transaction:\n    get:\n      tags:\n        - Transaction\n      summary: List Transactions\n      operationId: transaction_list\n      parameters:\n        - in: query\n          name: perPage\n          schema:\n            type: integer\n          description: Number of records to fetch per page\n        - in: query\n          name: page\n          schema:\n            type: integer\n          description: The section to retrieve\n        - in: query\n          name: from\n          schema:\n            type: string\n            format: date-time\n          description: The start date\n        - in: query\n          name: to\n          schema:\n            type: string\n            format: date-time\n          description: The end date\n      responses:\n        '200':\n          $ref: '#/paths/~1product/post/responses/201'\n        '401':\n          $ref: '#/paths/~1page/get/responses/401'\n        '404':\n          $ref: '#/paths/~1page/get/responses/401'\n        default:\n          description: Server error\n  '/transaction/{id}':\n    get:\n      tags:\n        - Transaction\n      summary: Fetch Transaction\n      operationId: transaction_fetch\n      parameters:\n        - name: id\n          in: path\n          description: The ID of the transaction to fetch\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          $ref: '#/paths/~1product/post/responses/201'\n        '401':\n          $ref: '#/paths/~1page/get/responses/401'\n        '404':\n          $ref: '#/paths/~1page/get/responses/401'\n        default:\n          description: Server error\n  '/transaction/timeline/{id_or_reference}':\n    get:\n      tags:\n        - Transaction\n      summary: Fetch Transaction Timeline\n      operationId: transaction_timeline\n      parameters:\n        - name: id_or_reference\n          in: path\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          $ref: '#/paths/~1product/post/responses/201'\n        '401':\n          $ref: '#/paths/~1page/get/responses/401'\n        '404':\n          $ref: '#/paths/~1page/get/responses/401'\n        default:\n          description: Server error\n  /transaction/totals:\n    get:\n      tags:\n        - Transaction\n      summary: Transaction Totals\n      operationId: transaction_totals\n      parameters:\n        - in: query\n          name: perPage\n          schema:\n            type: integer\n          description: Number of records to fetch per page\n        - in: query\n          name: page\n          schema:\n            type: integer\n          description: The section to retrieve\n        - in: query\n          name: from\n          schema:\n            type: string\n            format: date-time\n          description: The start date\n        - in: query\n          name: to\n          schema:\n            type: string\n            format: date-time\n          description: The end date\n      responses:\n        '200':\n          $ref: '#/paths/~1product/post/responses/201'\n        '401':\n          $ref: '#/paths/~1page/get/responses/401'\n        '404':\n          $ref: '#/paths/~1page/get/responses/401'\n        default:\n          description: Server error\n  /transaction/export:\n    get:\n      tags:\n        - Transaction\n      summary: Export Transactions\n      operationId: transaction_download\n      parameters:\n        - in: query\n          name: perPage\n          schema:\n            type: integer\n          description: Number of records to fetch per page\n        - in: query\n          name: page\n          schema:\n            type: integer\n          description: The section to retrieve\n        - in: query\n          name: from\n          schema:\n            type: string\n            format: date-time\n          description: The start date\n        - in: query\n          name: to\n          schema:\n            type: string\n            format: date-time\n          description: The end date\n      responses:\n        '200':\n          $ref: '#/paths/~1product/post/responses/201'\n        '401':\n          $ref: '#/paths/~1page/get/responses/401'\n        '404':\n          $ref: '#/paths/~1page/get/responses/401'\n        default:\n          description: Server error\n  /transaction/charge_authorization:\n    post:\n      tags:\n        - Transaction\n      summary: Charge Authorization\n      operationId: transaction_chargeAuthorization\n      requestBody:\n        content:\n          application/x-www-form-urlencoded:\n            schema:\n              $ref: '#/paths/~1transaction~1charge_authorization/post/requestBody/content/application~1json/schema'\n          application/json:\n            schema:\n              type: object\n              required:\n                - email\n                - amount\n                - authorization_code\n              properties:\n                email:\n                  description: Customer's email address used during the first transaction\n                  type: string\n                  example: person@email.com\n                amount:\n                  description: 'Amount should be in kobo if currency is NGN, pesewas, if currency is GHS, and cents, if currency is ZAR'\n                  type: integer\n                  example: 10247\n                authorization_code:\n                  description: Valid authorization code to charge\n                  type: string\n                  example: AUTH_CODE\n                reference:\n                  description: 'Unique transaction reference. Only -, ., = and alphanumeric characters allowed.'\n                  type: string\n                  example: 123.uniq=ref-2\n                currency:\n                  description: The transaction currency\n                  type: string\n                  enum:\n                    - NGN\n                    - GHS\n                    - ZAR\n                    - USD\n                metadata:\n                  description: Stringified JSON object of custom data\n                  type: object\n                  example:\n                    cart_id: 398\n                    custom_fields:\n                      - display_name: Invoice ID\n                        variable_name: Invoice ID\n                        value: 209\n                      - display_name: Cart Items\n                        variable_name: cart_items\n                        value: '3 bananas, 12 mangoes'\n                split_code:\n                  description: The split code of the transaction split\n                  type: string\n                  example: SPL_123AbZ\n                subaccount:\n                  description: The code for the subaccount that owns the payment\n                  type: string\n                  example: ACCT_23abcdefgh\n                transaction_charge:\n                  description: |-\n                    A flat fee to charge the subaccount for a transaction. \n                    This overrides the split percentage set when the subaccount was created\n                  type: integer\n                  example: 12300\n                bearer:\n                  description: The bearer of the transaction charge\n                  type: string\n                  enum:\n                    - account\n                    - subaccount\n                queue:\n                  description: 'If you are making a scheduled charge call, it is a good idea to queue them so the processing system does not get overloaded causing transaction processing errors.'\n                  type: boolean\n      responses:\n        '200':\n          description: Request successful\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/responses/Ok/content/application~1json/schema'\n              examples:\n                Charge Authorization:\n                  value:\n                    status: true\n                    message: Charge attempted\n                    data:\n                      amount: 500000\n                      currency: NGN\n                      reference: 123.uniq=ref-2\n                      metadata: 'cart_id:398, custom_fields:[{}]'\n                      split_code: SPL_123AbZ\n                      subaccount: ACCT_23abcdefgh\n        '401':\n          $ref: '#/paths/~1page/get/responses/401'\n        default:\n          description: Server error\n  /transaction/check_authorization:\n    post:\n      tags:\n        - Transaction\n      summary: Check Authorization\n      operationId: transaction_checkAuthorization\n      requestBody:\n        content:\n          application/x-www-form-urlencoded:\n            schema:\n              $ref: '#/paths/~1transaction~1check_authorization/post/requestBody/content/application~1json/schema'\n          application/json:\n            schema:\n              type: object\n              required:\n                - email\n                - amount\n              properties:\n                email:\n                  description: Customer's email address\n                  type: string\n                  example: person@example.com\n                amount:\n                  description: 'Amount should be in kobo if currency is NGN, pesewas, if currency is GHS, and cents, if currency is ZAR'\n                  type: integer\n                  example: 10245\n                authorization_code:\n                  description: Valid authorization code to charge\n                  type: string\n                  example: AUTH_CODE\n                currency:\n                  description: The transaction currency\n                  type: string\n                  enum:\n                    - NGN\n                    - GHS\n                    - ZAR\n                    - USD\n      responses:\n        '200':\n          $ref: '#/paths/~1page/get/responses/200'\n        '401':\n          $ref: '#/paths/~1page/get/responses/401'\n        default:\n          description: Server error\n  /transaction/partial_debit:\n    post:\n      tags:\n        - Transaction\n      summary: Partial Debit\n      operationId: transaction_partialDebit\n      requestBody:\n        content:\n          application/x-www-form-urlencoded:\n            schema:\n              $ref: '#/paths/~1transaction~1partial_debit/post/requestBody/content/application~1json/schema'\n          application/json:\n            schema:\n              type: object\n              required:\n                - email\n                - amount\n                - authorization_code\n                - currency\n              properties:\n                email:\n                  description: Customer's email address\n                  type: string\n                  example: person@email.com\n                amount:\n                  description: 'Amount should be in kobo if currency is NGN, pesewas, if currency is GHS, and cents, if currency is ZAR'\n                  type: integer\n                  example: 10247\n                authorization_code:\n                  description: Valid authorization code to charge\n                  type: string\n                  example: AUTH_CODE\n                currency:\n                  description: The transaction currency\n                  type: string\n                  enum:\n                    - NGN\n                    - GHS\n                    - ZAR\n                    - USD\n                reference:\n                  description: 'Unique transaction reference. Only -, ., = and alphanumeric characters allowed.'\n                  type: string\n                  example: 123.uniq=ref-3\n                at_least:\n                  description: Minimum amount to charge\n                  type: integer\n                  example: 5500\n      responses:\n        '200':\n          description: Request successful\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/responses/Ok/content/application~1json/schema'\n              examples:\n                Partial Debit:\n                  value:\n                    status: true\n                    message: Charge attempted\n                    data:\n                      amount: 10247\n                      currency: NGN\n                      transaction_date: '2022-09-22T07:36:03.000Z'\n                      status: success\n                      reference: dycmjmd23f1hygq\n                      domain: test\n                      metadata: ''\n                      gateway_response: Approved\n                      message: null\n                      channel: card\n                      ip_address: null\n                      log: null\n                      fees: 52\n                      authorization:\n                        authorization_code: AUTH_15qn6qmeip\n                        bin: '408408'\n                        last4: '4081'\n                        exp_month: '12'\n                        exp_year: '2030'\n                        channel: card\n                        card_type: 'visa '\n                        bank: TEST BANK\n                        country_code: NG\n                        brand: visa\n                        reusable: true\n                        signature: SIG_yEXu7dLBeqG0kU7g95Ke\n                        account_name: null\n                      customer:\n                        id: 54219771\n                        first_name: null\n                        last_name: null\n                        email: some.other@body.com\n                        customer_code: CUS_toq66lmva87v66g\n                        phone: null\n                        metadata: null\n                        risk_action: default\n                        international_format_phone: null\n                      plan: 0\n                      requested_amount: 10247\n                      id: 2122110499\n        '401':\n          $ref: '#/paths/~1page/get/responses/401'\n        default:\n          description: Server error\n  '/transaction/{id}/event':\n    get:\n      tags:\n        - Transaction\n      summary: Get Transaction Event\n      operationId: transaction_event\n      parameters:\n        - name: id\n          in: path\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          $ref: '#/paths/~1product/post/responses/201'\n        '401':\n          $ref: '#/paths/~1page/get/responses/401'\n        '404':\n          $ref: '#/paths/~1page/get/responses/401'\n        default:\n          description: Server error\n  '/transaction/{id}/session':\n    get:\n      tags:\n        - Transaction\n      summary: Get Transaction Session\n      operationId: transaction_session\n      parameters:\n        - name: id\n          in: path\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          $ref: '#/paths/~1product/post/responses/201'\n        '401':\n          $ref: '#/paths/~1page/get/responses/401'\n        '404':\n          $ref: '#/paths/~1page/get/responses/401'\n        default:\n          description: Server error\n  /split:\n    post:\n      tags:\n        - Split\n      summary: Create Split\n      operationId: split_create\n      description: Create a new transaction split\n      requestBody:\n        content:\n          application/x-www-form-urlencoded:\n            schema:\n              $ref: '#/paths/~1split/post/requestBody/content/application~1json/schema'\n          application/json:\n            schema:\n              type: object\n              required:\n                - name\n                - type\n                - subaccounts\n                - currency\n              properties:\n                name:\n                  description: Name of the transaction split\n                  type: string\n                  example: Testing Accounts\n                type:\n                  description: The type of transaction split you want to create.\n                  type: string\n                  enum:\n                    - percentage\n                    - flat\n                subaccounts:\n                  description: A list of object containing subaccount code and number of shares\n                  type: array\n                  items:\n                    $ref: '#/paths/~1split~1%7Bid%7D~1subaccount~1add/post/requestBody/content/application~1json/schema'\n                currency:\n                  description: The transaction currency\n                  type: string\n                  enum:\n                    - NGN\n                    - GHS\n                    - ZAR\n                    - USD\n                bearer_type:\n                  description: This allows you specify how the transaction charge should be processed\n                  type: string\n                  enum:\n                    - subaccount\n                    - account\n                    - all-proportional\n                    - all\n                bearer_subaccount:\n                  description: This is the subaccount code of the customer or partner that would bear the transaction charge if you specified subaccount as the bearer type\n                  type: string\n                  example: ACCT_03tb3u7jgwb4\n      responses:\n        '200':\n          description: Split Creation\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/responses/Ok/content/application~1json/schema'\n              examples:\n                Create Split:\n                  value:\n                    status: true\n                    message: Split created\n                    data:\n                      id: 142\n                      name: Test Doc\n                      type: percentage\n                      currency: NGN\n                      integration: 428626\n                      domain: test\n                      split_code: SPL_e7jnRLtzla\n                      active: true\n                      bearer_type: subaccount\n                      bearer_subaccount: 40809\n                      createdAt: 2020-06-30T11:42:29.150Z\n                      updatedAt: 2020-06-30T11:42:29.150Z\n                      subaccounts:\n                        - subaccount:\n                            id: 40809\n                            subaccount_code: ACCT_z3x6z3nbo14xsil\n                            business_name: Business Name\n                            description: Business Description\n                            primary_contact_name: null\n                            primary_contact_email: null\n                            primary_contact_phone: null\n                            metadata: null\n                            percentage_charge: 20\n                            settlement_bank: Business Bank\n                            account_number: 1234567890\n                          share: 20\n                        - subaccount:\n                            id: 40809\n                            subaccount_code: ACCT_pwwualwty4nhq9d\n                            business_name: Business Name\n                            description: Business Description\n                            primary_contact_name: null\n                            primary_contact_email: null\n                            primary_contact_phone: null\n                            metadata: null\n                            percentage_charge: 20\n                            settlement_bank: Business Bank\n                            account_number: 0123456789\n                          share: 30\n                      total_subaccounts: 2\n        '401':\n          $ref: '#/paths/~1page/get/responses/401'\n        default:\n          description: Server error\n    get:\n      tags:\n        - Split\n      summary: List Splits\n      operationId: split_list\n      parameters:\n        - name: name\n          in: query\n          schema:\n            type: string\n        - name: active\n          in: query\n          schema:\n            type: string\n        - name: sort_by\n          in: query\n          schema:\n            type: string\n        - name: from\n          in: query\n          schema:\n            type: string\n        - name: to\n          in: query\n          schema:\n            type: string\n        - name: perPage\n          in: query\n          schema:\n            type: string\n        - name: page\n          in: query\n          schema:\n            type: string\n      responses:\n        '200':\n          $ref: '#/paths/~1product/post/responses/201'\n        '401':\n          $ref: '#/paths/~1page/get/responses/401'\n        '404':\n          $ref: '#/paths/~1page/get/responses/401'\n        default:\n          description: Server error\n  '/split/{id}':\n    parameters:\n      - name: id\n        in: path\n        required: true\n        schema:\n          type: string\n    get:\n      tags:\n        - Split\n      summary: Fetch Split\n      operationId: split_fetch\n      responses:\n        '200':\n          $ref: '#/paths/~1product/post/responses/201'\n        '401':\n          $ref: '#/paths/~1page/get/responses/401'\n        '404':\n          $ref: '#/paths/~1page/get/responses/401'\n        default:\n          description: Server error\n    put:\n      tags:\n        - Split\n      summary: Update Split\n      operationId: split_update\n      requestBody:\n        content:\n          application/x-www-form-urlencoded:\n            schema:\n              $ref: '#/paths/~1split~1%7Bid%7D/put/requestBody/content/application~1json/schema'\n          application/json:\n            schema:\n              type: object\n              properties:\n                name:\n                  description: Name of the transaction split\n                  type: string\n                active:\n                  description: 'Toggle status of split. When true, the split is active, else it''s inactive'\n                  type: boolean\n                bearer_type:\n                  description: This allows you specify how the transaction charge should be processed\n                  type: string\n                  enum:\n                    - subaccount\n                    - account\n                    - all-proportional\n                    - all\n                bearer_subaccount:\n                  description: This is the subaccount code of the customer or partner that would bear the transaction charge if you specified subaccount as the bearer type\n                  type: string\n      responses:\n        '200':\n          $ref: '#/paths/~1page/get/responses/200'\n        '401':\n          $ref: '#/paths/~1page/get/responses/401'\n        '404':\n          $ref: '#/paths/~1page/get/responses/401'\n        default:\n          description: Server error\n  '/split/{id}/subaccount/add':\n    post:\n      tags:\n        - Split\n      summary: Add Subaccount to Split\n      operationId: split_addSubaccount\n      requestBody:\n        content:\n          application/x-www-form-urlencoded:\n            schema:\n              $ref: '#/paths/~1split~1%7Bid%7D~1subaccount~1add/post/requestBody/content/application~1json/schema'\n          application/json:\n            schema:\n              type: object\n              properties:\n                subaccount:\n                  description: Subaccount code of the customer or partner\n                  type: string\n                  example: ACCT_03tb3u7jgwb4v\n                share:\n                  description: The percentage or flat quota of the customer or partner\n                  type: string\n                  example: '102'\n      parameters:\n        - name: id\n          in: path\n          required: true\n          schema:\n            type: string\n          example: application/json\n      responses:\n        '200':\n          $ref: '#/paths/~1page/get/responses/200'\n        '401':\n          $ref: '#/paths/~1page/get/responses/401'\n        default:\n          description: Server error\n  '/split/{id}/subaccount/remove':\n    post:\n      tags:\n        - Split\n      summary: Remove Subaccount from split\n      operationId: split_removeSubaccount\n      requestBody:\n        content:\n          application/x-www-form-urlencoded:\n            schema:\n              $ref: '#/paths/~1split~1%7Bid%7D~1subaccount~1add/post/requestBody/content/application~1json/schema'\n          application/json:\n            schema:\n              $ref: '#/paths/~1split~1%7Bid%7D~1subaccount~1add/post/requestBody/content/application~1json/schema'\n      parameters:\n        - name: id\n          in: path\n          required: true\n          schema:\n            type: string\n          example: application/json\n      responses:\n        '200':\n          $ref: '#/paths/~1page/get/responses/200'\n        '401':\n          $ref: '#/paths/~1page/get/responses/401'\n        default:\n          description: Server error\n  /customer:\n    post:\n      tags:\n        - Customer\n      summary: Create Customer\n      operationId: customer_create\n      requestBody:\n        content:\n          application/x-www-form-urlencoded:\n            schema:\n              allOf:\n                - $ref: '#/components/schemas/Customer/allOf/0'\n                - $ref: '#/components/schemas/Customer/allOf/1'\n          application/json:\n            schema:\n              allOf:\n                - $ref: '#/components/schemas/Customer/allOf/0'\n                - $ref: '#/components/schemas/Customer/allOf/1'\n      responses:\n        '200':\n          description: Customer Created\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/responses/Ok/content/application~1json/schema'\n              examples:\n                Create Customer:\n                  value:\n                    status: true\n                    message: Customer created\n                    data:\n                      transactions: []\n                      subscriptions: []\n                      authorizations: []\n                      email: somebody@example.com\n                      first_name: Some\n                      last_name: Body\n                      phone: '+2348123456789'\n                      integration: 463433\n                      domain: test\n                      metadata: {}\n                      customer_code: CUS_pztcpsx5kng2fbk\n                      risk_action: default\n                      id: 95485991\n                      createdAt: '2022-09-20T12:52:10.583Z'\n                      updatedAt: '2022-09-20T12:52:10.583Z'\n                      identified: false\n                      identifications: []\n        '401':\n          $ref: '#/paths/~1page/get/responses/401'\n        default:\n          description: Server error\n    get:\n      tags:\n        - Customer\n      summary: List Customers\n      operationId: customer_list\n      description: List customers on your integration\n      parameters:\n        - name: use_cursor\n          in: query\n          schema:\n            type: boolean\n        - name: next\n          in: query\n          schema:\n            type: string\n        - name: previous\n          in: query\n          schema:\n            type: string\n        - name: from\n          in: query\n          schema:\n            type: string\n        - name: to\n          in: query\n          schema:\n            type: string\n        - name: perPage\n          in: query\n          schema:\n            type: string\n        - name: page\n          in: query\n          schema:\n            type: string\n      responses:\n        '200':\n          $ref: '#/paths/~1product/post/responses/201'\n        '401':\n          $ref: '#/paths/~1page/get/responses/401'\n        '404':\n          $ref: '#/paths/~1page/get/responses/401'\n        default:\n          description: Server error\n  '/customer/{code}':\n    parameters:\n      - name: code\n        in: path\n        required: true\n        schema:\n          type: string\n    get:\n      tags:\n        - Customer\n      summary: Fetch Customer\n      operationId: customer_fetch\n      responses:\n        '200':\n          $ref: '#/paths/~1product/post/responses/201'\n        '401':\n          $ref: '#/paths/~1page/get/responses/401'\n        '404':\n          $ref: '#/paths/~1page/get/responses/401'\n        default:\n          description: Server error\n    put:\n      tags:\n        - Customer\n      summary: Update Customer\n      operationId: customer_update\n      requestBody:\n        content:\n          application/x-www-form-urlencoded:\n            schema:\n              $ref: '#/components/schemas/Customer/allOf/1'\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Customer/allOf/1'\n      responses:\n        '200':\n          $ref: '#/paths/~1page/get/responses/200'\n        '401':\n          $ref: '#/paths/~1page/get/responses/401'\n        '404':\n          $ref: '#/paths/~1page/get/responses/401'\n        default:\n          description: Server error\n  /customer/set_risk_action:\n    post:\n      tags:\n        - Customer\n      summary: White/blacklist Customer\n      description: Set customer's risk action by whitelisting or blacklisting the customer\n      operationId: customer_riskAction\n      requestBody:\n        content:\n          application/x-www-form-urlencoded:\n            schema:\n              $ref: '#/components/schemas/Customer/allOf/3'\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Customer/allOf/3'\n      responses:\n        '200':\n          $ref: '#/paths/~1page/get/responses/200'\n        '401':\n          $ref: '#/paths/~1page/get/responses/401'\n        default:\n          description: Server error\n  /customer/deactivate_authorization:\n    post:\n      tags:\n        - Customer\n      summary: Deactivate Authorization\n      operationId: customer_deactivateAuthorization\n      description: Deactivate a customer's card\n      requestBody:\n        content:\n          application/x-www-form-urlencoded:\n            schema:\n              $ref: '#/components/schemas/Customer/allOf/2'\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Customer/allOf/2'\n      responses:\n        '200':\n          $ref: '#/paths/~1page/get/responses/200'\n        '401':\n          $ref: '#/paths/~1page/get/responses/401'\n        default:\n          description: Server error\n  '/customer/{code}/identification':\n    parameters:\n      - name: code\n        in: path\n        required: true\n        schema:\n          type: string\n    post:\n      tags:\n        - Customer\n      summary: Validate Customer\n      operationId: customer_validatte\n      description: Validate a customer's identity\n      requestBody:\n        content:\n          application/x-www-form-urlencoded:\n            schema:\n              $ref: '#/components/schemas/Customer/allOf/4'\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Customer/allOf/4'\n      responses:\n        '202':\n          description: Customer Validation\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/responses/Ok/content/application~1json/schema'\n              examples:\n                Validate Customer:\n                  value:\n                    status: true\n                    message: Customer Identification in progress\n        '401':\n          $ref: '#/paths/~1page/get/responses/401'\n        default:\n          description: Server error\n  /dedicated_account:\n    post:\n      tags:\n        - Dedicated Virtual Account\n      summary: Create Dedicated Account\n      operationId: dedicatedAccount_create\n      requestBody:\n        content:\n          application/x-www-form-urlencoded:\n            schema:\n              $ref: '#/paths/~1dedicated_account/post/requestBody/content/application~1json/schema'\n          application/json:\n            schema:\n              type: object\n              required:\n                - customer\n              properties:\n                customer:\n                  description: Customer ID or code\n                  type: string\n                  example: CUS_abc123der\n                preferred_bank:\n                  description: 'The bank slug for preferred bank. To get a list of available banks, use the List Providers endpoint'\n                  type: string\n                  example: wema-bank\n                subaccount:\n                  description: Subaccount code of the account you want to split the transaction with\n                  type: string\n                  example: ACCT_123455asdin\n                split_code:\n                  description: Split code consisting of the lists of accounts you want to split the transaction with\n                  type: string\n                  example: SPL_123asbde\n      responses:\n        '200':\n          description: Creation Successful\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/responses/Ok/content/application~1json/schema'\n              examples:\n                Create Dedicated Account:\n                  value:\n                    status: true\n                    message: NUBAN successfully created\n                    data:\n                      bank:\n                        name: Wema Bank\n                        id: 20\n                        slug: wema-bank\n                      account_name: KAROKART / RHODA CHURCH\n                      account_number: 9930000737\n                      assigned: true\n                      currency: NGN\n                      metadata: null\n                      active: true\n                      id: 253\n                      created_at: 2019-12-12T12:39:04.000Z\n                      updated_at: 2020-01-06T15:51:24.000Z\n                      assignment:\n                        integration: 100043\n                        assignee_id: 7454289\n                        assignee_type: Customer\n                        expired: false\n                        account_type: PAY-WITH-TRANSFER-RECURRING\n                        assigned_at: 2020-01-06T15:51:24.764Z\n                      customer:\n                        id: 7454289\n                        first_name: RHODA\n                        last_name: CHURCH\n                        email: rhodachurch@email.com\n                        customer_code: CUS_kpb3qj71u1m0rw8\n                        phone: 2349053267565\n                        risk_action: default\n        '401':\n          $ref: '#/paths/~1page/get/responses/401'\n        default:\n          description: Server error\n    get:\n      tags:\n        - Dedicated Virtual Account\n      summary: List Dedicated Accounts\n      operationId: dedicatedAccount_list\n      parameters:\n        - name: account_number\n          in: query\n          schema:\n            type: string\n        - name: customer\n          in: query\n          schema:\n            type: string\n        - name: active\n          in: query\n          schema:\n            type: boolean\n        - name: currency\n          in: query\n          schema:\n            type: string\n        - name: provider_slug\n          in: query\n          schema:\n            type: string\n        - name: bank_id\n          in: query\n          schema:\n            type: string\n        - name: perPage\n          in: query\n          schema:\n            type: string\n        - name: page\n          in: query\n          schema:\n            type: string\n      responses:\n        '200':\n          $ref: '#/paths/~1page/get/responses/200'\n        '401':\n          $ref: '#/paths/~1page/get/responses/401'\n        '404':\n          $ref: '#/paths/~1page/get/responses/401'\n        default:\n          description: Server error\n  '/dedicated_account/{account_id}':\n    parameters:\n      - name: account_id\n        in: path\n        required: true\n        schema:\n          type: string\n    get:\n      tags:\n        - Dedicated Virtual Account\n      summary: Fetch Dedicated Account\n      operationId: dedicatedAccount_fetch\n      responses:\n        '200':\n          $ref: '#/paths/~1page/get/responses/200'\n        '401':\n          $ref: '#/paths/~1page/get/responses/401'\n        '404':\n          $ref: '#/paths/~1page/get/responses/401'\n        default:\n          description: Server error\n    delete:\n      tags:\n        - Dedicated Virtual Account\n      summary: Deactivate Dedicated Account\n      operationId: dedicatedAccount_deactivate\n      responses:\n        '200':\n          $ref: '#/paths/~1page/get/responses/200'\n        '401':\n          $ref: '#/paths/~1page/get/responses/401'\n        '404':\n          $ref: '#/paths/~1page/get/responses/401'\n        default:\n          description: Server error\n  /dedicated_account/available_providers:\n    get:\n      tags:\n        - Dedicated Virtual Account\n      summary: Fetch Bank Providers\n      operationId: dedicatedAccount_availableProviders\n      responses:\n        '200':\n          $ref: '#/paths/~1page/get/responses/200'\n        '401':\n          $ref: '#/paths/~1page/get/responses/401'\n        '404':\n          $ref: '#/paths/~1page/get/responses/401'\n        default:\n          description: Server error\n  /dedicated_account/split:\n    post:\n      tags:\n        - Dedicated Virtual Account\n      summary: Split Dedicated Account Transaction\n      operationId: dedicatedAccount_addSplit\n      requestBody:\n        content:\n          application/x-www-form-urlencoded:\n            schema:\n              $ref: '#/paths/~1dedicated_account~1split/post/requestBody/content/application~1json/schema'\n          application/json:\n            schema:\n              type: object\n              required:\n                - account_number\n              properties:\n                account_number:\n                  description: Valid Dedicated virtual account\n                  type: string\n                subaccount:\n                  description: Subaccount code of the account you want to split the transaction with\n                  type: string\n                split_code:\n                  description: Split code consisting of the lists of accounts you want to split the transaction with\n                  type: string\n      responses:\n        '200':\n          $ref: '#/paths/~1page/get/responses/200'\n        '401':\n          $ref: '#/paths/~1page/get/responses/401'\n        default:\n          description: Server error\n  /subaccount:\n    post:\n      tags:\n        - Subaccount\n      summary: Create Subaccount\n      operationId: subaccount_create\n      description: Create a new subaccount\n      requestBody:\n        content:\n          application/x-www-form-urlencoded:\n            schema:\n              $ref: '#/paths/~1subaccount/post/requestBody/content/application~1json/schema'\n          application/json:\n            schema:\n              type: object\n              required:\n                - business_name\n                - settlement_bank\n                - account_number\n                - percentage_charge\n              properties:\n                business_name:\n                  description: Name of business for subaccount\n                  type: string\n                  example: Some Subaccount\n                settlement_bank:\n                  description: Bank code for the bank. You can get the list of Bank Codes by calling the List Banks endpoint.\n                  type: string\n                  example: '011'\n                account_number:\n                  description: Bank account number\n                  type: string\n                  example: '0000000000'\n                percentage_charge:\n                  description: Transaction percentage that the subaccount gets\n                  type: number\n                  format: float\n                  example: 0.3\n                description:\n                  description: A description for this subaccount\n                  type: string\n                  example: A service provider\n                primary_contact_email:\n                  description: A contact email for the subaccount\n                  type: string\n                  example: sub@example.com\n                primary_contact_name:\n                  description: The name of the contact person for this subaccount\n                  type: string\n                  example: person@example.com\n                primary_contact_phone:\n                  description: A phone number to call for this subaccount\n                  type: string\n                metadata:\n                  description: Stringified JSON object of custom data\n                  type: object\n                  example:\n                    category: General supplies\n      responses:\n        '201':\n          description: Subaccount Creation\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/responses/Ok/content/application~1json/schema'\n              examples:\n                Create Subaccount:\n                  value:\n                    status: true\n                    message: Subaccount created\n                    data:\n                      business_name: Cheese Sticks\n                      account_number: 0123456789\n                      percentage_charge: 0.2\n                      settlement_bank: Guaranty Trust Bank\n                      integration: 428626\n                      domain: test\n                      subaccount_code: ACCT_xxxxxxxxxxxxx\n                      is_verified: false\n                      settlement_schedule: AUTO\n                      active: true\n                      migrate: false\n                      id: 37614\n                      createdAt: 2020-05-19T11:54:20.655Z\n                      updatedAt: 2020-05-19T11:54:20.655Z\n        '401':\n          $ref: '#/paths/~1page/get/responses/401'\n        default:\n          description: Server error\n    get:\n      tags:\n        - Subaccount\n      summary: List Subaccounts\n      operationId: subaccount_list\n      parameters:\n        - in: query\n          name: perPage\n          schema:\n            type: integer\n          description: Number of records to fetch per page\n        - in: query\n          name: page\n          schema:\n            type: integer\n          description: The section to retrieve\n        - in: query\n          name: from\n          schema:\n            type: string\n            format: date-time\n          description: The start date\n        - in: query\n          name: to\n          schema:\n            type: string\n            format: date-time\n          description: The end date\n      responses:\n        '200':\n          $ref: '#/paths/~1page/get/responses/200'\n        '401':\n          $ref: '#/paths/~1page/get/responses/401'\n        '404':\n          $ref: '#/paths/~1page/get/responses/401'\n        default:\n          description: Server error\n  '/subaccount/{code}':\n    parameters:\n      - name: code\n        in: path\n        required: true\n        schema:\n          type: string\n    get:\n      tags:\n        - Subaccount\n      summary: Fetch Subaccount\n      operationId: subaccount_fetch\n      responses:\n        '200':\n          $ref: '#/paths/~1page/get/responses/200'\n        '401':\n          $ref: '#/paths/~1page/get/responses/401'\n        '404':\n          $ref: '#/paths/~1page/get/responses/401'\n        default:\n          description: Server error\n    put:\n      tags:\n        - Subaccount\n      summary: Update Subaccount\n      operationId: subaccount_update\n      requestBody:\n        content:\n          application/x-www-form-urlencoded:\n            schema:\n              $ref: '#/paths/~1subaccount~1%7Bcode%7D/put/requestBody/content/application~1json/schema'\n          application/json:\n            schema:\n              type: object\n              properties:\n                business_name:\n                  description: Name of business for subaccount\n                  type: string\n                settlement_bank:\n                  description: Bank code for the bank. You can get the list of Bank Codes by calling the List Banks endpoint.\n                  type: string\n                account_number:\n                  description: Bank account number\n                  type: string\n                active:\n                  description: Activate or deactivate a subaccount\n                  type: boolean\n                percentage_charge:\n                  description: Customer's phone number\n                  type: number\n                  format: float\n                description:\n                  description: A description for this subaccount\n                  type: string\n                primary_contact_email:\n                  description: A contact email for the subaccount\n                  type: string\n                primary_contact_name:\n                  description: The name of the contact person for this subaccount\n                  type: string\n                primary_contact_phone:\n                  description: A phone number to call for this subaccount\n                  type: string\n                metadata:\n                  description: Stringified JSON object of custom data\n                  type: string\n      responses:\n        '200':\n          $ref: '#/paths/~1page/get/responses/200'\n        '401':\n          $ref: '#/paths/~1page/get/responses/401'\n        '404':\n          $ref: '#/paths/~1page/get/responses/401'\n        default:\n          description: Server error\n  /plan:\n    post:\n      tags:\n        - Plan\n      summary: Create Plan\n      operationId: plan_create\n      requestBody:\n        content:\n          application/x-www-form-urlencoded:\n            schema:\n              $ref: '#/paths/~1plan/post/requestBody/content/application~1json/schema'\n          application/json:\n            schema:\n              type: object\n              required:\n                - name\n                - amount\n                - interval\n              properties:\n                name:\n                  description: Name of plan\n                  type: string\n                  example: My monthly membership\n                amount:\n                  description: 'Amount should be in kobo if currency is NGN, pesewas, if currency is GHS, and cents, if currency is ZAR'\n                  type: integer\n                  example: 20000\n                interval:\n                  description: 'Interval in words. Valid intervals are daily, weekly, monthly,biannually, annually'\n                  type: string\n                  example: monthly\n                description:\n                  description: A description for this plan\n                  type: string\n                  example: Monthly membership payment plan\n                send_invoices:\n                  description: Set to false if you don't want invoices to be sent to your customers\n                  type: boolean\n                send_sms:\n                  description: Set to false if you don't want text messages to be sent to your customers\n                  type: boolean\n                currency:\n                  description: 'Currency in which amount is set. Allowed values are NGN, GHS, ZAR or USD'\n                  type: string\n                  example: NGN\n                invoice_limit:\n                  description: |-\n                    Number of invoices to raise during subscription to this plan. \n                    Can be overridden by specifying an invoice_limit while subscribing.\n                  type: integer\n                  example: 0\n      responses:\n        '201':\n          description: Create Plan\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/responses/Ok/content/application~1json/schema'\n              examples:\n                Create Plan:\n                  value:\n                    status: true\n                    message: Plan created\n                    data:\n                      name: My monthly membership\n                      interval: monthly\n                      amount: 20000\n                      description: Monthly membership payment plan\n                      integration: 463433\n                      domain: test\n                      currency: NGN\n                      plan_code: PLN_y4y1wkydoptw6zv\n                      invoice_limit: 0\n                      send_invoices: true\n                      send_sms: true\n                      hosted_page: false\n                      migrate: false\n                      is_archived: false\n                      id: 393872\n                      createdAt: '2022-09-22T02:15:06.702Z'\n                      updatedAt: '2022-09-22T02:15:06.702Z'\n        '401':\n          $ref: '#/paths/~1page/get/responses/401'\n        default:\n          description: Server error\n    get:\n      tags:\n        - Plan\n      summary: List Plans\n      operationId: plan_list\n      parameters:\n        - in: query\n          name: perPage\n          schema:\n            type: integer\n          description: Number of records to fetch per page\n        - in: query\n          name: page\n          schema:\n            type: integer\n          description: The section to retrieve\n        - in: query\n          name: interval\n          schema:\n            type: string\n          description: Specify interval of the plan\n        - in: query\n          name: amount\n          schema:\n            type: integer\n          description: The amount on the plans to retrieve\n        - in: query\n          name: from\n          schema:\n            type: string\n            format: date-time\n          description: The start date\n        - in: query\n          name: to\n          schema:\n            type: string\n            format: date-time\n          description: The end date\n      responses:\n        '200':\n          $ref: '#/paths/~1page/get/responses/200'\n        '401':\n          $ref: '#/paths/~1page/get/responses/401'\n        '404':\n          $ref: '#/paths/~1page/get/responses/401'\n        default:\n          description: Server error\n  '/plan/{code}':\n    parameters:\n      - name: code\n        in: path\n        required: true\n        schema:\n          type: string\n    get:\n      tags:\n        - Plan\n      summary: Fetch Plan\n      operationId: plan_fetch\n      responses:\n        '200':\n          $ref: '#/paths/~1page/get/responses/200'\n        '401':\n          $ref: '#/paths/~1page/get/responses/401'\n        '404':\n          $ref: '#/paths/~1page/get/responses/401'\n        default:\n          description: Server error\n    put:\n      tags:\n        - Plan\n      summary: Update Plan\n      operationId: plan_update\n      requestBody:\n        content:\n          application/x-www-form-urlencoded:\n            schema:\n              $ref: '#/paths/~1plan~1%7Bcode%7D/put/requestBody/content/application~1json/schema'\n          application/json:\n            schema:\n              type: object\n              properties:\n                name:\n                  description: Name of plan\n                  type: string\n                amount:\n                  description: 'Amount should be in kobo if currency is NGN, pesewas, if currency is GHS, and cents, if currency is ZAR'\n                  type: integer\n                interval:\n                  description: 'Interval in words. Valid intervals are daily, weekly, monthly,biannually, annually'\n                  type: string\n                description:\n                  description: A description for this plan\n                  type: boolean\n                send_invoices:\n                  description: Set to false if you don't want invoices to be sent to your customers\n                  type: boolean\n                send_sms:\n                  description: Set to false if you don't want text messages to be sent to your customers\n                  type: boolean\n                currency:\n                  description: 'Currency in which amount is set. Allowed values are NGN, GHS, ZAR or USD'\n                  type: string\n                invoice_limit:\n                  description: |-\n                    Number of invoices to raise during subscription to this plan. \n                    Can be overridden by specifying an invoice_limit while subscribing.\n                  type: integer\n      responses:\n        '200':\n          $ref: '#/paths/~1page/get/responses/200'\n        '401':\n          $ref: '#/paths/~1page/get/responses/401'\n        '404':\n          $ref: '#/paths/~1page/get/responses/401'\n        default:\n          description: Server error\n  /subscription:\n    post:\n      tags:\n        - Subscription\n      summary: Create Subscription\n      operationId: subscription_create\n      requestBody:\n        content:\n          application/x-www-form-urlencoded:\n            schema:\n              $ref: '#/paths/~1subscription/post/requestBody/content/application~1json/schema'\n          application/json:\n            schema:\n              type: object\n              required:\n                - customer\n                - plan\n              properties:\n                customer:\n                  description: Customer's email address or customer code\n                  type: string\n                  example: person@example.com\n                plan:\n                  description: Plan code that the customer should subscribe to\n                  type: string\n                  example: PLN_y4y1wkydoptw6zv\n                authorization:\n                  description: |-\n                    If customer has multiple authorizations, you can set the desired authorization you wish to use for this subscription here. \n                    If this is not supplied, the customer's most recent authorization would be used\n                  type: string\n                  example: AUTH_Codaad23\n                start_date:\n                  description: 'Set the date for the first debit. (ISO 8601 format) e.g. 2017-05-16T00:30:13+01:00'\n                  type: string\n                  format: date-time\n      responses:\n        '200':\n          description: Create Subscription\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/responses/Ok/content/application~1json/schema'\n              examples:\n                Create Subscription:\n                  value:\n                    status: true\n                    message: Subscription successfully created\n                    data:\n                      customer: 89363925\n                      plan: 393873\n                      integration: 463433\n                      domain: test\n                      start: 1663817490\n                      status: active\n                      quantity: 1\n                      amount: 20000\n                      authorization: 374536802\n                      invoice_limit: 0\n                      split_code: null\n                      subscription_code: SUB_k0alurkz6l2d3nz\n                      email_token: txyhn3zjzcr9xlo\n                      id: 456933\n                      cancelledAt: null\n                      createdAt: '2022-09-22T03:31:30.886Z'\n                      updatedAt: '2022-09-22T03:31:30.886Z'\n                      cron_expression: 31 3 22 * *\n                      next_payment_date: '2022-10-22T03:31:00.000Z'\n        '401':\n          $ref: '#/paths/~1page/get/responses/401'\n        default:\n          description: Server error\n    get:\n      tags:\n        - Subscription\n      summary: List Subscriptions\n      operationId: subscription_list\n      parameters:\n        - in: query\n          name: perPage\n          schema:\n            type: integer\n          description: Number of records to fetch per page\n        - in: query\n          name: page\n          schema:\n            type: integer\n          description: The section to retrieve\n        - in: query\n          name: plan\n          schema:\n            type: string\n          description: Plan ID\n        - in: query\n          name: customer\n          schema:\n            type: string\n          description: Customer ID\n        - in: query\n          name: from\n          schema:\n            type: string\n            format: date-time\n          description: The start date\n        - in: query\n          name: to\n          schema:\n            type: string\n            format: date-time\n          description: The end date\n      responses:\n        '200':\n          $ref: '#/paths/~1product/post/responses/201'\n        '401':\n          $ref: '#/paths/~1page/get/responses/401'\n        '404':\n          $ref: '#/paths/~1page/get/responses/401'\n        default:\n          description: Server error\n  '/subscription/{code}':\n    parameters:\n      - name: code\n        in: path\n        required: true\n        schema:\n          type: string\n    get:\n      tags:\n        - Subscription\n      summary: Fetch Subscription\n      operationId: subscription_fetch\n      responses:\n        '200':\n          $ref: '#/paths/~1page/get/responses/200'\n        '401':\n          $ref: '#/paths/~1page/get/responses/401'\n        '404':\n          $ref: '#/paths/~1page/get/responses/401'\n        default:\n          description: Server error\n  /subscription/disable:\n    post:\n      tags:\n        - Subscription\n      summary: Disable Subscription\n      operationId: subscription_disable\n      requestBody:\n        content:\n          application/x-www-form-urlencoded:\n            schema:\n              $ref: '#/paths/~1subscription~1enable/post/requestBody/content/application~1json/schema'\n          application/json:\n            schema:\n              $ref: '#/paths/~1subscription~1enable/post/requestBody/content/application~1json/schema'\n      responses:\n        '200':\n          $ref: '#/paths/~1page/get/responses/200'\n        '401':\n          $ref: '#/paths/~1page/get/responses/401'\n        default:\n          description: Server error\n  /subscription/enable:\n    post:\n      tags:\n        - Subscription\n      summary: Enable Subscription\n      operationId: subscription_enable\n      requestBody:\n        content:\n          application/x-www-form-urlencoded:\n            schema:\n              $ref: '#/paths/~1subscription~1enable/post/requestBody/content/application~1json/schema'\n          application/json:\n            schema:\n              type: object\n              required:\n                - code\n                - token\n                - authorization\n              properties:\n                code:\n                  description: Subscription code\n                  type: string\n                token:\n                  description: Email token\n                  type: string\n      responses:\n        '200':\n          $ref: '#/paths/~1page/get/responses/200'\n        '401':\n          $ref: '#/paths/~1page/get/responses/401'\n        default:\n          description: Server error\n  '/subscription/{code}/manage/link':\n    get:\n      tags:\n        - Subscription\n      summary: Generate Update Subscription Link\n      operationId: subscription_manageLink\n      parameters:\n        - name: code\n          in: path\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          $ref: '#/paths/~1page/get/responses/200'\n        '401':\n          $ref: '#/paths/~1page/get/responses/401'\n        default:\n          description: Server error\n  '/subscription/{code}/manage/email':\n    post:\n      tags:\n        - Subscription\n      summary: Send Update Subscription Link\n      operationId: subscription_manageEmail\n      parameters:\n        - name: code\n          in: path\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          $ref: '#/paths/~1page/get/responses/200'\n        '401':\n          $ref: '#/paths/~1page/get/responses/401'\n        default:\n          description: Server error\n  /product:\n    post:\n      tags:\n        - Product\n      summary: Create Product\n      operationId: product_create\n      requestBody:\n        content:\n          application/x-www-form-urlencoded:\n            schema:\n              $ref: '#/paths/~1product/post/requestBody/content/application~1json/schema'\n          application/json:\n            schema:\n              type: object\n              required:\n                - name\n                - description\n                - price\n                - currency\n              properties:\n                name:\n                  description: Name of product\n                  type: string\n                description:\n                  description: The description of the product\n                  type: string\n                price:\n                  description: 'Price should be in kobo if currency is NGN, pesewas, if currency is GHS, and cents, if currency is ZAR'\n                  type: integer\n                currency:\n                  description: 'Currency in which price is set. Allowed values are: NGN, GHS, ZAR or USD'\n                  type: string\n                limited:\n                  description: Set to true if the product has limited stock. Leave as false if the product has unlimited stock\n                  type: boolean\n                quantity:\n                  description: Number of products in stock. Use if limited is true\n                  type: integer\n      responses:\n        '201':\n          description: Resource created\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/responses/Ok/content/application~1json/schema'\n              examples:\n                Create Transfer Recipient:\n                  value:\n                    status: true\n                    message: Transfer recipient created successfully\n                    data:\n                      active: true\n                      createdAt: 2022-09-16T08:31:43.321Z\n                      currency: NGN\n                      domain: live\n                      id: 38770134\n                      integration: 463433\n                      metadata:\n                        referrer_id: 123\n                      name: Ada Lovelace\n                      recipient_code: RCP_2fl8jmb2v3kbleb\n                      type: nuban\n                      updatedAt: 2022-09-16T08:31:43.321Z\n                      is_deleted: false\n                      isDeleted: false\n                      details:\n                        authorization_code: null\n                        account_number: 0\n                        account_name: Doe Jane Loren\n                        bank_code: 9\n                        bank_name: First Bank of Nigeria\n        '401':\n          $ref: '#/paths/~1page/get/responses/401'\n        default:\n          description: Server error\n    get:\n      tags:\n        - Product\n      summary: List Products\n      operationId: product_list\n      parameters:\n        - name: perPage\n          in: query\n          schema:\n            type: integer\n        - name: page\n          in: query\n          schema:\n            type: integer\n        - name: active\n          in: query\n          schema:\n            type: boolean\n        - in: query\n          name: from\n          schema:\n            type: string\n            format: date-time\n          description: The start date\n        - in: query\n          name: to\n          schema:\n            type: string\n            format: date-time\n          description: The end date\n      responses:\n        '200':\n          $ref: '#/paths/~1page/get/responses/200'\n        '401':\n          $ref: '#/paths/~1page/get/responses/401'\n        '404':\n          $ref: '#/paths/~1page/get/responses/401'\n        default:\n          description: Server error\n  '/product/{id}':\n    parameters:\n      - name: id\n        in: path\n        required: true\n        schema:\n          type: string\n    get:\n      tags:\n        - Product\n      summary: Fetch Product\n      operationId: product_fetch\n      responses:\n        '200':\n          $ref: '#/paths/~1page/get/responses/200'\n        '401':\n          $ref: '#/paths/~1page/get/responses/401'\n        '404':\n          $ref: '#/paths/~1page/get/responses/401'\n        default:\n          description: Server error\n    put:\n      tags:\n        - Product\n      summary: Update product\n      operationId: product_update\n      requestBody:\n        content:\n          application/x-www-form-urlencoded:\n            schema:\n              $ref: '#/paths/~1product~1%7Bid%7D/put/requestBody/content/application~1json/schema'\n          application/json:\n            schema:\n              type: object\n              properties:\n                name:\n                  description: Name of product\n                  type: string\n                description:\n                  description: The description of the product\n                  type: string\n                price:\n                  description: 'Price should be in kobo if currency is NGN, pesewas, if currency is GHS, and cents, if currency is ZAR'\n                  type: integer\n                currency:\n                  description: 'Currency in which price is set. Allowed values are: NGN, GHS, ZAR or USD'\n                  type: string\n                limited:\n                  description: Set to true if the product has limited stock. Leave as false if the product has unlimited stock\n                  type: boolean\n                quantity:\n                  description: Number of products in stock. Use if limited is true\n                  type: integer\n      responses:\n        '200':\n          $ref: '#/paths/~1page/get/responses/200'\n        '401':\n          $ref: '#/paths/~1page/get/responses/401'\n        '404':\n          $ref: '#/paths/~1page/get/responses/401'\n        default:\n          description: Server error\n    delete:\n      tags:\n        - Product\n      summary: Delete Product\n      operationId: product_delete\n      responses:\n        '200':\n          $ref: '#/paths/~1page/get/responses/200'\n        '401':\n          $ref: '#/paths/~1page/get/responses/401'\n        '404':\n          $ref: '#/paths/~1page/get/responses/401'\n        default:\n          description: Server error\n  /page:\n    post:\n      tags:\n        - Page\n      summary: Create Page\n      operationId: page_create\n      requestBody:\n        content:\n          application/x-www-form-urlencoded:\n            schema:\n              $ref: '#/paths/~1page/post/requestBody/content/application~1json/schema'\n          application/json:\n            schema:\n              type: object\n              required:\n                - name\n              properties:\n                name:\n                  description: Name of page\n                  type: string\n                description:\n                  description: The description of the page\n                  type: string\n                amount:\n                  description: 'Amount should be in kobo if currency is NGN, pesewas, if currency is GHS, and cents, if currency is ZAR'\n                  type: integer\n                slug:\n                  description: 'URL slug you would like to be associated with this page. Page will be accessible at https://paystack.com/pay/[slug]'\n                  type: string\n                metadata:\n                  description: Stringified JSON object of custom data\n                  type: string\n                redirect_url:\n                  description: 'If you would like Paystack to redirect to a URL upon successful payment, specify the URL here.'\n                  type: string\n                custom_fields:\n                  description: 'If you would like to accept custom fields, specify them here.'\n                  type: array\n                  items:\n                    type: object\n      responses:\n        '200':\n          $ref: '#/paths/~1page/get/responses/200'\n        '401':\n          $ref: '#/paths/~1page/get/responses/401'\n        default:\n          description: Server error\n    get:\n      tags:\n        - Page\n      summary: List Pages\n      operationId: page_list\n      parameters:\n        - in: query\n          name: perPage\n          schema:\n            type: integer\n          description: Number of records to fetch per page\n        - in: query\n          name: page\n          schema:\n            type: integer\n          description: The section to retrieve\n        - in: query\n          name: from\n          schema:\n            type: string\n            format: date-time\n          description: The start date\n        - in: query\n          name: to\n          schema:\n            type: string\n            format: date-time\n          description: The end date\n      responses:\n        '200':\n          description: Request successful\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/responses/Ok/content/application~1json/schema'\n        '401':\n          description: Unauthorized operation\n          content:\n            application/json:\n              examples:\n                No-Authorization-Header:\n                  value:\n                    status: false\n                    message: No Authorization Header was found\n                Bad-Authorization-Header:\n                  value:\n                    status: false\n                    message: 'Format is Authorization Bearer [secret key]'\n                Invalid-Key:\n                  value:\n                    status: false\n                    message: Invalid key\n              schema:\n                type: object\n                properties:\n                  status:\n                    type: boolean\n                  message:\n                    type: string\n        '404':\n          $ref: '#/paths/~1page/get/responses/401'\n        default:\n          description: Server error\n  '/page/{id}':\n    parameters:\n      - name: id\n        in: path\n        required: true\n        schema:\n          type: string\n    get:\n      tags:\n        - Page\n      summary: Fetch Page\n      operationId: page_fetch\n      responses:\n        '200':\n          $ref: '#/paths/~1page/get/responses/200'\n        '401':\n          $ref: '#/paths/~1page/get/responses/401'\n        '404':\n          $ref: '#/paths/~1page/get/responses/401'\n        default:\n          description: Server error\n    put:\n      tags:\n        - Page\n      summary: Update Page\n      operationId: page_update\n      requestBody:\n        content:\n          application/x-www-form-urlencoded:\n            schema:\n              $ref: '#/paths/~1page~1%7Bid%7D/put/requestBody/content/application~1json/schema'\n          application/json:\n            schema:\n              type: object\n              properties:\n                name:\n                  description: Name of page\n                  type: string\n                description:\n                  description: The description of the page\n                  type: string\n                amount:\n                  description: 'Amount should be in kobo if currency is NGN, pesewas, if currency is GHS, and cents, if currency is ZAR'\n                  type: integer\n                active:\n                  description: Set to false to deactivate page url\n                  type: boolean\n      responses:\n        '200':\n          $ref: '#/paths/~1page/get/responses/200'\n        '401':\n          $ref: '#/paths/~1page/get/responses/401'\n        '404':\n          $ref: '#/paths/~1page/get/responses/401'\n        default:\n          description: Server error\n  '/page/check_slug_availability/{slug}':\n    parameters:\n      - name: slug\n        in: path\n        required: true\n        schema:\n          type: string\n    get:\n      tags:\n        - Page\n      summary: Check Slug Availability\n      operationId: page_checkSlugAvailability\n      responses:\n        '200':\n          $ref: '#/paths/~1page/get/responses/200'\n        '401':\n          $ref: '#/paths/~1page/get/responses/401'\n        '404':\n          $ref: '#/paths/~1page/get/responses/401'\n        default:\n          description: Server error\n  '/page/{id}/product':\n    parameters:\n      - name: id\n        in: path\n        required: true\n        schema:\n          type: string\n    post:\n      tags:\n        - Page\n      summary: Add Products\n      operationId: page_addProducts\n      requestBody:\n        content:\n          application/x-www-form-urlencoded:\n            schema:\n              $ref: '#/paths/~1page~1%7Bid%7D~1product/post/requestBody/content/application~1json/schema'\n          application/json:\n            schema:\n              type: object\n              required:\n                - product\n              properties:\n                product:\n                  description: IDs of all products to add to a page\n                  type: array\n                  items:\n                    type: string\n      responses:\n        '200':\n          $ref: '#/paths/~1page/get/responses/200'\n        '401':\n          $ref: '#/paths/~1page/get/responses/401'\n        default:\n          description: Server error\n  /paymentrequest:\n    post:\n      tags:\n        - Payment Request\n      summary: Create Payment Request\n      operationId: paymentRequest_create\n      requestBody:\n        content:\n          application/x-www-form-urlencoded:\n            schema:\n              $ref: '#/paths/~1paymentrequest/post/requestBody/content/application~1json/schema'\n          application/json:\n            schema:\n              type: object\n              required:\n                - customer\n              properties:\n                customer:\n                  description: Customer id or code\n                  type: string\n                amount:\n                  description: |-\n                    Payment request amount. Only useful if line items and tax values are ignored. \n                    The endpoint will throw a friendly warning if neither is available.\n                  type: integer\n                currency:\n                  description: 'Specify the currency of the invoice. Allowed values are NGN, GHS, ZAR and USD. Defaults to NGN'\n                  type: string\n                due_date:\n                  description: ISO 8601 representation of request due date\n                  type: string\n                  format: date-time\n                description:\n                  description: A short description of the payment request\n                  type: string\n                line_items:\n                  description: Array of line items\n                  type: array\n                  items:\n                    type: object\n                tax:\n                  description: Array of taxes\n                  type: array\n                  items:\n                    type: object\n                send_notification:\n                  description: Indicates whether Paystack sends an email notification to customer. Defaults to true\n                  type: boolean\n                  items:\n                    type: object\n                draft:\n                  description: Indicate if request should be saved as draft. Defaults to false and overrides send_notification\n                  type: boolean\n                  items:\n                    type: object\n                has_invoice:\n                  description: |-\n                    Set to true to create a draft invoice (adds an auto incrementing invoice number if none is provided) \n                    even if there are no line_items or tax passed\n                  type: boolean\n                  items:\n                    type: object\n                invoice_number:\n                  description: |-\n                    Numeric value of invoice. Invoice will start from 1 and auto increment from there. This field is to help \n                    override whatever value Paystack decides. Auto increment for subsequent invoices continue from this point.\n                  type: integer\n                split_code:\n                  description: The split code of the transaction split.\n                  type: string\n      responses:\n        '201':\n          $ref: '#/paths/~1product/post/responses/201'\n        '401':\n          $ref: '#/paths/~1page/get/responses/401'\n        default:\n          description: Server error\n    get:\n      tags:\n        - Payment Request\n      summary: List Payment Request\n      operationId: paymentRequest_list\n      parameters:\n        - in: query\n          name: perPage\n          schema:\n            type: integer\n          description: Number of records to fetch per page\n        - in: query\n          name: page\n          schema:\n            type: integer\n          description: The section to retrieve\n        - in: query\n          name: customer\n          schema:\n            type: string\n          description: Customer ID\n        - in: query\n          name: status\n          schema:\n            type: string\n          description: Invoice status to filter\n        - in: query\n          name: currency\n          schema:\n            type: string\n          description: 'If your integration supports more than one currency, choose the one to filter'\n        - in: query\n          name: from\n          schema:\n            type: string\n            format: date-time\n          description: The start date\n        - in: query\n          name: to\n          schema:\n            type: string\n            format: date-time\n          description: The end date\n      responses:\n        '200':\n          $ref: '#/paths/~1page/get/responses/200'\n        '401':\n          $ref: '#/paths/~1page/get/responses/401'\n        '404':\n          $ref: '#/paths/~1page/get/responses/401'\n        default:\n          description: Server error\n  '/paymentrequest/{id}':\n    parameters:\n      - name: id\n        in: path\n        required: true\n        schema:\n          type: string\n    get:\n      tags:\n        - Payment Request\n      summary: Fetch Payment Request\n      operationId: paymentRequest_fetch\n      responses:\n        '200':\n          $ref: '#/paths/~1page/get/responses/200'\n        '401':\n          $ref: '#/paths/~1page/get/responses/401'\n        '404':\n          $ref: '#/paths/~1page/get/responses/401'\n        default:\n          description: Server error\n    put:\n      tags:\n        - Payment Request\n      summary: Update Payment Request\n      operationId: paymentRequest_update\n      requestBody:\n        content:\n          application/x-www-form-urlencoded:\n            schema:\n              $ref: '#/paths/~1paymentrequest~1%7Bid%7D/put/requestBody/content/application~1json/schema'\n          application/json:\n            schema:\n              type: object\n              properties:\n                customer:\n                  description: Customer id or code\n                  type: string\n                amount:\n                  description: |-\n                    Payment request amount. Only useful if line items and tax values are ignored. \n                    The endpoint will throw a friendly warning if neither is available.\n                  type: integer\n                currency:\n                  description: 'Specify the currency of the invoice. Allowed values are NGN, GHS, ZAR and USD. Defaults to NGN'\n                  type: string\n                due_date:\n                  description: ISO 8601 representation of request due date\n                  type: string\n                  format: date-time\n                description:\n                  description: A short description of the payment request\n                  type: string\n                line_items:\n                  description: Array of line items\n                  type: array\n                  items:\n                    type: object\n                tax:\n                  description: Array of taxes\n                  type: array\n                  items:\n                    type: object\n                send_notification:\n                  description: Indicates whether Paystack sends an email notification to customer. Defaults to true\n                  type: boolean\n                  items:\n                    type: object\n                draft:\n                  description: Indicate if request should be saved as draft. Defaults to false and overrides send_notification\n                  type: boolean\n                  items:\n                    type: object\n                has_invoice:\n                  description: |-\n                    Set to true to create a draft invoice (adds an auto incrementing invoice number if none is provided) \n                    even if there are no line_items or tax passed\n                  type: boolean\n                  items:\n                    type: object\n                invoice_number:\n                  description: |-\n                    Numeric value of invoice. Invoice will start from 1 and auto increment from there. This field is to help \n                    override whatever value Paystack decides. Auto increment for subsequent invoices continue from this point.\n                  type: integer\n                split_code:\n                  description: The split code of the transaction split.\n                  type: string\n      responses:\n        '200':\n          $ref: '#/paths/~1page/get/responses/200'\n        '401':\n          $ref: '#/paths/~1page/get/responses/401'\n        '404':\n          $ref: '#/paths/~1page/get/responses/401'\n        default:\n          description: Server error\n  '/paymentrequest/verify/{id}':\n    parameters:\n      - name: id\n        in: path\n        required: true\n        schema:\n          type: string\n    get:\n      tags:\n        - Payment Request\n      summary: Verify Payment Request\n      operationId: paymentRequest_verify\n      responses:\n        '200':\n          $ref: '#/paths/~1page/get/responses/200'\n        '401':\n          $ref: '#/paths/~1page/get/responses/401'\n        '404':\n          $ref: '#/paths/~1page/get/responses/401'\n        default:\n          description: Server error\n  '/paymentrequest/notify/{id}':\n    parameters:\n      - name: id\n        in: path\n        required: true\n        schema:\n          type: string\n    post:\n      tags:\n        - Payment Request\n      summary: Send Notification\n      operationId: paymentRequest_notify\n      responses:\n        '200':\n          $ref: '#/paths/~1page/get/responses/200'\n        '401':\n          $ref: '#/paths/~1page/get/responses/401'\n        default:\n          description: Server error\n  /paymentrequest/totals:\n    get:\n      tags:\n        - Payment Request\n      summary: Payment Request Total\n      operationId: paymentRequest_totals\n      responses:\n        '200':\n          $ref: '#/paths/~1page/get/responses/200'\n        '401':\n          $ref: '#/paths/~1page/get/responses/401'\n        '404':\n          $ref: '#/paths/~1page/get/responses/401'\n        default:\n          description: Server error\n  '/paymentrequest/finalize/{id}':\n    parameters:\n      - name: id\n        in: path\n        required: true\n        schema:\n          type: string\n    post:\n      tags:\n        - Payment Request\n      summary: Finalize Payment Request\n      operationId: paymentRequest_finalize\n      responses:\n        '200':\n          $ref: '#/paths/~1page/get/responses/200'\n        '401':\n          $ref: '#/paths/~1page/get/responses/401'\n        default:\n          description: Server error\n  '/paymentrequest/archive/{id}':\n    parameters:\n      - name: id\n        in: path\n        required: true\n        schema:\n          type: string\n    post:\n      tags:\n        - Payment Request\n      summary: Archive Payment Request\n      operationId: paymentRequest_archive\n      responses:\n        '200':\n          $ref: '#/paths/~1page/get/responses/200'\n        '401':\n          $ref: '#/paths/~1page/get/responses/401'\n        default:\n          description: Server error\n  /settlement:\n    get:\n      tags:\n        - Settlement\n      summary: Fetch Settlements\n      operationId: settlements_fetch\n      parameters:\n        - name: perPage\n          in: query\n          schema:\n            type: integer\n          example: 50\n        - name: page\n          in: query\n          schema:\n            type: integer\n          example: 2\n      responses:\n        '200':\n          $ref: '#/paths/~1product/post/responses/201'\n        '401':\n          $ref: '#/paths/~1page/get/responses/401'\n        '404':\n          $ref: '#/paths/~1page/get/responses/401'\n        default:\n          description: Server error\n  '/settlement/{id}/transaction':\n    parameters:\n      - name: id\n        in: path\n        required: true\n        schema:\n          type: integer\n    get:\n      tags:\n        - Settlement\n      summary: Settlement Transactions\n      operationId: settlements_transaction\n      parameters:\n        - name: perPage\n          in: query\n          schema:\n            type: integer\n          example: 50\n        - name: page\n          in: query\n          schema:\n            type: integer\n          example: 2\n      responses:\n        '200':\n          $ref: '#/paths/~1product/post/responses/201'\n        '401':\n          $ref: '#/paths/~1page/get/responses/401'\n        '404':\n          $ref: '#/paths/~1page/get/responses/401'\n        default:\n          description: Server error\n  /transferrecipient:\n    post:\n      tags:\n        - Transfer Recipient\n      summary: Create Transfer Recipient\n      operationId: transferrecipient_create\n      requestBody:\n        content:\n          application/x-www-form-urlencoded:\n            schema:\n              $ref: '#/paths/~1transferrecipient/post/requestBody/content/application~1json/schema'\n          application/json:\n            schema:\n              type: object\n              required:\n                - type\n                - name\n                - account_number\n                - bank_code\n              properties:\n                type:\n                  description: 'Recipient Type - nuban for NGN, mobile_money for MOMO in GHS, basa for ZAR and authorization for all.'\n                  type: string\n                  enum:\n                    - nuban\n                    - mobile_money\n                    - basa\n                    - authorization\n                name:\n                  description: Recipient's name\n                  type: string\n                  example: Ada Lovelace\n                account_number:\n                  description: Recipient's bank account number\n                  type: string\n                  example: '0000000000'\n                bank_code:\n                  description: Recipient's bank code. You can get the list of Bank Codes by calling the List Banks endpoint\n                  type: string\n                  example: '011'\n                description:\n                  description: A description for this recipient\n                  type: string\n                  example: Keeps our servers running\n                currency:\n                  description: Currency for the account receiving the transfer\n                  type: string\n                  enum:\n                    - NGN\n                    - GHS\n                    - ZAR\n                authorization_code:\n                  description: An authorization code from a previous transaction\n                  type: string\n                  example: AUTH_CODE\n                metadata:\n                  description: Stringified JSON object of custom data\n                  type: string\n                  example: |\n                    {referrer_id: 123}\n      responses:\n        '201':\n          description: Transfer Recipient Created\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/responses/Ok/content/application~1json/schema'\n              examples:\n                Create Customer:\n                  $ref: '#/paths/~1product/post/responses/201/content/application~1json/examples/Create%20Transfer%20Recipient'\n        '401':\n          $ref: '#/paths/~1page/get/responses/401'\n        default:\n          description: Server error\n    get:\n      tags:\n        - Transfer Recipient\n      summary: List Transfer Recipients\n      operationId: transferrecipient_list\n      parameters:\n        - in: query\n          name: perPage\n          schema:\n            type: integer\n          description: Number of records to fetch per page\n        - in: query\n          name: page\n          schema:\n            type: integer\n          description: The section to retrieve\n        - in: query\n          name: from\n          schema:\n            type: string\n            format: date-time\n          description: The start date\n        - in: query\n          name: to\n          schema:\n            type: string\n            format: date-time\n          description: The end date\n      responses:\n        '200':\n          $ref: '#/paths/~1page/get/responses/200'\n        '401':\n          $ref: '#/paths/~1page/get/responses/401'\n        '404':\n          $ref: '#/paths/~1page/get/responses/401'\n        default:\n          description: Server error\n  /transferrecipient/bulk:\n    post:\n      tags:\n        - Transfer Recipient\n      summary: Bulk Create Transfer Recipient\n      operationId: transferrecipient_bulk\n      requestBody:\n        content:\n          application/x-www-form-urlencoded:\n            schema:\n              $ref: '#/paths/~1transferrecipient~1bulk/post/requestBody/content/application~1json/schema'\n          application/json:\n            schema:\n              type: object\n              required:\n                - batch\n              properties:\n                batch:\n                  description: |-\n                    A list of transfer recipient object. Each object should contain type, name, and bank_code. \n                    Any Create Transfer Recipient param can also be passed.\n                  type: array\n                  items:\n                    $ref: '#/paths/~1transferrecipient/post/requestBody/content/application~1json/schema'\n      responses:\n        '200':\n          $ref: '#/paths/~1page/get/responses/200'\n        '401':\n          $ref: '#/paths/~1page/get/responses/401'\n        default:\n          description: Server error\n  '/transferrecipient/{code}':\n    parameters:\n      - name: code\n        description: Transfer recipient code\n        in: path\n        required: true\n        schema:\n          type: string\n    get:\n      tags:\n        - Transfer Recipient\n      summary: Fetch Transfer recipient\n      operationId: transferrecipient_fetch\n      responses:\n        '200':\n          $ref: '#/paths/~1page/get/responses/200'\n        '401':\n          $ref: '#/paths/~1page/get/responses/401'\n        '404':\n          $ref: '#/paths/~1page/get/responses/401'\n        default:\n          description: Server error\n    put:\n      tags:\n        - Transfer Recipient\n      summary: Update Transfer recipient\n      requestBody:\n        content:\n          application/x-www-form-urlencoded:\n            schema:\n              $ref: '#/paths/~1transferrecipient~1%7Bcode%7D/put/requestBody/content/application~1json/schema'\n          application/json:\n            schema:\n              type: object\n              required:\n                - batch\n              properties:\n                name:\n                  description: Recipient's name\n                  type: string\n                email:\n                  description: Recipient's email address\n                  type: string\n      responses:\n        '200':\n          $ref: '#/paths/~1page/get/responses/200'\n        '401':\n          $ref: '#/paths/~1page/get/responses/401'\n        '404':\n          $ref: '#/paths/~1page/get/responses/401'\n        default:\n          description: Server error\n    delete:\n      tags:\n        - Transfer Recipient\n      summary: Delete Transfer Recipient\n      responses:\n        '200':\n          $ref: '#/paths/~1page/get/responses/200'\n        '401':\n          $ref: '#/paths/~1page/get/responses/401'\n        '404':\n          $ref: '#/paths/~1page/get/responses/401'\n        default:\n          description: Server error\n  /transfer:\n    post:\n      tags:\n        - Transfer\n      summary: Initiate Transfer\n      operationId: transfer_initiate\n      requestBody:\n        content:\n          application/x-www-form-urlencoded:\n            schema:\n              $ref: '#/paths/~1transfer/post/requestBody/content/application~1json/schema'\n          application/json:\n            schema:\n              type: object\n              required:\n                - source\n                - amount\n                - recipient\n              properties:\n                source:\n                  description: Where should we transfer from? Only balance is allowed for now\n                  type: string\n                  example: balance\n                amount:\n                  description: Amount to transfer in kobo if currency is NGN. pesewas if currency is GHS and cents for ZAR.\n                  type: integer\n                  example: 10234\n                recipient:\n                  description: The transfer recipient's code\n                  type: string\n                  example: RCP_CODE\n                reason:\n                  description: The reason or narration for the transfer.\n                  type: string\n                  example: Good job\n                currency:\n                  description: Specify the currency of the transfer. Defaults to NGN.\n                  type: string\n                reference:\n                  description: |-\n                    If specified, the field should be a unique identifier (in lowercase) for the object. \n                    Only -,_ and alphanumeric characters are allowed.\n                  type: string\n                  example: Transfer-123_unique\n      responses:\n        '200':\n          $ref: '#/paths/~1transfer~1bulk/post/responses/200'\n        '401':\n          $ref: '#/paths/~1page/get/responses/401'\n        default:\n          description: Server error\n    get:\n      tags:\n        - Transfer\n      summary: List Transfers\n      operationId: transfer_list\n      parameters:\n        - in: query\n          name: perPage\n          schema:\n            type: integer\n          description: Number of records to fetch per page\n        - in: query\n          name: page\n          schema:\n            type: integer\n          description: The section to retrieve\n        - in: query\n          name: status\n          schema:\n            type: string\n        - in: query\n          name: from\n          schema:\n            type: string\n            format: date-time\n          description: The start date\n        - in: query\n          name: to\n          schema:\n            type: string\n            format: date-time\n          description: The end date\n      responses:\n        '200':\n          $ref: '#/paths/~1page/get/responses/200'\n        '401':\n          $ref: '#/paths/~1page/get/responses/401'\n        '404':\n          $ref: '#/paths/~1page/get/responses/401'\n        default:\n          description: Server error\n  /transfer/finalize_transfer:\n    post:\n      tags:\n        - Transfer\n      summary: Finalize Transfer\n      operationId: transfer_finalize\n      requestBody:\n        content:\n          application/x-www-form-urlencoded:\n            schema:\n              $ref: '#/paths/~1transfer~1finalize_transfer/post/requestBody/content/application~1json/schema'\n          application/json:\n            schema:\n              type: object\n              required:\n                - transfer_code\n                - otp\n              properties:\n                transfer_code:\n                  description: The transfer code you want to finalize\n                  type: string\n                  example: TRF_CODE\n                otp:\n                  description: OTP sent to business phone to verify transfer\n                  type: integer\n                  example: 123456\n      responses:\n        '200':\n          $ref: '#/paths/~1page/get/responses/200'\n        '401':\n          $ref: '#/paths/~1page/get/responses/401'\n        default:\n          description: Server error\n  /transfer/bulk:\n    post:\n      tags:\n        - Transfer\n      summary: Initiate Bulk Transfer\n      operationId: transfer_bulk\n      requestBody:\n        content:\n          application/x-www-form-urlencoded:\n            schema:\n              $ref: '#/paths/~1transfer~1bulk/post/requestBody/content/application~1json/schema'\n          application/json:\n            schema:\n              type: object\n              required:\n                - batch\n              properties:\n                source:\n                  description: Where should we transfer from? Only balance is allowed for now\n                  type: string\n                transfers:\n                  description: 'A list of transfer object. Each object should contain amount, recipient, and reference'\n                  type: array\n                  items:\n                    $ref: '#/paths/~1transfer/post/requestBody/content/application~1json/schema'\n      responses:\n        '200':\n          description: Request successful\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/responses/Ok/content/application~1json/schema'\n              examples:\n                Initiate Transfer:\n                  value:\n                    status: true\n                    message: Transfer has been queued\n                    data:\n                      reference: on5hyz9poe\n                      integration: 428626\n                      domain: test\n                      amount: 3794800\n                      currency: NGN\n                      source: balance\n                      reason: Holiday Flexing\n                      recipient: 6788170\n                      status: success\n                      transfer_code: TRF_fiyxvgkh71e717b\n                      id: 23070321\n                      createdAt: 2020-05-13T14:22:49.687Z\n                      updatedAt: 2020-05-13T14:22:49.687Z\n        '401':\n          $ref: '#/paths/~1page/get/responses/401'\n        default:\n          description: Server error\n  '/transfer/{code}':\n    parameters:\n      - name: code\n        description: Transfer code\n        in: path\n        required: true\n        schema:\n          type: string\n    get:\n      tags:\n        - Transfer\n      summary: Fetch Transfer\n      operationId: transfer_fetch\n      responses:\n        '200':\n          $ref: '#/paths/~1page/get/responses/200'\n        '401':\n          $ref: '#/paths/~1page/get/responses/401'\n        '404':\n          $ref: '#/paths/~1page/get/responses/401'\n        default:\n          description: Server error\n  '/transfer/verify/{reference}':\n    parameters:\n      - name: reference\n        in: path\n        required: true\n        schema:\n          type: string\n    get:\n      tags:\n        - Transfer\n      summary: Verify Transfer\n      operationId: transfer_verify\n      responses:\n        '200':\n          $ref: '#/paths/~1page/get/responses/200'\n        '401':\n          $ref: '#/paths/~1page/get/responses/401'\n        '404':\n          $ref: '#/paths/~1page/get/responses/401'\n        default:\n          description: Server error\n  /transfer/export:\n    get:\n      tags:\n        - Transfer\n      summary: Export Transfers\n      operationId: transfer_download\n      parameters:\n        - in: query\n          name: perPage\n          schema:\n            type: integer\n          description: Number of records to fetch per page\n        - in: query\n          name: page\n          schema:\n            type: integer\n          description: The section to retrieve\n        - in: query\n          name: status\n          schema:\n            type: string\n        - in: query\n          name: from\n          schema:\n            type: string\n            format: date-time\n          description: The start date\n        - in: query\n          name: to\n          schema:\n            type: string\n            format: date-time\n          description: The end date\n      responses:\n        '200':\n          $ref: '#/paths/~1page/get/responses/200'\n        '401':\n          $ref: '#/paths/~1page/get/responses/401'\n        '404':\n          $ref: '#/paths/~1page/get/responses/401'\n        default:\n          description: Server error\n  /transfer/resend_otp:\n    post:\n      tags:\n        - Transfer\n      summary: Resend OTP for Transfer\n      operationId: transfer_resendOtp\n      requestBody:\n        content:\n          application/x-www-form-urlencoded:\n            schema:\n              $ref: '#/paths/~1transfer~1resend_otp/post/requestBody/content/application~1json/schema'\n          application/json:\n            schema:\n              type: object\n              required:\n                - transfer_code\n                - reason\n              properties:\n                transfer_code:\n                  description: The transfer code that requires an OTP validation\n                  type: string\n                reason:\n                  description: Either resend_otp or transfer\n                  type: string\n      responses:\n        '200':\n          $ref: '#/paths/~1page/get/responses/200'\n        '401':\n          $ref: '#/paths/~1page/get/responses/401'\n        default:\n          description: Server error\n  /transfer/disable_otp:\n    post:\n      tags:\n        - Transfer\n      summary: Disable OTP requirement for Transfers\n      operationId: transfer_disableOtp\n      responses:\n        '200':\n          $ref: '#/paths/~1page/get/responses/200'\n        '401':\n          $ref: '#/paths/~1page/get/responses/401'\n        default:\n          description: Server error\n  /transfer/disable_otp_finalize:\n    post:\n      tags:\n        - Transfer\n      summary: Finalize Disabling of OTP requirement for Transfers\n      operationId: transfer_disableOtpFinalize\n      requestBody:\n        content:\n          application/x-www-form-urlencoded:\n            schema:\n              $ref: '#/paths/~1transfer~1disable_otp_finalize/post/requestBody/content/application~1json/schema'\n          application/json:\n            schema:\n              type: object\n              required:\n                - otp\n              properties:\n                otp:\n                  description: OTP sent to business phone to verify disabling OTP requirement\n                  type: string\n                  example: '123456'\n      responses:\n        '200':\n          $ref: '#/paths/~1page/get/responses/200'\n        '401':\n          $ref: '#/paths/~1page/get/responses/401'\n        default:\n          description: Server error\n  /transfer/enable_otp:\n    post:\n      tags:\n        - Transfer\n      summary: Enable OTP requirement for Transfers\n      operationId: transfer_enableOtp\n      responses:\n        '200':\n          $ref: '#/paths/~1page/get/responses/200'\n        '401':\n          $ref: '#/paths/~1page/get/responses/401'\n        default:\n          description: Server error\n  /balance:\n    get:\n      tags:\n        - Balance\n      summary: Fetch Balance\n      operationId: balance_fetch\n      description: Check your Paystack account balance\n      responses:\n        '200':\n          $ref: '#/paths/~1page/get/responses/200'\n        '401':\n          $ref: '#/paths/~1page/get/responses/401'\n        '404':\n          $ref: '#/paths/~1page/get/responses/401'\n        default:\n          description: Server error\n  /balance/ledger:\n    get:\n      tags:\n        - Balance\n      summary: Balance Ledger\n      operationId: balance_ledger\n      parameters:\n        - in: query\n          name: perPage\n          schema:\n            type: integer\n          description: Number of records to fetch per page\n        - in: query\n          name: page\n          schema:\n            type: integer\n          description: The section to retrieve\n        - in: query\n          name: from\n          schema:\n            type: string\n            format: date-time\n          description: The start date\n        - in: query\n          name: to\n          schema:\n            type: string\n            format: date-time\n          description: The end date\n      responses:\n        '200':\n          $ref: '#/paths/~1page/get/responses/200'\n        '401':\n          $ref: '#/paths/~1page/get/responses/401'\n        '404':\n          $ref: '#/paths/~1page/get/responses/401'\n        default:\n          description: Server error\n  /charge:\n    post:\n      tags:\n        - Charge\n      summary: Create Charge\n      operationId: charge_create\n      requestBody:\n        content:\n          application/x-www-form-urlencoded:\n            schema:\n              $ref: '#/paths/~1charge/post/requestBody/content/application~1json/schema'\n          application/json:\n            schema:\n              allOf:\n                - type: object\n                  required:\n                    - email\n                    - amount\n                  properties:\n                    email:\n                      description: Customer's email address\n                      type: string\n                    amount:\n                      description: 'Amount should be in kobo if currency is NGN, pesewas, if currency is GHS, and cents, if currency is ZAR'\n                      type: string\n                    authorization_code:\n                      description: An authorization code to charge.\n                      type: string\n                    pin:\n                      description: 4-digit PIN (send with a non-reusable authorization code)\n                      type: string\n                    reference:\n                      description: 'Unique transaction reference. Only -, .`, = and alphanumeric characters allowed.'\n                      type: string\n                    birthday:\n                      description: The customer's birthday in the format YYYY-MM-DD e.g 2017-05-16\n                      type: string\n                      format: date-time\n                    device_id:\n                      description: |-\n                        This is the unique identifier of the device a user uses in making payment. \n                        Only -, .`, = and alphanumeric characters are allowed.\n                      type: string\n                    metadata:\n                      description: Stringified JSON object of custom data\n                      type: string\n                - type: object\n                  properties:\n                    bank:\n                      type: object\n                      properties:\n                        code:\n                          description: Customer's bank code\n                          type: string\n                        account_number:\n                          description: Customer's account number\n                          type: string\n                - type: object\n                  properties:\n                    mobile_money:\n                      type: object\n                      properties:\n                        phone:\n                          description: Customer's phone number\n                          type: string\n                        provider:\n                          description: |\n                            The telco provider of customer's phone number. \n                            This can be fetched from the List Bank endpoint\n                          type: string\n                - type: object\n                  properties:\n                    ussd:\n                      type: object\n                      properties:\n                        type:\n                          description: The three-digit USSD code\n                          type: string\n                          enum:\n                            - 737\n                            - 919\n                            - 822\n                            - 966\n                - type: object\n                  properties:\n                    eft:\n                      type: object\n                      properties:\n                        provider:\n                          description: The EFT provider\n                          type: string\n                          enum:\n                            - ozow\n      responses:\n        '200':\n          $ref: '#/paths/~1page/get/responses/200'\n        '401':\n          $ref: '#/paths/~1page/get/responses/401'\n        default:\n          description: Server error\n  /charge/submit_pin:\n    post:\n      tags:\n        - Charge\n      summary: Submit PIN\n      operationId: charge_submitPin\n      requestBody:\n        content:\n          application/x-www-form-urlencoded:\n            schema:\n              $ref: '#/paths/~1charge~1submit_pin/post/requestBody/content/application~1json/schema'\n          application/json:\n            schema:\n              type: object\n              required:\n                - pin\n                - reference\n              properties:\n                pin:\n                  description: Customer's PIN\n                  type: string\n                reference:\n                  description: Transaction reference that requires the PIN\n                  type: string\n      responses:\n        '200':\n          $ref: '#/paths/~1page/get/responses/200'\n        '401':\n          $ref: '#/paths/~1page/get/responses/401'\n        default:\n          description: Server error\n  /charge/submit_otp:\n    post:\n      tags:\n        - Charge\n      summary: Submit OTP\n      operationId: charge_submitOtp\n      requestBody:\n        content:\n          application/x-www-form-urlencoded:\n            schema:\n              $ref: '#/paths/~1charge~1submit_otp/post/requestBody/content/application~1json/schema'\n          application/json:\n            schema:\n              type: object\n              required:\n                - otp\n                - reference\n              properties:\n                otp:\n                  description: Customer's OTP\n                  type: string\n                reference:\n                  description: The reference of the ongoing transaction\n                  type: string\n      responses:\n        '200':\n          $ref: '#/paths/~1page/get/responses/200'\n        '401':\n          $ref: '#/paths/~1page/get/responses/401'\n        default:\n          description: Server error\n  /charge/submit_phone:\n    post:\n      tags:\n        - Charge\n      summary: Submit Phone\n      operationId: charge_submitPhone\n      requestBody:\n        content:\n          application/x-www-form-urlencoded:\n            schema:\n              $ref: '#/paths/~1charge~1submit_phone/post/requestBody/content/application~1json/schema'\n          application/json:\n            schema:\n              type: object\n              required:\n                - phone\n                - reference\n              properties:\n                phone:\n                  description: Customer's mobile number\n                  type: string\n                reference:\n                  description: The reference of the ongoing transaction\n                  type: string\n      responses:\n        '200':\n          $ref: '#/paths/~1page/get/responses/200'\n        '401':\n          $ref: '#/paths/~1page/get/responses/401'\n        default:\n          description: Server error\n  /charge/submit_birthday:\n    post:\n      tags:\n        - Charge\n      summary: Submit Birthday\n      operationId: charge_submitBirthday\n      requestBody:\n        content:\n          application/x-www-form-urlencoded:\n            schema:\n              $ref: '#/paths/~1charge~1submit_birthday/post/requestBody/content/application~1json/schema'\n          application/json:\n            schema:\n              type: object\n              required:\n                - birthday\n                - reference\n              properties:\n                birthday:\n                  description: Customer's birthday in the format YYYY-MM-DD e.g 2016-09-21\n                  type: string\n                reference:\n                  description: The reference of the ongoing transaction\n                  type: string\n      responses:\n        '200':\n          $ref: '#/paths/~1page/get/responses/200'\n        '401':\n          $ref: '#/paths/~1page/get/responses/401'\n        default:\n          description: Server error\n  /charge/submit_address:\n    post:\n      tags:\n        - Charge\n      summary: Submit Address\n      operationId: charge_submitAddress\n      requestBody:\n        content:\n          application/x-www-form-urlencoded:\n            schema:\n              $ref: '#/paths/~1charge~1submit_address/post/requestBody/content/application~1json/schema'\n          application/json:\n            schema:\n              type: object\n              required:\n                - address\n                - reference\n                - city\n                - state\n                - zipcode\n              properties:\n                address:\n                  description: Customer's address\n                  type: string\n                city:\n                  description: Customer's city\n                  type: string\n                state:\n                  description: Customer's state\n                  type: string\n                zipcode:\n                  description: Customer's zipcode\n                  type: string\n                reference:\n                  description: The reference of the ongoing transaction\n                  type: string\n      responses:\n        '200':\n          $ref: '#/paths/~1page/get/responses/200'\n        '401':\n          $ref: '#/paths/~1page/get/responses/401'\n        default:\n          description: Server error\n  '/charge/{reference}':\n    get:\n      tags:\n        - Charge\n      summary: Check pending charge\n      operationId: charge_check\n      parameters:\n        - name: reference\n          in: path\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          $ref: '#/paths/~1page/get/responses/200'\n        '401':\n          $ref: '#/paths/~1page/get/responses/401'\n        '404':\n          $ref: '#/paths/~1page/get/responses/401'\n        default:\n          description: Server error\n  /bulkcharge:\n    post:\n      tags:\n        - Bulk Charge\n      summary: Initiate Bulk Charge\n      operationId: bulkCharge_initiate\n      requestBody:\n        content:\n          application/x-www-form-urlencoded:\n            schema:\n              type: array\n              items:\n                type: object\n                required:\n                  - authorization\n                  - amount\n                properties:\n                  authorization:\n                    description: Customer's card authorization code\n                    type: string\n                  amount:\n                    description: Amount to charge on the authorization\n                    type: string\n                  reference:\n                    description: 'Unique transaction reference. Only -, ., = and alphanumeric characters allowed.'\n                    type: string\n          application/json:\n            schema:\n              type: array\n              items:\n                properties:\n                  charges:\n                    title: charges\n                    type: object\n                    items:\n                      $ref: '#/paths/~1bulkcharge/post/requestBody/content/application~1x-www-form-urlencoded/schema/items'\n      responses:\n        '200':\n          $ref: '#/paths/~1page/get/responses/200'\n        '401':\n          $ref: '#/paths/~1page/get/responses/401'\n        default:\n          description: Server error\n    get:\n      tags:\n        - Bulk Charge\n      summary: List Bulk Charge Batches\n      operationId: bulkCharge_list\n      parameters:\n        - in: query\n          name: perPage\n          schema:\n            type: integer\n          description: Number of records to fetch per page\n        - in: query\n          name: page\n          schema:\n            type: integer\n          description: The section to retrieve\n        - in: query\n          name: from\n          schema:\n            type: string\n            format: date-time\n          description: The start date\n        - in: query\n          name: to\n          schema:\n            type: string\n            format: date-time\n          description: The end date\n      responses:\n        '200':\n          $ref: '#/paths/~1page/get/responses/200'\n        '401':\n          $ref: '#/paths/~1page/get/responses/401'\n        '404':\n          $ref: '#/paths/~1page/get/responses/401'\n        default:\n          description: Server error\n  '/bulkcharge/{code}':\n    parameters:\n      - name: code\n        description: Batch code\n        in: path\n        required: true\n        schema:\n          type: string\n    get:\n      tags:\n        - Bulk Charge\n      summary: Fetch Bulk Charge Batch\n      operationId: bulkCharge_fetch\n      responses:\n        '200':\n          $ref: '#/paths/~1page/get/responses/200'\n        '401':\n          $ref: '#/paths/~1page/get/responses/401'\n        '404':\n          $ref: '#/paths/~1page/get/responses/401'\n        default:\n          description: Server error\n  '/bulkcharge/{code}/charges':\n    get:\n      tags:\n        - Bulk Charge\n      summary: Fetch Charges in a Batch\n      operationId: bulkCharge_charges\n      parameters:\n        - name: code\n          description: Batch code\n          in: path\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          $ref: '#/paths/~1page/get/responses/200'\n        '401':\n          $ref: '#/paths/~1page/get/responses/401'\n        '404':\n          $ref: '#/paths/~1page/get/responses/401'\n        default:\n          description: Server error\n  '/bulkcharge/pause/{code}':\n    get:\n      tags:\n        - Bulk Charge\n      summary: Pause Bulk Charge Batch\n      operationId: bulkCharge_pause\n      parameters:\n        - name: code\n          description: Batch code\n          in: path\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          $ref: '#/paths/~1page/get/responses/200'\n        '401':\n          $ref: '#/paths/~1page/get/responses/401'\n        '404':\n          $ref: '#/paths/~1page/get/responses/401'\n        default:\n          description: Server error\n  '/bulkcharge/resume/{code}':\n    get:\n      tags:\n        - Bulk Charge\n      summary: Resume Bulk Charge Batch\n      operationId: bulkCharge_resume\n      parameters:\n        - name: code\n          description: Batch code\n          in: path\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          $ref: '#/paths/~1page/get/responses/200'\n        '401':\n          $ref: '#/paths/~1page/get/responses/401'\n        '404':\n          $ref: '#/paths/~1page/get/responses/401'\n        default:\n          description: Server error\n  /integration/payment_session_timeout:\n    get:\n      tags:\n        - Integration\n      summary: Fetch Payment Session Timeout\n      operationId: integration_fetchPaymentSessionTimeout\n      responses:\n        '200':\n          $ref: '#/paths/~1page/get/responses/200'\n        '401':\n          $ref: '#/paths/~1page/get/responses/401'\n        '404':\n          $ref: '#/paths/~1page/get/responses/401'\n        default:\n          description: Server error\n    put:\n      tags:\n        - Integration\n      summary: Update Payment Session Timeout\n      operationId: integration_updatePaymentSessionTimeout\n      requestBody:\n        content:\n          application/x-www-form-urlencoded:\n            schema:\n              $ref: '#/paths/~1integration~1payment_session_timeout/put/requestBody/content/application~1json/schema'\n          application/json:\n            schema:\n              type: object\n              required:\n                - timeout\n              properties:\n                timeout:\n                  description: Time in seconds before a transaction becomes invalid\n                  type: string\n      responses:\n        '200':\n          $ref: '#/paths/~1page/get/responses/200'\n        '401':\n          $ref: '#/paths/~1page/get/responses/401'\n        '404':\n          $ref: '#/paths/~1page/get/responses/401'\n        default:\n          description: Server error\n  /refund:\n    post:\n      tags:\n        - Refund\n      summary: Create Refund\n      operationId: refund_create\n      requestBody:\n        content:\n          application/x-www-form-urlencoded:\n            schema:\n              $ref: '#/paths/~1refund/post/requestBody/content/application~1json/schema'\n          application/json:\n            schema:\n              type: object\n              required:\n                - transaction\n              properties:\n                transaction:\n                  description: Transaction reference or id\n                  type: string\n                  example: T685312322670591\n                amount:\n                  description: |-\n                    Amount ( in kobo if currency is NGN, pesewas, if currency is GHS, and cents, if currency is ZAR ) to be refunded to the customer. \n                    Amount cannot be more than the original transaction amount\n                  type: integer\n                  example: 10000\n                currency:\n                  description: Three-letter ISO currency\n                  type: string\n                  enum:\n                    - NGN\n                    - GHS\n                    - ZAR\n                    - USD\n                customer_note:\n                  description: Customer reason\n                  type: string\n                  example: Refund for transaction T685312322670591\n                merchant_note:\n                  description: Merchant reason\n                  type: string\n                  example: Refund for transaction T685312322670591 by test@me.com\n      responses:\n        '200':\n          description: Request successful\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/responses/Ok/content/application~1json/schema'\n              examples:\n                Create Refund:\n                  value:\n                    status: true\n                    message: Refund has been queued for processing\n                    data:\n                      transaction:\n                        id: 1004723697\n                        domain: test\n                        reference: T685312322670591\n                        amount: 10000\n                        paid_at: '2021-08-20T18:34:11.000Z'\n                        channel: apple_pay\n                        currency: NGN\n                        authorization:\n                          exp_month: null\n                          exp_year: null\n                          account_name: null\n                        customer:\n                          international_format_phone: null\n                        plan: {}\n                        subaccount:\n                          currency: null\n                        split: {}\n                        order_id: null\n                        paidAt: '2021-08-20T18:34:11.000Z'\n                        pos_transaction_data: null\n                        source: null\n                        fees_breakdown: null\n                      integration: 412829\n                      deducted_amount: 0\n                      channel: null\n                      merchant_note: Refund for transaction T685312322670591 by test@me.com\n                      customer_note: Refund for transaction T685312322670591\n                      status: pending\n                      refunded_by: test@me.com\n                      expected_at: '2021-12-16T09:21:17.016Z'\n                      currency: NGN\n                      domain: live\n                      amount: 10000\n                      fully_deducted: false\n                      id: 3018284\n                      createdAt: '2021-12-07T09:21:17.122Z'\n                      updatedAt: '2021-12-07T09:21:17.122Z'\n        '401':\n          $ref: '#/paths/~1page/get/responses/401'\n        default:\n          description: Server error\n    get:\n      tags:\n        - Refund\n      summary: List Refunds\n      operationId: refund_list\n      parameters:\n        - in: query\n          name: perPage\n          schema:\n            type: integer\n          description: Number of records to fetch per page\n        - in: query\n          name: page\n          schema:\n            type: integer\n          description: The section to retrieve\n        - in: query\n          name: from\n          schema:\n            type: string\n            format: date-time\n          description: The start date\n        - in: query\n          name: to\n          schema:\n            type: string\n            format: date-time\n          description: The end date\n      responses:\n        '200':\n          $ref: '#/paths/~1page/get/responses/200'\n        '401':\n          $ref: '#/paths/~1page/get/responses/401'\n        '404':\n          $ref: '#/paths/~1page/get/responses/401'\n        default:\n          description: Server error\n  '/refund/{id}':\n    get:\n      tags:\n        - Refund\n      summary: Fetch Refund\n      operationId: refund_fetch\n      parameters:\n        - name: id\n          in: path\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          $ref: '#/paths/~1page/get/responses/200'\n        '401':\n          $ref: '#/paths/~1page/get/responses/401'\n        '404':\n          $ref: '#/paths/~1page/get/responses/401'\n        default:\n          description: Server error\n  /dispute:\n    get:\n      tags:\n        - Dispute\n      summary: List Disputes\n      operationId: dispute_list\n      parameters:\n        - in: query\n          name: perPage\n          description: Number of records to fetch per page\n          schema:\n            type: integer\n        - in: query\n          name: page\n          description: The section to retrieve\n          schema:\n            type: integer\n        - in: query\n          name: status\n          description: Dispute Status.\n          schema:\n            type: string\n            enum:\n              - awaiting-merchant-feedback\n              - awaiting-bank-feedback\n              - pending\n              - resolved\n        - in: query\n          name: transaction\n          description: Transaction ID\n          schema:\n            type: string\n        - in: query\n          name: from\n          schema:\n            type: string\n            format: date-time\n          description: The start date\n        - in: query\n          name: to\n          schema:\n            type: string\n            format: date-time\n          description: The end date\n      responses:\n        '200':\n          $ref: '#/paths/~1page/get/responses/200'\n        '401':\n          $ref: '#/paths/~1page/get/responses/401'\n        '404':\n          $ref: '#/paths/~1page/get/responses/401'\n        default:\n          description: Server error\n  '/dispute/{id}':\n    parameters:\n      - name: id\n        description: Dispute ID\n        in: path\n        required: true\n        schema:\n          type: string\n    get:\n      tags:\n        - Dispute\n      summary: Fetch Dispute\n      operationId: dispute_fetch\n      responses:\n        '200':\n          $ref: '#/paths/~1page/get/responses/200'\n        '401':\n          $ref: '#/paths/~1page/get/responses/401'\n        '404':\n          $ref: '#/paths/~1page/get/responses/401'\n        default:\n          description: Server error\n    put:\n      tags:\n        - Dispute\n      summary: Update Dispute\n      operationId: dispute_update\n      requestBody:\n        content:\n          application/x-www-form-urlencoded:\n            schema:\n              $ref: '#/paths/~1dispute~1%7Bid%7D/put/requestBody/content/application~1json/schema'\n          application/json:\n            schema:\n              type: object\n              required:\n                - refund_amount\n              properties:\n                refund_amount:\n                  description: 'The amount to refund, in kobo if currency is NGN, pesewas, if currency is GHS, and cents, if currency is ZAR'\n                  type: string\n                uploaded_filename:\n                  description: Filename of attachment returned via response from the Dispute upload URL\n                  type: string\n      responses:\n        '200':\n          $ref: '#/paths/~1page/get/responses/200'\n        '401':\n          $ref: '#/paths/~1page/get/responses/401'\n        '404':\n          $ref: '#/paths/~1page/get/responses/401'\n        default:\n          description: Server error\n  '/dispute/{id}/upload_url':\n    get:\n      tags:\n        - Dispute\n      summary: Get Upload URL\n      operationId: dispute_uploadUrl\n      parameters:\n        - name: id\n          description: Dispute ID\n          in: path\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          $ref: '#/paths/~1page/get/responses/200'\n        '401':\n          $ref: '#/paths/~1page/get/responses/401'\n        '404':\n          $ref: '#/paths/~1page/get/responses/401'\n        default:\n          description: Server error\n  /dispute/export:\n    get:\n      tags:\n        - Dispute\n      summary: Export Disputes\n      operationId: dispute_download\n      parameters:\n        - in: query\n          name: perPage\n          schema:\n            type: integer\n          description: Number of records to fetch per page\n        - in: query\n          name: page\n          schema:\n            type: integer\n          description: The section to retrieve\n        - in: query\n          name: status\n          schema:\n            type: string\n        - in: query\n          name: from\n          schema:\n            type: string\n            format: date-time\n          description: The start date\n        - in: query\n          name: to\n          schema:\n            type: string\n            format: date-time\n          description: The end date\n      responses:\n        '200':\n          $ref: '#/paths/~1page/get/responses/200'\n        '401':\n          $ref: '#/paths/~1page/get/responses/401'\n        '404':\n          $ref: '#/paths/~1page/get/responses/401'\n        default:\n          description: Server error\n  '/dispute/transaction/{id}':\n    get:\n      tags:\n        - Dispute\n      summary: List Transaction Disputes\n      operationId: dispute_transaction\n      parameters:\n        - name: id\n          description: Transaction ID\n          in: path\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          $ref: '#/paths/~1page/get/responses/200'\n        '401':\n          $ref: '#/paths/~1page/get/responses/401'\n        '404':\n          $ref: '#/paths/~1page/get/responses/401'\n        default:\n          description: Server error\n  '/dispute/{id}/resolve':\n    put:\n      tags:\n        - Dispute\n      summary: Resolve a Dispute\n      operationId: dispute_resolve\n      parameters:\n        - name: id\n          description: Dispute ID\n          in: path\n          required: true\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/x-www-form-urlencoded:\n            schema:\n              $ref: '#/paths/~1dispute~1%7Bid%7D~1resolve/put/requestBody/content/application~1json/schema'\n          application/json:\n            schema:\n              type: object\n              required:\n                - resolution\n                - message\n                - refund_amount\n                - uploaded_filename\n              properties:\n                resolution:\n                  description: Dispute resolution.\n                  type: string\n                  enum:\n                    - merchant-accepted\n                    - declined\n                message:\n                  description: Reason for resolving\n                  type: string\n                refund_amount:\n                  description: 'The amount to refund, in kobo if currency is NGN, pesewas, if currency is GHS, and cents, if currency is ZAR'\n                  type: string\n                uploaded_filename:\n                  description: Filename of attachment returned via response from the Dispute upload URL\n                  type: string\n                evidence:\n                  description: Evidence Id for fraud claims\n                  type: integer\n      responses:\n        '200':\n          $ref: '#/paths/~1page/get/responses/200'\n        '401':\n          $ref: '#/paths/~1page/get/responses/401'\n        '404':\n          $ref: '#/paths/~1page/get/responses/401'\n        default:\n          description: Server error\n  '/dispute/{id}/evidence':\n    post:\n      tags:\n        - Dispute\n      summary: Add Evidence\n      operationId: dispute_evidence\n      requestBody:\n        content:\n          application/x-www-form-urlencoded:\n            schema:\n              $ref: '#/paths/~1dispute~1%7Bid%7D~1evidence/post/requestBody/content/application~1json/schema'\n          application/json:\n            schema:\n              type: object\n              required:\n                - customer_email\n                - customer_name\n                - customer_phone\n                - service_details\n              properties:\n                customer_email:\n                  description: Customer email\n                  type: string\n                customer_name:\n                  description: Customer name\n                  type: string\n                customer_phone:\n                  description: Customer mobile number\n                  type: string\n                service_details:\n                  description: Details of service offered\n                  type: string\n                delivery_address:\n                  description: Delivery address\n                  type: string\n                delivery_date:\n                  description: ISO 8601 representation of delivery date (YYYY-MM-DD)\n                  type: string\n                  format: date-time\n      parameters:\n        - name: id\n          description: Dispute ID\n          in: path\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          $ref: '#/paths/~1page/get/responses/200'\n        '401':\n          $ref: '#/paths/~1page/get/responses/401'\n        default:\n          description: Server error\n  /bank/resolve:\n    get:\n      tags:\n        - Verification\n      summary: Resolve Account Number\n      operationId: verification_resolveAccountNumber\n      parameters:\n        - name: account_number\n          in: query\n          schema:\n            type: integer\n          example: 0022728151\n        - name: bank_code\n          in: query\n          schema:\n            type: integer\n          example: 51\n      responses:\n        '200':\n          description: Resolve Account Number\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/responses/Ok/content/application~1json/schema'\n              examples:\n                Resolve Bank:\n                  value:\n                    status: true\n                    message: Account number resolved\n                    data:\n                      account_number: 342391\n                      account_name: Doe Jane Loren\n                      bank_id: 9\n        '401':\n          $ref: '#/paths/~1page/get/responses/401'\n        '404':\n          $ref: '#/paths/~1page/get/responses/401'\n        default:\n          description: Server error\n  '/decision/bin/{bin}':\n    get:\n      tags:\n        - Verification\n      summary: Resolve Card BIN\n      operationId: verification_resolveCardBin\n      parameters:\n        - name: bin\n          in: path\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          $ref: '#/paths/~1page/get/responses/200'\n        '401':\n          $ref: '#/paths/~1page/get/responses/401'\n        '404':\n          $ref: '#/paths/~1page/get/responses/401'\n        default:\n          description: Server error\n  /country:\n    get:\n      tags:\n        - Verification\n      summary: List Countries\n      operationId: verification_listCountries\n      responses:\n        '200':\n          $ref: '#/paths/~1page/get/responses/200'\n        '401':\n          $ref: '#/paths/~1page/get/responses/401'\n        '404':\n          $ref: '#/paths/~1page/get/responses/401'\n        default:\n          description: Server error\n  /bank:\n    get:\n      tags:\n        - Verification\n      summary: Fetch Banks\n      operationId: verification_fetchBanks\n      parameters:\n        - in: query\n          name: country\n          schema:\n            type: string\n        - in: query\n          name: pay_with_bank_transfer\n          schema:\n            type: boolean\n        - in: query\n          name: use_cursor\n          schema:\n            type: boolean\n        - in: query\n          name: perPage\n          schema:\n            type: integer\n        - in: query\n          name: next\n          schema:\n            type: string\n        - in: query\n          name: previous\n          schema:\n            type: string\n        - in: query\n          name: gateway\n          schema:\n            type: string\n      responses:\n        '200':\n          $ref: '#/paths/~1page/get/responses/200'\n        '401':\n          $ref: '#/paths/~1page/get/responses/401'\n        '404':\n          $ref: '#/paths/~1page/get/responses/401'\n        default:\n          description: Server error\n  /address_verification/states:\n    get:\n      tags:\n        - Verification\n      summary: List States (AVS)\n      operationId: verification_avs\n      parameters:\n        - in: query\n          name: type\n          schema:\n            type: string\n        - in: query\n          name: country\n          schema:\n            type: string\n        - in: query\n          name: currency\n          schema:\n            type: string\n      responses:\n        '200':\n          $ref: '#/paths/~1page/get/responses/200'\n        '401':\n          $ref: '#/paths/~1page/get/responses/401'\n        '404':\n          $ref: '#/paths/~1page/get/responses/401'\n        default:\n          description: Server error\ncomponents:\n  securitySchemes:\n    bearerAuth:\n      type: http\n      scheme: bearer\n  schemas:\n    Customer:\n      allOf:\n        - type: object\n          required:\n            - email\n          properties:\n            email:\n              description: Customer's email address\n              type: string\n        - type: object\n          properties:\n            first_name:\n              description: Customer's first name\n              type: string\n              example: Some\n            last_name:\n              description: Customer's last name\n              type: string\n              example: Body\n            phone:\n              description: Customer's phone number\n              type: string\n              example: '+2348123456789'\n            metadata:\n              description: Stringified JSON object of custom data\n              type: string\n        - type: object\n          required:\n            - authorization_code\n          properties:\n            authorization_code:\n              description: Customer's authorization code to be deactivated\n              type: string\n        - type: object\n          required:\n            - customer\n          properties:\n            customer:\n              description: 'Customer''s code, or email address'\n              type: string\n            risk_action:\n              description: |\n                One of the possible risk actions [ default, allow, deny ]. allow to whitelist. \n                deny to blacklist. Customers start with a default risk action.\n              type: string\n              enum:\n                - default\n                - allow\n                - deny\n        - type: object\n          required:\n            - type\n            - country\n            - bvn\n            - bank_code\n            - account_number\n          properties:\n            type:\n              description: Predefined types of identification.\n              type: string\n              enum:\n                - bvn\n                - bank_account\n            country:\n              description: Two-letter country code of identification issuer\n              type: string\n              example: NG\n            bvn:\n              description: Customer's Bank Verification Number\n              type: integer\n              example: 0123456789\n            bank_code:\n              description: 'You can get the list of bank codes by calling the List Banks endpoint (https://api.paystack.co/bank).'\n              type: string\n              example: '007'\n            account_number:\n              description: Customer's bank account number.\n              type: string\n              example: '0111111111'\n            first_name:\n              description: Customer's first name\n              type: string\n              example: Uchenna\n            last_name:\n              description: Customer's last name\n              type: string\n              example: Okoro\n    Error:\n      type: object\n      properties:\n        status:\n          type: boolean\n        message:\n          type: string\n    Response:\n      type: object\n      properties:\n        status:\n          type: boolean\n        message:\n          type: string\n        data:\n          type: object\n  responses:\n    Ok:\n      description: Successful operation\n      content:\n        application/json:\n          schema:\n            type: object\n            properties:\n              status:\n                type: boolean\n              message:\n                type: string\n              data:\n                type: object\n    Created:\n      description: Resource created\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/Response'\n    NotFound:\n      description: Entity not found\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/Error'\n          example:\n            status: false\n            message: Entity not found\n    Unauthorized:\n      description: Unauthorized operation\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/Error'\n          example:\n            status: false\n            message: Invalid key\n    GeneralError:\n      description: General Error\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/Error'\nsecurity:\n  - bearerAuth: []\n",
			"canonicalURL": "/github.com/PaystackOSS/openapi@e65c07ce33d6900becd5f8dc3b935e7536ce486f/-/blob/dist/paystack.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/PaystackOSS/openapi/blob/e65c07ce33d6900becd5f8dc3b935e7536ce486f/dist/paystack.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "parse: parse spec: parse path items: path \"/bulkcharge\": post: operation \"bulkCharge_initiate\": requestBody: parse content: application/json: schema: parse schema: items: property \"charges\": at dist/paystack.yaml:3687:23: items: object cannot contain 'items' field"
}