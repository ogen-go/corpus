{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/prusa3d/Prusa-Link-Web"
		},
		"file": {
			"name": "openapi.yaml",
			"size": 0,
			"path": "spec/openapi.yaml",
			"byteSize": 28213,
			"content": "openapi: 3.0.1\ninfo:\n  title: PrusaLink Web\n  description:\n    This is a printer webservice.\n  contact:\n    email: link@prusa3d.cz\n  license:\n    name: AGPLv3\n  version: 1.0.0-draft\nexternalDocs:\n  description: Find out more about API\n  url: http://connect.prusa3d.cz\nsecurity:\n  - digestAuth: []\npaths:\n  /api/version:\n    get:\n      summary: api version informations\n      responses:\n        200:\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Version\"\n\n  /api/v1/info:\n    get:\n      summary: printer informations\n      responses:\n        200:\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Info\"\n        401:\n          $ref: \"#/components/responses/Unauthorized\"\n\n  /api/v1/storage:\n    get:\n      summary: storage info\n      description: Returns info about each available file storage (e.g. SD Card or local storage)\n      responses:\n        200:\n          description: OK\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  storage_list:\n                    type: array\n                    items:\n                      $ref: \"#/components/schemas/Storage\"\n        401:\n          $ref: \"#/components/responses/Unauthorized\"\n\n  /api/v1/files/{storage}/{path}:\n    parameters:\n      - in: header\n        name: Accept-Language\n        description: Defines a language of the response\n        schema:\n          type: string\n          example: \"cs\"\n      - in: header\n        name: Accept\n        description: Preferred content-type of response - application/json or text/html, all other are returned as text/plain\n        schema:\n          type: string\n          default: text/plain\n      - in: path\n        name: storage\n        description: The target storage\n        required: true\n        schema:\n          type: string\n          example: \"/local\"\n      - in: path\n        name: path\n        description: Path to the file\n        required: true\n        schema:\n          type: string\n          example: \"/examples/Spice_Harvester_0.3mm_PLA_MK3S_12m.gcode\"\n    get:\n      summary: file metadata\n      responses:\n        200:\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/FileInfo\"\n    put:\n      summary: upload file or create folder\n      parameters:\n        - in: header\n          name: Content-Length\n          description: Length of file to upload\n          schema:\n            type: integer\n            example: 101342\n        - in: header\n          name: Content-Type\n          description: Type of uploaded media\n          schema:\n            type: string\n            default: application/octet-stream\n        - in: header\n          name: Print-After-Upload\n          description: Whether to start printing the file after upload\n          schema:\n            type: boolean\n            default: False\n        - in: header\n          name: Overwrite\n          description: Whether to overwrite already existing files\n          schema:\n            type: string\n            description: ?0=False, ?1=True, according RFC8941/3.3.6\n            enum: [\"?0\", \"?1\"]\n            default: \"?0\"\n      responses:\n        201:\n          description: Created\n        401:\n          $ref: \"#/components/responses/Unauthorized\"\n        404:\n          $ref: \"#/components/responses/NotFound\"\n        409:\n          $ref: \"#/components/responses/Conflict\"\n    head:\n      summary: file presence and state check\n      responses:\n        200:\n          description: OK\n          headers:\n            Read-Only:\n              description: Whether the file or storage is read-only\n              required: true\n              schema:\n                type: boolean\n                example: true\n            Currently-Printed:\n              description: Whether this file is currently being printed\n              required: true\n              schema:\n                type: boolean\n                example: true\n        401:\n          $ref: \"#/components/responses/Unauthorized\"\n        404:\n          $ref: \"#/components/responses/NotFound\"\n        409:\n          $ref: \"#/components/responses/Conflict\"\n    delete:\n      summary: Delete a file or folder.\n      responses:\n        204:\n          description: No Content\n                       No Error\n        401:\n          $ref: \"#/components/responses/Unauthorized\"\n        404:\n          $ref: \"#/components/responses/NotFound\"\n        409:\n          # If the file to be deleted is currently being printed\n          $ref: \"#/components/responses/Conflict\"\n\n  /api/v1/cameras:\n    get:\n      summary: Get a list of active cameras and its properties\n      responses:\n        200:\n          description: OK\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: \"#/components/schemas/Camera\"\n        401:\n          $ref: \"#/components/responses/Unauthorized\"\n        403:\n          $ref: \"#/components/responses/Forbidden\"\n        503:\n          $ref: \"#/components/responses/ServiceUnavailable\"\n    put:\n      summary: List of cameras in intended order\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: array\n              items:\n                type: string\n                description: Printer ID\n                example: \"sh42arta\"\n      responses:\n        200:\n          description: OK\n        401:\n          $ref: \"#/components/responses/Unauthorized\"\n        403:\n          $ref: \"#/components/responses/Forbidden\"\n        503:\n          $ref: \"#/components/responses/ServiceUnavailable\"\n\n  /api/v1/cameras/{id}:\n    get:\n      summary: Get current settings and properties of specific camera\n      responses:\n        200:\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/CameraConfig\"\n        401:\n          $ref: \"#/components/responses/Unauthorized\"\n        403:\n          $ref: \"#/components/responses/Forbidden\"\n        404:\n          $ref: \"#/components/responses/NotFound\"\n        503:\n          $ref: \"#/components/responses/ServiceUnavailable\"\n    post:\n      summary: Setup a new camera or fix a broken one\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/CameraConfigSet\"\n      responses:\n        200:\n          description: OK\n        400:\n          $ref: \"#/components/responses/BadRequest\"\n        401:\n          $ref: \"#/components/responses/Unauthorized\"\n        403:\n          $ref: \"#/components/responses/Forbidden\"\n        404:\n          $ref: \"#/components/responses/NotFound\"\n        409:\n          $ref: \"#/components/responses/Conflict\"\n        503:\n          $ref: \"#/components/responses/ServiceUnavailable\"\n    patch:\n      summary: Edit a camera settings and / or configuration\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/CameraConfigSet\"\n      responses:\n        200:\n          description: OK\n        401:\n          $ref: \"#/components/responses/Unauthorized\"\n        403:\n          $ref: \"#/components/responses/Forbidden\"\n        404:\n          $ref: \"#/components/responses/NotFound\"\n        503:\n          $ref: \"#/components/responses/ServiceUnavailable\"\n    delete:\n      summary: Delete a camera\n      responses:\n        200:\n          description: OK\n        401:\n          $ref: \"#/components/responses/Unauthorized\"\n        403:\n          $ref: \"#/components/responses/Forbidden\"\n        404:\n          $ref: \"#/components/responses/NotFound\"\n        409:\n          $ref: \"#/components/responses/Conflict\"\n        503:\n          $ref: \"#/components/responses/ServiceUnavailable\"\n\n  /api/v1/cameras/snap:\n    get:\n      summary: Return a captured image from the default camera\n      responses:\n        200:\n          description: OK\n          content:\n            image/png:\n              schema:\n                type: string\n                format: binary\n        204:\n          description: No Content\n            No Error\n        304:\n          $ref: \"#/components/responses/NotModified\"\n        401:\n          $ref: \"#/components/responses/Unauthorized\"\n        403:\n          $ref: \"#/components/responses/Forbidden\"\n        404:\n          $ref: \"#/components/responses/NotFound\"\n        503:\n          $ref: \"#/components/responses/ServiceUnavailable\"\n\n  /api/v1/cameras/{id}/snap:\n    get:\n      summary: Return a captured image from the camera with a given id\n      responses:\n        200:\n          description: OK\n          content:\n            image/png:\n              schema:\n                type: string\n                format: binary\n        204:\n          description: No Content\n            No Error\n        304:\n          $ref: \"#/components/responses/NotModified\"\n        401:\n          $ref: \"#/components/responses/Unauthorized\"\n        403:\n          $ref: \"#/components/responses/Forbidden\"\n        404:\n          $ref: \"#/components/responses/NotFound\"\n        503:\n          $ref: \"#/components/responses/ServiceUnavailable\"\n    post:\n      summary: Make a snapshot with the camera\n      description: Can be manually done only during camera initialization\n      requestBody:\n        content:\n          application/json: {}\n      responses:\n        200:\n          description: OK\n          content:\n            image/png:\n              schema:\n                type: string\n                format: binary\n        401:\n          $ref: \"#/components/responses/Unauthorized\"\n        403:\n          $ref: \"#/components/responses/Forbidden\"\n        404:\n          $ref: \"#/components/responses/NotFound\"\n        408:\n          $ref: \"#/components/responses/RequestTimeout\"\n        409:\n          $ref: \"#/components/responses/Conflict\"\n        503:\n          $ref: \"#/components/responses/ServiceUnavailable\"\n\n  /api/v1/cameras/{id}/config:\n    patch:\n      summary: Set new settings to a working camera\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/CameraConfigSet\"\n      responses:\n        200:\n          description: OK\n        401:\n          $ref: \"#/components/responses/Unauthorized\"\n        403:\n          $ref: \"#/components/responses/Forbidden\"\n        404:\n          $ref: \"#/components/responses/NotFound\"\n        503:\n          $ref: \"#/components/responses/ServiceUnavailable\"\n    delete:\n      summary: Reset settings of a camera\n      responses:\n        200:\n          description: OK\n        401:\n          $ref: \"#/components/responses/Unauthorized\"\n        403:\n          $ref: \"#/components/responses/Forbidden\"\n        404:\n          $ref: \"#/components/responses/NotFound\"\n        503:\n          $ref: \"#/components/responses/ServiceUnavailable\"\n\n  /api/v1/cameras/{id}/connection:\n    post:\n      summary: Registers a camera to Connect\n      responses:\n        200:\n          description: OK\n        401:\n          $ref: \"#/components/responses/Unauthorized\"\n        403:\n          $ref: \"#/components/responses/Forbidden\"\n        404:\n          $ref: \"#/components/responses/NotFound\"\n        408:\n          $ref: \"#/components/responses/RequestTimeout\"\n        409:\n          $ref: \"#/components/responses/Conflict\"\n        503:\n          $ref: \"#/components/responses/ServiceUnavailable\"\n    delete:\n      summary: Un-registers a camera from Connect\n      responses:\n        200:\n          description: OK\n        401:\n          $ref: \"#/components/responses/Unauthorized\"\n        403:\n          $ref: \"#/components/responses/Forbidden\"\n        404:\n          $ref: \"#/components/responses/NotFound\"\n        409:\n          $ref: \"#/components/responses/Conflict\"\n        503:\n          $ref: \"#/components/responses/ServiceUnavailable\"\n\ncomponents:\n  schemas:\n    Version:\n      type: object\n      properties:\n        api:\n          type: string\n          example: \"1.0.0\"\n        version:\n          type: string\n          example: \"0.7.0\"\n        printer:\n          type: string\n          example: \"1.3.1\"\n        text:\n          type: string\n          example: \"PrusaLink 0.7.0\"\n        firmware:\n          type: string\n          example: \"3.10.1-4697\"\n        sdk:\n          type: string\n          example: \"0.7.0\"\n        capabilities:\n          description: |\n            Additional capabilities the printer has. The object is expected to\n            be extended in the future with more capabilities. The absence of a\n            capability in the object, or the complete absence of the object\n            means the printer doesn't support such capability (probably doesn't\n            even know such capability might exist).\n          type: object\n          default: {}\n          properties:\n            upload-by-put:\n              description: |\n                The printer supports uploading GCodes by the PUT method (as\n                described in this document). It is capable of doing the PUT and\n                HEAD to /api/v1/files/{storage}/{path} and it is capable of\n                answering the /api/v1/storage endpoint.\n\n                In absence of this capability, client MAY opt to try the legacy\n                \"octoprint\" POST to /api/files/{storage}.\n              type: boolean\n              default: false\n      required:\n        - api\n        - version\n        - printer\n        - text\n        - firmware\n\n    Storage:\n      type: object\n      properties:\n        name:\n          type: string\n          example: \"PrusaLink gcodes\"\n        type:\n          type: string\n          description: Storage source\n          enum: [\"LOCAL\", \"SDCARD\", \"USB\"]\n        path:\n          type: string\n          description: Path to storage (not display path)\n          example: \"/local\"\n        print_files:\n          type: integer\n          description: Size of all print files in bytes\n          example: 19216842\n        system_files:\n          type: integer\n          description: Size of all system files in bytes\n          example: 4242\n        free_space:\n          type: integer\n          description: System free space in bytes\n          example: 1921681142\n        total_space:\n          type: integer\n          description: System total space in bytes\n          example: 8589934592\n        available:\n          type: boolean\n          description: Whether the storage is available or not\n          example: true\n        read_only:\n          type: boolean\n          description: Whether the storage is read only\n          example: false\n      required:\n        - available\n        - path\n        - type\n\n    Camera:\n      type: object\n      properties:\n        camera_id:\n          type: string\n          example: \"sh42arta\"\n        config:\n          type: object\n          properties:\n            path:\n              type: string\n              example: \"/dev/video0\"\n            name:\n              type: string\n              example: \"Camera L4D\"\n            driver:\n              type: string\n              example: \"V4L2\"\n            resolution:\n              type: string\n              example: \"1280x720\"\n        connected:\n          type: boolean\n          description: Camera is successfully connected to PrusaLink\n        detected:\n          type: boolean\n          description: Camera is detected by PrusaLink, but not saved yet\n        stored:\n          type: boolean\n          description: Camera configuration is saved in PrusaLink\n        linked:\n          type: boolean\n          description: Camera is linked to PrusaConnect\n\n    CameraConfig:\n      type: object\n      description: Camera configuration\n      properties:\n        name:\n          type: string\n          description: Name of the camera\n          example: \"MuadDib_Camera_1\"\n        trigger_scheme:\n          type: string\n          description: When the snapshot is taken\n          enum: [ TEN_SEC, THIRTY_SEC, SIXTY_SEC, EACH_LAYER, FIFTH_LAYER, MANUAL ]\n        available_resolutions:\n          type: array\n          items:\n            type: object\n            properties:\n              width:\n                type: integer\n                example: 640\n              height:\n                type: integer\n                example: 480\n        resolution:\n          type: object\n          properties:\n            width:\n              type: integer\n              example: 640\n            height:\n              type: integer\n              example: 480\n        capabilities:\n          type: array\n          items:\n            type: string\n            enum: [TRIGGER_SCHEME, IMAGING, RESOLUTION, ROTATION, EXPOSURE]\n\n    CameraConfigSet:\n      type: object\n      description: Camera configuration to set\n      properties:\n        name:\n          type: string\n          description: Name of the camera\n          example: \"MuadDib_Camera_1\"\n        trigger_scheme:\n          type: string\n          description: When the snapshot is taken\n          enum: [ EVERY_10_MIN, ON_LAYER_CHANGE ]\n        resolution:\n          type: object\n          properties:\n            width:\n              type: integer\n              example: 640\n            height:\n              type: integer\n              example: 640\n        rotation:\n          type: integer\n          description: Current rotation of the output image\n          example: 180\n        exposure:\n          type: number\n          example: 4.2\n        send_to_connect:\n          type: boolean\n          example: true\n\n    FileInfo:\n      type: object\n      properties:\n        type:\n          type: string\n          description: File could be Print file, firmware or other (e.g. configuration file)\n          enum: [\"PRINT_FILE\", \"FIRMWARE\", \"FILE\", \"FOLDER\"]\n        refs:\n          type: object\n          properties:\n            download:\n              type: string\n              example: \"/api/files/local/examples/Spice_Harvester_0.3mm_PLA_MK3S_42m.gcode/raw\"\n            icon:\n              type: string\n              example: \"/api/thumbnails/local/examples/Spice_Harvester_0.3mm_PLA_MK3S_42m.gcode.small.png\"\n            thumbnail:\n              type: string\n              example: \"/api/thumbnails/local/examples/Spice_Harvester_0.3mm_PLA_MK3S_42m.gcode.orig.png\"\n        size:\n          type: integer\n          example: 424242\n        display_path:\n          type: string\n          example: \"/PrusaLink gcodes/examples\"\n        display_name:\n          type: string\n          description: Long Filename\n          example: \"Spice_Harvester_0.3mm_PLA_MK3S_12m.gcode\"\n        creation_timestamp:\n          type: integer\n          description: Timestamp in seconds\n          example: 1648038843\n        ro:\n          type: boolean\n          example: False\n        metadata:\n          type: object\n          description: Print file metadata parsed from G-code, all data are optional\n          properties:\n            bed_temperature:\n              type: string\n              description: Degrees Celsius\n              example: \"60\"\n            nozzle_temperature:\n              type: string\n              description: Degrees Celsius\n              example: \"215\"\n            brim_width:\n              type: string\n              description: Milimeters\n              example: \"0\"\n            estimated printing time (normal mode):\n              type: string\n              example: \"42m 42s\"\n            faded_layers:\n              type: string\n              example: \"42\"\n            filament cost:\n              type: string\n              example: \"0.57\"\n            filament used [cm3]:\n              type: string\n              example: \"12.44\"\n            filament used [g]:\n              type: string\n              example: \"15.79\"\n            filament used [mm]:\n              type: string\n              example: \"5170.06\"\n            filament_type:\n              type: string\n              example: \"PLA\"\n            fill_density:\n              type: string\n              description: Percent\n              example: \"20%\"\n            initial_exposure_time:\n              type: string\n              description: Seconds\n              example: \"5\"\n            layer_height:\n              type: string\n              description: Milimeters\n              example: \"0.3\"\n            material_name:\n              type: string\n              example: \"PLA Sandstorm Orange\"\n            exposure_time:\n              type: string\n              description: Seconds\n              example: \"2\"\n            max_exposure_time:\n              type: string\n              description: Seconds\n              example: \"3\"\n            max_initial_exposure_time:\n              type: string\n              description: Seconds\n              example: \"3\"\n            min_exposure_time:\n              type: string\n              description: Seconds\n              example: \"1\"\n            min_initial_exposure_time:\n              type: string\n              description: Seconds\n              example: \"1\"\n            nozzle_diameter:\n              type: string\n              description: Milimeters\n              example: \"0.4\"\n            print_time:\n              type: integer\n              description: Seconds\n              example: \"2562\"\n            printer_model:\n              type: string\n              enum:  [\"MK3\", \"MK3S\", \"MINI\"]\n            support_material:\n              type: string\n              example: \"PLA\"\n            ironing:\n              type: string\n              example: \"0\"\n            required_resin_ml:\n              type: string\n              example: \"123.4\"\n            profile:\n              type: string\n              example: \"ultra_fast\"\n\n    Info:\n      type: object\n      properties:\n        mmu:\n          type: boolean\n          example: false\n        name:\n          type: string\n          example: \"MuadDib\"\n        location:\n          type: string\n          example: \"Arrakis\"\n        farm_mode:\n          type: boolean\n          example: false\n        nozzle_diameter:\n          type: number\n          example: 0.4\n        min_extrusion_temp:\n          type: integer\n          example: 170\n        serial:\n          type: string\n          example: \"CZPX4720X004XC34242\"\n        sd_ready:\n          type: boolean\n          example: true\n        active_camera:\n          type: boolean\n          example: true\n        hostname:\n          type: string\n          example: \"prusa-mk3.lan\"\n        port:\n          type: string\n          example: \"/dev/tty\"\n\n    Error:\n      type: object\n      properties:\n        code:\n          type: string\n          description: Prusa error code. Must be string if we will have printer with code for example 04\n          example: \"10108\"\n        title:\n          type: string\n          description: Prusa error text string with prefiled variable macros.\n          example: \"RESIN TOO LOW\"\n        text:\n          type: string\n          description: Prusa error text string with prefiled variable macros.\n          example: \"Measured resin volume 22.4 ml is lower than required for this print. Refill the tank and restart the print.\"\n        url:\n          type: string\n          description: Link to the Prusa help page\n          example: \"https://help.prusa3d.com/en/10108/LHE3Q0I1\"\n      required:\n        - title\n        - text\n\n    ResponsePlaintext:\n      type: string\n      default: \"Project with same name has been already uploaded.\"\n      description: Prusa error message (raw_message)\n\n  responses:\n    NotModified: # 304\n      description: Not Modified\n      headers:\n        Content-Location:\n          $ref: \"#/components/headers/Content-Location\"\n      content:\n        text/plain:\n          schema:\n            $ref: \"#/components/schemas/ResponsePlaintext\"\n        application/json:\n          schema:\n            $ref: \"#/components/schemas/Error\"\n\n    BadRequest: # 400\n      description: Bad Request\n      headers:\n        Content-Location:\n          $ref: \"#/components/headers/Content-Location\"\n      content:\n        text/plain:\n          schema:\n            $ref: \"#/components/schemas/ResponsePlaintext\"\n        application/json:\n          schema:\n            $ref: \"#/components/schemas/Error\"\n\n    Unauthorized: # 401\n      description: Unauthorized\n      headers:\n        Content-Location:\n          $ref: \"#/components/headers/Content-Location\"\n      content:\n        text/plain:\n          schema:\n            $ref: \"#/components/schemas/ResponsePlaintext\"\n        application/json:\n          schema:\n            $ref: \"#/components/schemas/Error\"\n\n    Forbidden: # 403\n      description: Forbidden\n      headers:\n        Content-Location:\n          $ref: \"#/components/headers/Content-Location\"\n      content:\n        text/plain:\n          schema:\n            $ref: \"#/components/schemas/ResponsePlaintext\"\n        application/json:\n          schema:\n            $ref: \"#/components/schemas/Error\"\n\n    NotFound: # 404\n      description: Not Found\n      headers:\n        Content-Location:\n          $ref: \"#/components/headers/Content-Location\"\n      content:\n        text/plain:\n          schema:\n            $ref: \"#/components/schemas/ResponsePlaintext\"\n        application/json:\n          schema:\n            $ref: \"#/components/schemas/Error\"\n\n    RequestTimeout: # 408\n      description: Request Timeout\n      headers:\n        Content-Location:\n          $ref: \"#/components/headers/Content-Location\"\n      content:\n        text/plain:\n          schema:\n            $ref: \"#/components/schemas/ResponsePlaintext\"\n        application/json:\n          schema:\n            $ref: \"#/components/schemas/Error\"\n\n    Conflict: # 409\n      description: Conflict\n      headers:\n        Content-Location:\n          $ref: \"#/components/headers/Content-Location\"\n      content:\n        text/plain:\n          schema:\n            $ref: \"#/components/schemas/ResponsePlaintext\"\n        application/json:\n          schema:\n            $ref: \"#/components/schemas/Error\"\n\n    UnsupportedMediaType: # 415\n      description: Unsupported Media Type\n      headers:\n        Content-Location:\n          $ref: \"#/components/headers/Content-Location\"\n      content:\n        text/plain:\n          schema:\n            $ref: \"#/components/schemas/ResponsePlaintext\"\n        application/json:\n          schema:\n            $ref: \"#/components/schemas/Error\"\n\n    InternalServerError: # 500\n      description: Internal Server Error\n      headers:\n        Content-Location:\n          $ref: \"#/components/headers/Content-Location\"\n      content:\n        text/plain:\n          schema:\n            $ref: \"#/components/schemas/ResponsePlaintext\"\n        application/json:\n          schema:\n            $ref: \"#/components/schemas/Error\"\n\n    NotImplemented: # 501\n      description: Not Implemented\n      headers:\n        Content-Location:\n          $ref: \"#/components/headers/Content-Location\"\n      content:\n        text/plain:\n          schema:\n            $ref: \"#/components/schemas/ResponsePlaintext\"\n        application/json:\n          schema:\n            $ref: \"#/components/schemas/Error\"\n\n    ServiceUnavailable: # 503\n      description: Service Unavailable\n      headers:\n        Content-Location:\n          $ref: \"#/components/headers/Content-Location\"\n      content:\n        text/plain:\n          schema:\n            $ref: \"#/components/schemas/ResponsePlaintext\"\n        application/json:\n          schema:\n            $ref: \"#/components/schemas/Error\"\n\n  headers:\n    Accept:\n      required: false\n      schema:\n        type: string\n        default: text/plain\n      description: Parameter specifying supported data format from client. PCL has to support it. Slicer doesn't have to use this. If the header is not present, it defaults to text/plain\n    Content-Location:\n      schema:\n        type: string\n        default: \"http://\u003cPCL IP\u003e/error\"\n      description: URI path to nice error page. We can send URI to help.prusa3d.com in the future.\n\n  securitySchemes:\n    digestAuth:\n      type: http\n      scheme: digest\n",
			"canonicalURL": "/github.com/prusa3d/Prusa-Link-Web@39a7cb0281e0a639dbda72f849545441f162b906/-/blob/spec/openapi.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/prusa3d/Prusa-Link-Web/blob/39a7cb0281e0a639dbda72f849545441f162b906/spec/openapi.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "parse: parse spec: parse components: schemas: \"Version\": resolve \"#/components/schemas/Version\": property \"capabilities\": at spec/openapi.yaml:460:20: parse default: unexpected type: \"object\""
}