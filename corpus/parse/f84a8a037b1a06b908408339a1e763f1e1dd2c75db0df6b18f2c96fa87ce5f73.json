{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/APIs-guru/openapi-directory"
		},
		"file": {
			"name": "openapi.yaml",
			"size": 0,
			"path": "APIs/fire.com/1.0/openapi.yaml",
			"byteSize": 125289,
			"content": "openapi: 3.0.2\nservers:\n  - description: Preproduction/Sandbox Server\n    url: https://api-preprod.fire.com/business/v1\n  - description: Production Server\n    url: https://api.fire.com/business/v1\ninfo:\n  contact:\n    email: api@fire.com\n    name: Fire API\n    url: https://docs.fire.com\n  description: |\n    The fire.com API allows you to deeply integrate Business Account features into your application or back-office systems.\n\n    The API provides read access to your profile, accounts and transactions, event-driven notifications of activity on the account and payment initiation via batches. Each feature has its own HTTP endpoint and every endpoint has its own permission.\n\n\n    The API exposes 3 main areas of functionality: financial functions, service information and service configuration.\n    ## Financial Functions\n    These functions provide access to your account details, transactions, payee accounts, payment initiation etc.\n    ## Service Functions\n    These provide information about the fees and limits applied to your account.\n    ## Service configuration\n    These provide information about your service configs - applications, webhooks, API tokens, etc.\n  title: Fire Financial Services Business API\n  version: \"1.0\"\n  x-apisguru-categories:\n    - financial\n  x-logo:\n    url: https://www.fire.com/wp-content/uploads/2018/12/fire-cover.png\n  x-origin:\n    - format: openapi\n      url: https://raw.githubusercontent.com/firefinancialservices/fire-business-api-openapi/master/fire-business-api-v1.yaml\n      version: \"3.0\"\n  x-providerName: fire.com\nsecurity:\n  - bearerAuth: []\ntags:\n  - description: |\n      Access to the API is by Bearer Tokens. The process is somewhat similar to OAuth2.0, but with some changes to improve security.\n      1. You must first log into the firework online application and create a new Application in the Profile \u003e API page. (You will need your PIN digits and 2-Factor Authentication device).\n      2. Give your application a Name and select the scope/permissions you need the application to have (more on Scopes below).\n      3. You will be provided with three pieces of information - the App Refresh Token, Client ID and Client Key. You need to take note of the Client Key when it is displayed - it will not be shown again.\n\n      You now use these pieces of data to retrieve a short-term Access Token which you can use to access the API. The Access Token expires within a relatively short time, so even if it is compromised, the attacker will not have long to use it. The Client Key is the most important piece of information to keep secret. This should only ever be stored on a backend server, and never in a front end client or mobile app.\n\n      **If you ever accidentally reveal the Client Key (or accidentally commit it to Github for instance) it is vital that you log into firework online and delete/recreate the App Tokens as soon as possible. Anyone who has these three pieces of data can access the API to view your data and set up payments from your account (depending on the scope of the tokens).**\n\n      Once you have the access token, pass it as a header for every call, like so:\n      `Authorization: Bearer $ACCESS_TOKEN`\n      Whenever it expires, create a new nonce and get a new access token again.\n    name: Authentication\n  - description: fire.com Accounts are the equivalent of a bank account from bank.\n    name: Accounts\n  - description: |\n      Fire Open Payments is a feature of the fire.com business account that leverages Open Banking to allow your customers to pay you via bank transfer and to reconcile those payments as they are received into your fire.com GBP or EUR account.\n\n      To set up each Fire Open Payment you first need to create a payment request. This contains the details of the payment such as the amount, destination account, description as well as various other specific fields that you want to associate with the payment. The payment request is represented as a URL with a unique code which can then be incorporated into an eCommerce shopping cart as an alternative form of payment. For example, you can put “Pay by Bank” on your website along with “Pay by Card” and “Pay by PayPal”. It can also be distributed by a variety of means such as by email, SMS, WhatsApp, encoded as a QR code, NFC tag, etc.\n\n      Consumers confirm the payment details such as the amount are correct, select their bank and authorise the payment. Payments can be made from all major UK banks.\n\n      The funds are settled into your fire.com account, fully reconciled, with your specified fields provided.\n\n      There are two implementation options you can use to display payment pages with Fire Open Payments.\n      1. **Hosted Payment Pages:** fire.com hosts the payment pages - this option allows you to re-direct your customer to the hosted fire.com payment pages displaying the payment details confirmation, bank selection, consent and response pages.\n      2. **Integrated Payment Pages:** You host the payments page yourself - this option allows you to have control of the UI and UX for displaying the payment details confirmation, bank selection and response pages. Once the response is received, fire.com can re-direct the payer back to your website.\n\n      ## Hosted Payment Pages Option\n      ![Image](https://fire.com/docs/images/fop-hosted-flow.png)\n\n      The payer is brought through 5 stages to complete the payment:\n      1. **View Payment Details page:** The payer must first be clear on the amount of the payment, who they are paying and the reason for the payment.\n      2. **Select Bank / Account Provider page:** The payer then selects their bank. Again this step is offered as part of the fire.com payment UI.\n      3. **Consent page:**  The payer must provide consent to the PISP (fire.com) prior to authorising the payment. This is a regulatory requirement, this page must be hosted by fire.com.\n      4. **Authenticate and Authorise Payment:** The payer will be redirected to their bank’s online site or mobile banking app. After authenticating, the details of the payment will be displayed, and the payer will authorise the payment.\n      5. **Response page:** It is a regulatory requirement that the PISP (fire.com) display the results of the payment and provide the same information that would be provided if the payer had made the payment via their banking application. fire.com must display this page, before optionally redirecting the payer back to your website.\n\n      To implement the hosted Fire Open Payments option you need to do the following:\n      1. You can create a new Fire Open Payment request either within Firework Online or via the API.\n      2. Create your new API application with the appropriate permissions required in Firework Online, as outlined in the “Authentication” steps. The permissions needed are:\n          - “Create a Payment Request”\n          - “Get Payment Details”\n\n      3. Use the Refresh Token, Client ID and Client Key to create an access token as outlined in the “Authentication” steps.\n      4. On your website, create a “Pay by Bank” button alongside your other available payment methods, such as Cards and PayPal.\n      5. After the user clicks on “Pay by Bank”, you need to create a new Fire Open Payment request as outlined in the “Create a Fire Open Payment” steps. The Create a Fire Open Payment request endpoint returns a unique code for the payment request.\n      6. Create a URL using the code returned in this format: `https://payments.fire.com/{code}` and redirect your customer to this page.\n      7. fire.com will host all the pages that the customer needs to review and authorise the payment. fire.com will will return the paymentUUID of the successful or failed transaction to the returnUrl that you supplied when creating the Fire Open Payment request. fire.com can also optionally send a “webhook” to your website notifying you of the transaction’s outcome.\n      8. Once fire.com responds with the paymentUUID and/or the webhook to your website, you need to call the “Get Payment Details” endpoint to get the details of the transaction. This will let you know whether the transaction was successful or not. You can set up the “Payment Request Payment Authorised” webhook to notify you once the payment is authorised or cancelled.\n      9. The funds will be received into your GBP or EUR account. Funding will typically be within 6 business hours.\n\n      Once the code is returned the payment can be viewed and paid by going to the following URL: `https://payments.fire.com/{code}`\n    name: Open Banking\n  - description: Manage your API Applications and Webhooks\n    name: API\n  - description: While there are many types of transactions, they are all represented by the same JSON object with a different txnType.\n    name: Transactions\n  - description: |\n      The fire.com api allows businesses to automate direct debit payment actions on their fire.com business accounts.\n\n      You can retrieve details of your direct debit payments, direct debit mandates and also take actions on both your direct debit payments and mandates.\n    name: Direct Debits\n  - description: |\n      The fire.com API allows businesses to automate payments between their accounts or to third parties across the UK and Europe.\n\n      For added security, the API can only set up the payments in batches. These batches must be approved by an authorised user via the firework mobile app.\n\n\n      The process is as follows:\n\n      **1.**Create a new batch\n\n      **2.**Add payments to the batch\n\n      **3.**Submit the batch for approval\n\n      Once the batch is submitted, the authorised users will receive notifications to their firework mobile apps. They can review the contents of the batch and then approve or reject it. If approved, the batch is then processed. You can avail of enhanced security by using Dual Authorisation to verify payments if you wish. Dual Authorisation can be enabled by you when setting up your API application in firework online.\n\n      **Batch Life Cycle Events**\n\n      A batch webhook can be specified to receive details of all the payments as they are processed. This webhook receives notifications for every event in the batch lifecycle.\n\n      The following events are triggered during a batch:\n\n      **batch.opened:** Contains the details of the batch opened. Checks that the callback URL exists - unless a HTTP 200 response is returned, the callback URL will not be configured.\n\n      **batch.item-added:** Details of the item added to the batch\n\n      **batch.item-removed:** Details of the item removed from the batch\n\n      **batch.cancelled:** Notifies that the batch was cancelled.\n\n      **batch.submitted:** Notifes that the batch was submitted\n\n      **batch.approved:** Notifies that the batch was approved.\n\n      **batch.rejected:** Notifies that the batch was rejected.\n\n      **batch.failed:** Notifies that the batch failed - includes the details of the failure (insufficient funds etc)\n\n      **batch.completed:** Notifies that the batch completed successfully. Includes a summary.\n\n      Push notifications are sent to the firework mobile app for many of these events too - these can be configured from within the app.\n    name: Payment Batches\npaths:\n  /accounts:\n    get:\n      description: Returns all your fire.com Accounts. Ordered by Alias ascending. Can be paginated.\n      operationId: getAccounts\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                properties:\n                  accounts:\n                    items:\n                      properties:\n                        balance:\n                          description: the balance of the account (in minor currency units - pence, cent etc. 434050 == 4,340.50 GBP for a GBP account).\n                          example: 23950\n                          format: int64\n                          type: integer\n                        cbic:\n                          description: the BIC of the account (provided if currency is EUR).\n                          example: CPAYIE2D\n                          type: string\n                        ccan:\n                          description: the Account Number of the account.\n                          example: \"11111111\"\n                          type: string\n                        ciban:\n                          description: the IBAN of the account (provided if currency is EUR).\n                          example: IE54CPAY99119911111111\n                          type: string\n                        cnsc:\n                          description: the Sort Code of the account.\n                          example: \"232221\"\n                          type: string\n                        colour:\n                          deprecated: true\n                          description: Internal Use\n                          example: ORANGE\n                          type: string\n                        currency:\n                          properties:\n                            code:\n                              description: The three letter code for the currency - either `EUR` or `GBP`.\n                              enum:\n                                - EUR\n                                - GBP\n                              type: string\n                            description:\n                              description: The name of the currency\n                              example: Euro\n                              type: string\n                          title: Currency\n                          type: object\n                        defaultAccount:\n                          description: true if this is the default account for this currency. This will be the account that general fees are taken from (as opposed to per-transaction fees).\n                          example: true\n                          type: boolean\n                        directDebitsAllowed:\n                          description: Whether or not direct debits can be set up on this account.\n                          example: false\n                          type: boolean\n                        ican:\n                          description: identifier for the fire.com account (assigned by fire.com)\n                          example: 42\n                          format: int64\n                          type: integer\n                        name:\n                          description: the name the user gives to the account to help them identify it.\n                          example: Main Account\n                          type: string\n                        status:\n                          description: Live accounts can be used as normal. Migrated accounts were used before Brexit and are read-only.\n                          enum:\n                            - LIVE\n                            - MIGRATED\n                          type: string\n                      title: Account\n                      type: object\n                    type: array\n                title: Accounts\n                type: object\n          description: An array of account objects.\n        \"401\":\n          description: Access Token is Invalid or missing\n      summary: List all fire.com Accounts\n      tags:\n        - Accounts\n    post:\n      description: |\n        Creates a new fire.com account.\n\n        **Please note there is a charge associated with creating a new account.**\n      operationId: addAccount\n      requestBody:\n        content:\n          application/json:\n            schema:\n              properties:\n                acceptFeesAndCharges:\n                  description: a field to indicate you accept the fee for a new account\n                  type: boolean\n                accountName:\n                  description: Name to give the new account\n                  example: Operating Account\n                  maxLength: 50\n                  type: string\n                currency:\n                  description: The currency of the new account\n                  enum:\n                    - EUR\n                    - GBP\n                  type: string\n              title: NewAccount\n              type: object\n        description: Details of the new account\n        required: true\n      responses:\n        \"201\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/paths/~1accounts/get/responses/200/content/application~1json/schema/properties/accounts/items\"\n          description: The details of the new account\n      summary: Add a new account\n      tags:\n        - Accounts\n  \"/accounts/{ican}\":\n    get:\n      description: You can retrieve the details of a fire.com Account by its `ican`.\n      operationId: getAccountById\n      parameters:\n        - in: path\n          name: ican\n          required: true\n          schema:\n            description: The ican of the account to retrieve\n            format: int64\n            type: integer\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/paths/~1accounts/get/responses/200/content/application~1json/schema/properties/accounts/items\"\n          description: An array of account objects.\n        \"401\":\n          $ref: \"#/paths/~1accounts/get/responses/401\"\n      summary: Retrieve the details of a fire.com Account\n      tags:\n        - Accounts\n  \"/accounts/{ican}/transactions\":\n    get:\n      description: Retrieve a list of transactions against an account.\n      operationId: getTransactionsById\n      parameters:\n        - in: path\n          name: ican\n          required: true\n          schema:\n            description: The ican of the account to retrieve\n            format: int64\n            type: integer\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                properties:\n                  amountAfterCharges:\n                    description: Net amount lodged or taken from the account after fees and charges were applied.\n                    example: 5000\n                    format: int64\n                    type: integer\n                  amountBeforeCharges:\n                    description: Amount of the transaction before the fees and taxes were applied.\n                    example: 5000\n                    format: int64\n                    type: integer\n                  balance:\n                    description: the balance of the account (in minor currency units - pence, cent etc. 434050 == 4,340.50 GBP for a GBP account).\n                    example: 8500\n                    format: int64\n                    type: integer\n                  card:\n                    properties:\n                      alias:\n                        type: string\n                      cardId:\n                        format: int64\n                        type: number\n                      embossBusinessName:\n                        type: string\n                      embossCardName:\n                        type: string\n                      expiryDate:\n                        format: date-time\n                        type: string\n                      maskedPan:\n                        type: string\n                      provider:\n                        type: string\n                    title: RelatedCard\n                    type: object\n                  currency:\n                    $ref: \"#/paths/~1accounts/get/responses/200/content/application~1json/schema/properties/accounts/items/properties/currency\"\n                  date:\n                    description: Date of the transaction\n                    example: 2021-04-13T11:06:32.437Z\n                    format: date-time\n                    type: string\n                  dateAcknowledged:\n                    example: 2021-04-13T11:06:32.437Z\n                    format: date-time\n                    type: string\n                  feeAmount:\n                    description: The amount of the fee, if any.\n                    example: 0\n                    format: int64\n                    type: integer\n                  fxTradeDetails:\n                    properties:\n                      buyAmount:\n                        description: amount of buyCurrency being bought\n                        example: 359\n                        format: int64\n                        type: integer\n                      buyCurrency:\n                        description: currency which is being bought\n                        example: GBP\n                        type: string\n                      fixedSide:\n                        description: type of trade\n                        example: SELL\n                        type: string\n                      rate4d:\n                        description: exchange rate\n                        example: 7180\n                        format: int64\n                        type: integer\n                      sellAmount:\n                        description: amount of sellCurrency being sold\n                        example: 500\n                        format: int64\n                        type: integer\n                      sellCurrency:\n                        description: currency which is being sold\n                        example: EUR\n                        type: string\n                    title: FxTrade\n                    type: object\n                  ican:\n                    description: identifier for the fire.com account (assigned by fire.com) This field is only used in the condensed version.\n                    example: 1951\n                    format: int64\n                    type: integer\n                  myRef:\n                    description: The comment/reference on the transaction\n                    example: Transfer to main account\n                    type: string\n                  paymentRequestPublicCode:\n                    description: The code that was returned when you created the payment request.\n                    example: 1abcdefg\n                    type: string\n                  refId:\n                    description: The id of the transaction.\n                    example: 26774\n                    format: int64\n                    type: integer\n                  relatedParty:\n                    oneOf:\n                      - properties:\n                          account:\n                            properties:\n                              accountNumber:\n                                description: the Account Number of the account.\n                                example: \"11111111\"\n                                type: string\n                              alias:\n                                description: the name the user gives to the account to help them identify it.\n                                example: Main Account\n                                type: string\n                              bic:\n                                description: the BIC of the account (provided if currency is EUR).\n                                example: CPAYIE2D\n                                type: string\n                              iban:\n                                description: the IBAN of the account (provided if currency is EUR).\n                                example: IE54CPAY99119911111111\n                                type: string\n                              id:\n                                description: identifier for the fire.com account (assigned by fire.com)\n                                example: 42\n                                format: int64\n                                type: integer\n                              nsc:\n                                description: the Sort Code of the account.\n                                example: \"232221\"\n                                type: string\n                            type: object\n                          type:\n                            enum:\n                              - FIRE_ACCOUNT\n                            type: string\n                        title: RelatedPartyFireAccount\n                        type: object\n                      - properties:\n                          account:\n                            properties:\n                              accountNumber:\n                                type: string\n                              alias:\n                                type: string\n                              bic:\n                                type: string\n                              iban:\n                                type: string\n                              id:\n                                format: int64\n                                type: integer\n                              nsc:\n                                type: string\n                            type: object\n                          type:\n                            enum:\n                              - EXTERNAL_ACCOUNT\n                            type: string\n                        title: RelatedPartyExternalAccount\n                        type: object\n                      - properties:\n                          account:\n                            properties:\n                              accountNumber:\n                                description: The account number of the Withdrawl account in reference\n                                example: 0\n                                type: string\n                              alias:\n                                description: The Alias name of the Withdrawl account in reference\n                                example: Smyth and Co.\n                                type: string\n                              bic:\n                                description: The BIC of the Withdrawl account in reference\n                                example: CPAYIE2D\n                                type: string\n                              iban:\n                                description: The BIC of the Withdrawl account in reference\n                                example: IE76CPAY99119900000000\n                                type: string\n                              id:\n                                description: The ID number of the Withdrawl account in reference\n                                example: 123\n                                format: int64\n                                type: integer\n                              nsc:\n                                description: (Conditional) Provide this field if using Mode 2 and the payee account is in GBP.\n                                example: 991199\n                                type: string\n                            type: object\n                          type:\n                            enum:\n                              - WITHDRAWAL_ACCOUNT\n                            type: string\n                        title: RelatedPartyPayee\n                        type: object\n                      - properties:\n                          cardMerchant:\n                            properties:\n                              acquirerIdDe32:\n                                example: \"06011319\"\n                                type: string\n                              additionalAmtDe54:\n                                type: string\n                              additionalDataDe124:\n                                type: string\n                              additionalDataDe48:\n                                example: 010X610500000\n                                type: string\n                              authCodeDe38:\n                                example: \"177449\"\n                                type: string\n                              authorisedByGps:\n                                example: N\n                                type: string\n                              avsResult:\n                                example: N\n                                type: string\n                              billAmt:\n                                example: -1000\n                                format: int64\n                                type: number\n                              billCcy:\n                                example: \"978\"\n                                type: string\n                              expiryDate:\n                                type: string\n                              mccCode:\n                                example: \"5521\"\n                                type: string\n                              merchIdDe42:\n                                example: \"013152429\"\n                                type: string\n                              merchNameDe43:\n                                example: ABC Coffee Shop\n                                type: string\n                              mtId:\n                                example: \"0100\"\n                                type: string\n                              posDataDe22:\n                                example: \"051\"\n                                type: string\n                              posDataDe61:\n                                example: \"000001000030037299999\"\n                                type: string\n                              posTermnlDe41:\n                                example: \"80266721\"\n                                type: string\n                              procCode:\n                                example: \"000000\"\n                                type: string\n                              recordDataDe120:\n                                type: string\n                              respCodeDe39:\n                                example: \"00\"\n                                type: string\n                              retRefNoDe37:\n                                example: \"010900006720\"\n                                type: string\n                              statusCode:\n                                example: \"00\"\n                                type: string\n                              token:\n                                example: \"976307363\"\n                                type: string\n                              txnAmt4d:\n                                example: 1000\n                                format: int64\n                                type: number\n                              txnCcy:\n                                example: \"978\"\n                                type: string\n                              txnCtry:\n                                example: IRL\n                                type: string\n                              txnDesc:\n                                example: ABC Coffee Shop\n                                type: string\n                              txnStatCode:\n                                example: A\n                                type: string\n                              txnType:\n                                example: A\n                                type: string\n                            type: object\n                          type:\n                            enum:\n                              - CARD_MERCHANT\n                              - CARD_ATM\n                            type: string\n                        title: RelatedPartyCardPayment\n                        type: object\n                    title: RelatedParty\n                  taxAmount:\n                    description: The amount of the tax, if any (e.g. Stamp duty for ATM transactions)\n                    example: 0\n                    format: int64\n                    type: integer\n                  txnId:\n                    description: The id of this side of the transaction (each transaction has two sides - a to and a from). This is used to get the details of the transaction.\n                    example: 30157\n                    format: int64\n                    type: integer\n                  type:\n                    description: |\n                      Retrieve a filtered list of transactions against an account.\n                      * `LODGEMENT` - Bank Transfer received\n                      * `PIS_LODGEMENT` - Fire Open Payments Lodgement received\n                      * `MANUAL_TRANSFER` - Manual Transfer to\n                      * `WITHDRAWAL` - Bank Transfer sent\n                      * `REVERSAL` - Credit Reversal\n                      * `INTERNAL_TRANSFER_TO` - Internal Transfer sent (between two of my accounts of the same currency)\n                      * `INTERNAL_TRANSFER_FROM` - Internal Transfer received (between two of my accounts of the same currency)\n                      * `WITHDRAWAL_RETURNED` - Bank Transfer sent returned\n                      * `LODGEMENT_REVERSED` - Bank Transfer received returned\n                      * `FX_INTERNAL_TRANSFER_FROM` - FX Internal Transfer received (between two of my accounts of different currency)\n                      * `FX_INTERNAL_TRANSFER_TO` - FX Internal Transfer sent (between two of my accounts of different currency)\n                      * `CARD_POS_CONTACT_DEBIT` - Card used in store; read by magnetic stripe or pin\n                      * `CARD_POS_CONTACT_CREDIT` - Card used in store; read by magnetic stripe or pin\n                      * `CARD_POS_CONTACTLESS_DEBIT` - Card used in store; read by NFC\n                      * `CARD_POS_CONTACTLESS_CREDIT` - Card used in store; read by NFC\n                      * `CARD_ECOMMERCE_DEBIT` - Card used on the internet\n                      * `CARD_ECOMMERCE_CREDIT` - Card used on the internet\n                      * `CARD_ATM_DEBIT` - Card used in an ATM\n                      * `CARD_ATM_CREDIT` - Card used in an ATM\n                      * `CARD_INTERNATIONAL_POS_CONTACT_DEBIT` - Card used in store in non-processing currency; read by magnetic stripe or pin\n                      * `CARD_INTERNATIONAL_POS_CONTACT_CREDIT` - Card used in store in non-processing currency; read by magnetic stripe or pin\n                      * `CARD_INTERNATIONAL_POS_CONTACTLESS_DEBIT` - Card used in store in non-processing currency; read by NFC\n                      * `CARD_INTERNATIONAL_POS_CONTACTLESS_CREDIT` - Card used in store in non-processing currency; read by NFC\n                      * `CARD_INTERNATIONAL_ECOMMERCE_DEBIT\t` - Card used on the internet in non-processing currency\n                      * `CARD_INTERNATIONAL_ECOMMERCE_CREDIT` - Card used on the internet in non-processing currency\n                      * `CARD_INTERNATIONAL_ATM_DEBIT` - Card used in an ATM in non-processing currency\n                      * `CARD_INTERNATIONAL_ATM_CREDIT` - Card used in an ATM in non-processing currency\n                      * `CARD_POS_CONTACT_DEBIT_REVERSAL` - Card used in store; read by magnetic stripe or pin - reversed\n                      * `CARD_POS_CONTACT_CREDIT_REVERSAL` - Card used in store; read by magnetic stripe or pin - reversed\n                      * `CARD_POS_CONTACTLESS_DEBIT_REVERSAL` - Card used in store; read by NFC - reversed\n                      * `CARD_POS_CONTACTLESS_CREDIT_REVERSAL` - Card used in store; read by NFC - reversed\n                      * `CARD_ECOMMERCE_DEBIT_REVERSAL\t` - Card used on the internet - reversed\n                      * `CARD_ECOMMERCE_CREDIT_REVERSAL` - Card used on the internet - reversed\n                      * `CARD_ATM_DEBIT_REVERSAL` - Card used in an ATM - reversed\n                      * `CARD_ATM_CREDIT_REVERSAL` - Card used in an ATM - reversed\n                      * `CARD_INTERNATIONAL_POS_CONTACT_DEBIT_REVERSAL` - Card used in store in non-processing currency; read by magnetic stripe or pin - reversed\n                      * `CARD_INTERNATIONAL_POS_CONTACT_CREDIT_REVERSAL` - Card used in store in non-processing currency; read by magnetic stripe or pin - reversed\n                      * `CARD_INTERNATIONAL_POS_CONTACTLESS_DEBIT_REVERSAL` - Card used in store in non-processing currency; read by NFC - reversed\n                      * `CARD_INTERNATIONAL_POS_CONTACTLESS_CREDIT_REVERSAL` - One or more of the transaction types above. This field can be repeated multiple times to allow for multiple transaction types.\n                      * `CARD_INTERNATIONAL_ECOMMERCE_DEBIT_REVERSAL` - Card used in store in non-processing currency; read by NFC - reversed\n                      * `CARD_INTERNATIONAL_ECOMMERCE_CREDIT_REVERSAL` - Card used in store in non-processing currency; read by NFC - reversed\n                      * `CARD_INTERNATIONAL_ATM_DEBIT_REVERSAL` - Card used on the internet in non-processing currency - reversed\n                      * `CARD_INTERNATIONAL_ATM_CREDIT_REVERSAL` - Card used on the internet in non-processing currency - reversed\n                    example: WITHDRAWAL\n                    type: string\n                title: Transaction\n                type: object\n          description: An array of transaction objects for the account with a count (`total`).\n      summary: List transactions for an account\n      tags:\n        - Transactions\n  \"/accounts/{ican}/transactions/filter\":\n    get:\n      description: |\n        Retrieve a filtered list of transactions against an account.\n        * `dateRangeFrom` - A millisecond epoch time specifying the date range start date.\n        * `dateRangeTo` - A millisecond epoch time specifying the date range end date.\n        * `searchKeyword` - Search term to filter by from the reference field (`myRef`).\n        * `transactionTypes` - One or more of the transaction types above. This field can be repeated multiple times to allow for multiple transaction types.\n      operationId: getTransactionsFilteredById\n      parameters:\n        - in: path\n          name: ican\n          required: true\n          schema:\n            description: The ican of the account to retrieve\n            format: int64\n            type: integer\n        - in: query\n          name: dateRangeFrom\n          required: true\n          schema:\n            description: A millisecond epoch time specifying the date range start date.\n            format: int64\n            type: number\n        - in: query\n          name: dateRangeTo\n          required: true\n          schema:\n            description: A millisecond epoch time specifying the date range end date.\n            format: int64\n            type: number\n        - in: query\n          name: searchKeyword\n          required: true\n          schema:\n            description: Search term to filter by from the reference field (`myRef`).\n            type: string\n        - in: query\n          name: transactionTypes\n          required: true\n          schema:\n            description: One or more of the transaction types above. This field can be repeated multiple times to allow for multiple transaction types.\n            items:\n              type: string\n            type: array\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/paths/~1accounts~1%7Bican%7D~1transactions/get/responses/200/content/application~1json/schema\"\n          description: An array of transaction objects for the account with a count (`total`) filtered by the specified query parameter.\n      summary: Filtered list of transactions for an account\n      tags:\n        - Transactions\n  /apps:\n    post:\n      description: Create a new API Application with specified permissions\n      operationId: createApiApplication\n      requestBody:\n        content:\n          application/json:\n            schema:\n              properties:\n                applicationName:\n                  description: A name for the API Application to help you identify it\n                  example: Batch Processing API\n                  type: string\n                enabled:\n                  description: Whether or not this API Application can be used\n                  example: true\n                  type: boolean\n                expiry:\n                  description: The date that this API Application can no longer be used.\n                  example: 2019-08-22T07:48:56.460Z\n                  format: date-time\n                  type: string\n                ican:\n                  description: The ICAN of one of your Fire accounts. Restrict this API Application to a certan account.\n                  format: int64\n                  type: integer\n                numberOfPayeeApprovalsRequired:\n                  description: Number of approvals required to create a payee in a batch\n                  example: 1\n                  type: integer\n                numberOfPaymentApprovalsRequired:\n                  description: Number of approvals required to process a payment in a batch\n                  example: 1\n                  type: integer\n                permissions:\n                  description: The list of permissions required\n                  example:\n                    - PERM_BUSINESS_POST_PAYMENT_REQUEST\n                    - PERM_BUSINESS_GET_ASPSPS\n                  items:\n                    type: string\n                  type: array\n              title: NewApiApplication\n              type: object\n        description: Details of the new API Application\n        required: true\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                properties:\n                  applicationId:\n                    description: The ID of the API Application\n                    example: 45345\n                    format: int64\n                    type: integer\n                  clientId:\n                    description: The Client ID of the new API Application\n                    example: 4ADFB67A-0F5B-4A9A-9D74-34437250045C\n                    type: string\n                  clientKey:\n                    description: The Client Key of the new API Application\n                    example: 4ADFB67A-0F5B-4A9A-9D74-34437250045C\n                    type: string\n                  enabled:\n                    description: Whether or not this API Application can be used\n                    example: true\n                    type: boolean\n                  expiry:\n                    description: The date that this API Application can no longer be used.\n                    example: 2019-08-22T07:48:56.460Z\n                    format: date-time\n                    type: string\n                  ican:\n                    description: The ICAN of one of your Fire accounts. Restrict this API Application to a certan account.\n                    format: int64\n                    type: integer\n                  numberOfPayeeApprovalsRequired:\n                    description: Number of approvals required to create a payee in a batch\n                    example: 1\n                    type: integer\n                  numberOfPaymentApprovalsRequired:\n                    description: Number of approvals required to process a payment in a batch\n                    example: 1\n                    type: integer\n                  refreshToken:\n                    description: The Refresh Token of the new API Application\n                    example: 4ADFB67A-0F5B-4A9A-9D74-34437250045C\n                    type: string\n                title: ApiApplication\n                type: object\n          description: API Application created successfully\n      summary: Create a new API Application\n      tags:\n        - API\n  /apps/accesstokens:\n    post:\n      description: Authenticate with the API.\n      operationId: authenticate\n      requestBody:\n        content:\n          application/json:\n            schema:\n              properties:\n                clientId:\n                  description: The Client ID for this API Application\n                  example: 4ADFB67A-0F5B-4A9A-9D74-34437250045C\n                  type: string\n                clientSecret:\n                  description: The SHA256 hash of the nonce above and the app’s Client Key. The Client Key will only be shown to you when you create the app, so don’t forget to save it somewhere safe. SECRET=( `/bin/echo -n $NONCE$CLIENT_KEY | sha256sum` ).\n                  example: 4ADFB67A-0F5B-4A9A-9D74-34437250045C\n                  type: string\n                grantType:\n                  description: Always `AccessToken`. (This will change to `refresh_token` in a future release.)\n                  enum:\n                    - AccessToken\n                  type: string\n                nonce:\n                  description: A random non-repeating number used as a salt for the `clientSecret` below. The simplest nonce is a unix time.\n                  example: 728345638475\n                  format: int64\n                  type: integer\n                refreshToken:\n                  description: The Refresh Token for this API Application\n                  example: 4ADFB67A-0F5B-4A9A-9D74-34437250045C\n                  type: string\n              title: Authentication\n              type: object\n        description: Authentication data\n        required: true\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                properties:\n                  accessToken:\n                    description: The App Bearer Access Token you can use in further API calls.\n                    example: 4ADFB67A-0F5B-4A9A-9D74-34437250045C\n                    type: string\n                  apiApplicationId:\n                    description: The ID of the application you are using.\n                    example: 433\n                    format: int64\n                    type: integer\n                  businessId:\n                    description: The business ID for the business.\n                    example: 248\n                    format: int64\n                    type: integer\n                  expiry:\n                    description: The expiry date and time for this token (ISO-8601).\n                    example: 2020-10-22T07:48:56.460Z\n                    format: date-time\n                    type: string\n                  permissions:\n                    description: The permissions assigned to the Access Token as an array of strings. This provides information on what API access it is allowed. See the section on Scope below.\n                    example:\n                      - PERM_BUSINESSES_GET_ACCOUNTS\n                      - PERM_BUSINESSES_GET_ACCOUNT_TRANSACTIONS\n                    items:\n                      type: string\n                    type: array\n                title: AccessToken\n                type: object\n          description: Successfully authenticated\n      security: []\n      summary: Authenticate with the API.\n      tags:\n        - Authentication\n  /aspsps:\n    get:\n      description: |\n        Returns all ASPSPs (Account Servicing Payment Service Provider) / banks. The list can be filtered by currency. You will need to enable the `PERM_BUSINESS_GET_ASPSPS` permission to use this endpoint.\n        ***This endpoint is only required if you intend to host the “Select ASPSP / bank” page yourself.***\n      operationId: getListOfAspsps\n      parameters:\n        - description: The three letter code for the currency - either `EUR` or `GBP`. Use this to filter the list for banks that can be used to pay in a certain currency.\n          example: EUR\n          in: query\n          name: currency\n          required: false\n          schema:\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                properties:\n                  aspsps:\n                    items:\n                      properties:\n                        alias:\n                          description: The name of the ASPSP / bank.\n                          example: Demo Bank\n                          type: string\n                        aspspUuid:\n                          description: The UUID associated with the ASPSP / bank.\n                          example: 4ADFB67A-0F5B-4A9A-9D74-34437250045C\n                          type: string\n                        country:\n                          properties:\n                            code:\n                              description: The 2-letter code for the country - e.g. `IE`, `GP`...\n                              example: GB\n                              type: string\n                            description:\n                              description: The name of the country\n                              example: United Kingdom\n                              type: string\n                          title: Country\n                          type: object\n                        currency:\n                          $ref: \"#/paths/~1accounts/get/responses/200/content/application~1json/schema/properties/accounts/items/properties/currency\"\n                        dateCreated:\n                          description: The date the ASPSP / bank was created.\n                          example: 2019-08-22T07:48:56.460Z\n                          format: date-time\n                          type: string\n                        lastUpdated:\n                          description: The date the ASPSP / bank was last updated.\n                          example: 2019-08-22T07:48:56.460Z\n                          format: date-time\n                          type: string\n                        logoUrl:\n                          description: A link to the ASPSP / bank's logo in SVG format.\n                          example: https://assets.fire.com/pisp/demo.svg\n                          type: string\n                      title: Aspsp\n                      type: object\n                    type: array\n                  total:\n                    description: The total number of ASPSPs in the list.\n                    example: 10\n                    type: integer\n                title: Aspsps\n                type: object\n          description: |\n            A list of ASPSPs the customers can use to pay a payment.\n      summary: Get list of ASPSPs / Banks\n      tags:\n        - Open Banking\n  /batches:\n    get:\n      description: |\n        Returns the list of batch with the specified types and statuses.\n      operationId: getBatches\n      parameters:\n        - in: query\n          name: batchStatus\n          schema:\n            description: The status of the batch if internal transfer.\n            enum:\n              - SUBMITTED\n              - REMOVED\n              - SUCCEEDED\n              - FAILED\n            example: SUBMITTED\n            type: string\n        - in: query\n          name: batchTypes\n          schema:\n            description: The type of the batch. Can be one of the 3 listed enums.\n            enum:\n              - INTERNAL_TRANSFER\n              - BANK_TRANSFER\n              - NEW_PAYEE\n            example: INTERNAL_TRANSFER\n            type: string\n        - in: query\n          name: orderBy\n          schema:\n            description: You can order the batches by date. No other options at this time\n            enum:\n              - DATE\n            example: DATE\n            type: string\n        - in: query\n          name: order\n          schema:\n            description: You can order the batches by ascending or descending order.\n            enum:\n              - DESC\n              - ASC\n            example: DESC\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                properties:\n                  items:\n                    items:\n                      properties:\n                        amount:\n                          description: The amount of funds to send. In cent or pence\n                          example: 10000\n                          format: int64\n                          type: integer\n                        amountAfterCharges:\n                          description: The amount of the transfer after fees and taxes. in pence or cent.\n                          example: 10000\n                          format: int64\n                          type: integer\n                        batchItemUuid:\n                          description: A UUID for this item.\n                          example: F2AF3F2B-4406-4199-B249-B354F2CC6019\n                          type: string\n                        dateCreated:\n                          description: The datestamp the batch was created - ISO format - e.g. 2018-04-04T00:53:21.910Z\n                          example: 2021-04-04T10:48:53.540Z\n                          format: date-time\n                          type: string\n                        feeAmount:\n                          description: The fee charged by fire.com for the payment. In pence or cent.\n                          example: 0\n                          format: int64\n                          type: integer\n                        icanFrom:\n                          description: The Fire account ID of the source account.\n                          example: 2150\n                          format: int64\n                          type: integer\n                        icanTo:\n                          description: The Fire account ID for the fire.com account the funds are sent to.\n                          example: 1002\n                          format: int64\n                          type: integer\n                        lastUpdated:\n                          description: The datestamp of the last action on this batch - ISO format - e.g. 2018-04-04T10:48:53.540Z\n                          example: 2021-04-04T10:48:53.540Z\n                          format: date-time\n                          type: string\n                        ref:\n                          description: The reference on the transaction.\n                          example: Testing a transfer via batch\n                          type: string\n                        refId:\n                          description: The ID of the resulting payment in your account. Can be used to retrieve the transaction using the https://api.fire.com/business/v1/accounts/{accountId}/transactions/{refId} endpoint.\n                          example: 123782\n                          format: int64\n                          type: integer\n                        result:\n                          description: The outcome of the attempted transaction.\n                          properties:\n                            code:\n                              example: 500001\n                              format: int64\n                              type: integer\n                            message:\n                              example: SUCCESS\n                              type: string\n                          type: object\n                        status:\n                          description: status of the batch if internal trasnfer\n                          enum:\n                            - SUBMITTED\n                            - REMOVED\n                            - SUCCEEDED\n                            - FAILED\n                          example: SUCCEEDED\n                          type: string\n                        taxAmount:\n                          description: Any taxes/duty collected by fire.com for this payments (e.g. stamp duty etc). In pence or cent.\n                          example: 0\n                          format: int64\n                          type: integer\n                      title: BatchItem\n                      type: object\n                    type: array\n                  total:\n                    description: total number of batches returned\n                    example: 1\n                    format: int64\n                    type: integer\n                title: BatchItems\n                type: object\n          description: List all batches.\n      summary: List batches\n      tags:\n        - Payment Batches\n    post:\n      description: This is the first step in creating a batch payment.\n      operationId: createBatchPayment\n      requestBody:\n        content:\n          application/json:\n            schema:\n              properties:\n                batchName:\n                  description: An optional name you give to the batch at creation time.\n                  example: January 2018 Payroll\n                  type: string\n                callBackUrl:\n                  description: An optional POST URL that all events for this batch will be sent to.\n                  example: https://my.webserver.com/cb/payroll\n                  type: string\n                currency:\n                  description: GBP or EUR\n                  example: EUR\n                  type: string\n                jobNumber:\n                  description: An optional job number you can give to the batch to help link it to your own system.\n                  example: 2022-01-PR\n                  type: string\n                type:\n                  description: The type of the batch - can be one of the listed 3\n                  enum:\n                    - BANK_TRANSFER\n                    - INTERNAL_TRANSFER\n                  type: string\n              title: NewBatch\n              type: object\n        description: Details of the batch payment\n        required: true\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                properties:\n                  batchUuid:\n                    description: A UUID for this item.\n                    example: F2AF3F2B-4406-4199-B249-B354F2CC6019\n                    type: string\n                title: NewBatchResponse\n                type: object\n          description: Batch created successfully\n      summary: Create a new bath of payments\n      tags:\n        - Payment Batches\n    put:\n      description: |\n        Submits the Batch (for approval in the case of a **BANK_TRANSFER**). If this is an **INTERNAL_TRANSFER** batch, the transfers are immediately queued for processing. If this is a **BANK_TRANSFER** batch, this will trigger requests for approval to the firework mobile apps of authorised users. Once those users approve the batch, it is queued for processing.\n\n        You can only submit a batch while it is in the OPEN state.\n      operationId: submitBatch\n      responses:\n        \"204\":\n          description: No body is returned - a HTTP 204 No Content response signifies the call was successful.\n      summary: Submit a batch for approval\n      tags:\n        - Payment Batches\n  \"/batches/{batchUuid}\":\n    delete:\n      description: Cancels the Batch. You can only cancel a batch before it is submitted for approval (while it is in the OPEN state).\n      operationId: cancelBatchPayment\n      parameters:\n        - in: path\n          name: batchUuid\n          required: true\n          schema:\n            description: The uuid of the batch.\n            example: 4ADFB67A-0F5B-4A9A-9D74-34437250045C\n            type: string\n      responses:\n        \"200\":\n          description: Batch payment deleted successfully.\n      summary: Cancel a batch\n      tags:\n        - Payment Batches\n    get:\n      description: Returns the details of the batch specified in the API endpoint - {batchUuid}.\n      operationId: getDetailsSingleBatch\n      parameters:\n        - in: path\n          name: batchUuid\n          required: true\n          schema:\n            description: The uuid of the batch.\n            example: 4ADFB67A-0F5B-4A9A-9D74-34437250045C\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/paths/~1batches/get/responses/200/content/application~1json/schema/properties/items/items\"\n          description: Returns the details of the batch specified in the API endpoint - {batchUuid}.\n      summary: Get details of a single Batch\n      tags:\n        - Payment Batches\n  \"/batches/{batchUuid}/approvals\":\n    get:\n      description: Returns a list of approvers for this batch.\n      operationId: getListofApproversForBatch\n      parameters:\n        - in: path\n          name: batchUuid\n          required: true\n          schema:\n            description: The uuid of the batch.\n            example: 4ADFB67A-0F5B-4A9A-9D74-34437250045C\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                properties:\n                  approvals:\n                    items:\n                      properties:\n                        emailAddress:\n                          description: User email address\n                          example: jane.doe@example.com\n                          type: string\n                        firstName:\n                          example: Jane\n                          type: string\n                        lastName:\n                          example: Doe\n                          type: string\n                        lastUpdated:\n                          description: The datestamp of the last action on this batch - ISO format - e.g. 2018-04-04T10:48:53.540Z\n                          example: 2021-04-04T10:48:53.540Z\n                          format: date-time\n                          type: string\n                        mobileNumber:\n                          example: 353871234567\n                          type: string\n                        status:\n                          example: PENDING_APPROVAL\n                          type: string\n                        userId:\n                          description: User id assigned by fire.com\n                          example: 3138\n                          format: int64\n                          type: integer\n                      type: object\n                    type: array\n                title: BatchApprovers\n                type: object\n          description: A list of approvers for this batch.\n      summary: List Approvers for a Batch\n      tags:\n        - Payment Batches\n  \"/batches/{batchUuid}/banktransfers\":\n    get:\n      description: Returns a paginated list of items in the specified batch.\n      operationId: getItemsBatchBankTransfer\n      parameters:\n        - in: path\n          name: batchUuid\n          required: true\n          schema:\n            description: The uuid of the batch.\n            example: 4ADFB67A-0F5B-4A9A-9D74-34437250045C\n            type: string\n        - in: query\n          name: offset\n          schema:\n            description: The page offset. Defaults to 0. This is the record number that the returned list will start at. E.g. offset = 40 and limit = 20 will return records 40 to 59.\n            example: \"0\"\n            format: int64\n            type: integer\n        - in: query\n          name: limit\n          schema:\n            description: The number of records to return. Defaults to 10 - max is 200.\n            example: \"10\"\n            format: int64\n            type: integer\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/paths/~1batches/get/responses/200/content/application~1json/schema\"\n          description: A fire.com list object of Batch Items (Internal transfers or Bank transfers).\n      summary: List items in a Batch\n      tags:\n        - Payment Batches\n    post:\n      description: |\n        There are two ways to process bank transfers - by Payee ID (**Mode 1**) or by Payee Account Details (**Mode 2**).\n\n        **Mode 1:** Use the payee IDs of existing approved payees set up against your account. These batches can be approved in the normal manner.\n\n        **Mode 2:** Use the account details of the payee. In the event that these details correspond to an existing approved payee, the batch can be approved as normal. If the account details are new, a batch of New Payees will automatically be created. This batch will need to be approved before the Payment batch can be approved. These payees will then exist as approved payees for future batches.\n      operationId: addBankTransferBatchPayment\n      parameters:\n        - in: path\n          name: batchUuid\n          required: true\n          schema:\n            description: The uuid of the batch.\n            example: 4ADFB67A-0F5B-4A9A-9D74-34437250045C\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              oneOf:\n                - properties:\n                    amount:\n                      description: The value of the transaction\n                      example: 500\n                      format: int64\n                      type: integer\n                    destAccountHolderName:\n                      description: The destination account holder name\n                      example: John Smith\n                      type: string\n                    destAccountNumber:\n                      description: The destination Account Number if a GBP bank transfer\n                      example: \"12345678\"\n                      type: string\n                    destIban:\n                      description: The destination IBAN if a Euro Bank transfer\n                      example: IE00AIBK93123412341234\n                      type: string\n                    destNsc:\n                      description: The destination Nsc if a GBP bank transfer\n                      example: \"123456\"\n                      type: string\n                    icanFrom:\n                      description: The Fire account ID for the fire.com account the funds are taken from.\n                      example: 2001\n                      format: int64\n                      type: integer\n                    myRef:\n                      description: The reference on the transaction for your records - not shown to the beneficiary.\n                      example: Payment to John Smith for Consultancy in device.\n                      type: string\n                    payeeType:\n                      description: Use ACCOUNT_DETAILS if you are providing account numbers/sort codes/IBANs (Mode 2). Specify the account details in the destIban, destAccountHolderName, destNsc or destAccountNumber fields as appropriate.\n                      enum:\n                        - ACCOUNT_DETAILS\n                      example: ACCOUNT_DETAILS\n                      type: string\n                    yourRef:\n                      description: The reference on the transaction - displayed on the beneficiary bank statement.\n                      example: ACME LTD - INV 23434\n                      type: string\n                  title: BatchItemBankTransferMode2\n                  type: object\n                - properties:\n                    amount:\n                      description: The value of the transaction\n                      example: 500\n                      format: int64\n                      type: integer\n                    icanFrom:\n                      description: The Fire account ID for the fire.com account the funds are taken from.\n                      example: 2001\n                      format: int64\n                      type: integer\n                    myRef:\n                      description: The reference on the transaction for your records - not shown to the beneficiary.\n                      example: Payment to John Smith for Consultancy in device.\n                      type: string\n                    payeeId:\n                      description: The ID of the existing or automatically created payee\n                      example: 15002\n                      format: int64\n                      type: integer\n                    payeeType:\n                      description: Use PAYEE_ID if you are paying existing approved payees (Mode 1).\n                      enum:\n                        - PAYEE_ID\n                      example: PAYEE_ID\n                      type: string\n                    yourRef:\n                      description: The reference on the transaction - displayed on the beneficiary bank statement.\n                      example: ACME LTD - INV 23434\n                      type: string\n                  title: BatchItemBankTransferMode1\n                  type: object\n        description: Details of **Mode 1** \u0026 **Mode 2**.\n        required: true\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/paths/~1batches~1%7BbatchUuid%7D~1internaltransfers/post/responses/200/content/application~1json/schema\"\n          description: Batch payment added successfully. **Note*** Please use batchUuid when submitting a batch, not batchItemUuid.\n      summary: Add payment for an bank transfers\n      tags:\n        - Payment Batches\n  \"/batches/{batchUuid}/banktransfers/{itemUuid}\":\n    delete:\n      description: Removes a Payment from the Batch (Bank Transfers). You can only remove payments before the batch is submitted for approval (while it is in the OPEN state).\n      operationId: deleteBankTransferBatchPayment\n      parameters:\n        - in: path\n          name: batchUuid\n          required: true\n          schema:\n            description: The uuid of the batch.\n            example: 4ADFB67A-0F5B-4A9A-9D74-34437250045C\n            type: string\n        - in: path\n          name: itemUuid\n          required: true\n          schema:\n            description: The uuid of the item to remove.\n            type: string\n      responses:\n        \"200\":\n          description: Batch payment deleted successfully.\n      summary: Remove a Payment from the Batch (Bank Transfers)\n      tags:\n        - Payment Batches\n  \"/batches/{batchUuid}/internaltransfers\":\n    get:\n      description: Returns a paginated list of items in the specified batch.\n      operationId: getItemsBatchInternalTrasnfer\n      parameters:\n        - in: path\n          name: batchUuid\n          required: true\n          schema:\n            description: The uuid of the batch.\n            example: 4ADFB67A-0F5B-4A9A-9D74-34437250045C\n            type: string\n        - in: query\n          name: offset\n          schema:\n            description: The page offset. Defaults to 0. This is the record number that the returned list will start at. E.g. offset = 40 and limit = 20 will return records 40 to 59.\n            example: \"0\"\n            format: int64\n            type: integer\n        - in: query\n          name: limit\n          schema:\n            description: The number of records to return. Defaults to 10 - max is 200.\n            example: \"10\"\n            format: int64\n            type: integer\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/paths/~1batches/get/responses/200/content/application~1json/schema\"\n          description: A fire.com list object of Batch Items (Internal transfers or Bank transfers).\n      summary: List items in a Batch\n      tags:\n        - Payment Batches\n    post:\n      description: Simply specify the source account, destination account, amount and a reference.\n      operationId: addInternalTransferBatchPayment\n      parameters:\n        - in: path\n          name: batchUuid\n          required: true\n          schema:\n            description: The uuid of the batch.\n            example: 4ADFB67A-0F5B-4A9A-9D74-34437250045C\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              properties:\n                amount:\n                  description: amount of funds to be transfered\n                  example: 10000\n                  format: int64\n                  type: integer\n                icanFrom:\n                  description: The account ID for the fire.com account the funds are taken from\n                  example: 2001\n                  format: int64\n                  type: integer\n                icanTo:\n                  description: The account ID for the fire.com account the funds are directed to\n                  example: 3221\n                  format: int64\n                  type: integer\n                ref:\n                  description: The reference on the transaction\n                  example: Moving funds to Operating Account\n                  type: string\n              title: BatchItemInternalTransfer\n              type: object\n        description: Details of the source account, destination account, amount and a reference.\n        required: true\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                properties:\n                  batchItemUuid:\n                    description: A Batch Item UUID for this item. Note* Do not confuse this for BatchUuid when submitting a batch.\n                    example: fba4a76a-ce51-4fc1-b562-98ec01299e4d\n                    type: string\n                title: NewBatchItemResponse\n                type: object\n          description: Batch payment added successfully. Note* Please use batchUuid when submitting a batch, not batchItemUuid.\n      summary: Add payment for an internal transfers\n      tags:\n        - Payment Batches\n  \"/batches/{batchUuid}/internaltransfers/{itemUuid}\":\n    delete:\n      description: Removes a Payment from the Batch (Internal Transfer). You can only remove payments before the batch is submitted for approval (while it is in the OPEN state).\n      operationId: deleteInternalTransferBatchPayment\n      parameters:\n        - in: path\n          name: batchUuid\n          required: true\n          schema:\n            description: The uuid of the batch.\n            example: 4ADFB67A-0F5B-4A9A-9D74-34437250045C\n            type: string\n        - in: path\n          name: itemUuid\n          required: true\n          schema:\n            description: The uuid of the item to remove.\n            example: 4ADFB67A-0F5B-4A9A-9D74-34437250045C\n            type: string\n      responses:\n        \"200\":\n          description: Batch payment deleted successfully.\n      summary: Remove a Payment from the Batch (Internal Transfer)\n      tags:\n        - Payment Batches\n  /cards:\n    get:\n      description: Returns a list of cards related to your fire.com account.\n      operationId: getListofCards\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                properties:\n                  cards:\n                    items:\n                      properties:\n                        blocked:\n                          description: Whether the card is blocked or not\n                          example: false\n                          type: boolean\n                        cardId:\n                          description: card id assigned by fire.com\n                          example: 51\n                          format: int64\n                          type: integer\n                        dateCreated:\n                          description: The date-time the card was created\n                          example: 2017-01-19T16:38:15.803Z\n                          format: date-time\n                          type: string\n                        emailAddress:\n                          description: card user email address\n                          example: user@example.com\n                          type: string\n                        eurIcan:\n                          description: identifier for the eur fire.com account (assigned by fire.com)\n                          example: 2150\n                          format: int64\n                          type: integer\n                        expiryDate:\n                          description: card expiry date\n                          example: 2019-01-31T00:00:00.000Z\n                          format: date-time\n                          type: string\n                        firstName:\n                          description: card user first name\n                          example: John\n                          type: string\n                        gbpIcan:\n                          description: identifier for the gbp fire.com account (assigned by fire.com)\n                          example: 2152\n                          format: int64\n                          type: integer\n                        lastName:\n                          description: card user last name\n                          example: Doe\n                          type: string\n                        maskedPan:\n                          description: card number (masked)\n                          example: 537455******1111\n                          type: string\n                        provider:\n                          description: card provider\n                          enum:\n                            - MASTERCARD\n                          example: MASTERCARD\n                          type: string\n                        status:\n                          description: card status\n                          enum:\n                            - LIVE\n                            - CREATED_ACTIVE\n                            - CREATED_INACTIVE\n                            - DEACTIVATED\n                          example: LIVE\n                          type: string\n                        statusReason:\n                          description: reason for card status\n                          enum:\n                            - LOST_CARD\n                            - STOLEN_CARD\n                            - CARD_DESTROYED\n                          example: LOST_CARD\n                          type: string\n                        userId:\n                          description: card user id assigned by fire.com\n                          example: 3138\n                          format: int64\n                          type: integer\n                      title: Card\n                      type: object\n                    type: array\n                title: Cards\n                type: object\n          description: Successful response\n        \"401\":\n          $ref: \"#/paths/~1accounts/get/responses/401\"\n        \"403\":\n          $ref: \"#/paths/~1accounts/get/responses/401\"\n      summary: View List of Cards.\n      tags:\n        - Cards\n    post:\n      description: You can create multiple debit cards which can be linked to your fire.com accounts.\n      operationId: createNewCard\n      requestBody:\n        content:\n          application/json:\n            schema:\n              properties:\n                acceptFeesAndCharges:\n                  example: true\n                  type: boolean\n                addressType:\n                  enum:\n                    - HOME\n                    - BUSINESS\n                  example: BUSINESS\n                  type: string\n                cardPin:\n                  example: 5345\n                  type: string\n                eurIcan:\n                  example: 2150\n                  format: int64\n                  type: integer\n                gbpIcan:\n                  example: 2152\n                  format: int64\n                  type: integer\n                userId:\n                  example: 3245\n                  format: int64\n                  type: number\n              title: NewCard\n              type: object\n        description: Details of the new card\n        required: true\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                properties:\n                  cardId:\n                    example: 51\n                    format: int64\n                    type: integer\n                  expiryDate:\n                    example: 2019-01-31T00:00:00.000Z\n                    format: date-time\n                    type: string\n                  maskedPan:\n                    example: 537455******1111\n                    type: string\n                  status:\n                    enum:\n                      - CREATED_ACTIVE\n                      - CREATED_INACTIVE\n                    example: CREATED_ACTIVE\n                    type: string\n                title: NewCardResponse\n                type: object\n          description: Card created successfully\n      summary: Create a new debit card.\n      tags:\n        - Cards\n  /directdebits:\n    get:\n      description: |\n        Retrieve all direct debit payments associated with a direct debit mandate.\n        The permision needed to access this endpoint is PERM_BUSINESS_GET_DIRECT_DEBITS\n      operationId: getDirectDebitsForMandateUuid\n      parameters:\n        - description: The mandate UUID to retrieve\n          example: 1A07774B-1461-4595-BC4B-423B739712AF\n          in: query\n          name: mandateUuid\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                properties:\n                  directdebits:\n                    items:\n                      properties:\n                        amount:\n                          description: Value of the payment\n                          example: 100\n                          format: int64\n                          type: integer\n                        currency:\n                          $ref: \"#/paths/~1accounts/get/responses/200/content/application~1json/schema/properties/accounts/items/properties/currency\"\n                        dateCreated:\n                          description: Date the direct debit was created. Milliseconds since the epoch (1970).\n                          example: 2016-12-15T22:56:05.937Z\n                          format: date-time\n                          type: string\n                        directDebitReference:\n                          description: The direct debit reference.\n                          example: VODA-ABC453-1\n                          type: string\n                        directDebitUuid:\n                          description: The UUID for the direct debit payment\n                          example: 42de0705-e3f1-44fa-8c41-79973eb80eb2\n                          type: string\n                        isDDIC:\n                          description: DDIC is a Direct Debit Indemnity Claim (i.e.a refund). If if the DD is requested to be refunded it is marked isDDIC true.\n                          example: false\n                          type: boolean\n                        lastUpdated:\n                          description: Date the direct debit was last updated. Milliseconds since the epoch (1970).\n                          example: 2016-12-15T22:56:05.937Z\n                          format: date-time\n                          type: string\n                        mandateUUid:\n                          description: The UUID for the mandate\n                          example: f171b143-e3eb-47de-85a6-1c1f1108c701\n                          type: string\n                        originatorAlias:\n                          description: The Alias of the party who sets up the direct debit.\n                          example: Three\n                          type: string\n                        originatorName:\n                          description: The creator of the party who sets up the direct debit.\n                          example: Vodafone PLC\n                          type: string\n                        originatorReference:\n                          description: Set by party who sets up the direct debit.\n                          example: VODA-123456\n                          type: string\n                        schemeRejectReason:\n                          description: Reason why rejected\n                          example: eg. Instruction cancelled by payer\n                          type: string\n                        schemeRejectReasonCode:\n                          description: The reject code returned by the bank indicating an issue with the direct debit. Each ARRUD code represents a rejection reason.\n                          enum:\n                            - \"0\"\n                            - \"1\"\n                            - \"2\"\n                            - \"3\"\n                            - \"4\"\n                            - \"5\"\n                            - \"6\"\n                            - \"7\"\n                            - \"8\"\n                            - \"9\"\n                            - A\n                            - B\n                          example: for BACS (ARUDD) 0|1|2|3|5|6|7|8|9|A|B\n                          type: string\n                        status:\n                          description: |\n                            The statuses of the direct debit payments associated with the mandate.\n                            * 'RECIEVED' - Direct Debit has been recieved\n                            * 'REJECT_REQUESTED' - The direct debit has a rejected request associated with it\n                            * 'REJECT_READY_FOR_PROCESSING' \n                            * 'REJECT_RECORD_IN_PROGRESS'\n                            * 'REJECT_RECORDED'\n                            * 'REJECT_FILE_CREATED'\n                            * 'REJECT_FILE_SENT'\n                            * 'COLLECTED' - Direct debit collected\n                            * 'REFUND_REQUESTED' - Refund requested on direct debit\n                            * 'REFUND_RECORD_IN_PROGRESS' - Refund in progress on direct debit\n                            * 'REFUND_RECORDED'\n                            * 'REFUND_FILE_CREATED'\n                            * 'REFUND_FILE_SENT' \n                          enum:\n                            - RECIEVED\n                            - REJECT_REQUESTED\n                            - REJECT_READY_FOR_PROCESSING\n                            - REJECT_RECORD_IN_PROGRESS\n                            - REJECT_RECORDED\n                            - REJECT_FILE_CREATED\n                            - REJECT_FILE_SENT\n                            - COLLECTED\n                            - REFUND_REQUESTED\n                            - REFUND_RECORD_IN_PROGRESS\n                            - REFUND_RECORDED\n                            - REFUND_FILE_CREATED\n                            - REFUND_FILE_SENT\n                          example: RECIEVED\n                          type: string\n                        targetIcan:\n                          description: The ican of your fire account that the money was taken from\n                          example: 42\n                          format: int64\n                          type: integer\n                        targetPayeeId:\n                          description: The payee that was created when the DD was processed\n                          example: 12\n                          format: int64\n                          type: integer\n                        type:\n                          description: The type of the direct debit.\n                          enum:\n                            - FIRST_COLLECTION\n                            - ONGOING_COLLECTION\n                            - REPRESENTED_COLLECTION\n                            - FINAL_COLLECTION\n                          example: FIRST_COLLECTION\n                          type: string\n                      title: DirectDebit\n                      type: object\n                    type: array\n                  total:\n                    description: Number of direct debits found\n                    example: 1\n                    format: int64\n                    type: integer\n                title: DirectDebits\n                type: object\n          description: Retrieve all direct debit payments associated with a direct debit mandate.\n      summary: Get all DD payments associated with a direct debit mandate\n      tags:\n        - Direct Debits\n  \"/directdebits/{directDebitUuid}\":\n    get:\n      description: |\n        Retrieve all details of a single direct debit collection/payment, whether successful or not.\n        The permision needed to access this endpoint is **PERM_BUSINESS_GET_DIRECT_DEBIT**\n      operationId: getDirectDebitByUuid\n      parameters:\n        - in: path\n          name: directDebitUuid\n          required: true\n          schema:\n            description: The uuid of the direct debit to retrieve.\n            example: 4ADFB67A-0F5B-4A9A-9D74-34437250045C\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/paths/~1directdebits/get/responses/200/content/application~1json/schema/properties/directdebits/items\"\n          description: Retrieve all details of a single direct debit collection/payment\n      summary: Get the deails of a direct debit\n      tags:\n        - Direct Debits\n  \"/directdebits/{directDebitUuid}/reject\":\n    post:\n      description: |\n        This endpoint allows you to reject a direct debit payment where the status is still set to RECEIVED.\n        Permission name PERM_BUSINESS_POST_DIRECT_DEBIT_REJECT\n      operationId: rejectDirectDebit\n      parameters:\n        - in: path\n          name: directDebitUuid\n          required: true\n          schema:\n            description: The uuid of the direct debit to retrieve.\n            example: 4ADFB67A-0F5B-4A9A-9D74-34437250045C\n            type: string\n      responses:\n        \"204\":\n          description: 204 no content\n      summary: Reject a direct debit payment\n      tags:\n        - Direct Debits\n  /mandates:\n    get:\n      description: |\n        The permision needed to access this endpoint is PERM_BUSINESS_GET_MANDATES\n      operationId: getDirectDebitMandates\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                properties:\n                  mandates:\n                    items:\n                      properties:\n                        alias:\n                          description: The name of the alias\n                          example: Vodaphone\n                          type: string\n                        currency:\n                          $ref: \"#/paths/~1accounts/get/responses/200/content/application~1json/schema/properties/accounts/items/properties/currency\"\n                        dateCancelled:\n                          description: Date the direct debit was canceled. Milliseconds since the epoch (1970).\n                          example: 2016-12-15T22:56:05.937Z\n                          format: date-time\n                          type: string\n                        dateCompleted:\n                          description: Date the direct debit was completed. Milliseconds since the epoch (1970).\n                          example: 2016-12-15T22:56:05.937Z\n                          format: date-time\n                          type: string\n                        dateCreated:\n                          description: Date the direct debit was created. Milliseconds since the epoch (1970).\n                          example: 2016-12-15T22:56:05.937Z\n                          format: date-time\n                          type: string\n                        fireRejectionReason:\n                          description: Rejection reason if transaction is rejected\n                          enum:\n                            - ACCOUNT_DOES_NOT_ACCEPT_DIRECT_DEBITS\n                            - DDIC\n                            - ACCOUNT_NOT_FOUND\n                            - ACCOUNT_NOT_LIVE\n                            - CUSTOMER_NOT_FOUND\n                            - BUSINESS_NOT_LIVE\n                            - BUSINESS_NOT_FULL\n                            - PERSONAL_USER_NOT_LIVE\n                            - PERSONAL_USER_NOT_FULL\n                            - MANDATE_ALREADY_EXISTS\n                            - MANDATE_WITH_DIFERENT_ACCOUNT\n                            - NULL_MANDATE_REFERENCE\n                            - INVALID_ACCOUNT_CURRENCY\n                            - INVALID_MANDATE_REFERENCE\n                            - REQUESTED_BY_CUSTOMER_VIA_SUPPORT\n                            - CUSTOMER_ACCOUNT_CLOSED\n                            - CUSTOMER_DECEASED\n                            - ACCOUNT_TRANSFERRED\n                            - MANDATE_NOT_FOUND\n                            - ACCOUNT_TRANSFERRED_TO_DIFFERENT_ACCOUNT\n                            - INVALID_ACCOUNT_TYPE\n                            - MANDATE_EXPIRED\n                            - MANDATE_CANCELLED\n                            - REQUESTED_BY_CUSTOMER\n                          example: ACCOUNT_DOES_NOT_ACCEPT_DIRECT_DEBITS\n                          type: string\n                        lastUpdated:\n                          description: Date the direct debit was last updated. Milliseconds since the epoch (1970).\n                          example: 2016-12-15T22:56:05.937Z\n                          format: date-time\n                          type: string\n                        latestDirectDebitAmount:\n                          description: The value of largest direct debit collected\n                          example: 2\n                          format: int64\n                          type: integer\n                        latestDirectDebitDate:\n                          description: The date of latest direct debit collected\n                          example: 2016-12-15T22:56:05.937Z\n                          format: date-time\n                          type: string\n                        mandateReference:\n                          description: the reference of the mandate\n                          example: CRZ-102190123\n                          type: string\n                        mandateUuid:\n                          description: The UUID for the  mandate\n                          example: 28d627c3-1889-44c8-ae59-6f6b20239260\n                          type: string\n                        numberOfDirectDebitCollected:\n                          description: The number of direct debits collected\n                          example: 2\n                          format: int64\n                          type: integer\n                        originatorAlias:\n                          description: The name of the alias\n                          example: Vodaphone PLC\n                          type: string\n                        originatorLogoUrlLarge:\n                          description: Logo url from party who sets up the direct debit.\n                          example: originatorLogoLarge\n                          type: string\n                        originatorLogoUrlSmall:\n                          description: Logo url from party who sets up the direct debit.\n                          example: originatorLogoSmall\n                          type: string\n                        originatorName:\n                          description: The creator of the party who sets up the direct debit.\n                          example: Vodafone PLC\n                          type: string\n                        originatorReference:\n                          description: Set by party who sets up the direct debit.\n                          example: VODA-123456\n                          type: string\n                        schemeCancelReason:\n                          description: Reason for cancelation\n                          example: e.g. Instruction cancelled by payer\n                          type: string\n                        schemeCancelReasonCode:\n                          description: The cancelation code returned by the bank indicating an issue with the direct debit. Each ARRUD code represents a rejection reason.\n                          example: For BACS (ADDACS) - 0|1|2|3|B|C|D|E|R\n                          type: string\n                        status:\n                          description: |\n                            The status of the mandate.\n                            * 'CREATED'\n                            * 'LIVE'\n                            * 'REJECT_REQUESTED'\n                            * 'REJECT_RECORD_IN_PROGRESS'\n                            * 'REJECT_RECORDED'\n                            * 'REJECT_FILE_CREATED'\n                            * 'REJECT_FILE_SENT'\n                            * 'CANCEL_REQUESTED'\n                            * 'CANCEL_RECORD_IN_PROGRESS'\n                            * 'CANCEL_RECORDED'\n                            * 'CANCEL_FILE_CREATED'\n                            * 'CANCEL_FILE_SENT'\n                            * 'COMPLETE'\n                            * 'DORMANT'\n                          enum:\n                            - CREATED\n                            - LIVE\n                            - REJECT_REQUESTED\n                            - REJECT_RECORD_IN_PROGRESS\n                            - REJECT_RECORDED\n                            - REJECT_FILE_CREATED\n                            - REJECT_FILE_SENT\n                            - CANCEL_REQUESTED\n                            - CANCEL_RECORD_IN_PROGRESS\n                            - CANCEL_RECORDED\n                            - CANCEL_FILE_CREATED\n                            - CANCEL_FILE_SENT\n                            - COMPLETE\n                            - DORMANT\n                          example: RECIEVED\n                          type: string\n                        targetIcan:\n                          description: Identifier for the fire.com account (assigned by fire.com)\n                          example: 1\n                          format: int64\n                          type: integer\n                        valueOfDirectDebitCollected:\n                          description: The value of direct debits collected\n                          example: 2\n                          format: int64\n                          type: integer\n                      title: Mandate\n                      type: object\n                    type: array\n                  total:\n                    description: Number of direct debits found\n                    example: 1\n                    format: int64\n                    type: integer\n                title: Mandates\n                type: object\n          description: List all direct debit mandates.\n      summary: List all direct debit mandates\n      tags:\n        - Direct Debits\n  \"/mandates/{mandateUuid}\":\n    get:\n      description: |\n        Retrieve all details for a direct debit mandate.\n        The permision needed to access this endpoint is PERM_BUSINESS_GET_MANDATE\n      operationId: getMandate\n      parameters:\n        - in: path\n          name: mandateUuid\n          required: true\n          schema:\n            description: The uuid of the mandate to retrieve.\n            example: 4ADFB67A-0F5B-4A9A-9D74-34437250045C\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/paths/~1mandates/get/responses/200/content/application~1json/schema/properties/mandates/items\"\n          description: Retrieve all details for a direct debit mandate.\n      summary: Get direct debit mandate details\n      tags:\n        - Direct Debits\n    post:\n      description: |\n        Update Direct Debit Mandate Alias\n        The permision needed to access this endpoint is PERM_BUSINESS_PUT_MANDATE\n      operationId: updateMandateAlias\n      parameters:\n        - in: path\n          name: mandateUuid\n          required: true\n          schema:\n            description: The uuid of the mandate to update.\n            example: 4ADFB67A-0F5B-4A9A-9D74-34437250045C\n            type: string\n      responses:\n        \"204\":\n          description: 204 no content\n      summary: Update a direct debit mandate alias\n      tags:\n        - Direct Debits\n  \"/mandates/{mandateUuid}/activate\":\n    post:\n      description: |\n        This endpoint can only be used to activate a direct debit mandate when it is in the status REJECT_REQUESTED (even if the account has direct debits disabled). This action will also enable the account for direct debits if it was previously set to be disabled.\n        The permision needed to access this endpoint is PERM_BUSINESS_POST_MANDATE_ACTIVATE\n      operationId: activateMandate\n      parameters:\n        - in: path\n          name: mandateUuid\n          required: true\n          schema:\n            description: The uuid of the mandate to activate.\n            example: 4ADFB67A-0F5B-4A9A-9D74-34437250045C\n            type: string\n      responses:\n        \"204\":\n          description: 204 no content\n      summary: Activate a direct debit mandate\n      tags:\n        - Direct Debits\n  \"/mandates/{mandateUuid}/cancel\":\n    post:\n      description: |\n        This endpoint allows you to cancel a direct debit mandate.\n        The permision needed to access this endpoint is PERM_BUSINESS_POST_MANDATE_CANCEL\n      operationId: cancelMandateByUuid\n      parameters:\n        - in: path\n          name: mandateUuid\n          required: true\n          schema:\n            description: The uuid of the mandate to cancel.\n            example: 4ADFB67A-0F5B-4A9A-9D74-34437250045C\n            type: string\n      responses:\n        \"204\":\n          description: 204 no content\n      summary: Cancel a direct debit mandate\n      tags:\n        - Direct Debits\n  /payees:\n    get:\n      description: |\n        Returns all your payee bank accounts. \n\n        Ordered by date added descending. \n\n        Can be paginated.\n      operationId: getPayees\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                properties:\n                  accountHolderName:\n                    description: The name on the payee bank account.\n                    example: Joe Bloggs\n                    type: string\n                  accountName:\n                    description: The alias attributed to the payee, usually set by the user when creating the payee.\n                    example: Joe\n                    type: string\n                  accountNumber:\n                    description: The Account Number of the account if currency is GBP.\n                    example: null\n                    type: string\n                  bic:\n                    description: The BIC of the account if currency is EUR.\n                    example: BOFIIE2DXXX\n                    type: string\n                  createdBy:\n                    description: The creation source of the payee.\n                    enum:\n                      - CUSTOMER\n                      - LODGEMENT\n                      - DIRECT DEBIT\n                      - OPEN BANKING\n                      - FIRE OPEN PAYMENT\n                      - FIRE DIRECT\n                    example: CUSTOMER\n                    type: string\n                  currency:\n                    $ref: \"#/paths/~1accounts/get/responses/200/content/application~1json/schema/properties/accounts/items/properties/currency\"\n                  dateCreated:\n                    description: The date the payee was created. Milliseconds since the epoch (1970).\n                    example: 2019-08-22T07:48:56.460Z\n                    format: date-time\n                    type: string\n                  iban:\n                    description: The IBAN of the account if currency is EUR.\n                    example: IE86BOFI90535211111111\n                    type: string\n                  id:\n                    description: Identifier for the fire.com payee bank account (assigned by fire.com).\n                    example: 742\n                    format: int64\n                    type: integer\n                  nsc:\n                    description: The Sort Code of the account if currency is GBP.\n                    example: null\n                    type: string\n                  status:\n                    description: |\n                      The status of the payee. Only payees in LIVE status can be selected as a destination account for an outgoing payment.\n                        * 'CREATED' - The payee has been set-up via Bank Transfer Received, Direct Debit, or Open Banking. This payee must be converted to LIVE status to select as a destination account for an outgoing payment.\n                        * 'LIVE' - The payee can be selected as a destination account for an outgoing payment.\n                        * 'CLOSED'\n                        * 'ARCHIVED' - The payee has been deleted and must be added again to be selected as a destination account for an outgoing payment.\n                    enum:\n                      - CREATED\n                      - LIVE\n                      - CLOSED\n                      - ARCHIVED\n                    example: LIVE\n                    type: string\n                title: Payee\n                type: object\n          description: An array of Payee Bank Accounts\n      summary: List all Payee Bank Accounts\n      tags:\n        - Payee Bank Accounts\n  /paymentrequests:\n    post:\n      description: |\n        Creates a new Fire Open Payment Payment request. A code is returned that can be shared to your customers as a URL by any channel you wish.\n        You will need to enable the `PERM_BUSINESS_POST_PAYMENT_REQUEST` permission to use this endpoint.\n      operationId: newPaymentRequest\n      requestBody:\n        content:\n          application/json:\n            schema:\n              properties:\n                additionalFields:\n                  description: These fields will be dispalyed to the payer when using the hosted option. You can choose to display any of `ORDER_ID`, `PRODUCT_ID`, `CUSTOMER_ID`, `CUSTOMER_NUMBER` and `COMMENT2` to the payer.\n                  example: ORDER_ID|PRODUCT_ID|CUSTOMER_ID|CUSTOMER_NUMBER|COMMENT2\n                  type: string\n                amount:\n                  description: The requested amount to pay. Note the last two digits represent pennies/cents, (e.g., £1.00 = 100).\n                  example: 1000\n                  format: int64\n                  type: integer\n                collectFields:\n                  description: For the hosted option, the payer will be asked to fill in these fields but they will not be mandatory. You can choose to collect any of the payer's `ADDRESS`, `REFERENCE` and/or `COMMENT1`. If you choose to collect these fields from the payer, you cannot set 'delivery’, 'variableReference’ or 'comment1’ fields respectively.\n                  example: ADDRESS|REFERENCE|COMMENT1\n                  type: string\n                currency:\n                  description: Either `EUR` or `GBP`, and must correspond to the currency of the account the funds are being lodged into in the `icanTo`.\n                  enum:\n                    - EUR\n                    - GBP\n                  type: string\n                description:\n                  description: A public facing description of the request. This will be shown to the user when they tap or scan the request.\n                  example: Gym Fees Oct 2020\n                  type: string\n                expiry:\n                  description: This is the expiry of the payment request. After this time, the payment cannot be paid.\n                  example: 2020-10-22T07:48:56.460Z\n                  format: date-time\n                  type: string\n                icanTo:\n                  description: The ican of the account to collect the funds into. Must be one of your fire.com Accounts.\n                  example: 42\n                  format: int64\n                  type: integer\n                mandatoryFields:\n                  description: For the hosted option, these fields will be madatory for the payer to fill in on the hosted payment page. You can choose to collect any the payer's `ADDRESS`, `REFERENCE` and/or `COMMENT1`. If you choose to collect these fields from the payer, you cannot set 'delivery’, 'variableReference’ or 'comment1’ fields respectively.\n                  example: ADDRESS|REFERENCE|COMMENT1\n                  type: string\n                maxNumberPayments:\n                  description: The max number of people who can pay this request. Must be set to 1 for the ECOMMERCE_GOODS and ECOMMERCE_SERVICES types.\n                  example: 1\n                  type: integer\n                myRef:\n                  description: An internal description of the request.\n                  example: Fees\n                  type: string\n                orderDetails:\n                  properties:\n                    comment1:\n                      description: This is your own comment for the transaction.\n                      example: Additional comments about the transaction\n                      type: string\n                    comment2:\n                      description: This is your own comment for the transaction.\n                      example: Additional comments about the transaction\n                      type: string\n                    customerNumber:\n                      description: Use this field to store a customer number for the transaction (for example).\n                      example: \"123645\"\n                      type: string\n                    deliveryAddressLine1:\n                      description: The first line of the delivery address.\n                      example: 12 The Street\n                      type: string\n                    deliveryAddressLine2:\n                      description: The second line of the delivery address.\n                      example: The Way\n                      type: string\n                    deliveryCity:\n                      description: Delivery address city\n                      example: London\n                      type: string\n                    deliveryCountry:\n                      description: 2-digit code for the country\n                      example: GB\n                      type: string\n                    deliveryPostCode:\n                      description: Delivery address post code\n                      example: EC15155\n                      type: string\n                    merchantCustomerIdentification:\n                      description: This is a reference you use to uniquely identify each of your customers.\n                      example: \"08303863544\"\n                      type: string\n                    merchantNumber:\n                      description: Your Merchant Number (if applicable).\n                      example: \"1234567\"\n                      type: string\n                    orderId:\n                      description: Use this field to store the order id for the transaction. The Order Id cannot be set unless the `maxNumberPayments` is 1.\n                      example: 6c28a47d-4502-4111\n                      type: string\n                    productId:\n                      description: Use this field to store a product id for the transaction (for example).\n                      example: ZFDAA-1221\n                      type: string\n                    variableReference:\n                      description: Use this field to store any other reference for the transaction (for example, a phone number).\n                      example: John Doe\n                      type: string\n                  title: OrderDetails\n                  type: object\n                returnUrl:\n                  description: The merchant return URL where the customer will be re-directed to with the result of the transaction.\n                  example: https://example.com/callback\n                  type: string\n                type:\n                  description: The type of Fire Open Payment that was created\n                  enum:\n                    - OTHER\n                  type: string\n              required:\n                - type\n                - icanTo\n                - currency\n                - myRef\n                - description\n              title: NewPaymentRequest\n              type: object\n        description: Details of the new payment request\n        required: true\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                properties:\n                  code:\n                    description: |\n                      The code for this request. Create a URL in this format: `https://payments.fire.com/{code}` and share to your customers.\n                    example: 1234abcd\n                    maxLength: 8\n                    minLength: 8\n                    type: string\n                  type:\n                    description: The type of Fire Open Payment that was created.\n                    enum:\n                      - OTHER\n                    type: string\n                title: NewPaymentRequestResponse\n                type: object\n          description: Payment Request created successfully\n      summary: Create a Fire Open Payment request\n      tags:\n        - Open Banking\n  \"/payments/{paymentUuid}\":\n    get:\n      description: |\n        Returns the details of a specific payment.\n\n        As the customer goes through the process of making the payment the status of the payment will change.\n\n        * `AWAITING_AUTHORISATION` -This is the initial status of all your payments.\n        * `AUTHORISED` - This is the status that your payment is set to after the customer has authorised the payment with their ASPSP / bank.\n        * `AWAITING_MULTI_AUTHORISATION` - Some business accounts such as charities require dual authorisation.\n        * `NOT_AUTHORISED` - Either your customer clicked on cancel or the payment was rejected by their ASPSP / bank.\n        * `PENDING` - This is the status that your payment is set to after the customer has authorised the payment with their ASPSP / bank but the bank may want to carry out another check before funding the transaction.\n        * `PAID` - Funds were received into your fire.com GBP or EUR account from your customer’s ASPSP / bank.\n\n\n        You will need to enable the `PERM_BUSINESS_GET_PAYMENT` permission to use this endpoint.\n      operationId: getPaymentDetails\n      parameters:\n        - in: path\n          name: paymentUuid\n          required: true\n          schema:\n            description: The unique id for the transaction.\n            example: 4ADFB67A-0F5B-4A9A-9D74-34437250045C\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                properties:\n                  additionalFields:\n                    description: These fields will be dispalyed to the payer when using the hosted option. You can choose to display any of `ORDER_ID`, `PRODUCT_ID`, `CUSTOMER_ID`, `CUSTOMER_NUMBER` and `COMMENT2` to the payer.\n                    example: ORDER_ID|PRODUCT_ID|CUSTOMER_ID|CUSTOMER_NUMBER|COMMENT2\n                    type: string\n                  amount:\n                    description: The requested amount to pay. Note the last two digits represent pennies/cents, (e.g., £1.00 = 100).\n                    example: 1000\n                    format: int64\n                    type: integer\n                  collectFields:\n                    description: For the hosted option, the payer will be asked to fill in these fields but they will not be mandatory. You can choose to collect any of the payer's `ADDRESS`, `REFERENCE` and/or `COMMENT1`. If you choose to collect these fields from the payer, you cannot set 'delivery’, 'variableReference’ or 'comment1’ fields respectively.\n                    example: ADDRESS|REFERENCE|COMMENT1\n                    type: string\n                  currency:\n                    $ref: \"#/paths/~1accounts/get/responses/200/content/application~1json/schema/properties/accounts/items/properties/currency\"\n                  description:\n                    description: A public facing description of the request. This will be shown to the user when they tap or scan the request.\n                    example: Gym Fees Oct 2020\n                    type: string\n                  expiry:\n                    description: This is the expiry of the payment request. After this time, the payment cannot be paid.\n                    example: 2024-10-22T07:48:56.460Z\n                    format: date-time\n                    type: string\n                  icanTo:\n                    description: The ican of the account to collect the funds into. Must be one of your fire.com Accounts.\n                    example: 42\n                    format: int64\n                    type: integer\n                  mandatoryFields:\n                    description: For the hosted option, these fields will be madatory for the payer to fill in on the hosted payment page. You can choose to collect any the payer's `ADDRESS`, `REFERENCE` and/or `COMMENT1`. If you choose to collect these fields from the payer, you cannot set 'delivery’, 'variableReference’ or 'comment1’ fields respectively.\n                    example: ADDRESS|REFERENCE|COMMENT1\n                    type: string\n                  maxNumberPayments:\n                    description: The max number of people who can pay this request. Must be set to 1 for the ECOMMERCE_GOODS and ECOMMERCE_SERVICES types.\n                    example: 1\n                    type: integer\n                  myRef:\n                    description: An internal description of the request.\n                    example: Fees\n                    type: string\n                  orderDetails:\n                    $ref: \"#/paths/~1paymentrequests/post/requestBody/content/application~1json/schema/properties/orderDetails\"\n                  paymentRequestCode:\n                    description: The code that was returned when you created the payment request.\n                    example: 1234abcd\n                    maxLength: 8\n                    minLength: 8\n                    type: string\n                  paymentUuid:\n                    description: A unique id for the transaction.\n                    example: 4ADFB67A-0F5B-4A9A-9D74-34437250045C\n                    type: string\n                  returnUrl:\n                    description: The merchant return URL where the customer will be re-directed to with the result of the transaction.\n                    example: https://example.com/callback\n                    type: string\n                  status:\n                    description: The status of the transaction\n                    enum:\n                      - AWAITING_AUTHORISATION\n                      - AUTHORISED\n                      - AWAITING_MULTI_AUTHORISATION\n                      - NOT_AUTHORISED\n                      - PAID\n                      - REJECTED\n                      - ACCEPTED\n                      - RECEIVED\n                    type: string\n                  transactionType:\n                    description: The type of payment request payment\n                    enum:\n                      - REFUND_REQUEST\n                      - PAYMENT\n                    type: string\n                  type:\n                    description: The type of Fire Open Payment that was created\n                    enum:\n                      - OTHER\n                    type: string\n                  webhookUrl:\n                    description: A URL to be called in the background with the details of the payment after the payment is complete\n                    example: https://example.com/webhook\n                    type: string\n                title: PaymentRequest\n                type: object\n          description: The Payment Request details object\n      summary: Get Payment Details\n      tags:\n        - Open Banking\n  \"/user/{userId}\":\n    get:\n      description: You can retrieve the details of a specific fire.com user\n      operationId: getUser\n      parameters:\n        - in: path\n          name: userId\n          required: true\n          schema:\n            description: Lists a specific User\n            example: 14059\n            type: number\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/paths/~1users/get/responses/200/content/application~1json/schema/items\"\n          description: Unique information about a User.\n      summary: Returns details of a specific fire.com user.\n      tags:\n        - Users\n  /users:\n    get:\n      description: You can retrieve the details of all fire.com users on your acount.\n      operationId: getUsers\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                items:\n                  properties:\n                    emailAddress:\n                      description: email address for user\n                      example: user@example.com\n                      type: string\n                    firstName:\n                      description: User first name\n                      example: Colm\n                      type: string\n                    id:\n                      description: The User ID for this User\n                      example: 14059\n                      format: int64\n                      type: integer\n                    lastName:\n                      description: User second name\n                      example: User\n                      type: string\n                    lastlogin:\n                      description: Timestamp on when user last logged in.\n                      example: 2012-01-20T11:21:35.000Z\n                      type: string\n                    mobileApplicationDetails:\n                      properties:\n                        OS:\n                          description: Operating system of device.\n                          enum:\n                            - Android\n                            - IOS\n                            - OTHER\n                          type: string\n                        businessUserId:\n                          description: Business user ID\n                          example: \"14059\"\n                          format: int64\n                          type: integer\n                        clientID:\n                          description: Client ID of user.\n                          example: EBB10F29-A653-4DBA-9C8C-BA79F72F78B0\n                          type: string\n                        deviceName:\n                          description: type of device.\n                          enum:\n                            - iPhone\n                            - Android\n                            - Other\n                          type: string\n                        deviceOSVersion:\n                          description: OS version for device.\n                          example: \"14.4\"\n                          type: string\n                        mobileApplicationId:\n                          description: Mobile application id for user.\n                          example: \"18967\"\n                          format: int64\n                          type: integer\n                        status:\n                          description: Status of user\n                          enum:\n                            - LIVE\n                            - CLOSED\n                            - LOCKED\n                            - SMS_SENT\n                          type: string\n                      title: MobileApplication\n                      type: object\n                    mobileNumber:\n                      description: User mobile number\n                      example: \"+353871234567\"\n                      type: string\n                    role:\n                      description: User role\n                      enum:\n                        - ADMIN\n                        - FULL_USER\n                        - READ_ONLY\n                        - CARD_ONLY\n                      type: string\n                    status:\n                      description: Status of user\n                      enum:\n                        - LIVE\n                        - CLOSED\n                        - FROZEN\n                        - INVITE_SENT\n                        - SMS_CODE_SENT\n                      type: string\n                    userCvl:\n                      description: Users Cvl type ID (shows up when status is LIVE)\n                      example: FULL\n                      type: string\n                  title: User\n                  type: object\n                type: array\n          description: List of all Users.\n      summary: Returns list of all users on your fire.com account\n      tags:\n        - Users\ncomponents:\n  parameters:\n    limitParam:\n      description: The number of records to return. Defaults to 10 - max is 200.\n      in: query\n      name: limit\n      required: false\n      schema:\n        default: 10\n        maximum: 200\n        type: integer\n    offsetParam:\n      description: The page offset. Defaults to 0. This is the record number that the returned list will start at. E.g. `offset = 40` and `limit = 20` will return records 40 to 59.\n      in: query\n      name: offset\n      required: false\n      schema:\n        default: 0\n        type: integer\n    orderByParam:\n      description: Currently defaults to `DATE` No other options at this time.\n      in: query\n      name: orderBy\n      required: false\n      schema:\n        enum:\n          - DATE\n    orderParam:\n      description: Either `ASC` or `DESC`\n      in: query\n      name: order\n      required: false\n      schema:\n        enum:\n          - ASC\n          - DESC\n  responses:\n    UnauthorisedError:\n      description: Access Token is Invalid or missing\n  securitySchemes:\n    bearerAuth:\n      bearerFormat: API Access Token\n      scheme: bearer\n      type: http\n",
			"canonicalURL": "/github.com/APIs-guru/openapi-directory@47bf2b618e492e31bc62743e9f72c47cb8460229/-/blob/APIs/fire.com/1.0/openapi.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/APIs-guru/openapi-directory/blob/47bf2b618e492e31bc62743e9f72c47cb8460229/APIs/fire.com/1.0/openapi.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "parse: parse spec: parse operations: paths: /accounts/{ican}: get: operation \"getAccountById\": responses: 401: resolve \"#/paths/~1accounts/get/responses/401\" reference: component by reference not found"
}