{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/SecConNet/mahiru"
		},
		"file": {
			"name": "registry_api.yaml",
			"size": 0,
			"path": "mahiru/rest/registry_api.yaml",
			"byteSize": 5209,
			"content": "openapi: \"3.0.0\"\n\ninfo:\n    version: 0.1.0\n    title: EFDDM Registry\n\npaths:\n  /parties:\n    post:\n      summary: Register a party\n      operationId: registerParty\n      requestBody:\n        description: Description of the party to register\n        content:\n          application/json:\n            schema:\n              \"$ref\": \"#/components/schemas/Party\"\n        required: true\n      responses:\n        \"201\":\n          description: Successfully registered the party\n          content:\n            text/plain:\n              schema:\n                description: A message signalling success\n                type: string\n        \"400\":\n          description: The request was not formatted correctly\n          content:\n            text/plain:\n              schema:\n                description: An error message\n                type: string\n        \"409\":\n          description: A party with this id was already registered\n          content:\n            text/plain:\n              schema:\n                description: An error message\n                type: string\n        default:\n          description: A technical problem was encountered\n          content:\n            text/plain:\n              schema:\n                type: string\n\n  /parties/{id}:\n    delete:\n      summary: Deregister a party\n      operationId: deregisterParty\n      parameters:\n        - name: id\n          in: path\n          required: true\n          description: The id of the asset to deregister\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: Successfully deregistered the party\n          content:\n            text/plain:\n              schema:\n                description: A message signalling succes\n                type: string\n        \"404\":\n          description: The party was not found\n          content:\n            text/plain:\n              schema:\n                description: A message signalling failure\n                type: string\n        default:\n          description: A technical problem was encountered\n          content:\n            text/plain:\n              schema:\n                type: string\n\n  /sites:\n    post:\n      summary: Register a site\n      operationId: registerSite\n      requestBody:\n        description: Description of the site to register\n        content:\n          application/json:\n            schema:\n              \"$ref\": \"#/components/schemas/Site\"\n        required: true\n      responses:\n        \"201\":\n          description: Successfully registered the site\n          content:\n            text/plain:\n              schema:\n                description: A message signalling success\n                type: string\n        \"400\":\n          description: The request was not formatted correctly\n          content:\n            text/plain:\n              schema:\n                description: An error message\n                type: string\n        \"409\":\n          description: A site with this id was already registered\n          content:\n            text/plain:\n              schema:\n                description: An error message\n                type: string\n        default:\n          description: A technical problem was encountered\n          content:\n            text/plain:\n              schema:\n                type: string\n\n  /sites/{id}:\n    delete:\n      summary: Deregister a site\n      operationId: deregisterSite\n      parameters:\n        - name: id\n          in: path\n          required: true\n          description: The id of the site to deregister\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: Successfully deregistered the site\n          content:\n            text/plain:\n              schema:\n                description: A message signalling succes\n                type: string\n        \"404\":\n          description: The site was not found\n          content:\n            text/plain:\n              schema:\n                description: A message signalling failure\n                type: string\n        default:\n          description: A technical problem was encountered\n          content:\n            text/plain:\n              schema:\n                type: string\n\n  /updates:\n    get:\n      summary: Get registry updates\n      operationId: getUpdates\n      parameters:\n        - name: from_version\n          in: query\n          description: \u003e-\n            Current version of the replica the update is for. If omitted,\n            returns an update from the beginning.\n          required: false\n          schema:\n            type: integer\n      responses:\n        \"200\":\n          description: A replica update starting from the given version.\n          context:\n            application/json:\n              schema:\n                \"$ref\": \"#/components/schemas/RegistryUpdate\"\n        \"400\":\n          description: The request was not formatted correctly\n          content:\n            text/plain:\n              schema:\n                description: An error message\n                type: string\n        default:\n          description: A technical problem was encountered\n          content:\n            text/plain:\n              schema:\n                type: string\n\n$ref: \"./schemas.yaml\"\n\n"
		}
	},
	"Error": "parse: parse spec: parse operations: paths: /parties: post: operation \"registerParty\": requestBody: content: \"application/json\": parse schema: parse schema: resolve \"#/components/schemas/Party\": find schema: resolve \"#/components/schemas/Party\": can't find value for \"components/schemas/Party\""
}