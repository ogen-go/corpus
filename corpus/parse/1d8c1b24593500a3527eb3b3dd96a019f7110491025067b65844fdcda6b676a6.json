{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/kubernetes-sigs/cluster-api"
		},
		"file": {
			"name": "runtime-hooks-openapi.yaml",
			"size": 0,
			"path": "docs/proposals/images/runtime-hooks/runtime-hooks-openapi.yaml",
			"byteSize": 61273,
			"content": "components:\n  schemas:\n    k8s.io.api.core.v1.ObjectReference:\n      description: ObjectReference contains enough information to let you inspect\n        or modify the referred object.\n      properties:\n        apiVersion:\n          description: API version of the referent.\n          type: string\n        fieldPath:\n          description: 'If referring to a piece of an object instead of an entire\n            object, this string should contain a valid JSON/Go field access statement,\n            such as desiredState.manifest.containers[2]. For example, if the object\n            reference is to a container within a pod, this would take on a value like:\n            \"spec.containers{name}\" (where \"name\" refers to the name of the container\n            that triggered the event) or if no container name is specified \"spec.containers[2]\"\n            (container with index 2 in this pod). This syntax is chosen only to have\n            some well-defined way of referencing a part of an object.'\n          type: string\n        kind:\n          description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'\n          type: string\n        name:\n          description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'\n          type: string\n        namespace:\n          description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'\n          type: string\n        resourceVersion:\n          description: 'Specific resourceVersion to which this reference is made,\n            if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'\n          type: string\n        uid:\n          description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'\n          type: string\n      type: object\n      x-kubernetes-map-type: atomic\n    k8s.io.apiextensions-apiserver.pkg.apis.apiextensions.v1.JSON:\n      description: 'JSON represents any valid JSON value. These types are supported:\n        bool, int64, float64, string, []interface{}, map[string]interface{} and nil.'\n    k8s.io.apimachinery.pkg.apis.meta.v1.FieldsV1:\n      description: |-\n        FieldsV1 stores a set of fields in a data structure like a Trie, in JSON format.\n\n        Each key is either a '.' representing the field itself, and will always map to an empty set, or a string representing a sub-field or item. The string will follow one of these four formats: 'f:<name>', where <name> is the name of a field in a struct, or key in a map 'v:<value>', where <value> is the exact json formatted value of a list item 'i:<index>', where <index> is position of a item in a list 'k:<keys>', where <keys> is a map of  a list item's key fields to their unique values If a key maps to an empty Fields value, the field that key represents is part of the set.\n\n        The exact format is defined in sigs.k8s.io/structured-merge-diff\n      type: object\n    k8s.io.apimachinery.pkg.apis.meta.v1.ManagedFieldsEntry:\n      description: ManagedFieldsEntry is a workflow-id, a FieldSet and the group version\n        of the resource that the fieldset applies to.\n      properties:\n        apiVersion:\n          description: APIVersion defines the version of this resource that this field\n            set applies to. The format is \"group/version\" just like the top-level\n            APIVersion field. It is necessary to track the version of a field set\n            because it cannot be automatically converted.\n          type: string\n        fieldsType:\n          description: 'FieldsType is the discriminator for the different fields format\n            and version. There is currently only one possible value: \"FieldsV1\"'\n          type: string\n        fieldsV1:\n          $ref: '#/components/schemas/k8s.io.apimachinery.pkg.apis.meta.v1.FieldsV1'\n          description: FieldsV1 holds the first JSON version format as described in\n            the \"FieldsV1\" type.\n        manager:\n          description: Manager is an identifier of the workflow managing these fields.\n          type: string\n        operation:\n          description: Operation is the type of operation which lead to this ManagedFieldsEntry\n            being created. The only valid values for this field are 'Apply' and 'Update'.\n          type: string\n        subresource:\n          description: Subresource is the name of the subresource used to update that\n            object, or empty string if the object was updated through the main resource.\n            The value of this field is used to distinguish between managers, even\n            if they share the same name. For example, a status update will be distinct\n            from a regular update using the same manager name. Note that the APIVersion\n            field is not related to the Subresource field and it always corresponds\n            to the version of the main resource.\n          type: string\n        time:\n          $ref: '#/components/schemas/k8s.io.apimachinery.pkg.apis.meta.v1.Time'\n          description: Time is timestamp of when these fields were set. It should\n            always be empty if Operation is 'Apply'\n      type: object\n    k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta:\n      description: ObjectMeta is metadata that all persisted resources must have,\n        which includes all objects users must create.\n      properties:\n        annotations:\n          additionalProperties:\n            default: \"\"\n            type: string\n          description: 'Annotations is an unstructured key value map stored with a\n            resource that may be set by external tools to store and retrieve arbitrary\n            metadata. They are not queryable and should be preserved when modifying\n            objects. More info: http://kubernetes.io/docs/user-guide/annotations'\n          type: object\n        clusterName:\n          description: The name of the cluster which the object belongs to. This is\n            used to distinguish resources with same name and namespace in different\n            clusters. This field is not set anywhere right now and apiserver is going\n            to ignore it if set in create or update request.\n          type: string\n        creationTimestamp:\n          $ref: '#/components/schemas/k8s.io.apimachinery.pkg.apis.meta.v1.Time'\n          default: {}\n          description: |-\n            CreationTimestamp is a timestamp representing the server time when this object was created. It is not guaranteed to be set in happens-before order across separate operations. Clients may not set this value. It is represented in RFC3339 form and is in UTC.\n\n            Populated by the system. Read-only. Null for lists. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n        deletionGracePeriodSeconds:\n          description: Number of seconds allowed for this object to gracefully terminate\n            before it will be removed from the system. Only set when deletionTimestamp\n            is also set. May only be shortened. Read-only.\n          format: int64\n          type: integer\n        deletionTimestamp:\n          $ref: '#/components/schemas/k8s.io.apimachinery.pkg.apis.meta.v1.Time'\n          description: |-\n            DeletionTimestamp is RFC 3339 date and time at which this resource will be deleted. This field is set by the server when a graceful deletion is requested by the user, and is not directly settable by a client. The resource is expected to be deleted (no longer visible from resource lists, and not reachable by name) after the time in this field, once the finalizers list is empty. As long as the finalizers list contains items, deletion is blocked. Once the deletionTimestamp is set, this value may not be unset or be set further into the future, although it may be shortened or the resource may be deleted prior to this time. For example, a user may request that a pod is deleted in 30 seconds. The Kubelet will react by sending a graceful termination signal to the containers in the pod. After that 30 seconds, the Kubelet will send a hard termination signal (SIGKILL) to the container and after cleanup, remove the pod from the API. In the presence of network partitions, this object may still exist after this timestamp, until an administrator or automated process can determine the resource is fully terminated. If not set, graceful deletion of the object has not been requested.\n\n            Populated by the system when a graceful deletion is requested. Read-only. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n        finalizers:\n          description: Must be empty before the object is deleted from the registry.\n            Each entry is an identifier for the responsible component that will remove\n            the entry from the list. If the deletionTimestamp of the object is non-nil,\n            entries in this list can only be removed. Finalizers may be processed\n            and removed in any order.  Order is NOT enforced because it introduces\n            significant risk of stuck finalizers. finalizers is a shared field, any\n            actor with permission can reorder it. If the finalizer list is processed\n            in order, then this can lead to a situation in which the component responsible\n            for the first finalizer in the list is waiting for a signal (field value,\n            external system, or other) produced by a component responsible for a finalizer\n            later in the list, resulting in a deadlock. Without enforced ordering\n            finalizers are free to order amongst themselves and are not vulnerable\n            to ordering changes in the list.\n          items:\n            default: \"\"\n            type: string\n          type: array\n          x-kubernetes-patch-strategy: merge\n        generateName:\n          description: |-\n            GenerateName is an optional prefix, used by the server, to generate a unique name ONLY IF the Name field has not been provided. If this field is used, the name returned to the client will be different than the name passed. This value will also be combined with a unique suffix. The provided value has the same validation rules as the Name field, and may be truncated by the length of the suffix required to make the value unique on the server.\n\n            If this field is specified and the generated name exists, the server will NOT return a 409 - instead, it will either return 201 Created or 500 with Reason ServerTimeout indicating a unique name could not be found in the time allotted, and the client should retry (optionally after the time indicated in the Retry-After header).\n\n            Applied only if Name is not specified. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency\n          type: string\n        generation:\n          description: A sequence number representing a specific generation of the\n            desired state. Populated by the system. Read-only.\n          format: int64\n          type: integer\n        labels:\n          additionalProperties:\n            default: \"\"\n            type: string\n          description: 'Map of string keys and values that can be used to organize\n            and categorize (scope and select) objects. May match selectors of replication\n            controllers and services. More info: http://kubernetes.io/docs/user-guide/labels'\n          type: object\n        managedFields:\n          description: ManagedFields maps workflow-id and version to the set of fields\n            that are managed by that workflow. This is mostly for internal housekeeping,\n            and users typically shouldn't need to set or understand this field. A\n            workflow can be the user's name, a controller's name, or the name of a\n            specific apply path like \"ci-cd\". The set of fields is always in the version\n            that the workflow used when modifying the object.\n          items:\n            $ref: '#/components/schemas/k8s.io.apimachinery.pkg.apis.meta.v1.ManagedFieldsEntry'\n            default: {}\n          type: array\n        name:\n          description: 'Name must be unique within a namespace. Is required when creating\n            resources, although some resources may allow a client to request the generation\n            of an appropriate name automatically. Name is primarily intended for creation\n            idempotence and configuration definition. Cannot be updated. More info:\n            http://kubernetes.io/docs/user-guide/identifiers#names'\n          type: string\n        namespace:\n          description: |-\n            Namespace defines the space within which each name must be unique. An empty namespace is equivalent to the \"default\" namespace, but \"default\" is the canonical representation. Not all objects are required to be scoped to a namespace - the value of this field for those objects will be empty.\n\n            Must be a DNS_LABEL. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/namespaces\n          type: string\n        ownerReferences:\n          description: List of objects depended by this object. If ALL objects in\n            the list have been deleted, this object will be garbage collected. If\n            this object is managed by a controller, then an entry in this list will\n            point to this controller, with the controller field set to true. There\n            cannot be more than one managing controller.\n          items:\n            $ref: '#/components/schemas/k8s.io.apimachinery.pkg.apis.meta.v1.OwnerReference'\n            default: {}\n          type: array\n          x-kubernetes-patch-merge-key: uid\n          x-kubernetes-patch-strategy: merge\n        resourceVersion:\n          description: |-\n            An opaque value that represents the internal version of this object that can be used by clients to determine when objects have changed. May be used for optimistic concurrency, change detection, and the watch operation on a resource or set of resources. Clients must treat these values as opaque and passed unmodified back to the server. They may only be valid for a particular resource or set of resources.\n\n            Populated by the system. Read-only. Value must be treated as opaque by clients and . More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency\n          type: string\n        selfLink:\n          description: |-\n            SelfLink is a URL representing this object. Populated by the system. Read-only.\n\n            DEPRECATED Kubernetes will stop propagating this field in 1.20 release and the field is planned to be removed in 1.21 release.\n          type: string\n        uid:\n          description: |-\n            UID is the unique in time and space value for this object. It is typically generated by the server on successful creation of a resource and is not allowed to change on PUT operations.\n\n            Populated by the system. Read-only. More info: http://kubernetes.io/docs/user-guide/identifiers#uids\n          type: string\n      type: object\n    k8s.io.apimachinery.pkg.apis.meta.v1.OwnerReference:\n      description: OwnerReference contains enough information to let you identify\n        an owning object. An owning object must be in the same namespace as the dependent,\n        or be cluster-scoped, so there is no namespace field.\n      properties:\n        apiVersion:\n          default: \"\"\n          description: API version of the referent.\n          type: string\n        blockOwnerDeletion:\n          description: If true, AND if the owner has the \"foregroundDeletion\" finalizer,\n            then the owner cannot be deleted from the key-value store until this reference\n            is removed. Defaults to false. To set this field, a user needs \"delete\"\n            permission of the owner, otherwise 422 (Unprocessable Entity) will be\n            returned.\n          type: boolean\n        controller:\n          description: If true, this reference points to the managing controller.\n          type: boolean\n        kind:\n          default: \"\"\n          description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'\n          type: string\n        name:\n          default: \"\"\n          description: 'Name of the referent. More info: http://kubernetes.io/docs/user-guide/identifiers#names'\n          type: string\n        uid:\n          default: \"\"\n          description: 'UID of the referent. More info: http://kubernetes.io/docs/user-guide/identifiers#uids'\n          type: string\n      required:\n      - apiVersion\n      - kind\n      - name\n      - uid\n      type: object\n      x-kubernetes-map-type: atomic\n    k8s.io.apimachinery.pkg.apis.meta.v1.Time:\n      description: Time is a wrapper around time.Time which supports correct marshaling\n        to YAML and JSON.  Wrappers are provided for many of the factory methods that\n        the time package offers.\n      format: date-time\n      type: string\n    sigs.k8s.io.cluster-api.api.v1beta1.APIEndpoint:\n      description: APIEndpoint represents a reachable Kubernetes API endpoint.\n      properties:\n        host:\n          default: \"\"\n          description: The hostname on which the API server is serving.\n          type: string\n        port:\n          default: 0\n          description: The port on which the API server is serving.\n          format: int32\n          type: integer\n      required:\n      - host\n      - port\n      type: object\n    sigs.k8s.io.cluster-api.api.v1beta1.Cluster:\n      description: Cluster is the Schema for the clusters API.\n      properties:\n        apiVersion:\n          description: 'APIVersion defines the versioned schema of this representation\n            of an object. Servers should convert recognized schemas to the latest\n            internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'\n          type: string\n        kind:\n          description: 'Kind is a string value representing the REST resource this\n            object represents. Servers may infer this from the endpoint the client\n            submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'\n          type: string\n        metadata:\n          $ref: '#/components/schemas/k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta'\n          default: {}\n        spec:\n          $ref: '#/components/schemas/sigs.k8s.io.cluster-api.api.v1beta1.ClusterSpec'\n          default: {}\n        status:\n          $ref: '#/components/schemas/sigs.k8s.io.cluster-api.api.v1beta1.ClusterStatus'\n          default: {}\n      type: object\n    sigs.k8s.io.cluster-api.api.v1beta1.ClusterNetwork:\n      description: ClusterNetwork specifies the different networking parameters for\n        a cluster.\n      properties:\n        apiServerPort:\n          description: APIServerPort specifies the port the API Server should bind\n            to. Defaults to 6443.\n          format: int32\n          type: integer\n        pods:\n          $ref: '#/components/schemas/sigs.k8s.io.cluster-api.api.v1beta1.NetworkRanges'\n          description: The network ranges from which Pod networks are allocated.\n        serviceDomain:\n          description: Domain name for services.\n          type: string\n        services:\n          $ref: '#/components/schemas/sigs.k8s.io.cluster-api.api.v1beta1.NetworkRanges'\n          description: The network ranges from which service VIPs are allocated.\n      type: object\n    sigs.k8s.io.cluster-api.api.v1beta1.ClusterSpec:\n      description: ClusterSpec defines the desired state of Cluster.\n      properties:\n        clusterNetwork:\n          $ref: '#/components/schemas/sigs.k8s.io.cluster-api.api.v1beta1.ClusterNetwork'\n          description: Cluster network configuration.\n        controlPlaneEndpoint:\n          $ref: '#/components/schemas/sigs.k8s.io.cluster-api.api.v1beta1.APIEndpoint'\n          default: {}\n          description: ControlPlaneEndpoint represents the endpoint used to communicate\n            with the control plane.\n        controlPlaneRef:\n          $ref: '#/components/schemas/k8s.io.api.core.v1.ObjectReference'\n          description: ControlPlaneRef is an optional reference to a provider-specific\n            resource that holds the details for provisioning the Control Plane for\n            a Cluster.\n        infrastructureRef:\n          $ref: '#/components/schemas/k8s.io.api.core.v1.ObjectReference'\n          description: InfrastructureRef is a reference to a provider-specific resource\n            that holds the details for provisioning infrastructure for a cluster in\n            said provider.\n        paused:\n          description: Paused can be used to prevent controllers from processing the\n            Cluster and all its associated objects.\n          type: boolean\n        topology:\n          $ref: '#/components/schemas/sigs.k8s.io.cluster-api.api.v1beta1.Topology'\n          description: 'This encapsulates the topology for the cluster. NOTE: It is\n            required to enable the ClusterTopology feature gate flag to activate managed\n            topologies support; this feature is highly experimental, and parts of\n            it might still be not implemented.'\n      type: object\n    sigs.k8s.io.cluster-api.api.v1beta1.ClusterStatus:\n      description: ClusterStatus defines the observed state of Cluster.\n      properties:\n        conditions:\n          description: Conditions defines current service state of the cluster.\n          items:\n            $ref: '#/components/schemas/sigs.k8s.io.cluster-api.api.v1beta1.Condition'\n            default: {}\n          type: array\n        controlPlaneReady:\n          default: false\n          description: ControlPlaneReady defines if the control plane is ready.\n          type: boolean\n        failureDomains:\n          additionalProperties:\n            $ref: '#/components/schemas/sigs.k8s.io.cluster-api.api.v1beta1.FailureDomainSpec'\n            default: {}\n          description: FailureDomains is a slice of failure domain objects synced\n            from the infrastructure provider.\n          type: object\n        failureMessage:\n          description: FailureMessage indicates that there is a fatal problem reconciling\n            the state, and will be set to a descriptive error message.\n          type: string\n        failureReason:\n          description: FailureReason indicates that there is a fatal problem reconciling\n            the state, and will be set to a token value suitable for programmatic\n            interpretation.\n          type: string\n        infrastructureReady:\n          default: false\n          description: InfrastructureReady is the state of the infrastructure provider.\n          type: boolean\n        observedGeneration:\n          description: ObservedGeneration is the latest generation observed by the\n            controller.\n          format: int64\n          type: integer\n        phase:\n          description: Phase represents the current phase of cluster actuation. E.g.\n            Pending, Running, Terminating, Failed etc.\n          type: string\n      type: object\n    sigs.k8s.io.cluster-api.api.v1beta1.ClusterVariable:\n      description: ClusterVariable can be used to customize the Cluster through patches.\n        It must comply to the corresponding ClusterClassVariable defined in the ClusterClass.\n      properties:\n        name:\n          default: \"\"\n          description: Name of the variable.\n          type: string\n        value:\n          $ref: '#/components/schemas/k8s.io.apiextensions-apiserver.pkg.apis.apiextensions.v1.JSON'\n          default: {}\n          description: 'Value of the variable. Note: the value will be validated against\n            the schema of the corresponding ClusterClassVariable from the ClusterClass.\n            Note: We have to use apiextensionsv1.JSON instead of a custom JSON type,\n            because controller-tools has a hard-coded schema for apiextensionsv1.JSON\n            which cannot be produced by another type via controller-tools, i.e. it\n            is not possible to have no type field. Ref: https://github.com/kubernetes-sigs/controller-tools/blob/d0e03a142d0ecdd5491593e941ee1d6b5d91dba6/pkg/crd/known_types.go#L106-L111'\n      required:\n      - name\n      - value\n      type: object\n    sigs.k8s.io.cluster-api.api.v1beta1.Condition:\n      description: Condition defines an observation of a Cluster API resource operational\n        state.\n      properties:\n        lastTransitionTime:\n          $ref: '#/components/schemas/k8s.io.apimachinery.pkg.apis.meta.v1.Time'\n          default: {}\n          description: Last time the condition transitioned from one status to another.\n            This should be when the underlying condition changed. If that is not known,\n            then using the time when the API field changed is acceptable.\n        message:\n          description: A human readable message indicating details about the transition.\n            This field may be empty.\n          type: string\n        reason:\n          description: The reason for the condition's last transition in CamelCase.\n            The specific API may choose whether or not this field is considered a\n            guaranteed API. This field may not be empty.\n          type: string\n        severity:\n          description: Severity provides an explicit classification of Reason code,\n            so the users or machines can immediately understand the current situation\n            and act accordingly. The Severity field MUST be set only when Status=False.\n          type: string\n        status:\n          default: \"\"\n          description: Status of the condition, one of True, False, Unknown.\n          type: string\n        type:\n          default: \"\"\n          description: Type of condition in CamelCase or in foo.example.com/CamelCase.\n            Many .condition.type values are consistent across resources like Available,\n            but because arbitrary conditions can be useful (see .node.status.conditions),\n            the ability to deconflict is important.\n          type: string\n      required:\n      - type\n      - status\n      - lastTransitionTime\n      type: object\n    sigs.k8s.io.cluster-api.api.v1beta1.ControlPlaneTopology:\n      description: ControlPlaneTopology specifies the parameters for the control plane\n        nodes in the cluster.\n      properties:\n        metadata:\n          $ref: '#/components/schemas/sigs.k8s.io.cluster-api.api.v1beta1.ObjectMeta'\n          default: {}\n          description: |-\n            Metadata is the metadata applied to the machines of the ControlPlane. At runtime this metadata is merged with the corresponding metadata from the ClusterClass.\n\n            This field is supported if and only if the control plane provider template referenced in the ClusterClass is Machine based.\n        replicas:\n          description: Replicas is the number of control plane nodes. If the value\n            is nil, the ControlPlane object is created without the number of Replicas\n            and it's assumed that the control plane controller does not implement\n            support for this field. When specified against a control plane provider\n            that lacks support for this field, this value will be ignored.\n          format: int32\n          type: integer\n      type: object\n    sigs.k8s.io.cluster-api.api.v1beta1.FailureDomainSpec:\n      description: FailureDomainSpec is the Schema for Cluster API failure domains.\n        It allows controllers to understand how many failure domains a cluster can\n        optionally span across.\n      properties:\n        attributes:\n          additionalProperties:\n            default: \"\"\n            type: string\n          description: Attributes is a free form map of attributes an infrastructure\n            provider might use or require.\n          type: object\n        controlPlane:\n          description: ControlPlane determines if this failure domain is suitable\n            for use by control plane machines.\n          type: boolean\n      type: object\n    sigs.k8s.io.cluster-api.api.v1beta1.MachineDeploymentTopology:\n      description: MachineDeploymentTopology specifies the different parameters for\n        a set of worker nodes in the topology. This set of nodes is managed by a MachineDeployment\n        object whose lifecycle is managed by the Cluster controller.\n      properties:\n        class:\n          default: \"\"\n          description: Class is the name of the MachineDeploymentClass used to create\n            the set of worker nodes. This should match one of the deployment classes\n            defined in the ClusterClass object mentioned in the `Cluster.Spec.Class`\n            field.\n          type: string\n        failureDomain:\n          description: FailureDomain is the failure domain the machines will be created\n            in. Must match a key in the FailureDomains map stored on the cluster object.\n          type: string\n        metadata:\n          $ref: '#/components/schemas/sigs.k8s.io.cluster-api.api.v1beta1.ObjectMeta'\n          default: {}\n          description: Metadata is the metadata applied to the machines of the MachineDeployment.\n            At runtime this metadata is merged with the corresponding metadata from\n            the ClusterClass.\n        name:\n          default: \"\"\n          description: Name is the unique identifier for this MachineDeploymentTopology.\n            The value is used with other unique identifiers to create a MachineDeployment's\n            Name (e.g. cluster's name, etc). In case the name is greater than the\n            allowed maximum length, the values are hashed together.\n          type: string\n        replicas:\n          description: Replicas is the number of worker nodes belonging to this set.\n            If the value is nil, the MachineDeployment is created without the number\n            of Replicas (defaulting to zero) and it's assumed that an external entity\n            (like cluster autoscaler) is responsible for the management of this value.\n          format: int32\n          type: integer\n        variables:\n          $ref: '#/components/schemas/sigs.k8s.io.cluster-api.api.v1beta1.MachineDeploymentVariables'\n          description: Variables can be used to customize the MachineDeployment through\n            patches.\n      required:\n      - class\n      - name\n      type: object\n    sigs.k8s.io.cluster-api.api.v1beta1.MachineDeploymentVariables:\n      description: MachineDeploymentVariables can be used to provide variables for\n        a specific MachineDeployment.\n      properties:\n        overrides:\n          description: Overrides can be used to override Cluster level variables.\n          items:\n            $ref: '#/components/schemas/sigs.k8s.io.cluster-api.api.v1beta1.ClusterVariable'\n            default: {}\n          type: array\n      type: object\n    sigs.k8s.io.cluster-api.api.v1beta1.NetworkRanges:\n      description: NetworkRanges represents ranges of network addresses.\n      properties:\n        cidrBlocks:\n          items:\n            default: \"\"\n            type: string\n          type: array\n      required:\n      - cidrBlocks\n      type: object\n    sigs.k8s.io.cluster-api.api.v1beta1.ObjectMeta:\n      description: |-\n        ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create. This is a copy of customizable fields from metav1.ObjectMeta.\n\n        ObjectMeta is embedded in `Machine.Spec`, `MachineDeployment.Template` and `MachineSet.Template`, which are not top-level Kubernetes objects. Given that metav1.ObjectMeta has lots of special cases and read-only fields which end up in the generated CRD validation, having it as a subset simplifies the API and some issues that can impact user experience.\n\n        During the [upgrade to controller-tools@v2](https://github.com/kubernetes-sigs/cluster-api/pull/1054) for v1alpha2, we noticed a failure would occur running Cluster API test suite against the new CRDs, specifically `spec.metadata.creationTimestamp in body must be of type string: \"null\"`. The investigation showed that `controller-tools@v2` behaves differently than its previous version when handling types from [metav1](k8s.io/apimachinery/pkg/apis/meta/v1) package.\n\n        In more details, we found that embedded (non-top level) types that embedded `metav1.ObjectMeta` had validation properties, including for `creationTimestamp` (metav1.Time). The `metav1.Time` type specifies a custom json marshaller that, when IsZero() is true, returns `null` which breaks validation because the field isn't marked as nullable.\n\n        In future versions, controller-tools@v2 might allow overriding the type and validation for embedded types. When that happens, this hack should be revisited.\n      properties:\n        annotations:\n          additionalProperties:\n            default: \"\"\n            type: string\n          description: 'Annotations is an unstructured key value map stored with a\n            resource that may be set by external tools to store and retrieve arbitrary\n            metadata. They are not queryable and should be preserved when modifying\n            objects. More info: http://kubernetes.io/docs/user-guide/annotations'\n          type: object\n        labels:\n          additionalProperties:\n            default: \"\"\n            type: string\n          description: 'Map of string keys and values that can be used to organize\n            and categorize (scope and select) objects. May match selectors of replication\n            controllers and services. More info: http://kubernetes.io/docs/user-guide/labels'\n          type: object\n      type: object\n    sigs.k8s.io.cluster-api.api.v1beta1.Topology:\n      description: Topology encapsulates the information of the managed resources.\n      properties:\n        class:\n          default: \"\"\n          description: The name of the ClusterClass object to create the topology.\n          type: string\n        controlPlane:\n          $ref: '#/components/schemas/sigs.k8s.io.cluster-api.api.v1beta1.ControlPlaneTopology'\n          default: {}\n          description: ControlPlane describes the cluster control plane.\n        rolloutAfter:\n          $ref: '#/components/schemas/k8s.io.apimachinery.pkg.apis.meta.v1.Time'\n          description: RolloutAfter performs a rollout of the entire cluster one component\n            at a time, control plane first and then machine deployments.\n        variables:\n          description: Variables can be used to customize the Cluster through patches.\n            They must comply to the corresponding VariableClasses defined in the ClusterClass.\n          items:\n            $ref: '#/components/schemas/sigs.k8s.io.cluster-api.api.v1beta1.ClusterVariable'\n            default: {}\n          type: array\n        version:\n          default: \"\"\n          description: The Kubernetes version of the cluster.\n          type: string\n        workers:\n          $ref: '#/components/schemas/sigs.k8s.io.cluster-api.api.v1beta1.WorkersTopology'\n          description: Workers encapsulates the different constructs that form the\n            worker nodes for the cluster.\n      required:\n      - class\n      - version\n      type: object\n    sigs.k8s.io.cluster-api.api.v1beta1.WorkersTopology:\n      description: WorkersTopology represents the different sets of worker nodes in\n        the cluster.\n      properties:\n        machineDeployments:\n          description: MachineDeployments is a list of machine deployments in the\n            cluster.\n          items:\n            $ref: '#/components/schemas/sigs.k8s.io.cluster-api.api.v1beta1.MachineDeploymentTopology'\n            default: {}\n          type: array\n      type: object\n    sigs.k8s.io.cluster-api.exp.runtime.hooks.api.v1alpha1.AfterClusterUpgradeRequest:\n      description: AfterClusterUpgradeRequest is the request of the hook.\n      properties:\n        apiVersion:\n          description: 'APIVersion defines the versioned schema of this representation\n            of an object. Servers should convert recognized schemas to the latest\n            internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'\n          type: string\n        cluster:\n          $ref: '#/components/schemas/sigs.k8s.io.cluster-api.api.v1beta1.Cluster'\n          default: {}\n          description: The cluster object the lifecycle hook corresponds to.\n        kind:\n          description: 'Kind is a string value representing the REST resource this\n            object represents. Servers may infer this from the endpoint the client\n            submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'\n          type: string\n        kubernetesVersion:\n          default: \"\"\n          description: The version after upgrade.\n          type: string\n      required:\n      - cluster\n      - kubernetesVersion\n      type: object\n    sigs.k8s.io.cluster-api.exp.runtime.hooks.api.v1alpha1.AfterClusterUpgradeResponse:\n      description: AfterClusterUpgradeResponse is the response of AfterClusterUpgrade\n        hook.\n      properties:\n        apiVersion:\n          description: 'APIVersion defines the versioned schema of this representation\n            of an object. Servers should convert recognized schemas to the latest\n            internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'\n          type: string\n        kind:\n          description: 'Kind is a string value representing the REST resource this\n            object represents. Servers may infer this from the endpoint the client\n            submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'\n          type: string\n        message:\n          default: \"\"\n          description: A human-readable description of the status of the call.\n          type: string\n        status:\n          default: \"\"\n          description: |-\n            Status of the call. One of \"Success\" or \"Failure\".\n\n            Possible enum values:\n             - `\"Failure\"`\n             - `\"Success\"`\n          enum:\n          - Failure\n          - Success\n          type: string\n      required:\n      - status\n      - message\n      type: object\n    sigs.k8s.io.cluster-api.exp.runtime.hooks.api.v1alpha1.AfterControlPlaneInitializedRequest:\n      description: AfterControlPlaneInitializedRequest is the request of the hook.\n      properties:\n        apiVersion:\n          description: 'APIVersion defines the versioned schema of this representation\n            of an object. Servers should convert recognized schemas to the latest\n            internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'\n          type: string\n        cluster:\n          $ref: '#/components/schemas/sigs.k8s.io.cluster-api.api.v1beta1.Cluster'\n          default: {}\n          description: The cluster object the lifecycle hook corresponds to.\n        kind:\n          description: 'Kind is a string value representing the REST resource this\n            object represents. Servers may infer this from the endpoint the client\n            submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'\n          type: string\n      required:\n      - cluster\n      type: object\n    sigs.k8s.io.cluster-api.exp.runtime.hooks.api.v1alpha1.AfterControlPlaneInitializedResponse:\n      description: AfterControlPlaneInitializedResponse is the response of AfterControlPlaneInitialized\n        hook.\n      properties:\n        apiVersion:\n          description: 'APIVersion defines the versioned schema of this representation\n            of an object. Servers should convert recognized schemas to the latest\n            internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'\n          type: string\n        kind:\n          description: 'Kind is a string value representing the REST resource this\n            object represents. Servers may infer this from the endpoint the client\n            submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'\n          type: string\n        message:\n          default: \"\"\n          description: A human-readable description of the status of the call.\n          type: string\n        status:\n          default: \"\"\n          description: |-\n            Status of the call. One of \"Success\" or \"Failure\".\n\n            Possible enum values:\n             - `\"Failure\"`\n             - `\"Success\"`\n          enum:\n          - Failure\n          - Success\n          type: string\n      required:\n      - status\n      - message\n      type: object\n    sigs.k8s.io.cluster-api.exp.runtime.hooks.api.v1alpha1.AfterControlPlaneUpgradeRequest:\n      description: AfterControlPlaneUpgradeRequest is the request of the hook.\n      properties:\n        apiVersion:\n          description: 'APIVersion defines the versioned schema of this representation\n            of an object. Servers should convert recognized schemas to the latest\n            internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'\n          type: string\n        cluster:\n          $ref: '#/components/schemas/sigs.k8s.io.cluster-api.api.v1beta1.Cluster'\n          default: {}\n          description: The cluster object the lifecycle hook corresponds to.\n        kind:\n          description: 'Kind is a string value representing the REST resource this\n            object represents. Servers may infer this from the endpoint the client\n            submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'\n          type: string\n        kubernetesVersion:\n          default: \"\"\n          description: The version after upgrade.\n          type: string\n      required:\n      - cluster\n      - kubernetesVersion\n      type: object\n    sigs.k8s.io.cluster-api.exp.runtime.hooks.api.v1alpha1.AfterControlPlaneUpgradeResponse:\n      description: AfterControlPlaneUpgradeResponse is the response of AfterControlPlaneUpgrade\n        hook.\n      properties:\n        apiVersion:\n          description: 'APIVersion defines the versioned schema of this representation\n            of an object. Servers should convert recognized schemas to the latest\n            internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'\n          type: string\n        kind:\n          description: 'Kind is a string value representing the REST resource this\n            object represents. Servers may infer this from the endpoint the client\n            submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'\n          type: string\n        message:\n          default: \"\"\n          description: A human-readable description of the status of the call.\n          type: string\n        retryAfterSeconds:\n          default: 0\n          description: RetryAfterSeconds when set to a non-zero signifies that the\n            hook needs to be retried at a future time.\n          format: int32\n          type: integer\n        status:\n          default: \"\"\n          description: |-\n            Status of the call. One of \"Success\" or \"Failure\".\n\n            Possible enum values:\n             - `\"Failure\"`\n             - `\"Success\"`\n          enum:\n          - Failure\n          - Success\n          type: string\n      required:\n      - status\n      - retryAfterSeconds\n      - message\n      type: object\n    sigs.k8s.io.cluster-api.exp.runtime.hooks.api.v1alpha1.BeforeClusterCreateRequest:\n      description: BeforeClusterCreateRequest is the request of the hook.\n      properties:\n        apiVersion:\n          description: 'APIVersion defines the versioned schema of this representation\n            of an object. Servers should convert recognized schemas to the latest\n            internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'\n          type: string\n        cluster:\n          $ref: '#/components/schemas/sigs.k8s.io.cluster-api.api.v1beta1.Cluster'\n          default: {}\n          description: The cluster object the lifecycle hook corresponds to.\n        kind:\n          description: 'Kind is a string value representing the REST resource this\n            object represents. Servers may infer this from the endpoint the client\n            submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'\n          type: string\n      required:\n      - cluster\n      type: object\n    sigs.k8s.io.cluster-api.exp.runtime.hooks.api.v1alpha1.BeforeClusterCreateResponse:\n      description: BeforeClusterCreateResponse is the response of BeforeClusterCreate\n        hook.\n      properties:\n        apiVersion:\n          description: 'APIVersion defines the versioned schema of this representation\n            of an object. Servers should convert recognized schemas to the latest\n            internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'\n          type: string\n        kind:\n          description: 'Kind is a string value representing the REST resource this\n            object represents. Servers may infer this from the endpoint the client\n            submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'\n          type: string\n        message:\n          default: \"\"\n          description: A human-readable description of the status of the call.\n          type: string\n        retryAfterSeconds:\n          default: 0\n          description: RetryAfterSeconds when set to a non-zero signifies that the\n            hook needs to be retried at a future time.\n          format: int32\n          type: integer\n        status:\n          default: \"\"\n          description: |-\n            Status of the call. One of \"Success\" or \"Failure\".\n\n            Possible enum values:\n             - `\"Failure\"`\n             - `\"Success\"`\n          enum:\n          - Failure\n          - Success\n          type: string\n      required:\n      - status\n      - retryAfterSeconds\n      - message\n      type: object\n    sigs.k8s.io.cluster-api.exp.runtime.hooks.api.v1alpha1.BeforeClusterDeleteRequest:\n      description: BeforeClusterDeleteRequest is the request of the hook.\n      properties:\n        apiVersion:\n          description: 'APIVersion defines the versioned schema of this representation\n            of an object. Servers should convert recognized schemas to the latest\n            internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'\n          type: string\n        cluster:\n          $ref: '#/components/schemas/sigs.k8s.io.cluster-api.api.v1beta1.Cluster'\n          default: {}\n          description: The cluster object the lifecycle hook corresponds to.\n        kind:\n          description: 'Kind is a string value representing the REST resource this\n            object represents. Servers may infer this from the endpoint the client\n            submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'\n          type: string\n      required:\n      - cluster\n      type: object\n    sigs.k8s.io.cluster-api.exp.runtime.hooks.api.v1alpha1.BeforeClusterDeleteResponse:\n      description: BeforeClusterDeleteResponse is the response of BeforeClusterDelete\n        hook.\n      properties:\n        apiVersion:\n          description: 'APIVersion defines the versioned schema of this representation\n            of an object. Servers should convert recognized schemas to the latest\n            internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'\n          type: string\n        kind:\n          description: 'Kind is a string value representing the REST resource this\n            object represents. Servers may infer this from the endpoint the client\n            submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'\n          type: string\n        message:\n          default: \"\"\n          description: A human-readable description of the status of the call.\n          type: string\n        retryAfterSeconds:\n          default: 0\n          description: RetryAfterSeconds when set to a non-zero signifies that the\n            hook needs to be retried at a future time.\n          format: int32\n          type: integer\n        status:\n          default: \"\"\n          description: |-\n            Status of the call. One of \"Success\" or \"Failure\".\n\n            Possible enum values:\n             - `\"Failure\"`\n             - `\"Success\"`\n          enum:\n          - Failure\n          - Success\n          type: string\n      required:\n      - status\n      - retryAfterSeconds\n      - message\n      type: object\n    sigs.k8s.io.cluster-api.exp.runtime.hooks.api.v1alpha1.BeforeClusterUpgradeRequest:\n      description: BeforeClusterUpgradeRequest is the request of the hook.\n      properties:\n        apiVersion:\n          description: 'APIVersion defines the versioned schema of this representation\n            of an object. Servers should convert recognized schemas to the latest\n            internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'\n          type: string\n        cluster:\n          $ref: '#/components/schemas/sigs.k8s.io.cluster-api.api.v1beta1.Cluster'\n          default: {}\n          description: The cluster object the lifecycle hook corresponds to.\n        fromKubernetesVersion:\n          default: \"\"\n          description: The current version of the cluster.\n          type: string\n        kind:\n          description: 'Kind is a string value representing the REST resource this\n            object represents. Servers may infer this from the endpoint the client\n            submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'\n          type: string\n        toKubernetesVersion:\n          default: \"\"\n          description: The target version of upgrade.\n          type: string\n      required:\n      - cluster\n      - fromKubernetesVersion\n      - toKubernetesVersion\n      type: object\n    sigs.k8s.io.cluster-api.exp.runtime.hooks.api.v1alpha1.BeforeClusterUpgradeResponse:\n      description: BeforeClusterUpgradeResponse is the response of BeforeClusterUpgrade\n        hook.\n      properties:\n        apiVersion:\n          description: 'APIVersion defines the versioned schema of this representation\n            of an object. Servers should convert recognized schemas to the latest\n            internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'\n          type: string\n        kind:\n          description: 'Kind is a string value representing the REST resource this\n            object represents. Servers may infer this from the endpoint the client\n            submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'\n          type: string\n        message:\n          default: \"\"\n          description: A human-readable description of the status of the call.\n          type: string\n        retryAfterSeconds:\n          default: 0\n          description: RetryAfterSeconds when set to a non-zero signifies that the\n            hook needs to be retried at a future time.\n          format: int32\n          type: integer\n        status:\n          default: \"\"\n          description: |-\n            Status of the call. One of \"Success\" or \"Failure\".\n\n            Possible enum values:\n             - `\"Failure\"`\n             - `\"Success\"`\n          enum:\n          - Failure\n          - Success\n          type: string\n      required:\n      - status\n      - retryAfterSeconds\n      - message\n      type: object\ninfo:\n  description: Open API specification for Cluster API Runtime SDK\n  license:\n    name: Apache 2.0\n    url: http://www.apache.org/licenses/LICENSE-2.0.html\n  title: Cluster API - Runtime SDK\n  version: v1.2.0\nopenapi: 3.0.0\npaths:\n  /hooks.runtime.cluster.x-k8s.io/v1alpha1/afterclusterupgrade/{name}:\n    post:\n      description: TThis hook is called after the Cluster, control plane and workers\n        have been upgraded to the version specified in spec.topology.version. Runtime\n        Extensions implementers can use this hook to execute post-upgrade tasks. This\n        hook does not block any further changes or upgrades to the Cluster.\n      operationId: hooksRuntimeClusterV1alpha1AfterClusterUpgrade\n      parameters:\n      - in: path\n        name: name\n        required: true\n        schema:\n          type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/sigs.k8s.io.cluster-api.exp.runtime.hooks.api.v1alpha1.AfterClusterUpgradeRequest'\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/sigs.k8s.io.cluster-api.exp.runtime.hooks.api.v1alpha1.AfterClusterUpgradeResponse'\n          description: OK\n      summary: Called after the Cluster finished upgrade\n      tags:\n      - Lifecycle Hooks\n  /hooks.runtime.cluster.x-k8s.io/v1alpha1/aftercontrolplaneinitialized/{name}:\n    post:\n      description: This hook is called after the ControlPlane for the Cluster is marked\n        as available for the first time. Runtime Extension implementers can use this\n        hook to execute tasks that are only possible once the Control Plane is available.\n        This hook does not block any further changes to the Cluster.\n      operationId: hooksRuntimeClusterV1alpha1AfterControlPlaneInitialized\n      parameters:\n      - in: path\n        name: name\n        required: true\n        schema:\n          type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/sigs.k8s.io.cluster-api.exp.runtime.hooks.api.v1alpha1.AfterControlPlaneInitializedRequest'\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/sigs.k8s.io.cluster-api.exp.runtime.hooks.api.v1alpha1.AfterControlPlaneInitializedResponse'\n          description: OK\n      summary: Called after the Control Plane is available for the first time\n      tags:\n      - Lifecycle Hooks\n  /hooks.runtime.cluster.x-k8s.io/v1alpha1/aftercontrolplaneupgrade/{name}:\n    post:\n      description: This hook is called after the control plane has been upgraded to\n        the version specified in spec.topology.version, and immediately before the\n        new version is going to be propagated to the MachineDeployments existing in\n        the Cluster. Runtime Extension implementers can use this hook to execute post-upgrade\n        tasks and eventually block upgrades to workers.\n      operationId: hooksRuntimeClusterV1alpha1AfterControlPlaneUpgrade\n      parameters:\n      - in: path\n        name: name\n        required: true\n        schema:\n          type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/sigs.k8s.io.cluster-api.exp.runtime.hooks.api.v1alpha1.AfterControlPlaneUpgradeRequest'\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/sigs.k8s.io.cluster-api.exp.runtime.hooks.api.v1alpha1.AfterControlPlaneUpgradeResponse'\n          description: OK\n      summary: Called after the Control Plane finished upgrade\n      tags:\n      - Lifecycle Hooks\n  /hooks.runtime.cluster.x-k8s.io/v1alpha1/beforeclustercreate/{name}:\n    post:\n      description: This hook is called after the Cluster object has been created by\n        the user, immediately before all the objects which are part of a Cluster topology\n        are going to be created. Runtime Extension implementers can use this hook\n        to determine/prepare add-ons for the Cluster and block the creation of those\n        objects.\n      operationId: hooksRuntimeClusterV1alpha1BeforeClusterCreate\n      parameters:\n      - in: path\n        name: name\n        required: true\n        schema:\n          type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/sigs.k8s.io.cluster-api.exp.runtime.hooks.api.v1alpha1.BeforeClusterCreateRequest'\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/sigs.k8s.io.cluster-api.exp.runtime.hooks.api.v1alpha1.BeforeClusterCreateResponse'\n          description: OK\n      summary: Called before Cluster topology is created\n      tags:\n      - Lifecycle Hooks\n  /hooks.runtime.cluster.x-k8s.io/v1alpha1/beforeclusterdelete/{name}:\n    post:\n      description: This hook is called after the Cluster has been deleted by the user,\n        and immediately before objects existing in the Cluster are going to be deleted.\n        Runtime Extension implementers can use this hook to execute cleanup tasks\n        and eventually block deletion of the Cluster and descendant objects until\n        everything is ready.\n      operationId: hooksRuntimeClusterV1alpha1BeforeClusterDelete\n      parameters:\n      - in: path\n        name: name\n        required: true\n        schema:\n          type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/sigs.k8s.io.cluster-api.exp.runtime.hooks.api.v1alpha1.BeforeClusterDeleteRequest'\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/sigs.k8s.io.cluster-api.exp.runtime.hooks.api.v1alpha1.BeforeClusterDeleteResponse'\n          description: OK\n      summary: Called before the Cluster is deleted\n      tags:\n      - Lifecycle Hooks\n  /hooks.runtime.cluster.x-k8s.io/v1alpha1/beforeclusterupgrade/{name}:\n    post:\n      description: This hook is called after the Cluster object has been updated with\n        a new spec.topology.version by the user, and immediately before the new version\n        is going to be propagated to the control plane. Runtime Extension implementers\n        can use this hook to execute pre-upgrade tasks and block upgrades of the ControlPlane\n        and Workers.\n      operationId: hooksRuntimeClusterV1alpha1BeforeClusterUpgrade\n      parameters:\n      - in: path\n        name: name\n        required: true\n        schema:\n          type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/sigs.k8s.io.cluster-api.exp.runtime.hooks.api.v1alpha1.BeforeClusterUpgradeRequest'\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/sigs.k8s.io.cluster-api.exp.runtime.hooks.api.v1alpha1.BeforeClusterUpgradeResponse'\n          description: OK\n      summary: Called before the Cluster begins upgrade\n      tags:\n      - Lifecycle Hooks\n",
			"canonicalURL": "/github.com/kubernetes-sigs/cluster-api@f61194df963027e4c005e83a00ae3f917d413d4d/-/blob/docs/proposals/images/runtime-hooks/runtime-hooks-openapi.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/kubernetes-sigs/cluster-api/blob/f61194df963027e4c005e83a00ae3f917d413d4d/docs/proposals/images/runtime-hooks/runtime-hooks-openapi.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "parse: parse spec: parse components: at 1:15: schemas: \"sigs.k8s.io.cluster-api.exp.runtime.hooks.api.v1alpha1.AfterClusterUpgradeRequest\": parse schema: property \"cluster\": at 1:32132: parse schema: resolve \"#/components/schemas/sigs.k8s.io.cluster-api.api.v1beta1.Cluster\": parse schema: property \"metadata\": at 1:16599: parse schema: resolve \"#/components/schemas/k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta\": parse schema: property \"creationTimestamp\": at 1:5738: parse default: expected type \"string\", got \"object\""
}