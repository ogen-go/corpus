{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/DefiLlama/defillama-app"
		},
		"file": {
			"name": "resolvedSpec.json",
			"size": 0,
			"path": "src/docs/resolvedSpec.json",
			"byteSize": 55617,
			"content": "{\n  \"openapi\": \"3.0.0\",\n  \"info\": {\n    \"description\": \"Docs for defillama's open API\\n\",\n    \"version\": \"1.0.0-oas3\",\n    \"title\": \"DefiLlama API\"\n  },\n  \"tags\": [\n    {\n      \"name\": \"TVL\",\n      \"description\": \"Retrieve TVL data\"\n    },\n    {\n      \"name\": \"coins\",\n      \"description\": \"General blockchain data used by defillama and open-sourced\"\n    },\n    {\n      \"name\": \"stablecoins\",\n      \"description\": \"Data from our stablecoins dashboard\"\n    },\n    {\n      \"name\": \"yields\",\n      \"description\": \"Data from our yields/APY dashboard\"\n    },\n    {\n      \"name\": \"abi-decoder\",\n      \"description\": \"Function and event signatures decoded\"\n    },\n    {\n      \"name\": \"bridges\",\n      \"description\": \"Data from our bridges dashboard\"\n    },\n    {\n      \"name\": \"volumes\",\n      \"description\": \"Data from our volumes dashboards\"\n    },\n    {\n      \"name\": \"fees and revenue\",\n      \"description\": \"Data from our fees and revenue dashboard\"\n    }\n  ],\n  \"servers\": [\n    {\n      \"url\": \"https://api.llama.fi\"\n    }\n  ],\n  \"paths\": {\n    \"/protocols\": {\n      \"get\": {\n        \"tags\": [\n          \"TVL\"\n        ],\n        \"summary\": \"List all protocols on defillama along with their tvl\",\n        \"responses\": {\n          \"200\": {\n            \"description\": \"successful operation\"\n          }\n        }\n      }\n    },\n    \"/protocol/{protocol}\": {\n      \"get\": {\n        \"tags\": [\n          \"TVL\"\n        ],\n        \"summary\": \"Get historical TVL of a protocol and breakdowns by token and chain\",\n        \"parameters\": [\n          {\n            \"name\": \"protocol\",\n            \"in\": \"path\",\n            \"description\": \"protocol slug\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\",\n              \"example\": \"aave\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"successful operation\"\n          }\n        }\n      }\n    },\n    \"/charts\": {\n      \"get\": {\n        \"tags\": [\n          \"TVL\"\n        ],\n        \"summary\": \"Get historical TVL of DeFi on all chains\",\n        \"responses\": {\n          \"200\": {\n            \"description\": \"successful operation\"\n          }\n        }\n      }\n    },\n    \"/charts/{chain}\": {\n      \"get\": {\n        \"tags\": [\n          \"TVL\"\n        ],\n        \"summary\": \"Get historical TVL of a chain\",\n        \"parameters\": [\n          {\n            \"name\": \"chain\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"description\": \"chain slug, you can get these from /chains or the chains property on /protocols\",\n            \"schema\": {\n              \"type\": \"string\",\n              \"example\": \"Ethereum\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"successful operation\"\n          }\n        }\n      }\n    },\n    \"/tvl/{protocol}\": {\n      \"get\": {\n        \"tags\": [\n          \"TVL\"\n        ],\n        \"summary\": \"Simplified endpoint to get current TVL of a protocol\",\n        \"description\": \"Simplified endpoint that only returns a number, the current TVL of a protocol\",\n        \"parameters\": [\n          {\n            \"name\": \"protocol\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"description\": \"protocol slug\",\n            \"schema\": {\n              \"type\": \"string\",\n              \"example\": \"uniswap\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"successful operation\"\n          }\n        }\n      }\n    },\n    \"/chains\": {\n      \"get\": {\n        \"tags\": [\n          \"TVL\"\n        ],\n        \"summary\": \"Get current TVL of all chains\",\n        \"responses\": {\n          \"200\": {\n            \"description\": \"successful operation\"\n          }\n        }\n      }\n    },\n    \"/prices/current/{coins}\": {\n      \"get\": {\n        \"tags\": [\n          \"coins\"\n        ],\n        \"summary\": \"Get current prices of tokens by contract address\",\n        \"description\": \"The goal of this API is to price as many tokens as possible, including exotic ones that never get traded, which makes them impossible to price by looking at markets.\\n\\nThe base of our data are prices pulled from coingecko, which is then extended through multiple means:\\n- We price all bridged tokens by using the price of the token in it's original chain, so we fetch all bridged versions of USDC on arbitrum, fantom, avax... and price all them using the price for the token on Ethereum, which we know. Right now we support 10 different bridging protocols.\\n- We have multiple adapters to price specialized sets of tokens by running custom code:\\n  - We price yearn's yToken LPs by checking how much underlying token can be withdrawn for each LP\\n  - Aave, compound and euler LP tokens are also priced based on their relationship against underlying tokens\\n  - Uniswap, curve, balancer and stargate LPs are priced using the underlying tokens in each pair\\n  - GMX's GLP token is priced based on the value of tokens given on withdrawal (which includes calculations based on trader's PnL)\\n  \\n  - Synthetix tokens are priced using forex prices of the coin they are pegged to\\n- For tokens that we haven't been able to price in any other way, we find the pool with most liquidity for each on uniswap, curve and serum and then use the prices provided on those exchanges.\\n  \\n  Unlike all the other tokens, we can't confirm that these prices are correct, so we only ingest the ones that have sufficient liquidity and, even in that case, we attach a `confidence` value to them that is related to the depth of liquidity and which represents our confidence in the quality of each price. API consumers can choose to filter out prices with low confidence values.\\n  \\n Our API server is fully open source and we are constantly adding more pricing adapters, extending the amount of tokens we support.\\n  \\nTokens are queried using {chain}:{address}, where chain is an identifier such as ethereum, bsc, polygon, avax... You can also get tokens by coingecko id by setting `coingecko` as the chain, eg: coingecko:ethereum, coingecko:bitcoin. Examples:\\n  - ethereum:0xdF574c24545E5FfEcb9a659c229253D4111d87e1\\n  - bsc:0x762539b45a1dcce3d36d080f74d1aed37844b878\\n  - coingecko:ethereum\\n  - arbitrum:0x4277f8f2c384827b5273592ff7cebd9f2c1ac258\\n\",\n        \"servers\": [\n          {\n            \"url\": \"https://coins.llama.fi\"\n          }\n        ],\n        \"parameters\": [\n          {\n            \"name\": \"coins\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"description\": \"set of comma-separated tokens defined as {chain}:{address}\",\n            \"schema\": {\n              \"type\": \"string\",\n              \"example\": \"ethereum:0xdF574c24545E5FfEcb9a659c229253D4111d87e1,coingecko:ethereum,bsc:0x762539b45a1dcce3d36d080f74d1aed37844b878,ethereum:0xdB25f211AB05b1c97D595516F45794528a807ad8\"\n            }\n          },\n          {\n            \"name\": \"searchWidth\",\n            \"in\": \"query\",\n            \"required\": false,\n            \"description\": \"time range on either side to find price data, defaults to 6 hours\",\n            \"schema\": {\n              \"type\": \"string\",\n              \"example\": \"4h\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"successful operation\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"coins\": {\n                      \"type\": \"object\",\n                      \"properties\": {\n                        \"ethereum:0xdF574c24545E5FfEcb9a659c229253D4111d87e1\": {\n                          \"type\": \"object\",\n                          \"properties\": {\n                            \"decimals\": {\n                              \"type\": \"number\",\n                              \"example\": 8\n                            },\n                            \"price\": {\n                              \"type\": \"number\",\n                              \"example\": 0.884394\n                            },\n                            \"symbol\": {\n                              \"type\": \"string\",\n                              \"example\": \"HUSD\"\n                            },\n                            \"timestamp\": {\n                              \"type\": \"number\",\n                              \"example\": 1666962780\n                            },\n                            \"confidence\": {\n                              \"type\": \"number\",\n                              \"example\": 0.99\n                            }\n                          }\n                        }\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"502\": {\n            \"description\": \"Internal error\"\n          }\n        }\n      }\n    },\n    \"/prices/historical/{timestamp}/{coins}\": {\n      \"get\": {\n        \"tags\": [\n          \"coins\"\n        ],\n        \"summary\": \"Get historical prices of tokens by contract address\",\n        \"description\": \"See /prices/current for explanation on how prices are sourced.\",\n        \"servers\": [\n          {\n            \"url\": \"https://coins.llama.fi\"\n          }\n        ],\n        \"parameters\": [\n          {\n            \"name\": \"coins\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"description\": \"set of comma-separated tokens defined as {chain}:{address}\",\n            \"schema\": {\n              \"type\": \"string\",\n              \"example\": \"ethereum:0xdF574c24545E5FfEcb9a659c229253D4111d87e1,coingecko:ethereum,bsc:0x762539b45a1dcce3d36d080f74d1aed37844b878,ethereum:0xdB25f211AB05b1c97D595516F45794528a807ad8\"\n            }\n          },\n          {\n            \"name\": \"timestamp\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"description\": \"UNIX timestamp of time when you want historical prices\",\n            \"schema\": {\n              \"type\": \"number\",\n              \"example\": 1648680149\n            }\n          },\n          {\n            \"name\": \"searchWidth\",\n            \"in\": \"query\",\n            \"required\": false,\n            \"description\": \"time range on either side to find price data, defaults to 6 hours\",\n            \"schema\": {\n              \"type\": \"string\",\n              \"example\": \"4h\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"successful operation\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"coins\": {\n                      \"type\": \"object\",\n                      \"properties\": {\n                        \"ethereum:0xdF574c24545E5FfEcb9a659c229253D4111d87e1\": {\n                          \"type\": \"object\",\n                          \"properties\": {\n                            \"decimals\": {\n                              \"type\": \"number\",\n                              \"example\": 8\n                            },\n                            \"price\": {\n                              \"type\": \"number\",\n                              \"example\": 0.022053735051098835\n                            },\n                            \"symbol\": {\n                              \"type\": \"string\",\n                              \"example\": \"cDAI\"\n                            },\n                            \"timestamp\": {\n                              \"type\": \"number\",\n                              \"example\": 1648680149\n                            }\n                          }\n                        }\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"502\": {\n            \"description\": \"Internal error\"\n          }\n        }\n      }\n    },\n    \"/batchHistorical\": {\n      \"get\": {\n        \"tags\": [\n          \"coins\"\n        ],\n        \"summary\": \"Get historical prices for multiple tokens at multiple different timestamps\",\n        \"description\": \"Strings accepted by period and searchWidth:\\nCan use regular chart candle notion like ‘4h’ etc where:\\nW = week, D = day, H = hour, M = minute (not case sensitive)\\n\",\n        \"servers\": [\n          {\n            \"url\": \"https://coins.llama.fi\"\n          }\n        ],\n        \"parameters\": [\n          {\n            \"name\": \"coins\",\n            \"in\": \"query\",\n            \"required\": true,\n            \"description\": \"object where keys are coins in the form {chain}:{address}, and values are arrays of requested timestamps\",\n            \"schema\": {\n              \"type\": \"string\",\n              \"example\": \"{\\n\\\"avax:0xb97ef9ef8734c71904d8002f8b6bc66dd9c48a6e\\\": [1666876743, 1666862343],\\n\\\"coingecko:ethereum\\\": [1666869543, 1666862343]\\n}\\n\"\n            }\n          },\n          {\n            \"name\": \"searchWidth\",\n            \"in\": \"query\",\n            \"required\": false,\n            \"description\": \"time range on either side to find price data, defaults to 6 hours\",\n            \"schema\": {\n              \"type\": \"string\",\n              \"example\": 600\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"successful operation\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"coins\": {\n                      \"type\": \"object\",\n                      \"properties\": {\n                        \"avax:0xb97ef9ef8734c71904d8002f8b6bc66dd9c48a6e\": {\n                          \"type\": \"object\",\n                          \"properties\": {\n                            \"symbol\": {\n                              \"type\": \"string\",\n                              \"example\": \"USDC\"\n                            },\n                            \"prices\": {\n                              \"type\": \"array\",\n                              \"items\": {\n                                \"type\": \"object\",\n                                \"properties\": {\n                                  \"timestamp\": {\n                                    \"type\": \"number\",\n                                    \"example\": 1666876674\n                                  },\n                                  \"price\": {\n                                    \"type\": \"number\",\n                                    \"example\": 0.999436\n                                  },\n                                  \"confidence\": {\n                                    \"type\": \"number\",\n                                    \"example\": 0.99\n                                  }\n                                }\n                              }\n                            }\n                          }\n                        }\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"502\": {\n            \"description\": \"Internal error\"\n          }\n        }\n      }\n    },\n    \"/chart/{coins}\": {\n      \"get\": {\n        \"tags\": [\n          \"coins\"\n        ],\n        \"summary\": \"Get token prices at regular time intervals\",\n        \"description\": \"Strings accepted by period and searchWidth:\\nCan use regular chart candle notion like ‘4h’ etc where:\\nW = week, D = day, H = hour, M = minute (not case sensitive)\\n\",\n        \"servers\": [\n          {\n            \"url\": \"https://coins.llama.fi\"\n          }\n        ],\n        \"parameters\": [\n          {\n            \"name\": \"coins\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"description\": \"set of comma-separated tokens defined as {chain}:{address}\",\n            \"schema\": {\n              \"type\": \"string\",\n              \"example\": \"ethereum:0xdF574c24545E5FfEcb9a659c229253D4111d87e1,coingecko:ethereum,bsc:0x762539b45a1dcce3d36d080f74d1aed37844b878,ethereum:0xdB25f211AB05b1c97D595516F45794528a807ad8\"\n            }\n          },\n          {\n            \"name\": \"start\",\n            \"in\": \"query\",\n            \"required\": false,\n            \"description\": \"unix timestamp of earliest data point requested\",\n            \"schema\": {\n              \"type\": \"number\",\n              \"example\": 1664364537\n            }\n          },\n          {\n            \"name\": \"end\",\n            \"in\": \"query\",\n            \"required\": false,\n            \"description\": \"unix timestamp of latest data point requested\",\n            \"schema\": {\n              \"type\": \"number\",\n              \"example\": null\n            }\n          },\n          {\n            \"name\": \"span\",\n            \"in\": \"query\",\n            \"required\": false,\n            \"description\": \"number of data points returned, defaults to 0\",\n            \"schema\": {\n              \"type\": \"number\",\n              \"example\": 10\n            }\n          },\n          {\n            \"name\": \"period\",\n            \"in\": \"query\",\n            \"required\": false,\n            \"description\": \"duration between data points, defaults to 24 hours\",\n            \"schema\": {\n              \"type\": \"string\",\n              \"example\": \"2d\"\n            }\n          },\n          {\n            \"name\": \"searchWidth\",\n            \"in\": \"query\",\n            \"required\": false,\n            \"description\": \"time range on either side to find price data, defaults to 10% of period\",\n            \"schema\": {\n              \"type\": \"string\",\n              \"example\": 600\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"successful operation\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"coins\": {\n                      \"type\": \"object\",\n                      \"properties\": {\n                        \"ethereum:0xdF574c24545E5FfEcb9a659c229253D4111d87e1\": {\n                          \"type\": \"object\",\n                          \"properties\": {\n                            \"decimals\": {\n                              \"type\": \"number\",\n                              \"example\": 8\n                            },\n                            \"confidence\": {\n                              \"type\": \"number\",\n                              \"example\": 0.99\n                            },\n                            \"prices\": {\n                              \"type\": \"array\",\n                              \"items\": {\n                                \"type\": \"object\",\n                                \"properties\": {\n                                  \"timestamp\": {\n                                    \"type\": \"number\",\n                                    \"example\": 1666790570\n                                  },\n                                  \"price\": {\n                                    \"type\": \"number\",\n                                    \"example\": 0.984519\n                                  }\n                                }\n                              }\n                            },\n                            \"symbol\": {\n                              \"type\": \"string\",\n                              \"example\": \"HUSD\"\n                            }\n                          }\n                        }\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"502\": {\n            \"description\": \"Internal error\"\n          }\n        }\n      }\n    },\n    \"/percentage/{coins}\": {\n      \"get\": {\n        \"tags\": [\n          \"coins\"\n        ],\n        \"summary\": \"Get percentage change in price over time\",\n        \"description\": \"Strings accepted by period:\\nCan use regular chart candle notion like ‘4h’ etc where:\\nW = week, D = day, H = hour, M = minute (not case sensitive)\\n\",\n        \"servers\": [\n          {\n            \"url\": \"https://coins.llama.fi\"\n          }\n        ],\n        \"parameters\": [\n          {\n            \"name\": \"coins\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"description\": \"set of comma-separated tokens defined as {chain}:{address}\",\n            \"schema\": {\n              \"type\": \"string\",\n              \"example\": \"ethereum:0xdF574c24545E5FfEcb9a659c229253D4111d87e1,coingecko:ethereum,bsc:0x762539b45a1dcce3d36d080f74d1aed37844b878,ethereum:0xdB25f211AB05b1c97D595516F45794528a807ad8\"\n            }\n          },\n          {\n            \"name\": \"timestamp\",\n            \"in\": \"query\",\n            \"required\": false,\n            \"description\": \"timestamp of data point requested, defaults to time now\",\n            \"schema\": {\n              \"type\": \"number\",\n              \"example\": 1664364537\n            }\n          },\n          {\n            \"name\": \"lookForward\",\n            \"in\": \"query\",\n            \"required\": false,\n            \"description\": \"whether you want the duration after your given timestamp or not, defaults to false (looking back)\",\n            \"schema\": {\n              \"type\": \"boolean\",\n              \"example\": false\n            }\n          },\n          {\n            \"name\": \"period\",\n            \"in\": \"query\",\n            \"required\": false,\n            \"description\": \"duration between data points, defaults to 24 hours\",\n            \"schema\": {\n              \"type\": \"string\",\n              \"example\": \"3w\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"successful operation\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"coins\": {\n                      \"type\": \"object\",\n                      \"properties\": {\n                        \"ethereum:0xdF574c24545E5FfEcb9a659c229253D4111d87e1\": {\n                          \"type\": \"number\",\n                          \"example\": -2.3009954568977147\n                        }\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"502\": {\n            \"description\": \"Internal error\"\n          }\n        }\n      }\n    },\n    \"/prices/first/{coins}\": {\n      \"get\": {\n        \"tags\": [\n          \"coins\"\n        ],\n        \"summary\": \"Get earliest timestamp price record for coins\",\n        \"servers\": [\n          {\n            \"url\": \"https://coins.llama.fi\"\n          }\n        ],\n        \"parameters\": [\n          {\n            \"name\": \"coins\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"description\": \"set of comma-separated tokens defined as {chain}:{address}\",\n            \"schema\": {\n              \"type\": \"string\",\n              \"example\": \"ethereum:0xdF574c24545E5FfEcb9a659c229253D4111d87e1,coingecko:ethereum,bsc:0x762539b45a1dcce3d36d080f74d1aed37844b878,ethereum:0xdB25f211AB05b1c97D595516F45794528a807ad8\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"successful operation\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"coins\": {\n                      \"type\": \"object\",\n                      \"properties\": {\n                        \"ethereum:0xdF574c24545E5FfEcb9a659c229253D4111d87e1\": {\n                          \"type\": \"object\",\n                          \"properties\": {\n                            \"price\": {\n                              \"type\": \"number\",\n                              \"example\": 0.9992047673109988\n                            },\n                            \"symbol\": {\n                              \"type\": \"string\",\n                              \"example\": \"HUSD\"\n                            },\n                            \"timestamp\": {\n                              \"type\": \"number\",\n                              \"example\": 1568883821\n                            }\n                          }\n                        }\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"502\": {\n            \"description\": \"Internal error\"\n          }\n        }\n      }\n    },\n    \"/block/{chain}/{timestamp}\": {\n      \"get\": {\n        \"tags\": [\n          \"coins\"\n        ],\n        \"summary\": \"Get the closest block to a timestamp\",\n        \"description\": \"Runs binary search over a blockchain's blocks to get the closest one to a timestamp.\\nEvery time this is run we add new data to our database, so each query permanently speeds up future queries.\\n\",\n        \"servers\": [\n          {\n            \"url\": \"https://coins.llama.fi\"\n          }\n        ],\n        \"parameters\": [\n          {\n            \"name\": \"chain\",\n            \"in\": \"path\",\n            \"description\": \"Chain which you want to get the block from\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"timestamp\",\n            \"in\": \"path\",\n            \"description\": \"UNIX timestamp of the block you are searching for\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"integer\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"successful operation\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"height\": {\n                      \"type\": \"integer\",\n                      \"format\": \"uint\",\n                      \"example\": 11150916\n                    },\n                    \"timestamp\": {\n                      \"type\": \"integer\",\n                      \"format\": \"uint\",\n                      \"example\": 1603964988\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"description\": \"Invalid chain or timestamp provided\"\n          }\n        }\n      }\n    },\n    \"/stablecoins\": {\n      \"get\": {\n        \"tags\": [\n          \"stablecoins\"\n        ],\n        \"summary\": \"List all stablecoins along with their circulating amounts\",\n        \"servers\": [\n          {\n            \"url\": \"https://stablecoins.llama.fi\"\n          }\n        ],\n        \"parameters\": [\n          {\n            \"name\": \"includePrices\",\n            \"in\": \"query\",\n            \"required\": false,\n            \"description\": \"set whether to include current stablecoin prices\",\n            \"schema\": {\n              \"type\": \"boolean\",\n              \"example\": true\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"successful operation\"\n          }\n        }\n      }\n    },\n    \"/stablecoincharts/all\": {\n      \"get\": {\n        \"tags\": [\n          \"stablecoins\"\n        ],\n        \"summary\": \"Get historical mcap sum of all stablecoins\",\n        \"servers\": [\n          {\n            \"url\": \"https://stablecoins.llama.fi\"\n          }\n        ],\n        \"parameters\": [\n          {\n            \"name\": \"stablecoin\",\n            \"in\": \"query\",\n            \"required\": false,\n            \"description\": \"stablecoin ID, you can get these from /stablecoins\",\n            \"schema\": {\n              \"type\": \"integer\",\n              \"example\": 1\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"successful operation\"\n          }\n        }\n      }\n    },\n    \"/stablecoincharts/{chain}\": {\n      \"get\": {\n        \"tags\": [\n          \"stablecoins\"\n        ],\n        \"summary\": \"Get historical mcap sum of all stablecoins in a chain\",\n        \"servers\": [\n          {\n            \"url\": \"https://stablecoins.llama.fi\"\n          }\n        ],\n        \"parameters\": [\n          {\n            \"name\": \"chain\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"description\": \"chain slug, you can get these from /chains or the chains property on /protocols\",\n            \"schema\": {\n              \"type\": \"string\",\n              \"example\": \"Ethereum\"\n            }\n          },\n          {\n            \"name\": \"stablecoin\",\n            \"in\": \"query\",\n            \"required\": false,\n            \"description\": \"stablecoin ID, you can get these from /stablecoins\",\n            \"schema\": {\n              \"type\": \"integer\",\n              \"example\": 1\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"successful operation\"\n          }\n        }\n      }\n    },\n    \"/stablecoin/{asset}\": {\n      \"get\": {\n        \"tags\": [\n          \"stablecoins\"\n        ],\n        \"summary\": \"Get historical mcap and historical chain distribution of a stablecoin\",\n        \"servers\": [\n          {\n            \"url\": \"https://stablecoins.llama.fi\"\n          }\n        ],\n        \"parameters\": [\n          {\n            \"name\": \"asset\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"description\": \"stablecoin ID, you can get these from /stablecoins\",\n            \"schema\": {\n              \"type\": \"integer\",\n              \"example\": 1\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"successful operation\"\n          }\n        }\n      }\n    },\n    \"/stablecoinchains\": {\n      \"get\": {\n        \"tags\": [\n          \"stablecoins\"\n        ],\n        \"summary\": \"Get current mcap sum of all stablecoins on each chain\",\n        \"servers\": [\n          {\n            \"url\": \"https://stablecoins.llama.fi\"\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"successful operation\"\n          }\n        }\n      }\n    },\n    \"/stablecoinprices\": {\n      \"get\": {\n        \"tags\": [\n          \"stablecoins\"\n        ],\n        \"summary\": \"Get historical prices of all stablecoins\",\n        \"servers\": [\n          {\n            \"url\": \"https://stablecoins.llama.fi\"\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"successful operation\"\n          }\n        }\n      }\n    },\n    \"/pools\": {\n      \"get\": {\n        \"tags\": [\n          \"yields\"\n        ],\n        \"summary\": \"Retrieve the latest data for all pools, including enriched information such as predictions\",\n        \"servers\": [\n          {\n            \"url\": \"https://yields.llama.fi\"\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"successful operation\"\n          }\n        }\n      }\n    },\n    \"/chart/{pool}\": {\n      \"get\": {\n        \"tags\": [\n          \"yields\"\n        ],\n        \"summary\": \"Get historical APY and TVL of a pool\",\n        \"servers\": [\n          {\n            \"url\": \"https://yields.llama.fi\"\n          }\n        ],\n        \"parameters\": [\n          {\n            \"name\": \"pool\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"description\": \"pool id, can be retrieved from /pools (property is called pool)\",\n            \"schema\": {\n              \"type\": \"string\",\n              \"example\": \"747c1d2a-c668-4682-b9f9-296708a3dd90\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"successful operation\"\n          }\n        }\n      }\n    },\n    \"/fetch/signature\": {\n      \"get\": {\n        \"tags\": [\n          \"abi-decoder\"\n        ],\n        \"summary\": \"Get the ABI for a function or event signature.\",\n        \"servers\": [\n          {\n            \"url\": \"https://abi-decoder.llama.fi\"\n          }\n        ],\n        \"parameters\": [\n          {\n            \"name\": \"functions\",\n            \"in\": \"query\",\n            \"required\": false,\n            \"description\": \"function 4 byte signatures, you can add many signatures by joining them with ','\",\n            \"schema\": {\n              \"type\": \"string\",\n              \"example\": \"0x23b872dd,0x18fccc76,0xb6b55f25,0xf5d07b60\"\n            }\n          },\n          {\n            \"name\": \"events\",\n            \"in\": \"query\",\n            \"required\": false,\n            \"description\": \"event signatures, you can add many signatures by joining them with ','\",\n            \"schema\": {\n              \"type\": \"string\",\n              \"example\": \"0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef,0xc42079f94a6350d7e6235f29174924f928cc2ac818eb64fed8004e115fbcca67,0x4cc7e95e48af62690313a0733e93308ac9a73326bc3c29f1788b1191c376d5b6\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"successful operation\"\n          }\n        }\n      }\n    },\n    \"/fetch/contract/{chain}/{address}\": {\n      \"get\": {\n        \"tags\": [\n          \"abi-decoder\"\n        ],\n        \"summary\": \"Get the verbose ABI for a function or event signature for a particular contract\",\n        \"servers\": [\n          {\n            \"url\": \"https://abi-decoder.llama.fi\"\n          }\n        ],\n        \"parameters\": [\n          {\n            \"name\": \"chain\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"description\": \"Chain the smart contract is located in\",\n            \"schema\": {\n              \"type\": \"string\",\n              \"enum\": [\n                \"arbitrum\",\n                \"avalanche\",\n                \"bsc\",\n                \"celo\",\n                \"ethereum\",\n                \"fantom\",\n                \"optimism\",\n                \"polygon\",\n                \"tron\"\n              ],\n              \"example\": \"ethereum\"\n            }\n          },\n          {\n            \"name\": \"address\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"description\": \"Address of the smart contract\",\n            \"schema\": {\n              \"type\": \"string\",\n              \"example\": \"0x02f7bd798e765369a9d204e9095b2a526ef01667\"\n            }\n          },\n          {\n            \"name\": \"functions\",\n            \"in\": \"query\",\n            \"required\": false,\n            \"description\": \"function 4 byte signatures, you can add many signatures by joining them with ','\",\n            \"schema\": {\n              \"type\": \"string\",\n              \"example\": \"0xf43f523a,0x95d89b41,0x95d89b41,0x70a08231,0x70a08231\"\n            }\n          },\n          {\n            \"name\": \"events\",\n            \"in\": \"query\",\n            \"required\": false,\n            \"description\": \"event signatures, you can add many signatures by joining them with ','\",\n            \"schema\": {\n              \"type\": \"string\",\n              \"example\": \"0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef,0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"successful operation\"\n          }\n        }\n      }\n    },\n    \"/bridges\": {\n      \"get\": {\n        \"tags\": [\n          \"bridges\"\n        ],\n        \"summary\": \"List all bridges along with summaries of recent bridge volumes.\",\n        \"servers\": [\n          {\n            \"url\": \"https://bridges.llama.fi\"\n          }\n        ],\n        \"parameters\": [\n          {\n            \"name\": \"includeChains\",\n            \"in\": \"query\",\n            \"required\": false,\n            \"description\": \"set whether to include current previous day volume breakdown by chain\",\n            \"schema\": {\n              \"type\": \"boolean\",\n              \"example\": true\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"successful operation\"\n          }\n        }\n      }\n    },\n    \"/bridge/{id}\": {\n      \"get\": {\n        \"tags\": [\n          \"bridges\"\n        ],\n        \"summary\": \"Get summary of bridge volume and volume breakdown by chain\",\n        \"servers\": [\n          {\n            \"url\": \"https://bridges.llama.fi\"\n          }\n        ],\n        \"parameters\": [\n          {\n            \"name\": \"id\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"description\": \"bridge ID, you can get these from /bridges\",\n            \"schema\": {\n              \"type\": \"integer\",\n              \"example\": 1\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"successful operation\"\n          }\n        }\n      }\n    },\n    \"/bridgevolume/{chain}\": {\n      \"get\": {\n        \"tags\": [\n          \"bridges\"\n        ],\n        \"summary\": \"Get historical volumes for a bridge, chain, or bridge on a particular chain\",\n        \"servers\": [\n          {\n            \"url\": \"https://bridges.llama.fi\"\n          }\n        ],\n        \"parameters\": [\n          {\n            \"name\": \"chain\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"description\": \"chain slug, you can get these from /chains. Call also use 'all' for volume on all chains.\",\n            \"schema\": {\n              \"type\": \"string\",\n              \"example\": \"Ethereum\"\n            }\n          },\n          {\n            \"name\": \"id\",\n            \"in\": \"query\",\n            \"required\": false,\n            \"description\": \"bridge ID, you can get these from /bridges\",\n            \"schema\": {\n              \"type\": \"integer\",\n              \"example\": 5\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"successful operation\"\n          }\n        }\n      }\n    },\n    \"/bridgedaystats/{timestamp}/{chain}\": {\n      \"get\": {\n        \"tags\": [\n          \"bridges\"\n        ],\n        \"summary\": \"Get a 24hr token and address volume breakdown for a bridge\",\n        \"servers\": [\n          {\n            \"url\": \"https://bridges.llama.fi\"\n          }\n        ],\n        \"parameters\": [\n          {\n            \"name\": \"timestamp\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"description\": \"Unix timestamp. Data returned will be for the 24hr period starting at 00:00 UTC that the timestamp lands in.\",\n            \"schema\": {\n              \"type\": \"integer\",\n              \"example\": 1667304000\n            }\n          },\n          {\n            \"name\": \"chain\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"description\": \"chain slug, you can get these from /chains.\",\n            \"schema\": {\n              \"type\": \"string\",\n              \"example\": \"Ethereum\"\n            }\n          },\n          {\n            \"name\": \"id\",\n            \"in\": \"query\",\n            \"required\": false,\n            \"description\": \"bridge ID, you can get these from /bridges\",\n            \"schema\": {\n              \"type\": \"integer\",\n              \"example\": 5\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"successful operation\"\n          }\n        }\n      }\n    },\n    \"/transactions/{id}\": {\n      \"get\": {\n        \"tags\": [\n          \"bridges\"\n        ],\n        \"summary\": \"Get all transactions for a bridge within a date range\",\n        \"servers\": [\n          {\n            \"url\": \"https://bridges.llama.fi\"\n          }\n        ],\n        \"parameters\": [\n          {\n            \"name\": \"id\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"description\": \"bridge ID, you can get these from /bridges\",\n            \"schema\": {\n              \"type\": \"integer\",\n              \"example\": 1\n            }\n          },\n          {\n            \"name\": \"starttimestamp\",\n            \"in\": \"query\",\n            \"required\": false,\n            \"description\": \"start timestamp (Unix Timestamp) for date range\",\n            \"schema\": {\n              \"type\": \"integer\",\n              \"example\": 1667260800\n            }\n          },\n          {\n            \"name\": \"endtimestamp\",\n            \"in\": \"query\",\n            \"required\": false,\n            \"description\": \"end timestamp (Unix timestamp) for date range\",\n            \"schema\": {\n              \"type\": \"integer\",\n              \"example\": 1667347200\n            }\n          },\n          {\n            \"name\": \"sourcechain\",\n            \"in\": \"query\",\n            \"required\": false,\n            \"description\": \"Returns only transactions that are bridging from the specified source chain.\",\n            \"schema\": {\n              \"type\": \"string\",\n              \"example\": \"Polygon\"\n            }\n          },\n          {\n            \"name\": \"address\",\n            \"in\": \"query\",\n            \"required\": false,\n            \"description\": \"Returns only transactions with specified address as \\\"from\\\" or \\\"to\\\". Addresses are quried in the form {chain}:{address}, where chain is an identifier such as ethereum, bsc, polygon, avax... .\",\n            \"schema\": {\n              \"type\": \"string\",\n              \"example\": \"ethereum:0x69b4B4390Bd1f0aE84E090Fe8af7AbAd2d95Cc8E\"\n            }\n          },\n          {\n            \"name\": \"limit\",\n            \"in\": \"query\",\n            \"required\": false,\n            \"description\": \"limit to number of transactions returned, maximum is 6000\",\n            \"schema\": {\n              \"type\": \"integer\",\n              \"example\": 200\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"successful operation\"\n          }\n        }\n      }\n    },\n    \"/overview/dexs\": {\n      \"get\": {\n        \"tags\": [\n          \"volumes\"\n        ],\n        \"summary\": \"List all dexs along with summaries of their volumes and dataType history data\",\n        \"servers\": [\n          {\n            \"url\": \"https://api.llama.fi\"\n          }\n        ],\n        \"parameters\": [\n          {\n            \"name\": \"excludeTotalDataChart\",\n            \"in\": \"query\",\n            \"required\": false,\n            \"description\": \"true to exclude aggregated chart from response\",\n            \"schema\": {\n              \"type\": \"boolean\",\n              \"example\": true\n            }\n          },\n          {\n            \"name\": \"excludeTotalDataChartBreakdown\",\n            \"in\": \"query\",\n            \"required\": false,\n            \"description\": \"true to exclude broken down chart from response\",\n            \"schema\": {\n              \"type\": \"boolean\",\n              \"example\": true\n            }\n          },\n          {\n            \"name\": \"dataType\",\n            \"in\": \"query\",\n            \"required\": false,\n            \"description\": \"Desired data type, dailyVolume by default.\",\n            \"schema\": {\n              \"type\": \"string\",\n              \"enum\": [\n                \"dailyVolume\",\n                \"totalVolume\"\n              ],\n              \"example\": \"dailyVolume\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"successful operation\"\n          }\n        }\n      }\n    },\n    \"/overview/dexs/{chain}\": {\n      \"get\": {\n        \"tags\": [\n          \"volumes\"\n        ],\n        \"summary\": \"List all dexs along with summaries of their volumes and dataType history data filtering by chain\",\n        \"servers\": [\n          {\n            \"url\": \"https://api.llama.fi\"\n          }\n        ],\n        \"parameters\": [\n          {\n            \"name\": \"chain\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"description\": \"chain name, list of all supported chains can be found under allChains attribute in /overview/dexs response\",\n            \"schema\": {\n              \"type\": \"string\",\n              \"example\": \"ethereum\"\n            }\n          },\n          {\n            \"name\": \"excludeTotalDataChart\",\n            \"in\": \"query\",\n            \"required\": false,\n            \"description\": \"true to exclude aggregated chart from response\",\n            \"schema\": {\n              \"type\": \"boolean\",\n              \"example\": true\n            }\n          },\n          {\n            \"name\": \"excludeTotalDataChartBreakdown\",\n            \"in\": \"query\",\n            \"required\": false,\n            \"description\": \"true to exclude broken down chart from response\",\n            \"schema\": {\n              \"type\": \"boolean\",\n              \"example\": true\n            }\n          },\n          {\n            \"name\": \"dataType\",\n            \"in\": \"query\",\n            \"required\": false,\n            \"description\": \"Desired data type, dailyVolume by default.\",\n            \"schema\": {\n              \"type\": \"string\",\n              \"enum\": [\n                \"dailyVolume\",\n                \"totalVolume\"\n              ],\n              \"example\": \"dailyVolume\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"successful operation\"\n          }\n        }\n      }\n    },\n    \"/summary/dexs/{protocol}\": {\n      \"get\": {\n        \"tags\": [\n          \"volumes\"\n        ],\n        \"summary\": \"Get summary of dex volume with historical data\",\n        \"servers\": [\n          {\n            \"url\": \"https://api.llama.fi\"\n          }\n        ],\n        \"parameters\": [\n          {\n            \"name\": \"protocol\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"description\": \"protocol slug\",\n            \"schema\": {\n              \"type\": \"string\",\n              \"example\": \"aave\"\n            }\n          },\n          {\n            \"name\": \"excludeTotalDataChart\",\n            \"in\": \"query\",\n            \"required\": false,\n            \"description\": \"true to exclude aggregated chart from response\",\n            \"schema\": {\n              \"type\": \"boolean\",\n              \"example\": true\n            }\n          },\n          {\n            \"name\": \"excludeTotalDataChartBreakdown\",\n            \"in\": \"query\",\n            \"required\": false,\n            \"description\": \"true to exclude broken down chart from response\",\n            \"schema\": {\n              \"type\": \"boolean\",\n              \"example\": true\n            }\n          },\n          {\n            \"name\": \"dataType\",\n            \"in\": \"query\",\n            \"required\": false,\n            \"description\": \"Desired data type, dailyVolume by default.\",\n            \"schema\": {\n              \"type\": \"string\",\n              \"enum\": [\n                \"dailyVolume\",\n                \"totalVolume\"\n              ],\n              \"example\": \"dailyVolume\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"successful operation\"\n          }\n        }\n      }\n    },\n    \"/overview/options\": {\n      \"get\": {\n        \"tags\": [\n          \"volumes\"\n        ],\n        \"summary\": \"List all options dexs along with summaries of their volumes and dataType history data\",\n        \"servers\": [\n          {\n            \"url\": \"https://api.llama.fi\"\n          }\n        ],\n        \"parameters\": [\n          {\n            \"name\": \"excludeTotalDataChart\",\n            \"in\": \"query\",\n            \"required\": false,\n            \"description\": \"true to exclude aggregated chart from response\",\n            \"schema\": {\n              \"type\": \"boolean\",\n              \"example\": true\n            }\n          },\n          {\n            \"name\": \"excludeTotalDataChartBreakdown\",\n            \"in\": \"query\",\n            \"required\": false,\n            \"description\": \"true to exclude broken down chart from response\",\n            \"schema\": {\n              \"type\": \"boolean\",\n              \"example\": true\n            }\n          },\n          {\n            \"name\": \"dataType\",\n            \"in\": \"query\",\n            \"required\": false,\n            \"description\": \"Desired data type, dailyNotionalVolume by default.\",\n            \"schema\": {\n              \"type\": \"string\",\n              \"enum\": [\n                \"dailyPremiumVolume\",\n                \"dailyNotionalVolume\",\n                \"totalPremiumVolume\",\n                \"totalNotionalVolume\"\n              ],\n              \"example\": \"dailyPremiumVolume\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"successful operation\"\n          }\n        }\n      }\n    },\n    \"/overview/options/{chain}\": {\n      \"get\": {\n        \"tags\": [\n          \"volumes\"\n        ],\n        \"summary\": \"List all options dexs along with summaries of their volumes and dataType history data filtering by chain\",\n        \"servers\": [\n          {\n            \"url\": \"https://api.llama.fi\"\n          }\n        ],\n        \"parameters\": [\n          {\n            \"name\": \"chain\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"description\": \"chain name, list of all supported chains can be found under allChains attribute in /overview/options response\",\n            \"schema\": {\n              \"type\": \"string\",\n              \"example\": \"ethereum\"\n            }\n          },\n          {\n            \"name\": \"excludeTotalDataChart\",\n            \"in\": \"query\",\n            \"required\": false,\n            \"description\": \"true to exclude aggregated chart from response\",\n            \"schema\": {\n              \"type\": \"boolean\",\n              \"example\": true\n            }\n          },\n          {\n            \"name\": \"excludeTotalDataChartBreakdown\",\n            \"in\": \"query\",\n            \"required\": false,\n            \"description\": \"true to exclude broken down chart from response\",\n            \"schema\": {\n              \"type\": \"boolean\",\n              \"example\": true\n            }\n          },\n          {\n            \"name\": \"dataType\",\n            \"in\": \"query\",\n            \"required\": false,\n            \"description\": \"Desired data type, dailyNotionalVolume by default.\",\n            \"schema\": {\n              \"type\": \"string\",\n              \"enum\": [\n                \"dailyPremiumVolume\",\n                \"dailyNotionalVolume\",\n                \"totalPremiumVolume\",\n                \"totalNotionalVolume\"\n              ],\n              \"example\": \"dailyPremiumVolume\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"successful operation\"\n          }\n        }\n      }\n    },\n    \"/summary/options/{protocol}\": {\n      \"get\": {\n        \"tags\": [\n          \"volumes\"\n        ],\n        \"summary\": \"Get summary of options dex volume with historical data\",\n        \"servers\": [\n          {\n            \"url\": \"https://api.llama.fi\"\n          }\n        ],\n        \"parameters\": [\n          {\n            \"name\": \"protocol\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"description\": \"protocol slug\",\n            \"schema\": {\n              \"type\": \"string\",\n              \"example\": \"lyra\"\n            }\n          },\n          {\n            \"name\": \"dataType\",\n            \"in\": \"query\",\n            \"required\": false,\n            \"description\": \"Desired data type, dailyNotionalVolume by default.\",\n            \"schema\": {\n              \"type\": \"string\",\n              \"enum\": [\n                \"dailyPremiumVolume\",\n                \"dailyNotionalVolume\",\n                \"totalPremiumVolume\",\n                \"totalNotionalVolume\"\n              ],\n              \"example\": \"dailyPremiumVolume\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"successful operation\"\n          }\n        }\n      }\n    },\n    \"/overview/fees\": {\n      \"get\": {\n        \"tags\": [\n          \"fees and revenue\"\n        ],\n        \"summary\": \"List all protocols along with summaries of their fees and revenue and dataType history data\",\n        \"servers\": [\n          {\n            \"url\": \"https://api.llama.fi\"\n          }\n        ],\n        \"parameters\": [\n          {\n            \"name\": \"excludeTotalDataChart\",\n            \"in\": \"query\",\n            \"required\": false,\n            \"description\": \"true to exclude aggregated chart from response\",\n            \"schema\": {\n              \"type\": \"boolean\",\n              \"example\": true\n            }\n          },\n          {\n            \"name\": \"excludeTotalDataChartBreakdown\",\n            \"in\": \"query\",\n            \"required\": false,\n            \"description\": \"true to exclude broken down chart from response\",\n            \"schema\": {\n              \"type\": \"boolean\",\n              \"example\": true\n            }\n          },\n          {\n            \"name\": \"dataType\",\n            \"in\": \"query\",\n            \"required\": false,\n            \"description\": \"Desired data type, dailyFees by default.\",\n            \"schema\": {\n              \"type\": \"string\",\n              \"enum\": [\n                \"totalFees\",\n                \"dailyFees\",\n                \"totalRevenue\",\n                \"dailyRevenue\"\n              ],\n              \"example\": \"dailyFees\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"successful operation\"\n          }\n        }\n      }\n    },\n    \"/overview/fees/{chain}\": {\n      \"get\": {\n        \"tags\": [\n          \"fees and revenue\"\n        ],\n        \"summary\": \"List all protocols along with summaries of their fees and revenue and dataType history data by chain\",\n        \"servers\": [\n          {\n            \"url\": \"https://api.llama.fi\"\n          }\n        ],\n        \"parameters\": [\n          {\n            \"name\": \"chain\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"description\": \"chain name, list of all supported chains can be found under allChains attribute in /overview/fees response\",\n            \"schema\": {\n              \"type\": \"string\",\n              \"example\": \"ethereum\"\n            }\n          },\n          {\n            \"name\": \"excludeTotalDataChart\",\n            \"in\": \"query\",\n            \"required\": false,\n            \"description\": \"true to exclude aggregated chart from response\",\n            \"schema\": {\n              \"type\": \"boolean\",\n              \"example\": true\n            }\n          },\n          {\n            \"name\": \"excludeTotalDataChartBreakdown\",\n            \"in\": \"query\",\n            \"required\": false,\n            \"description\": \"true to exclude broken down chart from response\",\n            \"schema\": {\n              \"type\": \"boolean\",\n              \"example\": true\n            }\n          },\n          {\n            \"name\": \"dataType\",\n            \"in\": \"query\",\n            \"required\": false,\n            \"description\": \"Desired data type, dailyFees by default.\",\n            \"schema\": {\n              \"type\": \"string\",\n              \"enum\": [\n                \"totalFees\",\n                \"dailyFees\",\n                \"totalRevenue\",\n                \"dailyRevenue\"\n              ],\n              \"example\": \"dailyFees\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"successful operation\"\n          }\n        }\n      }\n    },\n    \"/summary/fees/{protocol}\": {\n      \"get\": {\n        \"tags\": [\n          \"fees and revenue\"\n        ],\n        \"summary\": \"Get summary of protocol fees and revenue with historical data\",\n        \"servers\": [\n          {\n            \"url\": \"https://api.llama.fi\"\n          }\n        ],\n        \"parameters\": [\n          {\n            \"name\": \"protocol\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"description\": \"protocol slug\",\n            \"schema\": {\n              \"type\": \"string\",\n              \"example\": \"lyra\"\n            }\n          },\n          {\n            \"name\": \"dataType\",\n            \"in\": \"query\",\n            \"required\": false,\n            \"description\": \"Desired data type, dailyFees by default.\",\n            \"schema\": {\n              \"type\": \"string\",\n              \"enum\": [\n                \"totalFees\",\n                \"dailyFees\",\n                \"totalRevenue\",\n                \"dailyRevenue\"\n              ],\n              \"example\": \"dailyFees\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"successful operation\"\n          }\n        }\n      }\n    }\n  }\n}",
			"canonicalURL": "/github.com/DefiLlama/defillama-app@5f43d313b4885111aaade6314f7de6145d002d09/-/blob/src/docs/resolvedSpec.json",
			"externalURLs": [
				{
					"url": "https://github.com/DefiLlama/defillama-app/blob/5f43d313b4885111aaade6314f7de6145d002d09/src/docs/resolvedSpec.json",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "parse: parse spec: parse path items: at src/docs/resolvedSpec.json:944:5: duplicate path: \"/chart/{pool}\""
}