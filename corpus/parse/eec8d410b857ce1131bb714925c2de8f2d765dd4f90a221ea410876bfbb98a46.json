{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/GemeenteUtrecht/zaakafhandelcomponent"
		},
		"file": {
			"name": "dowc.yaml",
			"size": 0,
			"path": "backend/src/zac/tests/schemas/dowc.yaml",
			"byteSize": 7905,
			"content": "openapi: 3.0.3\ninfo:\n  title: DO.W.C.\n  version: 1.0.0\n  description: |-\n    DO.W.C. facilitates reading and editing centrally located documents on local clients.\n    This API provides an interface to request the URL required to read/edit a document.\n  contact:\n    url: https://github.com/GemeenteUtrecht/dowc\npaths:\n  /api/v1/documenten:\n    get:\n      operationId: documenten_list\n      description: |-\n        List the files available for local editing or viewing via WebDAV.\n\n        Each file has a 'magic URL' pointing to the relevant MS Office protocol to\n        open the file in a local MS Office client.\n      summary: List available Documenten API files\n      parameters:\n      - in: query\n        name: drc_url\n        schema:\n          type: string\n          format: uri\n          description: URL reference to the source document in the Documents API.\n            May include the 'versie' querystring parameter.\n        description: drc_url\n      - in: query\n        name: purpose\n        schema:\n          enum:\n          - read\n          - write\n          type: string\n          description: Purpose of requesting the document.\n        description: purpose\n      tags:\n      - documenten\n      security:\n      - tokenAuth: []\n      - ZGWAuthentication: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/DocumentFile'\n          description: ''\n    post:\n      operationId: documenten_create\n      description: |-\n        Make a file available for local editing or viewing via WebDAV.\n\n        The response contains a 'magic URL' understood by MS Office to view or edit\n        the file in a local client.\n      summary: Make Documenten API file available\n      tags:\n      - documenten\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/DocumentFile'\n          application/x-www-form-urlencoded:\n            schema:\n              $ref: '#/components/schemas/DocumentFile'\n          multipart/form-data:\n            schema:\n              $ref: '#/components/schemas/DocumentFile'\n        required: true\n      security:\n      - tokenAuth: []\n      - ZGWAuthentication: []\n      responses:\n        '201':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DocumentFile'\n          description: ''\n  /api/v1/documenten/{uuid}:\n    get:\n      operationId: documenten_retrieve\n      description: ''\n      summary: Get local file details\n      parameters:\n      - in: path\n        name: uuid\n        schema:\n          type: string\n          format: uuid\n          description: A unique UUID for the DocumentFile object.\n        required: true\n      tags:\n      - documenten\n      security:\n      - tokenAuth: []\n      - ZGWAuthentication: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DocumentFile'\n          description: ''\n    put:\n      operationId: documenten_update\n      description: ''\n      parameters:\n      - in: path\n        name: uuid\n        schema:\n          type: string\n          format: uuid\n          description: A unique UUID for the DocumentFile object.\n        required: true\n      tags:\n      - documenten\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/DocumentFile'\n          application/x-www-form-urlencoded:\n            schema:\n              $ref: '#/components/schemas/DocumentFile'\n          multipart/form-data:\n            schema:\n              $ref: '#/components/schemas/DocumentFile'\n        required: true\n      security:\n      - tokenAuth: []\n      - ZGWAuthentication: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DocumentFile'\n          description: ''\n    patch:\n      operationId: documenten_partial_update\n      description: ''\n      parameters:\n      - in: path\n        name: uuid\n        schema:\n          type: string\n          format: uuid\n          description: A unique UUID for the DocumentFile object.\n        required: true\n      tags:\n      - documenten\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/PatchedDocumentFile'\n          application/x-www-form-urlencoded:\n            schema:\n              $ref: '#/components/schemas/PatchedDocumentFile'\n          multipart/form-data:\n            schema:\n              $ref: '#/components/schemas/PatchedDocumentFile'\n      security:\n      - tokenAuth: []\n      - ZGWAuthentication: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DocumentFile'\n          description: ''\n    delete:\n      operationId: documenten_destroy\n      description: |-\n        Check in local edits and/or delete local WebDAV file.\n\n        The response contains the URL and version of the resulting checked in document.\n      summary: Check in/delete Documenten API file.\n      parameters:\n      - in: path\n        name: uuid\n        schema:\n          type: string\n          format: uuid\n          description: A unique UUID for the DocumentFile object.\n        required: true\n      tags:\n      - documenten\n      security:\n      - tokenAuth: []\n      - ZGWAuthentication: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/UnlockedDocument'\n          description: ''\ncomponents:\n  schemas:\n    DocumentFile:\n      type: object\n      properties:\n        drcUrl:\n          type: string\n          format: uri\n          writeOnly: true\n          description: URL reference to the source document in the Documents API.\n            May include the 'versie' querystring parameter.\n          maxLength: 1000\n        purpose:\n          allOf:\n          - $ref: '#/components/schemas/PurposeEnum'\n          description: Purpose of requesting the document.\n        magicUrl:\n          type: string\n          readOnly: true\n        uuid:\n          type: string\n          format: uuid\n          readOnly: true\n          description: A unique UUID for the DocumentFile object.\n      required:\n      - drcUrl\n      - magicUrl\n      - purpose\n      - uuid\n    PatchedDocumentFile:\n      type: object\n      properties:\n        drcUrl:\n          type: string\n          format: uri\n          writeOnly: true\n          description: URL reference to the source document in the Documents API.\n            May include the 'versie' querystring parameter.\n          maxLength: 1000\n        purpose:\n          allOf:\n          - $ref: '#/components/schemas/PurposeEnum'\n          description: Purpose of requesting the document.\n        magicUrl:\n          type: string\n          readOnly: true\n        uuid:\n          type: string\n          format: uuid\n          readOnly: true\n          description: A unique UUID for the DocumentFile object.\n    PurposeEnum:\n      enum:\n      - write\n      - read\n      type: string\n    UnlockedDocument:\n      type: object\n      properties:\n        url:\n          type: string\n        versie:\n          type: integer\n        versionedUrl:\n          type: string\n          readOnly: true\n      required:\n      - url\n      - versie\n      - versionedUrl\n  securitySchemes:\n    ZGWAuthentication:\n      type: http\n      in: beader\n      bearerFormat: JWT\n    tokenAuth:\n      type: apiKey\n      in: header\n      name: Authorization\n      description: Token-based authentication with required prefix \"Token\"\nservers:\n- url: https://dowc.utrechtproeftuin.nl\n",
			"canonicalURL": "/github.com/GemeenteUtrecht/zaakafhandelcomponent@309dfea76b97d5ee8fb5ca856851bdb2619afb18/-/blob/backend/src/zac/tests/schemas/dowc.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/GemeenteUtrecht/zaakafhandelcomponent/blob/309dfea76b97d5ee8fb5ca856851bdb2619afb18/backend/src/zac/tests/schemas/dowc.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "parse: parse spec: parse path items: path \"/api/v1/documenten\": get: operation \"documenten_list\": security: parse security scheme \"ZGWAuthentication\": http: at backend/src/zac/tests/schemas/dowc.yaml:277:7: invalid \"scheme\": \"\""
}