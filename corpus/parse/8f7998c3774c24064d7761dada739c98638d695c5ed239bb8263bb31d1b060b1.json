{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/ozonophore/openapi-codegen"
		},
		"file": {
			"name": "v3.yml",
			"size": 0,
			"path": "test/spec/v3.yml",
			"byteSize": 27863,
			"content": "---\nopenapi: 3.0.0\ninfo:\n  title: swagger\n  version: v1.0\nservers:\n  - url: http://localhost:3000/base\npaths:\n  \"/api/v{api-version}/simple\":\n    get:\n      tags:\n        - Simple\n      operationId: GetCallWithoutParametersAndResponse\n    put:\n      tags:\n        - Simple\n      operationId: PutCallWithoutParametersAndResponse\n    post:\n      tags:\n        - Simple\n      operationId: PostCallWithoutParametersAndResponse\n    delete:\n      tags:\n        - Simple\n      operationId: DeleteCallWithoutParametersAndResponse\n    options:\n      tags:\n        - Simple\n      operationId: OptionsCallWithoutParametersAndResponse\n    head:\n      tags:\n        - Simple\n      operationId: HeadCallWithoutParametersAndResponse\n    patch:\n      tags:\n        - Simple\n      operationId: PatchCallWithoutParametersAndResponse\n  \"/api/v{api-version}/parameters/{parameterPath}\":\n    get:\n      tags:\n        - Parameters\n      operationId: CallWithParameters\n      parameters:\n        - description: This is the parameter that goes into the header\n          name: parameterHeader\n          in: header\n          required: true\n          nullable: true\n          schema:\n            type: string\n        - description: This is the parameter that goes into the query params\n          name: parameterQuery\n          in: query\n          required: true\n          nullable: true\n          schema:\n            type: string\n        - description: This is the parameter that goes into the form data\n          name: parameterForm\n          in: formData\n          required: true\n          nullable: true\n          schema:\n            type: string\n        - description: This is the parameter that goes into the cookie\n          name: parameterCookie\n          in: cookie\n          required: true\n          nullable: true\n          schema:\n            type: string\n        - description: This is the parameter that goes into the path\n          name: parameterPath\n          in: path\n          required: true\n          nullable: true\n          schema:\n            type: string\n        - name: api-version\n          in: path\n          required: true\n          nullable: true\n          schema:\n            type: string\n      requestBody:\n        description: This is the parameter that goes into the body\n        required: true\n        nullable: true\n        content:\n          application/json:\n            description: Message for default response\n            schema:\n              \"$ref\": \"schemas/ModelWithString.yml\"\n  \"/api/v{api-version}/parameters/{parameter.path.1}/{parameter-path-2}/{PARAMETER-PATH-3}\":\n    get:\n      tags:\n        - Parameters\n      operationId: CallWithWeirdParameterNames\n      parameters:\n        - description: This is the parameter that goes into the path\n          name: parameter.path.1\n          in: path\n          required: false\n          nullable: false\n          schema:\n            type: string\n        - description: This is the parameter that goes into the path\n          name: parameter-path-2\n          in: path\n          required: false\n          nullable: false\n          schema:\n            type: string\n        - description: This is the parameter that goes into the path\n          name: PARAMETER-PATH-3\n          in: path\n          required: false\n          nullable: false\n          schema:\n            type: string\n        - description: This is the parameter with a reserved keyword\n          name: default\n          in: query\n          required: false\n          nullable: false\n          schema:\n            type: string\n        - description: This is the parameter that goes into the request header\n          name: parameter.header\n          in: header\n          required: true\n          nullable: true\n          schema:\n            type: string\n        - description: This is the parameter that goes into the request query params\n          name: parameter-query\n          in: query\n          required: true\n          nullable: true\n          schema:\n            type: string\n        - description: This is the parameter that goes into the request form data\n          name: parameter_form\n          in: formData\n          required: true\n          nullable: true\n          schema:\n            type: string\n        - description: This is the parameter that goes into the cookie\n          name: PARAMETER-COOKIE\n          in: cookie\n          required: true\n          nullable: true\n          schema:\n            type: string\n        - name: api-version\n          in: path\n          required: true\n          nullable: true\n          schema:\n            type: string\n      requestBody:\n        description: This is the parameter that goes into the body\n        required: true\n        nullable: true\n        content:\n          application/json:\n            description: Message for default response\n            schema:\n              \"$ref\": \"schemas/ModelWithString.yml\"\n  \"/api/v{api-version}/parameters/\":\n    get:\n      tags:\n        - Parameters\n      operationId: GetCallWithOptionalParam\n      parameters:\n        - description: This is an optional parameter\n          name: parameter\n          in: query\n          required: false\n          schema:\n            type: string\n      requestBody:\n        description: This is a required parameter\n        required: true\n        content:\n          application/json:\n            description: Message for default response\n            schema:\n              \"$ref\": \"schemas/ModelWithString.yml\"\n    post:\n      tags:\n        - Parameters\n      operationId: PostCallWithOptionalParam\n      parameters:\n        - description: This is a required parameter\n          name: parameter\n          in: query\n          required: true\n          schema:\n            type: string\n      requestBody:\n        description: This is an optional parameter\n        required: false\n        content:\n          application/json:\n            description: Message for default response\n            schema:\n              \"$ref\": \"schemas/ModelWithString.yml\"\n  \"/api/v{api-version}/requestBody/\":\n    post:\n      tags:\n        - RequestBody\n      requestBody:\n        \"$ref\": \"#/components/requestBodies/SimpleRequestBody\"\n  \"/api/v{api-version}/defaults\":\n    get:\n      tags:\n        - Defaults\n      operationId: CallWithDefaultParameters\n      parameters:\n        - description: This is a simple string with default value\n          name: parameterString\n          in: query\n          nullable: true\n          schema:\n            type: string\n            default: Hello World!\n        - description: This is a simple number with default value\n          name: parameterNumber\n          in: query\n          nullable: true\n          schema:\n            type: number\n            default: 123\n        - description: This is a simple boolean with default value\n          name: parameterBoolean\n          in: query\n          nullable: true\n          schema:\n            type: boolean\n            default: true\n        - description: This is a simple enum with default value\n          name: parameterEnum\n          in: query\n          schema:\n            enum:\n              - Success\n              - Warning\n              - Error\n            default: 0\n        - description: This is a simple model with default value\n          name: parameterModel\n          in: query\n          nullable: true\n          schema:\n            \"$ref\": \"schemas/ModelWithString.yml\"\n            default:\n              prop: Hello World!\n    post:\n      tags:\n        - Defaults\n      operationId: CallWithDefaultOptionalParameters\n      parameters:\n        - description: This is a simple string that is optional with default value\n          name: parameterString\n          in: query\n          required: false\n          schema:\n            type: string\n            default: Hello World!\n        - description: This is a simple number that is optional with default value\n          name: parameterNumber\n          in: query\n          required: false\n          schema:\n            type: number\n            default: 123\n        - description: This is a simple boolean that is optional with default value\n          name: parameterBoolean\n          in: query\n          required: false\n          schema:\n            type: boolean\n            default: true\n        - description: This is a simple enum that is optional with default value\n          name: parameterEnum\n          in: query\n          required: false\n          schema:\n            enum:\n              - Success\n              - Warning\n              - Error\n            default: 0\n        - description: This is a simple model that is optional with default value\n          name: parameterModel\n          in: query\n          required: false\n          schema:\n            \"$ref\": \"schemas/ModelWithString.yml\"\n            default:\n              prop: Hello World!\n    put:\n      tags:\n        - Defaults\n      operationId: CallToTestOrderOfParams\n      parameters:\n        - description: This is a optional string with default\n          name: parameterOptionalStringWithDefault\n          in: query\n          required: false\n          schema:\n            type: string\n            default: Hello World!\n        - description: This is a optional string with empty default\n          name: parameterOptionalStringWithEmptyDefault\n          in: query\n          required: false\n          schema:\n            type: string\n            default: ''\n        - description: This is a optional string with no default\n          name: parameterOptionalStringWithNoDefault\n          in: query\n          required: false\n          schema:\n            type: string\n        - description: This is a string with default\n          name: parameterStringWithDefault\n          in: query\n          required: true\n          schema:\n            type: string\n            default: Hello World!\n        - description: This is a string with empty default\n          name: parameterStringWithEmptyDefault\n          in: query\n          required: true\n          schema:\n            type: string\n            default: ''\n        - description: This is a string with no default\n          name: parameterStringWithNoDefault\n          in: query\n          required: true\n          schema:\n            type: string\n  \"/api/v{api-version}/duplicate\":\n    get:\n      tags:\n        - Duplicate\n      operationId: DuplicateName\n    post:\n      tags:\n        - Duplicate\n      operationId: DuplicateName\n    put:\n      tags:\n        - Duplicate\n      operationId: DuplicateName\n    delete:\n      tags:\n        - Duplicate\n      operationId: DuplicateName\n  \"/api/v{api-version}/no-content\":\n    get:\n      tags:\n        - NoContent\n      operationId: CallWithNoContentResponse\n      responses:\n        '204':\n          description: Success\n  \"/api/v{api-version}/response\":\n    get:\n      tags:\n        - Response\n      operationId: CallWithResponse\n      responses:\n        default:\n          content:\n            application/json:\n              description: Message for default response\n              schema:\n                \"$ref\": \"schemas/ModelWithString.yml\"\n    post:\n      tags:\n        - Response\n      operationId: CallWithDuplicateResponses\n      responses:\n        '201':\n          description: Message for 201 response\n          content:\n            application/json:\n              schema:\n                \"$ref\": \"schemas/ModelWithString.yml\"\n        '202':\n          description: Message for 202 response\n          content:\n            application/json:\n              schema:\n                \"$ref\": \"schemas/ModelWithString.yml\"\n        '500':\n          description: Message for 500 error\n          content:\n            application/json:\n              schema:\n                \"$ref\": \"schemas/ModelWithString.yml\"\n        '501':\n          description: Message for 501 error\n          content:\n            application/json:\n              schema:\n                \"$ref\": \"schemas/ModelWithString.yml\"\n        '502':\n          description: Message for 502 error\n          content:\n            application/json:\n              schema:\n                \"$ref\": \"schemas/ModelWithString.yml\"\n        default:\n          description: Message for default response\n          content:\n            application/json:\n              schema:\n                \"$ref\": \"schemas/ModelWithString.yml\"\n    put:\n      tags:\n        - Response\n      operationId: CallWithResponses\n      responses:\n        '200':\n          description: Message for 200 response\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  \"@namespace.string\":\n                    type: string\n                    readOnly: true\n                  \"@namespace.integer\":\n                    type: integer\n                    readOnly: true\n                  value:\n                    type: array\n                    items:\n                      \"$ref\": \"schemas/ModelWithString.yml\"\n                    readOnly: true\n        '201':\n          description: Message for 201 response\n          content:\n            application/json:\n              schema:\n                \"$ref\": \"schemas/ModelThatExtends.yml\"\n        '202':\n          description: Message for 202 response\n          content:\n            application/json:\n              schema:\n                \"$ref\": \"schemas/ModelThatExtends.yml\"\n        '500':\n          description: Message for 500 error\n          content:\n            application/json:\n              schema:\n                \"$ref\": \"schemas/ModelWithString.yml\"\n        '501':\n          description: Message for 501 error\n          content:\n            application/json:\n              schema:\n                \"$ref\": \"schemas/ModelWithString.yml\"\n        '502':\n          description: Message for 502 error\n          content:\n            application/json:\n              schema:\n                \"$ref\": \"schemas/ModelWithString.yml\"\n        default:\n          description: Message for default response\n          content:\n            application/json:\n              schema:\n                \"$ref\": \"schemas/ModelWithString.yml\"\n  \"/api/v{api-version}/collectionFormat\":\n    get:\n      tags:\n        - CollectionFormat\n      operationId: CollectionFormat\n      parameters:\n        - description: This is an array parameter that is send as csv format (comma-separated\n            values)\n          name: parameterArrayCSV\n          in: query\n          required: true\n          nullable: true\n          schema:\n            type: array\n            items:\n              type: string\n          collectionFormat: csv\n        - description: This is an array parameter that is send as ssv format (space-separated\n            values)\n          name: parameterArraySSV\n          in: query\n          required: true\n          nullable: true\n          schema:\n            type: array\n            items:\n              type: string\n          collectionFormat: ssv\n        - description: This is an array parameter that is send as tsv format (tab-separated\n            values)\n          name: parameterArrayTSV\n          in: query\n          required: true\n          nullable: true\n          schema:\n            type: array\n            items:\n              type: string\n          collectionFormat: tsv\n        - description: This is an array parameter that is send as pipes format (pipe-separated\n            values)\n          name: parameterArrayPipes\n          in: query\n          required: true\n          nullable: true\n          schema:\n            type: array\n            items:\n              type: string\n          collectionFormat: pipes\n        - description: This is an array parameter that is send as multi format (multiple\n            parameter instances)\n          name: parameterArrayMulti\n          in: query\n          required: true\n          nullable: true\n          schema:\n            type: array\n            items:\n              type: string\n          collectionFormat: multi\n  \"/api/v{api-version}/types\":\n    get:\n      tags:\n        - Types\n      operationId: Types\n      parameters:\n        - description: This is a number parameter\n          name: parameterNumber\n          in: query\n          required: true\n          schema:\n            type: int\n            default: 123\n        - description: This is a string parameter\n          name: parameterString\n          in: query\n          required: true\n          nullable: true\n          schema:\n            type: string\n            default: default\n        - description: This is a boolean parameter\n          name: parameterBoolean\n          in: query\n          required: true\n          nullable: true\n          schema:\n            type: boolean\n            default: true\n        - description: This is an object parameter\n          name: parameterObject\n          in: query\n          required: true\n          nullable: true\n          schema:\n            type: object\n            default:\n        - description: This is an array parameter\n          name: parameterArray\n          in: query\n          required: true\n          nullable: true\n          schema:\n            type: array\n            items:\n              type: string\n        - description: This is a dictionary parameter\n          name: parameterDictionary\n          in: query\n          required: true\n          nullable: true\n          schema:\n            type: object\n            items:\n              type: string\n        - description: This is an enum parameter\n          name: parameterEnum\n          in: query\n          required: true\n          nullable: true\n          schema:\n            enum:\n              - Success\n              - Warning\n              - Error\n        - description: This is a number parameter\n          name: id\n          in: path\n          schema:\n            type: integer\n            format: int32\n      responses:\n        '200':\n          description: Response is a simple number\n          content:\n            application/json:\n              schema:\n                type: number\n        '201':\n          description: Response is a simple string\n          content:\n            application/json:\n              schema:\n                type: string\n        '202':\n          description: Response is a simple boolean\n          content:\n            application/json:\n              schema:\n                type: boolean\n        '203':\n          description: Response is a simple object\n          content:\n            application/json:\n              schema:\n                type: object\n  \"/api/v{api-version}/upload\":\n    post:\n      tags:\n        - Upload\n      operationId: UploadFile\n      parameters:\n        - description: Supply a file reference for upload\n          name: file\n          in: formData\n          required: true\n          schema:\n            type: File\n        - name: api-version\n          in: path\n          required: true\n          nullable: true\n          schema:\n            type: string\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                type: boolean\n  \"/api/v{api-version}/complex\":\n    get:\n      tags:\n        - Complex\n      operationId: ComplexTypes\n      parameters:\n        - description: Parameter containing object\n          name: parameterObject\n          in: query\n          required: true\n          schema:\n            type: object\n            properties:\n              first:\n                type: object\n                properties:\n                  second:\n                    type: object\n                    properties:\n                      third:\n                        type: string\n                        arrayWithArray:\n                          \"$ref\": \"#/components/schemas/ArrayWithArray\"\n        - description: Parameter containing reference\n          name: parameterReference\n          in: query\n          required: true\n          schema:\n            \"$ref\": \"schemas/ModelWithString.yml\"\n      responses:\n        '200':\n          description: Successful response\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  \"$ref\": \"schemas/ModelWithString.yml\"\n        '400':\n          description: 400 server error\n        '500':\n          description: 500 server error\n  \"/api/v{api-version}/multipart\":\n    get:\n      tags:\n        - multipart\n      operationId: MultipartResponse\n      responses:\n        '200':\n          description: OK\n          content:\n            multipart/mixed:\n              schema:\n                type: object\n                properties:\n                  file:\n                    type: string\n                    format: binary\n                  metadata:\n                    type: object\n                    properties:\n                      foo:\n                        type: string\n                      bar:\n                        type: string\n  \"/api/v{api-version}/complex/{id}\":\n    put:\n      tags:\n        - Complex\n      operationId: ComplexParams\n      parameters:\n        - name: id\n          in: path\n          required: true\n          schema:\n            type: integer\n            format: int32\n        - name: api-version\n          in: path\n          required: true\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json-patch+json:\n            schema:\n              required:\n                - key\n                - name\n                - parameters\n                - type\n              type: object\n              properties:\n                key:\n                  maxLength: 64\n                  pattern: \"^[a-zA-Z0-9_]*$\"\n                  type: string\n                  nullable: true\n                  readOnly: true\n                name:\n                  maxLength: 255\n                  type: string\n                  nullable: true\n                enabled:\n                  type: boolean\n                  default: true\n                type:\n                  enum:\n                    - Monkey\n                    - Horse\n                    - Bird\n                  type: string\n                  readOnly: true\n                listOfModels:\n                  type: array\n                  items:\n                    \"$ref\": \"schemas/ModelWithString.yml\"\n                  nullable: true\n                listOfStrings:\n                  type: array\n                  items:\n                    type: string\n                  nullable: true\n                parameters:\n                  type: object\n                  oneOf:\n                    - \"$ref\": \"schemas/ModelWithString.yml\"\n                    - \"$ref\": \"schemas/ModelWithEnum.yml\"\n                    - \"$ref\": \"schemas/ModelWithArray.yml\"\n                    - \"$ref\": \"schemas/ModelWithDictionary.yml\"\n                user:\n                  type: object\n                  properties:\n                    id:\n                      type: integer\n                      format: int32\n                      readOnly: true\n                    name:\n                      type: string\n                      nullable: true\n                      readOnly: true\n                  readOnly: true\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                \"$ref\": \"schemas/ModelWithString.yml\"\n  \"/api/v{api-version}/header\":\n    post:\n      tags:\n        - Header\n      operationId: CallWithResultFromHeader\n      responses:\n        '200':\n          description: Successful response\n          headers:\n            operation-location:\n              schema:\n                type: string\n        '400':\n          description: 400 server error\n        '500':\n          description: 500 server error\n  \"/api/v{api-version}/circular\":\n    get:\n      tags:\n        - Circular\n      operationId: CallWithCircularModel\n      responses:\n        default:\n          content:\n            application/json:\n              description: Message for default response\n              schema:\n                \"$ref\": \"schemas/ModelWithCircularReference.yml\"\n  \"/api/v{api-version}/enums\":\n    post:\n      tags:\n        - Enums\n      operationId: CallWithEnums\n      requestBody:\n        content:\n          application/json; charset=utf-8:\n            schema:\n              type: object\n              properties:\n                enumWithNumbers:\n                  $ref: schemas/EnumWithNumbers.yml\n                enumWithStrings:\n                  $ref: schemas/EnumWithStrings.yml\n\ncomponents:\n  requestBodies:\n    SimpleRequestBody:\n      description: A reusable request body\n      required: false\n      content:\n        application/json:\n          description: Message for default response\n          schema:\n            \"$ref\": \"schemas/ModelWithString.yml\"\n  schemas:\n    MultilineComment:\n      description: |-\n        Testing multiline comments.\n        This must go to the next line.\n\n        This will contain a break.\n      type: integer\n    SimpleInteger:\n      description: This is a simple number\n      type: integer\n    SimpleBoolean:\n      description: This is a simple boolean\n      type: boolean\n    SimpleString:\n      description: This is a simple string\n      type: string\n    SimpleFile:\n      description: This is a simple file\n      type: File\n    SimpleReference:\n      description: This is a simple reference\n      \"$ref\": \"schemas/ModelWithString.yml\"\n    SimpleStringWithPattern:\n      description: This is a simple string\n      type: string\n      nullable: true\n      maxLength: 64\n      pattern: \"^[a-zA-Z0-9_]*$\"\n    EnumWithStrings:\n      description: This is a simple enum with strings\n      enum:\n        - Success\n        - Warning\n        - Error\n    EnumWithNumbers:\n      description: This is a simple enum with numbers\n      enum:\n        - 1\n        - 2\n        - 3\n        - 1.1\n        - 1.2\n        - 1.3\n        - 100\n        - 200\n        - 300\n        - -100\n        - -200\n        - -300\n        - -1.1\n        - -1.2\n        - -1.3\n    EnumFromDescription:\n      description: Success=1,Warning=2,Error=3\n      type: int\n    EnumWithExtensions:\n      description: This is a simple enum with numbers\n      enum:\n        - 200\n        - 400\n        - 500\n      x-enum-varnames:\n        - CUSTOM_SUCCESS\n        - CUSTOM_WARNING\n        - CUSTOM_ERROR\n      x-enum-descriptions:\n        - Used when the status of something is successful\n        - Used when the status of something has a warning\n        - Used when the status of something has an error\n    ArrayWithNumbers:\n      description: This is a simple array with numbers\n      type: array\n      items:\n        type: integer\n    ArrayWithBooleans:\n      description: This is a simple array with booleans\n      type: array\n      items:\n        type: boolean\n    ArrayWithStrings:\n      description: This is a simple array with strings\n      type: array\n      items:\n        type: string\n    ArrayWithReferences:\n      description: This is a simple array with references\n      type: array\n      items:\n        \"$ref\": \"schemas/ModelWithString.yml\"\n    ArrayWithArray:\n      description: This is a simple array containing an array\n      type: array\n      items:\n        type: array\n        items:\n          \"$ref\": \"schemas/ModelWithString.yml\"\n    ArrayWithProperties:\n      description: This is a simple array with properties\n      type: array\n      items:\n        type: object\n        properties:\n          foo:\n            type: string\n          bar:\n            type: string\n    DictionaryWithString:\n      description: This is a string dictionary\n      type: object\n      additionalProperties:\n        type: string\n    DictionaryWithReference:\n      description: This is a string reference\n      type: object\n      additionalProperties:\n        \"$ref\": \"schemas/ModelWithString.yml\"\n",
			"canonicalURL": "/github.com/ozonophore/openapi-codegen@f996acec7250fc97c389c682ee4d1ba9d6b96a46/-/blob/test/spec/v3.yml",
			"externalURLs": [
				{
					"url": "https://github.com/ozonophore/openapi-codegen/blob/f996acec7250fc97c389c682ee4d1ba9d6b96a46/test/spec/v3.yml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "parse: parse spec: parse components: schemas: \"DictionaryWithReference\": parse schema: parse schema: at 1:1143: external \"schemas/ModelWithString.yml\": get: file: local file reference is not allowed"
}