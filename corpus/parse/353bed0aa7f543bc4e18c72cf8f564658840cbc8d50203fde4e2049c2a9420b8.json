{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/plantbreeding/BrAPI"
		},
		"file": {
			"name": "Programs_ProgramDbId_GET_PUT.yaml",
			"size": 0,
			"path": "Specification/BrAPI-Core/Programs/Programs_ProgramDbId_GET_PUT.yaml",
			"byteSize": 2268,
			"content": "info:\n  title: BrAPI\n  version: ''\nopenapi: 3.0.0\npaths:\n  /programs/{programDbId}:\n    get:\n      summary: Get a breeding Program by Id\n      description: Get a single breeding Program by Id. This can be used to quickly get the details of a Program when you have the Id from another entity. \n      parameters:\n      - name: programDbId\n        description: Filter by the common crop name. Exact match.\n        in: path\n        required: true\n        schema:\n          type: string\n      - $ref: '#/components/parameters/authorizationHeader'\n      responses:\n        '200':\n          $ref: '#/components/responses/ProgramSingleResponse'\n        '400':\n          $ref: '#/components/responses/400BadRequest'\n        '401':\n          $ref: '#/components/responses/401Unauthorized'\n        '403':\n          $ref: '#/components/responses/403Forbidden'\n      tags:\n      - Programs\n    put:\n      summary: Update an existing Program\n      description: Update the details of an existing breeding Program. \n      parameters:\n      - name: programDbId\n        description: Filter by the common crop name. Exact match.\n        in: path\n        required: true\n        schema:\n          type: string\n      - $ref: '#/components/parameters/authorizationHeader'\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/ProgramNewRequest'\n      responses:\n        '200':\n          $ref: '#/components/responses/ProgramSingleResponse'\n        '400':\n          $ref: '#/components/responses/400BadRequest'\n        '401':\n          $ref: '#/components/responses/401Unauthorized'\n        '403':\n          $ref: '#/components/responses/403Forbidden'\n      tags:\n      - Programs\ncomponents:\n  responses:\n    ProgramSingleResponse:\n      content:\n        application/json:\n          schema:\n            title: ProgramSingleResponse\n            properties:\n              '@context':\n                $ref: '#/components/schemas/Context'\n              metadata:\n                $ref: '#/components/schemas/metadata'\n              result:\n                $ref: '#/components/schemas/Program'\n            required:\n            - metadata\n            - result\n            type: object\n      description: OK\n      headers: {}\n",
			"canonicalURL": "/github.com/plantbreeding/BrAPI@37ea4989c56879b1472421c4975cfdd06c397b45/-/blob/Specification/BrAPI-Core/Programs/Programs_ProgramDbId_GET_PUT.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/plantbreeding/BrAPI/blob/37ea4989c56879b1472421c4975cfdd06c397b45/Specification/BrAPI-Core/Programs/Programs_ProgramDbId_GET_PUT.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "parse: parse spec: parse components: responses: \"ProgramSingleResponse\": content: application/json: schema: parse schema: property \"@context\": parse schema: at 1:128: find schema: resolve: can't find value for \"components/schemas/Context\""
}