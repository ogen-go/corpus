{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/wttech/APM"
		},
		"file": {
			"name": "apm-api-definition.yaml",
			"size": 0,
			"path": "app/aem/api/src/main/resources/apidefinition/apm-api-definition.yaml",
			"byteSize": 8522,
			"content": "---\nopenapi: 3.0.1\ninfo:\n  title: APM 5.0 API Definition\n  version: \"5.0\"\nservers:\n  - url: http://localhost:4502\npaths:\n  /bin/apm/scripts:\n    get:\n      description: API for downloading list of scripts available in AEM\n      security:\n        - basicAuth: []\n      responses:\n        \"200\":\n          description: List of APM scripts which are currently available in AEM\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ScriptResponse'\n      servers:\n        - url: http://localhost:4502\n    servers:\n      - url: http://localhost:4502\n  /bin/apm/scripts/upload:\n    post:\n      description: API For uploading APM scripts into AEM\n      parameters:\n        - name: apm%3AlaunchEnabled\n          in: formData\n          required: true\n          style: form\n          explode: true\n          schema:\n            type: boolean\n          example: \"true\"\n        - name: apm%3AlaunchMode\n          in: formData\n          required: false\n          style: form\n          explode: true\n          schema:\n            type: string\n            enum: [ON_DEMAND, ON_SCHEDULE, ON_STARTUP, ON_STARTUP_IF_MODIFIED, ON_INSTALL, ON_INSTALL_IF_MODIFIED]\n        - name: apm%3AlaunchEnvironment\n          in: formData\n          required: false\n          style: form\n          explode: true\n          schema:\n            type: string\n            enum: [AUTHOR, PUBLISH, ALL]\n        - name: overwrite\n          in: formData\n          required: true\n          style: form\n          explode: true\n          schema:\n            type: boolean\n          example: \"false\"\n        - name: apm%3AlaunchSchedule\n          in: formData\n          required: false\n          style: form\n          explode: true\n          schema:\n            type: string\n          example: \"2020-10-26T11:46:00\"\n        - name: apm%3AlaunchHook\n          in: formData\n          required: false\n          style: form\n          explode: true\n          schema:\n            type: string\n          example: HookName\n        - name: file\n          in: formData\n          type: file\n          required: true\n          description: Script to be uploaded.\n        - name: Referer\n          in: header\n          required: false\n          style: simple\n          explode: false\n          schema:\n            type: string\n          example: http://localhost:4502/apm/scripts.html/conf/apm/scripts\n        - name: CSRF-Token\n          in: header\n          required: true\n          style: simple\n          explode: false\n          schema:\n            type: string\n          example: eyJleHAiOjE2MDM4NzI0MzYsImlhdCI6MTYwMzg3MTgzNn0.fb9csRBFqj1oCvsCmRGOSpk9aTBnPdGYsJ3UheWwxbg.Z79QqoTSQnLW1rqrJ1c9DOBcvjqTq3PiX80YLFq_D0U\n      responses:\n        '200':\n          description: A User object\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ScriptResponse'\n        '400':\n          description: Occures when upload fails\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n      servers:\n        - url: http://localhost:4502\n    servers:\n      - url: http://localhost:4502\n  /bin/apm/definitions:\n    get:\n      description: Provides list of definitions with their paths\n      responses:\n        \"200\":\n          description: Auto generated using Swagger Inspector\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DefinitionResponse'\n      servers:\n        - url: http://localhost:4502\n    servers:\n      - url: http://localhost:4502\n  /bin/apm/scripts/validate:\n    post:\n      description: API For validation scripts uploaded to AEM\n      parameters:\n        - name: path\n          in: query\n          required: false\n          style: form\n          explode: true\n          schema:\n            type: string\n          example: '%2Fconf%2Fapm%2Fscripts%2Ffilename.apm'\n        - name: content\n          in: query\n          required: false\n          style: form\n          explode: true\n          schema:\n            type: string\n          example: DEFINE%20path%20%22%2Fcontent%22%5Cn\n        - name: CSRF-Token\n          in: header\n          required: false\n          style: simple\n          explode: false\n          schema:\n            type: string\n          example: eyJleHAiOjE2MDM4NzI0MzYsImlhdCI6MTYwMzg3MTgzNn0.fb9csRBFqj1oCvsCmRGOSpk9aTBnPdGYsJ3UheWwxbg\n      responses:\n        \"200\":\n          description: Success response is sent when scripts passes validation\n          content:\n            application/json;charset=utf-8:\n              schema:\n                $ref: '#/components/schemas/ValidateResponse'\n        \"400\":\n          description: Error response when validation fails\n          content:\n            application/json;charset=utf-8:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n      servers:\n        - url: http://localhost:4502\n    servers:\n      - url: http://localhost:4502\n  /bin/apm/references:\n    get:\n      description: API returns available commands in APM scripts with examples and description\n      responses:\n        \"200\":\n          description: Success response is sent when scripts passes validation\n          content:\n            application/json;charset=utf-8:\n              schema:\n                $ref: '#/components/schemas/ReferenceResponse'\n      servers:\n        - url: http://localhost:4502\n    servers:\n      - url: http://localhost:4502\ncomponents:\n  securitySchemes:\n    basicAuth:     # \u003c-- arbitrary name for the security scheme\n      type: http\n      scheme: basic\n  schemas:\n    ErrorResponse:\n      type: object\n      properties:\n        message:\n          type: string\n          description: Server generic response message\n        errors:\n          type: array\n          items:\n            type: string\n          description: List of errors returned by the API\n    ValidateResponse:\n      type: object\n      properties:\n        message:\n          type: string\n          description: Server genericresponse message.\n        valid:\n          type: boolean\n    ScriptResponse:\n      type: object\n      properties:\n        message:\n          type: string\n          description: Server genericresponse message.\n        uploadedScript:\n          description: The user name.\n          type: object\n          properties:\n            name:\n              type: string\n            path:\n              type: string\n            author:\n              type: string\n            launchEnabled:\n              type: string\n            launchMode:\n              type: string\n            lastModified:\n              type: string\n            valid:\n              type: boolean\n    DefinitionResponse:\n      type: object\n      properties:\n        DeveloperResources:\n          type: string\n        Websites:\n          type: string\n        Communities:\n          type: string\n        Backup:\n          type: string\n        Users:\n          type: string\n        CloudServices:\n          type: string\n        Digital Assets:\n          type: string\n        Packages:\n          type: string\n        OSGiConsoleStatusDump:\n          type: string\n        Inbox:\n          type: string\n        TaskManagement:\n          type: string\n        Publications:\n          type: string\n        Workflows:\n          type: string\n        PackageShare:\n          type: string\n        Documentation:\n          type: string\n        Tools:\n          type: string\n        Reports:\n          type: string\n        Campaigns:\n          type: string\n        Clustering:\n          type: string\n        Manuscripts:\n          type: string\n        Tagging:\n          type: string\n        Replication:\n          type: string\n        OSGiConsole:\n          type: string\n        CRXDELite:\n          type: string\n    ReferenceResponse:\n      type: array\n      description: List of commands with list of arguments\n      items:\n        type: object\n        properties:\n          name:\n            type: string\n          group:\n            type: string\n          examples:\n            type: array\n            items:\n              type: string\n          description:\n            type: string\n          arguments:\n            type: array\n            items:\n              type: object\n              properties:\n                name:\n                  type: string\n                \"type\":\n                  type: string\n                description:\n                  type: string\n",
			"canonicalURL": "/github.com/wttech/APM@78ddd42bc97369b779689366ee606dda418af6a7/-/blob/app/aem/api/src/main/resources/apidefinition/apm-api-definition.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/wttech/APM/blob/78ddd42bc97369b779689366ee606dda418af6a7/app/aem/api/src/main/resources/apidefinition/apm-api-definition.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "parse: parse spec: parse operations: path \"/bin/apm/scripts/upload\": post: parameters: parse parameter \"apm%3AlaunchEnabled\": at 1:3508: unknown parameter location \"formData\""
}