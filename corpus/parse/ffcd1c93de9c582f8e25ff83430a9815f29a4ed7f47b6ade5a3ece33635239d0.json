{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/yandex-cloud/examples"
		},
		"file": {
			"name": "openapi-template.yaml",
			"size": 0,
			"path": "serverless/alice-shareable-todolist/gateway/openapi-template.yaml",
			"byteSize": 10297,
			"content": "openapi: 3.0.0\ninfo:\n  title:   Todo list\n  version: 1.0.0\npaths:\n  # Backend-driven redirect pages\n  /login:\n    get:\n      operationId: page_login\n      x-yc-apigateway-integration: { type: cloud_functions, function_id: \"${WEB_FUNCTION_ID}\", tag: $latest, service_account: \"${GATEWAY_SA_ID}\" }\n      responses:\n        302:\n          description: 'Login redirect page'\n          headers:\n            Location:\n              schema: { type: string }\n              description: \"Redirect location\"\n  /receive-token:\n    get:\n      operationId: page_receive_token\n      x-yc-apigateway-integration: { type: cloud_functions, function_id: \"${WEB_FUNCTION_ID}\", tag: $latest, service_account: \"${GATEWAY_SA_ID}\" }\n      responses:\n        302:\n          description: 'Login redirect page'\n          headers:\n            Location:\n              schema: { type: string }\n              description: \"Redirect location\"\n      parameters:\n        - name: state\n          in:   query\n          schema: { type: string }\n        - name:     code\n          in:       query\n          required: true\n          schema: { type: string }\n  # JSON API\n  /api/todo-lists:\n    get:\n      operationId: list_lists\n      x-yc-apigateway-integration: { type: cloud_functions, function_id: \"${WEB_FUNCTION_ID}\", tag: $latest, service_account: \"${GATEWAY_SA_ID}\" }\n      responses:\n        default: { $ref: '#/components/responses/Error' }\n        200:\n          description: 'User todo lists'\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/ListShort'\n    post:\n      operationId: create_list\n      x-yc-apigateway-integration: { type: cloud_functions, function_id: \"${WEB_FUNCTION_ID}\", tag: $latest, service_account: \"${GATEWAY_SA_ID}\" }\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              required: [ \"name\" ]\n              properties:\n                name: { type: string }\n      responses:\n        default: { $ref: '#/components/responses/Error' }\n        200:\n          description: 'Create new list'\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  id: { type: string }\n                required: [ id ]\n  /api/todo-lists/{list_id}/wa:\n    delete:\n      operationId: delete_list\n      x-yc-apigateway-integration: { type: cloud_functions, function_id: \"${WEB_FUNCTION_ID}\", tag: $latest, service_account: \"${GATEWAY_SA_ID}\" }\n      parameters:\n        - name:     list_id\n          in:       path\n          required: true\n          schema:\n            type: string\n      responses:\n        default: { $ref: '#/components/responses/Error' }\n        204:\n          description: 'OK'\n    get:\n      operationId: get_list\n      x-yc-apigateway-integration: { type: cloud_functions, function_id: \"${WEB_FUNCTION_ID}\", tag: $latest, service_account: \"${GATEWAY_SA_ID}\" }\n      parameters:\n        - name:     list_id\n          in:       path\n          required: true\n          schema:\n            type: string\n      responses:\n        default: { $ref: '#/components/responses/Error' }\n        200:\n          description: 'List information'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/List'\n  /api/todo-lists/{list_id}/users:\n    get:\n      operationId: get_list_users\n      x-yc-apigateway-integration: { type: cloud_functions, function_id: \"${WEB_FUNCTION_ID}\", tag: $latest, service_account: \"${GATEWAY_SA_ID}\" }\n      parameters:\n        - name:     list_id\n          in:       path\n          required: true\n          schema:\n            type: string\n      responses:\n        default: { $ref: '#/components/responses/Error' }\n        200:\n          description: 'Users of list'\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/ListUser'\n  /api/todo-lists/{list_id}/users/{user_id}/wa:\n    delete:\n      operationId: revoke_invitation\n      x-yc-apigateway-integration: { type: cloud_functions, function_id: \"${WEB_FUNCTION_ID}\", tag: $latest, service_account: \"${GATEWAY_SA_ID}\" }\n      parameters:\n        - name:     list_id\n          in:       path\n          required: true\n          schema:\n            type: string\n        - name:     user_id\n          in:       path\n          required: true\n          schema:\n            type: string\n      responses:\n        default: { $ref: '#/components/responses/Error' }\n        204:\n          description: 'OK'\n  /api/todo-lists/{list_id}/inviteUser:\n    post:\n      operationId: invite_user\n      x-yc-apigateway-integration: { type: cloud_functions, function_id: \"${WEB_FUNCTION_ID}\", tag: $latest, service_account: \"${GATEWAY_SA_ID}\" }\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                invitee: { type: string }\n                access_mode: { $ref: '#/components/schemas/AccessMode' }\n              required: [ invitee, access_mode ]\n      parameters:\n        - name:     list_id\n          in:       path\n          required: true\n          schema:\n            type: string\n      responses:\n        default: { $ref: '#/components/responses/Error' }\n        204:\n          description: 'OK'\n  /api/todo-lists/{list_id}/accept_invitation:\n    post:\n      operationId: accept_invitation\n      x-yc-apigateway-integration: { type: cloud_functions, function_id: \"${WEB_FUNCTION_ID}\", tag: $latest, service_account: \"${GATEWAY_SA_ID}\" }\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                alias: { type: string }\n              required: [ alias ]\n      parameters:\n        - name:     list_id\n          in:       path\n          required: true\n          schema:\n            type: string\n      responses:\n        default: { $ref: '#/components/responses/Error' }\n        204:\n          description: 'OK'\n  /api/todo-lists/{list_id}/items:\n    post:\n      operationId: add_item\n      x-yc-apigateway-integration: { type: cloud_functions, function_id: \"${WEB_FUNCTION_ID}\", tag: $latest, service_account: \"${GATEWAY_SA_ID}\" }\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                text: { type: string }\n              required: [ text ]\n      parameters:\n        - name:     list_id\n          in:       path\n          required: true\n          schema:\n            type: string\n      responses:\n        default: { $ref: '#/components/responses/Error' }\n        204:\n          description: 'OK'\n  /api/todo-lists/{list_id}/items/{item_id}/wa:\n    delete:\n      operationId: delete_item\n      x-yc-apigateway-integration: { type: cloud_functions, function_id: \"${WEB_FUNCTION_ID}\", tag: $latest, service_account: \"${GATEWAY_SA_ID}\" }\n      parameters:\n        - name:     list_id\n          in:       path\n          required: true\n          schema:\n            type: string\n        - name:     item_id\n          in:       path\n          required: true\n          schema:\n            type: string\n      responses:\n        default: { $ref: '#/components/responses/Error' }\n        204:\n          description: 'OK'\n  /api/me:\n    get:\n      operationId: user_info\n      x-yc-apigateway-integration: { type: cloud_functions, function_id: \"${WEB_FUNCTION_ID}\", tag: $latest, service_account: \"${GATEWAY_SA_ID}\" }\n      responses:\n        default: { $ref: '#/components/responses/Error' }\n        200:\n          description: 'User information'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/User'\n  # static\n  /:\n    get:\n      operationId: file-index\n      x-yc-apigateway-integration:\n        type:               object_storage\n        bucket:             \"${STORAGE_BUCKET}\"\n        object:             'index.html'\n        presigned_redirect: false\n        service_account_id: \"${GATEWAY_SA_ID}\"\n      responses:\n        200:\n          description: 'HTML page static content'\n  /{file+}:\n    get:\n      operationId: file-static\n      x-yc-apigateway-integration:\n        type:               object_storage\n        bucket:             \"${STORAGE_BUCKET}\"\n        object:             '{file}'\n        presigned_redirect: false\n        service_account_id: \"${GATEWAY_SA_ID}\"\n      parameters:\n        - explode:  false\n          in:       path\n          name:     file\n          required: true\n          schema:\n            type: string\n          style:    simple\n      responses:\n        200:\n          description: 'static file'\n\ncomponents:\n  responses:\n    Error:\n      description: 'error'\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/Error'\n\n  schemas:\n    ListShort:\n      properties:\n        id: { type: string }\n        name: { type: string }\n        access: { $ref: '#/components/schemas/AccessMode' }\n        inviter: { type: string }\n        accepted: { type: boolean }\n    List:\n      allOf:\n        - $ref: '#/components/schemas/ListShort'\n        - properties:\n            items:\n              type: array\n              items:\n                $ref: '#/components/schemas/ListItem'\n    ListUser:\n      properties:\n        user_name: { type: string }\n        access_mode: { $ref: '#/components/schemas/AccessMode' }\n        accepted: { type: boolean }\n        me: { type: boolean }\n    ListItem:\n      properties:\n        id: { type: string }\n        text: { type: string }\n    AccessMode:\n      type: string\n      enum: [ RW, R, O ]\n    # Login\n    User:\n      properties:\n        name: { type: string }\n        avatar_id: { type: string }\n    # Errors\n    Error:\n      properties:\n        code: { type: string }\n        message: { type: string }\n    ErrorCode:\n      type: string\n      enum:\n        - UNAUTHENTICATED\n        - UNAUTHORIZED\n        - INTERNAL\n        - UNAVAILABLE\n"
		}
	},
	"Error": "parse: parse spec: parse operations: paths: /{file+}: get: operation \"file-static\": parse path: path parameter not specified: \"file+\""
}