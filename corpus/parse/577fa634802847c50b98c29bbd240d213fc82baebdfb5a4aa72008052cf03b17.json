{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/vanilla/vanilla"
		},
		"file": {
			"name": "collections.yml",
			"size": 0,
			"path": "applications/vanilla/openapi/collections.yml",
			"byteSize": 14988,
			"content": "openapi: 3.0.3\ninfo:\npaths:\n    /collections:\n        get:\n            summary: List collections.\n            parameters:\n                - description: Filter by one or more collection IDs.\n                  in: query\n                  name: collectionID\n                  required: false\n                  schema:\n                      $ref: \"#/components/schemas/RangeExpression\"\n                - description: Filter by collection name\n                  in: query\n                  name: name\n                  required: false\n                  schema:\n                      type: string\n                      minLength: 1\n                      maxLength: 255\n                - $ref: \"#/components/parameters/Page\"\n                - description: Desired number of collections per page.\n                  in: query\n                  name: limit\n                  schema:\n                      type: integer\n                      default: 20\n                      minimum: 1\n            responses:\n                \"200\":\n                    content:\n                        \"application/json\":\n                            schema:\n                                items:\n                                    $ref: \"#/components/schemas/FullCollectionSchema\"\n                                type: array\n                    description: Success\n                \"401\":\n                    $ref: \"#/components/responses/PermissionError\"\n            tags:\n                - Collections\n        post:\n            summary: Create new collection\n            requestBody:\n                content:\n                    \"application/json\":\n                        schema:\n                            $ref: \"#/components/schemas/CollectionPostSchema\"\n            responses:\n                \"201\":\n                    content:\n                        \"application/json\":\n                            schema:\n                                $ref: \"#/components/schemas/FullCollectionSchema\"\n                    description: Success.\n                \"401\":\n                    $ref: \"#/components/responses/PermissionError\"\n                \"404\":\n                    $ref: \"#/components/responses/NotFound\"\n                \"400\":\n                    description: Bad Request\n                    content:\n                        application/json:\n                            schema:\n                                $ref: \"#/components/schemas/BasicError\"\n            tags:\n                - Collections\n    /collections/{id}:\n        parameters:\n            - description: The collection id\n              in: path\n              name: id\n              required: true\n              schema:\n                  type: integer\n        get:\n            summary: Get a single collection.\n            responses:\n                \"200\":\n                    content:\n                        \"application/json\":\n                            schema:\n                                $ref: \"#/components/schemas/FullCollectionSchema\"\n                    description: Success\n                \"401\":\n                    $ref: \"#/components/responses/PermissionError\"\n                \"404\":\n                    $ref: \"#/components/responses/NotFound\"\n            tags:\n                - Collections\n        patch:\n            summary: Update a collection\n            requestBody:\n                content:\n                    application/json:\n                        schema:\n                            $ref: \"#/components/schemas/Collection\"\n            responses:\n                \"200\":\n                    description: Success.\n                    content:\n                        application/json:\n                            schema:\n                                $ref: \"#/components/schemas/Collection\"\n                \"401\":\n                    $ref: \"#/components/responses/PermissionError\"\n                \"404\":\n                    $ref: \"#/components/responses/NotFound\"\n                \"400\":\n                    description: Bad Request\n                    content:\n                        application/json:\n                            schema:\n                                $ref: \"#/components/schemas/BasicError\"\n            tags:\n                - Collections\n        delete:\n            summary: Delete a collection.\n            responses:\n                \"204\":\n                    description: Success.\n                \"401\":\n                    $ref: \"#/components/responses/PermissionError\"\n                \"404\":\n                    $ref: \"#/components/responses/NotFound\"\n            tags:\n                - Collections\n    /collections/{id}/content/{locale}:\n        get:\n            summary: List collection with the each record expanded\n            parameters:\n                - description: The collection id\n                  in: path\n                  name: id\n                  required: true\n                  schema:\n                      type: integer\n                - description: Filter the records by their locale.\n                  in: path\n                  name: locale\n                  required: true\n                  schema:\n                      type: string\n            responses:\n                \"200\":\n                    content:\n                        \"application/json\":\n                            schema:\n                                $ref: \"#/components/schemas/CollectionContentSchema\"\n                    description: Success\n                \"401\":\n                    $ref: \"#/components/responses/PermissionError\"\n                \"404\":\n                    $ref: \"#/components/responses/NotFound\"\n            tags:\n                - Collections\n    /collections/by-resource:\n        get:\n            summary: List the collections a given record belongs to.\n            parameters:\n                - description: The id of the record.\n                  in: query\n                  name: recordID\n                  required: true\n                  schema:\n                      type: integer\n                - description: The type of the record.\n                  in: query\n                  name: recordType\n                  required: true\n                  schema:\n                      type: string\n            responses:\n                \"200\":\n                    content:\n                        \"application/json\":\n                            schema:\n                                type: array\n                                items:\n                                    $ref: \"#/components/schemas/Collection\"\n                    description: Success\n                \"401\":\n                    $ref: \"#/components/responses/PermissionError\"\n                \"404\":\n                    $ref: \"#/components/responses/NotFound\"\n            tags:\n                - Collections\n        put:\n            summary: Add a record to one or more collections.\n            requestBody:\n                content:\n                    application/json:\n                        schema:\n                            type: object\n                            properties:\n                                collectionIDs:\n                                    description: The collections to add the record to.\n                                    type: array\n                                    items:\n                                        type: integer\n                                record:\n                                    description: The record to add.\n                                    type: object\n                                    properties:\n                                        recordID:\n                                            type: integer\n                                        recordType:\n                                            type: string\n                                        sort:\n                                            type: integer\n                                            nullable: true\n                                    required:\n                                        - recordID\n                                        - recordType\n                            required:\n                                - collectionsIDs\n                                - record\n            responses:\n                \"200\":\n                    content:\n                        \"application/json\":\n                            schema:\n                                $ref: \"#/components/schemas/CollectionContentSchema\"\n                    description: Success\n                \"401\":\n                    $ref: \"#/components/responses/PermissionError\"\n                \"404\":\n                    $ref: \"#/components/responses/NotFound\"\n            tags:\n                - Collections\ncomponents:\n    schemas:\n        CollectionRecord:\n            properties:\n                recordID:\n                    description: The ID of the corresponding record\n                    type: integer\n                recordType:\n                    description: The type of the record.\n                    enum:\n                        - article\n                        - category\n                        - discussion\n                        - event\n                        - groups\n                        - knowledgeBase\n                    type: string\n                sort:\n                    description: Manual sort order for the group\n                    nullable: true\n                    type: integer\n            required:\n                - recordID\n                - recordType\n            type: object\n        Collection:\n            description: A collection of multiple  resources\n            type: object\n            properties:\n                name:\n                    description: Name for the collection\n                    minLength: 1\n                    maxLength: 255\n                    type: string\n                dateInserted:\n                    description: When the collection was created.\n                    format: date-time\n                    type: string\n                dateUpdated:\n                    description: When the collection was last updated.\n                    format: date-time\n                    nullable: true\n                    type: string\n                insertUserID:\n                    description: The unique ID of the user that created this collection.\n                    type: integer\n                updateUserID:\n                    description: The unique ID of the user who updated this collection.\n                    nullable: true\n                    type: integer\n                records:\n                    description: An array of records that belongs to the collection.\n                    items:\n                        $ref: \"#/components/schemas/CollectionRecord\"\n                    type: array\n                    maxItems: 30\n            required:\n                - name\n        CollectionPostSchema:\n            allOf:\n                - type: object\n                  properties:\n                      records:\n                          description: An array of records that belongs to the collection.\n                          items:\n                              $ref: \"#/components/schemas/CollectionRecord\"\n                          type: array\n                          maxItems: 30\n                  required:\n                      - records\n                - $ref: \"#/components/schemas/Collection\"\n        FullCollectionSchema:\n            allOf:\n                - type: object\n                  properties:\n                      collectionID:\n                          description: The Id of the collection.\n                          type: integer\n                          readOnly: true\n                      records:\n                          description: An array of records that belongs to the collection.\n                          items:\n                              $ref: \"#/components/schemas/CollectionRecord\"\n                          type: array\n                          maxItems: 30\n                  required:\n                      - collectionID\n                      - records\n                - $ref: \"#/components/schemas/Collection\"\n        CollectionContentSchema:\n            description: A collection resource with records expanded\n            type: object\n            properties:\n                collectionID:\n                    description: The Id of the collection.\n                    type: integer\n                    readOnly: true\n                name:\n                    description: Name for the collection\n                    minLength: 1\n                    maxLength: 255\n                    type: string\n                records:\n                    description: An array of records that belongs to the collection.\n                    items:\n                        properties:\n                            recordID:\n                                description: The ID of the corresponding record\n                                type: integer\n                            recordType:\n                                description: The type of the record.\n                                enum:\n                                    - article\n                                    - category\n                                    - discussion\n                                    - event\n                                    - groups\n                                    - knowledgeBase\n                                type: string\n                            sort:\n                                description: Manual sort order for the group\n                                nullable: true\n                                type: integer\n                            record:\n                                description: The content of the specific record\n                                type: object\n                                anyOf:\n                                    - $ref: \"../../../cloud/plugins/knowledge/openapi/articles.yml#/components/schemas/Article\"\n                                    - $ref: \"../../vanilla/openapi/discussions.yml#/components/schemas/Discussion\"\n                                    - $ref: \"../../vanilla/openapi/categories.yml#/components/schemas/CategorySchema\"\n                                    - $ref: \"../../groups/openapi/groups.yml#/components/schemas/Group\"\n                                    - $ref: \"../../groups/openapi/events.yml#/components/schemas/FullEvent\"\n                                    - $ref: \"../../../cloud/plugins/knowledge/openapi/knowledge-bases.yml#/components/schemas/FullKnowledgeBaseSchema\"\n                        required:\n                            - recordID\n                            - recordType\n                            - sort\n                            - record\n                        type: object\n                    type: array\n                    maxItems: 30\n            required:\n                - collectionID\n                - name\n                - records\n",
			"canonicalURL": "/github.com/vanilla/vanilla@f547100391e0a27065bd0fa147ab834380f3fb43/-/blob/applications/vanilla/openapi/collections.yml",
			"externalURLs": [
				{
					"url": "https://github.com/vanilla/vanilla/blob/f547100391e0a27065bd0fa147ab834380f3fb43/applications/vanilla/openapi/collections.yml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "parse: parse spec: parse components: schemas: \"CollectionContentSchema\": resolve \"#/components/schemas/CollectionContentSchema\": property \"records\": items: property \"record\": anyOf: at applications/vanilla/openapi/collections.yml:359:45: $ref: resolve \"../../../cloud/plugins/knowledge/openapi/articles.yml#/components/schemas/Article\": get \"https://raw.githubusercontent.com/vanilla/vanilla/f547100391e0a27065bd0fa147ab834380f3fb43/cloud/plugins/knowledge/openapi/articles.yml\": https: bad HTTP code 404 (Not Found)"
}