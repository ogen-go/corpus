{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/podhmo/individual-sandbox"
		},
		"file": {
			"name": "petstore.py.3.0.json",
			"size": 0,
			"path": "daily/20190226/example_openapi/petstore.py.3.0.json",
			"byteSize": 26362,
			"content": "{\n  \"components\": {\n    \"schemas\": {\n      \"ApiResponse\": {\n        \"properties\": {\n          \"code\": {\n            \"format\": \"int32\",\n            \"type\": \"integer\"\n          },\n          \"message\": {\n            \"type\": \"string\"\n          },\n          \"type\": {\n            \"type\": \"string\"\n          }\n        },\n        \"type\": \"object\"\n      },\n      \"Category\": {\n        \"properties\": {\n          \"id\": {\n            \"format\": \"int64\",\n            \"type\": \"integer\"\n          },\n          \"name\": {\n            \"type\": \"string\"\n          }\n        },\n        \"type\": \"object\",\n        \"xml\": {\n          \"name\": \"Category\"\n        }\n      },\n      \"Order\": {\n        \"properties\": {\n          \"complete\": {\n            \"default\": false,\n            \"type\": \"boolean\"\n          },\n          \"id\": {\n            \"format\": \"int64\",\n            \"type\": \"integer\"\n          },\n          \"petId\": {\n            \"format\": \"int64\",\n            \"type\": \"integer\"\n          },\n          \"quantity\": {\n            \"format\": \"int32\",\n            \"type\": \"integer\"\n          },\n          \"shipDate\": {\n            \"format\": \"date-time\",\n            \"type\": \"string\"\n          },\n          \"status\": {\n            \"description\": \"Order Status\",\n            \"enum\": [\n              \"placed\",\n              \"approved\",\n              \"delivered\"\n            ],\n            \"type\": \"string\"\n          }\n        },\n        \"type\": \"object\",\n        \"xml\": {\n          \"name\": \"Order\"\n        }\n      },\n      \"Pet\": {\n        \"properties\": {\n          \"category\": {\n            \"$ref\": \"#/components/schemas/Category\"\n          },\n          \"id\": {\n            \"format\": \"int64\",\n            \"type\": \"integer\"\n          },\n          \"name\": {\n            \"example\": \"doggie\",\n            \"type\": \"string\"\n          },\n          \"photoUrls\": {\n            \"items\": {\n              \"type\": \"string\"\n            },\n            \"type\": \"array\",\n            \"xml\": {\n              \"name\": \"photoUrl\",\n              \"wrapped\": true\n            }\n          },\n          \"status\": {\n            \"description\": \"pet status in the store\",\n            \"enum\": [\n              \"available\",\n              \"pending\",\n              \"sold\"\n            ],\n            \"type\": \"string\"\n          },\n          \"tags\": {\n            \"items\": {\n              \"$ref\": \"#/components/schemas/Tag\"\n            },\n            \"type\": \"array\",\n            \"xml\": {\n              \"name\": \"tag\",\n              \"wrapped\": true\n            }\n          }\n        },\n        \"required\": [\n          \"name\",\n          \"photoUrls\"\n        ],\n        \"type\": \"object\",\n        \"xml\": {\n          \"name\": \"Pet\"\n        }\n      },\n      \"Tag\": {\n        \"properties\": {\n          \"id\": {\n            \"format\": \"int64\",\n            \"type\": \"integer\"\n          },\n          \"name\": {\n            \"type\": \"string\"\n          }\n        },\n        \"type\": \"object\",\n        \"xml\": {\n          \"name\": \"Tag\"\n        }\n      },\n      \"User\": {\n        \"properties\": {\n          \"email\": {\n            \"type\": \"string\"\n          },\n          \"firstName\": {\n            \"type\": \"string\"\n          },\n          \"id\": {\n            \"format\": \"int64\",\n            \"type\": \"integer\"\n          },\n          \"lastName\": {\n            \"type\": \"string\"\n          },\n          \"password\": {\n            \"type\": \"string\"\n          },\n          \"phone\": {\n            \"type\": \"string\"\n          },\n          \"userStatus\": {\n            \"description\": \"User Status\",\n            \"format\": \"int32\",\n            \"type\": \"integer\"\n          },\n          \"username\": {\n            \"type\": \"string\"\n          }\n        },\n        \"type\": \"object\",\n        \"xml\": {\n          \"name\": \"User\"\n        }\n      }\n    },\n    \"securitySchemes\": {\n      \"api_key\": {\n        \"in\": \"header\",\n        \"name\": \"api_key\",\n        \"type\": \"apiKey\"\n      },\n      \"petstore_auth\": {\n        \"authorizationUrl\": \"http://petstore.swagger.io/oauth/dialog\",\n        \"flow\": \"implicit\",\n        \"scopes\": {\n          \"read:pets\": \"read your pets\",\n          \"write:pets\": \"modify pets in your account\"\n        },\n        \"type\": \"oauth2\"\n      }\n    }\n  },\n  \"externalDocs\": {\n    \"description\": \"Find out more about Swagger\",\n    \"url\": \"http://swagger.io\"\n  },\n  \"info\": {\n    \"contact\": {\n      \"email\": \"apiteam@swagger.io\"\n    },\n    \"description\": \"This is a sample server Petstore server.  You can find out more about Swagger at [http://swagger.io](http://swagger.io) or on [irc.freenode.net, #swagger](http://swagger.io/irc/).  For this sample, you can use the api key `special-key` to test the authorization filters.\",\n    \"license\": {\n      \"name\": \"Apache 2.0\",\n      \"url\": \"http://www.apache.org/licenses/LICENSE-2.0.html\"\n    },\n    \"termsOfService\": \"http://swagger.io/terms/\",\n    \"title\": \"Swagger Petstore\",\n    \"version\": \"1.0.0\"\n  },\n  \"openapi\": \"3.0.0\",\n  \"paths\": {\n    \"/pet\": {\n      \"post\": {\n        \"description\": \"\",\n        \"operationId\": \"addPet\",\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/Pet\"\n              }\n            }\n          },\n          \"description\": \"Pet object that needs to be added to the store\",\n          \"required\": true\n        },\n        \"responses\": {\n          \"405\": {\n            \"description\": \"Invalid input\"\n          }\n        },\n        \"security\": [\n          {\n            \"petstore_auth\": [\n              \"write:pets\",\n              \"read:pets\"\n            ]\n          }\n        ],\n        \"summary\": \"Add a new pet to the store\",\n        \"tags\": [\n          \"pet\"\n        ]\n      },\n      \"put\": {\n        \"description\": \"\",\n        \"operationId\": \"updatePet\",\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/Pet\"\n              }\n            }\n          },\n          \"description\": \"Pet object that needs to be added to the store\",\n          \"required\": true\n        },\n        \"responses\": {\n          \"400\": {\n            \"description\": \"Invalid ID supplied\"\n          },\n          \"404\": {\n            \"description\": \"Pet not found\"\n          },\n          \"405\": {\n            \"description\": \"Validation exception\"\n          }\n        },\n        \"security\": [\n          {\n            \"petstore_auth\": [\n              \"write:pets\",\n              \"read:pets\"\n            ]\n          }\n        ],\n        \"summary\": \"Update an existing pet\",\n        \"tags\": [\n          \"pet\"\n        ]\n      }\n    },\n    \"/pet/findByStatus\": {\n      \"get\": {\n        \"description\": \"Multiple status values can be provided with comma separated strings\",\n        \"operationId\": \"findPetsByStatus\",\n        \"parameters\": [\n          {\n            \"collectionFormat\": \"multi\",\n            \"description\": \"Status values that need to be considered for filter\",\n            \"in\": \"query\",\n            \"name\": \"status\",\n            \"required\": true,\n            \"schema\": {\n              \"items\": {\n                \"default\": \"available\",\n                \"enum\": [\n                  \"available\",\n                  \"pending\",\n                  \"sold\"\n                ],\n                \"type\": \"string\"\n              },\n              \"type\": \"array\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/Pet\"\n                  },\n                  \"type\": \"array\"\n                }\n              },\n              \"application/xml\": {\n                \"schema\": {\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/Pet\"\n                  },\n                  \"type\": \"array\"\n                }\n              }\n            },\n            \"description\": \"successful operation\"\n          },\n          \"400\": {\n            \"description\": \"Invalid status value\"\n          }\n        },\n        \"security\": [\n          {\n            \"petstore_auth\": [\n              \"write:pets\",\n              \"read:pets\"\n            ]\n          }\n        ],\n        \"summary\": \"Finds Pets by status\",\n        \"tags\": [\n          \"pet\"\n        ]\n      }\n    },\n    \"/pet/findByTags\": {\n      \"get\": {\n        \"deprecated\": true,\n        \"description\": \"Muliple tags can be provided with comma separated strings. Use tag1, tag2, tag3 for testing.\",\n        \"operationId\": \"findPetsByTags\",\n        \"parameters\": [\n          {\n            \"collectionFormat\": \"multi\",\n            \"description\": \"Tags to filter by\",\n            \"in\": \"query\",\n            \"name\": \"tags\",\n            \"required\": true,\n            \"schema\": {\n              \"items\": {\n                \"type\": \"string\"\n              },\n              \"type\": \"array\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/Pet\"\n                  },\n                  \"type\": \"array\"\n                }\n              },\n              \"application/xml\": {\n                \"schema\": {\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/Pet\"\n                  },\n                  \"type\": \"array\"\n                }\n              }\n            },\n            \"description\": \"successful operation\"\n          },\n          \"400\": {\n            \"description\": \"Invalid tag value\"\n          }\n        },\n        \"security\": [\n          {\n            \"petstore_auth\": [\n              \"write:pets\",\n              \"read:pets\"\n            ]\n          }\n        ],\n        \"summary\": \"Finds Pets by tags\",\n        \"tags\": [\n          \"pet\"\n        ]\n      }\n    },\n    \"/pet/{petId}\": {\n      \"delete\": {\n        \"description\": \"\",\n        \"operationId\": \"deletePet\",\n        \"parameters\": [\n          {\n            \"in\": \"header\",\n            \"name\": \"api_key\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"description\": \"Pet id to delete\",\n            \"in\": \"path\",\n            \"name\": \"petId\",\n            \"required\": true,\n            \"schema\": {\n              \"format\": \"int64\",\n              \"type\": \"integer\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"400\": {\n            \"description\": \"Invalid ID supplied\"\n          },\n          \"404\": {\n            \"description\": \"Pet not found\"\n          }\n        },\n        \"security\": [\n          {\n            \"petstore_auth\": [\n              \"write:pets\",\n              \"read:pets\"\n            ]\n          }\n        ],\n        \"summary\": \"Deletes a pet\",\n        \"tags\": [\n          \"pet\"\n        ]\n      },\n      \"get\": {\n        \"description\": \"Returns a single pet\",\n        \"operationId\": \"getPetById\",\n        \"parameters\": [\n          {\n            \"description\": \"ID of pet to return\",\n            \"in\": \"path\",\n            \"name\": \"petId\",\n            \"required\": true,\n            \"schema\": {\n              \"format\": \"int64\",\n              \"type\": \"integer\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Pet\"\n                }\n              },\n              \"application/xml\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Pet\"\n                }\n              }\n            },\n            \"description\": \"successful operation\"\n          },\n          \"400\": {\n            \"description\": \"Invalid ID supplied\"\n          },\n          \"404\": {\n            \"description\": \"Pet not found\"\n          }\n        },\n        \"security\": [\n          {\n            \"api_key\": []\n          }\n        ],\n        \"summary\": \"Find pet by ID\",\n        \"tags\": [\n          \"pet\"\n        ]\n      },\n      \"post\": {\n        \"description\": \"\",\n        \"operationId\": \"updatePetWithForm\",\n        \"parameters\": [\n          {\n            \"description\": \"ID of pet that needs to be updated\",\n            \"in\": \"path\",\n            \"name\": \"petId\",\n            \"required\": true,\n            \"schema\": {\n              \"format\": \"int64\",\n              \"type\": \"integer\"\n            }\n          },\n          {\n            \"description\": \"Updated name of the pet\",\n            \"in\": \"formData\",\n            \"name\": \"name\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"description\": \"Updated status of the pet\",\n            \"in\": \"formData\",\n            \"name\": \"status\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"405\": {\n            \"description\": \"Invalid input\"\n          }\n        },\n        \"security\": [\n          {\n            \"petstore_auth\": [\n              \"write:pets\",\n              \"read:pets\"\n            ]\n          }\n        ],\n        \"summary\": \"Updates a pet in the store with form data\",\n        \"tags\": [\n          \"pet\"\n        ]\n      }\n    },\n    \"/pet/{petId}/uploadImage\": {\n      \"post\": {\n        \"description\": \"\",\n        \"operationId\": \"uploadFile\",\n        \"parameters\": [\n          {\n            \"description\": \"ID of pet to update\",\n            \"in\": \"path\",\n            \"name\": \"petId\",\n            \"required\": true,\n            \"schema\": {\n              \"format\": \"int64\",\n              \"type\": \"integer\"\n            }\n          },\n          {\n            \"description\": \"Additional data to pass to server\",\n            \"in\": \"formData\",\n            \"name\": \"additionalMetadata\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"description\": \"file to upload\",\n            \"in\": \"formData\",\n            \"name\": \"file\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"file\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ApiResponse\"\n                }\n              }\n            },\n            \"description\": \"successful operation\"\n          }\n        },\n        \"security\": [\n          {\n            \"petstore_auth\": [\n              \"write:pets\",\n              \"read:pets\"\n            ]\n          }\n        ],\n        \"summary\": \"uploads an image\",\n        \"tags\": [\n          \"pet\"\n        ]\n      }\n    },\n    \"/store/inventory\": {\n      \"get\": {\n        \"description\": \"Returns a map of status codes to quantities\",\n        \"operationId\": \"getInventory\",\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"additionalProperties\": {\n                    \"format\": \"int32\",\n                    \"type\": \"integer\"\n                  },\n                  \"type\": \"object\"\n                }\n              }\n            },\n            \"description\": \"successful operation\"\n          }\n        },\n        \"security\": [\n          {\n            \"api_key\": []\n          }\n        ],\n        \"summary\": \"Returns pet inventories by status\",\n        \"tags\": [\n          \"store\"\n        ]\n      }\n    },\n    \"/store/order\": {\n      \"post\": {\n        \"description\": \"\",\n        \"operationId\": \"placeOrder\",\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/Order\"\n              }\n            }\n          },\n          \"description\": \"order placed for purchasing the pet\",\n          \"required\": true\n        },\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Order\"\n                }\n              },\n              \"application/xml\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Order\"\n                }\n              }\n            },\n            \"description\": \"successful operation\"\n          },\n          \"400\": {\n            \"description\": \"Invalid Order\"\n          }\n        },\n        \"summary\": \"Place an order for a pet\",\n        \"tags\": [\n          \"store\"\n        ]\n      }\n    },\n    \"/store/order/{orderId}\": {\n      \"delete\": {\n        \"description\": \"For valid response try integer IDs with positive integer value. Negative or non-integer values will generate API errors\",\n        \"operationId\": \"deleteOrder\",\n        \"parameters\": [\n          {\n            \"description\": \"ID of the order that needs to be deleted\",\n            \"in\": \"path\",\n            \"name\": \"orderId\",\n            \"required\": true,\n            \"schema\": {\n              \"format\": \"int64\",\n              \"minimum\": 1,\n              \"type\": \"integer\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"400\": {\n            \"description\": \"Invalid ID supplied\"\n          },\n          \"404\": {\n            \"description\": \"Order not found\"\n          }\n        },\n        \"summary\": \"Delete purchase order by ID\",\n        \"tags\": [\n          \"store\"\n        ]\n      },\n      \"get\": {\n        \"description\": \"For valid response try integer IDs with value \u003e= 1 and \u003c= 10. Other values will generated exceptions\",\n        \"operationId\": \"getOrderById\",\n        \"parameters\": [\n          {\n            \"description\": \"ID of pet that needs to be fetched\",\n            \"in\": \"path\",\n            \"name\": \"orderId\",\n            \"required\": true,\n            \"schema\": {\n              \"format\": \"int64\",\n              \"maximum\": 10,\n              \"minimum\": 1,\n              \"type\": \"integer\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Order\"\n                }\n              },\n              \"application/xml\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Order\"\n                }\n              }\n            },\n            \"description\": \"successful operation\"\n          },\n          \"400\": {\n            \"description\": \"Invalid ID supplied\"\n          },\n          \"404\": {\n            \"description\": \"Order not found\"\n          }\n        },\n        \"summary\": \"Find purchase order by ID\",\n        \"tags\": [\n          \"store\"\n        ]\n      }\n    },\n    \"/user\": {\n      \"post\": {\n        \"description\": \"This can only be done by the logged in user.\",\n        \"operationId\": \"createUser\",\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/User\"\n              }\n            }\n          },\n          \"description\": \"Created user object\",\n          \"required\": true\n        },\n        \"responses\": {\n          \"default\": {\n            \"description\": \"successful operation\"\n          }\n        },\n        \"summary\": \"Create user\",\n        \"tags\": [\n          \"user\"\n        ]\n      }\n    },\n    \"/user/createWithArray\": {\n      \"post\": {\n        \"description\": \"\",\n        \"operationId\": \"createUsersWithArrayInput\",\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"items\": {\n                  \"$ref\": \"#/components/schemas/User\"\n                },\n                \"type\": \"array\"\n              }\n            }\n          },\n          \"description\": \"List of user object\",\n          \"required\": true\n        },\n        \"responses\": {\n          \"default\": {\n            \"description\": \"successful operation\"\n          }\n        },\n        \"summary\": \"Creates list of users with given input array\",\n        \"tags\": [\n          \"user\"\n        ]\n      }\n    },\n    \"/user/createWithList\": {\n      \"post\": {\n        \"description\": \"\",\n        \"operationId\": \"createUsersWithListInput\",\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"items\": {\n                  \"$ref\": \"#/components/schemas/User\"\n                },\n                \"type\": \"array\"\n              }\n            }\n          },\n          \"description\": \"List of user object\",\n          \"required\": true\n        },\n        \"responses\": {\n          \"default\": {\n            \"description\": \"successful operation\"\n          }\n        },\n        \"summary\": \"Creates list of users with given input array\",\n        \"tags\": [\n          \"user\"\n        ]\n      }\n    },\n    \"/user/login\": {\n      \"get\": {\n        \"description\": \"\",\n        \"operationId\": \"loginUser\",\n        \"parameters\": [\n          {\n            \"description\": \"The user name for login\",\n            \"in\": \"query\",\n            \"name\": \"username\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"description\": \"The password for login in clear text\",\n            \"in\": \"query\",\n            \"name\": \"password\",\n            \"required\": true,\n            \"schema\": {\n              \"format\": \"password\",\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"string\"\n                }\n              },\n              \"application/xml\": {\n                \"schema\": {\n                  \"type\": \"string\"\n                }\n              }\n            },\n            \"description\": \"successful operation\",\n            \"headers\": {\n              \"X-Expires-After\": {\n                \"description\": \"date in UTC when token expires\",\n                \"format\": \"date-time\",\n                \"type\": \"string\"\n              },\n              \"X-Rate-Limit\": {\n                \"description\": \"calls per hour allowed by the user\",\n                \"format\": \"int32\",\n                \"type\": \"integer\"\n              }\n            }\n          },\n          \"400\": {\n            \"description\": \"Invalid username/password supplied\"\n          }\n        },\n        \"summary\": \"Logs user into the system\",\n        \"tags\": [\n          \"user\"\n        ]\n      }\n    },\n    \"/user/logout\": {\n      \"get\": {\n        \"description\": \"\",\n        \"operationId\": \"logoutUser\",\n        \"responses\": {\n          \"default\": {\n            \"description\": \"successful operation\"\n          }\n        },\n        \"summary\": \"Logs out current logged in user session\",\n        \"tags\": [\n          \"user\"\n        ]\n      }\n    },\n    \"/user/{username}\": {\n      \"delete\": {\n        \"description\": \"This can only be done by the logged in user.\",\n        \"operationId\": \"deleteUser\",\n        \"parameters\": [\n          {\n            \"description\": \"The name that needs to be deleted\",\n            \"in\": \"path\",\n            \"name\": \"username\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"400\": {\n            \"description\": \"Invalid username supplied\"\n          },\n          \"404\": {\n            \"description\": \"User not found\"\n          }\n        },\n        \"summary\": \"Delete user\",\n        \"tags\": [\n          \"user\"\n        ]\n      },\n      \"get\": {\n        \"description\": \"\",\n        \"operationId\": \"getUserByName\",\n        \"parameters\": [\n          {\n            \"description\": \"The name that needs to be fetched. Use user1 for testing. \",\n            \"in\": \"path\",\n            \"name\": \"username\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/User\"\n                }\n              },\n              \"application/xml\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/User\"\n                }\n              }\n            },\n            \"description\": \"successful operation\"\n          },\n          \"400\": {\n            \"description\": \"Invalid username supplied\"\n          },\n          \"404\": {\n            \"description\": \"User not found\"\n          }\n        },\n        \"summary\": \"Get user by user name\",\n        \"tags\": [\n          \"user\"\n        ]\n      },\n      \"put\": {\n        \"description\": \"This can only be done by the logged in user.\",\n        \"operationId\": \"updateUser\",\n        \"parameters\": [\n          {\n            \"description\": \"name that need to be updated\",\n            \"in\": \"path\",\n            \"name\": \"username\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/User\"\n              }\n            }\n          },\n          \"description\": \"Updated user object\",\n          \"required\": true\n        },\n        \"responses\": {\n          \"400\": {\n            \"description\": \"Invalid user supplied\"\n          },\n          \"404\": {\n            \"description\": \"User not found\"\n          }\n        },\n        \"summary\": \"Updated user\",\n        \"tags\": [\n          \"user\"\n        ]\n      }\n    }\n  },\n  \"servers\": [\n    {\n      \"description\": \"\",\n      \"url\": \"http://petstore.swagger.io/v2\"\n    }\n  ],\n  \"tags\": [\n    {\n      \"description\": \"Everything about your Pets\",\n      \"externalDocs\": {\n        \"description\": \"Find out more\",\n        \"url\": \"http://swagger.io\"\n      },\n      \"name\": \"pet\"\n    },\n    {\n      \"description\": \"Access to Petstore orders\",\n      \"name\": \"store\"\n    },\n    {\n      \"description\": \"Operations about user\",\n      \"externalDocs\": {\n        \"description\": \"Find out more about our store\",\n        \"url\": \"http://swagger.io\"\n      },\n      \"name\": \"user\"\n    }\n  ]\n}\n",
			"canonicalURL": "/github.com/podhmo/individual-sandbox@f1a369910afdf16e198a4689bc09c48391141665/-/blob/daily/20190226/example_openapi/petstore.py.3.0.json",
			"externalURLs": [
				{
					"url": "https://github.com/podhmo/individual-sandbox/blob/f1a369910afdf16e198a4689bc09c48391141665/daily/20190226/example_openapi/petstore.py.3.0.json",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "parse: parse spec: parse path items: path \"/pet\": put: operation \"updatePet\": security: parse security scheme \"petstore_auth\": oauth2: at daily/20190226/example_openapi/petstore.py.3.0.json:180:24: oAuthFlows is empty or null"
}