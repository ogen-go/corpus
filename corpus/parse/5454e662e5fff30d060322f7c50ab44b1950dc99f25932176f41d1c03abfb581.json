{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/APIs-guru/openapi-directory"
		},
		"file": {
			"name": "openapi.yaml",
			"size": 0,
			"path": "APIs/amazonaws.com/license-manager/2018-08-01/openapi.yaml",
			"byteSize": 223284,
			"content": "openapi: 3.0.0\ninfo:\n  version: '2018-08-01'\n  x-release: v4\n  title: AWS License Manager\n  description: \u003cfullname\u003e AWS License Manager \u003c/fullname\u003e \u003cp\u003eAWS License Manager makes it easier to manage licenses from software vendors across multiple AWS accounts and on-premises servers.\u003c/p\u003e\n  x-logo:\n    url: 'https://twitter.com/awscloud/profile_image?size=original'\n    backgroundColor: '#FFFFFF'\n  termsOfService: 'https://aws.amazon.com/service-terms/'\n  contact:\n    name: Mike Ralphson\n    email: mike.ralphson@gmail.com\n    url: 'https://github.com/mermade/aws2openapi'\n    x-twitter: PermittedSoc\n  license:\n    name: Apache 2.0 License\n    url: 'http://www.apache.org/licenses/'\n  x-providerName: amazonaws.com\n  x-serviceName: license-manager\n  x-origin:\n    - contentType: application/json\n      url: 'https://raw.githubusercontent.com/aws/aws-sdk-js/master/apis/license-manager-2018-08-01.normal.json'\n      converter:\n        url: 'https://github.com/mermade/aws2openapi'\n        version: 1.0.0\n      x-apisguru-driver: external\n  x-apiClientRegistration:\n    url: 'https://portal.aws.amazon.com/gp/aws/developer/registration/index.html?nc2=h_ct'\n  x-apisguru-categories:\n    - cloud\n  x-preferred: true\nexternalDocs:\n  description: Amazon Web Services documentation\n  url: 'https://docs.aws.amazon.com/license-manager/'\nservers:\n  - url: 'http://license-manager.{region}.amazonaws.com'\n    variables:\n      region:\n        description: The AWS region\n        enum:\n          - us-east-1\n          - us-east-2\n          - us-west-1\n          - us-west-2\n          - us-gov-west-1\n          - us-gov-east-1\n          - ca-central-1\n          - eu-north-1\n          - eu-west-1\n          - eu-west-2\n          - eu-west-3\n          - eu-central-1\n          - eu-south-1\n          - af-south-1\n          - ap-northeast-1\n          - ap-northeast-2\n          - ap-northeast-3\n          - ap-southeast-1\n          - ap-southeast-2\n          - ap-east-1\n          - ap-south-1\n          - sa-east-1\n          - me-south-1\n        default: us-east-1\n    description: The AWS License Manager multi-region endpoint\n  - url: 'https://license-manager.{region}.amazonaws.com'\n    variables:\n      region:\n        description: The AWS region\n        enum:\n          - us-east-1\n          - us-east-2\n          - us-west-1\n          - us-west-2\n          - us-gov-west-1\n          - us-gov-east-1\n          - ca-central-1\n          - eu-north-1\n          - eu-west-1\n          - eu-west-2\n          - eu-west-3\n          - eu-central-1\n          - eu-south-1\n          - af-south-1\n          - ap-northeast-1\n          - ap-northeast-2\n          - ap-northeast-3\n          - ap-southeast-1\n          - ap-southeast-2\n          - ap-east-1\n          - ap-south-1\n          - sa-east-1\n          - me-south-1\n        default: us-east-1\n    description: The AWS License Manager multi-region endpoint\n  - url: 'http://license-manager.{region}.amazonaws.com.cn'\n    variables:\n      region:\n        description: The AWS region\n        enum:\n          - cn-north-1\n          - cn-northwest-1\n        default: cn-north-1\n    description: The AWS License Manager endpoint for China (Beijing) and China (Ningxia)\n  - url: 'https://license-manager.{region}.amazonaws.com.cn'\n    variables:\n      region:\n        description: The AWS region\n        enum:\n          - cn-north-1\n          - cn-northwest-1\n        default: cn-north-1\n    description: The AWS License Manager endpoint for China (Beijing) and China (Ningxia)\nx-hasEquivalentPaths: true\npaths:\n  /#X-Amz-Target=AWSLicenseManager.AcceptGrant:\n    post:\n      operationId: AcceptGrant\n      description: Accepts the specified grant.\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AcceptGrantResponse'\n        '480':\n          description: ValidationException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ValidationException'\n        '481':\n          description: InvalidParameterValueException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InvalidParameterValueException'\n        '482':\n          description: AuthorizationException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AuthorizationException'\n        '483':\n          description: AccessDeniedException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AccessDeniedException'\n        '484':\n          description: RateLimitExceededException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RateLimitExceededException'\n        '485':\n          description: ResourceLimitExceededException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResourceLimitExceededException'\n        '486':\n          description: ServerInternalException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ServerInternalException'\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/AcceptGrantRequest'\n      parameters:\n        - name: X-Amz-Target\n          in: header\n          required: true\n          schema:\n            type: string\n            enum:\n              - AWSLicenseManager.AcceptGrant\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n  /#X-Amz-Target=AWSLicenseManager.CheckInLicense:\n    post:\n      operationId: CheckInLicense\n      description: Checks in the specified license. Check in a license when it is no longer in use.\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CheckInLicenseResponse'\n        '480':\n          description: ValidationException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ValidationException'\n        '481':\n          description: InvalidParameterValueException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InvalidParameterValueException'\n        '482':\n          description: ResourceNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResourceNotFoundException'\n        '483':\n          description: ConflictException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ConflictException'\n        '484':\n          description: AuthorizationException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AuthorizationException'\n        '485':\n          description: AccessDeniedException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AccessDeniedException'\n        '486':\n          description: RateLimitExceededException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RateLimitExceededException'\n        '487':\n          description: ServerInternalException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ServerInternalException'\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/CheckInLicenseRequest'\n      parameters:\n        - name: X-Amz-Target\n          in: header\n          required: true\n          schema:\n            type: string\n            enum:\n              - AWSLicenseManager.CheckInLicense\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n  /#X-Amz-Target=AWSLicenseManager.CheckoutBorrowLicense:\n    post:\n      operationId: CheckoutBorrowLicense\n      description: Checks out the specified license for offline use.\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CheckoutBorrowLicenseResponse'\n        '480':\n          description: ValidationException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ValidationException'\n        '481':\n          description: InvalidParameterValueException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InvalidParameterValueException'\n        '482':\n          description: ResourceNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResourceNotFoundException'\n        '483':\n          description: NoEntitlementsAllowedException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/NoEntitlementsAllowedException'\n        '484':\n          description: EntitlementNotAllowedException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/EntitlementNotAllowedException'\n        '485':\n          description: UnsupportedDigitalSignatureMethodException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/UnsupportedDigitalSignatureMethodException'\n        '486':\n          description: RedirectException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RedirectException'\n        '487':\n          description: AuthorizationException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AuthorizationException'\n        '488':\n          description: AccessDeniedException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AccessDeniedException'\n        '489':\n          description: RateLimitExceededException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RateLimitExceededException'\n        '490':\n          description: ServerInternalException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ServerInternalException'\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/CheckoutBorrowLicenseRequest'\n      parameters:\n        - name: X-Amz-Target\n          in: header\n          required: true\n          schema:\n            type: string\n            enum:\n              - AWSLicenseManager.CheckoutBorrowLicense\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n  /#X-Amz-Target=AWSLicenseManager.CheckoutLicense:\n    post:\n      operationId: CheckoutLicense\n      description: Checks out the specified license.\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CheckoutLicenseResponse'\n        '480':\n          description: ValidationException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ValidationException'\n        '481':\n          description: InvalidParameterValueException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InvalidParameterValueException'\n        '482':\n          description: ResourceNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResourceNotFoundException'\n        '483':\n          description: NoEntitlementsAllowedException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/NoEntitlementsAllowedException'\n        '484':\n          description: UnsupportedDigitalSignatureMethodException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/UnsupportedDigitalSignatureMethodException'\n        '485':\n          description: RedirectException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RedirectException'\n        '486':\n          description: AuthorizationException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AuthorizationException'\n        '487':\n          description: AccessDeniedException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AccessDeniedException'\n        '488':\n          description: RateLimitExceededException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RateLimitExceededException'\n        '489':\n          description: ServerInternalException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ServerInternalException'\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/CheckoutLicenseRequest'\n      parameters:\n        - name: X-Amz-Target\n          in: header\n          required: true\n          schema:\n            type: string\n            enum:\n              - AWSLicenseManager.CheckoutLicense\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n  /#X-Amz-Target=AWSLicenseManager.CreateGrant:\n    post:\n      operationId: CreateGrant\n      description: Creates a grant for the specified license. A grant shares the use of license entitlements with specific AWS accounts.\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CreateGrantResponse'\n        '480':\n          description: ValidationException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ValidationException'\n        '481':\n          description: InvalidParameterValueException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InvalidParameterValueException'\n        '482':\n          description: ResourceLimitExceededException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResourceLimitExceededException'\n        '483':\n          description: ServerInternalException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ServerInternalException'\n        '484':\n          description: AuthorizationException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AuthorizationException'\n        '485':\n          description: RateLimitExceededException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RateLimitExceededException'\n        '486':\n          description: AccessDeniedException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AccessDeniedException'\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/CreateGrantRequest'\n      parameters:\n        - name: X-Amz-Target\n          in: header\n          required: true\n          schema:\n            type: string\n            enum:\n              - AWSLicenseManager.CreateGrant\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n  /#X-Amz-Target=AWSLicenseManager.CreateGrantVersion:\n    post:\n      operationId: CreateGrantVersion\n      description: Creates a new version of the specified grant.\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CreateGrantVersionResponse'\n        '480':\n          description: ValidationException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ValidationException'\n        '481':\n          description: InvalidParameterValueException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InvalidParameterValueException'\n        '482':\n          description: ResourceLimitExceededException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResourceLimitExceededException'\n        '483':\n          description: ServerInternalException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ServerInternalException'\n        '484':\n          description: AuthorizationException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AuthorizationException'\n        '485':\n          description: AccessDeniedException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AccessDeniedException'\n        '486':\n          description: RateLimitExceededException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RateLimitExceededException'\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/CreateGrantVersionRequest'\n      parameters:\n        - name: X-Amz-Target\n          in: header\n          required: true\n          schema:\n            type: string\n            enum:\n              - AWSLicenseManager.CreateGrantVersion\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n  /#X-Amz-Target=AWSLicenseManager.CreateLicense:\n    post:\n      operationId: CreateLicense\n      description: Creates a license.\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CreateLicenseResponse'\n        '480':\n          description: ValidationException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ValidationException'\n        '481':\n          description: InvalidParameterValueException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InvalidParameterValueException'\n        '482':\n          description: RedirectException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RedirectException'\n        '483':\n          description: AuthorizationException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AuthorizationException'\n        '484':\n          description: AccessDeniedException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AccessDeniedException'\n        '485':\n          description: RateLimitExceededException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RateLimitExceededException'\n        '486':\n          description: ServerInternalException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ServerInternalException'\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/CreateLicenseRequest'\n      parameters:\n        - name: X-Amz-Target\n          in: header\n          required: true\n          schema:\n            type: string\n            enum:\n              - AWSLicenseManager.CreateLicense\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n  /#X-Amz-Target=AWSLicenseManager.CreateLicenseConfiguration:\n    post:\n      operationId: CreateLicenseConfiguration\n      description: '\u003cp\u003eCreates a license configuration.\u003c/p\u003e \u003cp\u003eA license configuration is an abstraction of a customer license agreement that can be consumed and enforced by License Manager. Components include specifications for the license type (licensing by instance, socket, CPU, or vCPU), allowed tenancy (shared tenancy, Dedicated Instance, Dedicated Host, or all of these), license affinity to host (how long a license must be associated with a host), and the number of licenses purchased and used.\u003c/p\u003e'\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CreateLicenseConfigurationResponse'\n        '480':\n          description: InvalidParameterValueException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InvalidParameterValueException'\n        '481':\n          description: ServerInternalException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ServerInternalException'\n        '482':\n          description: ResourceLimitExceededException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResourceLimitExceededException'\n        '483':\n          description: AuthorizationException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AuthorizationException'\n        '484':\n          description: AccessDeniedException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AccessDeniedException'\n        '485':\n          description: RateLimitExceededException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RateLimitExceededException'\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/CreateLicenseConfigurationRequest'\n      parameters:\n        - name: X-Amz-Target\n          in: header\n          required: true\n          schema:\n            type: string\n            enum:\n              - AWSLicenseManager.CreateLicenseConfiguration\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n  /#X-Amz-Target=AWSLicenseManager.CreateLicenseManagerReportGenerator:\n    post:\n      operationId: CreateLicenseManagerReportGenerator\n      description: Creates a new report generator.\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CreateLicenseManagerReportGeneratorResponse'\n        '480':\n          description: ValidationException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ValidationException'\n        '481':\n          description: InvalidParameterValueException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InvalidParameterValueException'\n        '482':\n          description: ResourceLimitExceededException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResourceLimitExceededException'\n        '483':\n          description: ServerInternalException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ServerInternalException'\n        '484':\n          description: AuthorizationException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AuthorizationException'\n        '485':\n          description: RateLimitExceededException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RateLimitExceededException'\n        '486':\n          description: AccessDeniedException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AccessDeniedException'\n        '487':\n          description: ResourceNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResourceNotFoundException'\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/CreateLicenseManagerReportGeneratorRequest'\n      parameters:\n        - name: X-Amz-Target\n          in: header\n          required: true\n          schema:\n            type: string\n            enum:\n              - AWSLicenseManager.CreateLicenseManagerReportGenerator\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n  /#X-Amz-Target=AWSLicenseManager.CreateLicenseVersion:\n    post:\n      operationId: CreateLicenseVersion\n      description: Creates a new version of the specified license.\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CreateLicenseVersionResponse'\n        '480':\n          description: ValidationException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ValidationException'\n        '481':\n          description: AccessDeniedException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AccessDeniedException'\n        '482':\n          description: ResourceNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResourceNotFoundException'\n        '483':\n          description: RedirectException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RedirectException'\n        '484':\n          description: ConflictException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ConflictException'\n        '485':\n          description: ServerInternalException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ServerInternalException'\n        '486':\n          description: AuthorizationException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AuthorizationException'\n        '487':\n          description: RateLimitExceededException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RateLimitExceededException'\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/CreateLicenseVersionRequest'\n      parameters:\n        - name: X-Amz-Target\n          in: header\n          required: true\n          schema:\n            type: string\n            enum:\n              - AWSLicenseManager.CreateLicenseVersion\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n  /#X-Amz-Target=AWSLicenseManager.CreateToken:\n    post:\n      operationId: CreateToken\n      description: '\u003cp\u003eCreates a long-lived token.\u003c/p\u003e \u003cp\u003eA refresh token is a JWT token used to get an access token. With an access token, you can call AssumeRoleWithWebIdentity to get role credentials that you can use to call License Manager to manage the specified license.\u003c/p\u003e'\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CreateTokenResponse'\n        '480':\n          description: ValidationException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ValidationException'\n        '481':\n          description: AuthorizationException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AuthorizationException'\n        '482':\n          description: AccessDeniedException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AccessDeniedException'\n        '483':\n          description: RateLimitExceededException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RateLimitExceededException'\n        '484':\n          description: ResourceLimitExceededException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResourceLimitExceededException'\n        '485':\n          description: ServerInternalException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ServerInternalException'\n        '486':\n          description: ResourceNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResourceNotFoundException'\n        '487':\n          description: RedirectException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RedirectException'\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/CreateTokenRequest'\n      parameters:\n        - name: X-Amz-Target\n          in: header\n          required: true\n          schema:\n            type: string\n            enum:\n              - AWSLicenseManager.CreateToken\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n  /#X-Amz-Target=AWSLicenseManager.DeleteGrant:\n    post:\n      operationId: DeleteGrant\n      description: Deletes the specified grant.\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DeleteGrantResponse'\n        '480':\n          description: ValidationException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ValidationException'\n        '481':\n          description: InvalidParameterValueException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InvalidParameterValueException'\n        '482':\n          description: AuthorizationException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AuthorizationException'\n        '483':\n          description: AccessDeniedException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AccessDeniedException'\n        '484':\n          description: RateLimitExceededException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RateLimitExceededException'\n        '485':\n          description: ResourceLimitExceededException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResourceLimitExceededException'\n        '486':\n          description: ServerInternalException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ServerInternalException'\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/DeleteGrantRequest'\n      parameters:\n        - name: X-Amz-Target\n          in: header\n          required: true\n          schema:\n            type: string\n            enum:\n              - AWSLicenseManager.DeleteGrant\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n  /#X-Amz-Target=AWSLicenseManager.DeleteLicense:\n    post:\n      operationId: DeleteLicense\n      description: Deletes the specified license.\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DeleteLicenseResponse'\n        '480':\n          description: ValidationException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ValidationException'\n        '481':\n          description: InvalidParameterValueException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InvalidParameterValueException'\n        '482':\n          description: RedirectException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RedirectException'\n        '483':\n          description: ConflictException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ConflictException'\n        '484':\n          description: ServerInternalException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ServerInternalException'\n        '485':\n          description: AuthorizationException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AuthorizationException'\n        '486':\n          description: AccessDeniedException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AccessDeniedException'\n        '487':\n          description: RateLimitExceededException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RateLimitExceededException'\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/DeleteLicenseRequest'\n      parameters:\n        - name: X-Amz-Target\n          in: header\n          required: true\n          schema:\n            type: string\n            enum:\n              - AWSLicenseManager.DeleteLicense\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n  /#X-Amz-Target=AWSLicenseManager.DeleteLicenseConfiguration:\n    post:\n      operationId: DeleteLicenseConfiguration\n      description: \u003cp\u003eDeletes the specified license configuration.\u003c/p\u003e \u003cp\u003eYou cannot delete a license configuration that is in use.\u003c/p\u003e\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DeleteLicenseConfigurationResponse'\n        '480':\n          description: InvalidParameterValueException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InvalidParameterValueException'\n        '481':\n          description: ServerInternalException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ServerInternalException'\n        '482':\n          description: AuthorizationException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AuthorizationException'\n        '483':\n          description: AccessDeniedException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AccessDeniedException'\n        '484':\n          description: RateLimitExceededException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RateLimitExceededException'\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/DeleteLicenseConfigurationRequest'\n      parameters:\n        - name: X-Amz-Target\n          in: header\n          required: true\n          schema:\n            type: string\n            enum:\n              - AWSLicenseManager.DeleteLicenseConfiguration\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n  /#X-Amz-Target=AWSLicenseManager.DeleteLicenseManagerReportGenerator:\n    post:\n      operationId: DeleteLicenseManagerReportGenerator\n      description: '\u003cp\u003eDelete an existing report generator.\u003c/p\u003e \u003cp\u003eThis action deletes the report generator, which stops it from generating future reports and cannot be reversed. However, the previous reports from this generator will remain in your S3 bucket.\u003c/p\u003e'\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DeleteLicenseManagerReportGeneratorResponse'\n        '480':\n          description: ValidationException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ValidationException'\n        '481':\n          description: InvalidParameterValueException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InvalidParameterValueException'\n        '482':\n          description: ResourceLimitExceededException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResourceLimitExceededException'\n        '483':\n          description: ServerInternalException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ServerInternalException'\n        '484':\n          description: AuthorizationException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AuthorizationException'\n        '485':\n          description: RateLimitExceededException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RateLimitExceededException'\n        '486':\n          description: AccessDeniedException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AccessDeniedException'\n        '487':\n          description: ResourceNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResourceNotFoundException'\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/DeleteLicenseManagerReportGeneratorRequest'\n      parameters:\n        - name: X-Amz-Target\n          in: header\n          required: true\n          schema:\n            type: string\n            enum:\n              - AWSLicenseManager.DeleteLicenseManagerReportGenerator\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n  /#X-Amz-Target=AWSLicenseManager.DeleteToken:\n    post:\n      operationId: DeleteToken\n      description: Deletes the specified token. Must be called in the license home Region.\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DeleteTokenResponse'\n        '480':\n          description: ValidationException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ValidationException'\n        '481':\n          description: AuthorizationException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AuthorizationException'\n        '482':\n          description: AccessDeniedException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AccessDeniedException'\n        '483':\n          description: RateLimitExceededException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RateLimitExceededException'\n        '484':\n          description: ServerInternalException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ServerInternalException'\n        '485':\n          description: ResourceNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResourceNotFoundException'\n        '486':\n          description: RedirectException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RedirectException'\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/DeleteTokenRequest'\n      parameters:\n        - name: X-Amz-Target\n          in: header\n          required: true\n          schema:\n            type: string\n            enum:\n              - AWSLicenseManager.DeleteToken\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n  /#X-Amz-Target=AWSLicenseManager.ExtendLicenseConsumption:\n    post:\n      operationId: ExtendLicenseConsumption\n      description: Extends the expiration date for license consumption.\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ExtendLicenseConsumptionResponse'\n        '480':\n          description: ValidationException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ValidationException'\n        '481':\n          description: InvalidParameterValueException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InvalidParameterValueException'\n        '482':\n          description: AuthorizationException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AuthorizationException'\n        '483':\n          description: AccessDeniedException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AccessDeniedException'\n        '484':\n          description: RateLimitExceededException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RateLimitExceededException'\n        '485':\n          description: ServerInternalException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ServerInternalException'\n        '486':\n          description: ResourceNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResourceNotFoundException'\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/ExtendLicenseConsumptionRequest'\n      parameters:\n        - name: X-Amz-Target\n          in: header\n          required: true\n          schema:\n            type: string\n            enum:\n              - AWSLicenseManager.ExtendLicenseConsumption\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n  /#X-Amz-Target=AWSLicenseManager.GetAccessToken:\n    post:\n      operationId: GetAccessToken\n      description: Gets a temporary access token to use with AssumeRoleWithWebIdentity. Access tokens are valid for one hour.\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GetAccessTokenResponse'\n        '480':\n          description: ValidationException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ValidationException'\n        '481':\n          description: AuthorizationException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AuthorizationException'\n        '482':\n          description: AccessDeniedException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AccessDeniedException'\n        '483':\n          description: RateLimitExceededException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RateLimitExceededException'\n        '484':\n          description: ServerInternalException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ServerInternalException'\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/GetAccessTokenRequest'\n      parameters:\n        - name: X-Amz-Target\n          in: header\n          required: true\n          schema:\n            type: string\n            enum:\n              - AWSLicenseManager.GetAccessToken\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n  /#X-Amz-Target=AWSLicenseManager.GetGrant:\n    post:\n      operationId: GetGrant\n      description: Gets detailed information about the specified grant.\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GetGrantResponse'\n        '480':\n          description: ValidationException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ValidationException'\n        '481':\n          description: InvalidParameterValueException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InvalidParameterValueException'\n        '482':\n          description: ResourceLimitExceededException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResourceLimitExceededException'\n        '483':\n          description: ServerInternalException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ServerInternalException'\n        '484':\n          description: AuthorizationException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AuthorizationException'\n        '485':\n          description: AccessDeniedException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AccessDeniedException'\n        '486':\n          description: RateLimitExceededException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RateLimitExceededException'\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/GetGrantRequest'\n      parameters:\n        - name: X-Amz-Target\n          in: header\n          required: true\n          schema:\n            type: string\n            enum:\n              - AWSLicenseManager.GetGrant\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n  /#X-Amz-Target=AWSLicenseManager.GetLicense:\n    post:\n      operationId: GetLicense\n      description: Gets detailed information about the specified license.\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GetLicenseResponse'\n        '480':\n          description: ValidationException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ValidationException'\n        '481':\n          description: InvalidParameterValueException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InvalidParameterValueException'\n        '482':\n          description: AuthorizationException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AuthorizationException'\n        '483':\n          description: AccessDeniedException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AccessDeniedException'\n        '484':\n          description: RateLimitExceededException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RateLimitExceededException'\n        '485':\n          description: ServerInternalException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ServerInternalException'\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/GetLicenseRequest'\n      parameters:\n        - name: X-Amz-Target\n          in: header\n          required: true\n          schema:\n            type: string\n            enum:\n              - AWSLicenseManager.GetLicense\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n  /#X-Amz-Target=AWSLicenseManager.GetLicenseConfiguration:\n    post:\n      operationId: GetLicenseConfiguration\n      description: Gets detailed information about the specified license configuration.\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GetLicenseConfigurationResponse'\n        '480':\n          description: InvalidParameterValueException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InvalidParameterValueException'\n        '481':\n          description: ServerInternalException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ServerInternalException'\n        '482':\n          description: AuthorizationException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AuthorizationException'\n        '483':\n          description: AccessDeniedException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AccessDeniedException'\n        '484':\n          description: RateLimitExceededException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RateLimitExceededException'\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/GetLicenseConfigurationRequest'\n      parameters:\n        - name: X-Amz-Target\n          in: header\n          required: true\n          schema:\n            type: string\n            enum:\n              - AWSLicenseManager.GetLicenseConfiguration\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n  /#X-Amz-Target=AWSLicenseManager.GetLicenseManagerReportGenerator:\n    post:\n      operationId: GetLicenseManagerReportGenerator\n      description: Gets information on the specified report generator.\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GetLicenseManagerReportGeneratorResponse'\n        '480':\n          description: ValidationException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ValidationException'\n        '481':\n          description: InvalidParameterValueException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InvalidParameterValueException'\n        '482':\n          description: ResourceLimitExceededException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResourceLimitExceededException'\n        '483':\n          description: ServerInternalException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ServerInternalException'\n        '484':\n          description: AuthorizationException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AuthorizationException'\n        '485':\n          description: RateLimitExceededException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RateLimitExceededException'\n        '486':\n          description: AccessDeniedException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AccessDeniedException'\n        '487':\n          description: ResourceNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResourceNotFoundException'\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/GetLicenseManagerReportGeneratorRequest'\n      parameters:\n        - name: X-Amz-Target\n          in: header\n          required: true\n          schema:\n            type: string\n            enum:\n              - AWSLicenseManager.GetLicenseManagerReportGenerator\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n  /#X-Amz-Target=AWSLicenseManager.GetLicenseUsage:\n    post:\n      operationId: GetLicenseUsage\n      description: Gets detailed information about the usage of the specified license.\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GetLicenseUsageResponse'\n        '480':\n          description: ValidationException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ValidationException'\n        '481':\n          description: InvalidParameterValueException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InvalidParameterValueException'\n        '482':\n          description: AuthorizationException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AuthorizationException'\n        '483':\n          description: AccessDeniedException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AccessDeniedException'\n        '484':\n          description: RateLimitExceededException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RateLimitExceededException'\n        '485':\n          description: ServerInternalException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ServerInternalException'\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/GetLicenseUsageRequest'\n      parameters:\n        - name: X-Amz-Target\n          in: header\n          required: true\n          schema:\n            type: string\n            enum:\n              - AWSLicenseManager.GetLicenseUsage\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n  /#X-Amz-Target=AWSLicenseManager.GetServiceSettings:\n    post:\n      operationId: GetServiceSettings\n      description: Gets the License Manager settings for the current Region.\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GetServiceSettingsResponse'\n        '480':\n          description: ServerInternalException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ServerInternalException'\n        '481':\n          description: AuthorizationException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AuthorizationException'\n        '482':\n          description: AccessDeniedException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AccessDeniedException'\n        '483':\n          description: RateLimitExceededException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RateLimitExceededException'\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/GetServiceSettingsRequest'\n      parameters:\n        - name: X-Amz-Target\n          in: header\n          required: true\n          schema:\n            type: string\n            enum:\n              - AWSLicenseManager.GetServiceSettings\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n  /#X-Amz-Target=AWSLicenseManager.ListAssociationsForLicenseConfiguration:\n    post:\n      operationId: ListAssociationsForLicenseConfiguration\n      description: '\u003cp\u003eLists the resource associations for the specified license configuration.\u003c/p\u003e \u003cp\u003eResource associations need not consume licenses from a license configuration. For example, an AMI or a stopped instance might not consume a license (depending on the license rules).\u003c/p\u003e'\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ListAssociationsForLicenseConfigurationResponse'\n        '480':\n          description: InvalidParameterValueException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InvalidParameterValueException'\n        '481':\n          description: FilterLimitExceededException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/FilterLimitExceededException'\n        '482':\n          description: ServerInternalException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ServerInternalException'\n        '483':\n          description: AuthorizationException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AuthorizationException'\n        '484':\n          description: AccessDeniedException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AccessDeniedException'\n        '485':\n          description: RateLimitExceededException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RateLimitExceededException'\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/ListAssociationsForLicenseConfigurationRequest'\n      parameters:\n        - name: X-Amz-Target\n          in: header\n          required: true\n          schema:\n            type: string\n            enum:\n              - AWSLicenseManager.ListAssociationsForLicenseConfiguration\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n  /#X-Amz-Target=AWSLicenseManager.ListDistributedGrants:\n    post:\n      operationId: ListDistributedGrants\n      description: Lists the grants distributed for the specified license.\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ListDistributedGrantsResponse'\n        '480':\n          description: ValidationException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ValidationException'\n        '481':\n          description: InvalidParameterValueException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InvalidParameterValueException'\n        '482':\n          description: ResourceLimitExceededException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResourceLimitExceededException'\n        '483':\n          description: ServerInternalException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ServerInternalException'\n        '484':\n          description: AuthorizationException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AuthorizationException'\n        '485':\n          description: AccessDeniedException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AccessDeniedException'\n        '486':\n          description: RateLimitExceededException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RateLimitExceededException'\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/ListDistributedGrantsRequest'\n      parameters:\n        - name: X-Amz-Target\n          in: header\n          required: true\n          schema:\n            type: string\n            enum:\n              - AWSLicenseManager.ListDistributedGrants\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n  /#X-Amz-Target=AWSLicenseManager.ListFailuresForLicenseConfigurationOperations:\n    post:\n      operationId: ListFailuresForLicenseConfigurationOperations\n      description: Lists the license configuration operations that failed.\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ListFailuresForLicenseConfigurationOperationsResponse'\n        '480':\n          description: InvalidParameterValueException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InvalidParameterValueException'\n        '481':\n          description: ServerInternalException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ServerInternalException'\n        '482':\n          description: AuthorizationException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AuthorizationException'\n        '483':\n          description: AccessDeniedException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AccessDeniedException'\n        '484':\n          description: RateLimitExceededException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RateLimitExceededException'\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/ListFailuresForLicenseConfigurationOperationsRequest'\n      parameters:\n        - name: X-Amz-Target\n          in: header\n          required: true\n          schema:\n            type: string\n            enum:\n              - AWSLicenseManager.ListFailuresForLicenseConfigurationOperations\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n  /#X-Amz-Target=AWSLicenseManager.ListLicenseConfigurations:\n    post:\n      operationId: ListLicenseConfigurations\n      description: Lists the license configurations for your account.\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ListLicenseConfigurationsResponse'\n        '480':\n          description: InvalidParameterValueException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InvalidParameterValueException'\n        '481':\n          description: ServerInternalException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ServerInternalException'\n        '482':\n          description: FilterLimitExceededException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/FilterLimitExceededException'\n        '483':\n          description: AuthorizationException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AuthorizationException'\n        '484':\n          description: AccessDeniedException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AccessDeniedException'\n        '485':\n          description: RateLimitExceededException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RateLimitExceededException'\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/ListLicenseConfigurationsRequest'\n      parameters:\n        - name: X-Amz-Target\n          in: header\n          required: true\n          schema:\n            type: string\n            enum:\n              - AWSLicenseManager.ListLicenseConfigurations\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n  /#X-Amz-Target=AWSLicenseManager.ListLicenseManagerReportGenerators:\n    post:\n      operationId: ListLicenseManagerReportGenerators\n      description: Lists the report generators for your account.\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ListLicenseManagerReportGeneratorsResponse'\n        '480':\n          description: ValidationException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ValidationException'\n        '481':\n          description: InvalidParameterValueException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InvalidParameterValueException'\n        '482':\n          description: ResourceLimitExceededException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResourceLimitExceededException'\n        '483':\n          description: ServerInternalException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ServerInternalException'\n        '484':\n          description: AuthorizationException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AuthorizationException'\n        '485':\n          description: RateLimitExceededException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RateLimitExceededException'\n        '486':\n          description: AccessDeniedException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AccessDeniedException'\n        '487':\n          description: ResourceNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResourceNotFoundException'\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/ListLicenseManagerReportGeneratorsRequest'\n      parameters:\n        - name: X-Amz-Target\n          in: header\n          required: true\n          schema:\n            type: string\n            enum:\n              - AWSLicenseManager.ListLicenseManagerReportGenerators\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n  /#X-Amz-Target=AWSLicenseManager.ListLicenseSpecificationsForResource:\n    post:\n      operationId: ListLicenseSpecificationsForResource\n      description: Describes the license configurations for the specified resource.\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ListLicenseSpecificationsForResourceResponse'\n        '480':\n          description: InvalidParameterValueException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InvalidParameterValueException'\n        '481':\n          description: ServerInternalException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ServerInternalException'\n        '482':\n          description: AuthorizationException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AuthorizationException'\n        '483':\n          description: AccessDeniedException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AccessDeniedException'\n        '484':\n          description: RateLimitExceededException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RateLimitExceededException'\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/ListLicenseSpecificationsForResourceRequest'\n      parameters:\n        - name: X-Amz-Target\n          in: header\n          required: true\n          schema:\n            type: string\n            enum:\n              - AWSLicenseManager.ListLicenseSpecificationsForResource\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n  /#X-Amz-Target=AWSLicenseManager.ListLicenseVersions:\n    post:\n      operationId: ListLicenseVersions\n      description: Lists all versions of the specified license.\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ListLicenseVersionsResponse'\n        '480':\n          description: InvalidParameterValueException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InvalidParameterValueException'\n        '481':\n          description: AuthorizationException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AuthorizationException'\n        '482':\n          description: AccessDeniedException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AccessDeniedException'\n        '483':\n          description: RateLimitExceededException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RateLimitExceededException'\n        '484':\n          description: ServerInternalException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ServerInternalException'\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/ListLicenseVersionsRequest'\n      parameters:\n        - name: X-Amz-Target\n          in: header\n          required: true\n          schema:\n            type: string\n            enum:\n              - AWSLicenseManager.ListLicenseVersions\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n  /#X-Amz-Target=AWSLicenseManager.ListLicenses:\n    post:\n      operationId: ListLicenses\n      description: Lists the licenses for your account.\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ListLicensesResponse'\n        '480':\n          description: ValidationException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ValidationException'\n        '481':\n          description: InvalidParameterValueException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InvalidParameterValueException'\n        '482':\n          description: AuthorizationException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AuthorizationException'\n        '483':\n          description: AccessDeniedException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AccessDeniedException'\n        '484':\n          description: RateLimitExceededException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RateLimitExceededException'\n        '485':\n          description: ServerInternalException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ServerInternalException'\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/ListLicensesRequest'\n      parameters:\n        - name: X-Amz-Target\n          in: header\n          required: true\n          schema:\n            type: string\n            enum:\n              - AWSLicenseManager.ListLicenses\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n  /#X-Amz-Target=AWSLicenseManager.ListReceivedGrants:\n    post:\n      operationId: ListReceivedGrants\n      description: Lists grants that are received but not accepted.\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ListReceivedGrantsResponse'\n        '480':\n          description: ValidationException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ValidationException'\n        '481':\n          description: InvalidParameterValueException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InvalidParameterValueException'\n        '482':\n          description: ResourceLimitExceededException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResourceLimitExceededException'\n        '483':\n          description: ServerInternalException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ServerInternalException'\n        '484':\n          description: AuthorizationException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AuthorizationException'\n        '485':\n          description: AccessDeniedException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AccessDeniedException'\n        '486':\n          description: RateLimitExceededException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RateLimitExceededException'\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/ListReceivedGrantsRequest'\n      parameters:\n        - name: X-Amz-Target\n          in: header\n          required: true\n          schema:\n            type: string\n            enum:\n              - AWSLicenseManager.ListReceivedGrants\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n  /#X-Amz-Target=AWSLicenseManager.ListReceivedLicenses:\n    post:\n      operationId: ListReceivedLicenses\n      description: Lists received licenses.\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ListReceivedLicensesResponse'\n        '480':\n          description: ValidationException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ValidationException'\n        '481':\n          description: InvalidParameterValueException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InvalidParameterValueException'\n        '482':\n          description: ResourceLimitExceededException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResourceLimitExceededException'\n        '483':\n          description: ServerInternalException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ServerInternalException'\n        '484':\n          description: AuthorizationException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AuthorizationException'\n        '485':\n          description: AccessDeniedException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AccessDeniedException'\n        '486':\n          description: RateLimitExceededException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RateLimitExceededException'\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/ListReceivedLicensesRequest'\n      parameters:\n        - name: X-Amz-Target\n          in: header\n          required: true\n          schema:\n            type: string\n            enum:\n              - AWSLicenseManager.ListReceivedLicenses\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n  /#X-Amz-Target=AWSLicenseManager.ListResourceInventory:\n    post:\n      operationId: ListResourceInventory\n      description: Lists resources managed using Systems Manager inventory.\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ListResourceInventoryResponse'\n        '480':\n          description: InvalidParameterValueException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InvalidParameterValueException'\n        '481':\n          description: ServerInternalException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ServerInternalException'\n        '482':\n          description: FilterLimitExceededException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/FilterLimitExceededException'\n        '483':\n          description: FailedDependencyException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/FailedDependencyException'\n        '484':\n          description: AuthorizationException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AuthorizationException'\n        '485':\n          description: AccessDeniedException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AccessDeniedException'\n        '486':\n          description: RateLimitExceededException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RateLimitExceededException'\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/ListResourceInventoryRequest'\n      parameters:\n        - name: X-Amz-Target\n          in: header\n          required: true\n          schema:\n            type: string\n            enum:\n              - AWSLicenseManager.ListResourceInventory\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n  /#X-Amz-Target=AWSLicenseManager.ListTagsForResource:\n    post:\n      operationId: ListTagsForResource\n      description: Lists the tags for the specified license configuration.\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ListTagsForResourceResponse'\n        '480':\n          description: InvalidParameterValueException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InvalidParameterValueException'\n        '481':\n          description: ServerInternalException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ServerInternalException'\n        '482':\n          description: AuthorizationException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AuthorizationException'\n        '483':\n          description: AccessDeniedException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AccessDeniedException'\n        '484':\n          description: RateLimitExceededException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RateLimitExceededException'\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/ListTagsForResourceRequest'\n      parameters:\n        - name: X-Amz-Target\n          in: header\n          required: true\n          schema:\n            type: string\n            enum:\n              - AWSLicenseManager.ListTagsForResource\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n  /#X-Amz-Target=AWSLicenseManager.ListTokens:\n    post:\n      operationId: ListTokens\n      description: Lists your tokens.\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ListTokensResponse'\n        '480':\n          description: ValidationException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ValidationException'\n        '481':\n          description: AuthorizationException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AuthorizationException'\n        '482':\n          description: AccessDeniedException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AccessDeniedException'\n        '483':\n          description: RateLimitExceededException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RateLimitExceededException'\n        '484':\n          description: ServerInternalException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ServerInternalException'\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/ListTokensRequest'\n      parameters:\n        - name: X-Amz-Target\n          in: header\n          required: true\n          schema:\n            type: string\n            enum:\n              - AWSLicenseManager.ListTokens\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n  /#X-Amz-Target=AWSLicenseManager.ListUsageForLicenseConfiguration:\n    post:\n      operationId: ListUsageForLicenseConfiguration\n      description: 'Lists all license usage records for a license configuration, displaying license consumption details by resource at a selected point in time. Use this action to audit the current license consumption for any license inventory and configuration.'\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ListUsageForLicenseConfigurationResponse'\n        '480':\n          description: InvalidParameterValueException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InvalidParameterValueException'\n        '481':\n          description: FilterLimitExceededException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/FilterLimitExceededException'\n        '482':\n          description: ServerInternalException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ServerInternalException'\n        '483':\n          description: AuthorizationException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AuthorizationException'\n        '484':\n          description: AccessDeniedException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AccessDeniedException'\n        '485':\n          description: RateLimitExceededException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RateLimitExceededException'\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/ListUsageForLicenseConfigurationRequest'\n      parameters:\n        - name: X-Amz-Target\n          in: header\n          required: true\n          schema:\n            type: string\n            enum:\n              - AWSLicenseManager.ListUsageForLicenseConfiguration\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n  /#X-Amz-Target=AWSLicenseManager.RejectGrant:\n    post:\n      operationId: RejectGrant\n      description: Rejects the specified grant.\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RejectGrantResponse'\n        '480':\n          description: ValidationException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ValidationException'\n        '481':\n          description: InvalidParameterValueException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InvalidParameterValueException'\n        '482':\n          description: AuthorizationException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AuthorizationException'\n        '483':\n          description: AccessDeniedException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AccessDeniedException'\n        '484':\n          description: RateLimitExceededException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RateLimitExceededException'\n        '485':\n          description: ResourceLimitExceededException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResourceLimitExceededException'\n        '486':\n          description: ServerInternalException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ServerInternalException'\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/RejectGrantRequest'\n      parameters:\n        - name: X-Amz-Target\n          in: header\n          required: true\n          schema:\n            type: string\n            enum:\n              - AWSLicenseManager.RejectGrant\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n  /#X-Amz-Target=AWSLicenseManager.TagResource:\n    post:\n      operationId: TagResource\n      description: Adds the specified tags to the specified license configuration.\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/TagResourceResponse'\n        '480':\n          description: InvalidParameterValueException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InvalidParameterValueException'\n        '481':\n          description: ServerInternalException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ServerInternalException'\n        '482':\n          description: AuthorizationException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AuthorizationException'\n        '483':\n          description: AccessDeniedException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AccessDeniedException'\n        '484':\n          description: RateLimitExceededException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RateLimitExceededException'\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/TagResourceRequest'\n      parameters:\n        - name: X-Amz-Target\n          in: header\n          required: true\n          schema:\n            type: string\n            enum:\n              - AWSLicenseManager.TagResource\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n  /#X-Amz-Target=AWSLicenseManager.UntagResource:\n    post:\n      operationId: UntagResource\n      description: Removes the specified tags from the specified license configuration.\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/UntagResourceResponse'\n        '480':\n          description: InvalidParameterValueException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InvalidParameterValueException'\n        '481':\n          description: ServerInternalException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ServerInternalException'\n        '482':\n          description: AuthorizationException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AuthorizationException'\n        '483':\n          description: AccessDeniedException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AccessDeniedException'\n        '484':\n          description: RateLimitExceededException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RateLimitExceededException'\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/UntagResourceRequest'\n      parameters:\n        - name: X-Amz-Target\n          in: header\n          required: true\n          schema:\n            type: string\n            enum:\n              - AWSLicenseManager.UntagResource\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n  /#X-Amz-Target=AWSLicenseManager.UpdateLicenseConfiguration:\n    post:\n      operationId: UpdateLicenseConfiguration\n      description: Modifies the attributes of an existing license configuration.\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/UpdateLicenseConfigurationResponse'\n        '480':\n          description: InvalidParameterValueException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InvalidParameterValueException'\n        '481':\n          description: ServerInternalException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ServerInternalException'\n        '482':\n          description: AuthorizationException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AuthorizationException'\n        '483':\n          description: AccessDeniedException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AccessDeniedException'\n        '484':\n          description: RateLimitExceededException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RateLimitExceededException'\n        '485':\n          description: ResourceLimitExceededException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResourceLimitExceededException'\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/UpdateLicenseConfigurationRequest'\n      parameters:\n        - name: X-Amz-Target\n          in: header\n          required: true\n          schema:\n            type: string\n            enum:\n              - AWSLicenseManager.UpdateLicenseConfiguration\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n  /#X-Amz-Target=AWSLicenseManager.UpdateLicenseManagerReportGenerator:\n    post:\n      operationId: UpdateLicenseManagerReportGenerator\n      description: '\u003cp\u003eUpdates a report generator.\u003c/p\u003e \u003cp\u003eAfter you make changes to a report generator, it will start generating new reports within 60 minutes of being updated.\u003c/p\u003e'\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/UpdateLicenseManagerReportGeneratorResponse'\n        '480':\n          description: ValidationException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ValidationException'\n        '481':\n          description: InvalidParameterValueException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InvalidParameterValueException'\n        '482':\n          description: RateLimitExceededException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RateLimitExceededException'\n        '483':\n          description: ServerInternalException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ServerInternalException'\n        '484':\n          description: AuthorizationException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AuthorizationException'\n        '485':\n          description: AccessDeniedException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AccessDeniedException'\n        '486':\n          description: ResourceNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResourceNotFoundException'\n        '487':\n          description: ResourceLimitExceededException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResourceLimitExceededException'\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/UpdateLicenseManagerReportGeneratorRequest'\n      parameters:\n        - name: X-Amz-Target\n          in: header\n          required: true\n          schema:\n            type: string\n            enum:\n              - AWSLicenseManager.UpdateLicenseManagerReportGenerator\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n  /#X-Amz-Target=AWSLicenseManager.UpdateLicenseSpecificationsForResource:\n    post:\n      operationId: UpdateLicenseSpecificationsForResource\n      description: '\u003cp\u003eAdds or removes the specified license configurations for the specified AWS resource.\u003c/p\u003e \u003cp\u003eYou can update the license specifications of AMIs, instances, and hosts. You cannot update the license specifications for launch templates and AWS CloudFormation templates, as they send license configurations to the operation that creates the resource.\u003c/p\u003e'\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/UpdateLicenseSpecificationsForResourceResponse'\n        '480':\n          description: InvalidParameterValueException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InvalidParameterValueException'\n        '481':\n          description: InvalidResourceStateException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InvalidResourceStateException'\n        '482':\n          description: LicenseUsageException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/LicenseUsageException'\n        '483':\n          description: ServerInternalException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ServerInternalException'\n        '484':\n          description: AuthorizationException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AuthorizationException'\n        '485':\n          description: AccessDeniedException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AccessDeniedException'\n        '486':\n          description: RateLimitExceededException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RateLimitExceededException'\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/UpdateLicenseSpecificationsForResourceRequest'\n      parameters:\n        - name: X-Amz-Target\n          in: header\n          required: true\n          schema:\n            type: string\n            enum:\n              - AWSLicenseManager.UpdateLicenseSpecificationsForResource\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n  /#X-Amz-Target=AWSLicenseManager.UpdateServiceSettings:\n    post:\n      operationId: UpdateServiceSettings\n      description: Updates License Manager settings for the current Region.\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/UpdateServiceSettingsResponse'\n        '480':\n          description: InvalidParameterValueException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InvalidParameterValueException'\n        '481':\n          description: ServerInternalException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ServerInternalException'\n        '482':\n          description: AuthorizationException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AuthorizationException'\n        '483':\n          description: AccessDeniedException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AccessDeniedException'\n        '484':\n          description: RateLimitExceededException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RateLimitExceededException'\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/UpdateServiceSettingsRequest'\n      parameters:\n        - name: X-Amz-Target\n          in: header\n          required: true\n          schema:\n            type: string\n            enum:\n              - AWSLicenseManager.UpdateServiceSettings\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\ncomponents:\n  parameters:\n    X-Amz-Content-Sha256:\n      name: X-Amz-Content-Sha256\n      in: header\n      schema:\n        type: string\n      required: false\n    X-Amz-Date:\n      name: X-Amz-Date\n      in: header\n      schema:\n        type: string\n      required: false\n    X-Amz-Algorithm:\n      name: X-Amz-Algorithm\n      in: header\n      schema:\n        type: string\n      required: false\n    X-Amz-Credential:\n      name: X-Amz-Credential\n      in: header\n      schema:\n        type: string\n      required: false\n    X-Amz-Security-Token:\n      name: X-Amz-Security-Token\n      in: header\n      schema:\n        type: string\n      required: false\n    X-Amz-Signature:\n      name: X-Amz-Signature\n      in: header\n      schema:\n        type: string\n      required: false\n    X-Amz-SignedHeaders:\n      name: X-Amz-SignedHeaders\n      in: header\n      schema:\n        type: string\n      required: false\n  securitySchemes:\n    hmac:\n      type: apiKey\n      name: Authorization\n      in: header\n      description: Amazon Signature authorization v4\n      x-amazon-apigateway-authtype: awsSigv4\n  schemas:\n    AcceptGrantResponse:\n      type: object\n      properties:\n        GrantArn:\n          allOf:\n            - $ref: '#/components/schemas/Arn'\n            - description: Grant ARN.\n        Status:\n          allOf:\n            - $ref: '#/components/schemas/GrantStatus'\n            - description: Grant status.\n        Version:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: Grant version.\n    AcceptGrantRequest:\n      type: object\n      required:\n        - GrantArn\n      title: AcceptGrantRequest\n      properties:\n        GrantArn:\n          allOf:\n            - $ref: '#/components/schemas/Arn'\n            - description: Amazon Resource Name (ARN) of the grant.\n    ValidationException: {}\n    InvalidParameterValueException: {}\n    AuthorizationException: {}\n    AccessDeniedException: {}\n    RateLimitExceededException: {}\n    ResourceLimitExceededException: {}\n    ServerInternalException: {}\n    CheckInLicenseResponse:\n      type: object\n      properties: {}\n    CheckInLicenseRequest:\n      type: object\n      required:\n        - LicenseConsumptionToken\n      title: CheckInLicenseRequest\n      properties:\n        LicenseConsumptionToken:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: License consumption token.\n        Beneficiary:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: License beneficiary.\n    ResourceNotFoundException: {}\n    ConflictException: {}\n    CheckoutBorrowLicenseResponse:\n      type: object\n      properties:\n        LicenseArn:\n          allOf:\n            - $ref: '#/components/schemas/Arn'\n            - description: Amazon Resource Name (ARN) of the license.\n        LicenseConsumptionToken:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: License consumption token.\n        EntitlementsAllowed:\n          allOf:\n            - $ref: '#/components/schemas/EntitlementDataList'\n            - description: Allowed license entitlements.\n        NodeId:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: Node ID.\n        SignedToken:\n          allOf:\n            - $ref: '#/components/schemas/SignedToken'\n            - description: Signed token.\n        IssuedAt:\n          allOf:\n            - $ref: '#/components/schemas/ISO8601DateTime'\n            - description: Date and time at which the license checkout is issued.\n        Expiration:\n          allOf:\n            - $ref: '#/components/schemas/ISO8601DateTime'\n            - description: Date and time at which the license checkout expires.\n        CheckoutMetadata:\n          allOf:\n            - $ref: '#/components/schemas/MetadataList'\n            - description: Information about constraints.\n    CheckoutBorrowLicenseRequest:\n      type: object\n      required:\n        - LicenseArn\n        - Entitlements\n        - DigitalSignatureMethod\n        - ClientToken\n      title: CheckoutBorrowLicenseRequest\n      properties:\n        LicenseArn:\n          allOf:\n            - $ref: '#/components/schemas/Arn'\n            - description: Amazon Resource Name (ARN) of the license. The license must use the borrow consumption configuration.\n        Entitlements:\n          allOf:\n            - $ref: '#/components/schemas/EntitlementDataList'\n            - description: License entitlements. Partial checkouts are not supported.\n        DigitalSignatureMethod:\n          allOf:\n            - $ref: '#/components/schemas/DigitalSignatureMethod'\n            - description: 'Digital signature method. The possible value is JSON Web Signature (JWS) algorithm PS384. For more information, see \u003ca href=\"https://tools.ietf.org/html/rfc7518#section-3.5\"\u003eRFC 7518 Digital Signature with RSASSA-PSS\u003c/a\u003e.'\n        NodeId:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: Node ID.\n        CheckoutMetadata:\n          allOf:\n            - $ref: '#/components/schemas/MetadataList'\n            - description: Information about constraints.\n        ClientToken:\n          allOf:\n            - $ref: '#/components/schemas/ClientToken'\n            - description: 'Unique, case-sensitive identifier that you provide to ensure the idempotency of the request.'\n    NoEntitlementsAllowedException: {}\n    EntitlementNotAllowedException: {}\n    UnsupportedDigitalSignatureMethodException: {}\n    RedirectException: {}\n    CheckoutLicenseResponse:\n      type: object\n      properties:\n        CheckoutType:\n          allOf:\n            - $ref: '#/components/schemas/CheckoutType'\n            - description: Checkout type.\n        LicenseConsumptionToken:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: License consumption token.\n        EntitlementsAllowed:\n          allOf:\n            - $ref: '#/components/schemas/EntitlementDataList'\n            - description: Allowed license entitlements.\n        SignedToken:\n          allOf:\n            - $ref: '#/components/schemas/SignedToken'\n            - description: Signed token.\n        NodeId:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: Node ID.\n        IssuedAt:\n          allOf:\n            - $ref: '#/components/schemas/ISO8601DateTime'\n            - description: Date and time at which the license checkout is issued.\n        Expiration:\n          allOf:\n            - $ref: '#/components/schemas/ISO8601DateTime'\n            - description: Date and time at which the license checkout expires.\n    CheckoutLicenseRequest:\n      type: object\n      required:\n        - ProductSKU\n        - CheckoutType\n        - KeyFingerprint\n        - Entitlements\n        - ClientToken\n      title: CheckoutLicenseRequest\n      properties:\n        ProductSKU:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: Product SKU.\n        CheckoutType:\n          allOf:\n            - $ref: '#/components/schemas/CheckoutType'\n            - description: Checkout type.\n        KeyFingerprint:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: Key fingerprint identifying the license.\n        Entitlements:\n          allOf:\n            - $ref: '#/components/schemas/EntitlementDataList'\n            - description: License entitlements.\n        ClientToken:\n          allOf:\n            - $ref: '#/components/schemas/ClientToken'\n            - description: 'Unique, case-sensitive identifier that you provide to ensure the idempotency of the request.'\n        Beneficiary:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: License beneficiary.\n        NodeId:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: Node ID.\n    CreateGrantResponse:\n      type: object\n      properties:\n        GrantArn:\n          allOf:\n            - $ref: '#/components/schemas/Arn'\n            - description: Grant ARN.\n        Status:\n          allOf:\n            - $ref: '#/components/schemas/GrantStatus'\n            - description: Grant status.\n        Version:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: Grant version.\n    CreateGrantRequest:\n      type: object\n      required:\n        - ClientToken\n        - GrantName\n        - LicenseArn\n        - Principals\n        - HomeRegion\n        - AllowedOperations\n      title: CreateGrantRequest\n      properties:\n        ClientToken:\n          allOf:\n            - $ref: '#/components/schemas/ClientToken'\n            - description: 'Unique, case-sensitive identifier that you provide to ensure the idempotency of the request.'\n        GrantName:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: Grant name.\n        LicenseArn:\n          allOf:\n            - $ref: '#/components/schemas/Arn'\n            - description: Amazon Resource Name (ARN) of the license.\n        Principals:\n          allOf:\n            - $ref: '#/components/schemas/PrincipalArnList'\n            - description: The grant principals.\n        HomeRegion:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: Home Region of the grant.\n        AllowedOperations:\n          allOf:\n            - $ref: '#/components/schemas/AllowedOperationList'\n            - description: Allowed operations for the grant.\n    CreateGrantVersionResponse:\n      type: object\n      properties:\n        GrantArn:\n          allOf:\n            - $ref: '#/components/schemas/Arn'\n            - description: Grant ARN.\n        Status:\n          allOf:\n            - $ref: '#/components/schemas/GrantStatus'\n            - description: Grant status.\n        Version:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: New version of the grant.\n    CreateGrantVersionRequest:\n      type: object\n      required:\n        - ClientToken\n        - GrantArn\n      title: CreateGrantVersionRequest\n      properties:\n        ClientToken:\n          allOf:\n            - $ref: '#/components/schemas/ClientToken'\n            - description: 'Unique, case-sensitive identifier that you provide to ensure the idempotency of the request.'\n        GrantArn:\n          allOf:\n            - $ref: '#/components/schemas/Arn'\n            - description: Amazon Resource Name (ARN) of the grant.\n        GrantName:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: Grant name.\n        AllowedOperations:\n          allOf:\n            - $ref: '#/components/schemas/AllowedOperationList'\n            - description: Allowed operations for the grant.\n        Status:\n          allOf:\n            - $ref: '#/components/schemas/GrantStatus'\n            - description: Grant status.\n        StatusReason:\n          $ref: '#/components/schemas/StatusReasonMessage'\n        SourceVersion:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: Current version of the grant.\n    CreateLicenseResponse:\n      type: object\n      properties:\n        LicenseArn:\n          allOf:\n            - $ref: '#/components/schemas/Arn'\n            - description: Amazon Resource Name (ARN) of the license.\n        Status:\n          allOf:\n            - $ref: '#/components/schemas/LicenseStatus'\n            - description: License status.\n        Version:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: License version.\n    CreateLicenseRequest:\n      type: object\n      required:\n        - LicenseName\n        - ProductName\n        - ProductSKU\n        - Issuer\n        - HomeRegion\n        - Validity\n        - Entitlements\n        - Beneficiary\n        - ConsumptionConfiguration\n        - ClientToken\n      title: CreateLicenseRequest\n      properties:\n        LicenseName:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: License name.\n        ProductName:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: Product name.\n        ProductSKU:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: Product SKU.\n        Issuer:\n          allOf:\n            - $ref: '#/components/schemas/Issuer'\n            - description: License issuer.\n        HomeRegion:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: Home Region for the license.\n        Validity:\n          allOf:\n            - $ref: '#/components/schemas/DatetimeRange'\n            - description: 'Date and time range during which the license is valid, in ISO8601-UTC format.'\n        Entitlements:\n          allOf:\n            - $ref: '#/components/schemas/EntitlementList'\n            - description: License entitlements.\n        Beneficiary:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: License beneficiary.\n        ConsumptionConfiguration:\n          allOf:\n            - $ref: '#/components/schemas/ConsumptionConfiguration'\n            - description: Configuration for consumption of the license. Choose a provisional configuration for workloads running with continuous connectivity. Choose a borrow configuration for workloads with offline usage.\n        LicenseMetadata:\n          allOf:\n            - $ref: '#/components/schemas/MetadataList'\n            - description: Information about the license.\n        ClientToken:\n          allOf:\n            - $ref: '#/components/schemas/ClientToken'\n            - description: 'Unique, case-sensitive identifier that you provide to ensure the idempotency of the request.'\n    CreateLicenseConfigurationResponse:\n      type: object\n      properties:\n        LicenseConfigurationArn:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: Amazon Resource Name (ARN) of the license configuration.\n    CreateLicenseConfigurationRequest:\n      type: object\n      required:\n        - Name\n        - LicenseCountingType\n      title: CreateLicenseConfigurationRequest\n      properties:\n        Name:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: Name of the license configuration.\n        Description:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: Description of the license configuration.\n        LicenseCountingType:\n          allOf:\n            - $ref: '#/components/schemas/LicenseCountingType'\n            - description: Dimension used to track the license inventory.\n        LicenseCount:\n          allOf:\n            - $ref: '#/components/schemas/BoxLong'\n            - description: Number of licenses managed by the license configuration.\n        LicenseCountHardLimit:\n          allOf:\n            - $ref: '#/components/schemas/BoxBoolean'\n            - description: Indicates whether hard or soft license enforcement is used. Exceeding a hard limit blocks the launch of new instances.\n        LicenseRules:\n          allOf:\n            - $ref: '#/components/schemas/StringList'\n            - description: '\u003cp\u003eLicense rules. The syntax is #name=value (for example, #allowedTenancy=EC2-DedicatedHost). The available rules vary by dimension, as follows.\u003c/p\u003e \u003cul\u003e \u003cli\u003e \u003cp\u003e \u003ccode\u003eCores\u003c/code\u003e dimension: \u003ccode\u003eallowedTenancy\u003c/code\u003e | \u003ccode\u003elicenseAffinityToHost\u003c/code\u003e | \u003ccode\u003emaximumCores\u003c/code\u003e | \u003ccode\u003eminimumCores\u003c/code\u003e \u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e \u003ccode\u003eInstances\u003c/code\u003e dimension: \u003ccode\u003eallowedTenancy\u003c/code\u003e | \u003ccode\u003emaximumCores\u003c/code\u003e | \u003ccode\u003eminimumCores\u003c/code\u003e | \u003ccode\u003emaximumSockets\u003c/code\u003e | \u003ccode\u003eminimumSockets\u003c/code\u003e | \u003ccode\u003emaximumVcpus\u003c/code\u003e | \u003ccode\u003eminimumVcpus\u003c/code\u003e \u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e \u003ccode\u003eSockets\u003c/code\u003e dimension: \u003ccode\u003eallowedTenancy\u003c/code\u003e | \u003ccode\u003elicenseAffinityToHost\u003c/code\u003e | \u003ccode\u003emaximumSockets\u003c/code\u003e | \u003ccode\u003eminimumSockets\u003c/code\u003e \u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e \u003ccode\u003evCPUs\u003c/code\u003e dimension: \u003ccode\u003eallowedTenancy\u003c/code\u003e | \u003ccode\u003ehonorVcpuOptimization\u003c/code\u003e | \u003ccode\u003emaximumVcpus\u003c/code\u003e | \u003ccode\u003eminimumVcpus\u003c/code\u003e \u003c/p\u003e \u003c/li\u003e \u003c/ul\u003e \u003cp\u003eThe unit for \u003ccode\u003elicenseAffinityToHost\u003c/code\u003e is days and the range is 1 to 180. The possible values for \u003ccode\u003eallowedTenancy\u003c/code\u003e are \u003ccode\u003eEC2-Default\u003c/code\u003e, \u003ccode\u003eEC2-DedicatedHost\u003c/code\u003e, and \u003ccode\u003eEC2-DedicatedInstance\u003c/code\u003e. The possible values for \u003ccode\u003ehonorVcpuOptimization\u003c/code\u003e are \u003ccode\u003eTrue\u003c/code\u003e and \u003ccode\u003eFalse\u003c/code\u003e.\u003c/p\u003e'\n        Tags:\n          allOf:\n            - $ref: '#/components/schemas/TagList'\n            - description: Tags to add to the license configuration.\n        DisassociateWhenNotFound:\n          allOf:\n            - $ref: '#/components/schemas/BoxBoolean'\n            - description: 'When true, disassociates a resource when software is uninstalled.'\n        ProductInformationList:\n          allOf:\n            - $ref: '#/components/schemas/ProductInformationList'\n            - description: Product information.\n    CreateLicenseManagerReportGeneratorResponse:\n      type: object\n      properties:\n        LicenseManagerReportGeneratorArn:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: The Amazon Resource Number (ARN) of the new report generator.\n    CreateLicenseManagerReportGeneratorRequest:\n      type: object\n      required:\n        - ReportGeneratorName\n        - Type\n        - ReportContext\n        - ReportFrequency\n        - ClientToken\n      title: CreateLicenseManagerReportGeneratorRequest\n      properties:\n        ReportGeneratorName:\n          allOf:\n            - $ref: '#/components/schemas/ReportGeneratorName'\n            - description: Name of the report generator.\n        Type:\n          allOf:\n            - $ref: '#/components/schemas/ReportTypeList'\n            - description: '\u003cp\u003eType of reports to generate. The following report types an be generated:\u003c/p\u003e \u003cul\u003e \u003cli\u003e \u003cp\u003eLicense configuration report - Reports on the number and details of consumed licenses for a license configuration.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003eResource report - Reports on the tracked licenses and resource consumption for a license configuration.\u003c/p\u003e \u003c/li\u003e \u003c/ul\u003e'\n        ReportContext:\n          allOf:\n            - $ref: '#/components/schemas/ReportContext'\n            - description: Defines the type of license configuration the report generator tracks.\n        ReportFrequency:\n          allOf:\n            - $ref: '#/components/schemas/ReportFrequency'\n            - description: 'Frequency by which reports are generated. Reports can be generated daily, monthly, or weekly.'\n        ClientToken:\n          allOf:\n            - $ref: '#/components/schemas/ClientRequestToken'\n            - description: 'Unique, case-sensitive identifier that you provide to ensure the idempotency of the request.'\n        Description:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: Description of the report generator.\n        Tags:\n          allOf:\n            - $ref: '#/components/schemas/TagList'\n            - description: Tags to add to the report generator.\n    CreateLicenseVersionResponse:\n      type: object\n      properties:\n        LicenseArn:\n          allOf:\n            - $ref: '#/components/schemas/Arn'\n            - description: License ARN.\n        Version:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: New version of the license.\n        Status:\n          allOf:\n            - $ref: '#/components/schemas/LicenseStatus'\n            - description: License status.\n    CreateLicenseVersionRequest:\n      type: object\n      required:\n        - LicenseArn\n        - LicenseName\n        - ProductName\n        - Issuer\n        - HomeRegion\n        - Validity\n        - Entitlements\n        - ConsumptionConfiguration\n        - Status\n        - ClientToken\n      title: CreateLicenseVersionRequest\n      properties:\n        LicenseArn:\n          allOf:\n            - $ref: '#/components/schemas/Arn'\n            - description: Amazon Resource Name (ARN) of the license.\n        LicenseName:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: License name.\n        ProductName:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: Product name.\n        Issuer:\n          allOf:\n            - $ref: '#/components/schemas/Issuer'\n            - description: License issuer.\n        HomeRegion:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: Home Region of the license.\n        Validity:\n          allOf:\n            - $ref: '#/components/schemas/DatetimeRange'\n            - description: 'Date and time range during which the license is valid, in ISO8601-UTC format.'\n        LicenseMetadata:\n          allOf:\n            - $ref: '#/components/schemas/MetadataList'\n            - description: Information about the license.\n        Entitlements:\n          allOf:\n            - $ref: '#/components/schemas/EntitlementList'\n            - description: License entitlements.\n        ConsumptionConfiguration:\n          allOf:\n            - $ref: '#/components/schemas/ConsumptionConfiguration'\n            - description: Configuration for consumption of the license. Choose a provisional configuration for workloads running with continuous connectivity. Choose a borrow configuration for workloads with offline usage.\n        Status:\n          allOf:\n            - $ref: '#/components/schemas/LicenseStatus'\n            - description: License status.\n        ClientToken:\n          allOf:\n            - $ref: '#/components/schemas/ClientToken'\n            - description: 'Unique, case-sensitive identifier that you provide to ensure the idempotency of the request.'\n        SourceVersion:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: Current version of the license.\n    CreateTokenResponse:\n      type: object\n      properties:\n        TokenId:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: Token ID.\n        TokenType:\n          allOf:\n            - $ref: '#/components/schemas/TokenType'\n            - description: Token type.\n        Token:\n          allOf:\n            - $ref: '#/components/schemas/TokenString'\n            - description: 'Refresh token, encoded as a JWT token.'\n    CreateTokenRequest:\n      type: object\n      required:\n        - LicenseArn\n        - ClientToken\n      title: CreateTokenRequest\n      properties:\n        LicenseArn:\n          allOf:\n            - $ref: '#/components/schemas/Arn'\n            - description: Amazon Resource Name (ARN) of the license. The ARN is mapped to the aud claim of the JWT token.\n        RoleArns:\n          allOf:\n            - $ref: '#/components/schemas/ArnList'\n            - description: Amazon Resource Name (ARN) of the IAM roles to embed in the token. License Manager does not check whether the roles are in use.\n        ExpirationInDays:\n          allOf:\n            - $ref: '#/components/schemas/Integer'\n            - description: 'Token expiration, in days, counted from token creation. The default is 365 days.'\n        TokenProperties:\n          allOf:\n            - $ref: '#/components/schemas/MaxSize3StringList'\n            - description: Data specified by the caller to be included in the JWT token. The data is mapped to the amr claim of the JWT token.\n        ClientToken:\n          allOf:\n            - $ref: '#/components/schemas/ClientToken'\n            - description: 'Idempotency token, valid for 10 minutes.'\n    DeleteGrantResponse:\n      type: object\n      properties:\n        GrantArn:\n          allOf:\n            - $ref: '#/components/schemas/Arn'\n            - description: Grant ARN.\n        Status:\n          allOf:\n            - $ref: '#/components/schemas/GrantStatus'\n            - description: Grant status.\n        Version:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: Grant version.\n    DeleteGrantRequest:\n      type: object\n      required:\n        - GrantArn\n        - Version\n      title: DeleteGrantRequest\n      properties:\n        GrantArn:\n          allOf:\n            - $ref: '#/components/schemas/Arn'\n            - description: Amazon Resource Name (ARN) of the grant.\n        StatusReason:\n          $ref: '#/components/schemas/StatusReasonMessage'\n        Version:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: Current version of the grant.\n    DeleteLicenseResponse:\n      type: object\n      properties:\n        Status:\n          allOf:\n            - $ref: '#/components/schemas/LicenseDeletionStatus'\n            - description: License status.\n        DeletionDate:\n          allOf:\n            - $ref: '#/components/schemas/ISO8601DateTime'\n            - description: Date on which the license is deleted.\n    DeleteLicenseRequest:\n      type: object\n      required:\n        - LicenseArn\n        - SourceVersion\n      title: DeleteLicenseRequest\n      properties:\n        LicenseArn:\n          allOf:\n            - $ref: '#/components/schemas/Arn'\n            - description: Amazon Resource Name (ARN) of the license.\n        SourceVersion:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: Current version of the license.\n    DeleteLicenseConfigurationResponse:\n      type: object\n      properties: {}\n    DeleteLicenseConfigurationRequest:\n      type: object\n      required:\n        - LicenseConfigurationArn\n      title: DeleteLicenseConfigurationRequest\n      properties:\n        LicenseConfigurationArn:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: ID of the license configuration.\n    DeleteLicenseManagerReportGeneratorResponse:\n      type: object\n      properties: {}\n    DeleteLicenseManagerReportGeneratorRequest:\n      type: object\n      required:\n        - LicenseManagerReportGeneratorArn\n      title: DeleteLicenseManagerReportGeneratorRequest\n      properties:\n        LicenseManagerReportGeneratorArn:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: Amazon Resource Number (ARN) of the report generator that will be deleted.\n    DeleteTokenResponse:\n      type: object\n      properties: {}\n    DeleteTokenRequest:\n      type: object\n      required:\n        - TokenId\n      title: DeleteTokenRequest\n      properties:\n        TokenId:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: Token ID.\n    ExtendLicenseConsumptionResponse:\n      type: object\n      properties:\n        LicenseConsumptionToken:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: License consumption token.\n        Expiration:\n          allOf:\n            - $ref: '#/components/schemas/ISO8601DateTime'\n            - description: Date and time at which the license consumption expires.\n    ExtendLicenseConsumptionRequest:\n      type: object\n      required:\n        - LicenseConsumptionToken\n      title: ExtendLicenseConsumptionRequest\n      properties:\n        LicenseConsumptionToken:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: License consumption token.\n        DryRun:\n          allOf:\n            - $ref: '#/components/schemas/Boolean'\n            - description: 'Checks whether you have the required permissions for the action, without actually making the request. Provides an error response if you do not have the required permissions.'\n    GetAccessTokenResponse:\n      type: object\n      properties:\n        AccessToken:\n          allOf:\n            - $ref: '#/components/schemas/TokenString'\n            - description: Temporary access token.\n    GetAccessTokenRequest:\n      type: object\n      required:\n        - Token\n      title: GetAccessTokenRequest\n      properties:\n        Token:\n          allOf:\n            - $ref: '#/components/schemas/TokenString'\n            - description: 'Refresh token, encoded as a JWT token.'\n        TokenProperties:\n          allOf:\n            - $ref: '#/components/schemas/MaxSize3StringList'\n            - description: Token properties to validate against those present in the JWT token.\n    GetGrantResponse:\n      type: object\n      properties:\n        Grant:\n          allOf:\n            - $ref: '#/components/schemas/Grant'\n            - description: Grant details.\n    GetGrantRequest:\n      type: object\n      required:\n        - GrantArn\n      title: GetGrantRequest\n      properties:\n        GrantArn:\n          allOf:\n            - $ref: '#/components/schemas/Arn'\n            - description: Amazon Resource Name (ARN) of the grant.\n        Version:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: Grant version.\n    GetLicenseResponse:\n      type: object\n      properties:\n        License:\n          allOf:\n            - $ref: '#/components/schemas/License'\n            - description: License details.\n    GetLicenseRequest:\n      type: object\n      required:\n        - LicenseArn\n      title: GetLicenseRequest\n      properties:\n        LicenseArn:\n          allOf:\n            - $ref: '#/components/schemas/Arn'\n            - description: Amazon Resource Name (ARN) of the license.\n        Version:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: License version.\n    GetLicenseConfigurationResponse:\n      type: object\n      properties:\n        LicenseConfigurationId:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: Unique ID for the license configuration.\n        LicenseConfigurationArn:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: Amazon Resource Name (ARN) of the license configuration.\n        Name:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: Name of the license configuration.\n        Description:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: Description of the license configuration.\n        LicenseCountingType:\n          allOf:\n            - $ref: '#/components/schemas/LicenseCountingType'\n            - description: Dimension on which the licenses are counted.\n        LicenseRules:\n          allOf:\n            - $ref: '#/components/schemas/StringList'\n            - description: License rules.\n        LicenseCount:\n          allOf:\n            - $ref: '#/components/schemas/BoxLong'\n            - description: Number of available licenses.\n        LicenseCountHardLimit:\n          allOf:\n            - $ref: '#/components/schemas/BoxBoolean'\n            - description: Sets the number of available licenses as a hard limit.\n        ConsumedLicenses:\n          allOf:\n            - $ref: '#/components/schemas/BoxLong'\n            - description: Number of licenses assigned to resources.\n        Status:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: License configuration status.\n        OwnerAccountId:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: Account ID of the owner of the license configuration.\n        ConsumedLicenseSummaryList:\n          allOf:\n            - $ref: '#/components/schemas/ConsumedLicenseSummaryList'\n            - description: Summaries of the licenses consumed by resources.\n        ManagedResourceSummaryList:\n          allOf:\n            - $ref: '#/components/schemas/ManagedResourceSummaryList'\n            - description: Summaries of the managed resources.\n        Tags:\n          allOf:\n            - $ref: '#/components/schemas/TagList'\n            - description: Tags for the license configuration.\n        ProductInformationList:\n          allOf:\n            - $ref: '#/components/schemas/ProductInformationList'\n            - description: Product information.\n        AutomatedDiscoveryInformation:\n          allOf:\n            - $ref: '#/components/schemas/AutomatedDiscoveryInformation'\n            - description: Automated discovery information.\n        DisassociateWhenNotFound:\n          allOf:\n            - $ref: '#/components/schemas/BoxBoolean'\n            - description: 'When true, disassociates a resource when software is uninstalled.'\n    GetLicenseConfigurationRequest:\n      type: object\n      required:\n        - LicenseConfigurationArn\n      title: GetLicenseConfigurationRequest\n      properties:\n        LicenseConfigurationArn:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: Amazon Resource Name (ARN) of the license configuration.\n    GetLicenseManagerReportGeneratorResponse:\n      type: object\n      properties:\n        ReportGenerator:\n          allOf:\n            - $ref: '#/components/schemas/ReportGenerator'\n            - description: A report generator that creates periodic reports on your license configurations.\n    GetLicenseManagerReportGeneratorRequest:\n      type: object\n      required:\n        - LicenseManagerReportGeneratorArn\n      title: GetLicenseManagerReportGeneratorRequest\n      properties:\n        LicenseManagerReportGeneratorArn:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: mazon Resource Number (ARN) of the report generator to retrieve information on.\n    GetLicenseUsageResponse:\n      type: object\n      properties:\n        LicenseUsage:\n          allOf:\n            - $ref: '#/components/schemas/LicenseUsage'\n            - description: License usage details.\n    GetLicenseUsageRequest:\n      type: object\n      required:\n        - LicenseArn\n      title: GetLicenseUsageRequest\n      properties:\n        LicenseArn:\n          allOf:\n            - $ref: '#/components/schemas/Arn'\n            - description: Amazon Resource Name (ARN) of the license.\n    GetServiceSettingsResponse:\n      type: object\n      properties:\n        S3BucketArn:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: 'Regional S3 bucket path for storing reports, license trail event data, discovery data, and so on.'\n        SnsTopicArn:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: SNS topic configured to receive notifications from License Manager.\n        OrganizationConfiguration:\n          allOf:\n            - $ref: '#/components/schemas/OrganizationConfiguration'\n            - description: Indicates whether AWS Organizations is integrated with License Manager for cross-account discovery.\n        EnableCrossAccountsDiscovery:\n          allOf:\n            - $ref: '#/components/schemas/BoxBoolean'\n            - description: Indicates whether cross-account discovery is enabled.\n        LicenseManagerResourceShareArn:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: Amazon Resource Name (ARN) of the AWS resource share. The License Manager management account provides member accounts with access to this share.\n    GetServiceSettingsRequest:\n      type: object\n      title: GetServiceSettingsRequest\n      properties: {}\n    ListAssociationsForLicenseConfigurationResponse:\n      type: object\n      properties:\n        LicenseConfigurationAssociations:\n          allOf:\n            - $ref: '#/components/schemas/LicenseConfigurationAssociations'\n            - description: Information about the associations for the license configuration.\n        NextToken:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: Token for the next set of results.\n    ListAssociationsForLicenseConfigurationRequest:\n      type: object\n      required:\n        - LicenseConfigurationArn\n      title: ListAssociationsForLicenseConfigurationRequest\n      properties:\n        LicenseConfigurationArn:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: Amazon Resource Name (ARN) of a license configuration.\n        MaxResults:\n          allOf:\n            - $ref: '#/components/schemas/BoxInteger'\n            - description: Maximum number of results to return in a single call.\n        NextToken:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: Token for the next set of results.\n    FilterLimitExceededException: {}\n    ListDistributedGrantsResponse:\n      type: object\n      properties:\n        Grants:\n          allOf:\n            - $ref: '#/components/schemas/GrantList'\n            - description: Distributed grant details.\n        NextToken:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: Token for the next set of results.\n    ListDistributedGrantsRequest:\n      type: object\n      title: ListDistributedGrantsRequest\n      properties:\n        GrantArns:\n          allOf:\n            - $ref: '#/components/schemas/ArnList'\n            - description: Amazon Resource Names (ARNs) of the grants.\n        Filters:\n          allOf:\n            - $ref: '#/components/schemas/FilterList'\n            - description: '\u003cp\u003eFilters to scope the results. The following filters are supported:\u003c/p\u003e \u003cul\u003e \u003cli\u003e \u003cp\u003e \u003ccode\u003eLicenseArn\u003c/code\u003e \u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e \u003ccode\u003eGrantStatus\u003c/code\u003e \u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e \u003ccode\u003eGranteePrincipalARN\u003c/code\u003e \u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e \u003ccode\u003eProductSKU\u003c/code\u003e \u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e \u003ccode\u003eLicenseIssuerName\u003c/code\u003e \u003c/p\u003e \u003c/li\u003e \u003c/ul\u003e'\n        NextToken:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: Token for the next set of results.\n        MaxResults:\n          allOf:\n            - $ref: '#/components/schemas/MaxSize100'\n            - description: Maximum number of results to return in a single call.\n    ListFailuresForLicenseConfigurationOperationsResponse:\n      type: object\n      properties:\n        LicenseOperationFailureList:\n          allOf:\n            - $ref: '#/components/schemas/LicenseOperationFailureList'\n            - description: License configuration operations that failed.\n        NextToken:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: Token for the next set of results.\n    ListFailuresForLicenseConfigurationOperationsRequest:\n      type: object\n      required:\n        - LicenseConfigurationArn\n      title: ListFailuresForLicenseConfigurationOperationsRequest\n      properties:\n        LicenseConfigurationArn:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: Amazon Resource Name of the license configuration.\n        MaxResults:\n          allOf:\n            - $ref: '#/components/schemas/BoxInteger'\n            - description: Maximum number of results to return in a single call.\n        NextToken:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: Token for the next set of results.\n    ListLicenseConfigurationsResponse:\n      type: object\n      properties:\n        LicenseConfigurations:\n          allOf:\n            - $ref: '#/components/schemas/LicenseConfigurations'\n            - description: Information about the license configurations.\n        NextToken:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: Token for the next set of results.\n    ListLicenseConfigurationsRequest:\n      type: object\n      title: ListLicenseConfigurationsRequest\n      properties:\n        LicenseConfigurationArns:\n          allOf:\n            - $ref: '#/components/schemas/StringList'\n            - description: Amazon Resource Names (ARN) of the license configurations.\n        MaxResults:\n          allOf:\n            - $ref: '#/components/schemas/BoxInteger'\n            - description: Maximum number of results to return in a single call.\n        NextToken:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: Token for the next set of results.\n        Filters:\n          allOf:\n            - $ref: '#/components/schemas/Filters'\n            - description: '\u003cp\u003eFilters to scope the results. The following filters and logical operators are supported:\u003c/p\u003e \u003cul\u003e \u003cli\u003e \u003cp\u003e \u003ccode\u003elicenseCountingType\u003c/code\u003e - The dimension on which licenses are counted. Possible values are \u003ccode\u003evCPU\u003c/code\u003e | \u003ccode\u003eInstance\u003c/code\u003e | \u003ccode\u003eCore\u003c/code\u003e | \u003ccode\u003eSocket\u003c/code\u003e. Logical operators are \u003ccode\u003eEQUALS\u003c/code\u003e | \u003ccode\u003eNOT_EQUALS\u003c/code\u003e.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e \u003ccode\u003eenforceLicenseCount\u003c/code\u003e - A Boolean value that indicates whether hard license enforcement is used. Logical operators are \u003ccode\u003eEQUALS\u003c/code\u003e | \u003ccode\u003eNOT_EQUALS\u003c/code\u003e.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e \u003ccode\u003eusagelimitExceeded\u003c/code\u003e - A Boolean value that indicates whether the available licenses have been exceeded. Logical operators are \u003ccode\u003eEQUALS\u003c/code\u003e | \u003ccode\u003eNOT_EQUALS\u003c/code\u003e.\u003c/p\u003e \u003c/li\u003e \u003c/ul\u003e'\n    ListLicenseManagerReportGeneratorsResponse:\n      type: object\n      properties:\n        ReportGenerators:\n          allOf:\n            - $ref: '#/components/schemas/ReportGeneratorList'\n            - description: A report generator that creates periodic reports on your license configurations.\n        NextToken:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: Token for the next set of results.\n    ListLicenseManagerReportGeneratorsRequest:\n      type: object\n      title: ListLicenseManagerReportGeneratorsRequest\n      properties:\n        Filters:\n          allOf:\n            - $ref: '#/components/schemas/FilterList'\n            - description: '\u003cp\u003eFilters to scope the results. The following filters are supported: \u003c/p\u003e \u003cul\u003e \u003cli\u003e \u003cp\u003e \u003ccode\u003eLicenseConfigurationArn\u003c/code\u003e \u003c/p\u003e \u003c/li\u003e \u003c/ul\u003e'\n        NextToken:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: Token for the next set of results.\n        MaxResults:\n          allOf:\n            - $ref: '#/components/schemas/MaxSize100'\n            - description: Maximum number of results to return in a single call.\n    ListLicenseSpecificationsForResourceResponse:\n      type: object\n      properties:\n        LicenseSpecifications:\n          allOf:\n            - $ref: '#/components/schemas/LicenseSpecifications'\n            - description: License configurations associated with a resource.\n        NextToken:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: Token for the next set of results.\n    ListLicenseSpecificationsForResourceRequest:\n      type: object\n      required:\n        - ResourceArn\n      title: ListLicenseSpecificationsForResourceRequest\n      properties:\n        ResourceArn:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: Amazon Resource Name (ARN) of a resource that has an associated license configuration.\n        MaxResults:\n          allOf:\n            - $ref: '#/components/schemas/BoxInteger'\n            - description: Maximum number of results to return in a single call.\n        NextToken:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: Token for the next set of results.\n    ListLicenseVersionsResponse:\n      type: object\n      properties:\n        Licenses:\n          allOf:\n            - $ref: '#/components/schemas/LicenseList'\n            - description: License details.\n        NextToken:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: Token for the next set of results.\n    ListLicenseVersionsRequest:\n      type: object\n      required:\n        - LicenseArn\n      title: ListLicenseVersionsRequest\n      properties:\n        LicenseArn:\n          allOf:\n            - $ref: '#/components/schemas/Arn'\n            - description: Amazon Resource Name (ARN) of the license.\n        NextToken:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: Token for the next set of results.\n        MaxResults:\n          allOf:\n            - $ref: '#/components/schemas/MaxSize100'\n            - description: Maximum number of results to return in a single call.\n    ListLicensesResponse:\n      type: object\n      properties:\n        Licenses:\n          allOf:\n            - $ref: '#/components/schemas/LicenseList'\n            - description: License details.\n        NextToken:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: Token for the next set of results.\n    ListLicensesRequest:\n      type: object\n      title: ListLicensesRequest\n      properties:\n        LicenseArns:\n          allOf:\n            - $ref: '#/components/schemas/ArnList'\n            - description: Amazon Resource Names (ARNs) of the licenses.\n        Filters:\n          allOf:\n            - $ref: '#/components/schemas/FilterList'\n            - description: '\u003cp\u003eFilters to scope the results. The following filters are supported:\u003c/p\u003e \u003cul\u003e \u003cli\u003e \u003cp\u003e \u003ccode\u003eBeneficiary\u003c/code\u003e \u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e \u003ccode\u003eProductSKU\u003c/code\u003e \u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e \u003ccode\u003eFingerprint\u003c/code\u003e \u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e \u003ccode\u003eStatus\u003c/code\u003e \u003c/p\u003e \u003c/li\u003e \u003c/ul\u003e'\n        NextToken:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: Token for the next set of results.\n        MaxResults:\n          allOf:\n            - $ref: '#/components/schemas/MaxSize100'\n            - description: Maximum number of results to return in a single call.\n    ListReceivedGrantsResponse:\n      type: object\n      properties:\n        Grants:\n          allOf:\n            - $ref: '#/components/schemas/GrantList'\n            - description: Received grant details.\n        NextToken:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: Token for the next set of results.\n    ListReceivedGrantsRequest:\n      type: object\n      title: ListReceivedGrantsRequest\n      properties:\n        GrantArns:\n          allOf:\n            - $ref: '#/components/schemas/ArnList'\n            - description: Amazon Resource Names (ARNs) of the grants.\n        Filters:\n          allOf:\n            - $ref: '#/components/schemas/FilterList'\n            - description: '\u003cp\u003eFilters to scope the results. The following filters are supported:\u003c/p\u003e \u003cul\u003e \u003cli\u003e \u003cp\u003e \u003ccode\u003eProductSKU\u003c/code\u003e \u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e \u003ccode\u003eLicenseIssuerName\u003c/code\u003e \u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e \u003ccode\u003eLicenseArn\u003c/code\u003e \u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e \u003ccode\u003eGrantStatus\u003c/code\u003e \u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e \u003ccode\u003eGranterAccountId\u003c/code\u003e \u003c/p\u003e \u003c/li\u003e \u003c/ul\u003e'\n        NextToken:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: Token for the next set of results.\n        MaxResults:\n          allOf:\n            - $ref: '#/components/schemas/MaxSize100'\n            - description: Maximum number of results to return in a single call.\n    ListReceivedLicensesResponse:\n      type: object\n      properties:\n        Licenses:\n          allOf:\n            - $ref: '#/components/schemas/GrantedLicenseList'\n            - description: Received license details.\n        NextToken:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: Token for the next set of results.\n    ListReceivedLicensesRequest:\n      type: object\n      title: ListReceivedLicensesRequest\n      properties:\n        LicenseArns:\n          allOf:\n            - $ref: '#/components/schemas/ArnList'\n            - description: Amazon Resource Names (ARNs) of the licenses.\n        Filters:\n          allOf:\n            - $ref: '#/components/schemas/FilterList'\n            - description: '\u003cp\u003eFilters to scope the results. The following filters are supported:\u003c/p\u003e \u003cul\u003e \u003cli\u003e \u003cp\u003e \u003ccode\u003eProductSKU\u003c/code\u003e \u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e \u003ccode\u003eStatus\u003c/code\u003e \u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e \u003ccode\u003eFingerprint\u003c/code\u003e \u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e \u003ccode\u003eIssuerName\u003c/code\u003e \u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e \u003ccode\u003eBeneficiary\u003c/code\u003e \u003c/p\u003e \u003c/li\u003e \u003c/ul\u003e'\n        NextToken:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: Token for the next set of results.\n        MaxResults:\n          allOf:\n            - $ref: '#/components/schemas/MaxSize100'\n            - description: Maximum number of results to return in a single call.\n    ListResourceInventoryResponse:\n      type: object\n      properties:\n        ResourceInventoryList:\n          allOf:\n            - $ref: '#/components/schemas/ResourceInventoryList'\n            - description: Information about the resources.\n        NextToken:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: Token for the next set of results.\n    ListResourceInventoryRequest:\n      type: object\n      title: ListResourceInventoryRequest\n      properties:\n        MaxResults:\n          allOf:\n            - $ref: '#/components/schemas/BoxInteger'\n            - description: Maximum number of results to return in a single call.\n        NextToken:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: Token for the next set of results.\n        Filters:\n          allOf:\n            - $ref: '#/components/schemas/InventoryFilterList'\n            - description: '\u003cp\u003eFilters to scope the results. The following filters and logical operators are supported:\u003c/p\u003e \u003cul\u003e \u003cli\u003e \u003cp\u003e \u003ccode\u003eaccount_id\u003c/code\u003e - The ID of the AWS account that owns the resource. Logical operators are \u003ccode\u003eEQUALS\u003c/code\u003e | \u003ccode\u003eNOT_EQUALS\u003c/code\u003e.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e \u003ccode\u003eapplication_name\u003c/code\u003e - The name of the application. Logical operators are \u003ccode\u003eEQUALS\u003c/code\u003e | \u003ccode\u003eBEGINS_WITH\u003c/code\u003e.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e \u003ccode\u003elicense_included\u003c/code\u003e - The type of license included. Logical operators are \u003ccode\u003eEQUALS\u003c/code\u003e | \u003ccode\u003eNOT_EQUALS\u003c/code\u003e. Possible values are \u003ccode\u003esql-server-enterprise\u003c/code\u003e | \u003ccode\u003esql-server-standard\u003c/code\u003e | \u003ccode\u003esql-server-web\u003c/code\u003e | \u003ccode\u003ewindows-server-datacenter\u003c/code\u003e.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e \u003ccode\u003eplatform\u003c/code\u003e - The platform of the resource. Logical operators are \u003ccode\u003eEQUALS\u003c/code\u003e | \u003ccode\u003eBEGINS_WITH\u003c/code\u003e.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e \u003ccode\u003eresource_id\u003c/code\u003e - The ID of the resource. Logical operators are \u003ccode\u003eEQUALS\u003c/code\u003e | \u003ccode\u003eNOT_EQUALS\u003c/code\u003e.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e \u003ccode\u003etag:\u0026lt;key\u0026gt;\u003c/code\u003e - The key/value combination of a tag assigned to the resource. Logical operators are \u003ccode\u003eEQUALS\u003c/code\u003e (single account) or \u003ccode\u003eEQUALS\u003c/code\u003e | \u003ccode\u003eNOT_EQUALS\u003c/code\u003e (cross account).\u003c/p\u003e \u003c/li\u003e \u003c/ul\u003e'\n    FailedDependencyException: {}\n    ListTagsForResourceResponse:\n      type: object\n      properties:\n        Tags:\n          allOf:\n            - $ref: '#/components/schemas/TagList'\n            - description: Information about the tags.\n    ListTagsForResourceRequest:\n      type: object\n      required:\n        - ResourceArn\n      title: ListTagsForResourceRequest\n      properties:\n        ResourceArn:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: Amazon Resource Name (ARN) of the license configuration.\n    ListTokensResponse:\n      type: object\n      properties:\n        Tokens:\n          allOf:\n            - $ref: '#/components/schemas/TokenList'\n            - description: Received token details.\n        NextToken:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: Token for the next set of results.\n    ListTokensRequest:\n      type: object\n      title: ListTokensRequest\n      properties:\n        TokenIds:\n          allOf:\n            - $ref: '#/components/schemas/StringList'\n            - description: Token IDs.\n        Filters:\n          allOf:\n            - $ref: '#/components/schemas/FilterList'\n            - description: '\u003cp\u003eFilters to scope the results. The following filter is supported:\u003c/p\u003e \u003cul\u003e \u003cli\u003e \u003cp\u003e \u003ccode\u003eLicenseArns\u003c/code\u003e \u003c/p\u003e \u003c/li\u003e \u003c/ul\u003e'\n        NextToken:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: Token for the next set of results.\n        MaxResults:\n          allOf:\n            - $ref: '#/components/schemas/MaxSize100'\n            - description: Maximum number of results to return in a single call.\n    ListUsageForLicenseConfigurationResponse:\n      type: object\n      properties:\n        LicenseConfigurationUsageList:\n          allOf:\n            - $ref: '#/components/schemas/LicenseConfigurationUsageList'\n            - description: Information about the license configurations.\n        NextToken:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: Token for the next set of results.\n    ListUsageForLicenseConfigurationRequest:\n      type: object\n      required:\n        - LicenseConfigurationArn\n      title: ListUsageForLicenseConfigurationRequest\n      properties:\n        LicenseConfigurationArn:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: Amazon Resource Name (ARN) of the license configuration.\n        MaxResults:\n          allOf:\n            - $ref: '#/components/schemas/BoxInteger'\n            - description: Maximum number of results to return in a single call.\n        NextToken:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: Token for the next set of results.\n        Filters:\n          allOf:\n            - $ref: '#/components/schemas/Filters'\n            - description: '\u003cp\u003eFilters to scope the results. The following filters and logical operators are supported:\u003c/p\u003e \u003cul\u003e \u003cli\u003e \u003cp\u003e \u003ccode\u003eresourceArn\u003c/code\u003e - The ARN of the license configuration resource. Logical operators are \u003ccode\u003eEQUALS\u003c/code\u003e | \u003ccode\u003eNOT_EQUALS\u003c/code\u003e.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e \u003ccode\u003eresourceType\u003c/code\u003e - The resource type (\u003ccode\u003eEC2_INSTANCE\u003c/code\u003e | \u003ccode\u003eEC2_HOST\u003c/code\u003e | \u003ccode\u003eEC2_AMI\u003c/code\u003e | \u003ccode\u003eSYSTEMS_MANAGER_MANAGED_INSTANCE\u003c/code\u003e). Logical operators are \u003ccode\u003eEQUALS\u003c/code\u003e | \u003ccode\u003eNOT_EQUALS\u003c/code\u003e.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e \u003ccode\u003eresourceAccount\u003c/code\u003e - The ID of the account that owns the resource. Logical operators are \u003ccode\u003eEQUALS\u003c/code\u003e | \u003ccode\u003eNOT_EQUALS\u003c/code\u003e.\u003c/p\u003e \u003c/li\u003e \u003c/ul\u003e'\n    RejectGrantResponse:\n      type: object\n      properties:\n        GrantArn:\n          allOf:\n            - $ref: '#/components/schemas/Arn'\n            - description: Grant ARN.\n        Status:\n          allOf:\n            - $ref: '#/components/schemas/GrantStatus'\n            - description: Grant status.\n        Version:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: Grant version.\n    RejectGrantRequest:\n      type: object\n      required:\n        - GrantArn\n      title: RejectGrantRequest\n      properties:\n        GrantArn:\n          allOf:\n            - $ref: '#/components/schemas/Arn'\n            - description: Amazon Resource Name (ARN) of the grant.\n    TagResourceResponse:\n      type: object\n      properties: {}\n    TagResourceRequest:\n      type: object\n      required:\n        - ResourceArn\n        - Tags\n      title: TagResourceRequest\n      properties:\n        ResourceArn:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: Amazon Resource Name (ARN) of the license configuration.\n        Tags:\n          allOf:\n            - $ref: '#/components/schemas/TagList'\n            - description: One or more tags.\n    UntagResourceResponse:\n      type: object\n      properties: {}\n    UntagResourceRequest:\n      type: object\n      required:\n        - ResourceArn\n        - TagKeys\n      title: UntagResourceRequest\n      properties:\n        ResourceArn:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: Amazon Resource Name (ARN) of the license configuration.\n        TagKeys:\n          allOf:\n            - $ref: '#/components/schemas/TagKeyList'\n            - description: Keys identifying the tags to remove.\n    UpdateLicenseConfigurationResponse:\n      type: object\n      properties: {}\n    UpdateLicenseConfigurationRequest:\n      type: object\n      required:\n        - LicenseConfigurationArn\n      title: UpdateLicenseConfigurationRequest\n      properties:\n        LicenseConfigurationArn:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: Amazon Resource Name (ARN) of the license configuration.\n        LicenseConfigurationStatus:\n          allOf:\n            - $ref: '#/components/schemas/LicenseConfigurationStatus'\n            - description: New status of the license configuration.\n        LicenseRules:\n          allOf:\n            - $ref: '#/components/schemas/StringList'\n            - description: New license rule. The only rule that you can add after you create a license configuration is licenseAffinityToHost.\n        LicenseCount:\n          allOf:\n            - $ref: '#/components/schemas/BoxLong'\n            - description: New number of licenses managed by the license configuration.\n        LicenseCountHardLimit:\n          allOf:\n            - $ref: '#/components/schemas/BoxBoolean'\n            - description: New hard limit of the number of available licenses.\n        Name:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: New name of the license configuration.\n        Description:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: New description of the license configuration.\n        ProductInformationList:\n          allOf:\n            - $ref: '#/components/schemas/ProductInformationList'\n            - description: New product information.\n        DisassociateWhenNotFound:\n          allOf:\n            - $ref: '#/components/schemas/BoxBoolean'\n            - description: 'When true, disassociates a resource when software is uninstalled.'\n    UpdateLicenseManagerReportGeneratorResponse:\n      type: object\n      properties: {}\n    UpdateLicenseManagerReportGeneratorRequest:\n      type: object\n      required:\n        - LicenseManagerReportGeneratorArn\n        - ReportGeneratorName\n        - Type\n        - ReportContext\n        - ReportFrequency\n        - ClientToken\n      title: UpdateLicenseManagerReportGeneratorRequest\n      properties:\n        LicenseManagerReportGeneratorArn:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: Amazon Resource Number (ARN) of the report generator to update.\n        ReportGeneratorName:\n          allOf:\n            - $ref: '#/components/schemas/ReportGeneratorName'\n            - description: Name of the report generator.\n        Type:\n          allOf:\n            - $ref: '#/components/schemas/ReportTypeList'\n            - description: '\u003cp\u003eType of reports to generate. The following report types an be generated:\u003c/p\u003e \u003cul\u003e \u003cli\u003e \u003cp\u003eLicense configuration report - Reports on the number and details of consumed licenses for a license configuration.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003eResource report - Reports on the tracked licenses and resource consumption for a license configuration.\u003c/p\u003e \u003c/li\u003e \u003c/ul\u003e'\n        ReportContext:\n          allOf:\n            - $ref: '#/components/schemas/ReportContext'\n            - description: '?'\n        ReportFrequency:\n          allOf:\n            - $ref: '#/components/schemas/ReportFrequency'\n            - description: '\u003cp\u003eFrequency by which reports are generated. The following options are avaiable:\u003c/p\u003e \u003cp\u003e??? What are the APi value options?\u003c/p\u003e'\n        ClientToken:\n          allOf:\n            - $ref: '#/components/schemas/ClientRequestToken'\n            - description: 'Unique, case-sensitive identifier that you provide to ensure the idempotency of the request.'\n        Description:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: Description of the report generator.\n    UpdateLicenseSpecificationsForResourceResponse:\n      type: object\n      properties: {}\n    UpdateLicenseSpecificationsForResourceRequest:\n      type: object\n      required:\n        - ResourceArn\n      title: UpdateLicenseSpecificationsForResourceRequest\n      properties:\n        ResourceArn:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: Amazon Resource Name (ARN) of the AWS resource.\n        AddLicenseSpecifications:\n          allOf:\n            - $ref: '#/components/schemas/LicenseSpecifications'\n            - description: ARNs of the license configurations to add.\n        RemoveLicenseSpecifications:\n          allOf:\n            - $ref: '#/components/schemas/LicenseSpecifications'\n            - description: ARNs of the license configurations to remove.\n    InvalidResourceStateException: {}\n    LicenseUsageException: {}\n    UpdateServiceSettingsResponse:\n      type: object\n      properties: {}\n    UpdateServiceSettingsRequest:\n      type: object\n      title: UpdateServiceSettingsRequest\n      properties:\n        S3BucketArn:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: Amazon Resource Name (ARN) of the Amazon S3 bucket where the License Manager information is stored.\n        SnsTopicArn:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: Amazon Resource Name (ARN) of the Amazon SNS topic used for License Manager alerts.\n        OrganizationConfiguration:\n          allOf:\n            - $ref: '#/components/schemas/OrganizationConfiguration'\n            - description: Enables integration with AWS Organizations for cross-account discovery.\n        EnableCrossAccountsDiscovery:\n          allOf:\n            - $ref: '#/components/schemas/BoxBoolean'\n            - description: Activates cross-account discovery.\n    Arn:\n      type: string\n      pattern: '^arn:aws(-(cn|us-gov|iso-b|iso-c|iso-d))?:[A-Za-z0-9][A-Za-z0-9_/.-]{0,62}:[A-Za-z0-9_/.-]{0,63}:[A-Za-z0-9_/.-]{0,63}:[A-Za-z0-9][A-Za-z0-9:_/+=,@.-]{0,1023}$'\n      maxLength: 2048\n    GrantStatus:\n      type: string\n      enum:\n        - PENDING_WORKFLOW\n        - PENDING_ACCEPT\n        - REJECTED\n        - ACTIVE\n        - FAILED_WORKFLOW\n        - DELETED\n        - PENDING_DELETE\n        - DISABLED\n        - WORKFLOW_COMPLETED\n    String:\n      type: string\n    AllowedOperation:\n      type: string\n      enum:\n        - CreateGrant\n        - CheckoutLicense\n        - CheckoutBorrowLicense\n        - CheckInLicense\n        - ExtendConsumptionLicense\n        - ListPurchasedLicenses\n        - CreateToken\n    AllowedOperationList:\n      type: array\n      items:\n        $ref: '#/components/schemas/AllowedOperation'\n      minItems: 1\n      maxItems: 7\n    ArnList:\n      type: array\n      items:\n        $ref: '#/components/schemas/Arn'\n    DateTime:\n      type: string\n      format: date-time\n    AutomatedDiscoveryInformation:\n      type: object\n      properties:\n        LastRunTime:\n          allOf:\n            - $ref: '#/components/schemas/DateTime'\n            - description: Time that automated discovery last ran.\n      description: Describes automated discovery.\n    Boolean:\n      type: boolean\n    BoxBoolean:\n      type: boolean\n    BoxInteger:\n      type: integer\n    BorrowConfiguration:\n      type: object\n      required:\n        - AllowEarlyCheckIn\n        - MaxTimeToLiveInMinutes\n      properties:\n        AllowEarlyCheckIn:\n          allOf:\n            - $ref: '#/components/schemas/BoxBoolean'\n            - description: Indicates whether early check-ins are allowed.\n        MaxTimeToLiveInMinutes:\n          allOf:\n            - $ref: '#/components/schemas/BoxInteger'\n            - description: 'Maximum time for the borrow configuration, in minutes.'\n      description: Details about a borrow configuration.\n    BoxLong:\n      type: integer\n    EntitlementDataList:\n      type: array\n      items:\n        $ref: '#/components/schemas/EntitlementData'\n    DigitalSignatureMethod:\n      type: string\n      enum:\n        - JWT_PS384\n    MetadataList:\n      type: array\n      items:\n        $ref: '#/components/schemas/Metadata'\n    ClientToken:\n      type: string\n      pattern: \\S+\n      maxLength: 2048\n    SignedToken:\n      type: string\n      minLength: 4096\n    ISO8601DateTime:\n      type: string\n      pattern: '^(-?(?:[1-9][0-9]*)?[0-9]{4})-(1[0-2]|0[1-9])-(3[0-1]|0[1-9]|[1-2][0-9])T(2[0-3]|[0-1][0-9]):([0-5][0-9]):([0-5][0-9])(\\.[0-9]+)?(Z|[+-](?:2[ 0-3]|[0-1][0-9]):[0-5][0-9])+$'\n      maxLength: 50\n    CheckoutType:\n      type: string\n      enum:\n        - PROVISIONAL\n        - PERPETUAL\n    ClientRequestToken:\n      type: string\n      minLength: 1\n      maxLength: 36\n    ResourceType:\n      type: string\n      enum:\n        - EC2_INSTANCE\n        - EC2_HOST\n        - EC2_AMI\n        - RDS\n        - SYSTEMS_MANAGER_MANAGED_INSTANCE\n    ConsumedLicenseSummary:\n      type: object\n      properties:\n        ResourceType:\n          allOf:\n            - $ref: '#/components/schemas/ResourceType'\n            - description: Resource type of the resource consuming a license.\n        ConsumedLicenses:\n          allOf:\n            - $ref: '#/components/schemas/BoxLong'\n            - description: Number of licenses consumed by the resource.\n      description: Details about license consumption.\n    ConsumedLicenseSummaryList:\n      type: array\n      items:\n        $ref: '#/components/schemas/ConsumedLicenseSummary'\n    RenewType:\n      type: string\n      enum:\n        - None\n        - Weekly\n        - Monthly\n    ProvisionalConfiguration:\n      type: object\n      required:\n        - MaxTimeToLiveInMinutes\n      properties:\n        MaxTimeToLiveInMinutes:\n          allOf:\n            - $ref: '#/components/schemas/BoxInteger'\n            - description: 'Maximum time for the provisional configuration, in minutes.'\n      description: Details about a provisional configuration.\n    ConsumptionConfiguration:\n      type: object\n      properties:\n        RenewType:\n          allOf:\n            - $ref: '#/components/schemas/RenewType'\n            - description: Renewal frequency.\n        ProvisionalConfiguration:\n          allOf:\n            - $ref: '#/components/schemas/ProvisionalConfiguration'\n            - description: Details about a provisional configuration.\n        BorrowConfiguration:\n          allOf:\n            - $ref: '#/components/schemas/BorrowConfiguration'\n            - description: Details about a borrow configuration.\n      description: Details about a consumption configuration.\n    PrincipalArnList:\n      type: array\n      items:\n        $ref: '#/components/schemas/Arn'\n      minItems: 1\n      maxItems: 1\n    StatusReasonMessage:\n      type: string\n      pattern: '[\\s\\S]+'\n      maxLength: 400\n    LicenseCountingType:\n      type: string\n      enum:\n        - vCPU\n        - Instance\n        - Core\n        - Socket\n    StringList:\n      type: array\n      items:\n        $ref: '#/components/schemas/String'\n    TagList:\n      type: array\n      items:\n        $ref: '#/components/schemas/Tag'\n    ProductInformationList:\n      type: array\n      items:\n        $ref: '#/components/schemas/ProductInformation'\n    ReportGeneratorName:\n      type: string\n      minLength: 1\n      maxLength: 100\n    ReportTypeList:\n      type: array\n      items:\n        $ref: '#/components/schemas/ReportType'\n    ReportContext:\n      type: object\n      required:\n        - licenseConfigurationArns\n      properties:\n        licenseConfigurationArns:\n          allOf:\n            - $ref: '#/components/schemas/ArnList'\n            - description: Amazon Resource Number (ARN) of the license configuration that this generator reports on.\n      description: Details of the license configuration that this generator reports on.\n    ReportFrequency:\n      type: object\n      properties:\n        value:\n          allOf:\n            - $ref: '#/components/schemas/Integer'\n            - description: Number of times within the frequency period that a report will be generated. Currently only \u003ccode\u003e1\u003c/code\u003e is supported.\n        period:\n          allOf:\n            - $ref: '#/components/schemas/ReportFrequencyType'\n            - description: 'Time period between each report. The period can be daily, weekly, or monthly.'\n      description: Details on how frequently reports are generated.\n    Issuer:\n      type: object\n      required:\n        - Name\n      properties:\n        Name:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: Issuer name.\n        SignKey:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: 'Asymmetric CMK from AWS Key Management Service. The CMK must have a key usage of sign and verify, and support the RSASSA-PSS SHA-256 signing algorithm.'\n      description: Details about the issuer of a license.\n    DatetimeRange:\n      type: object\n      required:\n        - Begin\n      properties:\n        Begin:\n          allOf:\n            - $ref: '#/components/schemas/ISO8601DateTime'\n            - description: Start of the time range.\n        End:\n          allOf:\n            - $ref: '#/components/schemas/ISO8601DateTime'\n            - description: End of the time range.\n      description: 'Describes a time range, in ISO8601-UTC format.'\n    EntitlementList:\n      type: array\n      items:\n        $ref: '#/components/schemas/Entitlement'\n    LicenseStatus:\n      type: string\n      enum:\n        - AVAILABLE\n        - PENDING_AVAILABLE\n        - DEACTIVATED\n        - SUSPENDED\n        - EXPIRED\n        - PENDING_DELETE\n        - DELETED\n    Integer:\n      type: integer\n    MaxSize3StringList:\n      type: array\n      items:\n        $ref: '#/components/schemas/String'\n      maxItems: 3\n    TokenType:\n      type: string\n      enum:\n        - REFRESH_TOKEN\n    TokenString:\n      type: string\n      pattern: \\S+\n      maxLength: 4096\n    LicenseDeletionStatus:\n      type: string\n      enum:\n        - PENDING_DELETE\n        - DELETED\n    Long:\n      type: integer\n    EntitlementUnit:\n      type: string\n      enum:\n        - Count\n        - None\n        - Seconds\n        - Microseconds\n        - Milliseconds\n        - Bytes\n        - Kilobytes\n        - Megabytes\n        - Gigabytes\n        - Terabytes\n        - Bits\n        - Kilobits\n        - Megabits\n        - Gigabits\n        - Terabits\n        - Percent\n        - Bytes/Second\n        - Kilobytes/Second\n        - Megabytes/Second\n        - Gigabytes/Second\n        - Terabytes/Second\n        - Bits/Second\n        - Kilobits/Second\n        - Megabits/Second\n        - Gigabits/Second\n        - Terabits/Second\n        - Count/Second\n    Entitlement:\n      type: object\n      required:\n        - Name\n        - Unit\n      properties:\n        Name:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: Entitlement name.\n        Value:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: Entitlement resource. Use only if the unit is None.\n        MaxCount:\n          allOf:\n            - $ref: '#/components/schemas/Long'\n            - description: Maximum entitlement count. Use if the unit is not None.\n        Overage:\n          allOf:\n            - $ref: '#/components/schemas/BoxBoolean'\n            - description: Indicates whether overages are allowed.\n        Unit:\n          allOf:\n            - $ref: '#/components/schemas/EntitlementUnit'\n            - description: Entitlement unit.\n        AllowCheckIn:\n          allOf:\n            - $ref: '#/components/schemas/BoxBoolean'\n            - description: Indicates whether check-ins are allowed.\n      description: Describes a resource entitled for use with a license.\n    EntitlementDataUnit:\n      type: string\n      enum:\n        - Count\n        - None\n        - Seconds\n        - Microseconds\n        - Milliseconds\n        - Bytes\n        - Kilobytes\n        - Megabytes\n        - Gigabytes\n        - Terabytes\n        - Bits\n        - Kilobits\n        - Megabits\n        - Gigabits\n        - Terabits\n        - Percent\n        - Bytes/Second\n        - Kilobytes/Second\n        - Megabytes/Second\n        - Gigabytes/Second\n        - Terabytes/Second\n        - Bits/Second\n        - Kilobits/Second\n        - Megabits/Second\n        - Gigabits/Second\n        - Terabits/Second\n        - Count/Second\n    EntitlementData:\n      type: object\n      required:\n        - Name\n        - Unit\n      properties:\n        Name:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: Entitlement data name.\n        Value:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: Entitlement data value.\n        Unit:\n          allOf:\n            - $ref: '#/components/schemas/EntitlementDataUnit'\n            - description: Entitlement data unit.\n      description: Data associated with an entitlement resource.\n    EntitlementUsage:\n      type: object\n      required:\n        - Name\n        - ConsumedValue\n        - Unit\n      properties:\n        Name:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: Entitlement usage name.\n        ConsumedValue:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: Resource usage consumed.\n        MaxCount:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: Maximum entitlement usage count.\n        Unit:\n          allOf:\n            - $ref: '#/components/schemas/EntitlementDataUnit'\n            - description: Entitlement usage unit.\n      description: Usage associated with an entitlement resource.\n    EntitlementUsageList:\n      type: array\n      items:\n        $ref: '#/components/schemas/EntitlementUsage'\n    FilterName:\n      type: string\n    FilterValues:\n      type: array\n      items:\n        $ref: '#/components/schemas/FilterValue'\n    Filter:\n      type: object\n      properties:\n        Name:\n          allOf:\n            - $ref: '#/components/schemas/FilterName'\n            - description: Name of the filter. Filter names are case-sensitive.\n        Values:\n          allOf:\n            - $ref: '#/components/schemas/FilterValues'\n            - description: Filter values. Filter values are case-sensitive.\n      description: 'A filter name and value pair that is used to return more specific results from a describe operation. Filters can be used to match a set of resources by specific criteria, such as tags, attributes, or IDs.'\n    FilterList:\n      type: array\n      items:\n        $ref: '#/components/schemas/Filter'\n    FilterValue:\n      type: string\n    Filters:\n      type: array\n      items:\n        $ref: '#/components/schemas/Filter'\n    Grant:\n      type: object\n      required:\n        - GrantArn\n        - GrantName\n        - ParentArn\n        - LicenseArn\n        - GranteePrincipalArn\n        - HomeRegion\n        - GrantStatus\n        - Version\n        - GrantedOperations\n      properties:\n        GrantArn:\n          allOf:\n            - $ref: '#/components/schemas/Arn'\n            - description: Amazon Resource Name (ARN) of the grant.\n        GrantName:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: Grant name.\n        ParentArn:\n          allOf:\n            - $ref: '#/components/schemas/Arn'\n            - description: Parent ARN.\n        LicenseArn:\n          allOf:\n            - $ref: '#/components/schemas/Arn'\n            - description: License ARN.\n        GranteePrincipalArn:\n          allOf:\n            - $ref: '#/components/schemas/Arn'\n            - description: The grantee principal ARN.\n        HomeRegion:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: Home Region of the grant.\n        GrantStatus:\n          allOf:\n            - $ref: '#/components/schemas/GrantStatus'\n            - description: Grant status.\n        StatusReason:\n          allOf:\n            - $ref: '#/components/schemas/StatusReasonMessage'\n            - description: Grant status reason.\n        Version:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: Grant version.\n        GrantedOperations:\n          allOf:\n            - $ref: '#/components/schemas/AllowedOperationList'\n            - description: Granted operations.\n      description: Describes a grant.\n    ManagedResourceSummaryList:\n      type: array\n      items:\n        $ref: '#/components/schemas/ManagedResourceSummary'\n    ReportGenerator:\n      type: object\n      properties:\n        ReportGeneratorName:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: Name of the report generator.\n        ReportType:\n          allOf:\n            - $ref: '#/components/schemas/ReportTypeList'\n            - description: Type of reports that are generated.\n        ReportContext:\n          allOf:\n            - $ref: '#/components/schemas/ReportContext'\n            - description: License configuration type this generator reports on.\n        ReportFrequency:\n          allOf:\n            - $ref: '#/components/schemas/ReportFrequency'\n            - description: Details on how frequently reports are generated.\n        LicenseManagerReportGeneratorArn:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: Amazon Resource Number (ARN) of the report generator.\n        LastRunStatus:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: Status of the last report generation attempt.\n        LastRunFailureReason:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: Failure message for the last report generation attempt.\n        LastReportGenerationTime:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: Time the last report was generated at.\n        ReportCreatorAccount:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: The AWS account ID used to create the report generator.\n        Description:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: Description of the report generator.\n        S3Location:\n          allOf:\n            - $ref: '#/components/schemas/S3Location'\n            - description: Details of the S3 bucket that report generator reports are published to.\n        CreateTime:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: Time the report was created.\n        Tags:\n          allOf:\n            - $ref: '#/components/schemas/TagList'\n            - description: Tags associated with the report generator.\n      description: Describe the details of a report generator.\n    License:\n      type: object\n      properties:\n        LicenseArn:\n          allOf:\n            - $ref: '#/components/schemas/Arn'\n            - description: Amazon Resource Name (ARN) of the license.\n        LicenseName:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: License name.\n        ProductName:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: Product name.\n        ProductSKU:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: Product SKU.\n        Issuer:\n          allOf:\n            - $ref: '#/components/schemas/IssuerDetails'\n            - description: License issuer.\n        HomeRegion:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: Home Region of the license.\n        Status:\n          allOf:\n            - $ref: '#/components/schemas/LicenseStatus'\n            - description: License status.\n        Validity:\n          allOf:\n            - $ref: '#/components/schemas/DatetimeRange'\n            - description: 'Date and time range during which the license is valid, in ISO8601-UTC format.'\n        Beneficiary:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: License beneficiary.\n        Entitlements:\n          allOf:\n            - $ref: '#/components/schemas/EntitlementList'\n            - description: License entitlements.\n        ConsumptionConfiguration:\n          allOf:\n            - $ref: '#/components/schemas/ConsumptionConfiguration'\n            - description: Configuration for consumption of the license.\n        LicenseMetadata:\n          allOf:\n            - $ref: '#/components/schemas/MetadataList'\n            - description: License metadata.\n        CreateTime:\n          allOf:\n            - $ref: '#/components/schemas/ISO8601DateTime'\n            - description: License creation time.\n        Version:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: License version.\n      description: Software license that is managed in AWS License Manager.\n    LicenseUsage:\n      type: object\n      properties:\n        EntitlementUsages:\n          allOf:\n            - $ref: '#/components/schemas/EntitlementUsageList'\n            - description: License entitlement usages.\n      description: Describes the entitlement usage associated with a license.\n    OrganizationConfiguration:\n      type: object\n      required:\n        - EnableIntegration\n      properties:\n        EnableIntegration:\n          allOf:\n            - $ref: '#/components/schemas/Boolean'\n            - description: Enables AWS Organization integration.\n      description: Configuration information for AWS Organizations.\n    GrantList:\n      type: array\n      items:\n        $ref: '#/components/schemas/Grant'\n    IssuerDetails:\n      type: object\n      properties:\n        Name:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: Issuer name.\n        SignKey:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: 'Asymmetric CMK from AWS Key Management Service. The CMK must have a key usage of sign and verify, and support the RSASSA-PSS SHA-256 signing algorithm.'\n        KeyFingerprint:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: Issuer key fingerprint.\n      description: Details associated with the issuer of a license.\n    ReceivedMetadata:\n      type: object\n      properties:\n        ReceivedStatus:\n          allOf:\n            - $ref: '#/components/schemas/ReceivedStatus'\n            - description: Received status.\n        ReceivedStatusReason:\n          $ref: '#/components/schemas/StatusReasonMessage'\n        AllowedOperations:\n          allOf:\n            - $ref: '#/components/schemas/AllowedOperationList'\n            - description: Allowed operations.\n      description: Metadata associated with received licenses and grants.\n    GrantedLicense:\n      type: object\n      properties:\n        LicenseArn:\n          allOf:\n            - $ref: '#/components/schemas/Arn'\n            - description: Amazon Resource Name (ARN) of the license.\n        LicenseName:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: License name.\n        ProductName:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: Product name.\n        ProductSKU:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: Product SKU.\n        Issuer:\n          allOf:\n            - $ref: '#/components/schemas/IssuerDetails'\n            - description: Granted license issuer.\n        HomeRegion:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: Home Region of the granted license.\n        Status:\n          allOf:\n            - $ref: '#/components/schemas/LicenseStatus'\n            - description: Granted license status.\n        Validity:\n          allOf:\n            - $ref: '#/components/schemas/DatetimeRange'\n            - description: 'Date and time range during which the granted license is valid, in ISO8601-UTC format.'\n        Beneficiary:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: Granted license beneficiary.\n        Entitlements:\n          allOf:\n            - $ref: '#/components/schemas/EntitlementList'\n            - description: License entitlements.\n        ConsumptionConfiguration:\n          allOf:\n            - $ref: '#/components/schemas/ConsumptionConfiguration'\n            - description: Configuration for consumption of the license.\n        LicenseMetadata:\n          allOf:\n            - $ref: '#/components/schemas/MetadataList'\n            - description: Granted license metadata.\n        CreateTime:\n          allOf:\n            - $ref: '#/components/schemas/ISO8601DateTime'\n            - description: Creation time of the granted license.\n        Version:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: Version of the granted license.\n        ReceivedMetadata:\n          allOf:\n            - $ref: '#/components/schemas/ReceivedMetadata'\n            - description: Granted license received metadata.\n      description: Describes a license that is granted to a grantee.\n    GrantedLicenseList:\n      type: array\n      items:\n        $ref: '#/components/schemas/GrantedLicense'\n    InventoryFilterCondition:\n      type: string\n      enum:\n        - EQUALS\n        - NOT_EQUALS\n        - BEGINS_WITH\n        - CONTAINS\n    InventoryFilter:\n      type: object\n      required:\n        - Name\n        - Condition\n      properties:\n        Name:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: Name of the filter.\n        Condition:\n          allOf:\n            - $ref: '#/components/schemas/InventoryFilterCondition'\n            - description: Condition of the filter.\n        Value:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: Value of the filter.\n      description: An inventory filter.\n    InventoryFilterList:\n      type: array\n      items:\n        $ref: '#/components/schemas/InventoryFilter'\n    LicenseConfiguration:\n      type: object\n      properties:\n        LicenseConfigurationId:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: Unique ID of the license configuration.\n        LicenseConfigurationArn:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: Amazon Resource Name (ARN) of the license configuration.\n        Name:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: Name of the license configuration.\n        Description:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: Description of the license configuration.\n        LicenseCountingType:\n          allOf:\n            - $ref: '#/components/schemas/LicenseCountingType'\n            - description: Dimension to use to track the license inventory.\n        LicenseRules:\n          allOf:\n            - $ref: '#/components/schemas/StringList'\n            - description: License rules.\n        LicenseCount:\n          allOf:\n            - $ref: '#/components/schemas/BoxLong'\n            - description: Number of licenses managed by the license configuration.\n        LicenseCountHardLimit:\n          allOf:\n            - $ref: '#/components/schemas/BoxBoolean'\n            - description: Number of available licenses as a hard limit.\n        DisassociateWhenNotFound:\n          allOf:\n            - $ref: '#/components/schemas/BoxBoolean'\n            - description: 'When true, disassociates a resource when software is uninstalled.'\n        ConsumedLicenses:\n          allOf:\n            - $ref: '#/components/schemas/BoxLong'\n            - description: 'Number of licenses consumed. '\n        Status:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: Status of the license configuration.\n        OwnerAccountId:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: Account ID of the license configuration's owner.\n        ConsumedLicenseSummaryList:\n          allOf:\n            - $ref: '#/components/schemas/ConsumedLicenseSummaryList'\n            - description: Summaries for licenses consumed by various resources.\n        ManagedResourceSummaryList:\n          allOf:\n            - $ref: '#/components/schemas/ManagedResourceSummaryList'\n            - description: Summaries for managed resources.\n        ProductInformationList:\n          allOf:\n            - $ref: '#/components/schemas/ProductInformationList'\n            - description: Product information.\n        AutomatedDiscoveryInformation:\n          allOf:\n            - $ref: '#/components/schemas/AutomatedDiscoveryInformation'\n            - description: Automated discovery information.\n      description: 'A license configuration is an abstraction of a customer license agreement that can be consumed and enforced by License Manager. Components include specifications for the license type (licensing by instance, socket, CPU, or vCPU), allowed tenancy (shared tenancy, Dedicated Instance, Dedicated Host, or all of these), host affinity (how long a VM must be associated with a host), and the number of licenses purchased and used.'\n    LicenseConfigurationAssociation:\n      type: object\n      properties:\n        ResourceArn:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: Amazon Resource Name (ARN) of the resource.\n        ResourceType:\n          allOf:\n            - $ref: '#/components/schemas/ResourceType'\n            - description: Type of server resource.\n        ResourceOwnerId:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: ID of the AWS account that owns the resource consuming licenses.\n        AssociationTime:\n          allOf:\n            - $ref: '#/components/schemas/DateTime'\n            - description: Time when the license configuration was associated with the resource.\n        AmiAssociationScope:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: Scope of AMI associations. The possible value is \u003ccode\u003ecross-account\u003c/code\u003e.\n      description: Describes an association with a license configuration.\n    LicenseConfigurationAssociations:\n      type: array\n      items:\n        $ref: '#/components/schemas/LicenseConfigurationAssociation'\n    LicenseConfigurationStatus:\n      type: string\n      enum:\n        - AVAILABLE\n        - DISABLED\n    LicenseConfigurationUsage:\n      type: object\n      properties:\n        ResourceArn:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: Amazon Resource Name (ARN) of the resource.\n        ResourceType:\n          allOf:\n            - $ref: '#/components/schemas/ResourceType'\n            - description: Type of resource.\n        ResourceStatus:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: Status of the resource.\n        ResourceOwnerId:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: ID of the account that owns the resource.\n        AssociationTime:\n          allOf:\n            - $ref: '#/components/schemas/DateTime'\n            - description: Time when the license configuration was initially associated with the resource.\n        ConsumedLicenses:\n          allOf:\n            - $ref: '#/components/schemas/BoxLong'\n            - description: Number of licenses consumed by the resource.\n      description: Details about the usage of a resource associated with a license configuration.\n    LicenseConfigurationUsageList:\n      type: array\n      items:\n        $ref: '#/components/schemas/LicenseConfigurationUsage'\n    LicenseConfigurations:\n      type: array\n      items:\n        $ref: '#/components/schemas/LicenseConfiguration'\n    LicenseList:\n      type: array\n      items:\n        $ref: '#/components/schemas/License'\n    LicenseOperationFailure:\n      type: object\n      properties:\n        ResourceArn:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: Amazon Resource Name (ARN) of the resource.\n        ResourceType:\n          allOf:\n            - $ref: '#/components/schemas/ResourceType'\n            - description: Resource type.\n        ErrorMessage:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: Error message.\n        FailureTime:\n          allOf:\n            - $ref: '#/components/schemas/DateTime'\n            - description: Failure time.\n        OperationName:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: Name of the operation.\n        ResourceOwnerId:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: ID of the AWS account that owns the resource.\n        OperationRequestedBy:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: The requester is \"License Manager Automated Discovery\".\n        MetadataList:\n          allOf:\n            - $ref: '#/components/schemas/MetadataList'\n            - description: Reserved.\n      description: Describes the failure of a license operation.\n    LicenseOperationFailureList:\n      type: array\n      items:\n        $ref: '#/components/schemas/LicenseOperationFailure'\n    LicenseSpecification:\n      type: object\n      required:\n        - LicenseConfigurationArn\n      properties:\n        LicenseConfigurationArn:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: Amazon Resource Name (ARN) of the license configuration.\n        AmiAssociationScope:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: Scope of AMI associations. The possible value is \u003ccode\u003ecross-account\u003c/code\u003e.\n      description: Details for associating a license configuration with a resource.\n    LicenseSpecifications:\n      type: array\n      items:\n        $ref: '#/components/schemas/LicenseSpecification'\n    MaxSize100:\n      type: integer\n      minimum: 1\n      maximum: 100\n    ReportGeneratorList:\n      type: array\n      items:\n        $ref: '#/components/schemas/ReportGenerator'\n    ResourceInventoryList:\n      type: array\n      items:\n        $ref: '#/components/schemas/ResourceInventory'\n    TokenList:\n      type: array\n      items:\n        $ref: '#/components/schemas/TokenData'\n    ManagedResourceSummary:\n      type: object\n      properties:\n        ResourceType:\n          allOf:\n            - $ref: '#/components/schemas/ResourceType'\n            - description: Type of resource associated with a license.\n        AssociationCount:\n          allOf:\n            - $ref: '#/components/schemas/BoxLong'\n            - description: Number of resources associated with licenses.\n      description: Summary information about a managed resource.\n    Metadata:\n      type: object\n      properties:\n        Name:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: The key name.\n        Value:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: The value.\n      description: Describes key/value pairs.\n    ProductInformationFilterList:\n      type: array\n      items:\n        $ref: '#/components/schemas/ProductInformationFilter'\n    ProductInformation:\n      type: object\n      required:\n        - ResourceType\n        - ProductInformationFilterList\n      properties:\n        ResourceType:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: Resource type. The possible values are \u003ccode\u003eSSM_MANAGED\u003c/code\u003e | \u003ccode\u003eRDS\u003c/code\u003e.\n        ProductInformationFilterList:\n          allOf:\n            - $ref: '#/components/schemas/ProductInformationFilterList'\n            - description: '\u003cp\u003eA Product information filter consists of a \u003ccode\u003eProductInformationFilterComparator\u003c/code\u003e which is a logical operator, a \u003ccode\u003eProductInformationFilterName\u003c/code\u003e which specifies the type of filter being declared, and a \u003ccode\u003eProductInformationFilterValue\u003c/code\u003e that specifies the value to filter on. \u003c/p\u003e \u003cp\u003eAccepted values for \u003ccode\u003eProductInformationFilterName\u003c/code\u003e are listed here along with descriptions and valid options for \u003ccode\u003eProductInformationFilterComparator\u003c/code\u003e. \u003c/p\u003e \u003cp\u003eThe following filters and are supported when the resource type is \u003ccode\u003eSSM_MANAGED\u003c/code\u003e:\u003c/p\u003e \u003cul\u003e \u003cli\u003e \u003cp\u003e \u003ccode\u003eApplication Name\u003c/code\u003e - The name of the application. Logical operator is \u003ccode\u003eEQUALS\u003c/code\u003e.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e \u003ccode\u003eApplication Publisher\u003c/code\u003e - The publisher of the application. Logical operator is \u003ccode\u003eEQUALS\u003c/code\u003e.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e \u003ccode\u003eApplication Version\u003c/code\u003e - The version of the application. Logical operator is \u003ccode\u003eEQUALS\u003c/code\u003e.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e \u003ccode\u003ePlatform Name\u003c/code\u003e - The name of the platform. Logical operator is \u003ccode\u003eEQUALS\u003c/code\u003e.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e \u003ccode\u003ePlatform Type\u003c/code\u003e - The platform type. Logical operator is \u003ccode\u003eEQUALS\u003c/code\u003e.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e \u003ccode\u003eTag:key\u003c/code\u003e - The key of a tag attached to an AWS resource you wish to exclude from automated discovery. Logical operator is \u003ccode\u003eNOT_EQUALS\u003c/code\u003e. The key for your tag must be appended to \u003ccode\u003eTag:\u003c/code\u003e following the example: \u003ccode\u003eTag:name-of-your-key\u003c/code\u003e. \u003ccode\u003eProductInformationFilterValue\u003c/code\u003e is optional if you are not using values for the key. \u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e \u003ccode\u003eAccountId\u003c/code\u003e - The 12-digit ID of an AWS account you wish to exclude from automated discovery. Logical operator is \u003ccode\u003eNOT_EQUALS\u003c/code\u003e.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e \u003ccode\u003eLicense Included\u003c/code\u003e - The type of license included. Logical operators are \u003ccode\u003eEQUALS\u003c/code\u003e and \u003ccode\u003eNOT_EQUALS\u003c/code\u003e. Possible values are: \u003ccode\u003esql-server-enterprise\u003c/code\u003e | \u003ccode\u003esql-server-standard\u003c/code\u003e | \u003ccode\u003esql-server-web\u003c/code\u003e | \u003ccode\u003ewindows-server-datacenter\u003c/code\u003e.\u003c/p\u003e \u003c/li\u003e \u003c/ul\u003e \u003cp\u003eThe following filters and logical operators are supported when the resource type is \u003ccode\u003eRDS\u003c/code\u003e:\u003c/p\u003e \u003cul\u003e \u003cli\u003e \u003cp\u003e \u003ccode\u003eEngine Edition\u003c/code\u003e - The edition of the database engine. Logical operator is \u003ccode\u003eEQUALS\u003c/code\u003e. Possible values are: \u003ccode\u003eoracle-ee\u003c/code\u003e | \u003ccode\u003eoracle-se\u003c/code\u003e | \u003ccode\u003eoracle-se1\u003c/code\u003e | \u003ccode\u003eoracle-se2\u003c/code\u003e.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e \u003ccode\u003eLicense Pack\u003c/code\u003e - The license pack. Logical operator is \u003ccode\u003eEQUALS\u003c/code\u003e. Possible values are: \u003ccode\u003edata guard\u003c/code\u003e | \u003ccode\u003ediagnostic pack sqlt\u003c/code\u003e | \u003ccode\u003etuning pack sqlt\u003c/code\u003e | \u003ccode\u003eols\u003c/code\u003e | \u003ccode\u003eolap\u003c/code\u003e.\u003c/p\u003e \u003c/li\u003e \u003c/ul\u003e'\n      description: Describes product information for a license configuration.\n    ProductInformationFilter:\n      type: object\n      required:\n        - ProductInformationFilterName\n        - ProductInformationFilterComparator\n      properties:\n        ProductInformationFilterName:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: Filter name.\n        ProductInformationFilterValue:\n          allOf:\n            - $ref: '#/components/schemas/StringList'\n            - description: Filter value.\n        ProductInformationFilterComparator:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: Logical operator.\n      description: Describes product information filters.\n    ReceivedStatus:\n      type: string\n      enum:\n        - PENDING_WORKFLOW\n        - PENDING_ACCEPT\n        - REJECTED\n        - ACTIVE\n        - FAILED_WORKFLOW\n        - DELETED\n        - DISABLED\n        - WORKFLOW_COMPLETED\n    ReportFrequencyType:\n      type: string\n      enum:\n        - DAY\n        - WEEK\n        - MONTH\n    S3Location:\n      type: object\n      properties:\n        bucket:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: Name of the S3 bucket reports are published to.\n        keyPrefix:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: Prefix of the S3 bucket reports are published to.\n      description: Details of the S3 bucket that report generator reports are published to.\n    ReportType:\n      type: string\n      enum:\n        - LicenseConfigurationSummaryReport\n        - LicenseConfigurationUsageReport\n    ResourceInventory:\n      type: object\n      properties:\n        ResourceId:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: ID of the resource.\n        ResourceType:\n          allOf:\n            - $ref: '#/components/schemas/ResourceType'\n            - description: Type of resource.\n        ResourceArn:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: Amazon Resource Name (ARN) of the resource.\n        Platform:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: Platform of the resource.\n        PlatformVersion:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: Platform version of the resource in the inventory.\n        ResourceOwningAccountId:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: ID of the account that owns the resource.\n      description: Details about a resource.\n    Tag:\n      type: object\n      properties:\n        Key:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: Tag key.\n        Value:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: Tag value.\n      description: Details about a tag for a license configuration.\n    TagKeyList:\n      type: array\n      items:\n        $ref: '#/components/schemas/String'\n    TokenData:\n      type: object\n      properties:\n        TokenId:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: Token ID.\n        TokenType:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: Type of token generated. The supported value is \u003ccode\u003eREFRESH_TOKEN\u003c/code\u003e.\n        LicenseArn:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: Amazon Resource Name (ARN) of the license.\n        ExpirationTime:\n          allOf:\n            - $ref: '#/components/schemas/ISO8601DateTime'\n            - description: 'Token expiration time, in ISO8601-UTC format.'\n        TokenProperties:\n          allOf:\n            - $ref: '#/components/schemas/MaxSize3StringList'\n            - description: Data specified by the caller.\n        RoleArns:\n          allOf:\n            - $ref: '#/components/schemas/ArnList'\n            - description: Amazon Resource Names (ARN) of the roles included in the token.\n        Status:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: Token status. The possible values are \u003ccode\u003eAVAILABLE\u003c/code\u003e and \u003ccode\u003eDELETED\u003c/code\u003e.\n      description: Describes a token.\nsecurity:\n  - hmac: []\n",
			"canonicalURL": "/github.com/APIs-guru/openapi-directory@47bf2b618e492e31bc62743e9f72c47cb8460229/-/blob/APIs/amazonaws.com/license-manager/2018-08-01/openapi.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/APIs-guru/openapi-directory/blob/47bf2b618e492e31bc62743e9f72c47cb8460229/APIs/amazonaws.com/license-manager/2018-08-01/openapi.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "parse: parse spec: parse operations: paths: /#X-Amz-Target=AWSLicenseManager.DeleteToken: post: operation \"DeleteToken\": parse path \"/#X-Amz-Target=AWSLicenseManager.DeleteToken\": path MUST NOT contain a fragment"
}