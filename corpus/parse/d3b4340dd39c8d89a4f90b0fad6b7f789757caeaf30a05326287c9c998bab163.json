{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/DzenDyn/baseBackend"
		},
		"file": {
			"name": "apiV1.yaml",
			"size": 0,
			"path": "src/api/apiV1.yaml",
			"byteSize": 8423,
			"content": "openapi: 3.0.3\r\ninfo:\r\n    title: Passport test\r\n    description: Test of passport.js\r\n    version: 1.0.0\r\n    license:\r\n        name: MIT License\r\n        url: https://opensource.org/licenses/MIT\r\nservers:\r\n    - url: https://localhost:3007/v1/\r\npaths:\r\n    /test/ping:\r\n        get:\r\n            description: 'Returns pong'\r\n            tags:\r\n                - Test\r\n            operationId: ping\r\n            responses:\r\n                200:\r\n                    $ref: '#/components/responses/standardResponse'\r\n    /test/subscription:\r\n        get:\r\n            description: 'Testing subscribers section'\r\n            tags:\r\n                - Test\r\n            operationId: testSubscription\r\n            security:\r\n                - access: ['subscriber']\r\n            responses:\r\n                200:\r\n                    $ref: '#/components/responses/standardResponse'\r\n    /test/private:\r\n        get:\r\n            description: 'Testing private section'\r\n            tags:\r\n                - Test\r\n            operationId: testPrivate\r\n            security:\r\n                - access: ['free']\r\n            responses:\r\n                200:\r\n                    $ref: '#/components/responses/standardResponse'\r\n    /user/register:\r\n        post:\r\n            description: 'Register user'\r\n            tags:\r\n                - User\r\n            operationId: userRegister\r\n            requestBody:\r\n                required: true\r\n                content:\r\n                    application/json:\r\n                        schema:\r\n                            type: object\r\n                            properties:\r\n                                email:\r\n                                    type: string\r\n                                    format: email\r\n                                nickname:\r\n                                    type: string\r\n                                password:\r\n                                    type: string\r\n                                    format: password\r\n            responses:\r\n                200:\r\n                    $ref: '#/components/responses/standardResponse'\r\n                400:\r\n                    $ref: '#/components/responses/standardResponse'\r\n    /user/login:\r\n        post:\r\n            description: 'Login user'\r\n            tags:\r\n                - User\r\n            operationId: userLogin\r\n            requestBody:\r\n                required: true\r\n                content:\r\n                    application/json:\r\n                        schema:\r\n                            type: object\r\n                            properties:\r\n                                email:\r\n                                    type: string\r\n                                    format: email\r\n                                password:\r\n                                    type: string\r\n                                    format: password\r\n            responses:\r\n                200:\r\n                    description: Returns boolean success state and jwt object\r\n                    content:\r\n                        application/json:\r\n                            schema:\r\n                                type: object\r\n                                properties:\r\n                                    success:\r\n                                        type: boolean\r\n                                    jwt:\r\n                                        type: object\r\n                400:\r\n                    $ref: '#/components/responses/standardResponse'\r\n    /user/refresh:\r\n        get:\r\n            description: 'Refresh token'\r\n            tags:\r\n                - User\r\n            operationId: userRefreshToken\r\n            responses:\r\n                200:\r\n                    $ref: '#/components/responses/jwtResponse'\r\n                403:\r\n                    $ref: '#/components/responses/standardResponse'\r\n    /user/logout:\r\n        get:\r\n            description: 'Logout user. Remove cookie. Remove refresh token in DB'\r\n            tags:\r\n                - User\r\n            operationId: userLogout\r\n            responses:\r\n                200:\r\n                    $ref: '#/components/responses/standardResponse'\r\n                403:\r\n                    $ref: '#/components/responses/standardResponse'\r\n    /user/profile:\r\n        get:\r\n            description: 'Returns user object'\r\n            tags:\r\n                - User\r\n            operationId: userProfile\r\n            security:\r\n                - access: [ 'free' ]\r\n            responses:\r\n                200:\r\n                    $ref: '#/components/responses/standardResponse'\r\n                403:\r\n                    $ref: '#/components/responses/standardResponse'\r\n    /user/resetOldSessions:\r\n        get:\r\n            description: 'Removes old sessions from DB'\r\n            tags:\r\n                - User\r\n            operationId: resetOldSessions\r\n            security:\r\n                - acess: [ 'admin' ]\r\n            responses:\r\n                200:\r\n                    $ref: '#/components/responses/standardResponse'\r\n                403:\r\n                    $ref: '#/components/responses/standardResponse'\r\n                500:\r\n                    $ref: '#/components/responses/standardResponse'\r\n    /user/emailVerification/{verifyCode}:\r\n        get:\r\n            description: 'Email verification'\r\n            tags:\r\n                - User\r\n            operationId: emailVerification\r\n            parameters:\r\n                - name: verifyCode\r\n                  in: path\r\n                  required: true\r\n                  schema:\r\n                      type: string\r\n            responses:\r\n                200:\r\n                    $ref: '#/components/responses/standardResponse'\r\n                500:\r\n                    $ref: '#/components/responses/standardResponse'\r\n\r\n    /user/requestPasswordReset/{email}:\r\n        get:\r\n            description: 'Password reset request'\r\n            tags:\r\n                - User\r\n            operationId: requestPasswordReset\r\n            parameters:\r\n                - name: email\r\n                  in: path\r\n                  required: true\r\n                  schema:\r\n                      type: string\r\n            responses:\r\n                200:\r\n                    $ref: '#/components/responses/standardResponse'\r\n\r\n    /user/passwordResetConfirmation/{verifyCode}:\r\n        post:\r\n            description: 'Password reset confirmation'\r\n            tags:\r\n                - User\r\n            operationId: passwordResetConfirmation\r\n            parameters:\r\n                - name: verifyCode\r\n                  in: path\r\n                  required: true\r\n                  schema:\r\n                      type: string\r\n            requestBody:\r\n                required: true\r\n                content:\r\n                    application/json:\r\n                        schema:\r\n                            type: object\r\n                            properties:\r\n                                email:\r\n                                    type: string\r\n                                    format: email\r\n                                nickname:\r\n                                    type: string\r\n                                password:\r\n                                    type: string\r\n                                    format: password\r\n            responses:\r\n                200:\r\n                    $ref: '#/components/responses/standardResponse'\r\n                500:\r\n                    $ref: '#/components/responses/standardResponse'\r\n\r\ncomponents:\r\n    responses:\r\n        standardResponse:\r\n            description: Returns boolean success state and string message\r\n            content:\r\n                application/json:\r\n                    schema:\r\n                        type: object\r\n                        properties:\r\n                            success:\r\n                                type: boolean\r\n                            message:\r\n                                type: string\r\n        jwtResponse:\r\n            description: Returns boolean success state and jwt object\r\n            content:\r\n                application/json:\r\n                    schema:\r\n                        type: object\r\n                        properties:\r\n                            success:\r\n                                type: boolean\r\n                            jwt:\r\n                                type: object",
			"canonicalURL": "/github.com/DzenDyn/baseBackend@c60f4e04b94865ad2cd26c4c3338ab6badcc6acd/-/blob/src/api/apiV1.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/DzenDyn/baseBackend/blob/c60f4e04b94865ad2cd26c4c3338ab6badcc6acd/src/api/apiV1.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "parse: parse spec: parse operations: path \"/user/resetOldSessions\": at 1:4319: get: operation \"resetOldSessions\": at 1:4326: security: unknown security schema \"acess\""
}