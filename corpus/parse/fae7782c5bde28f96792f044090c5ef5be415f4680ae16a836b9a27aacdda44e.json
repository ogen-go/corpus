{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/UnionInternationalCheminsdeFer/OSDM"
		},
		"file": {
			"name": "OSDM-online-api-v1.0.0.yml",
			"size": 0,
			"path": "specification/v1.0.0/OSDM-online-api-v1.0.0.yml",
			"byteSize": 217823,
			"content": "openapi: 3.0.3\nservers:\n  - description: dummy server\n    url: 'https://virtserver.swaggerhub.com/Real-IT/dummy/1.0.0'\ninfo:\n  title: UIC 90918-10 - OSDM\n  version: 1.0.0\n  description: |\n    Specifications for the OSDM API standard. The OSDM specification supports two\n    modes of operation: Distributor Mode and Allocator Mode. The API works the same in \n    both mode, except that in allocator mode the API also returns fare information.\n    The OSDM specification combines the allocator and distributor modes into one aligned\n    API interface.\n  contact:\n    name: Nicolas Selleslagh, Clemens Gantert and Andreas Schlapbach\n    url: https://unioninternationalcheminsdefer.github.io/OSDM/\n    email: osdm@uic.org\n  license:\n    name: Apache 2.0\n    url: 'https://www.apache.org/licenses/LICENSE-2.0.html'\ntags:\n  - name: Trips\n    description: \u003e-\n      resources to search for trips and locations\n  - name: Offers\n    description: \u003e-\n      resources to get bookable offers\n  - name: Offer Parts\n    description: \u003e-\n      resources to manipulate parts of an offer consisting of, e.g., admissions, reservations,\n      or ancillaries; if permitted, also fares are offered. \n  - name: Bookings\n    description: \u003e-\n      resources to manipulate bookings\n  - name: Passengers\n    description: \u003e-\n      resources to manipulate a passenger's information at every stage of the flow\n  - name: Products\n    description: \u003e-\n      resources to retrieve products information on one or more products\n  - name: Fulfillments  \n    description: \u003e-\n      resources to retrieve fulfillments, e.g. tickets\n  - name: RefundOffers\n    description: \u003e-\n      resources to get and accept a refund offer\n  - name: ExchangeOffers\n    description: \u003e-\n      resources to get and accept an exchange offer\n  - name: CoachLayouts\n    description: \u003e-\n      resources to get the layout of a coach\npaths:\n  /locations:\n    get:\n      tags:\n        - Trips\n      summary: Returns matching locations for a given match value based on MatchType.\n      operationId: getLocations\n      parameters:\n        - name: Accept-Language\n          in: header\n          description: \u003e-\n            Describes the set of natural languages that are preferred for localized text in the response\n            to the request (see RFC2616-sec14.4). \n            Supporting English (en) is a must.\n          schema:\n            type: string\n          required: false\n        - name: Access-Token \n          in: header\n          required: true\n          description: \u003e-\n            OAuth2 token used to authenticate the consumer API. Refer to the implementation documentation\n            for information on how to get a token.\n          schema:\n            type: string\n        - name: matchValue\n          in: query\n          schema:\n            type: string\n          required: true\n        - name: matchType\n          in: query\n          description: \u003e-\n            Defines the search token type in matchValue (TEXT for names;\n            ANY_CODE fallbacks to the code supported by the underlying system\n            (like UIC, EVA or RESARAIL); UIC/EVA/RESARAIL forces stations\n            defined by the appropriate code-system explicitly (national\n            aspect); COORDS given as \"lat,lon\").\n          schema:\n            type: string\n            default: NAME\n            enum:\n              - NAME\n              - ANY_CODE\n              - CODE_LIST\n              - COORDS\n        - name: codeListForMatch\n          in: query\n          description: \u003e-\n            In case match-value is CODE_LIST, indicates the code-list to search into for the matchValue\n          schema:\n            type: string\n          required: false\n        - name: countryCode\n          in: query\n          description: \u003e-\n            Search locations for a specific country (ISO 3166, 2-chars). Meant\n            for autocomplete functionality. A separate endpoint or channel would\n            be provided for mass downloads\n          required: false\n          schema:\n            type: string\n        - name: limit\n          in: query\n          description: 'The number of locations to be returned ([1..50]).'\n          required: false\n          schema:\n            type: integer\n            format: int32\n            default: 10\n        - in: query\n          name: embed\n          description: \u003e-\n            Influences whether referenced resources are returned in full or as references only. \n          schema:\n            type: array\n            items:\n              type: string\n              enum:\n                - ALL\n                - NONE\n            default: ALL\n      responses:\n        '200':\n          description: the set of stations matching the provided input\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  warnings:\n                    $ref: '#/components/schemas/WarningMessageList'\n                  locations:\n                    type: array\n                    items:\n                      $ref: '#/components/schemas/Location'\n                    description: \u003e-\n                      Depending on the embed either references or full location definitions are returned. \n        '400':\n          description: bad input parameter\n          content:\n            \"application/problem+json\":\n              schema:\n                $ref: '#/components/schemas/Problem'\n                \n  '/locations/{locationId}':\n    get:\n      tags:\n        - Trips\n      summary: Returns a location element with a given locationId.\n      operationId: getLocationsId\n      parameters:\n        - name: Access-Token \n          in: header\n          description: \u003e-\n            OAuth2 token used to authenticate the consumer API. Refer to the implementation documentation\n            for information on how to get a token.\n          required: true\n          schema:\n            type: string\n        - name: Accept-Language\n          in: header\n          description: \u003e-\n            Describes the set of natural languages that are preferred for localized text in the response\n            to the request (see RFC2616-sec14.4). \n            Supporting English (en) is a must.\n          schema:\n            type: string\n          required: false\n        - in: path\n          name: locationId\n          schema:\n            type: string\n            description: opaque and unique (on this server) id for the location          \n          required: true\n          description: ID of the location resource to be retrieved.\n      responses:\n        '200':\n          description: the retrieved location resource\n          headers:\n            Cache-Control:\n              schema:\n                type: string\n                default: 'public, max-age=43200'\n                description: \u003e-\n                  A location resource is persistent and has a long time to live to allow long-term caching. Any update of\n                  the location information leads to the creation of a new resource.\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  warnings:\n                    $ref: '#/components/schemas/WarningMessageList'\n                  location:\n                    $ref: '#/components/schemas/Location'\n        '400':\n          description: bad input parameter\n          content:\n            \"application/problem+json\":\n              schema:\n                $ref: '#/components/schemas/Problem'\n\n  '/trips/{tripId}':\n    get:\n      tags:\n        - Trips\n      summary: Returns a trip element representing a travel trip.\n      description:\n        A trip consists of one or more segments for a given tripId. Depending on the \n        embed either references or full location definitions is returned.\n      operationId: getTripsId\n      parameters:\n        - name: Access-Token \n          in: header\n          description: \u003e-\n            OAuth2 token used to authenticate the consumer API. Refer to the implementation documentation\n            for information on how to get a token.\n          required: true\n          schema:\n            type: string\n        - name: Accept-Language\n          in: header\n          description: \u003e-\n            Describes the set of natural languages that are preferred for localized text in the response\n            to the request (see RFC2616-sec14.4). \n            Supporting English (en) is a must.\n          schema:\n            type: string\n          required: false\n        - in: path\n          name: tripId\n          schema:\n            type: string\n            description: unique (on this server) and opaque id of the trip\n          required: true\n          description: ID of the trip to get.\n        - in: query\n          name: stopBehavior\n          description: \u003e-\n            Influences what stops are to be returned in response\n            (ORIGIN_DESTINATION_ONLY returns no intermediate stops;\n            REAL_BOARDING_ALIGHTING returns all stops except virtual stops).\n          schema:\n            type: string\n            default: ORIGIN_DESTINATION_ONLY\n            enum:\n              - ORIGIN_DESTINATION_ONLY\n              - REAL_BOARDING_ALIGHTING\n        - in: query\n          name: embed\n          description: \u003e-\n            Influences whether referenced resources are returned in full or as references only. \n          schema:\n            type: array\n            items:\n              type: string\n              enum:\n                - ALL\n                - NONE\n            default: ALL\n      responses:\n        '200':\n          description: the requested trip\n          headers:\n            Cache-Control:\n              schema:\n                type: string\n                default: 'public, max-age=10000'\n                description: \u003e-\n                  A trip resource is fairly persistent and has a medium time to live to allow short-term caching.\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  warnings:\n                    $ref: '#/components/schemas/WarningMessageList'\n                  trip:\n                    $ref: '#/components/schemas/Trip'\n        '400':\n          description: bad input parameters\n          content:\n            \"application/problem+json\":\n              schema:\n                $ref: '#/components/schemas/Problem'\n\n  '/trips-collection/{tripsCollectionId}':\n    get:\n      tags:\n        - Trips\n      summary: Returns a collection of trips for a specified origin and destination (and via).\n      description: \u003e-\n        The unique codes of the origin and\n        destination can be resolved using the locations service.\n      operationId: getTripsCollectionId\n      parameters:\n        - name: Access-Token \n          in: header\n          description: \u003e-\n            OAuth2 token used to authenticate the consumer API. Refer to the implementation documentation \n            for information on how to get a token.\n          required: true\n          schema:\n            type: string\n        - name: Accept-Language\n          in: header\n          description: \u003e-\n            Describes the set of natural languages that are preferred for localized text in the response\n            to the request (see RFC2616-sec14.4). \n            Supporting English (en) is a must.\n          schema:\n            type: string\n          required: false\n        - in: path\n          name: tripsCollectionId\n          schema:\n            type: string\n            format: uuid\n          required: true\n          description: ID of the trip to get.\n        - name: scrollContext\n          in: query\n          description: \u003e-\n            Based on a previous search-response, earlier or later connections\n            for the same trip can be retrieved by scrolling back and forth (by\n            a pointer-context). You must use the same request parameters as in\n            the original trips-request and the given values in the response for\n            either \"scrollBackContext\" or \"scrollForwardContext\" for optional\n            scrolling.\n          schema:\n            type: string\n          required: false\n        - in: query\n          name: stopBehavior\n          description: \u003e-\n            Influences what stops are to be returned in response\n            (ORIGIN_DESTINATION_ONLY returns no intermediate stops;\n            REAL_BOARDING_ALIGHTING returns all stops except virtual stops).\n          schema:\n            type: string\n            default: ORIGIN_DESTINATION_ONLY\n            enum:\n              - ORIGIN_DESTINATION_ONLY\n              - REAL_BOARDING_ALIGHTING\n        - in: query\n          name: embed\n          description: \u003e-\n            Influences whether referenced resources are returned in full or as references only. \n          schema:\n            type: array\n            items:\n              type: string\n              enum:\n                - ALL\n                - TRIPS\n                - TRIPS.LOCATIONS\n                - NONE\n            default: ALL\n      responses:\n        '200':\n          description: Trip(s) found   \n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  warnings:\n                    $ref: '#/components/schemas/WarningMessageList'\n                  id:\n                    type: string\n                    format: uuid\n                  tripsCollection:\n                    type: array\n                    items:\n                      $ref: '#/components/schemas/Trip'\n                  scrollBackContext:\n                    type: string\n                    description: \u003e-\n                      Scroll reference for the current response to scroll backward. \n                      (Value depends on underlying system.)\n                  scrollForwardContext:\n                    type: string\n                    description: \u003e-\n                      Scroll reference for the current response to scroll forward.\n                      (Value depends on underlying system.)\n                  links:\n                    type: array\n                    items:\n                      $ref: '#/components/schemas/Link'\n                required:\n                  - id\n                  - tripsCollection\n          headers:\n            Content-Language:\n              schema:\n                type: string\n                description: \u003e-\n                  The language of translatable strings in the response (see RFC2616-sec14.12).\n        '400':\n          description: Bad request\n          content:\n            \"application/problem+json\":\n              schema:\n                $ref: '#/components/schemas/Problem'\n        '401':\n          description: Unauthorized\n        '403':\n          description: Forbidden\n        '404':\n          description: Not Found\n        '500':\n          description: Internal server error\n          content:\n            \"application/problem+json\":\n              schema:\n                $ref: '#/components/schemas/Problem'\n        '501':\n          description: Not implemented\n\n  /trips-collection:\n    post:\n      tags:\n        - Trips\n      summary: Returns a collection trips for a specified origin and destination (and via). \n      description:\n        The unique codes of the origin and\n        destination can be resolved using the locations service.\n      operationId: postTripsCollection\n      parameters:\n        - name: Access-Token \n          in: header\n          description: \u003e-\n            OAuth2 token used to authenticate the consumer API. Refer to the implementation documentation\n            for information on how to get a token.\n          required: true\n          schema:\n            type: string\n        - name: Accept-Language\n          in: header\n          description: \u003e-\n            Describes the set of natural languages that are preferred as a\n            response to the request (see RFC2616-sec14.4).\n          schema:\n            type: string\n          required: false\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/TripRequest'\n      responses:\n        '200':\n          description: Trip(s) found\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  warnings:\n                    $ref: '#/components/schemas/WarningMessageList'\n                  id:\n                    type: string\n                    format: uuid\n                  tripsCollection:\n                    type: array\n                    items:\n                      $ref: '#/components/schemas/Trip'\n                  scrollBackContext:\n                    type: string\n                    description: \u003e-\n                      Scroll reference for the current response to scroll backward. \n                      (Value depends on underlying system.)\n                  scrollForwardContext:\n                    type: string\n                    description: \u003e-\n                      Scroll reference for the current response to scroll forward.\n                      (Value depends on underlying system.)\n                  links:\n                    type: array\n                    items:\n                      $ref: '#/components/schemas/Link'\n                required:\n                  - id\n                  - tripsCollection\n          headers:\n            Content-Language:\n              schema:\n                type: string\n                description: \u003e-\n                  The language of translatable strings in the response (see RFC2616-sec14.12).\n        '400':\n          description: Bad request\n          content:\n            \"application/problem+json\":\n              schema:\n                $ref: '#/components/schemas/Problem'\n        '401':\n          description: Unauthorized\n        '403':\n          description: Forbidden\n        '404':\n          description: Not Found\n        '500':\n          description: Internal server error\n          content:\n            \"application/problem+json\":\n              schema:\n                $ref: '#/components/schemas/Problem'\n        '501':\n          description: Not implemented\n\n  /trip-offers-collection/{tripOffersCollectionId}:\n    get:\n      tags:\n        - Offers\n      summary: Returns different offers and trips for a specified origin and destination (and via). \n      description:\n        The unique codes of the origin and destination can be resolved using the locations service.\n      operationId: getTripOffersCollectionId\n      parameters:\n        - name: Access-Token \n          in: header\n          description: \u003e-\n            OAuth2 token used to authenticate the consumer API. Refer to the implementation documentation\n            for information on how to get a token.\n          required: true\n          schema:\n            type: string\n        - name: Accept-Language\n          in: header\n          description: \u003e-\n            Describes the set of natural languages that are preferred for localized text in the response\n            to the request (see RFC2616-sec14.4). \n            Supporting English (en) is a must.\n          schema:\n            type: string\n          required: false\n        - in: path\n          name: tripOffersCollectionId\n          schema:\n            type: string\n            format: uuid\n          required: true\n          description: ID of the trip to get.\n        - name: scrollContext\n          in: query\n          description: \u003e-\n            Based on a previous search-response, earlier or later connections\n            for the same trip can be retrieved by scrolling back and forth (by\n            a pointer-context). You must use the same request parameters as in\n            the original trips-request and the given values in the response for\n            either \"ScrollBack-Context\" or \"ScrollForward-Context\" for optional\n            scrolling.\n          schema:\n            type: string\n          required: false\n        - in: query\n          name: stopBehavior\n          description: \u003e-\n            Influences what stops are to be returned in response\n            (ORIGIN_DESTINATION_ONLY returns no intermediate stops within a segment;\n            ALL_STOPS returns additionally intermediate stops within segments).\n          schema:\n            type: string\n            default: ORIGIN_DESTINATION_ONLY\n            enum:\n              - ORIGIN_DESTINATION_ONLY\n              - ALL_STOPS                    \n        - in: query\n          name: embed\n          description: \u003e-\n            Influences whether referenced resources are returned in full or as references only. \n          schema:\n            type: array\n            items:\n              type: string\n              enum:\n                - ALL\n                - TRIPOFFERS\n                - TRIPOFFERS.TRIPS\n                - TRIPOFFERS.TRIPS.LOCATIONS\n                - TRIPOFFERS.OFFERS\n                - TRIPOFFERS.OFFERS.OFFERPARTS\n                - TRIPOFFERS.PASSENGERS\n                - NONE\n            default: [ALL]\n      responses:\n        '200':\n          description: Trip Offer Collection(s) found\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  warnings:\n                     $ref: '#/components/schemas/WarningMessageList'\n                  id:\n                    type: string\n                    format: uuid\n                  tripOffers:\n                    type: array\n                    items:\n                      $ref: '#/components/schemas/TripOffer'\n                  scrollBackContext:\n                    type: string\n                    description: \u003e-\n                      Scroll reference for the current response to scroll backward. (Value\n                      depends on underlying system.)\n                  scrollForwardContext:\n                    type: string\n                    description: \u003e-\n                      Scroll reference for the current response to scroll forward.\n                      (Value depends on underlying system.)\n                  links:\n                    type: array\n                    items:\n                      $ref: '#/components/schemas/Link'\n                required:\n                  - id\n                  - tripOffers\n          headers:\n            Content-Language:\n              schema:\n                type: string\n                description: \u003e-\n                  The language of translatable strings in the response (see RFC2616-sec14.12).\n        '400':\n          description: Bad request\n          content:\n            \"application/problem+json\":\n              schema:\n                $ref: '#/components/schemas/Problem'\n        '401':\n          description: Unauthorized\n        '403':\n          description: Forbidden\n        '404':\n          description: Not Found\n        '500':\n          description: Internal server error\n          content:\n            \"application/problem+json\":\n              schema:\n                $ref: '#/components/schemas/Problem'\n        '501':\n          description: Not implemented\n          \n  /trip-offers-collection:\n    post:\n      tags:\n        - Offers\n      summary: Returns trip offers for origin and destination (and via) locations. \n      operationId: postTripOffersCollection\n      parameters:\n        - name: Access-Token \n          in: header\n          description: \u003e-\n            OAuth2 token used to authenticate the consumer API. Refer to the implementation documentation\n            for information on how to get a token.\n          required: true\n          schema:\n            type: string\n        - name: Accept-Language\n          in: header\n          description: \u003e-\n            Describes the set of natural languages that are preferred as a\n            response to the request (see RFC2616-sec14.4).\n          schema:\n            type: string\n          required: false\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/TripOfferRequest'\n      responses:\n        '200':\n          description: Collection of trip offers found\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  warnings:\n                    $ref: '#/components/schemas/WarningMessageList'\n                  id:\n                    type: string\n                    format: uuid\n                  tripOffers:\n                    type: array\n                    items:\n                      $ref: '#/components/schemas/TripOffer'\n                  scrollBackContext:\n                    type: string\n                    description: \u003e-\n                      Scroll reference for the current response to scroll backward. (Value\n                      depends on underlying system.)\n                  scrollForwardContext:\n                    type: string\n                    description: \u003e-\n                      Scroll reference for the current response to scroll forward.\n                      (Value depends on underlying system.)\n                  links:\n                    type: array\n                    items:\n                      $ref: '#/components/schemas/Link'\n                required:\n                  - id\n                  - tripOffers\n          headers:\n            Content-Language:\n              schema:\n                type: string\n                description: \u003e-\n                  The language of translatable strings in the response (see RFC2616-sec14.12).\n        '400':\n          description: Bad request\n          content:\n            \"application/problem+json\":\n              schema:\n                $ref: '#/components/schemas/Problem'\n        '401':\n          description: Unauthorized\n        '403':\n          description: Forbidden\n        '404':\n          description: Not Found\n        '500':\n          description: Internal server error        \n          content:\n            \"application/problem+json\":\n              schema:\n                $ref: '#/components/schemas/Problem'\n        '501':\n          description: Not implemented\n\n  /trip-offers/{tripOfferId}:\n    get:\n      tags:\n        - Offers\n      summary: Returns different offers for a specified tripOfferId.\n      operationId: getTripOffersId\n      parameters:\n        - name: Access-Token \n          in: header\n          description: \u003e-\n            OAuth2 token used to authenticate the consumer API. Refer to the implementation documentation\n            for information on how to get a token.\n          required: true\n          schema:\n            type: string\n        - name: Accept-Language\n          in: header\n          description: \u003e-\n            Describes the set of natural languages that are preferred for localized text in the response \n            to the request (see RFC2616-sec14.4). \n            Supporting English (en) is a must.\n          schema:\n            type: string\n          required: false  \n        - in: path\n          name: tripOfferId\n          schema:\n            type: string\n            format: uuid\n          required: true\n          description: ID of the trip to get.\n        - in: query\n          name: embed\n          description: \u003e-\n            Influences whether referenced resources are returned in full or as references only. \n          schema:\n            type: array\n            items:\n              type: string\n              enum:\n                - ALL              \n                - TRIPS\n                - TRIPS.LOCATIONS\n                - OFFERS\n                - OFFERS.OFFERPARTS\n                - PASSENGERS\n                - NONE\n              default: ALL\n      responses:\n        '200':\n          description: Trip offer found\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  warnings:\n                    $ref: '#/components/schemas/WarningMessageList'\n                  tripOffer:\n                    $ref: '#/components/schemas/TripOffer'\n          headers:\n            Content-Language:\n              schema:\n                type: string\n                description: \u003e-\n                  The language of translatable strings in the response (see RFC2616-sec14.12).\n        '400':\n          description: Bad request\n          content:\n            \"application/problem+json\":\n              schema:\n                $ref: '#/components/schemas/Problem'\n        '401':\n          description: Unauthorized\n        '403':\n          description: Forbidden\n        '404':\n          description: Not Found\n        '500':\n          description: Internal server error\n          content:\n            \"application/problem+json\":\n              schema:\n                $ref: '#/components/schemas/Problem'\n        '501':\n          description: Not implemented\n   \n  '/offers/{offerId}':\n    get:\n      tags:\n        - Offers\n      summary: Returns an offer fpr the id requested.\n      operationId: getOffersId\n      parameters:\n        - name: Access-Token \n          in: header\n          description: \u003e-\n            OAuth2 token used to authenticate the consumer API. Refer to the implementation documentation\n            for information on how to get a token.\n          required: true\n          schema:\n            type: string\n        - name: Accept-Language\n          in: header\n          description: \u003e-\n            Describes the set of natural languages that are preferred for localized text in the response\n            to the request (see RFC2616-sec14.4). \n            Supporting English (en) is a must.\n          schema:\n            type: string\n          required: false\n        - in: path\n          name: offerId\n          schema:\n            type: string\n            format: uuid\n          required: true\n          description: ID of the trip to get.\n        - in: query\n          name: embed\n          description: \u003e-\n            Influences whether referenced resources are returned in full or as references only.\n          schema:\n            type: array\n            items:\n              type: string\n              enum:\n                - ALL\n                - OFFERPARTS\n                - TRIP\n                - TRIP.LOCATIONS\n                - NONE\n              default: ALL\n      responses:\n        '200':\n          description: Offer found\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  warnings:\n                    $ref: '#/components/schemas/WarningMessageList'\n                  offer:\n                    $ref: '#/components/schemas/Offer'\n          headers:\n            Content-Language:\n              schema:\n                type: string\n                description: \u003e-\n                  The language of translatable strings in the response (see RFC2616-sec14.12).\n        '400':\n          description: Bad request\n          content:\n            \"application/problem+json\":\n              schema:\n                $ref: '#/components/schemas/Problem'\n        '401':\n          description: Unauthorized\n        '403':\n          description: Forbidden\n        '404':\n          description: Not Found\n        '500':\n          description: Internal server error\n          content:\n            \"application/problem+json\":\n              schema:\n                $ref: '#/components/schemas/Problem'\n        '501':\n          description: Not implemented\n         \n  '/offers/{offerId}/passengers/{passengerId}':\n    get:\n      tags:\n        - Passengers\n      summary: Returns the passenger's information at offer process step.\n      operationId: getOfferPassengersId\n      parameters:\n        - name: Access-Token \n          in: header\n          description: \u003e-\n            OAuth2 token used to authenticate the consumer API. Refer to the implementation documentation\n            for information on how to get a token.\n          required: true\n          schema:\n            type: string\n        - name: Accept-Language\n          in: header\n          description: \u003e-\n            Describes the set of natural languages that are preferred for localized text in the response\n            to the request (see RFC2616-sec14.4). \n            Supporting English (en) is a must.\n          schema:\n            type: string\n          required: false\n        - in: path\n          name: offerId\n          schema:\n            type: string\n            format: uuid\n          required: true\n          description: ID of the offer the passenger is in.\n        - in: path\n          name: passengerId\n          schema:\n            type: string\n            format: uuid\n          required: true\n          description: ID of the passenger to get.\n      responses:\n        '200':\n          description: Passenger found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Passenger'\n          headers:\n            Content-Language:\n              schema:\n                type: string\n                description: \u003e-\n                  The language of translatable strings in the response (see RFC2616-sec14.12).\n        '400':\n          description: Bad request\n          content:\n            \"application/problem+json\":\n              schema:\n                $ref: '#/components/schemas/Problem'\n        '401':\n          description: Unauthorized\n        '403':\n          description: Forbidden\n        '404':\n          description: Not Found\n        '500':\n          description: Internal server error\n          content:\n            \"application/problem+json\":\n              schema:\n                $ref: '#/components/schemas/Problem'\n        '501':\n          description: Not implemented\n    patch:\n      tags:\n        - Passengers\n      summary: Allows updating a passenger's information at offer step.\n      operationId: patchOfferPassenger\n      parameters:\n        - name: Access-Token \n          in: header\n          description: \u003e-\n            OAuth2 token used to authenticate the consumer API. Refer to the implementation documentation\n            for information on how to get a token.\n          required: true\n          schema:\n            type: string\n        - name: Accept-Language\n          in: header\n          description: \u003e-\n            Describes the set of natural languages that are preferred for localized text in the response\n            to the request (see RFC2616-sec14.4). \n            Supporting English (en) is a must.\n          schema:\n            type: string\n          required: false\n        - in: path\n          name: offerId\n          schema:\n            type: string\n            format: uuid\n          required: true\n          description: ID of the offer the passenger is in.\n        - in: path\n          name: passengerId\n          schema:\n            type: string\n            format: uuid\n          required: true\n          description: ID of the passenger to get.\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Passenger'\n      responses:\n        '200':\n          description: Passenger successfully patched\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Passenger'\n          headers:\n            Content-Language:\n              schema:\n                type: string\n                description: \u003e-\n                  The language of translatable strings in the response (see RFC2616-sec14.12).\n        '400':\n          description: Bad request\n          content:\n            \"application/problem+json\":\n              schema:\n                $ref: '#/components/schemas/Problem'\n        '401':\n          description: Unauthorized\n        '403':\n          description: Forbidden\n        '404':\n          description: Not Found\n        '500':\n          description: Internal server error\n          content:\n            \"application/problem+json\":\n              schema:\n                $ref: '#/components/schemas/Problem'\n        '501':\n          description: Not implemented\n  \n  '/bookings/{bookingId}/passengers/{passengerId}':\n    get:\n      tags:\n        - Passengers\n      summary: Returns the passenger's information at booking step.\n      operationId: getBookingPassengersId\n      parameters:\n        - name: Access-Token \n          in: header\n          description: \u003e-\n            OAuth2 token used to authenticate the consumer API. Refer to the implementation documentation\n            for information on how to get a token.\n          required: true\n          schema:\n            type: string\n        - name: Accept-Language\n          in: header\n          description: \u003e-\n            Describes the set of natural languages that are preferred for localized text in the response\n            to the request (see RFC2616-sec14.4). \n            Supporting English (en) is a must.\n          schema:\n            type: string\n          required: false\n        - in: path\n          name: bookingId\n          schema:\n            type: string\n            format: uuid\n          required: true\n          description: ID of the booking the passenger is in.\n        - in: path\n          name: passengerId\n          schema:\n            type: string\n            format: uuid\n          required: true\n          description: ID of the passenger to get.\n      responses:\n        '200':\n          description: Passenger found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Passenger'\n          headers:\n            Content-Language:\n              schema:\n                type: string\n                description: \u003e-\n                  The language of translatable strings in the response (see RFC2616-sec14.12).\n        '400':\n          description: Bad request\n          content:\n            \"application/problem+json\":\n              schema:\n                $ref: '#/components/schemas/Problem'\n        '401':\n          description: Unauthorized\n        '403':\n          description: Forbidden\n        '404':\n          description: Not Found\n        '500':\n          description: Internal server error\n          content:\n            \"application/problem+json\":\n              schema:\n                $ref: '#/components/schemas/Problem'\n        '501':\n          description: Not implemented\n    patch:\n      tags:\n        - Passengers\n      summary: Allows updating a passenger's information at booking step.\n      operationId: patchBookingPassenger\n      parameters:\n        - name: Access-Token \n          in: header\n          description: \u003e-\n            OAuth2 token used to authenticate the consumer API. Refer to the implementation documentation\n            for information on how to get a token.\n          required: true\n          schema:\n            type: string\n        - name: Accept-Language\n          in: header\n          description: \u003e-\n            Describes the set of natural languages that are preferred for localized text in the response\n            to the request (see RFC2616-sec14.4). \n            Supporting English (en) is a must.\n          schema:\n            type: string\n          required: false\n        - in: path\n          name: bookingId\n          schema:\n            type: string\n            format: uuid\n          required: true\n          description: ID of the booking the passenger is in.\n        - in: path\n          name: passengerId\n          schema:\n            type: string\n            format: uuid\n          required: true\n          description: ID of the passenger to get.\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Passenger'\n      responses:\n        '200':\n          description: Passenger successfully patched\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Passenger'\n          headers:\n            Content-Language:\n              schema:\n                type: string\n                description: \u003e-\n                  The language of translatable strings in the response (see RFC2616-sec14.12).\n        '400':\n          description: Bad request\n          content:\n            \"application/problem+json\":\n              schema:\n                $ref: '#/components/schemas/Problem'\n        '401':\n          description: Unauthorized\n        '403':\n          description: Forbidden\n        '404':\n          description: Not Found\n        '500':\n          description: Internal server error\n          content:\n            \"application/problem+json\":\n              schema:\n                $ref: '#/components/schemas/Problem'\n        '501':\n          description: Not implemented\n          \n  '/products/{productId}':\n    get:\n      tags:\n        - Products\n      summary: Returns a product for the id provided.\n      operationId: getProductsId\n      parameters:\n        - name: Access-Token \n          in: header\n          description: \u003e-\n            OAuth2 token used to authenticate the consumer API. Refer to the implementation documentation\n            for information on how to get a token.\n          required: true\n          schema:\n            type: string\n        - name: Accept-Language\n          in: header\n          description: \u003e-\n            Describes the set of natural languages that are preferred for localized text in the response\n            to the request (see RFC2616-sec14.4). \n            Supporting English (en) is a must.\n          schema:\n            type: string\n          required: false\n        - in: path\n          name: productId\n          schema:\n            type: string\n            description: unique and opaque ID of the product\n          required: true\n          description: ID of the product to get.\n      responses:\n        '200':\n          description: Product found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Product'\n          headers:\n            Cache-Control:\n              schema:\n                type: string\n                default: 'public, max-age=43200'\n                description: \u003e-\n                  A product resource has a long time to live to allow long-term caching. Any update of the product \n                  information will lead to the creation of a new resource.\n            Content-Language:\n              schema:\n                type: string\n                description: \u003e-\n                  The language of translatable strings in the response (see RFC2616-sec14.12).\n        '400':\n          description: Bad request\n          content:\n            \"application/problem+json\":\n              schema:\n                $ref: '#/components/schemas/Problem'\n        '401':\n          description: Unauthorized\n        '403':\n          description: Forbidden\n        '404':\n          description: Not Found\n        '500':\n          description: Internal server error\n          content:\n            \"application/problem+json\":\n              schema:\n                $ref: '#/components/schemas/Problem'\n        '501':\n          description: Not implemented\n          \n  '/offers/{offerId}/admissions/{admissionId}':\n    get:\n      tags:\n        - Offer Parts\n      summary: Returns an admission for the ids provided.\n      operationId: getAdmissionId\n      parameters:\n        - name: Access-Token \n          in: header\n          description: \u003e-\n            OAuth2 token used to authenticate the consumer API. Refer to the implementation documentation\n            for information on how to get a token.\n          required: true\n          schema:\n            type: string\n        - name: Accept-Language\n          in: header\n          description: \u003e-\n            Describes the set of natural languages that are preferred for localized text in the response\n            to the request (see RFC2616-sec14.4). \n            Supporting English (en) is a must.\n          schema:\n            type: string\n          required: false\n        - in: path\n          name: offerId\n          schema:\n            type: string\n            format: uuid\n          required: true\n          description: ID of the offer the offerPart is part of.\n        - in: path\n          name: admissionId\n          schema:\n            type: string\n            format: uuid\n          required: true\n          description: ID of the admission to get.\n      responses:\n        '200':\n          description: Admission found\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  warnings:\n                    $ref: '#/components/schemas/WarningMessageList'\n                  admission:\n                    $ref: '#/components/schemas/Admission'\n          headers:\n            Content-Language:\n              schema:\n                type: string\n                description: \u003e-\n                  The language of translatable strings in the response (see RFC2616-sec14.12).\n        '400':\n          description: Bad request\n          content:\n            \"application/problem+json\":\n              schema:\n                $ref: '#/components/schemas/Problem'\n        '401':\n          description: Unauthorized\n        '403':\n          description: Forbidden\n        '404':\n          description: Not Found\n        '500':\n          description: Internal server error\n          content:\n            \"application/problem+json\":\n              schema:\n                $ref: '#/components/schemas/Problem'\n        '501':\n          description: Not implemented\n\n  '/offers/{offerId}/reservations/{reservationId}':\n    get:\n      tags:\n        - Offer Parts\n      summary: Returns a reservation for the ids provided.\n      operationId: getReservationsId\n      parameters:\n        - name: Access-Token \n          in: header\n          description: \u003e-\n            OAuth2 token used to authenticate the consumer API. Refer to the implementation documentation\n            for information on how to get a token.\n          required: true\n          schema:\n            type: string\n        - name: Accept-Language\n          in: header\n          description: \u003e-\n            Describes the set of natural languages that are preferred for localized text in the response\n            to the request (see RFC2616-sec14.4). \n            Supporting English (en) is a must.\n          schema:\n            type: string\n          required: false\n        - in: path\n          name: offerId\n          schema:\n            type: string\n            format: uuid\n          required: true\n          description: ID of the offer the offerPart is part of.\n        - in: path\n          name: reservationId\n          schema:\n            type: string\n            format: uuid\n          required: true\n          description: ID of the reservation to get.\n      responses:\n        '200':\n          description: Reservation found\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  warnings:\n                    $ref: '#/components/schemas/WarningMessageList'\n                  reservation:\n                    $ref: '#/components/schemas/Reservation'\n          headers:\n            Content-Language:\n              schema:\n                type: string\n                description: \u003e-\n                  The language of translatable strings in the response (see RFC2616-sec14.12).\n        '400':\n          description: Bad request\n          content:\n            \"application/problem+json\":\n              schema:\n                $ref: '#/components/schemas/Problem'\n        '401':\n          description: Unauthorized\n        '403':\n          description: Forbidden\n        '404':\n          description: Not Found\n        '500':\n          description: Internal server error\n          content:\n            \"application/problem+json\":\n              schema:\n                $ref: '#/components/schemas/Problem'\n        '501':\n          description: Not implemented\n    patch:\n      tags:\n        - Offer Parts\n      summary: Allows updating reservation elements.\n      description: \u003e-\n        The patch can be used to update the selection of place properties, the available places for graphical \n        displays, the selected optional place properties for a subsequent booking and the selected places from\n        a graphical display. The update response will show the available/accepted properties. An update with\n        empty available places will update the available places list in the reply.\n      operationId: patchReservationId\n      parameters:\n        - name: Access-Token \n          in: header\n          description: \u003e-\n            OAuth2 token used to authenticate the consumer API. Refer to the implementation documentation\n            for information on how to get a token.\n          required: true\n          schema:\n            type: string\n        - name: Accept-Language\n          in: header\n          description: \u003e-\n            Describes the set of natural languages that are preferred for localized text in the response\n            to the request (see RFC2616-sec14.4). \n            Supporting English (en) is a must.\n          schema:\n            type: string\n          required: false\n        - in: path\n          name: offerId\n          schema:\n            type: string\n            format: uuid\n          required: true\n          description: ID of the offer to patch.\n        - in: path\n          name: reservationId\n          schema:\n            type: string\n            format: uuid\n          required: true\n          description: ID of the reservation to patch.\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/ReservationPatch'\n      responses:\n        '200':\n          description: Place successfully selected\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  warnings:\n                    $ref: '#/components/schemas/WarningMessageList'\n                  reservation:\n                    $ref: '#/components/schemas/Reservation'\n          headers:\n            Content-Language:\n              schema:\n                type: string\n                description: \u003e-\n                  The language of translatable strings in the response (see RFC2616-sec14.12).\n        '400':\n          description: Bad request\n          content:\n            \"application/problem+json\":\n              schema:\n                $ref: '#/components/schemas/Problem'\n        '401':\n          description: Unauthorized\n        '403':\n          description: Forbidden\n        '404':\n          description: Not Found\n        '500':\n          description: Internal server error\n          content:\n            \"application/problem+json\":\n              schema:\n                $ref: '#/components/schemas/Problem'\n        '501':\n          description: Not implemented        \n  \n  '/offers/{offerId}/ancillaries/{ancillaryId}':\n    get:\n      tags:\n        - Offer Parts\n      summary: Returns an ancillary for the ids provided.\n      operationId: getAncillariesId\n      parameters:\n        - name: Access-Token \n          in: header\n          description: \u003e-\n            OAuth2 token used to authenticate the consumer API. Refer to the implementation documentation\n            for information on how to get a token.\n          required: true\n          schema:\n            type: string\n        - name: Accept-Language\n          in: header\n          description: \u003e-\n            Describes the set of natural languages that are preferred for localized text in the response\n            to the request (see RFC2616-sec14.4). \n            Supporting English (en) is a must.\n          schema:\n            type: string\n          required: false\n        - in: path\n          name: offerId\n          schema:\n            type: string\n            format: uuid\n          required: true\n          description: ID of the offer the offerPart is part of.\n        - in: path\n          name: ancillaryId\n          schema:\n            type: string\n            format: uuid\n          required: true\n          description: ID of the ancillary to get.\n      responses:\n        '200':\n          description: Ancillary found\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  warnings:\n                    $ref: '#/components/schemas/WarningMessageList'\n                  ancillary:\n                    $ref: '#/components/schemas/Ancillary'\n          headers:\n            Content-Language:\n              schema:\n                type: string\n                description: \u003e-\n                  The language of translatable strings in the response (see RFC2616-sec14.12).\n        '400':\n          description: Bad request\n          content:\n            \"application/problem+json\":\n              schema:\n                $ref: '#/components/schemas/Problem'\n        '401':\n          description: Unauthorized\n        '403':\n          description: Forbidden\n        '404':\n          description: Not Found\n        '500':\n          description: Internal server error\n          content:\n            \"application/problem+json\":\n              schema:\n                $ref: '#/components/schemas/Problem'\n        '501':\n          description: Not implemented\n\n  '/offers/{offerId}/fares/{fareId}':\n    get:\n      tags:\n        - Offer Parts\n      summary: Returns a fare for the ids provided.\n      description: \u003e-\n        For the fares only the start and the end location are considered.\n        Fares are only returned if the API is called as allocator with the correct grants.\n        Otherwise a forbidden message is returned. \n      operationId: getFaresId\n      parameters:\n        - name: Access-Token \n          in: header\n          description: \u003e-\n            OAuth2 token used to authenticate the consumer API. Refer to the implementation documentation\n            for information on how to get a token.\n          required: true\n          schema:\n            type: string\n        - name: Accept-Language\n          in: header\n          description: \u003e-\n            Describes the set of natural languages that are preferred for localized text in the response\n            to the request (see RFC2616-sec14.4). \n            Supporting English (en) is a must.\n          schema:\n            type: string\n          required: false\n        - in: path\n          name: offerId\n          schema:\n            type: string\n            format: uuid\n          required: true\n          description: ID of the offer the offerPart is part of.\n        - in: path\n          name: fareId\n          schema:\n            type: string\n            format: uuid\n          required: true\n          description: ID of the fares to get.\n      responses:\n        '200':\n          description: Fare found\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  warnings:\n                    $ref: '#/components/schemas/WarningMessageList'\n                  fare:\n                    $ref: '#/components/schemas/FareOnline'\n          headers:\n            Content-Language:\n              schema:\n                type: string\n                description: \u003e-\n                  The language of translatable strings in the response (see RFC2616-sec14.12).\n        '400':\n          description: Bad request\n          content:\n            \"application/problem+json\":\n              schema:\n                $ref: '#/components/schemas/Problem'\n        '401':\n          description: Unauthorized\n        '403':\n          description: Forbidden\n        '404':\n          description: Not Found\n        '500':\n          description: Internal server error\n          content:\n            \"application/problem+json\":\n              schema:\n                $ref: '#/components/schemas/Problem'\n        '501':\n          description: Not implemented\n    patch:\n      tags:\n        - Offer Parts\n      summary: Allows updating reservation elements.\n      description: \u003e-\n        The patch can be used to update the selection of place properties, the available places for graphical \n        displays, the selected optional place properties for a subsequent booking and the selected places from\n        a graphical display. The update response will show the available/accepted properties. An update with\n        empty available places will update the available places list in the reply.\n      operationId: patchFareId\n      parameters:\n        - name: Access-Token \n          in: header\n          description: \u003e-\n            OAuth2 token used to authenticate the consumer API. Refer to the implementation documentation\n            for information on how to get a token.\n          required: true\n          schema:\n            type: string\n        - name: Accept-Language\n          in: header\n          description: \u003e-\n            Describes the set of natural languages that are preferred for localized text in the response\n            to the request (see RFC2616-sec14.4). \n            Supporting English (en) is a must.\n          schema:\n            type: string\n          required: false\n        - in: path\n          name: offerId\n          schema:\n            type: string\n            format: uuid\n          required: true\n          description: ID of the offer to patch.\n        - in: path\n          name: fareId\n          schema:\n            type: string\n            format: uuid\n          required: true\n          description: ID of the fare to patch.\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/FareOnline'\n      responses:\n        '200':\n          description: Place successfully selected\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Reservation'\n          headers:\n            Content-Language:\n              schema:\n                type: string\n                description: \u003e-\n                  The language of translatable strings in the response (see RFC2616-sec14.12).\n        '400':\n          description: Bad request\n          content:\n            \"application/problem+json\":\n              schema:\n                $ref: '#/components/schemas/Problem'\n        '401':\n          description: Unauthorized\n        '403':\n          description: Forbidden\n        '404':\n          description: Not Found\n        '500':\n          description: Internal server error\n          content:\n            \"application/problem+json\":\n              schema:\n                $ref: '#/components/schemas/Problem'\n        '501':\n          description: Not implemented        \n \n  /bookings/search:\n    post:\n      tags:\n        - Bookings\n      summary: Allows to search for and find bookings based on a set of criteria.\n      description: \u003e-\n        There are searching criteria that need to be supported. by passenger \n        attributes (first name, name, date-of-birth), by booking reference (e.g. PNR, \n        Auftragsnummer) or by fulfillment reference (e.g. ticket number).\n      operationId: getBookings\n      parameters:\n        - name: Access-Token \n          in: header\n          description: \u003e-\n            OAuth2 token used to authenticate the consumer API. Refer to the implementation documentation\n            for information on how to get a token.\n          required: true\n          schema:\n            type: string\n        - name: Accept-Language\n          in: header\n          description: \u003e-\n            Describes the set of natural languages that are preferred for localized text in the response\n            to the request (see RFC2616-sec14.4). \n            Supporting English (en) is a must.\n          schema:\n            type: string\n          required: false\n        - in: query\n          name: embed\n          description: \u003e-\n            Influences whether referenced resources are returned in full or as references only.\n          schema:\n            type: array\n            items:\n              type: string\n              enum:\n                - ALL\n                - BOOKINGS\n                - BOOKINGS.BOOKEDOFFERS.TRIP\n                - BOOKINGS.BOOKEDOFFERS.TRIP.LOCATIONS\n                - BOOKINGS.BOOKEDOFFERS\n                - BOOKINGS.BOOKEDOFFERS.OFFERPARTS\n                - BOOKINGS.PASSENGERS\n                - BOOKINGS.TICKETS  \n                - NONE\n              default: ALL\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/BookingSearchParameter'          \n      responses:\n        '200':\n          description: Booking ids found\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  warnings:\n                    $ref: '#/components/schemas/WarningMessageList'\n                  searchResults:\n                    $ref: '#/components/schemas/BookingSearchReply'  \n        '400':\n          description: Bad request\n          content:\n            \"application/problem+json\":\n              schema:\n                $ref: '#/components/schemas/Problem'\n        '401':\n          description: Unauthorized\n        '403':\n          description: Forbidden\n        '404':\n          description: Not Found\n        '500':\n          description: Internal server error\n          content:\n            \"application/problem+json\":\n              schema:\n                $ref: '#/components/schemas/Problem'\n        '501':\n          description: Not implemented\n          \n  '/bookings':\n    post:\n      tags:\n        - Bookings\n      summary: Allows to create a booking based on a previously requested offer.\n      operationId: postBookings\n      parameters:\n        - name: Access-Token \n          in: header\n          description: \u003e-\n            OAuth2 token used to authenticate the consumer API. Refer to the implementation documentation\n            for information on how to get a token.\n          required: true\n          schema:\n            type: string\n        - name: Accept-Language\n          in: header\n          description: \u003e-\n            Describes the set of natural languages that are preferred as a\n            response to the request (see RFC2616-sec14.4). \n          schema:\n            type: string\n          required: false\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/BookingRequest'      \n      responses:\n        '200':\n          description: \u003e- \n            Booking prebooked\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  warnings:\n                    $ref: '#/components/schemas/WarningMessageList'\n                  booking:\n                    $ref: '#/components/schemas/Booking'\n          headers:\n            Content-Language:\n              schema:\n                type: string\n                description: \u003e-\n                  The language of translatable strings in the response (see RFC2616-sec14.12).\n        '400':\n          description: Bad request\n          content:\n            \"application/problem+json\":\n              schema:\n                $ref: '#/components/schemas/Problem'\n        '401':\n          description: Unauthorized\n        '403':\n          description: Forbidden\n        '404':\n          description: Not Found\n        '500':\n          description: Internal server error\n          content:\n            \"application/problem+json\":\n              schema:\n                $ref: '#/components/schemas/Problem'\n        '501':\n          description: Not implemented\n\n  '/bookings/{bookingId}':\n    get:\n      tags:\n        - Bookings\n      summary: Returns a booking with the id provided.\n      operationId: getBookingsId\n      parameters:\n        - name: Access-Token \n          in: header\n          description: \u003e-\n            OAuth2 token used to authenticate the consumer API. Refer to the implementation documentation\n            for information on how to get a token.\n          required: true\n          schema:\n            type: string\n        - name: Accept-Language\n          in: header\n          description: \u003e-\n            Describes the set of natural languages that are preferred for localized text in the response\n            to the request (see RFC2616-sec14.4). \n            Supporting English (en) is a must.\n          schema:\n            type: string\n          required: false\n        - in: path\n          name: bookingId\n          schema:\n            type: string\n            format: uuid\n          required: true\n          description: ID of the product to get.\n        - in: query\n          name: embed\n          description: \u003e-\n            Influences whether referenced resources are returned in full or as references only.\n          schema:\n            type: array\n            items:\n              type: string\n              enum:\n                - ALL\n                - BOOKEDOFFERS.TRIP\n                - BOOKEDOFFERS.TRIP.LOCATIONS\n                - BOOKEDOFFERS\n                - BOOKEDOFFERS.OFFERPARTS\n                - PASSENGERS\n                - TICKETS\n                - REFUND_PROPOSITIONS\n                - NONE\n              default: ALL\n      responses:\n        '200':\n          description: booking found\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  warnings:\n                    $ref: '#/components/schemas/WarningMessageList'\n                  booking:\n                    $ref: '#/components/schemas/Booking'\n          headers:\n            Content-Language:\n              schema:\n                type: string\n                description: \u003e-\n                  The language of translatable strings in the response (see RFC2616-sec14.12).\n        '400':\n          description: Bad request\n          content:\n            \"application/problem+json\":\n              schema:\n                $ref: '#/components/schemas/Problem'\n        '401':\n          description: Unauthorized\n        '403':\n          description: Forbidden\n        '404':\n          description: Not Found\n        '500':\n          description: Internal server error\n          content:\n            \"application/problem+json\":\n              schema:\n                $ref: '#/components/schemas/Problem'\n        '501':\n          description: Not implemented\n    delete:\n      tags:\n        - Bookings\n      summary: Deletes the booking with the id provided. \n      description: \u003e-\n        It is only possible before the booking is confirmed or in case of a technical problem in confirming multiple \n        independent bookings within a sales transaction. Deletes on a confirmed booking must be documented\n        and evidence on the issue must be provided on request. \n        The delete on a confirmed booking is allowed immediately after the confirmation of the booking, \n        but must be repeated according to the error handling rules in case the delete fails.\n      operationId: deleteBookingsId\n      parameters:\n        - name: Access-Token \n          in: header\n          description: \u003e-\n            OAuth2 token used to authenticate the consumer API. Refer to the implementation documentation\n            for information on how to get a token.\n          required: true\n          schema:\n            type: string\n        - in: path\n          name: bookingId\n          schema:\n            type: string\n            format: uuid\n          required: true\n          description: ID of the booking to delete.\n      responses:\n        '200':\n          description: Booking successfully cancelled\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  warnings:\n                    $ref: '#/components/schemas/WarningMessageList'\n        '400':\n          description: Bad request\n          content:\n            \"application/problem+json\":\n              schema:\n                $ref: '#/components/schemas/Problem'\n        '401':\n          description: Unauthorized\n        '403':\n          description: Forbidden\n        '404':\n          description: Not Found\n        '409':\n          description: \u003e-\n             Conflict - the state of the server or resource does not allow the action (e.g. the booking was already confirmed)\n          content:\n            \"application/problem+json\":\n              schema:\n                $ref: '#/components/schemas/Problem'          \n        '500':\n          description: Internal server error\n          content:\n            \"application/problem+json\":\n              schema:\n                $ref: '#/components/schemas/Problem'\n        '501':\n          description: Not implemented\n    patch:\n      tags:\n        - Bookings\n      summary: Allows updating the fulfillment type of the booking.\n      operationId: confirmBooking\n      parameters:\n        - name: Access-Token \n          in: header\n          description: \u003e-\n            OAuth2 token used to authenticate the consumer API. Refer to the implementation documentation\n            for information on how to get a token.\n          required: true\n          schema:\n            type: string\n        - name: Accept-Language\n          in: header\n          description: \u003e-\n            Describes the set of natural languages that are preferred for localized text in the response\n            to the request (see RFC2616-sec14.4). \n            Supporting English (en) is a must.\n          schema:\n            type: string\n          required: false\n        - in: path\n          name: bookingId\n          schema:\n            type: string\n            format: uuid\n          required: true\n          description: ID of the booking to be patched      \n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/BookingPatchRequest'\n      responses:\n        '200': \n          description: booking fulfillment type updated\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  warnings:\n                    $ref: '#/components/schemas/WarningMessageList'\n                  booking:\n                    $ref: '#/components/schemas/Booking'\n        '400':\n          description: Bad request\n          content:\n            \"application/problem+json\":\n              schema:\n                $ref: '#/components/schemas/Problem'\n        '401':\n          description: Unauthorized\n        '403':\n          description: Forbidden\n        '404':\n          description: Not Found\n        '500':\n          description: Internal server error\n          content:\n            \"application/problem+json\":\n              schema:\n                $ref: '#/components/schemas/Problem'\n        '501':\n          description: Not implemented\n   \n  '/bookings/{bookingId}/fulfillments':\n    post:\n      tags:\n        - Fulfillments\n      summary:  Triggers the fulfillment of the booking.\n      operationId: postFulfillments\n      parameters:\n        - name: Access-Token \n          in: header\n          description: \u003e-\n            OAuth2 token used to authenticate the consumer API. Refer to the implementation documentation\n            for information on how to get a token.\n          required: true\n          schema:\n            type: string\n        - name: Accept-Language\n          in: header\n          description: \u003e-\n            Describes the set of natural languages that are preferred for localized text in the response\n            to the request (see RFC2616-sec14.4). \n            Supporting English (en) is a must.\n          schema:\n            type: string\n          required: false\n        - in: path\n          name: bookingId\n          schema:\n            type: string\n            format: uuid\n          required: true\n          description: ID of the booking to be patched        \n      responses:\n        '200':\n          description: \u003e-\n            Fulfillment successfully completed\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  warnings:\n                    $ref: '#/components/schemas/WarningMessageList'\n                  fulfillments:\n                    type: array\n                    items:\n                      $ref: '#/components/schemas/Fulfillment'\n        '202': \n          description: \u003e- \n            Fulfillment successfully initiated, retrieve booking to retrieve the fulfillment documents\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  warnings:\n                    $ref: '#/components/schemas/WarningMessageList'\n        '400':\n          description: Bad request\n          content:\n            \"application/problem+json\":\n              schema:\n                $ref: '#/components/schemas/Problem'\n        '401':\n          description: Unauthorized\n        '403':\n          description: Forbidden\n        '404':\n          description: Not Found\n        '409':\n          description: \u003e-\n             Conflict - the state of the server or resource does not allow the action (e.g. the booking was not confirmed)\n          content:\n            \"application/problem+json\":\n              schema:\n                $ref: '#/components/schemas/Problem'            \n        '500':\n          description: Internal server error\n          content:\n            \"application/problem+json\":\n              schema:\n                $ref: '#/components/schemas/Problem'\n        '501':\n          description: Not implemented\n    patch:\n      tags:\n        - Fulfillments\n      summary: Allows the effective fulfillment of one ore more confirmed fulfillment. \n      operationId: patchFulfillment\n      parameters:\n        - name: Access-Token \n          in: header\n          description: \u003e-\n            OAuth2 token used to authenticate the consumer API. Refer to the implementation documentation\n            for information on how to get a token.\n          required: true\n          schema:\n            type: string\n        - name: Accept-Language\n          in: header\n          description: \u003e-\n            Describes the set of natural languages that are preferred for localized text in the response\n            to the request (see RFC2616-sec14.4). \n            Supporting English (en) is a must.\n          schema:\n            type: string\n          required: false\n        - in: path\n          name: bookingId\n          schema:\n            type: string\n            format: uuid\n          required: true\n          description: ID of the booking to be patched        \n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/FulfillmentsPatch'\n      responses:\n        '200':\n          description: \u003e-\n            Fulfillment successfully completed\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  warnings:\n                    $ref: '#/components/schemas/WarningMessageList'\n                  fulfillments:\n                    type: array\n                    items:\n                      $ref: '#/components/schemas/Fulfillment'\n        '202': \n          description: \u003e- \n            Fulfillment successfully initiated, retrieve booking to retrieve the fulfillment documents\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  warnings:\n                    $ref: '#/components/schemas/WarningMessageList'\n        '400':\n          description: Bad request\n          content:\n            \"application/problem+json\":\n              schema:\n                $ref: '#/components/schemas/Problem'\n        '401':\n          description: Unauthorized\n        '403':\n          description: Forbidden\n        '404':\n          description: Not Found\n        '409':\n          description: \u003e-\n             Conflict - the state of the server or resource does not allow the action (e.g. the booking was not confirmed)\n          content:\n            \"application/problem+json\":\n              schema:\n                $ref: '#/components/schemas/Problem'            \n        '500':\n          description: Internal server error\n          content:\n            \"application/problem+json\":\n              schema:\n                $ref: '#/components/schemas/Problem'\n        '501':\n          description: Not implemented\n          \n  '/fulfillments/{fulfillmentId}':\n    get:\n      tags:\n        - Fulfillments\n      summary: Returns the fulfillment, aka. ticket for the provided id.\n      operationId: getFulfillmentId\n      parameters:\n        - name: Access-Token \n          in: header\n          description: \u003e-\n            OAuth2 token used to authenticate the consumer API. Refer to the implementation documentation\n            for information on how to get a token.\n          required: true\n          schema:\n            type: string\n        - name: Accept-Language\n          in: header\n          description: \u003e-\n            Describes the set of natural languages that are preferred for localized text in the response\n            to the request (see RFC2616-sec14.4). \n            Supporting English (en) is a must.\n          schema:\n            type: string\n          required: false\n        - in: path\n          name: fulfillmentId\n          schema:\n            type: string\n            format: uuid\n          required: true\n          description: ID of the product to get.\n      responses:\n        '200':\n          description: fulfillment found\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  warnings:\n                    $ref: '#/components/schemas/WarningMessageList'\n                  fulfillment:\n                    $ref: '#/components/schemas/Fulfillment'\n          headers:\n            Content-Language:\n              schema:\n                type: string\n                description: \u003e-\n                  The language of translatable strings in the response (see RFC2616-sec14.12).\n        '400':\n          description: Bad request\n          content:\n            \"application/problem+json\":\n              schema:\n                $ref: '#/components/schemas/Problem'\n        '401':\n          description: Unauthorized\n        '403':\n          description: Forbidden\n        '404':\n          description: Not Found\n        '500':\n          description: Internal server error\n          content:\n            \"application/problem+json\":\n              schema:\n                $ref: '#/components/schemas/Problem'\n        '501':\n          description: Not implemented\n          \n  '/bookings/{bookingId}/refundOffers':\n    post:\n      tags:\n        - RefundOffers\n      summary: Initiates a refund process by creating a RefundOffer resource.\n      description:\n        The RefundOffer contains the required information on the potential operation. One refund offer can then be \n        accepted via a PATCH, deleted or left to die at the end of its lifetime.\n      operationId: postRefundOffersBookingId\n      parameters:\n        - name: Access-Token \n          in: header\n          description: \u003e-\n            OAuth2 token used to authenticate the consumer API. Refer to the implementation documentation\n            for information on how to get a token.\n          required: true\n          schema:\n            type: string\n        - name: Accept-Language\n          in: header\n          description: \u003e-\n            Describes the set of natural languages that are preferred for localized text in the response\n            to the request (see RFC2616-sec14.4). \n            Supporting English (en) is a must.\n          schema:\n            type: string\n          required: false\n        - in: path\n          name: bookingId\n          schema:\n            type: string\n            format: uuid\n          required: true\n          description: ID of the booking.      \n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/RefundOfferRequest'\n      responses:\n        '200': \n          description: Refund offer created\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  warnings:\n                    $ref: '#/components/schemas/WarningMessageList'\n                  refundOffersCollection:\n                    $ref: '#/components/schemas/RefundOffersCollection'\n        '400':\n          description: Bad request\n          content:\n            \"application/problem+json\":\n              schema:\n                $ref: '#/components/schemas/Problem'\n        '401':\n          description: Unauthorized\n        '403':\n          description: Forbidden\n        '404':\n          description: Not Found\n        '409':\n          description: \u003e-\n             Conflict - the state of the server or resource does not allow the action (e.g. the booking was not confirmed)\n          content:\n            \"application/problem+json\":\n              schema:\n                $ref: '#/components/schemas/Problem'            \n        '500':\n          description: Internal server error\n          content:\n            \"application/problem+json\":\n              schema:\n                $ref: '#/components/schemas/Problem'\n        '501':\n          description: Not implemented\n        \n  '/bookings/{bookingId}/refundOffers/{refundOfferId}':\n    get:\n      tags:\n        - RefundOffers\n      summary: Returns the refund offer for the ids provided.\n      operationId: getRefundOffersId\n      parameters:\n        - name: Access-Token \n          in: header\n          description: \u003e-\n            OAuth2 token used to authenticate the consumer API. Refer to the implementation documentation\n            for information on how to get a token.\n          required: true\n          schema:\n            type: string\n        - name: Accept-Language\n          in: header\n          description: \u003e-\n            Describes the set of natural languages that are preferred for localized text in the response\n            to the request (see RFC2616-sec14.4). \n            Supporting English (en) is a must.\n          schema:\n            type: string\n          required: false\n        - in: path\n          name: bookingId\n          schema:\n            type: string\n            format: uuid\n          required: true\n          description: ID of the booking  \n        - in: path\n          name: refundOfferId\n          schema:\n            type: string\n            format: uuid\n          required: true\n          description: ID of the refund offer to get.\n      responses:\n        '200':\n          description: RefundOffer found\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  warnings:\n                    $ref: '#/components/schemas/WarningMessageList'\n                  refundOffer:\n                    $ref: '#/components/schemas/RefundOffer'\n          headers:\n            Content-Language:\n              schema:\n                type: string\n                description: \u003e-\n                  The language of translatable strings in the response (see RFC2616-sec14.12).\n        '400':\n          description: Bad request\n          content:\n            \"application/problem+json\":\n              schema:\n                $ref: '#/components/schemas/Problem'\n        '401':\n          description: Unauthorized\n        '403':\n          description: Forbidden\n        '404':\n          description: Not Found\n        '500':\n          description: Internal server error\n          content:\n            \"application/problem+json\":\n              schema:\n                $ref: '#/components/schemas/Problem'\n        '501':\n          description: Not implemented\n    patch:\n      tags:\n        - RefundOffers\n      summary: Allows to accept and confirm a refund offer.\n      operationId: patchRefundOffersId\n      parameters:\n        - name: Access-Token \n          in: header\n          description: \u003e-\n            OAuth2 token used to authenticate the consumer API. Refer to the implementation documentation\n            for information on how to get a token.\n          required: true\n          schema:\n            type: string\n        - name: Accept-Language\n          in: header\n          description: \u003e-\n            Describes the set of natural languages that are preferred for localized text in the response\n            to the request (see RFC2616-sec14.4). \n            Supporting English (en) is a must.\n          schema:\n            type: string\n          required: false\n        - in: path\n          name: bookingId\n          schema:\n            type: string\n            format: uuid\n          required: true\n          description: ID of the offer the offerPart is part of.      \n        - in: path\n          name: refundOfferId\n          schema:\n            type: string\n            format: uuid\n          required: true\n          description: ID of the product to get.\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/RefundOfferConfirm'\n      responses:\n        '200':\n          description: RefundOffer confirmed\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  warnings:\n                    $ref: '#/components/schemas/WarningMessageList'\n                  refundOffer:\n                    $ref: '#/components/schemas/RefundOffer'\n          headers:\n            Content-Language:\n              schema:\n                type: string\n                description: \u003e-\n                  The language of translatable strings in the response (see RFC2616-sec14.12).\n        '400':\n          description: Bad request\n          content:\n            \"application/problem+json\":\n              schema:\n                $ref: '#/components/schemas/Problem'\n        '401':\n          description: Unauthorized\n        '403':\n          description: Forbidden\n        '404':\n          description: Not Found\n        '500':\n          description: Internal server error\n          content:\n            \"application/problem+json\":\n              schema:\n                $ref: '#/components/schemas/Problem'\n        '501':\n          description: Not implemented\n    delete:\n      tags:\n        - RefundOffers\n      summary: Deletes a refundOffer without waiting for expiry.\n      operationId: deleteRefundOffersId\n      parameters:\n        - name: Access-Token \n          in: header\n          description: \u003e-\n            OAuth2 token used to authenticate the consumer API. Refer to the implementation documentation\n            for information on how to get a token.\n          required: true\n          schema:\n            type: string\n        - in: path\n          name: bookingId\n          schema:\n            type: string\n            format: uuid\n          required: true\n          description: ID of the offer the offerPart is part of.      \n        - in: path\n          name: refundOfferId\n          schema:\n            type: string\n            format: uuid\n          required: true\n          description: ID of the product to delete.\n      responses:\n        '200':\n          description: RefundOffer removed\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  warnings:\n                    $ref: '#/components/schemas/WarningMessageList'\n                  fulfillments:\n                    type: array\n                    items:\n                      $ref: '#/components/schemas/Fulfillment'\n          headers:\n            Content-Language:\n              schema:\n                type: string\n                description: \u003e-\n                  The language of translatable strings in the response (see RFC2616-sec14.12).\n        '400':\n          description: Bad request\n          content:\n            \"application/problem+json\":\n              schema:\n                $ref: '#/components/schemas/Problem'\n        '401':\n          description: Unauthorized\n        '403':\n          description: Forbidden\n        '404':\n          description: Not Found\n        '500':\n          description: Internal server error\n          content:\n            \"application/problem+json\":\n              schema:\n                $ref: '#/components/schemas/Problem'\n        '501':\n          description: Not implemented\n          \n  '/bookings/{bookingId}/exchangeOffers':\n    post:\n      tags:\n        - ExchangeOffers\n      summary: Initiates an exchange process by creating a ExchangeOffer resource.\n      description: \u003e-\n        The ExchangeOffer contains the needed information on the potential operation. \n        The proposition can then be accepted via a PATCH, deleted or left to die at the end of its lifetime. \n      operationId: postExchangeOffersBookingId\n      parameters:\n        - name: Access-Token \n          in: header\n          description: \u003e-\n            OAuth2 token used to authenticate the consumer API. Refer to the implementation documentation\n            for information on how to get a token.\n          required: true\n          schema:\n            type: string\n        - name: Accept-Language\n          in: header\n          description: \u003e-\n            Describes the set of natural languages that are preferred for localized text in the response\n            to the request (see RFC2616-sec14.4). \n            Supporting English (en) is a must.\n          schema:\n            type: string\n          required: false\n        - in: path\n          name: bookingId\n          schema:\n            type: string\n            format: uuid\n          required: true\n          description: ID of the offer the offerPart is part of.      \n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/ExchangeOfferRequest'\n      responses:\n        '200': \n          description: Refund offer created\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ExchangeOffersCollection'\n        '400':\n          description: Bad request\n          content:\n            \"application/problem+json\":\n              schema:\n                $ref: '#/components/schemas/Problem'\n        '401':\n          description: Unauthorized\n        '403':\n          description: Forbidden\n        '404':\n          description: Not Found\n        '500':\n          description: Internal server error\n          content:\n            \"application/problem+json\":\n              schema:\n                $ref: '#/components/schemas/Problem'\n        '501':\n          description: Not implemented \n\n  '/bookings/{bookingId}/exchangeOffers/{exchangeOfferId}':   \n    get:\n      tags:\n        - ExchangeOffers\n      summary: Returns the refund offer for the id provided.\n      operationId: getExchangeOffersId\n      parameters:\n        - name: Access-Token \n          in: header\n          description: \u003e-\n            OAuth2 token used to authenticate the consumer API. Refer to the implementation documentation\n            for information on how to get a token.\n          required: true\n          schema:\n            type: string\n        - name: Accept-Language\n          in: header\n          description: \u003e-\n            Describes the set of natural languages that are preferred for localized text in the response\n            to the request (see RFC2616-sec14.4). \n            Supporting English (en) is a must.\n          schema:\n            type: string\n          required: false\n        - in: path\n          name: bookingId\n          schema:\n            type: string\n            format: uuid\n          required: true\n          description: ID of the booking  \n        - in: path\n          name: exchangeOfferId\n          schema:\n            type: string\n            format: uuid\n          required: true\n          description: ID of the refund offer to get.\n      responses:\n        '200':\n          description: ExchangeOffer found\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  warnings:\n                    $ref: '#/components/schemas/WarningMessageList'\n                  exchangeOffer:\n                    $ref: '#/components/schemas/ExchangeOffer'\n          headers:\n            Content-Language:\n              schema:\n                type: string\n                description: \u003e-\n                  The language of translatable strings in the response (see RFC2616-sec14.12).\n        '400':\n          description: Bad request\n          content:\n            \"application/problem+json\":\n              schema:\n                $ref: '#/components/schemas/Problem'\n        '401':\n          description: Unauthorized\n        '403':\n          description: Forbidden\n        '404':\n          description: Not Found\n        '500':\n          description: Internal server error\n          content:\n            \"application/problem+json\":\n              schema:\n                $ref: '#/components/schemas/Problem'\n        '501':\n          description: Not implemented  \n    patch:\n      tags:\n        - ExchangeOffers\n      summary: Allows to prebook an exchange offer. \n      operationId: patchExchangeOffersId\n      parameters:\n        - name: Access-Token \n          in: header\n          description: \u003e-\n            OAuth2 token used to authenticate the consumer API. Refer to the implementation documentation\n            for information on how to get a token.\n          required: true\n          schema:\n            type: string\n        - name: Accept-Language\n          in: header\n          description: \u003e-\n            Describes the set of natural languages that are preferred for localized text in the response\n            to the request (see RFC2616-sec14.4). \n            Supporting English (en) is a must.\n          schema:\n            type: string\n          required: false\n        - in: path\n          name: bookingId\n          schema:\n            type: string\n            format: uuid\n          required: true\n          description: ID of the booking to be exchanged.  \n        - in: path\n          name: exchangeOfferId\n          schema:\n            type: string\n            format: uuid\n          required: true\n          description: ID of the exchange offer.\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/ExchangeOfferConfirm'\n      responses:\n        '200':\n          description: Exchange successfully completed\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Exchange'\n          headers:\n            Content-Language:\n              schema:\n                type: string\n                description: \u003e-\n                  The language of translatable strings in the response (see RFC2616-sec14.12).\n        '400':\n          description: Bad request\n          content:\n            \"application/problem+json\":\n              schema:\n                $ref: '#/components/schemas/Problem'\n        '401':\n          description: Unauthorized\n        '403':\n          description: Forbidden\n        '404':\n          description: Not Found\n        '500':\n          description: Internal server error\n          content:\n            \"application/problem+json\":\n              schema:\n                $ref: '#/components/schemas/Problem'\n        '501':\n          description: Not implemented\n    delete:\n      tags:\n        - ExchangeOffers\n      summary: Deletes an exchangeOffer without waiting for expiry. \n      operationId: deleteExchangeOffersId\n      parameters:\n        - name: Access-Token \n          in: header\n          description: \u003e-\n            OAuth2 token used to authenticate the consumer API. Refer to the implementation documentation\n            for information on how to get a token.\n          required: true\n          schema:\n            type: string\n        - in: path\n          name: bookingId\n          schema:\n            type: string\n            format: uuid\n          required: true\n          description: ID of the offer the offerPart is part of.      \n        - in: path\n          name: exchangeOfferId\n          schema:\n            type: string\n            format: uuid\n          required: true\n          description: ID of the product to delete.\n      responses:\n        '200':\n          description: ExchangeOffer removed\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  warnings:\n                    $ref: '#/components/schemas/WarningMessageList'\n                  fulfillments:\n                    type: array\n                    items:\n                      $ref: '#/components/schemas/Fulfillment'\n          headers:\n            Content-Language:\n              schema:\n                type: string\n                description: \u003e-\n                  The language of translatable strings in the response (see RFC2616-sec14.12).\n        '400':\n          description: Bad request\n          content:\n            \"application/problem+json\":\n              schema:\n                $ref: '#/components/schemas/Problem'\n        '401':\n          description: Unauthorized\n        '403':\n          description: Forbidden\n        '404':\n          description: Not Found\n        '500':\n          description: Internal server error\n          content:\n            \"application/problem+json\":\n              schema:\n                $ref: '#/components/schemas/Problem'\n        '501':\n          description: Not implemented\n\n  '/coachLayouts':\n    get:\n      tags:\n        - CoachLayouts \n      summary: Returns all coach layouts.\n      description: \u003e-\n        Retrieve the coach layout description needed for graphical reservation. The coach\n        layouts can either be retrieved as a complete list or specificity for a train identified via offerId and reservationId or fareId\n      operationId: getCoachLayouts\n      parameters:\n        - name: Access-Token \n          in: header\n          description: \u003e-\n            OAuth2 token used to authenticate the consumer API. Refer to the implementation documentation\n            for information on how to get a token.\n          required: true\n          schema:\n            type: string\n        - name: Accept-Language\n          in: header\n          description: \u003e-\n            Describes the set of natural languages that are preferred for localized text in the response \n            to the request (see RFC2616-sec14.4). \n            Supporting English (en) is a must.\n          schema:\n            type: string\n          required: false\n        - in: query \n          description: id of the trip to offer\n          name: offerId\n          schema:\n            type: string\n            format: uuid\n          required: false\n        - in: query \n          description: id of the reservation offer part within the offer\n          name: reservationId\n          schema:\n            type: string\n            format: uuid\n          required: false\n        - in: query \n          description: id of the fare within the offer\n          name: fareId\n          schema:\n            type: string\n            format: uuid\n          required: false          \n        - in: query\n          name: embed\n          description: \u003e-\n            Influences whether referenced resources are returned in full or as references only.\n          schema:\n            type: array\n            items:\n              type: string\n              enum:\n                - ALL\n                - LAYOUT\n                - NONE\n              default: ALL          \n      responses:\n        '200':\n          description: coach layouts\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  warnings:\n                    $ref: '#/components/schemas/WarningMessageList'\n                  selectablePlaces:\n                    $ref: '#/components/schemas/PlaceAvailability'\n                  layouts:\n                    type: array\n                    items:\n                      $ref: '#/components/schemas/CoachLayout'\n        '400':\n          description: Bad request\n          content:\n            \"application/problem+json\":\n              schema:\n                $ref: '#/components/schemas/Problem'\n        '401':\n          description: Unauthorized\n        '403':\n          description: Forbidden\n        '404':\n          description: Not Found\n        '500':\n          description: Internal server error\n          content:\n            \"application/problem+json\":\n              schema:\n                $ref: '#/components/schemas/Problem'\n        '501':\n          description: Not implemented\n\n  '/coachLayouts/{layoutId}':\n    get:\n      tags:\n        - CoachLayouts\n      summary: Returns a coach layout for a provided id.\n      description: \u003e-\n        Retrieve a coach layout description needed for graphical reservation for a given layout id.\n      operationId: getCoachLayoutsLayoutId\n      parameters:\n        - name: Access-Token\n          in: header\n          description: \u003e-\n            OAuth2 token used to authenticate the consumer API. Refer to the implementation documentation\n            for information on how to get a token.\n          required: true\n          schema:\n            type: string\n        - name: Accept-Language\n          in: header\n          description: \u003e-\n            Describes the set of natural languages that are preferred for localized text in the response\n            to the request (see RFC2616-sec14.4).\n            Supporting English (en) is a must.\n          schema:\n            type: string\n          required: false\n        - in: path\n          description: id of the layout\n          name: layoutId\n          schema:\n            type: string\n          required: true\n      responses:\n        '200':\n          description: coach layouts\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  warnings:\n                    $ref: '#/components/schemas/WarningMessageList'\n                  CoachLayout: \n                    $ref: '#/components/schemas/CoachLayout'\n        '400':\n          description: Bad request\n          content:\n            \"application/problem+json\":\n              schema:\n                $ref: '#/components/schemas/Problem'\n        '401':\n          description: Unauthorized\n        '403':\n          description: Forbidden\n        '404':\n          description: Not Found\n        '500':\n          description: Internal server error\n          content:\n            \"application/problem+json\":\n              schema:\n                $ref: '#/components/schemas/Problem'\n        '501':\n          description: Not implemented\n\n  '/offer-collections':\n    post:\n      tags:\n        - Offers \n      summary: Returns offers for non-journey based products.\n      description: \u003e- \n        Get offers based on key words or regional information not linked to trips. \n        This includes simple passes or one day tickets. \n      operationId: offerCollections\n      parameters:\n        - name: Access-Token\n          in: header\n          description: \u003e-\n            OAuth2 token used to authenticate the consumer API. Refer to the implementation documentation\n            for information on how to get a token.\n          required: true\n          schema:\n            type: string\n        - name: Accept-Language\n          in: header\n          description: \u003e-\n            Describes the set of natural languages that are preferred for localized text in the response to the request\n            (see RFC2616-sec14.4).\n            Supporting English (en) is a must.\n          schema:\n            type: string\n          required: false\n      requestBody:\n        description: request parameter for offer search\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/OfferSearch'\n      responses:\n        '200':\n          description: offer collection\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  warnings:\n                    $ref: '#/components/schemas/WarningMessageList'\n                  nonTripOfferCollection:\n                    $ref: '#/components/schemas/NonTripOfferCollection'\n        '400':\n          description: Bad request\n          content:\n            \"application/problem+json\":\n              schema:\n                $ref: '#/components/schemas/Problem'\n        '401':\n          description: Unauthorized\n        '403':\n          description: Forbidden\n        '404':\n          description: Not Found\n        '500':\n          description: Internal server error\n          content:\n            \"application/problem+json\":\n              schema:\n                $ref: '#/components/schemas/Problem'\n        '501':\n          description: Not implemented\n\n## Components\ncomponents:\n  schemas:\n    WarningMessageList:\n      type: array\n      items:\n        type: object\n        properties:\n          code:\n            type: string\n          text:\n            type: string\n          elementList:\n            type: array\n            items:\n              $ref: '#/components/schemas/Resource'\n        description: \u003e-\n         This element can be used to pass non-blocking information or events,\n         such as a price difference with the initially offered price at booking time.\n  \n    Resource:\n      type: object\n      description: used to represent a non-specified resource in the API.\n      properties:\n        id:\n          type: string\n          description: unique id of this resource on this server.\n        title:\n          type: string\n          example: Bruxelles-Midi    \n        type:\n          type: string\n          enum:\n            - LOCATION\n            - TRIP\n            - TRIPOFFER\n            - OFFER\n            - OFFERPART\n            - PASSENGER\n            - BOOKING\n            - FULFILLMENT\n            - REFUNDOFFER\n        href:\n          type: string\n          format: url\n          example: 'http://some.provider/location/2345'\n      required:\n        - id\n        - title\n        - type\n        - href\n       \n    Segment:\n      type: object\n      description: \u003e-\n        A segment represents a subsection of a trip that is realized with the same transport. In railways it is typically one\n        train (between the moment traveller steps on-board until stepping out of that train), but could be using a different means\n        of transportation. \n      properties:\n        index:\n          type: integer\n          format: int32\n          description: sequence number of the segment in the ordering of all segments of the trip\n        origin:\n          $ref: '#/components/schemas/Stop'\n          description: departure point of the segment\n        destination:\n          $ref: '#/components/schemas/Stop'\n          description: arrival point of the segment\n        duration: \n          description: duration of the segment in  ISO 8601 Durations\n          type: string\n          example: P2DT3H4M\n        transfer:\n          description: Transfer to the next vehicle not included in the request\n          type: object\n          properties:\n            duration:\n              description: Duration forseen to transfer to the next section  ISO 8601 Durations\n              type: string\n              example: P2DT3H4M\n            transferType:\n              description: 'WALK,... refer to the transfer type code list'\n              type: string\n          required:\n            - duration\n            - transferType\n        vehicle:\n          type: object\n          properties:\n            numbers:\n              description: \u003e-\n                Id of the vehicle, In case of two train s running in parallel\n                there might be two train numbers.\n              type: array\n              items:\n                type: string\n            line:\n              description: \u003e-\n                Line number in case the vehicle does not have a number\n              type: string\n            serviceBrand:\n              $ref: '#/components/schemas/ServiceBrandCode'\n            transportMode:\n              description: \u003e-\n                Transport mode (code list of MERITS).\n              type: string\n        stops:\n          description: \u003e-\n            The list of stops encountered between origin and destination. origin is the first stop mentioned and destination the last \n            one. This list is only returned when the stopBehavior is set to REAL_BOARDING_ALIGHTING\n          type: array\n          items:\n            $ref: '#/components/schemas/Stop'\n      required:\n        - seqId\n        - vehicle\n    Stop:\n      type: object\n      properties:\n        station:\n          $ref: '#/components/schemas/Location'\n        departureDateTime:\n          description: date and time in the time zone of the station\n          type: string\n          format: date-time\n        arrivalDateTime:\n          description: date and time in the time zone of the station\n          type: string\n          format: date-time\n        index:\n          type: integer\n          format: int32\n          example: 5\n          description: \u003e-\n            Unique value [0..*] within the segment, guaranteeing an\n            ascending order, though the value may jump non-continuously.\n        departureTrack:\n          type: string\n          example: 13A\n          description: \u003e-\n            The info about the departure-track of the stop. Format depends\n            on operator.\n        arrivalTrack:\n          type: string\n          example: 13B\n          description: \u003e-\n            The info about the arrival-track of the stop. Format depends\n            on operator.\n      description: \u003e-\n        Represents a location or station. Either a departure, arrival\n        or intermediate stop along a segment of a trip.\n      required:\n        - station\n  \n    Trip:\n      type: object\n      properties:\n        id:\n          type: string\n          description: unique id of this trip on this server.\n        title:\n          type: string\n          example: Bruxelles-Midi - Paris-Nord, 2020-07-01 10:05 CET\n        segments:\n          type: array\n          items:\n            $ref: '#/components/schemas/Segment'\n        origin:\n          $ref: '#/components/schemas/Stop'\n        destination:\n          $ref: '#/components/schemas/Stop'\n        duration:\n          type: string\n          description: \u003e-\n            Total duration over all segment's (format see\n            https://www.w3.org/TR/xmlschema11-2/#duration)\n          example: P2DT3H4M\n        direction:\n          description: indicates the trip direction\n          type: string\n          x-extensible-enum:\n            - SINGLE\n            - OUTWARD\n            - INWARD\n            - UNSPECIFIED\n          default: UNSPECIFIED\n        links:\n          type: array\n          description: Context information required by the services.\n          items:\n            $ref: '#/components/schemas/Link'\n      required:\n        - id  \n        - title\n\n    TripRequest:\n      type: object\n      properties:\n        tripSearchCriteria: \n          $ref: '#/components/schemas/TripSearchCriteria'\n        embed:\n          description: \u003e-\n            Influences whether referenced resources are returned in full or as references only.\n          type: array\n          items:\n            type: string\n            enum:\n              - TRIPS\n              - TRIPS.LOCATIONS\n              - NONE\n              - ALL\n            default: ALL\n            \n    TripSearchCriteria:\n      type: object\n      properties:\n        stopBehavior:\n          description: \u003e-\n            Influences what stops are to be returned in response\n            (ORIGIN_DESTINATION_ONLY returns no intermediate stops;\n            REAL_BOARDING_ALIGHTING returns all stops except virtual stops).\n          type: string\n          default: ORIGIN_DESTINATION_ONLY\n          enum:\n            - ORIGIN_DESTINATION_ONLY\n            - REAL_BOARDING_ALIGHTING\n        origin:\n          description: id of the location to use as origin\n          $ref: '#/components/schemas/StationCode'\n        destination:\n          description: id of the location to use as destination\n          $ref: '#/components/schemas/StationCode'\n        viaValues:\n          description: \u003e-\n            Ordered list of via locations within the trip. Unique code value has\n            to be set according to valueType. Max number of via stations depends on the\n            underlying system.\n          type: array\n          items:\n            $ref: '#/components/schemas/StationCode'\n        travelDateTime:\n          type: object\n          properties:\n            dateTime:\n              type: string\n              format: date-time\n            isArrival:\n              type: boolean\n              default: false\n              description: \u003e-\n                Defines whether or not the given travel date/time is the latest\n                arrival (true arriving at given time; false departing at given\n                time).\n        transportMode:\n          description: \u003e-\n            Transport mode (code list of MERITS). Optional for offer requests. \n            If not set, no restriction is applied.\n          type: array\n          items:\n            type: string\n        serviceBrands:\n          type: array\n          items:\n            $ref: '#/components/schemas/ServiceBrandCode'\n        maxChanges:\n          description: \u003e-\n            Max amount of transport-product changes (0 for direct\n            connection, default/max=11)\n          type: integer\n          format: int32\n        extendedChangeTime:\n          description: \u003e-\n            OOS MVP Indicates additional transfer time required where a transfer\n            is present in the resulting trip. Expressed in minutes.\n          type: integer\n          format: int32\n        needsPRMAssistance:\n          description: \u003e-\n            OOS MVP indicates a need for an itinerary where end-to-end PMR\n            assistance and accessibility is possible.\n          type: boolean\n          default: false\n      required:\n        - origin\n        - destination\n        - travelDateTime\n\n    OfferSearchCriteria:\n      type: object\n      properties:\n        flexibilities:\n          description: \u003e-\n            Defines the flexibility levels desired of the fares returned.\n            This refers to the after sales flexibility levels as defined in IRS-90918-10\n          type: array\n          items:\n            $ref: '#/components/schemas/Flexibility'\n        comfortClasses:\n          type: array\n          items:\n            $ref: '#/components/schemas/ComfortClass'\n          description: \u003e-\n            The classes returned might be different from the requested classes.\n        serviceClassIds:\n          type: array\n          items:\n            $ref: '#/components/schemas/ServiceClassId'\n          description: \u003e-\n            The classes returned might be different from the requested classes.\n        reservationOffersOnly:\n          type: boolean\n          default: false\n        currency:\n          $ref: '#/components/schemas/Currency'\n          description:\n            The currency returned might be different from the one requested.\n\n    TripOfferRequest:\n      type: object      \n      description: \u003e-\n        Defines the parameters needed to request an offer, either based on either an\n        existing trip (that is then passed in) plus a set of offer search\n        criteria, or based on tripsearch and offer search criteria. At least one\n        of the trip or tripSearchCriteria must be set.\n      properties:\n        tripSearch:\n          type: object      \n          description: \u003e-  \n            one of trips or searchCriteria\n          properties:\n            trips:\n              type: array\n              items:\n                type: object\n                properties:\n                  trip:\n                    $ref: '#/components/schemas/Trip'\n                  requestedSection:\n                    type: object\n                    properties:\n                      start:\n                        $ref: '#/components/schemas/Location'\n                      end:\n                        $ref: '#/components/schemas/Location'\n                required:\n                  - trip\n            searchCriteria:      \n              $ref: '#/components/schemas/TripSearchCriteria'\n        returnSearchParameters:\n          type: object\n          description: \u003e-\n            This property can be used in case a return trip is being requested. \n            This will allow to benefit from return-specific fares or product\n          properties:\n            inwardReturnDate:\n              type: string\n              format: date-time\n              description: \u003e-\n                Needs to be provided when creating the collection of outward travels so that the\n                provider knows when a return travel can be expected and propose appropriate\n                product and fares.\n            outwardTripOfferCollectionId: \n               type: string\n               format: uuid\n               description: \u003e-\n                 Needs to be provided when creating the collection of inward travels so that the provider\n                 can relate the inward travels to the outward travels context.\n            outwardSelectedOfferId:\n               type: string\n               format: uuid\n               description: \u003e-\n                 Needs to be provided when creating the collection of inward travels so that the provider\n                 knows what the outward offer is and and propose compatible offers only if desired or mandatory.\n        requestedFulfillmentOptions:\n          type: array\n          items:\n            $ref: '#/components/schemas/FulfillmentOption'\n        passengers:\n          type: array\n          items:\n            $ref: '#/components/schemas/Passenger'\n        offerSearchCriteria:\n          $ref: '#/components/schemas/OfferSearchCriteria'\n        embed:\n          description: \u003e-\n            Influences whether referenced resources are returned in full or as references only.\n          type: array\n          items:\n            type: string\n            enum:\n              - ALL\n              - TRIPOFFERS\n              - TRIPOFFERS.TRIP\n              - TRIPOFFERS.TRIP.LOCATIONS\n              - TRIPOFFERS.OFFERS\n              - TRIPOFFERS.OFFERS.OFFERPARTS\n              - TRIPOFFERS.PASSENGERS\n              - NONE\n            default: ALL\n      required:\n        - tripSearch\n        - passengers\n\n    TripOffer:\n      type: object\n      properties:\n        id:\n          type: string\n          format: uuid\n        title:\n          type: string\n          example: Bruxelles-Midi 2020-07-01 10:05 CET\n        trip:\n          $ref: '#/components/schemas/Trip'\n        offers:\n          type: array\n          items:\n            $ref: '#/components/schemas/Offer'\n        passengers:\n          type: array\n          items:\n            $ref: '#/components/schemas/Passenger'\n        links:\n          type: array\n          items:\n            $ref: '#/components/schemas/Link'\n      required: \n        - id\n        - trip\n\n    RequestedInformation:\n      type: string\n      description: \u003e-\n        Boolean-expression indicating the data that must be set in the data\n        model in order to proceed to next step of the process.\n        \n    OfferSummary:\n      type: object\n      description: \u003e-\n        The offer summary indicates the major service class, level or flexibility.\n        This does not imply that this service class or level applies to all parts \n        of the whole offer. \n      properties:\n        minimalPrice:\n          $ref: '#/components/schemas/CurrencyPrice'\n        overallServiceClass:\n          $ref: '#/components/schemas/ServiceClass'\n        overallComfortClass:\n          $ref: '#/components/schemas/ComfortClass'\n        overallAccommodationType:\n          $ref: '#/components/schemas/AccommodationType'\n        overallAccommodationSubType:\n          $ref: '#/components/schemas/AccommodationSubType'          \n        overallFlexibility:\n          $ref: '#/components/schemas/Flexibility'\n      required:\n        - minimalPrice\n        - overallServiceClass\n        - overallFlexibility\n\n    Offer:\n      type: object\n      properties:\n        id:\n          type: string\n          format: uuid\n        title:\n          type: string\n          example: Bruxelles-Midi - Paris-Nord 2020-07-01 10:05 CET, Normal Fare, 50 EUR\n        offerSummary:\n          $ref: '#/components/schemas/OfferSummary'\n        offerHash:\n          type: object\n          properties:\n            isMandatory:\n              type: boolean\n              default: false\n            offerHash:\n              type: string\n          description: \u003e-\n            The offerHash can/must (depending on the mandatory flag) be used in some cases to restrict the set of\n            offers returned in a subsequent and related offer search to only compatible ones.\n            Note the offerHash does not need to be unique.\n        coveredSegmentIndexes:\n          type: array\n          items:\n            type: integer\n            format: int32\n          description: \u003e-\n            relevant only in case the offer only covers parts of the trip. This will indicate which segments are covered by the specific offer\n        offerCluster:\n          type: string\n          description: relevant only in case the offer only covers parts of the trip. This will indicate which offer cluster this offer is part of.\n        combinationHashes:\n          type: array\n          items:\n            type: object\n            properties:\n              combinationType: \n                type: string\n                x-extensible-enum:\n                  - RETURN\n              hash: \n                type: string\n          description: \u003e-\n            List of hashes (and their type) that allow identifying sets of compatible offers,\n            for example when booking a return trip with specific return fares. \n            If no hash is provided, there is no constraint on this specific offer.\n        requestedInformation:\n          $ref: '#/components/schemas/RequestedInformation'\n        availableFulfillmentTypes:\n          type: array\n          items:\n            $ref: '#/components/schemas/FulfillmentType'\n        trip:\n          $ref: '#/components/schemas/Trip'\n          description: \u003e-\n            Note that trip element cannot be embedded in tripoffer context as the\n            TRIPOFFERS.OFFERS.TRIP value is not a possible embed value for TripOffers.\n        validFrom:\n          type: string\n          format: date-time\n          description: \u003e-\n            Defines the minimum validity period of the trip booked, meaning the period \n            during which it will be possible to travel with the fulfillments for this offer.\n        validUntil:\n          type: string\n          format: date-time \n          description: \u003e-\n            Defines the minimum validity period of the trip booked, meaning the period \n            during which it will be possible to travel with the fulfillments for this offer.\n        admissions:\n          type: array        \n          items: \n            $ref: '#/components/schemas/Admission'\n        reservations:\n          type: array        \n          items:              \n            $ref: '#/components/schemas/Reservation'\n        ancillaries:\n          type: array        \n          items:  \n            $ref: '#/components/schemas/Ancillary'\n        fares:\n          type: array\n          items:\n            $ref: '#/components/schemas/FareOnline'\n        links:\n          type: array\n          items:\n            $ref: '#/components/schemas/Link'\n      required:\n        - id\n\n    ComfortClass:\n      description: \u003e-\n        Generic class classification, mostly used to harmonize choice and\n        representation across multiple carriers.\n      type: string\n      x-extensible-enum:\n        - FIRST\n        - SECOND \n      \n\n    Flexibility:\n      type: string\n      x-extensible-enum:\n        - FULLFLEX\n        - MIDFLEX\n        - NONFLEX\n\n    CommonOfferPartAttributes:\n      type: object\n      properties:\n        price:\n          $ref: '#/components/schemas/CurrencyPrice'\n        pricingMode:\n          type: string\n          enum:\n            - COLLECTIVE\n            - INDIVIDUAL \n        reductionsApplied:\n          type: array\n          items:\n            $ref: '#/components/schemas/CardReference'\n        passengers:\n          type: array\n          items:\n            $ref: '#/components/schemas/Passenger'\n        providerBookingReference:\n          type: string\n          description: \u003e-\n            The booking reference of the booking the offer part is in on the provider side.\n        finalProviderBookingReference:\n          type: string\n          description: \u003e-\n            The booking reference of the order the offer part is in on the final provider \n            side = the provider actually hosting or allocating  the product.\n        availableFulfillmentOptions:\n          type: array\n          items:\n            $ref: '#/components/schemas/FulfillmentOption'\n        validFrom:\n          type: string\n          format: date-time\n          description: \u003e-\n            Validity of offer towards passenger \n        validUntil:\n          type: string\n          format: date-time\n          description: \u003e-\n            Validity of offer towards passenger \n        refundable:\n          type: string\n          enum:\n            - YES\n            - NO\n            - WITH_CONDITIONS\n        exchangeable:\n          type: string\n          enum:\n            - YES\n            - NO\n            - WITH_CONDITIONS\n        products:\n          type: array\n          items:\n            type: object\n            properties:\n              product:\n                $ref: '#/components/schemas/Product'\n              segmentIndices:\n                description: indices of the segments in the trip given by the provider of the offer\n                type: array\n                items:\n                  type: integer\n                  format: int32\n      required:\n        - price\n        - passengers\n        - validFrom\n        - refundable\n        - exchangeable\n            \n    Product:\n      type: object\n      description: \u003e-\n         Structured description of the product , its name, comfort and sales / after-sales conditions\n      properties:\n        id:\n          type: string\n          description: unique id of this product on this server.\n        title:\n          type: string\n          example: TGV Lyria Loisir 2\n        code:\n          type: string\n          description: \u003e-\n            The product code expressed in the provider system (could be a\n            mapping from an even lower-level provider).\n          example: PT00AD\n        description:\n          type: string\n          description: the textual description of the product\n          example: Loisir Non-flex Adult Fare\n        conditions:\n          type: array\n          items:\n            $ref: '#/components/schemas/Condition'\n          description: \u003e-\n            Structured description of the sales or after-sales conditions.\n        serviceClass:\n          $ref: '#/components/schemas/ServiceClass'\n        comfortClass:\n          $ref: '#/components/schemas/ComfortClass'\n        isTrainBound:\n          type: boolean\n        isReturnProduct:\n          type: boolean\n          default: false\n        fulfillmentOptions:\n          type: array\n          items:\n            $ref: '#/components/schemas/FulfillmentOption'\n        serviceConstraintText:\n          type: string\n        carrierConstraintText:\n          type: string\n        links:\n          type: array\n          items:\n            $ref: '#/components/schemas/Link'\n      required:\n        - id\n\n    FulfillmentMediaType:\n       type: string\n       description: \u003e-\n         Fulfillment types. RCT2, RCCST and UIC-PDF are official UIC standards.     \n       x-extensible-enum:\n         - RCT2\n         - RCCST\n         - UIC_PDF\n         - PDF_A4\n         - PKPASS\n         - TICKETLESS\n         - ALLOCATOR_APP\n         - SOCIAL_MEDIA_ACCOUNTS\n    \n    Admission:\n      type: object\n      description:\n        An admission represents a travel right, or the entitlement to travel onboard a train between \n        the given origin and destination, following the given route. It does not include a seat reservation. \n      properties:\n        id:\n          type: string\n          format: uuid\n        commonOfferPartAttributes:\n          $ref: '#/components/schemas/CommonOfferPartAttributes'\n        isReservationRequired:\n          type: boolean\n        reservations:\n          type: array\n          items:\n            $ref: '#/components/schemas/OfferPart'\n        ancillaries:\n          type: array\n          items:\n            type: object\n            properties:\n              relationType:\n                type: string\n                x-extensible-enum:\n                  - OPTIONAL\n                  - INCLUDED\n              ancillary:\n                $ref: '#/components/schemas/OfferPart'\n        links:\n          type: array\n          items:\n            $ref: '#/components/schemas/Link'\n      required:\n        - id\n        - commonOfferPartAttributes\n                \n    PlaceSelectionPatch:\n      type: object\n      description: \u003e-\n        place selection options and selected options in an offer\n        - selected optional place properties (selectedOptions)\n        - selectedPlaces from a graphical place selection (selectedPlaces)\n        - reference place for adjacent reservation (referencePlace)\n      properties:\n        referencePlace: \n          type: object    \n          description: selected place for an adjacent reservation (NEARBY)\n          properties:\n            placeNumber:\n              type: string\n            coachNumber:\n              type: string\n        selectedOptions:\n          type: array\n          items: \n            $ref: '#/components/schemas/PlaceOptionsBundle'\n        selectedCoach:\n          $ref: '#/components/schemas/SelectedCoach'\n    \n    Reservation:\n      type: object\n      description: \u003e-\n        Reservation includes the reference to the in the initial offer. \n        The offer needs to be updated with the selected places before the confirmation\n        which creates the reservation details including the reserved places.\n      properties:\n        id:\n          type: string\n          format: uuid\n        commonOfferPartAttributes:\n          $ref: '#/components/schemas/CommonOfferPartAttributes'\n        reservationDetails:\n          $ref: '#/components/schemas/ReservationDetail'\n        placeSelection:\n          $ref: '#/components/schemas/PlaceSelection'\n        optionality:\n          description: \u003e-\n            INCLUDED: the reservation is included in the offer\n            MANDATORY: the reservation is mandatory for the booking\n            OPTIONAL: the reservation is not included but can be added optionally\n          type: string\n          x-extensible-enum:\n            - INCLUDED\n            - MANDATORY\n            - OPTIONAL\n        links:\n          type: array\n          items:\n            $ref: '#/components/schemas/Link'\n      required:\n        - id\n        - commonOfferPartAttributes\n        - reservationDetails\n        \n    ReservationPatch:\n      type: object\n      description: \u003e-\n        reservationPatch is the structure used to modify reservations. It is a subset of the complete reservation element\n      properties:\n        placeSelection:\n          $ref: '#/components/schemas/PlaceSelectionPatch'\n          \n    Ancillary:\n      type: object\n      properties:\n        id:\n          type: string\n          format: uuid\n        commonOfferPartAttributes:\n          $ref: '#/components/schemas/CommonOfferPartAttributes'\n        optionality:\n          description: \u003e-\n            INCLUDED: the ancillary is included in the offer but is not mandatory \n            OPTIONAL: the ancillary is not included but can be optionally added\n          type: string\n          x-extensible-enum:\n            - INCLUDED\n            - OPTIONAL\n        category:\n          type: string\n        links:\n          type: array\n          items:\n            $ref: '#/components/schemas/Link'\n      required :\n        - id\n        - commonOfferPartAttributes\n          \n    OfferPart:\n      type: object\n      description: \u003e-\n        References all the offer part elements in an uniform format.\n        An OfferPart can therefore refer to reservation, admission or ancillary (in its parts).\n      properties:\n        id:\n          type: string\n          format: uuid\n        parts:\n          type: string\n          format: url\n          example: \u003e-\n            http://some.provider/ancillary/2345 or http://some.provider/reservation/2345'\n        title:\n          type: string\n          example: ICE Wifi on Board 2020-07-11\n        links:\n          type: array\n          items:\n            $ref: '#/components/schemas/Link'\n      required:\n        - id\n\n    BookingRequest:\n      type: object\n      properties:\n        selectedOffers:\n          type: array\n          items:\n            type: object\n            properties:\n              selectedOfferId:\n                type: string\n                format: uuid\n                description: id of the selected offer\n              selectedOptionalReservationsIds:\n                type: array\n                items:\n                  type: string\n                  format: uuid\n                  description: \u003e-\n                    If relevant, ids of the selected optional reservations.\n              selectedOptionalAncillaries:\n                type: array\n                items:\n                  type: object\n                  properties:\n                    ancillaryId:\n                      type: string\n                      format: uuid\n                      description: \u003e-\n                        If relevant, ids of the selected optional ancillaries.\n                    passengerIds:\n                      type: array\n                      items:\n                        type: string\n                        format: uuid\n                        description: \u003e-\n                          Id of the passengers the selected optional ancillaries are for.\n            description: \u003e-\n              The list of offers that need to be provisionally booked, with possibly the reservations\n              and ancillaries associated that should be booked as well. \n            required:\n              - selectedOfferId\n        embed:\n          description: \u003e-\n            Influences whether referenced resources are returned in full or as references only.\n          type: array\n          items:\n            type: string\n            enum:\n              - ALL\n              - BOOKEDOFFERS\n              - BOOKEDOFFERS.TRIPS\n              - BOOKEDOFFERS.TRIPS.LOCATIONS\n              - BOOKEDOFFERS.OFFERPARTS\n              - PASSENGERS\n              - REFUND_PROPOSITIONS\n              - NONE\n            default: ALL\n\n    Booking:\n      type: object\n      properties:\n        id:\n          type: string\n          format: uuid\n        title:\n          type: string\n          example: booking 2345\n        reference:\n          type: string\n          description: \u003e-\n            The unique booking reference in the provider system. Usually refers to an order number or PNR.\n        status:\n          type: string\n          enum:\n            - PREBOOKED\n            - CONFIRMED\n            - FULFILLED\n            - CANCELLED\n            - REFUNDED\n            - ERROR\n        provisionalBalance: \n          $ref: '#/components/schemas/CurrencyPrice'\n        confirmedBalance: \n          $ref: '#/components/schemas/CurrencyPrice'\n        requestedInformation:\n          $ref: '#/components/schemas/RequestedInformation'\n        ticketTimeLimit:\n          type: string\n          format: date-time\n        fulfillmentType:\n          $ref: '#/components/schemas/FulfillmentType'\n        bookedOffers:\n          type: array\n          items:\n            $ref: '#/components/schemas/Offer'\n        passengers:\n          type: array\n          items:\n            $ref: '#/components/schemas/Passenger'\n        fulfillments:\n          type: array\n          items:\n            $ref: '#/components/schemas/Fulfillment'\n        refundOffers:\n          type: array\n          items:\n            $ref: '#/components/schemas/RefundOffer'\n          description: \u003e-\n            Refund offers are created with the details of the to-be-confirmed refund operation. \n            One refund offer can then be confirmed, which turns it into a refund.\n        exchange:\n            $ref: '#/components/schemas/Exchange'\n        exchangeOffers:\n          type: array\n          items:\n            $ref: '#/components/schemas/ExchangeOffer'\n          description: \u003e-\n            Exchange offers created with the details of the to-be-confirmed refund operation. \n            One exchange offer can then be confirmed, which turns it into an exchange and\n            confirms the new booking.         \n        links:\n          type: array\n          items:\n            $ref: '#/components/schemas/Link'\n      required:\n        - id\n        - type\n\n    FulfillmentType:\n      type: string      \n      x-extensible-enum:\n          - ETICKET\n          - CIT_PAPER\n\n    BookingPatchRequest:\n      type: object\n      description: \u003e-\n        Allows setting the required fulfillment type, e.g. value paper\n        or e-ticket and preferred fulfillment media. \n        The latter is optional and relevant in some cases only.\n      properties:\n        requestedFulfillmentType:\n          $ref: '#/components/schemas/FulfillmentType'\n        preferredFulfillmentMedia:\n          $ref: '#/components/schemas/FulfillmentMediaType'\n    \n    BookingSearchParameter:\n      type: object\n      description: \u003e-\n        parameter to be used to search for a booking. Contains personal data. \n        For a search via personal data an exact match of all elements \n        - first name, last name and date of birth - is mandatory. \n        In case a ticket holder is indicated the parameter must match the ticket holder. \n        TODO - legal check by CIT\n      properties:\n        passengerFirstName:\n          type: string\n          description: \u003e-\n            First name of a passenger in the booking.      \n        passengerLastName:\n          type: string\n          description: \u003e-\n            Last name of a passenger in the booking.\n        passengerDateOfBirth:\n          type: string\n          format: date\n          description: \u003e-\n            Date of birth of a passenger in the booking.\n        bookingReference:\n          type: string\n          format: date\n          description: \u003e-\n            Human-readable booking reference for the booking, e.g. PNR.\n        fulfillmentReference:\n          type: string\n          description: \u003e-\n            Human-readable fulfillment reference for the booking, e.g. ticket number.\n        travelDateBegin:\n          type: string\n          format: date-time\n          description: \u003e-\n            Begin date for the travel date range to search.\n        travelDateEnd:\n          type: string\n          format: date-time\n          description: \u003e-\n            End date for the travel date range to search.\n        origin: \n          $ref: '#/components/schemas/Location'\n        destination:\n          $ref: '#/components/schemas/Location'\n\n    BookingSearchReply:\n      type: object\n      description: \u003e-\n        Reply on a search for bookings\n      properties:\n        bookings:\n          type: array\n          items: \n            $ref: '#/components/schemas/Booking'\n\n    FulfillmentOption:\n      type: object\n      description: \u003e-\n        CIT paper implies printing on value paper which is stock controlled.\n      properties:\n        fulfillmentType:\n          $ref: '#/components/schemas/FulfillmentType'\n        media: \n          type: array\n          items:\n           $ref: '#/components/schemas/FulfillmentMediaType'\n        \n    FulfillmentsPatch:\n      type: object\n      description: \u003e-\n        Changes the fulfillment to status FULFILLED.\n      properties:\n        fulfillmentUpdates:\n          type: array\n          items:\n            type: object\n            properties:\n              fulfilledFulfillmentId:\n                type: string\n                format: uuid\n                \n    Fulfillment:\n      type: object\n      description: \u003e-\n        A fulfillment is a document (or part of a document in allocator mode) that\n        - allows the passenger to prove its travel right\n        - provides easier access to trains and stations\n        - allows an exchange for other services (voucher)\n        A fulfillment refers to services of one or multiple offer parts or a fare (allocator mode).\n      properties:\n        id:\n          type: string\n          format: uuid\n        status: \n          type: string\n          enum: \n            - CONFIRMED\n            - FULFILLED\n            - CHECKEDIN\n            - REFUNDED\n        price:\n          $ref: '#/components/schemas/CurrencyPrice'\n          description: \u003e-\n            Note the price is present here as an optional element as future evolution indicate a possible\n            separation between fulfillment info and financial information. \n            Please refer to UIC leaflet XXX for more information on current status.\n        controlNumber:\n          type: string\n          description: \u003e-\n            Ticket Control Number\n        offerParts:\n          type: array\n          items:\n            $ref: '#/components/schemas/OfferPart'\n        documents:\n          description: \u003e-\n            complete document created for fulfillment\n          type: array\n          items: \n            $ref: '#/components/schemas/FulfillmentDocument'\n        fulfillmentItems:\n          description: \u003e-\n            fulfillment items to be integrated into tickets (allocator mode)\n          type: array\n          items:\n            $ref: '#/components/schemas/FulfillmentItem'\n        links:\n          type: array\n          items:\n            $ref: '#/components/schemas/Link'\n      required:\n       - id\n    \n    FulfillmentDocument:\n      type: object\n      description: \u003e-\n        document created for fulfillment\n      properties:\n        medium: \n          $ref: '#/components/schemas/FulfillmentMediaType'\n        documentType:\n         type: string\n         x-extensible-enum:\n            - BOOKING_RECEIPT\n            - TICKET\n            - BOARDING_PASS\n            - INFORMATION\n            - VOUCHER\n        documentLink:\n          type: string\n          format: uri    \n    \n    FulfillmentItem:\n      type: object\n      description: \u003e-\n       Fulfillment items to be integrated in to tickets, \n       e.g. visual security elements, additional bar codes, control keys.\n      properties:\n        fulfillmentMedia:\n          description: \u003e-\n           list of fulfillment media where this item applies\n          type: array\n          items:\n           $ref: '#/components/schemas/FulfillmentMediaType'\n        travelerReference:\n          description: reference to a traveler\n          type: string\n        controlId:\n          type: string\n        securityFeatures:\n          description: 'visual elements, bar codes'\n          type: array\n          items:\n            type: object\n            properties:\n              type:\n                $ref: '#/components/schemas/SecurityFeatureType'\n              data:\n                description: base 64 encoded data\n                type: string\n        securityFeatureLinks:\n          type: array\n          items:\n            type: object\n            properties:\n              type:\n                $ref: '#/components/schemas/SecurityFeatureType'\n              uri:\n                description: link to download the security feature\n                type: string\n                format: uri\n        isMandatory:\n          description: \u003e-\n            The use of the provided features is mandatory.\n          type: boolean\n          default: false\n        securePaperOnly:\n          description: \u003e-\n            The security feature must be used on secure paper.\n          type: boolean\n          default: false\n  \n    SecurityFeatureType:\n      description: \u003e-\n        Defines type and format of the security feature.\n      type: object\n      properties:\n        type:\n          type: string\n          enum:\n            - VISUAL_ELEMENT\n            - BAR_CODE\n        format:\n          type: string\n          enum:\n            - PNG\n            - GIF\n            - SVG   \n      \n    RefundOffersCollection:\n      type: object\n      properties:\n        refundOffers:\n          type: array\n          items:\n            $ref: '#/components/schemas/RefundOffer'\n  \n    RefundOffer:\n      type: object\n      properties:\n        id:\n          type: string\n          format: uuid\n          description: id of the refund offer\n        title:\n          type: string\n          example: Refund Paris-Barcelona Andre Dupont 2020-07-23\n        validUntil:\n          type: string\n          format: date-time\n        status:\n          type: string\n          enum:\n            - PROPOSED\n            - CONFIRMED\n        reimbursementStatus:\n          description: \u003e-\n            If set to IMMEDIATE the distributor is allowed to return the \n            reimbursement amount immediately.\n          type: string\n          enum:\n            - IMMEDIATE\n            - DELAYED\n          default: IMMEDIATE\n        reimbursementDateTime:\n          type: string\n          format: date-time\n        appliedOverruleCode:\n          description: \u003e-\n            Reason for and type of an after sale, Code list in IRS 90918-10.\n          type: string\n        fulfillments:\n          type: array\n          items: \n            $ref: '#/components/schemas/Fulfillment'\n        refundFee:\n          $ref: '#/components/schemas/CurrencyPrice'\n        refundableAmount:\n          $ref: '#/components/schemas/CurrencyPrice'\n        links:\n          type: array\n          items:\n            $ref: '#/components/schemas/Link'\n      required:\n       - id\n\n    RefundOfferRequest:\n      type: object\n      description: \u003e-\n        Request for a refund offer. \n        Fulfillments can be provided in case the booking contains multiple individual fulfillments.\n      properties:\n        fulfillmentIds:\n          type: array\n          items:\n            type: string\n            format: uuid\n            description: id of the fulfillment to refund\n        overruleCode: \n          $ref: '#/components/schemas/OverruleCode'\n      required:\n        - fulfillmentIds\n\n    RefundOfferConfirm:\n      type: object\n      description: \u003e-\n        Changes the refund offer to status CONFIRMED.\n      properties:\n        confirmedRefundOfferId:\n          type: string\n          format: uuid\n          description: id of the refund offer\n      required:\n        - confirmRefundOfferId \n\n    ExchangeOfferRequest:\n      type: object\n      description: \u003e-\n        Request for an exchange offer. \n        Fulfillments can be provided in case the booking contains multiple individual fulfillments.\n      properties:\n        fulfillmentIds:\n          type: array\n          items:\n            type: string\n            format: uuid\n            description: id of the fulfillment to refund\n        tripSearch:\n          type: object      \n          description: \u003e-  \n            one of trips or searchCriteria\n          properties:\n            trips:\n              type: array\n              items:\n                type: object\n                properties:\n                  trip:\n                    $ref: '#/components/schemas/Trip'\n                  requestedSection:\n                    type: object\n                    properties:\n                      start:\n                        $ref: '#/components/schemas/Location'\n                      end:\n                        $ref: '#/components/schemas/Location'\n                required:\n                  - trip\n            searchCriteria:      \n              $ref: '#/components/schemas/TripSearchCriteria'\n        returnSearchParameters:\n          type: object\n          description: \u003e-\n            This property can be used in case a return trip is being requested. \n            This will allow to benefit from return-specific fares or product.\n          properties:\n            inwardReturnDate:\n              type: string\n              format: date-time\n              description: \u003e-\n                Needs to be provided when creating the collection of outward travels so that the\n                provider knows when a return travel can be expected and propose appropriate.\n                product and fares.\n            outwardTripOfferCollectionId: \n               type: string\n               format: uuid\n               description: \u003e-\n                 Needs to be provided when creating the collection of inward travels so that the provider\n                 can relate the inward travels to the outward travels context.\n            outwardSelectedOfferId:\n               type: string\n               format: uuid\n               description: \u003e-\n                 Needs to be provided when creating the collection of inward travels so that the provider\n                 knows what the outward offer is and and propose compatible offers only if desired or\n                 mandatory.\n        requestedFulfillmentOptions:\n          type: array\n          items:\n            $ref: '#/components/schemas/FulfillmentOption'\n        passengers:\n          description: \u003e-\n            A Passenger can be reused from the existing booking if id or reference is set. Otherwise,\n            if any attribute needs to be changed, all the attributes have to be set anew.\n          type: array\n          items:\n            $ref: '#/components/schemas/Passenger'\n        offerSearchCriteria:\n          $ref: '#/components/schemas/OfferSearchCriteria'\n        overruleCode:\n          $ref: '#/components/schemas/OverruleCode'\n        embed:\n          description: \u003e-\n            Influences whether referenced resources are returned in full or as references only.\n          type: array\n          items:\n            type: string\n            enum:\n              - ALL\n              - TRIPOFFERS\n              - TRIPOFFERS.TRIP\n              - TRIPOFFERS.TRIP.LOCATIONS\n              - TRIPOFFERS.OFFERS\n              - TRIPOFFERS.OFFERS.OFFERPARTS\n              - TRIPOFFERS.PASSENGERS\n              - NONE\n            default: ALL\n      required:\n        - fulfillmentIds\n        - tripOfferRequest\n       \n    OverruleCode: \n      type: string\n      description: \u003e-\n        Reason for and type of an after sale, code list in IRS 90918-10.\n      x-extensible-enum:\n        - PAYMENT_FAILURE\n        - SALES_STAFF_ERROR\n        - STRIKE\n\n    ExchangeOffersCollection:\n      type: array\n      items:\n        $ref: '#/components/schemas/ExchangeOffer'\n        \n    ExchangeOffer:\n      type: object\n      description: \u003e-\n        Offer to exchange the referenced booking.\n      properties:\n        id:\n          type: string\n          format: uuid\n          description: id of the exchange offer\n        validUntil:\n          type: string\n          format: date-time\n        status:\n          type: string\n          enum:\n            - PROPOSED\n            - CONFIRMED\n          default: PROPOSED\n        reimbursementStatus:\n          description: \u003e-\n            If set to IMMEDIATE the distributor is allowed to return the \n            reimbursement amount immediately.\n          type: string\n          enum:\n            - IMMEDIATE\n            - DELAYED\n        reimbursementDateTime:\n          type: string\n          format: date-time\n        appliedOverruleCode:\n          description: \u003e-\n            Reason for and type of an after sale, code list in IRS 90918-10.\n          type: string\n        fulfillments:\n          description: \u003e-\n            Affected fulfillments. In case of secure paper these need to be collected from the passenger.\n          type: array\n          items: \n            $ref: '#/components/schemas/Fulfillment'\n        exchangeFee:\n          $ref: '#/components/schemas/CurrencyPrice'\n        refundableAmount:\n          $ref: '#/components/schemas/CurrencyPrice'\n        offer:\n          $ref: '#/components/schemas/TripOffer'      \n      required:\n       - id\n       - validUntil\n       - status\n       - reimbursementStatus\n       - exchangeFee\n       - refundableAmount\n\n    ExchangeOfferConfirm:\n      type: object\n      description: \u003e-\n        Changes the exchange offer to the status PREBOOKED.\n      properties:\n        prebookedExchangeOfferId:\n          type: string\n          format: uuid\n          description: id of the exchange offer\n      required:\n        - prebookedExchangeOfferId \n            \n    Exchange:\n      type: object\n      description: \u003e- \n        Result of a successful confirmation of an exchange. \n        The new booking and the original booking are returned.\n      properties:\n        reimbursementStatus:\n          description: \u003e-\n            If set to IMMEDIATE the distributor is allowed to return the \n            reimbursement amount immediately.\n          type: string\n          enum:\n            - IMMEDIATE\n            - DELAYED\n        reimbursementDateTime:\n          type: string\n          format: date-time\n        appliedOverruleCode:\n          description: \u003e-\n            Reason for and type of an after sale, Code list in IRS 90918-10.\n          type: string\n        exchangeFee:\n          $ref: '#/components/schemas/CurrencyPrice'\n        refundableAmount:\n          $ref: '#/components/schemas/CurrencyPrice'    \n        newBooking: \n          $ref: '#/components/schemas/Booking'\n      required:\n        - reimbursementStatus\n        - exchangeFee\n        - refundableAmount\n        - newBooking\n            \n    OfferSearch:\n      type: object\n      description: \u003e-\n        Search parameter for an offer search on offers not based on a trip (e.g. passes).\n      properties:\n        searchTags:\n          description: \u003e-\n            list of tags to search for\n          type: array\n          items:\n            type: string\n        nutsCodes:\n          description: \u003e-\n            Nomenclature des units territoriales statistiques COMMISSION REGULATION (EU) No 31/2011\n          type: array\n          items:\n            type: string\n        geoCoordinate:\n          $ref: '#/components/schemas/GeoCoordinate'\n        travelPeriod:\n          type: array\n          items:\n            type: string\n            format: date-time\n        passengers:\n          type: array\n          items:\n            $ref:  '#/components/schemas/Passenger'  \n        requestedFulfillmentOptions: \n          type: array\n          items:\n            $ref:  '#/components/schemas/FulfillmentOption' \n        offerSearchCriteria:\n            $ref:  '#/components/schemas/OfferSearchCriteria'\n        embed:\n          description: \u003e-\n            Influences whether referenced resources are returned in full or as references only. \n          type: array\n          items:\n            type: string\n            enum:\n              - OFFERPARTS\n              - NONE\n              - ALL\n            default: ALL\n              \n    NonTripOfferCollection:\n      type: array\n      items:\n        $ref: '#/components/schemas/NonTripOffer'\n    \n    NonTripOffer:\n      type: object\n      description: \u003e-\n        Non trip offers do not reference a trip, thus no reservations can be offered by definition.\n      properties:\n        offerSummary:\n          $ref: '#/components/schemas/OfferSummary'\n        requestedInformation:\n          $ref: '#/components/schemas/RequestedInformation'\n        validFrom:\n          type: string\n          format: date-time\n        validUntil:\n          type: string\n          format: date-time \n        availableFulfillmentTypes:\n          type: array\n          items:\n            $ref: '#/components/schemas/FulfillmentType'\n        admissions:\n          type: array        \n          items: \n            $ref: '#/components/schemas/Admission'\n        ancillaries:\n          type: array        \n          items:  \n            $ref: '#/components/schemas/Ancillary'\n        fares:\n          type: array\n          items:\n            $ref: '#/components/schemas/FareOnline'\n        links:\n          type: array\n          items:\n            $ref: '#/components/schemas/Link'\n\n    Layouts:\n      type: object\n      properties:\n        layouts:\n          type: array\n          items:\n            $ref: '#/components/schemas/CoachLayout'\n      required:\n        - layouts\n\n    CoachLayout:\n      type: object\n      description: \u003e-\n        coach layout providing data to draw a coach layout. The items of a coach\n        are located via coordinates with (0,0) in the upper left corner. All\n        coordinates are given without sign. \n      properties:\n        id:\n          type: string\n          description: unique id of this coachLayout on this server\n        title:\n          type: string\n          example: coach 3 train T122\n        places:\n          description: list of places included in the layout\n          type: array\n          items:\n            type: object\n            properties:\n              number:\n                description: place number as displayed physically on the place\n                type: string\n              direction:\n                description: \u003e-\n                  Direction of a place, defined optional as it might be omitted in\n                  case of berths in future. \n                  Code list according to UIC90918-1\n                   - RIGHT: to right\n                   - LEFT: to left\n                   - UP: up (from right side of a coach pointing to the middle of the aisle)\n                   - DOWN: down (from right side of the coach pointing to the middle of the aisle)\n                type: string\n                enum:\n                  - RIGHT\n                  - LEFT\n                  - UP\n                  - DOWN\n              remarkId:\n                description: \u003e-\n                  Remark concerning the place (e.g. to be used in a tool tip).\n                  Code list according to UIC90918-1 \n                   - value 1: place might have a table\n                   - value 2: table at the place might be missing \n                   - value 3: place might have a different direction \n                   - value 4: place might have a table and a different direction \n                   - value 5: table at the place might be missing and place might have a different direction\n                   - value 6: place might be in compartment\n                   - value 7: place might be in open space  \n                type: string\n                x-extensible-enum:\n                 - VALUE1-TODO\n              coords:\n                $ref: '#/components/schemas/LayoutCoordinates'             \n            required:\n              - id\n              - number\n              - coords\n        signs:\n          type: array\n          items:\n            type: object\n            properties:\n              icon:\n                description: \u003e-\n                  Icon type of the graphical item type. Code list according to UIC90918-1\n                  graphical item type e.g. silence area sign = 116\n                type: string\n              coords:\n                $ref: '#/components/schemas/LayoutCoordinates'\n            required:\n              - icon\n              - coords\n        internals:\n          type: array\n          items:\n            type: object\n            properties:\n              icon:\n                description: \u003e-\n                  icon type of the graphical item type. Code list according to UIC90918-1\n                  graphical item type e.g. seat = 1, berth = 2, couchette = 3\n                type: string\n              mounting:\n                description: \u003e-\n                  indicates, that the item is located at the upper border (U), the\n                  lower border (L), goes from upper to lower border (E) or is\n                  placed free (F).\n                type: string\n                enum:\n                  - UPPER_BORDER\n                  - LOWER_BORDER\n                  - UPPER_TO_LOWER_BORDER\n                  - FREE\n              coords:\n                $ref: '#/components/schemas/LayoutCoordinates'\n            required:\n              - icon\n              - coords\n        gridSize:\n          type: object\n          properties:\n            x:\n              type: integer\n              format: int32\n            y:\n              type: integer\n              format: int32\n        links:\n          type: array\n          description: Context information required by the services.\n          items:\n            $ref: '#/components/schemas/Link'\n      required:\n        - id\n\n    LayoutCoordinates:\n      type: object\n      properties:\n        x:\n          description: \u003e-\n            horizontal coordinate of the center of the place\n          type: integer\n          format: int32\n        y:\n          description: \u003e-\n            vertical coordinate of the center of the place\n          type: integer\n          format: int32\n        zOrder:\n          description: \u003e-\n            Graphical layer where this item has to be placed. \n            Code list according to UIC90918-1\n              - value 0: lowest layer usually used for walls \n              - value 1: middle layer usually used by places\n              - value 2: top layer usually used by icons\n          type: string\n      required:\n        - x\n        - y\n        - zOrder\n\n    Problem:\n      type: object\n      description: \u003e-\n        Problem Details for HTTP APIs (RFC 7807) defines a \"problem detail\" as a way\n        to carry machine-readable details of errors in a HTTP response to avoid\n        the need to define new error response formats for HTTP APIs.\n        See: https://tools.ietf.org/html/rfc7807\n      properties:\n        type:\n          type: string\n          format: uri\n          description: \u003e-\n            An absolute URI that identifies the problem type. When dereferenced,\n            it SHOULD provide human-readable documentation for the problem type\n            (e.g., using HTML).\n          default: 'about:blank'\n          example: 'https://example.com/probs/passenger-too-young'\n        title:\n          type: string\n          description: \u003e-\n            A short, summary of the problem type. Written in English and readable\n            for engineers (usually not suited for non technical stakeholders and\n            not localized); example: Service Unavailable\n        status:\n          type: integer\n          format: int32\n          description: \u003e-\n            The HTTP status code generated by the origin server for this occurrence\n            of the problem.\n          minimum: 100\n          maximum: 600\n          exclusiveMaximum: true\n          example: 503\n        detail:\n          type: string\n          description: \u003e-\n            A human readable explanation specific to this occurrence of the\n            problem.\n          example: Connection to database timed out\n        instance:\n          type: string\n          format: uri\n          description: \u003e-\n            An absolute URI that identifies the specific occurrence of the problem.\n \n    #### Fare-specific elements begin\n\n    FareOnline:\n      type: object\n      properties:\n        id:\n          description: unique id of the fare item to be included in accounting\n          type: string\n        type:\n          $ref: '#/components/schemas/FareType'\n        name:\n          $ref: '#/components/schemas/Text'\n        fareDetailDescription:\n          $ref: '#/components/schemas/Text'\n        price:\n          $ref: '#/components/schemas/PriceOnline'\n        regionalConstraint:\n          $ref: '#/components/schemas/RegionalConstraintOnline'\n        serviceConstraint:\n          $ref: '#/components/schemas/ServiceConstraintOnline'\n        carrierConstraint:\n          $ref: '#/components/schemas/CarrierConstraintOnline'\n        regulatoryConditions:\n          $ref: '#/components/schemas/RegulatoryConditions'\n        serviceClass:\n          $ref: '#/components/schemas/ServiceClass'\n        comfortClass:\n          $ref: '#/components/schemas/ComfortClass'\n        accommodationDetails:\n          $ref: '#/components/schemas/AccommodationTypeOnline'            \n        afterSalesCondition:\n          $ref: '#/components/schemas/AfterSalesConditionOnline'\n        combinationConstraint:\n          $ref: '#/components/schemas/FareCombinationConstraintOnline'\n        fulfillmentConstraint:\n          $ref: '#/components/schemas/FulfillmentConstraintOnline'\n        reductionConstraint:\n          $ref: '#/components/schemas/ReductionConstraintOnline'\n        legacyAccountingIdentifier:\n          $ref: '#/components/schemas/LegacyAccountingIdentifier'\n        travelValidityConstraint:\n          $ref: '#/components/schemas/TravelValidityConstraintOnline'\n        reservationDetails:\n          $ref: '#/components/schemas/ReservationDetail'     \n        placeSelection:\n          $ref: '#/components/schemas/PlaceSelection'\n        reservationLegacyParameter:\n          $ref: '#/components/schemas/LegacyReservationParameter'\n        coveredSection:\n          $ref: '#/components/schemas/TravelSection'\n        passengerConstraints:\n          $ref: '#/components/schemas/PassengerConstraints'\n      required:\n        - id\n        - type\n        - regionalConstraint\n        - combinationConstraint\n        - travelValidityConstraint\n        - afterSalesCondition\n\n    PassengerConstraints:\n      description: \u003e-\n        passenger constraints to be included in bar codes\n      type: array\n      items: \n         type: object\n         properties:\n            number:\n                 description: number of passengers with this constraint\n                 type: integer\n                 format: int32                 \n            upperAgeLimit:\n                 type: integer\n                 format: int32\n            lowerAgeLimit:\n                 type: integer\n                 format: int32\n\n    RegulatoryConditions:\n      description: \u003e- \n         General conditions applied to cover legal regulations within the area of validity. allocators must reflect these terms and\n         conditions in the conditions of combined offers and indicate them to the customer where required. Which indications are\n         mandatory to be shown to the customer will be defined in the SCICs\n          - CIV: terms and conditions according to COTIV regulation\n          - MD:  terms and conditions according to SMPS regulation\n          - EU-PRR: terms and conditions according to EU-PRR regulation\n      type: array\n      items: \n         type: string\n         enum:\n         - CIV\n         - MD\n         - EU-PRR\n        \n    LegacyAccountingIdentifier:\n      description: identifier of the fare in the current 301 accounting file\n      type: object\n      properties:\n        serialId:\n          description: sequential number of regional validities\n          type: integer\n          format: int32\n          minimum: 0\n          maximum: 99999\n        addId:\n          description: \u003e-\n            Sequential number of regional validities (leading positions in case the series is too short\n          type: integer\n          format: int32\n          minimum: 0\n          maximum: 99\n        tariffId:\n          description: sequential number of the fares for one regional validity\n          type: integer\n          format: int32\n          minimum: 0\n          maximum: 9999\n      \n    CalendarOnline:\n      type: object\n      properties:\n        fromDate:\n          type: string\n          format: date-time\n        untilDate:\n          type: string\n          format: date-time\n        dates:\n          description: \u003e-\n            dates included in the calendar. In case no dates are provided the range is assumed to be valid\n          type: array\n          items:\n            type: string\n            format: date-time\n        utcOffset:\n          description: \u003e- \n            offset to UTC in minutes (number of minutes to be added to get UTC dates)\n          type: integer\n          format: int32\n        \n    TravelValidityConstraintOnline:\n      type: object\n      description: \u003e-\n        travel validity data are needed to create barcode and control data (ETCD)\n        in allocator mode even in case they have been checked during the online sale\n      properties:\n        validTravelDates:\n          $ref: '#/components/schemas/CalendarOnline'\n        validityRange:\n          type: object\n          properties:\n            timeUnit:\n              type: string\n              enum:\n                - DAYS\n                - HOURS\n                - MINUTES\n            value:\n              type: integer\n              format: int32\n            hoursAfterMidnight:\n              description: validity extended after midnight\n              type: integer\n              format: int32\n          required:\n            - timeUnit\n            - value  \n        excludedTimeRange:\n          description: time ranges excluded from the validity (e.g. off peak fulfillments)\n          type: array\n          items:\n            type: object\n            properties:\n              from:\n                description: minutes of the day in the time zone of travel\n                type: integer\n                format: int32\n              until:\n                description: minutes of the day in the time zone of travel\n                type: integer\n                format: int32\n              scope:\n                type: string\n                enum:\n                  - START_OF_TRAVEL\n                  - COMPLETE_RANGE\n            required:\n              - from\n              - until\n              - scope\n        numberOfTravelDays:\n          description: number of allowed travel days (e.g. 3 travel days within 2 weeks)\n          type: integer\n          format: int32\n        returnConstraint:\n          description: a return trip with the same carrier must be sold in combination\n          type: object\n          properties:\n            latestReturn:\n              description: number of days after departure or start of validity of the last return\n              type: integer\n              format: int32\n            earliestReturn:\n              description: number of days after departure or start of validity of the earliest return\n              type: integer\n              format: int32\n            excludedWeekdays:\n              description: weekdays (ISO day of the week, 1 = Monday) between travel and return where travel is not allowed\n              type: array\n              items:\n                type: integer\n                format: int32\n          required:\n            - latestReturn\n            - earliestReturn\n      required:\n        - validityRange\n\n    ReductionConstraintOnline:\n      type: object\n      properties:\n        requiredCards:\n          description: \u003e-\n            One of the listed cards is required to be valid at the time of travel.\n          type: array\n          items:\n            $ref: '#/components/schemas/CardReference'\n      required:\n        - requiredCards\n \n    FareCombinationModel:\n      type: object\n      properties:\n        model:\n          description: \u003e-\n            Possible models are SEPARATE_TICKET, SEPARATE_CONTRACT, CLUSTERING, COMBINING. \n            The models need to be supported by the allocator.\n          type: string\n        combinableCarrier:\n          description: \u003e-\n            List of all carriers where the model can be applied, in case the list is empty\n            all combinations are allowed.\n          type: array\n          items:\n            $ref: '#/components/schemas/Company'\n        isValidOnlyWhenCombined:\n          description: \u003e-\n            This combination model applies only in case the fare is combined with another carrier\n          type: boolean\n          default: false\n        referenceCluster:\n          description: \u003e-\n            In case of CLUSTERING model: the cluster to which the fare belongs\n          type: string\n        allowedClusters:\n          description: \u003e-\n            In case of CLUSTERING model: the other clusters that allow a combination\n          type: array\n          items:\n            type: string\n        allowedCommonContracts:\n          description: \u003e-\n            List of carriers where a common contract with separate fulfillments are allowed.\n          type: array\n          items:\n            $ref: '#/components/schemas/Company'\n      required:\n        - model\n \n    FareCombinationConstraintOnline:\n      type: object\n      properties:\n        combinationModels:\n          type: array\n          minItems: 1\n          items:\n            $ref: '#/components/schemas/FareCombinationModel'\n      required:\n        - combinationModels\n \n    AfterSalesConditionOnline:\n      type: object\n      properties:\n        conditions:\n          type: array\n          minItems: 1\n          items:\n            $ref: '#/components/schemas/Condition'\n          description: \u003e-\n            Structured description of the sales or after-sales conditions.\n        supportsIndividualContracts:\n          description: Indicates that the after sales of this fare can be treated independently per person.\n          type: boolean\n          default: false    \n      required:\n        - conditions\n \n    PriceOnline:\n      type: object\n      description: allows specifying a price in multiple currencies\n      properties:\n        price:\n          type: array\n          minItems: 1\n          items:\n            $ref: '#/components/schemas/CurrencyPrice'\n      required:\n        - price\n \n    RelativeTime:\n      type: object\n      properties:\n        timeUnit:\n          description: \u003e-\n            Time unit in days, hours or minutes.\n          type: string\n          enum:\n            - DAYS\n            - HOURS\n            - MINUTES\n        timeValue:\n          type: integer\n          format: int32\n        timeReference:\n          description: \u003e-\n            Time reference.\n          type: string\n          x-extensible-enum:\n            - BEFORE_DEPARTURE\n            - AFTER_DEPARTURE\n            - AFTER_SALE\n            - BEFORE_START_VALIDITY\n            - AFTER_END_VALIDITY\n      required:\n        - timeUnit\n        - timeValue\n        - timeReference\n \n    AfterSalesRuleOnline:\n      type: object\n      properties:\n        transactionType:\n          description: code list Reason for after sale\n          type: string\n        fee:\n          $ref: '#/components/schemas/CurrencyPrice'\n        applicationTime:\n          $ref: '#/components/schemas/RelativeTime'\n        applicationTimeStamp:\n          description: Absolute application time (UTC) in case of online services\n          type: string\n          format: date-time\n        isCarrierFee:\n          description: indicates that the fee belongs to the carrier\n          type: boolean\n          default: true\n       \n      required:\n        - transactionType\n      \n    RegionalValidity:\n      type: array\n      items:\n        type: object\n        description: \u003e- \n          One of the elements Zone, ViaStation, TrainLink, Line, or Polygon defining the regional validity\n        properties:\n          seqNb:\n            description: order number of the list item\n            type: integer\n            format: int32\n          zone:\n            $ref: '#/components/schemas/Zone'\n          viaStations:\n            $ref: '#/components/schemas/ViaStations'\n          trainLink:\n            $ref: '#/components/schemas/TrainLink'\n          line:\n            $ref: '#/components/schemas/Line'\n          polygon:\n            $ref: '#/components/schemas/Polygon'\n    \n    Line:\n      type: object\n      description: \u003e-\n         terminalStation - in case the product requires a destination within the zone (e.g. local ticket \n         to go to the main rail station). \n         entryStation - Station to enter the zone in case the product requires to enter the zone via a \n         specific station (e.g. local zone ticket to start from the main rail station).\n      properties:\n        binaryLineId:\n          type: string\n          description: \u003e-\n            Id to support local traffic standards (e.g. VDV,...).\n        carrier:\n          $ref: '#/components/schemas/Company'\n        city:\n          type: integer\n          format: int32\n        entryStation:\n          $ref: '#/components/schemas/StationDetail'\n        lineId:\n          type: array\n          items:\n            type: string\n        terminalStation:\n          $ref: '#/components/schemas/StationDetail'\n        nutsCode:\n          description: \u003e-\n            Nomenclature des units territoriales statistiques  \n             COMMISSION REGULATION (EU) No 31/2011\n          type: string\n      required:\n        - carrier\n    \n    TrainLink:\n      type: object\n      properties:\n        fromStation:\n          $ref: '#/components/schemas/StationDetail'\n        toStation:\n          $ref: '#/components/schemas/StationDetail'\n        train:\n          type: string\n        travelDate:\n          type: string\n          format: date-time\n          description: \u003e-\n            date and time of the departure where the train link starts\n      required:\n        - fromStation\n        - toStation\n        - train\n        - travelDate\n       \n    Polygon:\n      type: object\n      properties:\n        edge:\n          type: array\n          minItems: 1\n          items:\n            $ref: '#/components/schemas/GeoCoordinate'\n    \n    ViaStations:\n      type: object\n      properties:\n        isBorder:\n          type: boolean\n          default: false\n        routeId:\n          type: integer\n          format: int32\n        seriesId:\n          type: integer\n          format: int32\n        alternativeRoute:\n          type: array\n          items:\n            $ref: '#/components/schemas/ViaStations'\n        carrier:\n          $ref: '#/components/schemas/Company'\n        route:\n          type: array\n          items:\n            $ref: '#/components/schemas/ViaStations'\n        serviceBrand:\n          $ref: '#/components/schemas/ServiceBrandCode'\n        station:\n          $ref: '#/components/schemas/StationDetail'\n        fareReferenceStationSet:\n          type: object\n          description: reference to a list of stations included in the fare\n          properties:\n            carrier:\n              $ref: '#/components/schemas/Company'\n            code:\n              type: string\n            name:\n              type: string\n          required:\n            - carrier\n            - code\n      required:\n        - station\n \n    Zone:\n      type: object\n      description: \u003e-\n        carrier - carrier responsible for the transport.\n        entryStation - Station to enter the zone in case the product requires to enter the zone via a specific station\n        (e.g. local zone ticket to start from the main rail station).\n        terminalStation - Terminal station in case the product requires a destination within the zone (e.g. local ticket\n        to go to the main rail station).\n      properties:\n        binaryZoneId:\n          type: string\n          format: base64\n          description: \n            Id to support local traffic standards (e.g. VDV,...)\n        carrier:\n          $ref: '#/components/schemas/Company'\n        city:\n          type: integer\n          format: int32\n        entryStation:\n          $ref: '#/components/schemas/StationDetail'\n        terminalStation:\n          $ref: '#/components/schemas/StationDetail'\n        zoneIds:\n          description: to be used in bar codes\n          type: array\n          items:\n            type: integer\n            format: int32\n        nutsCode:\n          description: Nomenclature des units territoriales statistiques COMMISSION REGULATION (EU) No 31/2011\n          type: string\n      required:\n        - carrier\n \n    FulfillmentConstraintOnline:\n      type: object\n      properties:\n        acceptedControlSecurityTypes:\n          type: array\n          minItems: 1\n          items:\n            $ref: '#/components/schemas/ControlSecurityType'\n        acceptedBarCodes:\n          description: for SiD fulfillment one of the listed bar codes is required\n          type: array\n          items:\n            description: \u003e-\n              Item according to IRS 90918-9: FCB, TLB, SSB\n            type: string\n            x-extensible-enum:\n              - FCB\n              - TLB\n              - SSB\n        requiredBarCodes:\n          description: \u003e-\n            One of the listed bar codes must be provided.\n          type: array\n          items:\n            type: string\n        requiredSiS:\n          description: \u003e-\n            To guarantee security in system (SiS) of the fulfillment one of the listed interfaces is required.\n          type: array\n          items:\n            description: \u003e-\n              Interface type to ticket control data. REGISTRY means submitting\n              the data to the central UIC registry. PEER_TO_PEER means data exchange\n              is handled between the two parties directly.\n            type: string\n            x-extensible-enum:\n              - REGISTRY\n              - PEER_TO_PEER\n        individualTicketingPermitted:\n          description: a separate fulfillment per traveler is permitted\n          type: boolean\n      required:\n        - acceptedFulfillmentTypes\n        - individualTicketingPermitted\n   \n    TravelSection:\n      type: object\n      properties:\n        start:\n          $ref: '#/components/schemas/Location'\n        end:\n          $ref: '#/components/schemas/Location'\n      required:\n        - start\n        - end\n\n    CrossBorderCondition:\n      type: object\n      properties:\n        fromCountry:\n          description: ISO 3166 2A codes\n          type: string\n        toCountry:\n          description: ISO 3166 2A codes\n          type: string\n        affectedServiceBrands:\n          type: array\n          items:\n            $ref: '#/components/schemas/ServiceBrandCode'\n      required:\n        - fromCountry\n        - toCountry\n      \n    ControlSecurityType:\n      description: \u003e-\n        SIP: secure paper tickets; SID: security in data (signed bar code); SIS: security in system\n      type: string\n      x-extensible-enum:\n        - SIP\n        - SID\n        - SIS\n    \n    LegacyReservationParameter:\n      type: object\n      description: reservation parameter to support the UIC 90918-1 interface for booking\n      properties:\n        travelClass:\n          description: 90918-1 class code in reservation\n          type: string\n        serviceLevelCode:\n          description: service level code defined in UIC 90918-1\n          type: string\n        serviceCode:\n          description: service code to be used in reservation\n          type: string\n        berthType:\n          description: berth type code in UIC 90918-1 to be used in reservation\n          type: string\n        coachTypeCode:\n          description: coach type code in UIC 90918-1 to be used in reservation\n          type: string\n        compartmentTypeCode:\n          description: compartment type code in UIC 90918-1 to be used in reservation\n          type: string\n        tariff:\n          description: tariff according to UIC 90918-1 to be used for booking \n          type: array\n          items:\n            $ref: '#/components/schemas/LegacyReservationTariff'\n      required:\n        - travelClass\n        - serviceLevelCode\n        - serviceCode\n\n    LegacyReservationTariff:\n       description: legacy tariff code and number of items or persons in case UIC 90918-1 is used for booking\n       type: object\n       properties:\n          number:\n            description: number of items with this tariff code\n            type: integer\n            format: int32\n          code: \n            description:  legacy tariff code\n            type: integer\n            format: int32            \n          \n    CarrierConstraintOnline:\n      type: object\n      description: \u003e-\n        Either excluded or included carriers can be set.\n      properties:\n        restrictedToCarrier:\n          type: array\n          items:\n            type: string\n        excludedCarrier:\n          type: array\n          items:\n            type: string\n    \n    AccommodationTypeOnline:\n      type: object\n      properties:\n        accommodationType:\n            $ref: '#/components/schemas/AccommodationType'  \n        accommodationSubType:\n            $ref: '#/components/schemas/AccommodationSubType'              \n        text:\n          $ref: '#/components/schemas/Text'\n        includesClassName:\n          description: indicates that the class name is included\n          type: boolean\n          default: true\n        reservationParameterId:\n          type: string\n      required:\n        - id\n        - text\n    \n    ServiceConstraintOnline:\n      type: object\n      description: \u003e-\n        Either excluded or included service brands can be set.\n      properties:\n        restrictedToServiceBrands:\n          type: array\n          items:\n            $ref: '#/components/schemas/ServiceBrandCode'\n        excludedServiceBrands:\n          type: array\n          items:\n            $ref: '#/components/schemas/ServiceBrandCode'\n    \n    FareType:\n      description: \u003e-\n        Basic UIC fare types used in 90918-10, 90918-4, and 90918-9.\n      type: string\n      x-extensible-enum:\n        - ADMISSION\n        - RESERVATION\n        - INTEGRATED_RESERVATION\n        - ANCILLARY\n    \n    RegionalConstraintOnline:\n      type: object\n      description: \u003e-\n        Regional constraint of the fare- offline bulk data use the id of connection points whereas in an online environment the connection point is included\n      properties:\n        entryConnectionPointId:\n          description: connection point connecting two fare regimes\n          type: string\n        entryConnectionPoint:\n          $ref: '#/components/schemas/FareConnectionPoint'\n        exitConnectionPointId:\n          description: connection point connecting two fare regimes\n          type: string\n        exitConnectionPoint:\n          $ref: '#/components/schemas/FareConnectionPoint'\n        regionalValidity:\n          $ref: '#/components/schemas/RegionalValidity'\n        distance:\n          description: Distance in km for statistics\n          type: integer\n          format: int32\n      required:\n        - regionalValidity\n    \n    FareConnectionPoint:\n      type: object\n      description: \u003e-\n        Connection point connecting two fare regimes. The connection is possible between stations of the two provided station sets.\n        A legacy border point code might be provided as an additional code within the stations (code list BORDER_POINT). \n        In case the connection point is a real station this station is indicated. \n        In case the connection point is between stations for each side of the border real stations must be provided. \n        Multiple sets of station can be provided in the rare case that the connection point connects more than two station (A-B and A-C).\n        Multiple stations within a set at one side of the border might be provided in case of changes (new stations build near the border). \n        \n        Providing the UIC code for the station is mandatory. \n      properties:\n        id:\n          type: string\n        name:\n          type: string\n        stationSets:\n          type: array\n          items:\n            type: array\n            items:\n              $ref: '#/components/schemas/StationDetail'\n      required:\n        - id\n        - stationSets\n\n    ##### Fare-specific elements end\n\n    #### Common elements start\n    ## Referenced by distributor as well as allocator part\n\n    Link:\n      type: object\n      description: \u003e-\n        The underlying system may provide additional links pointing on further\n        information (such as HTML download links, web sites or extended APIs).\n        Mechanism to add flexible extensions specific to an underlying system.\n      properties:\n        contentTypes:\n          type: array\n          example: '[\"application/json\", \"application/pdf\"]'\n          description: Possible content types of the resource.\n          items:\n            type: string\n        href:\n          type: string\n          format: uri\n          description: URL to the linked resource (no parameters needed).\n          example: 'https://www.brussels.info/train-stations/'\n        method:\n          type: string\n          example: GET\n          description: HTTP method to call the action\n        relation:\n          type: string\n          example: Get Map\n          description: Relation of this link to the current entity.\n        version:\n          type: integer\n          format: int32\n          example: 1\n          description: Version of the current relation.\n      required:\n        - contentTypes\n        - href\n        - relation\n\n    Translation:\n      type: object\n      properties:\n        language:\n          type: string\n          description: language code following RFC2616-sec14.4\n        text:\n          type: string\n        shortText:\n          type: string\n      required:\n        - language\n        - text\n    \n    Text:\n      type: object\n      description: directly included text in case of online services\n      properties:\n        id:\n          type: string\n        translations:\n          type: array\n          items:\n            $ref: '#/components/schemas/Translation'\n        text:\n          type: string\n        shortText:\n          type: string\n      required:\n        - id\n        - text\n\n    CurrencyPrice:\n      type: object\n      minProperties: 1\n      properties:\n        currency:\n          $ref: '#/components/schemas/Currency'\n        amount:\n          description: amount in cents\n          type: integer\n          format: int32\n        scale: \n          description: scale of the amount - the number of positions after the comma\n          type: integer\n          default: 2\n        vatDetails:\n          type: array\n          items:\n            $ref: '#/components/schemas/VatDetail'\n      required:\n        - currency\n        - amount\n\n    Currency:\n      description: ISO4217 currency codes\n      type: string  \n\n    VatDetail:\n      type: object\n      properties:\n        country:\n          description: ISO 3166 2A codes\n          type: string\n        amount:\n          description: amount in cents\n          type: integer\n          format: int32\n        scale: \n          description: scale of the amount - the number of positions after the comma\n          type: integer\n          default: 2          \n        percentage:\n          type: number\n          format: float\n        taxId:\n          type: string\n        scope:\n           $ref: '#/components/schemas/VatScope'\n      required:\n        - country\n        - amount\n\n    VatScope:\n      description: scope where the VAT applies\n      type: string\n      x-extensible-enum:\n       - INTERNATIONAL\n       - NATIONAL\n       - SHORT_DISTANCE\n       - LONG_DISTANCE\n\n    Company:\n      description: \u003e-\n        RICS company code or the upcoming compatible ERA company code. In case proprietary codes are used on a bilateral base the \n        codes must have at least 5 positions and start with x\n      type: string\n\n    ServiceBrandCode:\n      description: \u003e-\n        Service brand codes allowed in response, code list can be found on \n        [https://uic.org/passenger/passenger-services-group/article/service-brand-code-list]\n        (https://uic.org/passenger/passenger-services-group/article/service-brand-code-list)\n      type: integer\n      format: int32\n\n    ServiceClass:\n      type: object\n      properties:\n        id:\n          $ref: '#/components/schemas/ServiceClassId'\n        carrierName:\n          type: string\n          description: \u003e-\n            the name the carrier itself uses to designate this specific service class\n      required:\n        - id\n      \n    ServiceClassId:\n      description: \u003e-\n       Level of quality, finer grained than the comfort class.\n      type: string\n      x-extensible-enum:\n        - BEST\n        - HIGH\n        - STANDARD\n        - BASIC\n\n    Condition:\n      type: object\n      description: \u003e-\n        Describes sales and after sales conditions applicable to the product. \n        For a product to be refundable or exchangeable, at least one refund or exchange \n        (respectively) condition must be present.\n      properties:\n        type:\n          type: string\n          x-extensible-enum:\n            - SALE\n            - EXCHANGE\n            - REFUND\n            - TRAVEL\n        description:\n          type: string\n        validFrom:\n          type: string\n          format: date-time\n        validUntil:\n          type: string\n          format: date-time\n        afterSalesFee:\n          type: object\n          properties:\n            feeAmount:\n              $ref: '#/components/schemas/CurrencyPrice'\n            isCarrierFee:\n              description: indicates that the fee belongs to the carrier\n              type: boolean\n              default: true\n      required:\n        - type\n        - description\n\n    Location:\n      type: object\n      description: \u003e-\n        location includes one of station, poi, address, geoCoordinate, connectionPoint\n        The ConnectionPoint exists to define virtual border points between two stations.  \n      properties:\n        id:\n          type: string\n          description: unique id of this location on this server.\n        title:\n          type: string\n          example: Bruxelles-Midi\n        station:\n          $ref: '#/components/schemas/StationDetail'\n        poi:\n          $ref: '#/components/schemas/Poi'\n        address:\n          $ref: '#/components/schemas/Address'\n        geoCoordinate:\n          $ref: '#/components/schemas/GeoCoordinate'\n        connectionPoint:\n          $ref: '#/components/schemas/ConnectionPoint'\n        links:\n          type: array\n          description: Context information required by the services.\n          items:\n            $ref: '#/components/schemas/Link'\n      required:\n        - id\n        - title\n\n    StationDetail:\n      type: object\n      description: \u003e-\n        Details of a station. In some countries stations have\n        multiple names depending on the countries local languages.\n      properties:\n        localCode:\n          description: code unique with in the country only\n          type: string\n        country:\n          description: ISO 3166 2A codes\n          type: string\n        codes:\n          type: array\n          items:\n            $ref: '#/components/schemas/StationCode'\n          description: \u003e-\n            The codes that can be used to represent the given station on the system.\n            There can be several codes, in which case  it is relevant to have a list\n            of couples.\n        geoCoordinate:\n          $ref: '#/components/schemas/GeoCoordinate'\n        names:\n          description: names of the station depending on language\n          type: array\n          items:\n            $ref: '#/components/schemas/Translation'\n      required:\n        - country\n        - codes\n\n    StationCode:\n      type: object\n      properties:\n        codeList:\n          description: \u003e-\n            Code list used for the station codes: \n              - UIC: UIC codes as used by merits (UIC country code + local code)\n              - UIC-R: UIC codes for reservation (UIC country code + local code reservation) \n              - ERA: future ERA station code\n          type: string\n          x-extensible-enum:\n            - UIC\n            - UIC-R\n            - ERA\n          default: UIC\n        code:\n          type: string\n          description: the code representing the station in the specified code-list     \n      required:\n        - code\n        - codeList\n\n    Poi:\n      type: object\n      description: \u003e-\n        POI (for point of Interest) represent a location that is not a train station but still relevant to the \n        description of the trip. It could be a public transport stop, an exhibition, an event hall, a shopping mall etc.\n      properties:\n        codes:\n          type: array\n          items:\n            type: object\n            properties:\n              codeList:\n                description: Code list used for the POI codes.\n                type: string\n                default: UIC\n              code:\n                type: string\n                description: the code representing the POI in the specified code list\n          description: \u003e-\n            The codes that can be used to represent the given POI on the system. There can be several codes, \n            in which case it is relevant to have a list of couples.\n        country:\n          description: ISO 3166 2A codes\n          type: string\n        names:\n          description: names of the point of interest depending on language\n          type: array\n          items:\n            $ref: '#/components/schemas/Translation'\n          example: Bern Baerengraben (Denkmal)\n        geoCoordinate:\n          $ref: '#/components/schemas/GeoCoordinate'\n      required:\n        - localCode\n\n    Address:\n      type: object\n      description: used to encode an address using the standard street address attributes\n      properties:\n        street_nr:\n          type: string\n          description: the street name and house number (if applicable)\n          example: Segantinistrasse 23\n        city:\n          description: city\n          type: string\n          example: Bern\n        postalCode:\n          description: postal code\n          type: string\n          example: 3006\n        country:\n          description: ISO 3166 2A codes\n          type: string\n        geoCoordinate:\n          $ref: '#/components/schemas/GeoCoordinate'\n      required:\n         - street\n         - city\n         - postalCode\n\n    GeoCoordinate:\n      type: object\n      description: \u003e-\n        Used to provide any geo-encoded location, regardless of environment, using longitude and latitude coordinates.\n      properties:\n        system:\n          description: \u003e-\n            geo coordinate system indication: \n             - WGS84 = WGS 84 standard system,\n             - GRS80 = (outdated) GRS 80 coordinate system\n          type: string\n          x-extensible-enum:\n            - WGS84\n            - GRS80\n          default: WGS84\n        accuracy:\n          description: accuracy of the provided coordinates to be used when comparing coordinates\n          type: number\n          format: float\n          example: 0.00002\n        latitude:\n          description: \u003e-\n            Geographic coordinate that specifies the north-south position of a point on the earths surface\n          type: number\n          format: float\n          example: 46.948825\n        longitude:\n          description: \u003e-\n            Geographic coordinate that specifies the east-west position of a point on the earths surface.            \n          type: number\n          format: float\n          example: 7.439122\n      required:\n        - latitude\n        - longitude\n\n    ConnectionPoint:\n      type: object\n      description: \u003e-\n        Connection point connecting two fare regimes.\n        Providing the UIC code for the station is mandatory. \n      properties:\n        stations:\n          type: array\n          items:\n            type: array\n            items:\n              $ref: '#/components/schemas/StationCode'\n      required:\n        - stations\n\n    ReservationDetail:\n      type: object\n      description: segmentIndex references a segmentIndex in the trip part within the offer reply\n      properties:\n        accommodationType:\n          $ref: '#/components/schemas/AccommodationType'  \n        accommodationSubType:\n          $ref: '#/components/schemas/AccommodationSubType'  \n        reservedPlaces:\n          description: \u003e-\n            Reserved places in a confirmed reservation. \n            Multiple place packs are needed to combined person and bicycle reservations\n          type: array\n          items:\n            $ref: '#/components/schemas/PlacePack'\n\n    PlacePack:\n      type: object\n      description: \u003e-\n          selection of places with common properties\n          description element - textual description of the places\n          placeProperties is mandatory for allocator mode, for distributors the textual description is used\n      properties:\n        id:\n          type: string\n        passengerReferences:\n          description: reference of the traveller / reservation holder\n          type: string\n        vehicle:\n          description: vehicle number (e.g. train number)\n          type: string  \n        coach:\n          type: string\n        places:\n          description: descriptive string of the places (e.g. 11-35,51)\n          type: string\n        placeIds:\n          description: list of individual place numbers\n          type: array\n          items:\n            type: string\n        placeProperties:\n          description: place properties to be indicated to the customer\n          type: array\n          items:\n            type: object\n            description: place properties of places in the place pack. Properties without a  number refer to all places\n            properties:\n              placeProperty:\n                description: see code list\n                type: string\n              number:\n                description: number of places with this property\n                type: integer\n                format: int32\n              priority:\n                description: priority for displaying a list of properties\n                type: integer\n                format: int32\n            required:\n              - placeProperty\n      required:         \n        - id\n        - reference\n        - vehicle\n        - coach\n        - places\n\n    AccommodationType:\n      type: string\n      description:  \u003e-\n        Accommodation type definition out of AccommodationTypeCodeList\n\n    AccommodationSubType:\n      type: string\n      description:  \u003e-\n        Accommodation type definition out of AccommodationSubTypeCodeList\n\n    PlaceSelection:\n      type: object\n      description: \u003e-\n        Place selection options and selected options in an offer\n        - optional place properties to choose from\n        - selected optional place properties (selectedOptions)\n        - selectable places for a graphical place selection \n        - selectedPlaces from a graphical place selection (selectedPlaces)\n        - reference place for adjacent reservation (referencePlace)\n      properties:\n        reservationOptions:\n          $ref: '#/components/schemas/ReservationOnlineOption' \n        vehicle:\n          description: \u003e-\n            Vehicle / train number is necessary in case of train parts with different train numbers\n          type: string\n        referencePlace: \n          type: object\n          description: selected place for an adjacent reservation (NEARBY)\n          properties:\n            placeNumber:\n              type: string\n            coachNumber:\n              type: string\n        selectedOptions:\n          type: array\n          items:\n            $ref: '#/components/schemas/PlaceOptionsBundle'\n        selectedCoach:\n          $ref: '#/components/schemas/SelectedCoach'\n\n    ReservationOnlineOption:\n      type: object\n      properties:\n        preferences:\n          description: possible preferences to be requested in reservation without changing the fare\n          type: array\n          items:\n            $ref: '#/components/schemas/ReservationOptionGroup'\n        graphicalReservation:\n          description: graphical reservation is supported, interface type \"NO\",\"UIC_918\",..\n          type: string\n\n    ReservationOptionGroup:\n      type: object\n      properties:\n        preferenceGroup:\n          type: string\n          example: SEAT_DIRECTION\n        preferences:\n          type: array\n          items:\n            type: string\n            example: 'FORWARD_FACING'\n      required:\n        - preferenceGroup\n        - preferences\n\n    PlaceOptionsBundle:\n      type: object\n      description: \u003e-\n        Place selection of places for reservation linked to passengers.\n      properties:\n        passengers:\n          type: array\n          items:\n            $ref: '#/components/schemas/Passenger'\n        selectedPlaceProperties: \n          description: Properties of places as defined in 90810-10.\n          type: array\n          items:\n            description: selection from the optional place properties provided in the offer\n            type: string\n   \n    PlaceAvailability:\n      type: object\n      description: \u003e-\n        Availability of places on coaches.\n      properties:\n        coaches:\n          description: \u003e-\n            List of the coaches in a train run ordered according to the physical\n            ordering of the train.\n          type: array\n          items:\n            type: object\n            properties:\n              compartments:\n                description: \u003e-\n                  Areas within a coach that holds places. Areas might be selectable\n                  as a whole. Usual areas would be classic compartments.\n                type: array\n                items:\n                  type: object\n                  properties:\n                    places:\n                      type: array\n                      items:\n                        $ref: '#/components/schemas/Place'\n                    status:\n                      type: string\n                    isSelectable:\n                      description: to indicate compartments selectable as a whole only\n                      type: boolean\n                      default: false\n              number:\n                description: coach number\n                type: string\n              status:\n                $ref: '#/components/schemas/AvailabilityStatus'\n              layoutId:\n                description: id to identify the coach layout\n                type: string\n              layoutIdUpperDeck:\n                description: id to identify a layout for the upper deck in a double deck coach\n                type: string\n              layoutIdLowerDeck:\n                description: id to identify a layout for the lower deck in a double deck coach\n                type: string\n              direction:\n                description: \u003e-\n                  indication of the direction of travel standard direction is left\n                  to right with ascending coordinates in the layout values.\n                type: string\n                x-extensible-enum:\n                 - UNSPECIFIED\n                 - IN_DIRECTION\n                 - OPPOSITE_DIRECTION\n                 - CHANGING\n                 - STARING_IN_DIRECTION\n              coachOwner:\n                $ref: '#/components/schemas/Company'\n              specialCoach:\n                type: string\n                description: indication of special coach \n                x-extensible-enum: \n                  - RESTAURANT_COACH\n                  - BICYCLE_COACH\n                  - LUGGAGE_COACH\n                  - TRAIN_HEAD                \n            required:\n              - number\n              - layoutId    \n\n    Place:\n      description: description of a place\n      type: object\n      properties:\n        number:\n          description: \u003e-\n            the place number as indicated at the place in the coach\n          type: string\n        status:\n          $ref: '#/components/schemas/AvailabilityStatus'\n        isSelectable:\n          description: \u003e-\n            Flag to indicate individual places as non-selectable in\n            case complete compartments must be selected\n          type: boolean\n          default: true\n      required:\n        - number\n        - status\n\n    AvailabilityStatus:\n      description: status of the place or coach\n      type: string\n      enum:\n        - ALLOCATED\n        - FREE\n        - RESTRICTED\n      default: FREE\n\n    SelectedCoach:\n      type: object\n      description: \u003e-\n        Place selection from a graphical display of coaches.\n      properties:\n        selectedCoaches:\n          description: selected coach and places in case of graphical reservation\n          type: array\n          items:\n            $ref: '#/components/schemas/SelectedPlaces'\n      required:\n        - selectedCoaches\n\n    SelectedPlaces:\n      type: object\n      properties:\n        coachNumber: \n          type: string\n        selectedPlaces:\n          description: selected places in case of graphical booking\n          type: array\n          items:           \n            type: object\n            properties:\n              passengerId:\n                description: \u003e-\n                  reference of the passenger.id\n                type: string\n                format: uuid\n              place:\n                type: string \n\n    Passenger:\n      type: object\n      description: \u003e-\n        Passenger information needed at offering step.\n      properties:\n        id: \n          type: string\n          description: \u003e-\n            Id of the passenger resource in case service to patch a single passenger is provided.\n          format: uuid\n        abstract:\n          type: string\n          example: Andreas Schlapbach\n        reference:\n          description: \u003e-\n            stable reference to passengers from other elements, or from caller\n            system.\n          type: string\n        dateOfBirth:\n          description: date of birth of the passenger\n          type: string\n          format: date\n        cards:\n          description: reduction or loyalty cards owned by the passenger \n          type: array\n          items:\n            $ref: '#/components/schemas/CardReference'\n        gender:\n          $ref: '#/components/schemas/Gender'\n        details:\n          $ref: '#/components/schemas/PassengerDetail'\n        passport:\n          $ref: '#/components/schemas/IdentificationDocument'\n        transportableDetails:\n          $ref: '#/components/schemas/Transportable'          \n        prmNeeds:\n          type: string\n          x-extensible-enum:\n            - WHEELCHAIR\n            - ACCOMPDOG\n            - COMPANIONSEAT\n            - COMPANION\n        links:\n          type: array\n          items:\n            $ref: '#/components/schemas/Link'\n      required:\n        - title\n        - links\n\n    PassengerDetail:\n      type: object\n      description: \u003e- \n        Passenger information potentially needed at booking step. The main purpose is\n        being able to inform the customer of delays or disruptions.\n        PassengerDetails providing personal information only information required in the booking.\n        It is not allowed to send personal information not required in the booking reply.\n        It is not allowed to send these personal data already in the booking request.\n      properties:\n        preferredLanguage:\n          type: string\n          description: Languages spoken by the traveler (ISO Language code)\n        title:\n          type: string\n        firstName:\n          type: string\n        lastName:\n          type: string\n        eMail:\n          type: string\n        phone:\n          description: Preferably a mobile phone\n          type: string\n\n    Gender:\n      description: \u003e- \n        The gender of the passenger, which is important in the case of night trains.\n      type: string\n      enum:\n        - MALE\n        - FEMALE\n        - X\n\n    Transportable:\n      type: object\n      description: \u003e- \n        Transportables which are handled similar to passengers like dogs, bicycles, car transport.\n        These transportables might need a ticket or reservation.\n      properties:\n        type:\n          description: \u003e- \n            Subset of the values from the traveler type code list IRS 90918-10 \n          type: string\n          x-extensible-enum:\n            - PET\n            - BICYCLE\n            - CAR\n            - MOTOR_CYCLE\n            - CAR_TRAILER\n        car:\n          $ref: '#/components/schemas/Car'\n        motorCycle:\n          $ref: '#/components/schemas/MotorCycle'\n        trailer:\n          $ref: '#/components/schemas/Trailer'\n      required:\n        - type\n\n    Car:\n      type: object\n      properties:\n        weight:\n          type: integer\n          format: int32\n        length:\n          type: integer\n          format: int32\n        width:\n          type: integer\n          format: int32\n        height:\n          type: integer\n          format: int32\n        model:\n          type: string\n          description: Free text description of the model (e.g. BMW X5)       \n        attachedItems:\n          description: Indication of items attached to the car\n          type: array\n          items:\n            type: string\n            x-extensible-enum:\n              - ROOF_RACK\n              - BICYCLE_STAND\n        plate:\n          description: \u003e-\n            The trailer plate is a personal data item and must not be provided in an offer request. \n            It must be patched into the offer after the customer accepted the offer for booking.\n          type: string\n      required:\n        - weight\n        - length\n        - width\n        - height\n        - model\n\n    MotorCycle:    \n      type: object\n      properties:\n        includingSideCar:\n          type: boolean\n          default: false\n        plate:\n          description: \u003e-\n            The trailer plate is a personal data item and must not be provided in an offer request. \n            It must be patched into the offer after the customer accepted the offer for booking \n          type: string   \n      required:\n        - includingSideCar\n\n    Trailer:\n      type: object\n      properties:\n        weight:\n          description: weight in kg\n          type: integer\n          format: int32\n        length:\n          description: length in cm\n          type: integer\n          format: int32\n        width:\n          description: width in cm\n          type: integer\n          format: int32\n        height:\n          description: length in cm\n          type: integer\n          format: int32\n        plate:\n          description: \u003e-\n            The trailer plate is a personal data item and must not be provided in an offer request. \n            It must be patched into the offer after the customer accepted the offer for booking \n          type: string\n      required:\n        - weight\n        - length\n        - width\n        - height\n\n    IdentificationDocument:\n      type: object\n      description: \u003e- \n        Travel document data to be exchanged for border control in case of legal requirements\n        PassengerDetails providing personal information only information required in the offer. \n        It is not allowed to send personal information not required in the offer reply. \n        It is legally not allowed to send these personal data already in the offer request.\n      properties:\n        id:\n          description: Identifier on the document.\n          type: string\n        type:\n          description: Refer to code list for values\n          type: string\n        name:\n          description: ICAO transliteration identical as written in the document\n          type: string\n        nationality:\n          description: ISO 3166 2A codes\n          type: string\n        cityOfBirth:\n          type: string\n        cityOfIssue:\n          description: place where the document is issued\n          type: string\n        cityOfResidence:\n          type: string\n        countryOfBirth:\n          description: ISO 3166 2A codes\n          type: string\n        countryOfIssue:\n          description: ISO 3166 2A codes\n          type: string\n        countryOfResidence:\n          description: ISO 3166 2A codes\n          type: string\n        dateOfIssue:\n          type: string\n          format: date-time\n        gender:\n          $ref: '#/components/schemas/Gender'\n        limitOfValidity:\n          type: string\n          format: date-time\n      required:\n        - id\n        - type\n\n    CardReference:\n      type: object\n      properties:\n        type:\n          description: Type of card, can be a reduction or loyalty card.\n          type: string\n          enum:\n            - REDUCTION\n            - LOYALTY\n            - BOTH\n        code:\n          description: Code of the card type according to code list.\n          type: string\n        codeList:\n          description: Code list for the code provided.\n          type: string\n        name:\n          description: Card name for printing on fulfillments.\n          type: string\n        number:\n          description: Unique number identifying the card.\n          type: string\n        issuer:\n          $ref: '#/components/schemas/Company'\n      required:\n        - type\n        - codeList\n        - code\n\n    #### Common elements end\n",
			"canonicalURL": "/github.com/UnionInternationalCheminsdeFer/OSDM@1b3263fae6fdf4850636b89255929ab029c5fe85/-/blob/specification/v1.0.0/OSDM-online-api-v1.0.0.yml",
			"externalURLs": [
				{
					"url": "https://github.com/UnionInternationalCheminsdeFer/OSDM/blob/1b3263fae6fdf4850636b89255929ab029c5fe85/specification/v1.0.0/OSDM-online-api-v1.0.0.yml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "parse: parse spec: parse components: schemas: \"TripOffer\": resolve \"#/components/schemas/TripOffer\": property \"offers\": items: $ref: resolve \"#/components/schemas/Offer\": property \"admissions\": items: $ref: resolve \"#/components/schemas/Admission\": property \"commonOfferPartAttributes\": $ref: resolve \"#/components/schemas/CommonOfferPartAttributes\": property \"refundable\": at specification/v1.0.0/OSDM-online-api-v1.0.0.yml:3816:13: parse enum values: parse value \"true\": expected type \"string\", got \"bool\""
}