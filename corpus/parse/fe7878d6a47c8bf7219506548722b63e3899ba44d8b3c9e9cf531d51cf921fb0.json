{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/plantbreeding/BrAPI"
		},
		"file": {
			"name": "Search_Images_SearchResultsDbId_GET.yaml",
			"size": 0,
			"path": "Specification/BrAPI-Phenotyping/Images/Search_Images_SearchResultsDbId_GET.yaml",
			"byteSize": 2012,
			"content": "info:\n  title: BrAPI\n  version: ''\nopenapi: 3.0.0\npaths:\n  /search/images/{searchResultsDbId}:\n    get:\n      summary: Get the results of a `Images` search request\n      description: |-\n        Get the results of a `Images` search request <br/>\n        Clients should submit a search request using the corresponding `POST /search/images` endpoint.\n        Search requests allow a client to send a complex query for data. However, the server may not respond with the search results immediately. \n        If a server needs more time to process the request, it might respond with a `searchResultsDbId`. \n        Use this endpoint to retrieve the results of the search. <br/> \n        Review the <a target=\"_blank\" href=\"https://wiki.brapi.org/index.php/Search_Services#POST_Search_Entity\">Search Services documentation</a> for additional implementation details.\n        <br/>\n        <br/>\n        Image Implementation Notes<br/>\n        - `imageURL` should be a complete URL describing the location of the image. There is no BrAPI call for retrieving the image content, so it could be on a different path, or a different host.<br/>\n        - `descriptiveOntologyTerm` can be thought of as Tags for the image. These could be simple descriptive words, or ontology references, or full ontology URI's.<br/>\n      parameters:\n      - $ref: '#/components/parameters/searchResultsDbId'\n      - $ref: '#/components/parameters/page'\n      - $ref: '#/components/parameters/pageSize'\n      - $ref: '#/components/parameters/authorizationHeader'\n      responses:\n        '202': \n          $ref: '#/components/responses/202AcceptedSearchResponse' \n        '200':\n          $ref: '#/components/responses/ImageListResponse'\n        '400':\n          $ref: '#/components/responses/400BadRequest'\n        '401':\n          $ref: '#/components/responses/401Unauthorized'\n        '403':\n          $ref: '#/components/responses/403Forbidden'\n        '404':\n          $ref: '#/components/responses/404NotFound'\n      tags:\n      - Images\n",
			"canonicalURL": "/github.com/plantbreeding/BrAPI@a45723dba8753a1c1177ec8f7759d57ebcf5f5b1/-/blob/Specification/BrAPI-Phenotyping/Images/Search_Images_SearchResultsDbId_GET.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/plantbreeding/BrAPI/blob/a45723dba8753a1c1177ec8f7759d57ebcf5f5b1/Specification/BrAPI-Phenotyping/Images/Search_Images_SearchResultsDbId_GET.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "parse: parse spec: parse operations: path \"/search/images/{searchResultsDbId}\": at 1:104: get: at 1:111: parameters: parse parameter \"\": at 1:1273: resolve \"#/components/parameters/searchResultsDbId\" reference: can't find value for \"components/parameters/searchResultsDbId\""
}