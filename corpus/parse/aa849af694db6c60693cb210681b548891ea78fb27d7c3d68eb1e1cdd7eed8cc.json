{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/MineSkin/api.mineskin.org"
		},
		"file": {
			"name": "openapi.yml",
			"size": 0,
			"path": "openapi.yml",
			"byteSize": 10736,
			"content": "openapi: 3.0.3\ninfo:\n  title: MineSkin API\n  version: 0.0.0\n  description: |\n    Client implementations: \n    Java: https://github.com/InventivetalentDev/MineskinClient\n    NodeJS: https://github.com/InventivetalentDev/mineskin-client\n    \n    Examples: https://github.com/MineSkin/examples\n  contact:\n    name: inventivetalent\n    url: https://discord.gg/nzAdvPc\n    email: info@mineskin.org\n  license:\n    name: MIT\n    url: https://github.com/MineSkin/api.mineskin.org/blob/master/LICENSE\nservers:\n  - url: https://api.mineskin.org\ntags:\n  - name: generate\n  - name: get\n  - name: util\ncomponents:\n  securitySchemes:\n    bearerAuth:\n      description: Get your key from https://mineskin.org/apikey\n      type: http\n      scheme: bearer\n    apiKey:\n      description: Get your key from https://mineskin.org/apikey\n      type: apiKey\n      in: query\n      name: key\n\n  schemas:\n    PartialSkinInfo:\n      type: object\n      required: [ id, name, url, time ]\n      properties:\n        id:\n          type: integer\n        name:\n          type: string\n        url:\n          type: string\n        time:\n          type: integer\n    SkinInfo:\n      type: object\n      required: [ id, model, data ]\n      properties:\n        id:\n          type: integer\n        idStr:\n          type: string\n        uuid:\n          type: string\n        name:\n          type: string\n        model:\n          type: string\n          deprecated: true\n          enum: [ \"slim\", \"steve\", \"unknown\" ]\n        variant:\n          type: string\n          enum: [ \"classic\", \"slim\" ]\n        data:\n          $ref: '#/components/schemas/SkinData'\n        timestamp:\n          type: number\n        duration:\n          type: number\n        accountId:\n          type: integer\n          deprecated: true\n        account:\n          type: integer\n        server:\n          type: string\n        private:\n          type: boolean\n        views:\n          type: number\n    SkinData:\n      type: object\n      properties:\n        uuid:\n          type: string\n        texture:\n          $ref: '#/components/schemas/TextureInfo'\n    TextureInfo:\n      type: object\n      properties:\n        value:\n          type: string\n        signature:\n          type: string\n        url:\n          type: string\n    Stats:\n      type: object\n      properties:\n        server:\n          type: string\n        delay:\n          type: number\n    GenerateOptions:\n      type: object\n      properties:\n        model:\n          deprecated: true\n          type: string\n          enum: [ \"steve\", \"slim\" ]\n          default: \"steve\"\n        variant:\n          description: Skin variant - automatically determined based on the image if not specified\n          type: string\n          enum: [ \"classic\", \"slim\" ]\n        name:\n          type: string\n          maxLength: 20\n        visibility:\n          description: \"Visibility of the generated skin. 0 for public, 1 for private\"\n          type: integer\n          enum: [ 0, 1 ]\n          default: 0\n    UserValidation:\n      type: object\n      required: [ valid ]\n      properties:\n        valid:\n          type: boolean\n        uuid:\n          type: string\n        name:\n          type: string\n\n  parameters:\n    userAgent:\n      name: User-Agent\n      description: Custom User-Agent for your application, see [user-agent.dev](https://user-agent.dev/) for implementation examples\n      example: \"ExampleApp/v1.0\"\n      in: header\n      required: true\n\n\n  responses:\n    ErrorResponse:\n      description: Response if an error occured\n      content:\n        application/json:\n          schema:\n            required: [ error ]\n            properties:\n              errorCode:\n                type: string\n                description: Consistent error code, see [AuthError](https://github.com/MineSkin/api.mineskin.org/blob/793a926cbe4b90887ed8164c9eccfcb542fdeadb/src/generator/Authentication.ts#L580) \u0026 [GenError](https://github.com/MineSkin/api.mineskin.org/blob/47a5f51dc664e0f730b0073f70b2fc295e14ca3b/src/generator/Generator.ts#L1093)\n              error:\n                type: string\n                description: Error message\n    RateLimitResponse:\n      description: Response if the client sent a request too soon\n      content:\n        application/json:\n          schema:\n            required: [ error ]\n            properties:\n              error:\n                type: string\n                description: Error message\n              nextRequest:\n                type: integer\n                description: Unix timestamp when the next request is allowed\n              delay:\n                type: integer\n                description: The API's current delay in seconds\n\n    GeneratedSkin:\n      description: Successfully generated skin info\n      content:\n        application/json:\n          schema:\n            allOf:\n              - $ref: '#/components/schemas/SkinInfo'\n              - properties:\n                  nextRequest:\n                    type: integer\n                  duplicate:\n                    type: boolean\n    DelayInfo:\n      description: Delay info for the requesting client\n      content:\n        application/json:\n          schema:\n            properties:\n              delay:\n                type: integer\n              next:\n                type: integer\n              nextRelative:\n                type: integer\npaths:\n  /generate/url:\n    post:\n      tags:\n        - generate\n      parameters:\n        - $ref: '#/components/parameters/userAgent'\n      security:\n        - bearerAuth: []\n          apiKey: []\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              allOf:\n                - $ref: '#/components/schemas/GenerateOptions'\n                - properties:\n                    url:\n                      type: string\n      responses:\n        200:\n          $ref: '#/components/responses/GeneratedSkin'\n        400:\n          $ref: '#/components/responses/ErrorResponse'\n        429:\n          $ref: '#/components/responses/RateLimitResponse'\n        500:\n          $ref: '#/components/responses/ErrorResponse'\n  /generate/upload:\n    post:\n      tags:\n        - generate\n      parameters:\n        - $ref: '#/components/parameters/userAgent'\n      security:\n        - bearerAuth: [ ]\n          apiKey: [ ]\n      requestBody:\n        required: true\n        content:\n          application/x-www-form-urlencoded:\n            schema:\n              allOf:\n                - $ref: '#/components/schemas/GenerateOptions'\n                - properties:\n                    file:\n                      type: string\n                      format: binary\n      responses:\n        200:\n          $ref: '#/components/responses/GeneratedSkin'\n        400:\n          $ref: '#/components/responses/ErrorResponse'\n        429:\n          $ref: '#/components/responses/RateLimitResponse'\n        500:\n          $ref: '#/components/responses/ErrorResponse'\n  /generate/user:\n    post:\n      tags:\n        - generate\n      parameters:\n        - $ref: '#/components/parameters/userAgent'\n      security:\n        - bearerAuth: [ ]\n          apiKey: [ ]\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              allOf:\n                - $ref: '#/components/schemas/GenerateOptions'\n                - properties:\n                    uuid:\n                      type: string\n                      minLength: 32\n                      maxLength: 36\n      responses:\n        200:\n          $ref: '#/components/responses/GeneratedSkin'\n        400:\n          $ref: '#/components/responses/ErrorResponse'\n        429:\n          $ref: '#/components/responses/RateLimitResponse'\n        500:\n          $ref: '#/components/responses/ErrorResponse'\n\n  /get/delay:\n    get:\n      tags:\n        - get\n      parameters:\n        - $ref: '#/components/parameters/userAgent'\n      security:\n        - bearerAuth: [ ]\n          apiKey: [ ]\n      responses:\n        200:\n          $ref: '#/components/responses/DelayInfo'\n  /get/id/{id}:\n    get:\n      description: Deprecated. Use /get/uuid instead.\n      tags:\n        - get\n      parameters:\n        - name: id\n          in: path\n          required: true\n        - $ref: '#/components/parameters/userAgent'\n      responses:\n        200:\n          description: Skin Info\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/SkinInfo'\n  /get/uuid/{uuid}:\n    get:\n      tags:\n        - get\n      parameters:\n        - name: uuid\n          in: path\n          required: true\n        - $ref: '#/components/parameters/userAgent'\n      responses:\n        200:\n          description: Skin Info\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/SkinInfo'\n  /get/list/{page}:\n    get:\n      tags:\n        - get\n      parameters:\n        - name: page\n          in: path\n          required: false\n          description: For reference pagination, the uuid of the last skin in the previous page. For numeric pagination (deprecated), the page number or 'start'.\n        - $ref: '#/components/parameters/userAgent'\n      responses:\n        200:\n          description: Skin Info List\n          content:\n            application/json:\n              schema:\n                required: [ skins, page ]\n                properties:\n                  skins:\n                    type: array\n                    items:\n                      $ref: '#/components/schemas/PartialSkinInfo'\n                  page:\n                    type: object\n                    properties:\n                      index:\n                        type: integer\n                      amount:\n                        type: integer\n                      total:\n                        type: integer\n                  filter:\n                    type: string\n\n  /validate/name/{name}:\n    get:\n      tags:\n        - util\n      parameters:\n        - name: name\n          in: path\n          required: true\n        - $ref: '#/components/parameters/userAgent'\n      responses:\n        200:\n          description: Validation info about the requested user\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/UserValidation'\n  /validate/uuid/{uuid}:\n    get:\n      tags:\n        - util\n      parameters:\n        - name: uuid\n          in: path\n          required: true\n        - $ref: '#/components/parameters/userAgent'\n      responses:\n        200:\n          description: Validation info about the requested user\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/UserValidation'\n"
		}
	},
	"Error": "parse: parse spec: parse operations: paths: /get/list/{page}: get: operation \"\": parameters: parse parameter \"page\": path parameters must be required"
}