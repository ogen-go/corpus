{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/ngageoint/scale"
		},
		"file": {
			"name": "recipe_type.yml",
			"size": 0,
			"path": "scale/docs/rest/v6/recipe_type.yml",
			"byteSize": 22924,
			"content": "openapi: \"3.0.0\"\ninfo:\n  title: Recipe Type Services\n  version: v6\npaths:\n  /recipe-types/:\n    get:\n      operationId: _rest_v6_recipe_type_list\n      summary: Recipe Types\n      description: Returns a list of all recipe types\n      parameters:\n        - in: query\n          name: page\n          schema:\n            type: integer\n          description: The page of the results to return. Defaults to 1.\n        - in: query\n          name: page_size\n          schema:\n            type: integer\n          description: The size of the page to use for pagination of results.\n            Defaults to 100, and can be anywhere from 1-1000.\n        - in: query\n          name: keyword\n          schema:\n            type: string\n          description: Keyword to perform a 'like' search on name, title, and description |\n            may be duplicated to search for multiple keywords\n        - in: query\n          name: is_active\n          schema:\n            type: boolean\n          description: if provided, only return names with a least one version that matches is_active\n        - in: query\n          name: is_system\n          schema:\n            type: boolean\n          description: if provided, only return names with a least one version that matches is_system\n      responses:\n        '200':\n          description: 200 response\n          content:\n            application/json: \n              schema:\n                $ref: '#/components/schemas/recipe_type_list'\n    post:\n      operationId: _rest_v6_recipe_type_create\n      summary: Recipe Type Create\n      description: Creates a recipe type\n      requestBody:\n        required: true\n        content:\n          application/json: \n            schema:\n              $ref: '#/components/schemas/recipe_type_post'\n      responses:\n        '201':\n          description: The 201 CREATED response indicates a successful event\n          headers:\n            location:\n              schema:\n                type: string\n              description: The url of the created/edited recipe type\n          content:\n            application/json: \n              schema:\n                $ref: '#/components/schemas/recipe_type_detail'\n                \n  /recipe-types/{name}/:\n    get:\n      operationId: _rest_v6_recipe_type_details\n      summary: Recipe Type Details\n      description: Returns detailed information about the recipe type with the specified name\n      parameters:\n        - in: path\n          name: name\n          schema:\n            type: string\n          description: name of an existing recipe type\n      responses:\n        '200':\n          description: 200 response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/recipe_type_detail'\n    patch:\n      operationId: _rest_v6_recipe_type_update\n      summary: Recipe Type Update\n      description: Update one or more fields in an existing recipe type\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/recipe_type_update'\n      parameters:\n        - in: path\n          name: name\n          schema:\n            type: string\n          description: name of an existing recipe type\n      responses:\n        '200':\n          description: The 200 OK response indicates a successful event\n          content:\n            application/json: \n              schema:\n                $ref: '#/components/schemas/recipe_type_validation'\n          \n  /recipe-types/{name}/revisions/:\n    get:\n      operationId: _rest_v6_recipe_type_revisions\n      summary: Recipe Type Revisions\n      description: Returns a list of the revisions of a recipe type\n      parameters:\n        - in: path\n          name: name\n          schema:\n            type: string\n          description: name of an existing recipe type\n        - in: query\n          name: page\n          schema:\n            type: integer\n          description: The page of the results to return. Defaults to 1.\n        - in: query\n          name: page_size\n          schema:\n            type: integer\n          description: The size of the page to use for pagination of results.\n            Defaults to 100, and can be anywhere from 1-1000.\n      responses:\n        '200':\n          description: 200 response\n          content:\n            application/json: \n              schema:\n                $ref: '#/components/schemas/recipe_type_revisions'\n  /recipe-types/{name}/revisions/{revision_num}/:\n    get:\n      operationId: _rest_v6_recipe_type_revision_details\n      summary: Recipe Type Revision Details\n      description: Returns detailed information about the recipe type revision with the specified name and revision number\n      parameters:\n        - in: path\n          name: name\n          schema:\n            type: string\n          description: name of an existing recipe type\n        - in: path\n          name: revision_num\n          schema:\n            type: integer\n          description: revision number of the recipe type\n      responses:\n        '200':\n          description: 200 response\n          content:\n            application/json: \n              schema:\n                $ref: '#/components/schemas/recipe_type_revision_detail'\n\n  /recipe-types/validation/:\n    post:\n      operationId: _rest_v6_recipe_type_validation\n      summary: Recipe Type Validation\n      description: Validates a recipe type without creating/editing it\n      requestBody:\n        required: true\n        content:\n          application/json: \n            schema:\n              $ref: '#/components/schemas/recipe_type_validation_post'\n      responses:\n        '200':\n          description: The 200 OK response indicates a successful event\n          content:\n            application/json: \n              schema:\n                $ref: '#/components/schemas/recipe_type_validation'\ncomponents:\n  schemas:\n    recipe_type_list:\n      title: Recipe Type List\n      type: object\n      properties:\n        count:\n          type: integer\n          description: The total number of results that match the query parameters \n          example: 10\n        next:\n          type: string\n          format: uri\n          description: A URL to the next page of results.\n          example: null\n        previous:\n          type: string\n          format: uri\n          description: A URL to the previous page of results.\n          example: null\n        results:\n          type: array\n          items:\n            $ref: '#/components/schemas/recipe_type_name'\n          description: List of Recipe Type objects\n\n    recipe_type_name:\n      title: Recipe Type Name\n      type: object\n      properties:\n        id:\n          type: integer\n          example: 1\n        name:\n          type: string\n          example: my-recipe\n        title:\n          type: string\n          example: My Recipe\n        description:\n          type: string\n          example: My Recipe Description\n        is_active:\n          type: boolean\n          example: true\n        is_system:\n          type: boolean\n          example: false\n        revision_num:\n          type: integer\n          example: 1\n        job_types:\n          type: array\n          items:\n            type: object\n            required: [name, version]\n            properties:\n              name:\n                type: string\n                example: my-job\n              version:\n                type: string\n                example: 1.0.0\n          description: List of all job types that are referenced by this recipe type's definition\n        sub_recipe_types:\n          type: array\n          items:\n            type: string\n          description: List of all recipe types that are referenced by this recipe type's definition\n          example: [\"sub-recipe-1\"]\n        created:\n          type: string\n          format: date-time\n          description: When the associated database model was initially created.\n          example: 2015-09-10T15:24:53.503Z\n        deprecated:\n          type: string\n          format: date-time\n          description: When the recipe type was deprecated (previously known as archived).\n          example: 2015-09-10T15:24:53.987Z\n        last_modified:\n          type: string\n          format: date-time\n          description: When the associated database model was last saved.\n          example: 2015-09-10T15:24:53.987Z\n\n    recipe_type_base:\n      title: Recipe Type Base\n      type: object\n      properties:\n        id:\n          type: integer\n          example: 1\n        name:\n          type: string\n          example: my-recipe\n        title:\n          type: string\n          example: My Recipe\n        description:\n          type: string\n          example: My Recipe Description\n        revision_num:\n          type: integer\n          example: 1\n\n    recipe_type:\n      title: Recipe Type\n      allOf:\n        - ref: '#/components/schemas/recipe_type_base'\n        - type: object\n          properties:\n            is_active:\n              type: boolean\n              example: true\n            is_system:\n              type: boolean\n              example: false\n            definition:\n              $ref: '#/components/schemas/recipe_type_def'\n            revision_num:\n              type: integer\n              example: 1\n            created:\n              type: string\n              format: date-time\n              description: When the associated database model was initially created.\n              example: 2015-09-10T15:24:53.503Z\n            deprecated:\n              type: string\n              format: date-time\n              description: When the recipe type was deprecated (previously known as archived).\n              example: 2015-09-10T15:24:53.987Z\n            last_modified:\n              type: string\n              format: date-time\n              description: When the associated database model was last saved.\n              example: 2015-09-10T15:24:53.987Z\n              \n    recipe_type_detail:\n      title: Recipe Type Details\n      allOf:\n        - ref: '#/components/schemas/recipe_type'\n        - type: object\n          properties:\n            job_types:\n              type: array\n              items:\n                $ref: '#/components/schemas/job_type_detail'\n              description: List of Job Types in this recipe type\n            sub_recipe_types:\n              type: array\n              items:\n                $ref: '#/components/schemas/recipe_type'\n              description: List of Sub Recipe Types in this recipe type\n            super_recipe_types:\n              type: array\n              items:\n                $ref: '#/components/schemas/recipe_type'\n              description: List of Recipe Types this recipe type is a member of\n\n\n    recipe_type_revisions:\n      title: Recipe Type Revision List\n      type: object\n      properties:\n        count:\n          type: integer\n          description: The total number of results that match the query parameters\n          example: 10\n        next:\n          type: string\n          format: uri\n          description: A URL to the next page of results.\n          example: null\n        previous:\n          type: string\n          format: uri\n          description: A URL to the previous page of results.\n          example: null\n        results:\n          type: array\n          items:\n            $ref: '#/components/schemas/recipe_type_revision'\n          description: List of Recipe Type Revisions\n\n    recipe_type_revision_base:\n      title: Recipe Type Revision Base\n      type: object\n      properties:\n        id:\n          type: integer\n          description: The unique identifier of the model. Can be passed to the details API call\n          example: 4\n        recipe_type:\n          type: integer\n          example: 1\n        revision_num:\n          type: integer\n          example: 1\n\n    recipe_type_revision:\n      title: Recipe Type Revision\n      type: object\n      properties:\n        id:\n          type: integer\n          description: The unique identifier of the model. Can be passed to the details API call\n          example: 4\n        recipe_type:\n          $ref: '#/components/schemas/recipe_type_base'\n        revision_num:\n          type: integer\n          example: 1\n        created:\n          type: string\n          format: date-time\n          description: When the associated database model was initially created.\n          example: 2015-09-10T15:24:53.503Z\n\n    recipe_type_revision_details:\n      title: Recipe Type Revision Details\n      type: object\n      properties:\n        id:\n          type: integer\n          description: The unique identifier of the model. Can be passed to the details API call\n          example: 4\n        recipe_type:\n          $ref: '#/components/schemas/recipe_type_base'\n        revision_num:\n          type: integer\n          example: 1\n        created:\n          type: string\n          format: date-time\n          description: When the associated database model was initially created.\n          example: 2015-09-10T15:24:53.503Z\n\n\n    recipe_type_def:\n      title: Recipe Type Definition\n      type: object\n      properties:\n        version:\n          type: string\n          description: The version is an optional string value that defines the version of the\n            definition used. This allows updates to be made to the specification while\n            maintaining backwards compatibility by allowing Scale to recognize an older version\n            and convert it to the current version. The default value for version if it is not included\n            is the latest version, which is currently 6. It is recommended, though not required, that\n            you include the version so that future changes to the specification will still accept your configuration.\n          example: 6\n        input:\n          $ref: './data.yml#/components/schemas/interface'\n        nodes:\n          type: object\n          additionalProperties:\n            $ref: '#/components/schemas/recipe_definition_node'\n          description: List of Nodes in this recipe definition\n\n      recipe_definition_node:\n        title: Recipe Definition Node\n        type: object\n        required: [dependencies, input, node_type]\n        properties:\n          dependencies:\n            type: array\n            items:\n              $ref: '#/components/schemas/recipe_definition_dependency'\n          input:\n            type: object\n            additionalProperties:\n              oneOf:\n              - $ref: '#/components/schemas/dependency_connection'\n              - $ref: '#/components/schemas/recipe_connection'\n          node_type:\n            type: object\n            additionalProperties:\n              oneOf:\n              - $ref: '#/components/schemas/condition_node'\n              - $ref: '#/components/schemas/job_node'\n              - $ref: '#/components/schemas/recipe_node'\n      recipe_definition_dependency:\n        title: Dependency\n        type: object\n        required: [name]\n        properties:\n          name:\n            type: string\n            description: the name of the recipe node that is a dependency\n          acceptance:\n            type: boolean\n            description: whether the dependency must be accepted or not for this node to run\n      dependency_connection:\n        title: Dependency Connection\n        type: object\n        required: [type, node, output]\n        properties:\n          type:\n            type: string\n            enum: [dependency]\n            description: the name of the input connection type\n          node:\n            type: string\n            description: the name of the dependency node\n          output:\n            type: string\n            description: the name of the dependency node's output\n            example: output_1\n      recipe_connection:\n        title: Recipe Connection\n        type: object\n        required: [type, input]\n        properties:\n          type:\n            type: string\n            enum: [recipe]\n            description: the name of the input connection type\n          input:\n            type: string\n            description: the name of the recipe input\n            example: input_1\n      condition_node:\n        title: Recipe Definition Condition Node\n        required: [node_type, interface]\n        properties:\n          node_type:\n            type: string\n            enum: [condition]\n            description: the name of the node type\n          interface:\n            $ref: './data.yml#/components/schemas/interface'\n            description: The input interface of the condition\n          data_filter:\n            $ref: './data.yml#/components/schemas/data_filter'\n            description: The data filter for the condition\n      job_node:\n        title: Recipe Definition Job Node\n        type: object\n        required: [node_type, job_type_name, job_type_version, job_type_revision]\n        properties:\n          node_type:\n            type: string\n            enum: [job]\n            description: the name of the node type\n          job_type_name:\n            type: string\n            description: the name of the job type\n            example: my-job-type\n          prev_job_type_name:\n            type: string\n            description: the name of the previous job type\n            example: my-job-type\n          job_type_version:\n            type: string\n            description: the job type version\n            example: 1.0.1\n          prev_job_type_version:\n            type: string\n            description: the previous job type version\n            example: 1.0.0\n          job_type_revision:\n            type: integer\n            description: the job type revision\n            example: 2\n          prev_job_type_revision:\n            type: integer\n            description: the previous job type revision\n            example: 1\n      recipe_node:\n        title: Recipe Definition Recipe Node\n        type: object\n        required: [node_type, recipe_type_name, recipe_type_revision]\n        properties:\n          node_type:\n            type: string\n            enum: [recipe]\n            description: the name of the node type\n          recipe_type_name:\n            type: string\n            description: the name of the recipe type\n            example: my-recipe-type\n          prev_recipe_type_name:\n            type: string\n            description: the name of the previous recipe type\n            example: my-recipe-type\n          recipe_type_revision:\n            type: integer\n            description: the recipe type revision\n            example: 2\n          prev_recipe_type_revision:\n            type: integer\n            description: the previous recipe type revision\n            example: 1\n\n    recipe_type_update:\n      title: Recipe Type Update\n      type: object\n      properties:\n        title:\n          type: string\n          example: My Recipe\n        description:\n          type: string\n          example: My Recipe Description\n        definition:\n          $ref: '#/components/schemas/recipe_type_def'\n        auto_update:\n          type: boolean\n          description: Whether to automatically update recipes containing this type\n          example: true\n        is_active:\n          type: boolean\n          description: Activates/deprecates this recipe type.\n          example: true\n      \n    recipe_type_post:\n      title: Recipe Type Create\n      type: object\n      required: [title, definition]\n      properties:\n        title:\n          type: string\n          example: My Recipe\n        description:\n          type: string\n          example: My Recipe Description\n        definition:\n          $ref: '#/components/schemas/recipe_type_def'\n      \n    recipe_type_validation_post:\n      title: Recipe Type Validation Post\n      type: object\n      properties:\n        name:\n          type: string\n          example: my-recipe-type\n        definition:\n          $ref: '#/components/schemas/recipe_type_def'\n      required:\n      - definition\n      \n    recipe_type_validation:\n      title: Recipe Type Validation\n      type: object\n      properties:\n        is_valid:\n          type: boolean\n          description: Whether the recipe type is valid\n          example: true\n        validation_error:\n          type: array\n          $ref: '#/components/schemas/validation_error'\n        validation_warning:\n          type: array\n          $ref: '#/components/schemas/validation_warning'\n        diff:\n          $ref: '#/components/schemas/recipe_type_diff'\n          \n    recipe_type_diff:\n      title: Recipe Type Difference\n      type: object\n      required: [can_be_reprocessed, reasons, nodes]\n      properties:\n        can_be_reprocessed:\n          type: boolean\n          description: Indicates whether recipes from the previous revision can |\n            be reprocessed as the newer revision.\n          example: true\n        reasons:\n          type: array\n          description: Lists any reasons causing *can_be_reprocessed* to be false.\n          $ref: '#/components/schemas/validation_warning'\n        nodes:\n          type: object\n          description: All of the diffs for each recipe node between the two |\n            revisions, stored by node name\n          additionalPropterties:\n            $ref: '#/components/schemas/node_diff'\n        prev_node_type:\n          type: string\n          description: The type of the node in the previous revision, if changed in the newer revision\n          example: job\n          \n    node_diff:\n      title: Node difference\n      type: object\n      required: [status, changes, reprocess_new_node, force_reprocess, dependencies, node_type]\n      properties:\n        status:\n          type: string\n          description: The status indicating the node differences between the two revisions. The possible reasons are |\n            DELETED, CHANGED, UNCHANGED, NEW\n          example: CHANGED\n        changes:\n          type: array\n          description: If *status* is *CHANGED*, lists the job's changes between the two revisions. Each change is a |\n            JSON object with *name* and *description* string fields.\n          $ref: '#/components/schemas/validation_warning'\n        reprocess_new_node:\n          type: boolean\n          description: Indicates whether this node will be superseded by a new node if the recipe is reprocessed.\n          example: true\n        force_reprocess:\n          type: boolean\n          description: Indicates whether the user has requested that this node be reprocessed regardless of whether |\n            it has changed \n          example: true\n        dependencies:\n          type: array\n          items:\n            $ref: '#/components/schemas/recipe_definition_dependency'\n        node_type:\n          type: object\n          additionalProperties:\n            oneOf:\n            - $ref: '#/components/schemas/condition_node'\n            - $ref: '#/components/schemas/job_node'\n            - $ref: '#/components/schemas/recipe_node'\n"
		}
	},
	"Error": "parse: parse spec: paths: /recipe-types/: post: operation \"_rest_v6_recipe_type_create\": requestBody: content: \"application/json\": parse schema: parse schema: resolve \"#/components/schemas/recipe_type_post\": parse schema: definition: parse schema: resolve \"#/components/schemas/recipe_type_def\": parse schema: input: parse schema: resolve \"./data.yml#/components/schemas/interface\": find schema: external base \"./data.yml\" is not supported"
}