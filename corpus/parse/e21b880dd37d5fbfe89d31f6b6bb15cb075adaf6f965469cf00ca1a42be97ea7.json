{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/jdegre/5GC_APIs"
		},
		"file": {
			"name": "TS26512_M1_ServerCertificatesProvisioning.yaml",
			"size": 0,
			"path": "TS26512_M1_ServerCertificatesProvisioning.yaml",
			"byteSize": 3754,
			"content": "openapi: 3.0.0\ninfo:\n  title: M1_ServerCertificatesProvisioning\n  version: 1.0.0\n  description: |\n    5GMS AF M1 Server Certificates Provisioning API\n    Â© 2021, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC).\n    All rights reserved.\ntags:\n  - name: M1_ServerCertificatesProvisioning\n    description: '5G Media Streaming: Provisioning (M1) APIs: Server Certificates Provisioning'\nexternalDocs:\n  description: 'TS 26.512 V16.2.0; 5G Media Streaming (5GMS); Protocols'\n  url: 'https://www.3gpp.org/ftp/Specs/archive/26_series/26.512/'\nservers:\n  - url: '{apiRoot}/3gpp-m1/v1'\n    variables:\n      apiRoot:\n        default: https://example.com\n        description: See 3GPP TS 29.512 clause 6.1.\npaths:\n  /provisioning-sessions/{provisioningSessionId}/certificates:\n    parameters:\n      - name: provisioningSessionId\n        in: path\n        required: true\n        schema:\n          $ref: 'TS26512_CommonData.yaml#/components/schemas/ResourceId'\n        description: The resource identifier of an existing Provisioning Session.'\n    post:\n      operationId: createOrReserveServerCertificate\n      summary: 'Create or reserve a Service Certificate resource'\n      description: 'Without the optional csr query parameter, an X.509 certificate is generated and this is returned. If the csr query parameter is present, a Certificate Signing Request is instead generated and returned, allowing the X.509 certificate to be generated by the invoker and later uploaded.'\n      parameters:\n        - in: query\n          name: csr\n          schema: \n            type: string\n          description: 'When present, return a Certificate Signing Request instead of generating an X.509 certificate'\n      responses:\n        '200':\n          description: 'Server Certificate Created'\n          headers:\n            Location: \n              description: 'URL of the newly created Server Certificate resource'\n              required: true\n              schema:\n                $ref: 'TS26512_CommonData.yaml#/components/schemas/Url'\n          content:\n            'application/x-pem-file':\n              schema:\n                type: string\n  \n  /provisioning-sessions/{provisioningSessionId}/certificates/{certificateId}:\n    parameters:\n      - name: provisioningSessionId\n        in: path\n        required: true\n        schema:\n          $ref: 'TS26512_CommonData.yaml#/components/schemas/ResourceId'\n        description: The resource identifier of an existing Provisioning Session.'\n      - name: certificateId\n        in: path\n        required: true\n        schema:\n          $ref: 'TS26512_CommonData.yaml#/components/schemas/ResourceId'\n        description: 'The resource identifier of an existing Server Certificate'\n    put:\n      operationId: uploadServerCertificate\n      summary: \"Upload the X.509 certificate for a previously reserved Server Certificate resource\"\n      requestBody:\n        required: true\n        content:\n          application/x-pem-file:\n            schema:\n              type: string\n      responses:\n        '204':\n          description: 'Server Certificate Updated'\n    get:\n      operationId: retrieveServerCertificate\n      summary: 'Retrieve the X.509 certificate representation of the specified Server Certificate resource'\n      responses:\n        '200':\n          description: 'Success'\n          content:\n            'application/x-pem-file':\n              schema:\n                type: string\n        '204':\n          description: 'Awaiting Upload'\n        '404':\n          description: 'Not Found'\n    delete:\n      operationId: destroyServerCertificate\n      summary: 'Destroy an existing Server Certificate resource'\n      responses:\n        '204':\n          description: 'Server Certificate Destroyed'\n",
			"canonicalURL": "/github.com/jdegre/5GC_APIs@156cf6056495fbf2f1e81b2b9574ba6369f91640/-/blob/TS26512_M1_ServerCertificatesProvisioning.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/jdegre/5GC_APIs/blob/156cf6056495fbf2f1e81b2b9574ba6369f91640/TS26512_M1_ServerCertificatesProvisioning.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "parse: parse spec: parse operations: /provisioning-sessions/{provisioningSessionId}/certificates/{certificateId}: parameters: parse parameter \"provisioningSessionId\": schema: parse schema: resolve \"TS26512_CommonData.yaml#/components/schemas/ResourceId\": external \"TS26512_CommonData.yaml\": file: local file reference is not allowed"
}