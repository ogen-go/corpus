{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/reconmap/rest-api"
		},
		"file": {
			"name": "openapi.yaml",
			"size": 0,
			"path": "docs/openapi.yaml",
			"byteSize": 22526,
			"content": "openapi: 3.0.3\n\ninfo:\n  title: Reconmap API\n  description: Reconmap API documentation\n  version: 1.4.0\n\nservers:\n  - url: 'http://localhost:5510'\n  - url: 'https://demo.api.reconmap.com'\n\nsecurity:\n  - BearerAuth: [ ]\n\npaths:\n\n  /attachments:\n    post:\n      tags:\n        - Attachments\n      security:\n        - BearerAuth: [ ]\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Attachment'\n      responses:\n        '200':\n          description: Attachment successfully created response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Attachment'\n    get:\n      tags:\n        - Attachments\n      security:\n        - BearerAuth: [ ]\n      responses:\n        '200':\n          description: OK\n  '/attachments/{id}':\n    get:\n      tags:\n        - Attachments\n      parameters:\n        - $ref: '#/components/parameters/resourceId'\n      security:\n        - BearerAuth: [ ]\n      responses:\n        '200':\n          description: Successfully retrieved\n    delete:\n      tags:\n        - Attachments\n      parameters:\n        - $ref: '#/components/parameters/resourceId'\n      security:\n        - BearerAuth: [ ]\n      responses:\n        '200':\n          description: Successfully deleted\n\n  /auditlog:\n    get:\n      description: Get audit log entries\n      tags:\n        - Audit log\n      security:\n        - BearerAuth: [ ]\n      responses:\n        '200':\n          description: OK\n  /auditlog/stats:\n    get:\n      description: Get audit log statistics\n      tags:\n        - Audit log\n      security:\n        - BearerAuth: [ ]\n      responses:\n        '200':\n          description: OK\n\n  /users/login:\n    post:\n      tags:\n        - Auth\n      security: [ ]\n      requestBody:\n        required: true\n        content:\n          application/x-www-form-urlencoded:\n            schema:\n              type: object\n              properties:\n                username:\n                  type: string\n                password:\n                  type: string\n              required:\n                - username\n                - password\n      responses:\n        '200':\n          description: Succesful login response\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  id:\n                    type: integer\n                  name:\n                    type: string\n        '403':\n          description: Unsuccesful login response\n  /users/logout:\n    post:\n      tags:\n        - Auth\n      description: Terminate user session\n      responses:\n        '200':\n          description: User session terminated\n\n  '/auth/mfa-setup':\n    get:\n      tags:\n        - Auth\n      description: Save MFA user settings\n      responses:\n        '200':\n          description: OK\n  '/auth/mfa-verification':\n    get:\n      tags:\n        - Auth\n      description: Verify MFA user settings\n      responses:\n        '200':\n          description: OK\n\n  /clients:\n    post:\n      tags:\n        - Clients\n      security:\n        - BearerAuth: [ ]\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: './schemas/Client.yaml'\n      responses:\n        '201':\n          description: Client successfully created response\n          content:\n            application/json:\n              schema:\n                $ref: './schemas/Client.yaml'\n    get:\n      tags:\n        - Clients\n      security:\n        - BearerAuth: [ ]\n      responses:\n        '200':\n          description: OK\n  '/clients/{id}':\n    put:\n      tags:\n        - Clients\n      security:\n        - BearerAuth: [ ]\n      parameters:\n        - $ref: '#/components/parameters/resourceId'\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: './schemas/Client.yaml'\n      responses:\n        '200':\n          description: Client successfully created response\n          content:\n            application/json:\n              schema:\n                $ref: './schemas/Client.yaml'\n    get:\n      tags:\n        - Clients\n      parameters:\n        - $ref: '#/components/parameters/resourceId'\n      security:\n        - BearerAuth: [ ]\n      responses:\n        '200':\n          description: Successfully retrieved\n          content:\n            application/json:\n              schema:\n                $ref: './schemas/Client.yaml'\n    delete:\n      tags:\n        - Clients\n      parameters:\n        - $ref: '#/components/parameters/resourceId'\n      security:\n        - BearerAuth: [ ]\n      responses:\n        '200':\n          description: Successfully deleted\n\n  /commands:\n    post:\n      tags:\n        - Commands\n      security:\n        - BearerAuth: [ ]\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Command'\n      responses:\n        '200':\n          description: Command successfully created response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Command'\n    get:\n      tags:\n        - Commands\n      security:\n        - BearerAuth: [ ]\n      responses:\n        '200':\n          description: OK\n  /commands/outputs:\n    post:\n      tags:\n        - Commands\n      responses:\n        200:\n          description: OK\n    get:\n      tags:\n        - Commands\n      responses:\n        200:\n          description: OK\n  '/commands/outputs/{id}':\n    delete:\n      tags:\n        - Commands\n      responses:\n        200:\n          description: OK\n  '/commands/{id}':\n    put:\n      tags:\n        - Commands\n      security:\n        - BearerAuth: [ ]\n      parameters:\n        - $ref: '#/components/parameters/resourceId'\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Command'\n      responses:\n        '200':\n          description: Command successfully created response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Command'\n    get:\n      tags:\n        - Commands\n      parameters:\n        - $ref: '#/components/parameters/resourceId'\n      security:\n        - BearerAuth: [ ]\n      responses:\n        '200':\n          description: Successfully retrieved\n    delete:\n      tags:\n        - Commands\n      parameters:\n        - $ref: '#/components/parameters/resourceId'\n      security:\n        - BearerAuth: [ ]\n      responses:\n        '200':\n          description: Successfully deleted\n\n  /documents:\n    get:\n      tags:\n        - Documents\n      responses:\n        200:\n          description: OK\n    post:\n      tags:\n        - Documents\n      responses:\n        200:\n          description: OK\n  '/documents/{id}':\n    get:\n      tags:\n        - Documents\n      parameters:\n        - $ref: '#/components/parameters/resourceId'\n      responses:\n        200:\n          description: OK\n    put:\n      tags:\n        - Documents\n      parameters:\n        - $ref: '#/components/parameters/resourceId'\n      responses:\n        200:\n          description: OK\n    delete:\n      tags:\n        - Documents\n      parameters:\n        - $ref: '#/components/parameters/resourceId'\n      responses:\n        200:\n          description: OK\n\n  /notes:\n    post:\n      tags:\n        - Notes\n      responses:\n        200:\n          description: OK\n    get:\n      tags:\n        - Notes\n      responses:\n        200:\n          description: OK\n  '/notes/{id}':\n    delete:\n      tags:\n        - Notes\n      parameters:\n        - $ref: '#/components/parameters/resourceId'\n      responses:\n        200:\n          description: OK\n\n  /organisations/root:\n    put:\n      description: \"Updates the root organisation\"\n      tags:\n        - Organisations\n      security:\n        - BearerAuth: [ ]\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Organisation'\n      responses:\n        '200':\n          description: Organisation successfully created response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Organisation'\n    get:\n      tags:\n        - Organisations\n      security:\n        - BearerAuth: [ ]\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Organisation'\n\n  /projects:\n    get:\n      tags:\n        - Projects\n      security:\n        - BearerAuth: [ ]\n      responses:\n        '200':\n          description: OK\n    post:\n      tags:\n        - Projects\n      security:\n        - BearerAuth: [ ]\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Project'\n      responses:\n        '201':\n          description: Project successfully created response\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  username:\n                    type: string\n                  password:\n                    type: string\n\n\n  '/projects/{id}':\n    get:\n      tags:\n        - Projects\n      parameters:\n        - $ref: '#/components/parameters/resourceId'\n      security:\n        - BearerAuth: [ ]\n      responses:\n        '200':\n          description: Successfully retrieved\n          content:\n            application/json:\n              schema:\n                $ref: './schemas/Project.yaml'\n    delete:\n      tags:\n        - Projects\n      parameters:\n        - $ref: '#/components/parameters/resourceId'\n      security:\n        - BearerAuth: [ ]\n      responses:\n        '200':\n          description: Successfully deleted\n\n  '/projects/{id}/tasks':\n    get:\n      description: 'List all tasks for this project'\n      tags:\n        - Projects\n      parameters:\n        - $ref: '#/components/parameters/resourceId'\n      security:\n        - BearerAuth: [ ]\n      responses:\n        '200':\n          description: Successfully retrieved\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: './schemas/Task.yaml'\n\n  /reports:\n    get:\n      tags:\n        - Reports\n      security:\n        - BearerAuth: [ ]\n      responses:\n        '200':\n          description: OK\n    post:\n      tags:\n        - Reports\n      security:\n        - BearerAuth: [ ]\n      responses:\n        '200':\n          description: OK\n\n  /reports/preview:\n    get:\n      tags:\n        - Reports\n      security:\n        - BearerAuth: [ ]\n      responses:\n        '200':\n          description: OK\n\n  '/reports/{id}':\n    delete:\n      tags:\n        - Reports\n      parameters:\n        - $ref: '#/components/parameters/resourceId'\n      security:\n        - BearerAuth: [ ]\n      responses:\n        '200':\n          description: OK\n\n  '/reports/{id}/send':\n    post:\n      tags:\n        - Reports\n      parameters:\n        - $ref: '#/components/parameters/resourceId'\n      security:\n        - BearerAuth: [ ]\n      responses:\n        '200':\n          description: OK\n\n  '/reports/{id}/configuration':\n    get:\n      tags:\n        - Reports\n      parameters:\n        - $ref: '#/components/parameters/resourceId'\n      security:\n        - BearerAuth: [ ]\n      responses:\n        '200':\n          description: OK\n    put:\n      tags:\n        - Reports\n      security:\n        - BearerAuth: [ ]\n      responses:\n        '200':\n          description: OK\n\n  /system/usage:\n    get:\n      tags:\n        - System\n      security:\n        - BearerAuth: [ ]\n      responses:\n        '200':\n          description: OK\n\n  /system/health:\n    get:\n      description: Returns information about the health of the system.\n      tags:\n        - System\n      security:\n        - BearerAuth: [ ]\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  attachmentsDirectory:\n                    type: object\n                  logsDirectory:\n                    type: string\n                examples:\n                  default:\n                    attachmentsDirectory:\n                      location: '/var/www/webapp/data/attachments/'\n                      exists: true\n                      writeable: true\n                    logsDirectory:\n                      location: '/var/www/webapp/logs'\n                      exists: true\n                      writeable: true\n                    dbConnection:\n                      ping: true\n\n  /system/logs:\n    get:\n      tags:\n        - System\n      security:\n        - BearerAuth: [ ]\n      responses:\n        '200':\n          description: OK\n          content:\n            text/plain:\n              schema:\n                type: string\n\n  /system/data:\n    get:\n      tags:\n        - System\n      security:\n        - BearerAuth: [ ]\n      responses:\n        '200':\n          description: OK\n    post:\n      tags:\n        - System\n      security:\n        - BearerAuth: [ ]\n      responses:\n        '200':\n          description: OK\n\n  /system/integrations:\n    get:\n      tags:\n        - System\n      security:\n        - BearerAuth: [ ]\n      responses:\n        '200':\n          description: OK\n\n\n  /targets:\n    get:\n      tags:\n        - Targets\n      responses:\n        200:\n          description: OK\n    patch:\n      tags:\n        - Targets\n      responses:\n        200:\n          description: OK\n    post:\n      tags:\n        - Targets\n      security:\n        - BearerAuth: [ ]\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Target'\n      responses:\n        '201':\n          description: Target successfully created response\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  username:\n                    type: string\n                  password:\n                    type: string\n  '/targets/{id}':\n    get:\n      tags:\n        - Targets\n      parameters:\n        - $ref: '#/components/parameters/resourceId'\n      security:\n        - BearerAuth: [ ]\n      responses:\n        '200':\n          description: Successfully retrieved\n    delete:\n      tags:\n        - Targets\n      parameters:\n        - $ref: '#/components/parameters/resourceId'\n      security:\n        - BearerAuth: [ ]\n      responses:\n        '200':\n          description: Successfully deleted\n\n  /tasks:\n    post:\n      tags:\n        - Tasks\n      responses:\n        200:\n          description: OK\n    patch:\n      tags:\n        - Tasks\n      responses:\n        200:\n          description: OK\n    get:\n      tags:\n        - Tasks\n      security:\n        - BearerAuth: [ ]\n      responses:\n        '200':\n          description: OK\n  '/tasks/{id}':\n    get:\n      tags:\n        - Tasks\n      parameters:\n        - $ref: '#/components/parameters/resourceId'\n      security:\n        - BearerAuth: [ ]\n      responses:\n        '200':\n          description: Successfully retrieved\n    patch:\n      tags:\n        - Tasks\n      responses:\n        200:\n          description: OK\n    delete:\n      tags:\n        - Tasks\n      parameters:\n        - $ref: '#/components/parameters/resourceId'\n      security:\n        - BearerAuth: [ ]\n      responses:\n        '200':\n          description: Successfully deleted\n\n  /users:\n    get:\n      tags:\n        - Users\n      security:\n        - BearerAuth: [ ]\n      responses:\n        '200':\n          description: Succesful login response\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  username:\n                    type: string\n                  password:\n                    type: string\n    patch:\n      tags:\n        - Users\n      responses:\n        200:\n          description: OK\n    post:\n      tags:\n        - Users\n      security:\n        - BearerAuth: [ ]\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/User'\n      responses:\n        '200':\n          description: User successfully created response\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  username:\n                    type: string\n                  password:\n                    type: string\n  '/users/{id}':\n    get:\n      tags:\n        - Users\n      parameters:\n        - $ref: '#/components/parameters/resourceId'\n      security:\n        - BearerAuth: [ ]\n      responses:\n        '200':\n          description: Succesful login response\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  username:\n                    type: string\n                  password:\n                    type: string\n    patch:\n      tags:\n        - Users\n      parameters:\n        - $ref: '#/components/parameters/resourceId'\n      responses:\n        200:\n          description: OK\n    delete:\n      tags:\n        - Users\n      parameters:\n        - $ref: '#/components/parameters/resourceId'\n      security:\n        - BearerAuth: [ ]\n      responses:\n        '200':\n          description: Successfully deleted\n\n  '/users/{id}/activity':\n    get:\n      tags:\n        - Users\n      responses:\n        200:\n          description: OK\n  '/users/{id}/password':\n    patch:\n      tags:\n        - Users\n      responses:\n        200:\n          description: OK\n\n  /vulnerabilities:\n    get:\n      tags:\n        - Vulnerabilities\n      security:\n        - BearerAuth: [ ]\n      responses:\n        '200':\n          description: OK\n    patch:\n      tags:\n        - Vulnerabilities\n      responses:\n        200:\n          description: OK\n    post:\n      tags:\n        - Vulnerabilities\n      security:\n        - BearerAuth: [ ]\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: './schemas/Vulnerability.yaml'\n      responses:\n        '201':\n          description: Vulnerability successfully created response\n          content:\n            application/json:\n              schema:\n                $ref: './schemas/Vulnerability.yaml'\n\n  '/vulnerabilities/{id}':\n    get:\n      tags:\n        - Vulnerabilities\n      parameters:\n        - $ref: '#/components/parameters/resourceId'\n      security:\n        - BearerAuth: [ ]\n      responses:\n        '200':\n          description: Successfully retrieved\n    put:\n      tags:\n        - Vulnerabilities\n      parameters:\n        - $ref: '#/components/parameters/resourceId'\n      responses:\n        200:\n          description: OK\n    patch:\n      tags:\n        - Vulnerabilities\n      parameters:\n        - $ref: '#/components/parameters/resourceId'\n      responses:\n        200:\n          description: OK\n    delete:\n      tags:\n        - Vulnerabilities\n      parameters:\n        - $ref: '#/components/parameters/resourceId'\n      security:\n        - BearerAuth: [ ]\n      responses:\n        '200':\n          description: Successfully deleted\n\n  /vulnerabilities/categories:\n    get:\n      tags:\n        - Vulnerability categories\n      responses:\n        200:\n          description: OK\n    post:\n      tags:\n        - Vulnerability categories\n      security:\n        - BearerAuth: [ ]\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: './schemas/VulnerabilityCategory.yaml'\n      responses:\n        '201':\n          description: Vulnerability successfully created response\n          content:\n            application/json:\n              schema:\n                $ref: './schemas/VulnerabilityCategory.yaml'\n\n  '/vulnerabilities/categories/{id}':\n    delete:\n      tags:\n        - Vulnerability categories\n      parameters:\n        - $ref: '#/components/parameters/resourceId'\n      security:\n        - BearerAuth: [ ]\n      responses:\n        '200':\n          description: Successfully deleted\n\n  /vulnerabilities/stats:\n    get:\n      tags:\n        - Vulnerabilities\n      responses:\n        200:\n          description: OK\n\ncomponents:\n\n  securitySchemes:\n\n    BearerAuth:\n      type: http\n      scheme: bearer\n      bearerFormat: JWT\n\n  schemas:\n\n    Attachment:\n      type: object\n      required:\n        - client_file_name\n      properties:\n        id:\n          type: integer\n        client_file_name:\n          type: string\n        file_size:\n          type: integer\n        file_mimetype:\n          type: string\n        file_hash:\n          type: string\n\n    Organisation:\n      type: object\n      required:\n        - name\n      properties:\n        id:\n          type: integer\n        name:\n          type: string\n        url:\n          type: string\n        contactName:\n          type: string\n        contactEmail:\n          type: string\n        contactPhone:\n          type: string\n\n    Command:\n      type: object\n      required:\n        - short_name\n        - docker_image\n        - arguments\n      properties:\n        id:\n          type: integer\n        short_name:\n          type: string\n        docker_image:\n          type: string\n        arguments:\n          type: string\n\n    User:\n      type: object\n      required:\n        - name\n        - password\n        - email\n        - role\n      properties:\n        id:\n          type: integer\n        name:\n          type: string\n        password:\n          type: string\n        email:\n          type: string\n        role:\n          type: string\n\n    Target:\n      type: object\n      required:\n        - projectId\n        - name\n        - kind\n      properties:\n        id:\n          type: integer\n        projectId:\n          type: integer\n        name:\n          type: string\n        kind:\n          type: string\n\n  parameters:\n    resourceId:\n      name: id\n      in: path\n      required: true\n      description: Numeric resource identifier\n      schema:\n        type: integer\n        format: int64\n",
			"canonicalURL": "/github.com/reconmap/rest-api@2b3ac49b76a267cbd1f15b34c40eef0791c3b162/-/blob/docs/openapi.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/reconmap/rest-api/blob/2b3ac49b76a267cbd1f15b34c40eef0791c3b162/docs/openapi.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "parse: parse spec: parse operations: paths: /clients/{id}: get: responses: 200: content: application/json: schema: parse schema: resolve \"./schemas/Client.yaml\": external \"./schemas/Client.yaml\": file: local file reference is not allowed"
}