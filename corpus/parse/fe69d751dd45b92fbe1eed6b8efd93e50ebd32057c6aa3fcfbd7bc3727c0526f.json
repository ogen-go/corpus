{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/dkackman/chia-api"
		},
		"file": {
			"name": "data_layer.yaml",
			"size": 0,
			"path": "src/data_layer.yaml",
			"byteSize": 31100,
			"content": "openapi: 3.0.3\ninfo:\n  description: \u003e-\n    The Chia node and services come with a JSON RPC API server that allows you to access information and control the services. \n    These are accessible via HTTPS, WebSockets, or via client SDKs. The ports can be configured in `~/.chia/mainnet/config/config.yaml`. \n    The RPC ports should not be exposed to the internet. TLS certificates are used to secure the communication \n    [using mutualTLS](https://github.com/dkackman/chia-api/wiki/Mutual-TLS).\n\n    The data layer uses port 8561 by default.\n  version: 1.6.0\n  title: Chia RPC\n  termsOfService: https://www.chia.net/assets/legal/Guidelines-for-Using-Chia-Network.pdf\n  contact:\n    name: Chia Network\n    url: https://www.chia.net/\n    email: hello@chia.net\n  license:\n    name: Apache 2.0\n    url: http://www.apache.org/licenses/LICENSE-2.0.html\nservers:\n  - url: https://localhost:8561\n    description: Data layer RPC\nsecurity:\n  - bearerAuth: []\ncomponents:\n  requestBodies:\n    empty:\n      $ref: \"./requestBodies/empty.yaml#/empty\"\n  responses:\n    empty:\n      $ref: \"./responses/empty.yaml#/empty\"\n  schemas:\n    connection_info:\n      $ref: \"./schemas/connection_info.yaml#/connection_info\"\n    internal_node:\n      $ref: \"./schemas/internal_node.yaml#/internal_node\"\n    mirror:\n      $ref: \"./schemas/mirror.yaml#/mirror\"\n    offer:\n      $ref: \"./schemas/offer.yaml#/offer\"\n    offer_store:\n      $ref: \"./schemas/offer_store.yaml#/offer_store\"\n    terminal_node:\n      $ref: \"./schemas/terminal_node.yaml#/terminal_node\"\n    transaction_record:\n      $ref: \"./schemas/transaction_record.yaml#/transaction_record\"\n    apiResponse:\n      $ref: \"./schemas/apiResponse.yaml#/apiResponse\"\n  securitySchemes:\n    bearerAuth:\n      $ref: \"./securitySchemes/bearerAuth.yaml#/bearerAuth\"\ntags:\n  - name: Shared\n    description: Methods shared by all services.\n  - name: Data Layer\n    description: The data layer RPC API is exposed, by default, on port 8561 and contains methods interacting with =off-chain data.\n  - name: Mirrors\n    description: Methods for managing mirrors.\n  - name: Subscriptions\n    description: Methods related to singleton subscriptions.\n  - name: Offers\n    description: Methods related to offers.\npaths:\n  /stop_node:\n    post:\n      tags:\n        - Shared\n      summary: Stop the node.\n      description: Stop the node.\n      operationId: stop_node\n      requestBody:\n        $ref: \"#/components/requestBodies/empty\"\n      responses:\n        \"200\":\n          $ref: \"#/components/responses/empty\"\n  /open_connection:\n    post:\n      tags:\n        - Shared\n      summary: Add a connection to another node.\n      description: Add a connection to another node.\n      operationId: open_connection\n      requestBody:\n        required: true\n        description: the address of the connection\n        content:\n          application/json:\n            schema:\n              type: object\n              required:\n                - ip\n                - port\n              properties:\n                ip:\n                  type: string\n                  format: ipaddress\n                port:\n                  type: integer\n      responses:\n        \"200\":\n          $ref: \"#/components/responses/empty\"\n  /close_connection:\n    post:\n      tags:\n        - Shared\n      summary: Removes a connection.\n      description: Removes a connection.\n      operationId: close_connection\n      requestBody:\n        required: true\n        description: the node id of the connection\n        content:\n          application/json:\n            schema:\n              type: object\n              required:\n                - node_id\n              properties:\n                node_id:\n                  type: string\n      responses:\n        \"200\":\n          $ref: \"#/components/responses/empty\"\n  /get_connections:\n    post:\n      tags:\n        - Shared\n      summary: Retrieve the list of connections.\n      description: Retrieve the list of connections.\n      operationId: get_connections\n      requestBody:\n        $ref: \"#/components/requestBodies/empty\"\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                allOf:\n                  - type: object\n                    properties:\n                      connections:\n                        type: array\n                        items:\n                          $ref: \"#/components/schemas/connection_info\"\n                  - $ref: \"#/components/schemas/apiResponse\"\n  /healthz:\n    post:\n      tags:\n        - Shared\n      summary: Heartbeat.\n      description: Heartbeat.\n      operationId: healthz\n      requestBody:\n        $ref: \"#/components/requestBodies/empty\"\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/apiResponse\"\n  /get_routes:\n    post:\n      tags:\n        - Shared\n      summary: Retrieve the list of routes exposed by the service.\n      description: Retrieve the list of routes/endpoints exposed by the service.\n      operationId: get_routes\n      requestBody:\n        $ref: \"#/components/requestBodies/empty\"\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                allOf:\n                  - type: object\n                    properties:\n                      routes:\n                        type: array\n                        items:\n                          type: string\n                  - $ref: \"#/components/schemas/apiResponse\"\n  /create_data_store:\n    post:\n      tags:\n        - Data Layer\n      summary: Creates a data store.\n      description: Creates a data store.\n      operationId: create_data_store\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                fee:\n                  type: integer\n                  format: uint64\n                  default: 0\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                allOf:\n                  - type: object\n                    properties:\n                      txs:\n                        type: array\n                        items:\n                          $ref: \"#/components/schemas/transaction_record\"\n                      id:\n                        type: string\n                        format: bytes32\n                  - $ref: \"#/components/schemas/apiResponse\"\n  /get_owned_stores:\n    post:\n      tags:\n        - Data Layer\n      summary: Gets the list of owned store ids.\n      description: Gets the list of owned store ids.\n      operationId: get_owned_stores\n      requestBody:\n        $ref: \"#/components/requestBodies/empty\"\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                allOf:\n                  - type: object\n                    properties:\n                      store_ids:\n                        type: array\n                        items:\n                          type: string\n                          format: bytes32\n                  - $ref: \"#/components/schemas/apiResponse\"\n  /batch_update:\n    post:\n      tags:\n        - Data Layer\n      summary: Applies a batch of updates.\n      description: Applies a batch of updates.\n      operationId: batch_update\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              required:\n                - id\n              properties:\n                id:\n                  type: string\n                  format: bytes32\n                changelist:\n                  type: array\n                  items:\n                    type: object\n                    additionalProperties: {}\n                fee:\n                  type: integer\n                  format: uint64\n                  default: 0\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                allOf:\n                  - type: object\n                    properties:\n                      tx_id:\n                        type: string\n                        format: bytes32\n                  - $ref: \"#/components/schemas/apiResponse\"\n  /get_value:\n    post:\n      tags:\n        - Data Layer\n      summary: Get the value for a given id/key pair.\n      description: Get the value for a given id/key pair.\n      operationId: get_value\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              required:\n                - id\n                - key\n              properties:\n                id:\n                  type: string\n                  format: bytes32\n                key:\n                  type: string\n                  format: bytes32\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                allOf:\n                  - type: object\n                    properties:\n                      value:\n                        type: string\n                        format: bytes32\n                  - $ref: \"#/components/schemas/apiResponse\"\n  /get_keys:\n    post:\n      tags:\n        - Data Layer\n      summary: Get the keys for a given id/root_hash pair.\n      description: Get the keys for a given id/root_hash pair.\n      operationId: get_keys\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              required:\n                - id\n                - root_hash\n              properties:\n                id:\n                  type: string\n                  format: bytes32\n                root_hash:\n                  type: string\n                  format: bytes32\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                allOf:\n                  - type: object\n                    properties:\n                      keys:\n                        type: array\n                        items:\n                          type: string\n                          format: bytes32\n                  - $ref: \"#/components/schemas/apiResponse\"\n  /get_keys_values:\n    post:\n      tags:\n        - Data Layer\n      summary: Get the keys and values for a given id/root_hash pair.\n      description: Get the keys and values for a given id/root_hash pair.\n      operationId: get_keys_values\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              required:\n                - id\n                - root_hash\n              properties:\n                id:\n                  type: string\n                  format: bytes32\n                root_hash:\n                  type: string\n                  format: bytes32\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                allOf:\n                  - type: object\n                    properties:\n                      keys_values:\n                        type: array\n                        items:\n                          $ref: \"#/components/schemas/terminal_node\"\n                  - $ref: \"#/components/schemas/apiResponse\"\n  /get_ancestors:\n    post:\n      tags:\n        - Data Layer\n      summary: Gets the list of ancestors for a given id/hash pair.\n      description: Gets the list of ancestors for a given id/hash pair.\n      operationId: get_ancestors\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              required:\n                - id\n                - hash\n              properties:\n                id:\n                  type: string\n                  format: bytes32\n                hash:\n                  type: string\n                  format: bytes32\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                allOf:\n                  - type: object\n                    properties:\n                      anscestors:\n                        type: array\n                        items:\n                          $ref: \"#/components/schemas/internal_node\"\n                  - $ref: \"#/components/schemas/apiResponse\"\n  /get_root:\n    post:\n      tags:\n        - Data Layer\n      summary: Gets hash of latest tree root.\n      description: Gets hash of latest tree root.\n      operationId: get_root\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              required:\n                - id\n              properties:\n                id:\n                  type: string\n                  format: bytes32\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                allOf:\n                  - type: object\n                    properties:\n                      hash:\n                        type: string\n                        format: bytes32\n                      confirmed:\n                        type: boolean\n                      timestamp:\n                        type: integer\n                        format: uint64\n                  - $ref: \"#/components/schemas/apiResponse\"\n  /get_local_root:\n    post:\n      tags:\n        - Data Layer\n      summary: Gets hash of latest tree root saved in our local datastore.\n      description: Gets hash of latest tree root saved in our local datastore.\n      operationId: get_local_root\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              required:\n                - id\n              properties:\n                id:\n                  type: string\n                  format: bytes32\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                allOf:\n                  - type: object\n                    properties:\n                      hash:\n                        type: string\n                        format: bytes32\n                  - $ref: \"#/components/schemas/apiResponse\"\n  /get_roots:\n    post:\n      tags:\n        - Data Layer\n      summary: Gets state hashes for a list of roots\n      description: Gets state hashes for a list of roots.\n      operationId: get_roots\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              required:\n                - ids\n              properties:\n                ids:\n                  type: array\n                  items:\n                    type: string\n                    format: bytes32\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                allOf:\n                  - type: object\n                    properties:\n                      root_hashes:\n                        type: array\n                        items:\n                          type: object\n                          properties:\n                            id:\n                              type: string\n                              format: bytes32\n                            hash:\n                              type: string\n                              format: bytes32\n                            confirmed:\n                              type: boolean\n                            timestamp:\n                              type: integer\n                              format: uint64\n                  - $ref: \"#/components/schemas/apiResponse\"\n  /delete_key:\n    post:\n      tags:\n        - Data Layer\n      summary: Removes a list of rows.\n      description: Removes a list of rows.\n      operationId: delete_key\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              required:\n                - key\n                - id\n              properties:\n                key:\n                  type: string\n                  format: bytes32\n                id:\n                  type: string\n                  format: bytes32\n                fee:\n                  type: integer\n                  format: uint64\n                  default: 0\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                allOf:\n                  - type: object\n                    properties:\n                      tx_id:\n                        type: string\n                        format: bytes32\n                  - $ref: \"#/components/schemas/apiResponse\"\n  /insert:\n    post:\n      tags:\n        - Data Layer\n      summary: Adds a list of clvm objects as bytes to add to table.\n      description: Adds a list of clvm objects as bytes to add to table.\n      operationId: insert\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              required:\n                - key\n                - value\n                - id\n              properties:\n                value:\n                  type: string\n                  format: bytes32\n                id:\n                  type: string\n                  format: bytes32\n                fee:\n                  type: integer\n                  format: uint64\n                  default: 0\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                allOf:\n                  - type: object\n                    properties:\n                      tx_id:\n                        type: string\n                        format: bytes32\n                  - $ref: \"#/components/schemas/apiResponse\"\n  /subscribe:\n    post:\n      tags:\n        - Subscriptions\n      summary: Subscribe to singleton.\n      description: Subscribe to singleton.\n      operationId: subscribe\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              required:\n                - id\n              properties:\n                urls:\n                  type: array\n                  items:\n                    type: string\n                    format: bytes32\n                id:\n                  type: string\n                  format: bytes32\n      responses:\n        \"200\":\n          $ref: \"#/components/responses/empty\"\n  /unsubscribe:\n    post:\n      tags:\n        - Subscriptions\n      summary: Unsubscribe from singleton.\n      description: Unsubscribe from singleton.\n      operationId: unsubscribe\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              required:\n                - id\n              properties:\n                id:\n                  type: string\n                  format: bytes32\n      responses:\n        \"200\":\n          $ref: \"#/components/responses/empty\"\n  /add_mirror:\n    post:\n      tags:\n        - Mirrors\n      summary: Adds a mirror.\n      description: Adds a mirror.\n      operationId: add_mirror\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              required:\n                - id\n                - amount\n                - urls\n              properties:\n                id:\n                  type: string\n                  format: bytes32\n                amount:\n                  type: integer\n                  format: uint64\n                urls:\n                  type: array\n                  items:\n                    type: string\n                    format: bytes32\n                fee:\n                  type: integer\n                  format: uint64\n                  default: 0\n      responses:\n        \"200\":\n          $ref: \"#/components/responses/empty\"\n  /delete_mirror:\n    post:\n      tags:\n        - Mirrors\n      summary: Deletes a mirror.\n      description: Deletes a mirror.\n      operationId: delete_mirror\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              required:\n                - coin_id\n              properties:\n                coin_id:\n                  type: string\n                  format: bytes32\n                fee:\n                  type: integer\n                  format: uint64\n                  default: 0\n      responses:\n        \"200\":\n          $ref: \"#/components/responses/empty\"\n  /get_mirrors:\n    post:\n      tags:\n        - Mirrors\n      summary: Gets the mirrors for a given store id.\n      description: Gets the mirrors for a given store id.\n      operationId: get_mirrors\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              required:\n                - id\n              properties:\n                id:\n                  type: string\n                  format: bytes32\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                allOf:\n                  - type: object\n                    properties:\n                      mirrors:\n                        type: array\n                        items:\n                          $ref: \"#/components/schemas/mirror\"\n                  - $ref: \"#/components/schemas/apiResponse\"\n  /remove_subscriptions:\n    post:\n      tags:\n        - Subscriptions\n      summary: Removes subscriptions for the given id.\n      description: Removes subscriptions for the given id.\n      operationId: remove_subscriptions\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              required:\n                - id\n              properties:\n                urls:\n                  type: array\n                  items:\n                    type: string\n                    format: bytes32\n                id:\n                  type: string\n                  format: bytes32\n      responses:\n        \"200\":\n          $ref: \"#/components/responses/empty\"\n  /subscriptions:\n    post:\n      tags:\n        - Subscriptions\n      summary: List current subscriptions.\n      description: List current subscriptions.\n      operationId: subscriptions\n      requestBody:\n        $ref: \"#/components/requestBodies/empty\"\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                allOf:\n                  - type: object\n                    properties:\n                      store_ids:\n                        type: array\n                        items:\n                          type: string\n                          format: bytes32\n                  - $ref: \"#/components/schemas/apiResponse\"\n  /get_kv_diff:\n    post:\n      tags:\n        - Data Layer\n      summary: Get kv diff between two root hashes.\n      description: Get kv diff between two root hashes.\n      operationId: get_kv_diff\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              required:\n                - id\n                - hash_1\n                - hash_2\n              properties:\n                id:\n                  type: string\n                  format: bytes32\n                hash_1:\n                  type: string\n                  format: bytes32\n                hash_2:\n                  type: string\n                  format: bytes32\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                allOf:\n                  - type: object\n                    properties:\n                      diff:\n                        type: array\n                        items:\n                          type: object\n                          properties:\n                            type:\n                              type: string\n                            key:\n                              type: string\n                              format: bytes32\n                            value:\n                              type: string\n                              format: bytes32\n                  - $ref: \"#/components/schemas/apiResponse\"\n  /get_root_history:\n    post:\n      tags:\n        - Data Layer\n      summary: Get history of state hashes for a store.\n      description: Get history of state hashes for a store.\n      operationId: get_root_history\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              required:\n                - id\n              properties:\n                id:\n                  type: string\n                  format: bytes32\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                allOf:\n                  - type: object\n                    properties:\n                      root_history:\n                        type: array\n                        items:\n                          type: object\n                          properties:\n                            root_hash:\n                              type: string\n                              format: bytes32\n                            confirmed:\n                              type: boolean\n                            timestamp:\n                              type: integer\n                              format: uint64\n                  - $ref: \"#/components/schemas/apiResponse\"\n  /add_missing_files:\n    post:\n      tags:\n        - Data Layer\n      summary: Complete the data server files.\n      description: Complete the data server files.\n      operationId: add_missing_files\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              required:\n                - ids\n              properties:\n                ids:\n                  type: array\n                  items:\n                    type: string\n                    format: bytes32\n                overwrite:\n                  type: boolean\n                  default: false\n                foldername:\n                  type: string\n      responses:\n        \"200\":\n          $ref: \"#/components/responses/empty\"\n  /make_offer:\n    post:\n      tags:\n        - Offers\n      summary: Makes an offer.\n      description: Makes an offer.\n      operationId: make_offer\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              required:\n                - maker\n                - taker\n              properties:\n                maker:\n                  type: array\n                  items:\n                    $ref: \"#/components/schemas/offer_store\"\n                taker:\n                  type: array\n                  items:\n                    $ref: \"#/components/schemas/offer_store\"\n                fee:\n                  type: integer\n                  format: uint64\n                  default: 0\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                allOf:\n                  - type: object\n                    properties:\n                      offer:\n                        $ref: \"#/components/schemas/offer\"\n                  - $ref: \"#/components/schemas/apiResponse\"\n  /take_offer:\n    post:\n      tags:\n        - Offers\n      summary: Takes an offer.\n      description: Takes an offer.\n      operationId: take_offer\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              required:\n                - offer\n              properties:\n                offer:\n                  $ref: \"#/components/schemas/offer\"\n                fee:\n                  type: integer\n                  format: uint64\n                  default: 0\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                allOf:\n                  - type: object\n                    properties:\n                      trade_id:\n                        type: string\n                        format: bytes32\n                  - $ref: \"#/components/schemas/apiResponse\"\n  /verify_offer:\n    post:\n      tags:\n        - Offers\n      summary: Verifies an offer.\n      description: Verifies an offer.\n      operationId: verify_offer\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              required:\n                - offer\n              properties:\n                offer:\n                  $ref: \"#/components/schemas/offer\"\n                fee:\n                  type: integer\n                  format: uint64\n                  default: 0\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                allOf:\n                  - type: object\n                    properties:\n                      valid:\n                        type: boolean\n                      fee:\n                        type: integer\n                        format: uint64\n                  - $ref: \"#/components/schemas/apiResponse\"\n  /cancel_offer:\n    post:\n      tags:\n        - Offers\n      summary: Cancels an offer.\n      description: Cancels an offer.\n      operationId: cancel_offer\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              required:\n                - trade_id\n                - secure\n              properties:\n                offer:\n                  type: object\n                  properties:\n                    trade_id:\n                      type: string\n                      format: bytes32\n                    secure:\n                      type: boolean\n                fee:\n                  type: integer\n                  format: uint64\n                  default: 0\n      responses:\n        \"200\":\n          $ref: \"#/components/responses/empty\"\nexternalDocs:\n  description: Find out more about chia\n  url: https://chia.net\n",
			"canonicalURL": "/github.com/dkackman/chia-api@ae14d03a8bbe2f2ca4eb86356d41ce7d6a817feb/-/blob/src/data_layer.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/dkackman/chia-api/blob/ae14d03a8bbe2f2ca4eb86356d41ce7d6a817feb/src/data_layer.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "parse: parse spec: parse components: schemas: \"terminal_node\": parse schema: at 1:560: external \"./schemas/terminal_node.yaml\": get: file: local file reference is not allowed"
}