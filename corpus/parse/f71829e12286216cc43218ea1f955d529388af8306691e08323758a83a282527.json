{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/goadesign/examples"
		},
		"file": {
			"name": "openapi3.yaml",
			"size": 0,
			"path": "streaming/gen/http/openapi3.yaml",
			"byteSize": 13819,
			"content": "openapi: 3.0.3\ninfo:\n    title: Chatter service describing the streaming features of goa v2.\n    version: \"1.0\"\nservers:\n    - url: http://localhost:80\n      description: Default server for chatter\npaths:\n    /echoer:\n        get:\n            tags:\n                - chatter\n            summary: echoer chatter\n            description: Echoes the message sent by the client.\n            operationId: chatter#echoer\n            responses:\n                \"101\":\n                    description: Switching Protocols response.\n                    content:\n                        application/json:\n                            schema:\n                                type: string\n                                example: Excepturi ullam repellendus eius quis quos inventore.\n                            example: Et exercitationem nulla qui dicta.\n                \"401\":\n                    description: 'unauthorized: Unauthorized response.'\n                    content:\n                        application/json:\n                            schema:\n                                type: string\n                                example: Amet facere nihil molestias.\n                \"403\":\n                    description: 'invalid-scopes: Forbidden response.'\n                    content:\n                        application/json:\n                            schema:\n                                type: string\n                                example: Perspiciatis tenetur aut natus occaecati suscipit sapiente.\n            security:\n                - jwt_header_Authorization:\n                    - stream:read\n                    - stream:write\n    /history:\n        get:\n            tags:\n                - chatter\n            summary: history chatter\n            description: Returns the chat messages sent to the server.\n            operationId: chatter#history\n            parameters:\n                - name: view\n                  in: query\n                  description: View to use to render the result\n                  allowEmptyValue: true\n                  schema:\n                    type: string\n                    description: View to use to render the result\n                    example: Reprehenderit autem necessitatibus esse unde adipisci.\n                  example: Quis modi.\n            responses:\n                \"101\":\n                    description: Switching Protocols response.\n                    content:\n                        application/json:\n                            schema:\n                                description: 'Response body may alternatively be #/components/schemas/HistoryResponseBodyTiny'\n                                $ref: '#/components/schemas/ChatSummary'\n                            example:\n                                length: 1377377358064110438\n                                message: Ullam quia neque quis qui quia optio.\n                                sent_at: \"1971-06-24T22:05:58Z\"\n                \"401\":\n                    description: 'unauthorized: Unauthorized response.'\n                    content:\n                        application/json:\n                            schema:\n                                type: string\n                                example: Voluptatem reprehenderit amet sit ex corrupti.\n                \"403\":\n                    description: 'invalid-scopes: Forbidden response.'\n                    content:\n                        application/json:\n                            schema:\n                                type: string\n                                example: Laborum dolorum officiis dignissimos hic est culpa.\n            security:\n                - jwt_header_Authorization:\n                    - stream:read\n                    - stream:write\n    /listener:\n        get:\n            tags:\n                - chatter\n            summary: listener chatter\n            description: Listens to the messages sent by the client.\n            operationId: chatter#listener\n            responses:\n                \"101\":\n                    description: Switching Protocols response.\n                \"401\":\n                    description: 'unauthorized: Unauthorized response.'\n                    content:\n                        application/json:\n                            schema:\n                                type: string\n                                example: Aliquid voluptatem vitae error eveniet dolores sapiente.\n                \"403\":\n                    description: 'invalid-scopes: Forbidden response.'\n                    content:\n                        application/json:\n                            schema:\n                                type: string\n                                example: Amet voluptatem.\n            security:\n                - jwt_header_Authorization:\n                    - stream:read\n                    - stream:write\n    /login:\n        post:\n            tags:\n                - chatter\n            summary: login chatter\n            description: Creates a valid JWT token for auth to chat.\n            operationId: chatter#login\n            responses:\n                \"200\":\n                    description: OK response.\n                    content:\n                        application/json:\n                            schema:\n                                type: string\n                                description: New JWT token\n                                example: Vero necessitatibus ullam sed maiores nobis.\n                            example: Rerum maiores et aut.\n                \"401\":\n                    description: 'unauthorized: Unauthorized response.'\n                    content:\n                        application/json:\n                            schema:\n                                type: string\n                                example: Sint sapiente vitae quis perferendis.\n            security:\n                - basic_header_Authorization: []\n    /subscribe:\n        get:\n            tags:\n                - chatter\n            summary: subscribe chatter\n            description: Subscribe to events sent when new chat messages are added.\n            operationId: chatter#subscribe\n            responses:\n                \"101\":\n                    description: Switching Protocols response.\n                    content:\n                        application/json:\n                            schema:\n                                $ref: '#/components/schemas/Event'\n                            example:\n                                action: added\n                                added_at: \"2000-04-23T17:24:02Z\"\n                                message: Vel quidem error explicabo.\n                \"401\":\n                    description: 'unauthorized: Unauthorized response.'\n                    content:\n                        application/json:\n                            schema:\n                                type: string\n                                example: Quo omnis quasi nihil quasi cumque.\n                \"403\":\n                    description: 'invalid-scopes: Forbidden response.'\n                    content:\n                        application/json:\n                            schema:\n                                type: string\n                                example: Esse non.\n            security:\n                - jwt_header_Authorization:\n                    - stream:read\n                    - stream:write\n    /summary:\n        get:\n            tags:\n                - chatter\n            summary: summary chatter\n            description: Summarizes the chat messages sent by the client.\n            operationId: chatter#summary\n            responses:\n                \"101\":\n                    description: Switching Protocols response.\n                    content:\n                        application/json:\n                            schema:\n                                $ref: '#/components/schemas/ChatSummaryResponseCollection'\n                            example:\n                                - length: 1647485631995539732\n                                  message: Similique tempora nesciunt repellendus ipsum quis.\n                                  sent_at: \"1997-01-14T09:46:38Z\"\n                                - length: 1647485631995539732\n                                  message: Similique tempora nesciunt repellendus ipsum quis.\n                                  sent_at: \"1997-01-14T09:46:38Z\"\n                \"401\":\n                    description: 'unauthorized: Unauthorized response.'\n                    content:\n                        application/json:\n                            schema:\n                                type: string\n                                example: Expedita in velit harum excepturi est iusto.\n                \"403\":\n                    description: 'invalid-scopes: Forbidden response.'\n                    content:\n                        application/json:\n                            schema:\n                                type: string\n                                example: Fugiat consectetur commodi nihil autem.\n            security:\n                - jwt_header_Authorization:\n                    - stream:read\n                    - stream:write\ncomponents:\n    schemas:\n        ChatSummary:\n            type: object\n            properties:\n                length:\n                    type: integer\n                    description: Length of the message sent\n                    example: 3807871536578403479\n                    format: int64\n                message:\n                    type: string\n                    description: Message sent to the server\n                    example: Vero quia ad quibusdam.\n                sent_at:\n                    type: string\n                    description: Time at which the message was sent\n                    example: \"1997-05-03T17:42:57Z\"\n                    format: date-time\n            example:\n                length: 2898030982842231240\n                message: Possimus qui hic perspiciatis modi quasi.\n                sent_at: \"1996-12-15T08:33:55Z\"\n            required:\n                - message\n                - sent_at\n        ChatSummaryResponse:\n            type: object\n            properties:\n                length:\n                    type: integer\n                    description: Length of the message sent\n                    example: 7020248672909453972\n                    format: int64\n                message:\n                    type: string\n                    description: Message sent to the server\n                    example: Eos eos velit dolorum consequuntur culpa adipisci.\n                sent_at:\n                    type: string\n                    description: Time at which the message was sent\n                    example: \"2001-02-17T17:00:14Z\"\n                    format: date-time\n            description: ChatSummaryResponse result type (default view)\n            example:\n                length: 6710387863326036119\n                message: Eos veniam illum illum in molestiae.\n                sent_at: \"1978-07-13T22:23:03Z\"\n            required:\n                - message\n                - sent_at\n        ChatSummaryResponseCollection:\n            type: array\n            items:\n                $ref: '#/components/schemas/ChatSummaryResponse'\n            description: SummaryResponseBody is the result type for an array of ChatSummaryResponse (default view)\n            example:\n                - length: 1647485631995539732\n                  message: Similique tempora nesciunt repellendus ipsum quis.\n                  sent_at: \"1997-01-14T09:46:38Z\"\n                - length: 1647485631995539732\n                  message: Similique tempora nesciunt repellendus ipsum quis.\n                  sent_at: \"1997-01-14T09:46:38Z\"\n                - length: 1647485631995539732\n                  message: Similique tempora nesciunt repellendus ipsum quis.\n                  sent_at: \"1997-01-14T09:46:38Z\"\n        Event:\n            type: object\n            properties:\n                action:\n                    type: string\n                    example: added\n                    enum:\n                        - added\n                added_at:\n                    type: string\n                    description: Time at which the message was added\n                    example: \"1985-05-15T03:10:48Z\"\n                    format: date-time\n                message:\n                    type: string\n                    description: Message sent to the server\n                    example: Maxime fugiat repellendus corporis dolorem voluptas sapiente.\n            example:\n                action: added\n                added_at: \"1992-10-13T12:22:27Z\"\n                message: Quo consequuntur labore id porro corrupti.\n            required:\n                - message\n                - action\n                - added_at\n        HistoryResponseBodyTiny:\n            type: object\n            properties:\n                message:\n                    type: string\n                    description: Message sent to the server\n                    example: Optio in quia et nostrum.\n            description: HistoryResponseBody result type (tiny view)\n            example:\n                message: Eos consequatur nobis quod.\n            required:\n                - message\n    securitySchemes:\n        basic_header_Authorization:\n            type: http\n            description: Secures the login endpoint.\n            scheme: basic\n        jwt_header_Authorization:\n            type: http\n            description: Secures endpoint by requiring a valid JWT token. Supports scopes \"stream:read\" and \"stream:write\".\n            scheme: bearer\ntags:\n    - name: chatter\n      description: The chatter service implements a simple client and server chat.\n",
			"canonicalURL": "/github.com/goadesign/examples@4bdbcb109ac785bef06278f68c8a2fb92411d435/-/blob/streaming/gen/http/openapi3.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/goadesign/examples/blob/4bdbcb109ac785bef06278f68c8a2fb92411d435/streaming/gen/http/openapi3.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "parse: parse spec: parse path items: path \"/echoer\": get: operation \"chatter#echoer\": security: at streaming/gen/http/openapi3.yaml:41:23: list of scopes MUST be empty for \"type\" \"http\""
}