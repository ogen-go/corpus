{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/APIs-guru/openapi-directory"
		},
		"file": {
			"name": "openapi.yaml",
			"size": 0,
			"path": "APIs/amazonaws.com/lakeformation/2017-03-31/openapi.yaml",
			"byteSize": 108669,
			"content": "openapi: 3.0.0\ninfo:\n  version: '2017-03-31'\n  x-release: v4\n  title: AWS Lake Formation\n  description: <fullname>AWS Lake Formation</fullname> <p>Defines the public endpoint for the AWS Lake Formation service.</p>\n  x-logo:\n    url: 'https://twitter.com/awscloud/profile_image?size=original'\n    backgroundColor: '#FFFFFF'\n  termsOfService: 'https://aws.amazon.com/service-terms/'\n  contact:\n    name: Mike Ralphson\n    email: mike.ralphson@gmail.com\n    url: 'https://github.com/mermade/aws2openapi'\n    x-twitter: PermittedSoc\n  license:\n    name: Apache 2.0 License\n    url: 'http://www.apache.org/licenses/'\n  x-providerName: amazonaws.com\n  x-serviceName: lakeformation\n  x-aws-signingName: lakeformation\n  x-origin:\n    - contentType: application/json\n      url: 'https://raw.githubusercontent.com/aws/aws-sdk-js/master/apis/lakeformation-2017-03-31.normal.json'\n      converter:\n        url: 'https://github.com/mermade/aws2openapi'\n        version: 1.0.0\n      x-apisguru-driver: external\n  x-apiClientRegistration:\n    url: 'https://portal.aws.amazon.com/gp/aws/developer/registration/index.html?nc2=h_ct'\n  x-apisguru-categories:\n    - cloud\n  x-preferred: true\nexternalDocs:\n  description: Amazon Web Services documentation\n  url: 'https://docs.aws.amazon.com/lakeformation/'\nservers:\n  - url: 'http://lakeformation.{region}.amazonaws.com'\n    variables:\n      region:\n        description: The AWS region\n        enum:\n          - us-east-1\n          - us-east-2\n          - us-west-1\n          - us-west-2\n          - us-gov-west-1\n          - us-gov-east-1\n          - ca-central-1\n          - eu-north-1\n          - eu-west-1\n          - eu-west-2\n          - eu-west-3\n          - eu-central-1\n          - eu-south-1\n          - af-south-1\n          - ap-northeast-1\n          - ap-northeast-2\n          - ap-northeast-3\n          - ap-southeast-1\n          - ap-southeast-2\n          - ap-east-1\n          - ap-south-1\n          - sa-east-1\n          - me-south-1\n        default: us-east-1\n    description: The AWS Lake Formation multi-region endpoint\n  - url: 'https://lakeformation.{region}.amazonaws.com'\n    variables:\n      region:\n        description: The AWS region\n        enum:\n          - us-east-1\n          - us-east-2\n          - us-west-1\n          - us-west-2\n          - us-gov-west-1\n          - us-gov-east-1\n          - ca-central-1\n          - eu-north-1\n          - eu-west-1\n          - eu-west-2\n          - eu-west-3\n          - eu-central-1\n          - eu-south-1\n          - af-south-1\n          - ap-northeast-1\n          - ap-northeast-2\n          - ap-northeast-3\n          - ap-southeast-1\n          - ap-southeast-2\n          - ap-east-1\n          - ap-south-1\n          - sa-east-1\n          - me-south-1\n        default: us-east-1\n    description: The AWS Lake Formation multi-region endpoint\n  - url: 'http://lakeformation.{region}.amazonaws.com.cn'\n    variables:\n      region:\n        description: The AWS region\n        enum:\n          - cn-north-1\n          - cn-northwest-1\n        default: cn-north-1\n    description: The AWS Lake Formation endpoint for China (Beijing) and China (Ningxia)\n  - url: 'https://lakeformation.{region}.amazonaws.com.cn'\n    variables:\n      region:\n        description: The AWS region\n        enum:\n          - cn-north-1\n          - cn-northwest-1\n        default: cn-north-1\n    description: The AWS Lake Formation endpoint for China (Beijing) and China (Ningxia)\nx-hasEquivalentPaths: true\npaths:\n  /#X-Amz-Target=AWSLakeFormation.AddLFTagsToResource:\n    post:\n      operationId: AddLFTagsToResource\n      description: Attaches one or more tags to an existing resource.\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AddLFTagsToResourceResponse'\n        '480':\n          description: EntityNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/EntityNotFoundException'\n        '481':\n          description: InvalidInputException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InvalidInputException'\n        '482':\n          description: InternalServiceException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InternalServiceException'\n        '483':\n          description: OperationTimeoutException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/OperationTimeoutException'\n        '484':\n          description: AccessDeniedException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AccessDeniedException'\n        '485':\n          description: ConcurrentModificationException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ConcurrentModificationException'\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/AddLFTagsToResourceRequest'\n      parameters:\n        - name: X-Amz-Target\n          in: header\n          required: true\n          schema:\n            type: string\n            enum:\n              - AWSLakeFormation.AddLFTagsToResource\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n  /#X-Amz-Target=AWSLakeFormation.BatchGrantPermissions:\n    post:\n      operationId: BatchGrantPermissions\n      description: Batch operation to grant permissions to the principal.\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BatchGrantPermissionsResponse'\n        '480':\n          description: InvalidInputException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InvalidInputException'\n        '481':\n          description: OperationTimeoutException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/OperationTimeoutException'\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/BatchGrantPermissionsRequest'\n      parameters:\n        - name: X-Amz-Target\n          in: header\n          required: true\n          schema:\n            type: string\n            enum:\n              - AWSLakeFormation.BatchGrantPermissions\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n  /#X-Amz-Target=AWSLakeFormation.BatchRevokePermissions:\n    post:\n      operationId: BatchRevokePermissions\n      description: Batch operation to revoke permissions from the principal.\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BatchRevokePermissionsResponse'\n        '480':\n          description: InvalidInputException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InvalidInputException'\n        '481':\n          description: OperationTimeoutException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/OperationTimeoutException'\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/BatchRevokePermissionsRequest'\n      parameters:\n        - name: X-Amz-Target\n          in: header\n          required: true\n          schema:\n            type: string\n            enum:\n              - AWSLakeFormation.BatchRevokePermissions\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n  /#X-Amz-Target=AWSLakeFormation.CreateLFTag:\n    post:\n      operationId: CreateLFTag\n      description: Creates a tag with the specified name and values.\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CreateLFTagResponse'\n        '480':\n          description: EntityNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/EntityNotFoundException'\n        '481':\n          description: InvalidInputException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InvalidInputException'\n        '482':\n          description: ResourceNumberLimitExceededException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResourceNumberLimitExceededException'\n        '483':\n          description: InternalServiceException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InternalServiceException'\n        '484':\n          description: OperationTimeoutException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/OperationTimeoutException'\n        '485':\n          description: AccessDeniedException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AccessDeniedException'\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/CreateLFTagRequest'\n      parameters:\n        - name: X-Amz-Target\n          in: header\n          required: true\n          schema:\n            type: string\n            enum:\n              - AWSLakeFormation.CreateLFTag\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n  /#X-Amz-Target=AWSLakeFormation.DeleteLFTag:\n    post:\n      operationId: DeleteLFTag\n      description: 'Deletes the specified tag key name. If the attribute key does not exist or the tag does not exist, then the operation will not do anything. If the attribute key exists, then the operation checks if any resources are tagged with this attribute key, if yes, the API throws a 400 Exception with the message \"Delete not allowed\" as the tag key is still attached with resources. You can consider untagging resources with this tag key.'\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DeleteLFTagResponse'\n        '480':\n          description: EntityNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/EntityNotFoundException'\n        '481':\n          description: InvalidInputException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InvalidInputException'\n        '482':\n          description: InternalServiceException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InternalServiceException'\n        '483':\n          description: OperationTimeoutException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/OperationTimeoutException'\n        '484':\n          description: AccessDeniedException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AccessDeniedException'\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/DeleteLFTagRequest'\n      parameters:\n        - name: X-Amz-Target\n          in: header\n          required: true\n          schema:\n            type: string\n            enum:\n              - AWSLakeFormation.DeleteLFTag\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n  /#X-Amz-Target=AWSLakeFormation.DeregisterResource:\n    post:\n      operationId: DeregisterResource\n      description: '<p>Deregisters the resource as managed by the Data Catalog.</p> <p>When you deregister a path, Lake Formation removes the path from the inline policy attached to your service-linked role.</p>'\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DeregisterResourceResponse'\n        '480':\n          description: InvalidInputException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InvalidInputException'\n        '481':\n          description: InternalServiceException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InternalServiceException'\n        '482':\n          description: OperationTimeoutException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/OperationTimeoutException'\n        '483':\n          description: EntityNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/EntityNotFoundException'\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/DeregisterResourceRequest'\n      parameters:\n        - name: X-Amz-Target\n          in: header\n          required: true\n          schema:\n            type: string\n            enum:\n              - AWSLakeFormation.DeregisterResource\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n  /#X-Amz-Target=AWSLakeFormation.DescribeResource:\n    post:\n      operationId: DescribeResource\n      description: Retrieves the current data access role for the given resource registered in AWS Lake Formation.\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DescribeResourceResponse'\n        '480':\n          description: InvalidInputException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InvalidInputException'\n        '481':\n          description: InternalServiceException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InternalServiceException'\n        '482':\n          description: OperationTimeoutException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/OperationTimeoutException'\n        '483':\n          description: EntityNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/EntityNotFoundException'\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/DescribeResourceRequest'\n      parameters:\n        - name: X-Amz-Target\n          in: header\n          required: true\n          schema:\n            type: string\n            enum:\n              - AWSLakeFormation.DescribeResource\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n  /#X-Amz-Target=AWSLakeFormation.GetDataLakeSettings:\n    post:\n      operationId: GetDataLakeSettings\n      description: 'Retrieves the list of the data lake administrators of a Lake Formation-managed data lake. '\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GetDataLakeSettingsResponse'\n        '480':\n          description: InternalServiceException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InternalServiceException'\n        '481':\n          description: InvalidInputException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InvalidInputException'\n        '482':\n          description: EntityNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/EntityNotFoundException'\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/GetDataLakeSettingsRequest'\n      parameters:\n        - name: X-Amz-Target\n          in: header\n          required: true\n          schema:\n            type: string\n            enum:\n              - AWSLakeFormation.GetDataLakeSettings\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n  /#X-Amz-Target=AWSLakeFormation.GetEffectivePermissionsForPath:\n    post:\n      operationId: GetEffectivePermissionsForPath\n      description: Returns the Lake Formation permissions for a specified table or database resource located at a path in Amazon S3. <code>GetEffectivePermissionsForPath</code> will not return databases and tables if the catalog is encrypted.\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GetEffectivePermissionsForPathResponse'\n        '480':\n          description: InvalidInputException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InvalidInputException'\n        '481':\n          description: EntityNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/EntityNotFoundException'\n        '482':\n          description: OperationTimeoutException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/OperationTimeoutException'\n        '483':\n          description: InternalServiceException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InternalServiceException'\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/GetEffectivePermissionsForPathRequest'\n      parameters:\n        - name: MaxResults\n          in: query\n          schema:\n            type: string\n          description: Pagination limit\n          required: false\n        - name: NextToken\n          in: query\n          schema:\n            type: string\n          description: Pagination token\n          required: false\n        - name: X-Amz-Target\n          in: header\n          required: true\n          schema:\n            type: string\n            enum:\n              - AWSLakeFormation.GetEffectivePermissionsForPath\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n  /#X-Amz-Target=AWSLakeFormation.GetLFTag:\n    post:\n      operationId: GetLFTag\n      description: Returns a tag definition.\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GetLFTagResponse'\n        '480':\n          description: EntityNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/EntityNotFoundException'\n        '481':\n          description: InvalidInputException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InvalidInputException'\n        '482':\n          description: InternalServiceException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InternalServiceException'\n        '483':\n          description: OperationTimeoutException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/OperationTimeoutException'\n        '484':\n          description: AccessDeniedException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AccessDeniedException'\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/GetLFTagRequest'\n      parameters:\n        - name: X-Amz-Target\n          in: header\n          required: true\n          schema:\n            type: string\n            enum:\n              - AWSLakeFormation.GetLFTag\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n  /#X-Amz-Target=AWSLakeFormation.GetResourceLFTags:\n    post:\n      operationId: GetResourceLFTags\n      description: Returns the tags applied to a resource.\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GetResourceLFTagsResponse'\n        '480':\n          description: EntityNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/EntityNotFoundException'\n        '481':\n          description: InvalidInputException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InvalidInputException'\n        '482':\n          description: InternalServiceException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InternalServiceException'\n        '483':\n          description: OperationTimeoutException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/OperationTimeoutException'\n        '484':\n          description: GlueEncryptionException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GlueEncryptionException'\n        '485':\n          description: AccessDeniedException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AccessDeniedException'\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/GetResourceLFTagsRequest'\n      parameters:\n        - name: X-Amz-Target\n          in: header\n          required: true\n          schema:\n            type: string\n            enum:\n              - AWSLakeFormation.GetResourceLFTags\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n  /#X-Amz-Target=AWSLakeFormation.GrantPermissions:\n    post:\n      operationId: GrantPermissions\n      description: '<p>Grants permissions to the principal to access metadata in the Data Catalog and data organized in underlying data storage such as Amazon S3.</p> <p>For information about permissions, see <a href=\"https://docs-aws.amazon.com/lake-formation/latest/dg/security-data-access.html\">Security and Access Control to Metadata and Data</a>.</p>'\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GrantPermissionsResponse'\n        '480':\n          description: ConcurrentModificationException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ConcurrentModificationException'\n        '481':\n          description: EntityNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/EntityNotFoundException'\n        '482':\n          description: InvalidInputException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InvalidInputException'\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/GrantPermissionsRequest'\n      parameters:\n        - name: X-Amz-Target\n          in: header\n          required: true\n          schema:\n            type: string\n            enum:\n              - AWSLakeFormation.GrantPermissions\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n  /#X-Amz-Target=AWSLakeFormation.ListLFTags:\n    post:\n      operationId: ListLFTags\n      description: 'Lists tags that the requester has permission to view. '\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ListLFTagsResponse'\n        '480':\n          description: EntityNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/EntityNotFoundException'\n        '481':\n          description: InvalidInputException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InvalidInputException'\n        '482':\n          description: InternalServiceException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InternalServiceException'\n        '483':\n          description: OperationTimeoutException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/OperationTimeoutException'\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/ListLFTagsRequest'\n      parameters:\n        - name: X-Amz-Target\n          in: header\n          required: true\n          schema:\n            type: string\n            enum:\n              - AWSLakeFormation.ListLFTags\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n  /#X-Amz-Target=AWSLakeFormation.ListPermissions:\n    post:\n      operationId: ListPermissions\n      description: '<p>Returns a list of the principal permissions on the resource, filtered by the permissions of the caller. For example, if you are granted an ALTER permission, you are able to see only the principal permissions for ALTER.</p> <p>This operation returns only those permissions that have been explicitly granted.</p> <p>For information about permissions, see <a href=\"https://docs-aws.amazon.com/lake-formation/latest/dg/security-data-access.html\">Security and Access Control to Metadata and Data</a>.</p>'\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ListPermissionsResponse'\n        '480':\n          description: InvalidInputException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InvalidInputException'\n        '481':\n          description: OperationTimeoutException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/OperationTimeoutException'\n        '482':\n          description: InternalServiceException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InternalServiceException'\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/ListPermissionsRequest'\n      parameters:\n        - name: MaxResults\n          in: query\n          schema:\n            type: string\n          description: Pagination limit\n          required: false\n        - name: NextToken\n          in: query\n          schema:\n            type: string\n          description: Pagination token\n          required: false\n        - name: X-Amz-Target\n          in: header\n          required: true\n          schema:\n            type: string\n            enum:\n              - AWSLakeFormation.ListPermissions\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n  /#X-Amz-Target=AWSLakeFormation.ListResources:\n    post:\n      operationId: ListResources\n      description: Lists the resources registered to be managed by the Data Catalog.\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ListResourcesResponse'\n        '480':\n          description: InvalidInputException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InvalidInputException'\n        '481':\n          description: InternalServiceException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InternalServiceException'\n        '482':\n          description: OperationTimeoutException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/OperationTimeoutException'\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/ListResourcesRequest'\n      parameters:\n        - name: MaxResults\n          in: query\n          schema:\n            type: string\n          description: Pagination limit\n          required: false\n        - name: NextToken\n          in: query\n          schema:\n            type: string\n          description: Pagination token\n          required: false\n        - name: X-Amz-Target\n          in: header\n          required: true\n          schema:\n            type: string\n            enum:\n              - AWSLakeFormation.ListResources\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n  /#X-Amz-Target=AWSLakeFormation.PutDataLakeSettings:\n    post:\n      operationId: PutDataLakeSettings\n      description: '<p>Sets the list of data lake administrators who have admin privileges on all resources managed by Lake Formation. For more information on admin privileges, see <a href=\"https://docs.aws.amazon.com/lake-formation/latest/dg/lake-formation-permissions.html\">Granting Lake Formation Permissions</a>.</p> <p>This API replaces the current list of data lake admins with the new list being passed. To add an admin, fetch the current list and add the new admin to that list and pass that list in this API.</p>'\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PutDataLakeSettingsResponse'\n        '480':\n          description: InternalServiceException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InternalServiceException'\n        '481':\n          description: InvalidInputException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InvalidInputException'\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/PutDataLakeSettingsRequest'\n      parameters:\n        - name: X-Amz-Target\n          in: header\n          required: true\n          schema:\n            type: string\n            enum:\n              - AWSLakeFormation.PutDataLakeSettings\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n  /#X-Amz-Target=AWSLakeFormation.RegisterResource:\n    post:\n      operationId: RegisterResource\n      description: '<p>Registers the resource as managed by the Data Catalog.</p> <p>To add or update data, Lake Formation needs read/write access to the chosen Amazon S3 path. Choose a role that you know has permission to do this, or choose the AWSServiceRoleForLakeFormationDataAccess service-linked role. When you register the first Amazon S3 path, the service-linked role and a new inline policy are created on your behalf. Lake Formation adds the first path to the inline policy and attaches it to the service-linked role. When you register subsequent paths, Lake Formation adds the path to the existing policy.</p> <p>The following request registers a new location and gives AWS Lake Formation permission to use the service-linked role to access that location.</p> <p> <code>ResourceArn = arn:aws:s3:::my-bucket UseServiceLinkedRole = true</code> </p> <p>If <code>UseServiceLinkedRole</code> is not set to true, you must provide or set the <code>RoleArn</code>:</p> <p> <code>arn:aws:iam::12345:role/my-data-access-role</code> </p>'\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RegisterResourceResponse'\n        '480':\n          description: InvalidInputException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InvalidInputException'\n        '481':\n          description: InternalServiceException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InternalServiceException'\n        '482':\n          description: OperationTimeoutException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/OperationTimeoutException'\n        '483':\n          description: AlreadyExistsException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AlreadyExistsException'\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/RegisterResourceRequest'\n      parameters:\n        - name: X-Amz-Target\n          in: header\n          required: true\n          schema:\n            type: string\n            enum:\n              - AWSLakeFormation.RegisterResource\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n  /#X-Amz-Target=AWSLakeFormation.RemoveLFTagsFromResource:\n    post:\n      operationId: RemoveLFTagsFromResource\n      description: 'Removes a tag from the resource. Only database, table, or tableWithColumns resource are allowed. To tag columns, use the column inclusion list in <code>tableWithColumns</code> to specify column input.'\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RemoveLFTagsFromResourceResponse'\n        '480':\n          description: EntityNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/EntityNotFoundException'\n        '481':\n          description: InvalidInputException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InvalidInputException'\n        '482':\n          description: InternalServiceException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InternalServiceException'\n        '483':\n          description: OperationTimeoutException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/OperationTimeoutException'\n        '484':\n          description: GlueEncryptionException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GlueEncryptionException'\n        '485':\n          description: AccessDeniedException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AccessDeniedException'\n        '486':\n          description: ConcurrentModificationException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ConcurrentModificationException'\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/RemoveLFTagsFromResourceRequest'\n      parameters:\n        - name: X-Amz-Target\n          in: header\n          required: true\n          schema:\n            type: string\n            enum:\n              - AWSLakeFormation.RemoveLFTagsFromResource\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n  /#X-Amz-Target=AWSLakeFormation.RevokePermissions:\n    post:\n      operationId: RevokePermissions\n      description: Revokes permissions to the principal to access metadata in the Data Catalog and data organized in underlying data storage such as Amazon S3.\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RevokePermissionsResponse'\n        '480':\n          description: ConcurrentModificationException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ConcurrentModificationException'\n        '481':\n          description: EntityNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/EntityNotFoundException'\n        '482':\n          description: InvalidInputException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InvalidInputException'\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/RevokePermissionsRequest'\n      parameters:\n        - name: X-Amz-Target\n          in: header\n          required: true\n          schema:\n            type: string\n            enum:\n              - AWSLakeFormation.RevokePermissions\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n  /#X-Amz-Target=AWSLakeFormation.SearchDatabasesByLFTags:\n    post:\n      operationId: SearchDatabasesByLFTags\n      description: 'This operation allows a search on <code>DATABASE</code> resources by <code>TagCondition</code>. This operation is used by admins who want to grant user permissions on certain <code>TagConditions</code>. Before making a grant, the admin can use <code>SearchDatabasesByTags</code> to find all resources where the given <code>TagConditions</code> are valid to verify whether the returned resources can be shared.'\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/SearchDatabasesByLFTagsResponse'\n        '480':\n          description: EntityNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/EntityNotFoundException'\n        '481':\n          description: InternalServiceException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InternalServiceException'\n        '482':\n          description: InvalidInputException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InvalidInputException'\n        '483':\n          description: OperationTimeoutException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/OperationTimeoutException'\n        '484':\n          description: GlueEncryptionException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GlueEncryptionException'\n        '485':\n          description: AccessDeniedException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AccessDeniedException'\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/SearchDatabasesByLFTagsRequest'\n      parameters:\n        - name: X-Amz-Target\n          in: header\n          required: true\n          schema:\n            type: string\n            enum:\n              - AWSLakeFormation.SearchDatabasesByLFTags\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n  /#X-Amz-Target=AWSLakeFormation.SearchTablesByLFTags:\n    post:\n      operationId: SearchTablesByLFTags\n      description: 'This operation allows a search on <code>TABLE</code> resources by <code>LFTag</code>s. This will be used by admins who want to grant user permissions on certain LFTags. Before making a grant, the admin can use <code>SearchTablesByLFTags</code> to find all resources where the given <code>LFTag</code>s are valid to verify whether the returned resources can be shared.'\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/SearchTablesByLFTagsResponse'\n        '480':\n          description: EntityNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/EntityNotFoundException'\n        '481':\n          description: InternalServiceException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InternalServiceException'\n        '482':\n          description: InvalidInputException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InvalidInputException'\n        '483':\n          description: OperationTimeoutException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/OperationTimeoutException'\n        '484':\n          description: GlueEncryptionException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GlueEncryptionException'\n        '485':\n          description: AccessDeniedException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AccessDeniedException'\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/SearchTablesByLFTagsRequest'\n      parameters:\n        - name: X-Amz-Target\n          in: header\n          required: true\n          schema:\n            type: string\n            enum:\n              - AWSLakeFormation.SearchTablesByLFTags\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n  /#X-Amz-Target=AWSLakeFormation.UpdateLFTag:\n    post:\n      operationId: UpdateLFTag\n      description: 'Updates the list of possible values for the specified tag key. If the tag does not exist, the operation throws an EntityNotFoundException. The values in the delete key values will be deleted from list of possible values. If any value in the delete key values is attached to a resource, then API errors out with a 400 Exception - \"Update not allowed\". Untag the attribute before deleting the tag key''s value. '\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/UpdateLFTagResponse'\n        '480':\n          description: EntityNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/EntityNotFoundException'\n        '481':\n          description: InvalidInputException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InvalidInputException'\n        '482':\n          description: InternalServiceException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InternalServiceException'\n        '483':\n          description: OperationTimeoutException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/OperationTimeoutException'\n        '484':\n          description: ConcurrentModificationException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ConcurrentModificationException'\n        '485':\n          description: AccessDeniedException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AccessDeniedException'\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/UpdateLFTagRequest'\n      parameters:\n        - name: X-Amz-Target\n          in: header\n          required: true\n          schema:\n            type: string\n            enum:\n              - AWSLakeFormation.UpdateLFTag\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n  /#X-Amz-Target=AWSLakeFormation.UpdateResource:\n    post:\n      operationId: UpdateResource\n      description: 'Updates the data access role used for vending access to the given (registered) resource in AWS Lake Formation. '\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/UpdateResourceResponse'\n        '480':\n          description: InvalidInputException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InvalidInputException'\n        '481':\n          description: InternalServiceException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InternalServiceException'\n        '482':\n          description: OperationTimeoutException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/OperationTimeoutException'\n        '483':\n          description: EntityNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/EntityNotFoundException'\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/UpdateResourceRequest'\n      parameters:\n        - name: X-Amz-Target\n          in: header\n          required: true\n          schema:\n            type: string\n            enum:\n              - AWSLakeFormation.UpdateResource\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\ncomponents:\n  parameters:\n    X-Amz-Content-Sha256:\n      name: X-Amz-Content-Sha256\n      in: header\n      schema:\n        type: string\n      required: false\n    X-Amz-Date:\n      name: X-Amz-Date\n      in: header\n      schema:\n        type: string\n      required: false\n    X-Amz-Algorithm:\n      name: X-Amz-Algorithm\n      in: header\n      schema:\n        type: string\n      required: false\n    X-Amz-Credential:\n      name: X-Amz-Credential\n      in: header\n      schema:\n        type: string\n      required: false\n    X-Amz-Security-Token:\n      name: X-Amz-Security-Token\n      in: header\n      schema:\n        type: string\n      required: false\n    X-Amz-Signature:\n      name: X-Amz-Signature\n      in: header\n      schema:\n        type: string\n      required: false\n    X-Amz-SignedHeaders:\n      name: X-Amz-SignedHeaders\n      in: header\n      schema:\n        type: string\n      required: false\n  securitySchemes:\n    hmac:\n      type: apiKey\n      name: Authorization\n      in: header\n      description: Amazon Signature authorization v4\n      x-amazon-apigateway-authtype: awsSigv4\n  schemas:\n    AddLFTagsToResourceResponse:\n      type: object\n      properties:\n        Failures:\n          allOf:\n            - $ref: '#/components/schemas/LFTagErrors'\n            - description: A list of failures to tag the resource.\n    AddLFTagsToResourceRequest:\n      type: object\n      required:\n        - Resource\n        - LFTags\n      title: AddLFTagsToResourceRequest\n      properties:\n        CatalogId:\n          allOf:\n            - $ref: '#/components/schemas/CatalogIdString'\n            - description: 'The identifier for the Data Catalog. By default, the account ID. The Data Catalog is the persistent metadata store. It contains database definitions, table definitions, and other control information to manage your AWS Lake Formation environment. '\n        Resource:\n          allOf:\n            - $ref: '#/components/schemas/Resource'\n            - description: The resource to which to attach a tag.\n        LFTags:\n          allOf:\n            - $ref: '#/components/schemas/LFTagsList'\n            - description: The tags to attach to the resource.\n    EntityNotFoundException: {}\n    InvalidInputException: {}\n    InternalServiceException: {}\n    OperationTimeoutException: {}\n    AccessDeniedException: {}\n    ConcurrentModificationException: {}\n    BatchGrantPermissionsResponse:\n      type: object\n      properties:\n        Failures:\n          allOf:\n            - $ref: '#/components/schemas/BatchPermissionsFailureList'\n            - description: A list of failures to grant permissions to the resources.\n    BatchGrantPermissionsRequest:\n      type: object\n      required:\n        - Entries\n      title: BatchGrantPermissionsRequest\n      properties:\n        CatalogId:\n          allOf:\n            - $ref: '#/components/schemas/CatalogIdString'\n            - description: 'The identifier for the Data Catalog. By default, the account ID. The Data Catalog is the persistent metadata store. It contains database definitions, table definitions, and other control information to manage your AWS Lake Formation environment. '\n        Entries:\n          allOf:\n            - $ref: '#/components/schemas/BatchPermissionsRequestEntryList'\n            - description: A list of up to 20 entries for resource permissions to be granted by batch operation to the principal.\n    BatchRevokePermissionsResponse:\n      type: object\n      properties:\n        Failures:\n          allOf:\n            - $ref: '#/components/schemas/BatchPermissionsFailureList'\n            - description: A list of failures to revoke permissions to the resources.\n    BatchRevokePermissionsRequest:\n      type: object\n      required:\n        - Entries\n      title: BatchRevokePermissionsRequest\n      properties:\n        CatalogId:\n          allOf:\n            - $ref: '#/components/schemas/CatalogIdString'\n            - description: 'The identifier for the Data Catalog. By default, the account ID. The Data Catalog is the persistent metadata store. It contains database definitions, table definitions, and other control information to manage your AWS Lake Formation environment. '\n        Entries:\n          allOf:\n            - $ref: '#/components/schemas/BatchPermissionsRequestEntryList'\n            - description: A list of up to 20 entries for resource permissions to be revoked by batch operation to the principal.\n    CreateLFTagResponse:\n      type: object\n      properties: {}\n    CreateLFTagRequest:\n      type: object\n      required:\n        - TagKey\n        - TagValues\n      title: CreateLFTagRequest\n      properties:\n        CatalogId:\n          allOf:\n            - $ref: '#/components/schemas/CatalogIdString'\n            - description: 'The identifier for the Data Catalog. By default, the account ID. The Data Catalog is the persistent metadata store. It contains database definitions, table definitions, and other control information to manage your AWS Lake Formation environment. '\n        TagKey:\n          allOf:\n            - $ref: '#/components/schemas/LFTagKey'\n            - description: The key-name for the tag.\n        TagValues:\n          allOf:\n            - $ref: '#/components/schemas/TagValueList'\n            - description: A list of possible values an attribute can take.\n    ResourceNumberLimitExceededException: {}\n    DeleteLFTagResponse:\n      type: object\n      properties: {}\n    DeleteLFTagRequest:\n      type: object\n      required:\n        - TagKey\n      title: DeleteLFTagRequest\n      properties:\n        CatalogId:\n          allOf:\n            - $ref: '#/components/schemas/CatalogIdString'\n            - description: 'The identifier for the Data Catalog. By default, the account ID. The Data Catalog is the persistent metadata store. It contains database definitions, table definitions, and other control information to manage your AWS Lake Formation environment. '\n        TagKey:\n          allOf:\n            - $ref: '#/components/schemas/LFTagKey'\n            - description: The key-name for the tag to delete.\n    DeregisterResourceResponse:\n      type: object\n      properties: {}\n    DeregisterResourceRequest:\n      type: object\n      required:\n        - ResourceArn\n      title: DeregisterResourceRequest\n      properties:\n        ResourceArn:\n          allOf:\n            - $ref: '#/components/schemas/ResourceArnString'\n            - description: The Amazon Resource Name (ARN) of the resource that you want to deregister.\n    DescribeResourceResponse:\n      type: object\n      properties:\n        ResourceInfo:\n          allOf:\n            - $ref: '#/components/schemas/ResourceInfo'\n            - description: A structure containing information about an AWS Lake Formation resource.\n    DescribeResourceRequest:\n      type: object\n      required:\n        - ResourceArn\n      title: DescribeResourceRequest\n      properties:\n        ResourceArn:\n          allOf:\n            - $ref: '#/components/schemas/ResourceArnString'\n            - description: The resource ARN.\n    GetDataLakeSettingsResponse:\n      type: object\n      properties:\n        DataLakeSettings:\n          allOf:\n            - $ref: '#/components/schemas/DataLakeSettings'\n            - description: A structure representing a list of AWS Lake Formation principals designated as data lake administrators.\n    GetDataLakeSettingsRequest:\n      type: object\n      title: GetDataLakeSettingsRequest\n      properties:\n        CatalogId:\n          allOf:\n            - $ref: '#/components/schemas/CatalogIdString'\n            - description: 'The identifier for the Data Catalog. By default, the account ID. The Data Catalog is the persistent metadata store. It contains database definitions, table definitions, and other control information to manage your AWS Lake Formation environment. '\n    GetEffectivePermissionsForPathResponse:\n      type: object\n      properties:\n        Permissions:\n          allOf:\n            - $ref: '#/components/schemas/PrincipalResourcePermissionsList'\n            - description: A list of the permissions for the specified table or database resource located at the path in Amazon S3.\n        NextToken:\n          allOf:\n            - $ref: '#/components/schemas/Token'\n            - description: 'A continuation token, if this is not the first call to retrieve this list.'\n    GetEffectivePermissionsForPathRequest:\n      type: object\n      required:\n        - ResourceArn\n      title: GetEffectivePermissionsForPathRequest\n      properties:\n        CatalogId:\n          allOf:\n            - $ref: '#/components/schemas/CatalogIdString'\n            - description: 'The identifier for the Data Catalog. By default, the account ID. The Data Catalog is the persistent metadata store. It contains database definitions, table definitions, and other control information to manage your AWS Lake Formation environment. '\n        ResourceArn:\n          allOf:\n            - $ref: '#/components/schemas/ResourceArnString'\n            - description: The Amazon Resource Name (ARN) of the resource for which you want to get permissions.\n        NextToken:\n          allOf:\n            - $ref: '#/components/schemas/Token'\n            - description: 'A continuation token, if this is not the first call to retrieve this list.'\n        MaxResults:\n          allOf:\n            - $ref: '#/components/schemas/PageSize'\n            - description: The maximum number of results to return.\n    GetLFTagResponse:\n      type: object\n      properties:\n        CatalogId:\n          allOf:\n            - $ref: '#/components/schemas/CatalogIdString'\n            - description: 'The identifier for the Data Catalog. By default, the account ID. The Data Catalog is the persistent metadata store. It contains database definitions, table definitions, and other control information to manage your AWS Lake Formation environment. '\n        TagKey:\n          allOf:\n            - $ref: '#/components/schemas/LFTagKey'\n            - description: The key-name for the tag.\n        TagValues:\n          allOf:\n            - $ref: '#/components/schemas/TagValueList'\n            - description: A list of possible values an attribute can take.\n    GetLFTagRequest:\n      type: object\n      required:\n        - TagKey\n      title: GetLFTagRequest\n      properties:\n        CatalogId:\n          allOf:\n            - $ref: '#/components/schemas/CatalogIdString'\n            - description: 'The identifier for the Data Catalog. By default, the account ID. The Data Catalog is the persistent metadata store. It contains database definitions, table definitions, and other control information to manage your AWS Lake Formation environment. '\n        TagKey:\n          allOf:\n            - $ref: '#/components/schemas/LFTagKey'\n            - description: The key-name for the tag.\n    GetResourceLFTagsResponse:\n      type: object\n      properties:\n        LFTagOnDatabase:\n          allOf:\n            - $ref: '#/components/schemas/LFTagsList'\n            - description: A list of tags applied to a database resource.\n        LFTagsOnTable:\n          allOf:\n            - $ref: '#/components/schemas/LFTagsList'\n            - description: A list of tags applied to a table resource.\n        LFTagsOnColumns:\n          allOf:\n            - $ref: '#/components/schemas/ColumnLFTagsList'\n            - description: A list of tags applied to a column resource.\n    GetResourceLFTagsRequest:\n      type: object\n      required:\n        - Resource\n      title: GetResourceLFTagsRequest\n      properties:\n        CatalogId:\n          allOf:\n            - $ref: '#/components/schemas/CatalogIdString'\n            - description: 'The identifier for the Data Catalog. By default, the account ID. The Data Catalog is the persistent metadata store. It contains database definitions, table definitions, and other control information to manage your AWS Lake Formation environment. '\n        Resource:\n          allOf:\n            - $ref: '#/components/schemas/Resource'\n            - description: The resource for which you want to return tags.\n        ShowAssignedLFTags:\n          allOf:\n            - $ref: '#/components/schemas/BooleanNullable'\n            - description: Indicates whether to show the assigned tags.\n    GlueEncryptionException: {}\n    GrantPermissionsResponse:\n      type: object\n      properties: {}\n    GrantPermissionsRequest:\n      type: object\n      required:\n        - Principal\n        - Resource\n        - Permissions\n      title: GrantPermissionsRequest\n      properties:\n        CatalogId:\n          allOf:\n            - $ref: '#/components/schemas/CatalogIdString'\n            - description: 'The identifier for the Data Catalog. By default, the account ID. The Data Catalog is the persistent metadata store. It contains database definitions, table definitions, and other control information to manage your AWS Lake Formation environment. '\n        Principal:\n          allOf:\n            - $ref: '#/components/schemas/DataLakePrincipal'\n            - description: '<p>The principal to be granted the permissions on the resource. Supported principals are IAM users or IAM roles, and they are defined by their principal type and their ARN.</p> <p>Note that if you define a resource with a particular ARN, then later delete, and recreate a resource with that same ARN, the resource maintains the permissions already granted. </p>'\n        Resource:\n          allOf:\n            - $ref: '#/components/schemas/Resource'\n            - description: 'The resource to which permissions are to be granted. Resources in AWS Lake Formation are the Data Catalog, databases, and tables.'\n        Permissions:\n          allOf:\n            - $ref: '#/components/schemas/PermissionList'\n            - description: 'The permissions granted to the principal on the resource. AWS Lake Formation defines privileges to grant and revoke access to metadata in the Data Catalog and data organized in underlying data storage such as Amazon S3. AWS Lake Formation requires that each principal be authorized to perform a specific task on AWS Lake Formation resources. '\n        PermissionsWithGrantOption:\n          allOf:\n            - $ref: '#/components/schemas/PermissionList'\n            - description: Indicates a list of the granted permissions that the principal may pass to other users. These permissions may only be a subset of the permissions granted in the <code>Privileges</code>.\n    ListLFTagsResponse:\n      type: object\n      properties:\n        LFTags:\n          allOf:\n            - $ref: '#/components/schemas/LFTagsList'\n            - description: A list of tags that the requested has permission to view.\n        NextToken:\n          allOf:\n            - $ref: '#/components/schemas/Token'\n            - description: 'A continuation token, present if the current list segment is not the last.'\n    ListLFTagsRequest:\n      type: object\n      title: ListLFTagsRequest\n      properties:\n        CatalogId:\n          allOf:\n            - $ref: '#/components/schemas/CatalogIdString'\n            - description: 'The identifier for the Data Catalog. By default, the account ID. The Data Catalog is the persistent metadata store. It contains database definitions, table definitions, and other control information to manage your AWS Lake Formation environment. '\n        ResourceShareType:\n          allOf:\n            - $ref: '#/components/schemas/ResourceShareType'\n            - description: 'If resource share type is <code>ALL</code>, returns both in-account tags and shared tags that the requester has permission to view. If resource share type is <code>FOREIGN</code>, returns all share tags that the requester can view. If no resource share type is passed, lists tags in the given catalog ID that the requester has permission to view.'\n        MaxResults:\n          allOf:\n            - $ref: '#/components/schemas/PageSize'\n            - description: The maximum number of results to return.\n        NextToken:\n          allOf:\n            - $ref: '#/components/schemas/Token'\n            - description: 'A continuation token, if this is not the first call to retrieve this list.'\n    ListPermissionsResponse:\n      type: object\n      properties:\n        PrincipalResourcePermissions:\n          allOf:\n            - $ref: '#/components/schemas/PrincipalResourcePermissionsList'\n            - description: A list of principals and their permissions on the resource for the specified principal and resource types.\n        NextToken:\n          allOf:\n            - $ref: '#/components/schemas/Token'\n            - description: 'A continuation token, if this is not the first call to retrieve this list.'\n    ListPermissionsRequest:\n      type: object\n      title: ListPermissionsRequest\n      properties:\n        CatalogId:\n          allOf:\n            - $ref: '#/components/schemas/CatalogIdString'\n            - description: 'The identifier for the Data Catalog. By default, the account ID. The Data Catalog is the persistent metadata store. It contains database definitions, table definitions, and other control information to manage your AWS Lake Formation environment. '\n        Principal:\n          allOf:\n            - $ref: '#/components/schemas/DataLakePrincipal'\n            - description: Specifies a principal to filter the permissions returned.\n        ResourceType:\n          allOf:\n            - $ref: '#/components/schemas/DataLakeResourceType'\n            - description: Specifies a resource type to filter the permissions returned.\n        Resource:\n          allOf:\n            - $ref: '#/components/schemas/Resource'\n            - description: '<p>A resource where you will get a list of the principal permissions.</p> <p>This operation does not support getting privileges on a table with columns. Instead, call this operation on the table, and the operation returns the table and the table w columns.</p>'\n        NextToken:\n          allOf:\n            - $ref: '#/components/schemas/Token'\n            - description: 'A continuation token, if this is not the first call to retrieve this list.'\n        MaxResults:\n          allOf:\n            - $ref: '#/components/schemas/PageSize'\n            - description: The maximum number of results to return.\n    ListResourcesResponse:\n      type: object\n      properties:\n        ResourceInfoList:\n          allOf:\n            - $ref: '#/components/schemas/ResourceInfoList'\n            - description: A summary of the data lake resources.\n        NextToken:\n          allOf:\n            - $ref: '#/components/schemas/Token'\n            - description: 'A continuation token, if this is not the first call to retrieve these resources.'\n    ListResourcesRequest:\n      type: object\n      title: ListResourcesRequest\n      properties:\n        FilterConditionList:\n          allOf:\n            - $ref: '#/components/schemas/FilterConditionList'\n            - description: Any applicable row-level and/or column-level filtering conditions for the resources.\n        MaxResults:\n          allOf:\n            - $ref: '#/components/schemas/PageSize'\n            - description: The maximum number of resource results.\n        NextToken:\n          allOf:\n            - $ref: '#/components/schemas/Token'\n            - description: 'A continuation token, if this is not the first call to retrieve these resources.'\n    PutDataLakeSettingsResponse:\n      type: object\n      properties: {}\n    PutDataLakeSettingsRequest:\n      type: object\n      required:\n        - DataLakeSettings\n      title: PutDataLakeSettingsRequest\n      properties:\n        CatalogId:\n          allOf:\n            - $ref: '#/components/schemas/CatalogIdString'\n            - description: 'The identifier for the Data Catalog. By default, the account ID. The Data Catalog is the persistent metadata store. It contains database definitions, table definitions, and other control information to manage your AWS Lake Formation environment. '\n        DataLakeSettings:\n          allOf:\n            - $ref: '#/components/schemas/DataLakeSettings'\n            - description: A structure representing a list of AWS Lake Formation principals designated as data lake administrators.\n    RegisterResourceResponse:\n      type: object\n      properties: {}\n    RegisterResourceRequest:\n      type: object\n      required:\n        - ResourceArn\n      title: RegisterResourceRequest\n      properties:\n        ResourceArn:\n          allOf:\n            - $ref: '#/components/schemas/ResourceArnString'\n            - description: The Amazon Resource Name (ARN) of the resource that you want to register.\n        UseServiceLinkedRole:\n          allOf:\n            - $ref: '#/components/schemas/NullableBoolean'\n            - description: '<p>Designates an AWS Identity and Access Management (IAM) service-linked role by registering this role with the Data Catalog. A service-linked role is a unique type of IAM role that is linked directly to Lake Formation.</p> <p>For more information, see <a href=\"https://docs-aws.amazon.com/lake-formation/latest/dg/service-linked-roles.html\">Using Service-Linked Roles for Lake Formation</a>.</p>'\n        RoleArn:\n          allOf:\n            - $ref: '#/components/schemas/IAMRoleArn'\n            - description: The identifier for the role that registers the resource.\n    AlreadyExistsException: {}\n    RemoveLFTagsFromResourceResponse:\n      type: object\n      properties:\n        Failures:\n          allOf:\n            - $ref: '#/components/schemas/LFTagErrors'\n            - description: A list of failures to untag a resource.\n    RemoveLFTagsFromResourceRequest:\n      type: object\n      required:\n        - Resource\n        - LFTags\n      title: RemoveLFTagsFromResourceRequest\n      properties:\n        CatalogId:\n          allOf:\n            - $ref: '#/components/schemas/CatalogIdString'\n            - description: 'The identifier for the Data Catalog. By default, the account ID. The Data Catalog is the persistent metadata store. It contains database definitions, table definitions, and other control information to manage your AWS Lake Formation environment. '\n        Resource:\n          allOf:\n            - $ref: '#/components/schemas/Resource'\n            - description: The resource where you want to remove a tag.\n        LFTags:\n          allOf:\n            - $ref: '#/components/schemas/LFTagsList'\n            - description: The tags to be removed from the resource.\n    RevokePermissionsResponse:\n      type: object\n      properties: {}\n    RevokePermissionsRequest:\n      type: object\n      required:\n        - Principal\n        - Resource\n        - Permissions\n      title: RevokePermissionsRequest\n      properties:\n        CatalogId:\n          allOf:\n            - $ref: '#/components/schemas/CatalogIdString'\n            - description: 'The identifier for the Data Catalog. By default, the account ID. The Data Catalog is the persistent metadata store. It contains database definitions, table definitions, and other control information to manage your AWS Lake Formation environment. '\n        Principal:\n          allOf:\n            - $ref: '#/components/schemas/DataLakePrincipal'\n            - description: The principal to be revoked permissions on the resource.\n        Resource:\n          allOf:\n            - $ref: '#/components/schemas/Resource'\n            - description: The resource to which permissions are to be revoked.\n        Permissions:\n          allOf:\n            - $ref: '#/components/schemas/PermissionList'\n            - description: 'The permissions revoked to the principal on the resource. For information about permissions, see <a href=\"https://docs-aws.amazon.com/lake-formation/latest/dg/security-data-access.html\">Security and Access Control to Metadata and Data</a>.'\n        PermissionsWithGrantOption:\n          allOf:\n            - $ref: '#/components/schemas/PermissionList'\n            - description: Indicates a list of permissions for which to revoke the grant option allowing the principal to pass permissions to other principals.\n    SearchDatabasesByLFTagsResponse:\n      type: object\n      properties:\n        NextToken:\n          allOf:\n            - $ref: '#/components/schemas/Token'\n            - description: 'A continuation token, present if the current list segment is not the last.'\n        DatabaseList:\n          allOf:\n            - $ref: '#/components/schemas/DatabaseLFTagsList'\n            - description: A list of databases that meet the tag conditions.\n    SearchDatabasesByLFTagsRequest:\n      type: object\n      required:\n        - Expression\n      title: SearchDatabasesByLFTagsRequest\n      properties:\n        NextToken:\n          allOf:\n            - $ref: '#/components/schemas/Token'\n            - description: 'A continuation token, if this is not the first call to retrieve this list.'\n        MaxResults:\n          allOf:\n            - $ref: '#/components/schemas/PageSize'\n            - description: The maximum number of results to return.\n        CatalogId:\n          allOf:\n            - $ref: '#/components/schemas/CatalogIdString'\n            - description: 'The identifier for the Data Catalog. By default, the account ID. The Data Catalog is the persistent metadata store. It contains database definitions, table definitions, and other control information to manage your AWS Lake Formation environment. '\n        Expression:\n          allOf:\n            - $ref: '#/components/schemas/Expression'\n            - description: A list of conditions (<code>LFTag</code> structures) to search for in database resources.\n    SearchTablesByLFTagsResponse:\n      type: object\n      properties:\n        NextToken:\n          allOf:\n            - $ref: '#/components/schemas/Token'\n            - description: 'A continuation token, present if the current list segment is not the last.'\n        TableList:\n          allOf:\n            - $ref: '#/components/schemas/TableLFTagsList'\n            - description: A list of tables that meet the tag conditions.\n    SearchTablesByLFTagsRequest:\n      type: object\n      required:\n        - Expression\n      title: SearchTablesByLFTagsRequest\n      properties:\n        NextToken:\n          allOf:\n            - $ref: '#/components/schemas/Token'\n            - description: 'A continuation token, if this is not the first call to retrieve this list.'\n        MaxResults:\n          allOf:\n            - $ref: '#/components/schemas/PageSize'\n            - description: The maximum number of results to return.\n        CatalogId:\n          allOf:\n            - $ref: '#/components/schemas/CatalogIdString'\n            - description: 'The identifier for the Data Catalog. By default, the account ID. The Data Catalog is the persistent metadata store. It contains database definitions, table definitions, and other control information to manage your AWS Lake Formation environment. '\n        Expression:\n          allOf:\n            - $ref: '#/components/schemas/Expression'\n            - description: A list of conditions (<code>LFTag</code> structures) to search for in table resources.\n    UpdateLFTagResponse:\n      type: object\n      properties: {}\n    UpdateLFTagRequest:\n      type: object\n      required:\n        - TagKey\n      title: UpdateLFTagRequest\n      properties:\n        CatalogId:\n          allOf:\n            - $ref: '#/components/schemas/CatalogIdString'\n            - description: 'The identifier for the Data Catalog. By default, the account ID. The Data Catalog is the persistent metadata store. It contains database definitions, table definitions, and other control information to manage your AWS Lake Formation environment. '\n        TagKey:\n          allOf:\n            - $ref: '#/components/schemas/LFTagKey'\n            - description: The key-name for the tag for which to add or delete values.\n        TagValuesToDelete:\n          allOf:\n            - $ref: '#/components/schemas/TagValueList'\n            - description: A list of tag values to delete from the tag.\n        TagValuesToAdd:\n          allOf:\n            - $ref: '#/components/schemas/TagValueList'\n            - description: A list of tag values to add from the tag.\n    UpdateResourceResponse:\n      type: object\n      properties: {}\n    UpdateResourceRequest:\n      type: object\n      required:\n        - RoleArn\n        - ResourceArn\n      title: UpdateResourceRequest\n      properties:\n        RoleArn:\n          allOf:\n            - $ref: '#/components/schemas/IAMRoleArn'\n            - description: The new role to use for the given resource registered in AWS Lake Formation.\n        ResourceArn:\n          allOf:\n            - $ref: '#/components/schemas/ResourceArnString'\n            - description: The resource ARN.\n    CatalogIdString:\n      type: string\n      minLength: 1\n      maxLength: 255\n      x-pattern: '[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\t]*'\n    Resource:\n      type: object\n      properties:\n        Catalog:\n          allOf:\n            - $ref: '#/components/schemas/CatalogResource'\n            - description: 'The identifier for the Data Catalog. By default, the account ID. The Data Catalog is the persistent metadata store. It contains database definitions, table definitions, and other control information to manage your AWS Lake Formation environment. '\n        Database:\n          allOf:\n            - $ref: '#/components/schemas/DatabaseResource'\n            - description: 'The database for the resource. Unique to the Data Catalog. A database is a set of associated table definitions organized into a logical group. You can Grant and Revoke database permissions to a principal. '\n        Table:\n          allOf:\n            - $ref: '#/components/schemas/TableResource'\n            - description: 'The table for the resource. A table is a metadata definition that represents your data. You can Grant and Revoke table privileges to a principal. '\n        TableWithColumns:\n          allOf:\n            - $ref: '#/components/schemas/TableWithColumnsResource'\n            - description: The table with columns for the resource. A principal with permissions to this resource can select metadata from the columns of a table in the Data Catalog and the underlying data in Amazon S3.\n        DataLocation:\n          allOf:\n            - $ref: '#/components/schemas/DataLocationResource'\n            - description: 'The location of an Amazon S3 path where permissions are granted or revoked. '\n        LFTag:\n          allOf:\n            - $ref: '#/components/schemas/LFTagKeyResource'\n            - description: The tag key and values attached to a resource.\n        LFTagPolicy:\n          allOf:\n            - $ref: '#/components/schemas/LFTagPolicyResource'\n            - description: A list of tag conditions that define a resource's tag policy.\n      description: A structure for the resource.\n    LFTagsList:\n      type: array\n      items:\n        $ref: '#/components/schemas/LFTagPair'\n      minItems: 1\n      maxItems: 50\n    LFTagErrors:\n      type: array\n      items:\n        $ref: '#/components/schemas/LFTagError'\n    BatchPermissionsRequestEntryList:\n      type: array\n      items:\n        $ref: '#/components/schemas/BatchPermissionsRequestEntry'\n    BatchPermissionsFailureList:\n      type: array\n      items:\n        $ref: '#/components/schemas/BatchPermissionsFailureEntry'\n    BatchPermissionsRequestEntry:\n      type: object\n      required:\n        - Id\n      properties:\n        Id:\n          allOf:\n            - $ref: '#/components/schemas/Identifier'\n            - description: A unique identifier for the batch permissions request entry.\n        Principal:\n          allOf:\n            - $ref: '#/components/schemas/DataLakePrincipal'\n            - description: The principal to be granted a permission.\n        Resource:\n          allOf:\n            - $ref: '#/components/schemas/Resource'\n            - description: The resource to which the principal is to be granted a permission.\n        Permissions:\n          allOf:\n            - $ref: '#/components/schemas/PermissionList'\n            - description: The permissions to be granted.\n        PermissionsWithGrantOption:\n          allOf:\n            - $ref: '#/components/schemas/PermissionList'\n            - description: Indicates if the option to pass permissions is granted.\n      description: A permission to a resource granted by batch operation to the principal.\n    ErrorDetail:\n      type: object\n      properties:\n        ErrorCode:\n          allOf:\n            - $ref: '#/components/schemas/NameString'\n            - description: The code associated with this error.\n        ErrorMessage:\n          allOf:\n            - $ref: '#/components/schemas/DescriptionString'\n            - description: A message describing the error.\n      description: Contains details about an error.\n    BatchPermissionsFailureEntry:\n      type: object\n      properties:\n        RequestEntry:\n          allOf:\n            - $ref: '#/components/schemas/BatchPermissionsRequestEntry'\n            - description: An identifier for an entry of the batch request.\n        Error:\n          allOf:\n            - $ref: '#/components/schemas/ErrorDetail'\n            - description: An error message that applies to the failure of the entry.\n      description: A list of failures when performing a batch grant or batch revoke operation.\n    Identifier:\n      type: string\n      minLength: 1\n      maxLength: 255\n    DataLakePrincipal:\n      type: object\n      properties:\n        DataLakePrincipalIdentifier:\n          allOf:\n            - $ref: '#/components/schemas/DataLakePrincipalString'\n            - description: An identifier for the AWS Lake Formation principal.\n      description: The AWS Lake Formation principal. Supported principals are IAM users or IAM roles.\n    PermissionList:\n      type: array\n      items:\n        $ref: '#/components/schemas/Permission'\n    BooleanNullable:\n      type: boolean\n    CatalogResource:\n      type: object\n      properties: {}\n      description: A structure for the catalog object.\n    NameString:\n      type: string\n      minLength: 1\n      maxLength: 255\n      x-pattern: '[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\t]*'\n    ColumnLFTag:\n      type: object\n      properties:\n        Name:\n          allOf:\n            - $ref: '#/components/schemas/NameString'\n            - description: The name of a column resource.\n        LFTags:\n          allOf:\n            - $ref: '#/components/schemas/LFTagsList'\n            - description: The tags attached to a column resource.\n      description: A structure containing the name of a column resource and the tags attached to it.\n    ColumnLFTagsList:\n      type: array\n      items:\n        $ref: '#/components/schemas/ColumnLFTag'\n    ColumnNames:\n      type: array\n      items:\n        $ref: '#/components/schemas/NameString'\n    ColumnWildcard:\n      type: object\n      properties:\n        ExcludedColumnNames:\n          allOf:\n            - $ref: '#/components/schemas/ColumnNames'\n            - description: Excludes column names. Any column with this name will be excluded.\n      description: 'A wildcard object, consisting of an optional list of excluded column names or indexes.'\n    ComparisonOperator:\n      type: string\n      enum:\n        - EQ\n        - NE\n        - LE\n        - LT\n        - GE\n        - GT\n        - CONTAINS\n        - NOT_CONTAINS\n        - BEGINS_WITH\n        - IN\n        - BETWEEN\n    LFTagKey:\n      type: string\n      pattern: '^([\\p{L}\\p{Z}\\p{N}_.:\\/=+\\-@%]*)$'\n      minLength: 1\n      maxLength: 128\n    TagValueList:\n      type: array\n      items:\n        $ref: '#/components/schemas/LFTagValue'\n      minItems: 1\n      maxItems: 50\n    DataLakePrincipalString:\n      type: string\n      minLength: 1\n      maxLength: 255\n    DataLakePrincipalList:\n      type: array\n      items:\n        $ref: '#/components/schemas/DataLakePrincipal'\n      minItems: 0\n      maxItems: 10\n    DataLakeResourceType:\n      type: string\n      enum:\n        - CATALOG\n        - DATABASE\n        - TABLE\n        - DATA_LOCATION\n        - LF_TAG\n        - LF_TAG_POLICY\n        - LF_TAG_POLICY_DATABASE\n        - LF_TAG_POLICY_TABLE\n    PrincipalPermissionsList:\n      type: array\n      items:\n        $ref: '#/components/schemas/PrincipalPermissions'\n    TrustedResourceOwners:\n      type: array\n      items:\n        $ref: '#/components/schemas/CatalogIdString'\n    DataLakeSettings:\n      type: object\n      properties:\n        DataLakeAdmins:\n          allOf:\n            - $ref: '#/components/schemas/DataLakePrincipalList'\n            - description: A list of AWS Lake Formation principals. Supported principals are IAM users or IAM roles.\n        CreateDatabaseDefaultPermissions:\n          allOf:\n            - $ref: '#/components/schemas/PrincipalPermissionsList'\n            - description: A structure representing a list of up to three principal permissions entries for default create database permissions.\n        CreateTableDefaultPermissions:\n          allOf:\n            - $ref: '#/components/schemas/PrincipalPermissionsList'\n            - description: A structure representing a list of up to three principal permissions entries for default create table permissions.\n        TrustedResourceOwners:\n          allOf:\n            - $ref: '#/components/schemas/TrustedResourceOwners'\n            - description: '<p>A list of the resource-owning account IDs that the caller''s account can use to share their user access details (user ARNs). The user ARNs can be logged in the resource owner''s AWS CloudTrail log.</p> <p>You may want to specify this property when you are in a high-trust boundary, such as the same team or company. </p>'\n      description: A structure representing a list of AWS Lake Formation principals designated as data lake administrators and lists of principal permission entries for default create database and default create table permissions.\n    ResourceArnString:\n      type: string\n    DataLocationResource:\n      type: object\n      required:\n        - ResourceArn\n      properties:\n        CatalogId:\n          allOf:\n            - $ref: '#/components/schemas/CatalogIdString'\n            - description: 'The identifier for the Data Catalog where the location is registered with AWS Lake Formation. By default, it is the account ID of the caller.'\n        ResourceArn:\n          allOf:\n            - $ref: '#/components/schemas/ResourceArnString'\n            - description: The Amazon Resource Name (ARN) that uniquely identifies the data location resource.\n      description: 'A structure for a data location object where permissions are granted or revoked. '\n    TaggedDatabase:\n      type: object\n      properties:\n        Database:\n          allOf:\n            - $ref: '#/components/schemas/DatabaseResource'\n            - description: A database that has tags attached to it.\n        LFTags:\n          allOf:\n            - $ref: '#/components/schemas/LFTagsList'\n            - description: A list of tags attached to the database.\n      description: A structure describing a database resource with tags.\n    DatabaseLFTagsList:\n      type: array\n      items:\n        $ref: '#/components/schemas/TaggedDatabase'\n    DatabaseResource:\n      type: object\n      required:\n        - Name\n      properties:\n        CatalogId:\n          allOf:\n            - $ref: '#/components/schemas/CatalogIdString'\n            - description: 'The identifier for the Data Catalog. By default, it is the account ID of the caller.'\n        Name:\n          allOf:\n            - $ref: '#/components/schemas/NameString'\n            - description: The name of the database resource. Unique to the Data Catalog.\n      description: A structure for the database object.\n    ResourceInfo:\n      type: object\n      properties:\n        ResourceArn:\n          allOf:\n            - $ref: '#/components/schemas/ResourceArnString'\n            - description: The Amazon Resource Name (ARN) of the resource.\n        RoleArn:\n          allOf:\n            - $ref: '#/components/schemas/IAMRoleArn'\n            - description: The IAM role that registered a resource.\n        LastModified:\n          allOf:\n            - $ref: '#/components/schemas/LastModifiedTimestamp'\n            - description: The date and time the resource was last modified.\n      description: A structure containing information about an AWS Lake Formation resource.\n    DescriptionString:\n      type: string\n      minLength: 0\n      maxLength: 2048\n      x-pattern: '[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\r\\n\\t]*'\n    ResourceShareList:\n      type: array\n      items:\n        $ref: '#/components/schemas/RAMResourceShareArn'\n    DetailsMap:\n      type: object\n      properties:\n        ResourceShare:\n          allOf:\n            - $ref: '#/components/schemas/ResourceShareList'\n            - description: A resource share ARN for a catalog resource shared through AWS Resource Access Manager (AWS RAM).\n      description: '<p>A structure containing the additional details to be returned in the <code>AdditionalDetails</code> attribute of <code>PrincipalResourcePermissions</code>.</p> <p>If a catalog resource is shared through AWS Resource Access Manager (AWS RAM), then there will exist a corresponding RAM resource share ARN.</p>'\n    LFTag:\n      type: object\n      required:\n        - TagKey\n        - TagValues\n      properties:\n        TagKey:\n          allOf:\n            - $ref: '#/components/schemas/LFTagKey'\n            - description: The key-name for the tag.\n        TagValues:\n          allOf:\n            - $ref: '#/components/schemas/TagValueList'\n            - description: A list of possible values an attribute can take.\n      description: 'A structure that allows an admin to grant user permissions on certain conditions. For example, granting a role access to all columns not tagged ''PII'' of tables tagged ''Prod''.'\n    Expression:\n      type: array\n      items:\n        $ref: '#/components/schemas/LFTag'\n      minItems: 1\n      maxItems: 5\n    FieldNameString:\n      type: string\n      enum:\n        - RESOURCE_ARN\n        - ROLE_ARN\n        - LAST_MODIFIED\n    StringValueList:\n      type: array\n      items:\n        $ref: '#/components/schemas/StringValue'\n    FilterCondition:\n      type: object\n      properties:\n        Field:\n          allOf:\n            - $ref: '#/components/schemas/FieldNameString'\n            - description: The field to filter in the filter condition.\n        ComparisonOperator:\n          allOf:\n            - $ref: '#/components/schemas/ComparisonOperator'\n            - description: The comparison operator used in the filter condition.\n        StringValueList:\n          allOf:\n            - $ref: '#/components/schemas/StringValueList'\n            - description: A string with values used in evaluating the filter condition.\n      description: This structure describes the filtering of columns in a table based on a filter condition.\n    FilterConditionList:\n      type: array\n      items:\n        $ref: '#/components/schemas/FilterCondition'\n      minItems: 1\n      maxItems: 20\n    Token:\n      type: string\n    PageSize:\n      type: integer\n      minimum: 1\n      maximum: 1000\n    PrincipalResourcePermissionsList:\n      type: array\n      items:\n        $ref: '#/components/schemas/PrincipalResourcePermissions'\n    IAMRoleArn:\n      type: string\n      pattern: 'arn:aws:iam::[0-9]*:role/.*'\n    LFTagPair:\n      type: object\n      required:\n        - TagKey\n        - TagValues\n      properties:\n        CatalogId:\n          allOf:\n            - $ref: '#/components/schemas/CatalogIdString'\n            - description: 'The identifier for the Data Catalog. By default, the account ID. The Data Catalog is the persistent metadata store. It contains database definitions, table definitions, and other control information to manage your AWS Lake Formation environment. '\n        TagKey:\n          allOf:\n            - $ref: '#/components/schemas/LFTagKey'\n            - description: The key-name for the tag.\n        TagValues:\n          allOf:\n            - $ref: '#/components/schemas/TagValueList'\n            - description: A list of possible values an attribute can take.\n      description: A structure containing a tag key-value pair.\n    LFTagError:\n      type: object\n      properties:\n        LFTag:\n          allOf:\n            - $ref: '#/components/schemas/LFTagPair'\n            - description: The key-name of the tag.\n        Error:\n          allOf:\n            - $ref: '#/components/schemas/ErrorDetail'\n            - description: An error that occurred with the attachment or detachment of the tag.\n      description: A structure containing an error related to a <code>TagResource</code> or <code>UnTagResource</code> operation.\n    LFTagKeyResource:\n      type: object\n      required:\n        - TagKey\n        - TagValues\n      properties:\n        CatalogId:\n          allOf:\n            - $ref: '#/components/schemas/CatalogIdString'\n            - description: 'The identifier for the Data Catalog. By default, the account ID. The Data Catalog is the persistent metadata store. It contains database definitions, table definitions, and other control information to manage your AWS Lake Formation environment. '\n        TagKey:\n          allOf:\n            - $ref: '#/components/schemas/NameString'\n            - description: The key-name for the tag.\n        TagValues:\n          allOf:\n            - $ref: '#/components/schemas/TagValueList'\n            - description: A list of possible values an attribute can take.\n      description: A structure containing a tag key and values for a resource.\n    ResourceType:\n      type: string\n      enum:\n        - DATABASE\n        - TABLE\n    LFTagPolicyResource:\n      type: object\n      required:\n        - ResourceType\n        - Expression\n      properties:\n        CatalogId:\n          allOf:\n            - $ref: '#/components/schemas/CatalogIdString'\n            - description: 'The identifier for the Data Catalog. By default, the account ID. The Data Catalog is the persistent metadata store. It contains database definitions, table definitions, and other control information to manage your AWS Lake Formation environment. '\n        ResourceType:\n          allOf:\n            - $ref: '#/components/schemas/ResourceType'\n            - description: The resource type for which the tag policy applies.\n        Expression:\n          allOf:\n            - $ref: '#/components/schemas/Expression'\n            - description: A list of tag conditions that apply to the resource's tag policy.\n      description: A structure containing a list of tag conditions that apply to a resource's tag policy.\n    LFTagValue:\n      type: string\n      pattern: '^([\\p{L}\\p{Z}\\p{N}_.:\\*\\/=+\\-@%]*)$'\n      minLength: 0\n      maxLength: 256\n    LastModifiedTimestamp:\n      type: string\n      format: date-time\n    ResourceShareType:\n      type: string\n      enum:\n        - FOREIGN\n        - ALL\n    ResourceInfoList:\n      type: array\n      items:\n        $ref: '#/components/schemas/ResourceInfo'\n    NullableBoolean:\n      type: boolean\n    Permission:\n      type: string\n      enum:\n        - ALL\n        - SELECT\n        - ALTER\n        - DROP\n        - DELETE\n        - INSERT\n        - DESCRIBE\n        - CREATE_DATABASE\n        - CREATE_TABLE\n        - DATA_LOCATION_ACCESS\n        - CREATE_TAG\n        - ALTER_TAG\n        - DELETE_TAG\n        - DESCRIBE_TAG\n        - ASSOCIATE_TAG\n    PrincipalPermissions:\n      type: object\n      properties:\n        Principal:\n          allOf:\n            - $ref: '#/components/schemas/DataLakePrincipal'\n            - description: The principal who is granted permissions.\n        Permissions:\n          allOf:\n            - $ref: '#/components/schemas/PermissionList'\n            - description: The permissions that are granted to the principal.\n      description: Permissions granted to a principal.\n    PrincipalResourcePermissions:\n      type: object\n      properties:\n        Principal:\n          allOf:\n            - $ref: '#/components/schemas/DataLakePrincipal'\n            - description: The Data Lake principal to be granted or revoked permissions.\n        Resource:\n          allOf:\n            - $ref: '#/components/schemas/Resource'\n            - description: The resource where permissions are to be granted or revoked.\n        Permissions:\n          allOf:\n            - $ref: '#/components/schemas/PermissionList'\n            - description: The permissions to be granted or revoked on the resource.\n        PermissionsWithGrantOption:\n          allOf:\n            - $ref: '#/components/schemas/PermissionList'\n            - description: Indicates whether to grant the ability to grant permissions (as a subset of permissions granted).\n        AdditionalDetails:\n          allOf:\n            - $ref: '#/components/schemas/DetailsMap'\n            - description: This attribute can be used to return any additional details of <code>PrincipalResourcePermissions</code>. Currently returns only as a RAM resource share ARN.\n      description: The permissions granted or revoked on a resource.\n    RAMResourceShareArn:\n      type: string\n    TableResource:\n      type: object\n      required:\n        - DatabaseName\n      properties:\n        CatalogId:\n          allOf:\n            - $ref: '#/components/schemas/CatalogIdString'\n            - description: 'The identifier for the Data Catalog. By default, it is the account ID of the caller.'\n        DatabaseName:\n          allOf:\n            - $ref: '#/components/schemas/NameString'\n            - description: 'The name of the database for the table. Unique to a Data Catalog. A database is a set of associated table definitions organized into a logical group. You can Grant and Revoke database privileges to a principal. '\n        Name:\n          allOf:\n            - $ref: '#/components/schemas/NameString'\n            - description: The name of the table.\n        TableWildcard:\n          allOf:\n            - $ref: '#/components/schemas/TableWildcard'\n            - description: <p>A wildcard object representing every table under a database.</p> <p>At least one of <code>TableResource$Name</code> or <code>TableResource$TableWildcard</code> is required.</p>\n      description: 'A structure for the table object. A table is a metadata definition that represents your data. You can Grant and Revoke table privileges to a principal. '\n    TableWithColumnsResource:\n      type: object\n      required:\n        - DatabaseName\n        - Name\n      properties:\n        CatalogId:\n          allOf:\n            - $ref: '#/components/schemas/CatalogIdString'\n            - description: 'The identifier for the Data Catalog. By default, it is the account ID of the caller.'\n        DatabaseName:\n          allOf:\n            - $ref: '#/components/schemas/NameString'\n            - description: 'The name of the database for the table with columns resource. Unique to the Data Catalog. A database is a set of associated table definitions organized into a logical group. You can Grant and Revoke database privileges to a principal. '\n        Name:\n          allOf:\n            - $ref: '#/components/schemas/NameString'\n            - description: 'The name of the table resource. A table is a metadata definition that represents your data. You can Grant and Revoke table privileges to a principal. '\n        ColumnNames:\n          allOf:\n            - $ref: '#/components/schemas/ColumnNames'\n            - description: The list of column names for the table. At least one of <code>ColumnNames</code> or <code>ColumnWildcard</code> is required.\n        ColumnWildcard:\n          allOf:\n            - $ref: '#/components/schemas/ColumnWildcard'\n            - description: A wildcard specified by a <code>ColumnWildcard</code> object. At least one of <code>ColumnNames</code> or <code>ColumnWildcard</code> is required.\n      description: '<p>A structure for a table with columns object. This object is only used when granting a SELECT permission.</p> <p>This object must take a value for at least one of <code>ColumnsNames</code>, <code>ColumnsIndexes</code>, or <code>ColumnsWildcard</code>.</p>'\n    TableLFTagsList:\n      type: array\n      items:\n        $ref: '#/components/schemas/TaggedTable'\n    StringValue:\n      type: string\n    TaggedTable:\n      type: object\n      properties:\n        Table:\n          allOf:\n            - $ref: '#/components/schemas/TableResource'\n            - description: A table that has tags attached to it.\n        LFTagOnDatabase:\n          allOf:\n            - $ref: '#/components/schemas/LFTagsList'\n            - description: A list of tags attached to the database where the table resides.\n        LFTagsOnTable:\n          allOf:\n            - $ref: '#/components/schemas/LFTagsList'\n            - description: A list of tags attached to the table.\n        LFTagsOnColumns:\n          allOf:\n            - $ref: '#/components/schemas/ColumnLFTagsList'\n            - description: A list of tags attached to columns in the table.\n      description: A structure describing a table resource with tags.\n    TableWildcard:\n      type: object\n      properties: {}\n      description: A wildcard object representing every table under a database.\nsecurity:\n  - hmac: []\n",
			"canonicalURL": "/github.com/APIs-guru/openapi-directory@3237843a76543b0ee2c1e5f65e28ec6b526e8700/-/blob/APIs/amazonaws.com/lakeformation/2017-03-31/openapi.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/APIs-guru/openapi-directory/blob/3237843a76543b0ee2c1e5f65e28ec6b526e8700/APIs/amazonaws.com/lakeformation/2017-03-31/openapi.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "parse: parse spec: parse operations: path \"/#X-Amz-Target=AWSLakeFormation.ListLFTags\": at 1:68064: post: operation \"ListLFTags\": at 1:68454: parse path \"/#X-Amz-Target=AWSLakeFormation.ListLFTags\": path MUST NOT contain a fragment"
}