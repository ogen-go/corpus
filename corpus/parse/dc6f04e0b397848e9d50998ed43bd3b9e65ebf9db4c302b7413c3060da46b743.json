{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/keesey/phylopic"
		},
		"file": {
			"name": "openapi.yaml",
			"size": 0,
			"path": "apps/api-docs/public/v2/openapi.yaml",
			"byteSize": 56937,
			"content": "openapi: 3.0.3\ninfo:\n  title: PhyloPic API\n  description: |\n    Documentation for [*PhyloPic*](https://www.phylopic.org/)'s Application Programming Interface.\n\n    *PhyloPic* is an open database of freely reusable silhouette images of organisms, searchable by phylogeny.\n  contact:\n    name: Mike Keesey\n    email: keesey+phylopic@gmail.com\n    url: http://tmkeesey.net\n  license:\n    name: CC0\n    url: https://creativecommons.org/share-your-work/public-domain/cc0\n  version: 2.1.1\ntags:\n  - name: general\n    description: General API information and status.\n  - name: collections\n    description: Methods related to collections of entities.\n  - name: contributors\n    description: Methods related to contributing users.\n  - name: external identifiers\n    description: Methods related to external taxonomic databases.\n  - name: images\n    description: Methods related to silhouette images.\n  - name: nodes\n    description: Methods related to phylogenetic nodes.\n  - name: search\n    description: Searches for entities (images and nodes).\n  - name: uploads\n    description: Methods related to file uploads.\nservers:\n  - url: https://api.phylopic.org\n    description: Production API\ncomponents:\n  headers:\n    Accept:\n      description: Accepted media types for the request payload.\n      schema:\n        type: string\n    Content-Type:\n      description: The media type for the payload, including API version. Always `application/vnd.phylopic.v2+json`.\n      example: application/vnd.phylopic.v2+json\n      schema:\n        format: mimetype\n        type: string\n    Location:\n      description: The URL for the resource.\n      schema:\n        format: url\n        type: string\n    WWW-Authenticate:\n      description: Directives for authorizing the request.\n      schema:\n        type: string\n  parameters:\n    Accept:\n      name: Accept\n      in: header\n      description: |\n        The media type for the response, including API version. Must allow `application/vnd.phylopic.v2+json`.\n\n        If omitted, `*/*` (a wildcard allowing all types) is assumed, and the response's `Content-Type` header will be `application/vnd.phylopic.v2+json`.\n      schema:\n        example: application/vnd.phylopic.v2+json\n        format: mimetype\n        type: string\n    Content-Type:\n      name: Content-Type\n      in: header\n      required: true\n      description: The media type for the payload, including API version. Always `application/vnd.phylopic.v2+json`.\n      schema:\n        example: application/vnd.phylopic.v2+json\n        format: mimetype\n        type: string\n    Content-Type-image:\n      name: Content-Type\n      in: header\n      required: true\n      description: |\n          The media type for the payload. Must be one of the following:\n\n          - `image/bmp`\n          - `image/gif`\n          - `image/jpeg`\n          - `image/png`\n          - `image/svg+xml`\n      schema:\n        example: image/svg+xml\n        format: mimetype\n        type: string\n    authority:\n      name: authority\n      in: path\n      required: true\n      description: |\n        Specifies an authority for collections of objects.\n      schema:\n        example: eol.org\n        type: string\n    build:\n      name: build\n      in: query\n      required: false\n      description: |\n        Specifies the index of the build for the returned data. Only the current build is valid.\n\n        Leaving this parameter out will yield a temporary redirect (`307`) to the same URL but with the current `build` value added to the query.\n      schema:\n        type: integer\n    embed_childNodes:\n      name: embed_childNodes\n      in: query\n      description: |\n        If `\"true\"`, includes all members of `childNodes` in `_embedded`.\n      schema:\n        pattern: \"^true$\"\n        type: string\n    embed_contributor:\n      name: embed_contributor\n      in: query\n      description: |\n        If `\"true\"`, includes `contributor` in `_embedded`.\n      schema:\n        pattern: \"^true$\"\n        type: string\n    embed_generalNode:\n      name: embed_generalNode\n      in: query\n      description: |\n        If `\"true\"`, includes `generalNode` in `_embedded`.\n      schema:\n        pattern: \"^true$\"\n        type: string\n    embed_items:\n      name: embed_items\n      in: query\n      description: |\n        If `\"true\"`, includes `items` in `_embedded`. (This is a prerequisite for including any embeds on the items themselves.)\n      schema:\n        pattern: \"^true$\"\n        type: string\n    embed_nodes:\n      name: embed_nodes\n      in: query\n      description: |\n        If `\"true\"`, includes all members of `nodes` in `_embedded`.\n      schema:\n        pattern: \"^true$\"\n        type: string\n    embed_parentNode:\n      name: embed_parentNode\n      in: query\n      description: |\n        If `\"true\"`, includes `parentNode` in `_embedded`.\n      schema:\n        pattern: \"^true$\"\n        type: string\n    embed_primaryImage:\n      name: embed_primaryImage\n      in: query\n      description: |\n        If `\"true\"`, includes `primaryImage` in `_embedded`.\n      schema:\n        pattern: \"^true$\"\n        type: string\n    embed_specificNode:\n      name: embed_specificNode\n      in: query\n      description: |\n        If `\"true\"`, includes `specificNode` in `_embedded`.\n      schema:\n        pattern: \"^true$\"\n        type: string\n    filter_clade:\n      name: filter_clade\n      in: query\n      required: false\n      description: |\n        Limits results to entries within a clade (as identified by its UUID).\n\n        Cannot be used alongside `filter_contributor`, `filter_name`, or `filter_node`.\n      schema:\n        example: \"8f901db5-84c1-4dc0-93ba-2300eeddf4ab\"\n        format: uuid\n        type: string\n    filter_collection:\n      name: filter_collection\n      in: query\n      required: false\n      description: |\n        Limits results to entities within the specified collection.\n\n        Cannot be used alongside other `filter_*` parameters (except `filter_license_*` for images).\n      schema:\n        example: \"060f03a9-fafd-4d08-81d1-b8f82080573f\"\n        pattern: '^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$'\n        type: string\n    filter_contributor:\n      name: filter_contributor\n      in: query\n      required: false\n      description: |\n        Limits results to entries contributed by a certain user (as identified by their UUID).\n\n        Cannot be used alongside `filter_clade`, `filter_name`, or `filter_node`.\n      schema:\n        example: \"060f03a9-fafd-4d08-81d1-b8f82080573f\"\n        format: uuid\n        type: string\n    filter_license_by:\n      name: filter_license_by\n      in: query\n      required: false\n      description: |\n        If `\"true\"`, limits results to entries with a license that requires attribution.\n        If `\"false\"`, limits results to entries with a license that does not require attribution.\n      schema:\n        example: \"false\"\n        pattern: \"^(true|false)$\"\n        type: string\n    filter_license_nc:\n      name: filter_license_nc\n      in: query\n      required: false\n      description: |\n        If `\"true\"`, limits results to entries with a license that does not allow commercial usage.\n        If `\"false\"`, limits results to entries with a license that allows commercial usage.\n      schema:\n        example: \"false\"\n        pattern: \"^(true|false)$\"\n        type: string\n    filter_license_sa:\n      name: filter_license_sa\n      in: query\n      required: false\n      description: |\n        If `\"true\"`, limits results to entries with a license with the StandAlone clause.\n        If `\"false\"`, limits results to entries with a license without the StandAlone clause.\n      schema:\n        example: \"false\"\n        pattern: \"^(true|false)$\"\n        type: string\n    filter_name:\n      name: filter_name\n      in: query\n      required: false\n      description: |\n        Limits results to entries matching a given name. The name should be normalized (all lower-case letters or hyphens, no diacritics, single spaces between words).\n      schema:\n        example: \"homo sapiens\"\n        pattern: \"^([a-z-]+ )*[a-z-]+$\"\n        type: string\n    filter_node:\n      name: filter_node\n      in: query\n      required: false\n      description: |\n        Limits results to entries matching a given name. The name should be normalized (all lower-case letters or hyphens, no diacritics, single spaces between words).\n\n        Cannot be used alongside `filter_clade`, `filter_contributor`, or `filter_name`.\n      schema:\n        example: \"8f901db5-84c1-4dc0-93ba-2300eeddf4ab\"\n        format: uuid\n        type: string\n    namespace:\n      name: namespace\n      in: path\n      required: true\n      description: |\n        Specifies a particular collection of objects, under an authority.\n      schema:\n        example: pages\n        type: string\n    objectid:\n      name: objectid\n      in: path\n      required: true\n      description: |\n        Specifies an object within an authorized namespace.\n      schema:\n        example: \"1\"\n        type: string\n    page:\n      name: page\n      in: query\n      required: false\n      description: |\n        Specifies a particular page of items to retrieve.\n      schema:\n        type: integer\n    query:\n      name: query\n      in: query\n      required: true\n      description: |\n        A search string to match names against. Must be at least two characters in length, all lower-case letters, hyphens (`\"-\"`), or spaces (`\" \"`).\n      schema:\n        example: \"homo s\"\n        pattern: \"^([a-z-]+ )*[a-z-]+$\"\n        type: string\n    uuid:\n      name: uuid\n      in: path\n      required: true\n      description: The UUID of the entity.\n      schema:\n        format: uuid\n        type: string\n  responses:\n    \"204\":\n      description: The request completed successfully. No further information is provided.\n    \"303\":\n      description: The requested resource should be loaded from another location.\n      headers:\n        Content-Type:\n          $ref: \"#/components/headers/Content-Type\"\n        Location:\n          $ref: \"#/components/headers/Location\"\n      content:\n        application/vnd.phylopic.v2+json:\n          schema:\n            $ref: \"#/components/schemas/Link\"\n    \"307\":\n      description: The initial request lacked the `build` parameter. The resource can be found at the URL supplied by `Location`, which has the current build index added to the query.\n      headers:\n        Content-Type:\n          $ref: \"#/components/headers/Content-Type\"\n        Location:\n          $ref: \"#/components/headers/Location\"\n      content:\n        application/vnd.phylopic.v2+json:\n          schema:\n            $ref: \"#/components/schemas/Link\"\n    \"308\":\n      description: The requested resource is available at another location, permanently.\n      headers:\n        Content-Type:\n          $ref: \"#/components/headers/Content-Type\"\n        Location:\n          $ref: \"#/components/headers/Location\"\n      content:\n        application/vnd.phylopic.v2+json:\n          schema:\n            $ref: \"#/components/schemas/Link\"\n    \"400\":\n      description: There is an error in the request.\n      headers:\n        Content-Type:\n          $ref: \"#/components/headers/Content-Type\"\n      content:\n        application/vnd.phylopic.v2+json:\n          schema:\n            $ref: \"#/components/schemas/Errors\"\n    \"401\":\n      description: The request is not authorized.\n      headers:\n        Content-Type:\n          $ref: \"#/components/headers/Content-Type\"\n        WWW-Authenticate:\n          $ref: \"#/components/headers/WWW-Authenticate\"\n      content:\n        application/vnd.phylopic.v2+json:\n          schema:\n            $ref: \"#/components/schemas/Errors\"\n    \"404\":\n      description: The resource cannot be found.\n      headers:\n        Content-Type:\n          $ref: \"#/components/headers/Content-Type\"\n      content:\n        application/vnd.phylopic.v2+json:\n          schema:\n            $ref: \"#/components/schemas/Errors\"\n    \"406\":\n      description: The request cannot be accepted because the `Accept` header does not allow an available type of content.\n      headers:\n        Content-Type:\n          $ref: \"#/components/headers/Content-Type\"\n      content:\n        application/vnd.phylopic.v2+json:\n          schema:\n            $ref: \"#/components/schemas/Errors\"\n    \"410\":\n      description: The specified build is old and no longer present. Remove the `build` parameter to be redirected (`307`) to the latest version of this resource.\n      headers:\n        Content-Type:\n          $ref: \"#/components/headers/Content-Type\"\n      content:\n        application/vnd.phylopic.v2+json:\n          schema:\n            $ref: \"#/components/schemas/Errors\"\n    \"413\":\n      description: The payload is too large.\n      headers:\n        Content-Type:\n          $ref: \"#/components/headers/Content-Type\"\n      content:\n        application/vnd.phylopic.v2+json:\n          schema:\n            $ref: \"#/components/schemas/Errors\"\n    \"415\":\n      description: The request's payload has the wrong content type.\n      headers:\n        Accept:\n          $ref: \"#/components/headers/Accept\"\n        Content-Type:\n          $ref: \"#/components/headers/Content-Type\"\n      content:\n        application/vnd.phylopic.v2+json:\n          schema:\n            $ref: \"#/components/schemas/Errors\"\n  schemas:\n    Contributor:\n      allOf:\n        - $ref: \"#/components/schemas/Entity\"\n        - description: A contributing user.\n          type: object\n          required:\n            - _links\n            - count\n            - name\n          properties:\n            _links:\n              type: object\n              required:\n                - contact\n                - images\n                - self\n              properties:\n                contact:\n                  allOf:\n                    - $ref: \"#/components/schemas/Link\"\n                    - description: A `mailto:` link including the contributor's email address.\n                      nullable: true\n                images:\n                  allOf:\n                    - $ref: \"#/components/schemas/Link\"\n                    - description: A link to a list of all images uploaded by this user.\n            count:\n              type: integer\n              description: The number of images uploaded by this user.\n            name:\n              type: string\n              description: This user's full name, or alias.\n    Data:\n      description: Any object corresponding to a data build.\n      required:\n        - build\n      type: object\n      properties:\n        build:\n          description: The index number of the build that this object belongs to.\n          type: integer\n    Entity:\n      allOf:\n        - $ref: \"#/components/schemas/Data\"\n        - description: Common properties for all entities.\n          required:\n            - _links\n            - build\n            - created\n            - uuid\n          properties:\n            _links:\n              type: object\n              required:\n                - self\n              properties:\n                self:\n                  $ref: \"#/components/schemas/Link\"\n            created:\n              description: The time this was created.\n              example: 1970-01-01T00:00:00.000Z\n              pattern: '^\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}.\\d{3}Z$'\n              type: string\n            uuid:\n              description: The universally unique identifier for this entity.\n              format: uuid\n              type: string\n              example: 123e4567-e89b-12d3-a456-426655440000\n    Errors:\n      description: List of errors.\n      type: object\n      required:\n        - errors\n      properties:\n        errors:\n          type: array\n          items:\n            type: object\n            required:\n              - developerMessage\n              - type\n              - userMessage\n            properties:\n              developerMessage:\n                description: A message with details for developers.\n                type: string\n              documentation:\n                description: A link to documentation for the error.\n                format: url\n                type: string\n              field:\n                description: Identifies the parameter that caused the error.\n                type: string\n                example: \"build\"\n              type:\n                description: The type of error, from [this list](https://docs.aws.amazon.com/apigateway/api-reference/resource/gateway-response/#responseType).\n                type: string\n                example: BAD_REQUEST_PARAMETERS\n              userMessage:\n                description: A message to be presented to the user.\n                type: string\n    Image:\n      allOf:\n        - $ref: \"#/components/schemas/Entity\"\n        - description: An image illustrating one or more nodes.\n          required:\n            - _links\n            - attribution\n            - build\n            - sponsor\n          type: object\n          properties:\n            attribution:\n              type: string\n              example: \"Charles Knight\"\n              nullable: true\n            sponsor:\n              type: string\n              example: \"Patron Name\"\n              nullable: true\n            _links:\n              type: object\n              required:\n                - contributor\n                - generalNode\n                - http://ogp.me/ns#image\n                - license\n                - nodes\n                - rasterFiles\n                - self\n                - sourceFile\n                - specificNode\n                - thumbnailFiles\n                - vectorFile\n              properties:\n                contributor:\n                  allOf:\n                    - $ref: \"#/components/schemas/Link\"\n                    - description: A `mailto:` URL with the contributor's email address.\n                generalNode:\n                  allOf:\n                    - $ref: \"#/components/schemas/Link\"\n                    - description: A link to the node indicating how generally the image can be applied, either an ancestor of `specificNode` or a node indicating a common ancestor with `specificNode`.\n                      nullable: true\n                \"http://ogp.me/ns#image\":\n                  allOf:\n                    - $ref: \"#/components/schemas/MediaLink\"\n                    - description: A link to an image for use with Open Graph (PNG format).\n                license:\n                  allOf:\n                    - $ref: \"#/components/schemas/Link\"\n                    - description: A link to the license that this image is under.\n                nodes:\n                  type: array\n                  description: Links to all nodes that this image illustrates, based on `specificNode` and (if provided) `generalNode`.\n                  items:\n                    $ref: \"#/components/schemas/Link\"\n                rasterFiles:\n                  type: array\n                  description: A list of links to raster image files (PNG format) of various sizes.\n                  items:\n                    $ref: \"#/components/schemas/MediaLink\"\n                sourceFile:\n                  allOf:\n                    - $ref: \"#/components/schemas/MediaLink\"\n                    - description: A link to the raster or vector image file as it was submitted. May be an SVG file or any of the accepted raster image formats.\n                specificNode:\n                  allOf:\n                    - $ref: \"#/components/schemas/Link\"\n                    - description: A link to the node indicating the specific taxon that this image illustrates.\n                thumbnailFiles:\n                  type: array\n                  description: A list of links to raster thumbnail image files (PNG format) of various square sizes.\n                  items:\n                    $ref: \"#/components/schemas/MediaLink\"\n                vectorFile:\n                  allOf:\n                    - $ref: \"#/components/schemas/MediaLink\"\n                    - description: A link to the vector image file as it was submitted. Always in SVG format.\n                      nullable: true\n    ImageWithEmbedded:\n      description: An image with related entities embedded.\n      required:\n        - _embedded\n      allOf:\n        - $ref: \"#/components/schemas/Image\"\n        - type: object\n          properties:\n            _embedded:\n              type: object\n              description: Embedded entities related to the image. See `_links` for more information.\n              properties:\n                contributor:\n                  $ref: \"#/components/schemas/Contributor\"\n                generalNode:\n                  allOf:\n                    - $ref: \"#/components/schemas/Node\"\n                    - nullable: true\n                nodes:\n                  type: array\n                  items:\n                    $ref: \"#/components/schemas/Node\"\n                specificNode:\n                  $ref: \"#/components/schemas/Node\"\n    Link:\n      description: A basic link.\n      type: object\n      required:\n        - href\n      properties:\n        href:\n          format: url\n          type: string\n          example: /path\n    List:\n      description: A list of entities.\n      type: object\n      required:\n        - _links\n        - build\n        - itemsPerPage\n        - totalItems\n        - totalPages\n      allOf:\n        - $ref: \"#/components/schemas/Data\"\n        - type: object\n          properties:\n            _links:\n              required:\n                - firstPage\n                - lastPage\n                - self\n              properties:\n                firstPage:\n                  allOf:\n                    - $ref: \"#/components/schemas/Link\"\n                    - nullable: true\n                lastPage:\n                  allOf:\n                    - $ref: \"#/components/schemas/Link\"\n                    - nullable: true\n                self:\n                  $ref: \"#/components/schemas/Link\"\n            itemsPerPage:\n              description: The maximum number of entities on each page in this list.\n              type: integer\n            totalItems:\n              description: The total number of entities in this list.\n              type: integer\n            totalPages:\n              description: The total number of pages in this list.\n              type: integer\n    MediaLink:\n      allOf:\n        - $ref: \"#/components/schemas/Link\"\n        - type: object\n          description: A link to an image file.\n          required:\n            - href\n            - sizes\n            - type\n          properties:\n            href:\n              example: \"https://images.phylopic.org/images/045279d5-24e5-4838-bec9-0bea86812e35/thumbnail/64x64.png\"\n            sizes:\n              pattern: '^\\d+x\\d+$'\n              type: string\n              example: 64x64\n            type:\n              format: mimetype\n              type: string\n              example: \"image/png\"\n    Node:\n      allOf:\n        - $ref: \"#/components/schemas/Entity\"\n        - description: A phylogenetic node, corresponding to a taxonomic unit.\n          type: object\n          required:\n            - _links\n            - build\n            - names\n          properties:\n            _links:\n              type: object\n              required:\n                - childNodes\n                - cladeImages\n                - contributor\n                - external\n                - images\n                - lineage\n                - parentNode\n                - primaryImage\n                - self\n              properties:\n                childNodes:\n                  type: array\n                  description: |\n                    Links to all immediate descendant nodes, in alphabetical order.\n                    Note that this only includes illustrated nodes.\n                  items:\n                    allOf:\n                      - $ref: \"#/components/schemas/Link\"\n                cladeImages:\n                  allOf:\n                    - $ref: \"#/components/schemas/Link\"\n                    - description: |\n                        A link to a list of all images illustrating this node or any descendant node.\n\n                        (For unillustrated nodes, this will be the same as the `cladeImages` link of a descendant node.)\n                contributor:\n                  allOf:\n                    - $ref: \"#/components/schemas/Link\"\n                    - description: A link to data about the user who uploaded the image.\n                external:\n                  type: array\n                  description: Links to the same node under other domains (for example, *Encyclopedia of Life*).\n                  items:\n                    $ref: \"#/components/schemas/TitledLink\"\n                images:\n                  allOf:\n                    - $ref: \"#/components/schemas/Link\"\n                    - description: A link to a list of all images illustrating this node.\n                lineage:\n                  allOf:\n                    - $ref: \"#/components/schemas/Link\"\n                    - description: A link to a list of this node and all nodes ancestral to it.\n                parentNode:\n                  allOf:\n                    - $ref: \"#/components/schemas/Link\"\n                    - description: |\n                        Link to the parent node (immediate ancestor).\n\n                        (Only `null` for the root node, *Pan-Biota*.)\n                      nullable: true\n                primaryImage:\n                  allOf:\n                    - $ref: \"#/components/schemas/Link\"\n                    - description: Link to the primary image for this node.\n                      nullable: true\n            names:\n              type: array\n              description: A list of all of this node's names, starting with the preferred name.\n              items:\n                $ref: \"#/components/schemas/NodeName\"\n    NodeName:\n      description: A taxonomic name, associated with a phylogenetic node.\n      type: array\n      items:\n        type: object\n        required:\n          - class\n          - text\n        properties:\n          class:\n            format: \"^(citation|comment|operator|rank|scientific|vernacular)$\"\n            type: string\n            example: scientific\n          text:\n            format: '^\\S+( \\S+)*$'\n            type: string\n            example: Homo sapiens\n    NodeWithEmbedded:\n      description: A node with related entities embedded.\n      required:\n        - _embedded\n        - _links\n        - names\n      allOf:\n        - $ref: \"#/components/schemas/Node\"\n        - type: object\n          properties:\n            _embedded:\n              type: object\n              description: Embedded entities related to the phylogenetic node. See `_links` for more information.\n              properties:\n                childNodes:\n                  type: array\n                  items:\n                    $ref: \"#/components/schemas/Node\"\n                parentNode:\n                  allOf:\n                    - $ref: \"#/components/schemas/Node\"\n                    - nullable: true\n                primaryImage:\n                  allOf:\n                    - $ref: \"#/components/schemas/Image\"\n                    - nullable: true\n    Page:\n      allOf:\n        - $ref: \"#/components/schemas/Data\"\n        - description: A page of entities.\n          required:\n            - _links\n            - index\n          type: object\n          properties:\n            _links:\n              type: object\n              required:\n                - items\n                - list\n                - next\n                - previous\n              properties:\n                items:\n                  description: Links to the entities in the page.\n                  type: array\n                  items:\n                    $ref: \"#/components/schemas/Link\"\n                list:\n                  allOf:\n                    - description: The list that this page is part of.\n                    - $ref: \"#/components/schemas/Link\"\n                next:\n                  allOf:\n                    - description: The next page of entities, or `null` if this is the last page.\n                    - $ref: \"#/components/schemas/Link\"\n                    - nullable: true\n                previous:\n                  allOf:\n                    - description: The previous page of entities, or `null` if this is the first page.\n                    - $ref: \"#/components/schemas/Link\"\n                    - nullable: true\n            index:\n              description: The index of this page within the list of all pages (zero-based).\n              type: integer\n    PageWithEmbeddedContributors:\n      allOf:\n        - $ref: \"#/components/schemas/Page\"\n        - type: object\n          properties:\n            _embedded:\n              type: object\n              description: Embedded entities belonging to the page. See `_links` for more information.\n              properties:\n                items:\n                  type: array\n                  items:\n                    $ref: \"#/components/schemas/Contributor\"\n    PageWithEmbeddedImages:\n      allOf:\n        - $ref: \"#/components/schemas/Page\"\n        - type: object\n          properties:\n            _embedded:\n              type: object\n              description: Embedded entities belonging to the page. See `_links` for more information.\n              properties:\n                items:\n                  type: array\n                  items:\n                    oneOf:\n                      - $ref: \"#/components/schemas/Image\"\n                      - $ref: \"#/components/schemas/ImageWithEmbedded\"\n    PageWithEmbeddedNodes:\n      allOf:\n        - $ref: \"#/components/schemas/Page\"\n        - type: object\n          properties:\n            _embedded:\n              type: object\n              description: Embedded entities belonging to the page. See `_links` for more information.\n              properties:\n                items:\n                  type: array\n                  items:\n                    oneOf:\n                      - $ref: \"#/components/schemas/Node\"\n                      - $ref: \"#/components/schemas/NodeWithEmbedded\"\n    TitledLink:\n      description: A link with a title, usually for an external resource.\n      allOf:\n        - $ref: \"#/components/schemas/Link\"\n        - type: object\n          required:\n            - title\n          properties:\n            title:\n              type: string\n              example: \"Name\"\n  securitySchemes:\n    bearerAuth:\n      bearerFormat: JWT\n      scheme: bearer\n      type: http\npaths:\n  /:\n    get:\n      operationId: getIndex\n      summary: Returns API information and links to resources.\n      tags:\n        - general\n      parameters:\n        - $ref: \"#/components/parameters/Accept\"\n        - $ref: \"#/components/parameters/build\"\n      responses:\n        \"200\":\n          description: |\n            [HAL](http://stateless.co/hal_specification.html) [JSON](https://www.json.org/) resource description for the API.\n          headers:\n            Content-Type:\n              $ref: \"#/components/headers/Content-Type\"\n          content:\n            application/vnd.phylopic.v2+json:\n              schema:\n                type: object\n                required:\n                  - _links\n                  - build\n                  - buildTimestamp\n                  - title\n                  - version\n                properties:\n                  _links:\n                    type: object\n                    required:\n                      - contact\n                      - documentation\n                      - resources\n                      - self\n                    properties:\n                      contact:\n                        $ref: \"#/components/schemas/TitledLink\"\n                      documentation:\n                        $ref: \"#/components/schemas/Link\"\n                      resources:\n                        type: array\n                        items:\n                          $ref: \"#/components/schemas/TitledLink\"\n                      self:\n                        $ref: \"#/components/schemas/Link\"\n                  build:\n                    description: Index number of the current data build.\n                    type: integer\n                  buildTimestamp:\n                    description: Timestamp of the current data build.\n                    example: 1970-01-01T00:00:00.000Z\n                    pattern: '^\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}.\\d{3}Z$'\n                    type: string\n                  title:\n                    type: string\n                    example: PhyloPic Application Programming Interface\n                  version:\n                    description: Latest semantic version of the API.\n                    pattern: '^\\d+\\.\\d+\\.\\d+(-(alpha|beta|rc)(\\.\\d+)?)?$'\n                    type: string\n                    example: 2.0.0\n        \"307\":\n          $ref: \"#/components/responses/307\"\n        \"400\":\n          $ref: \"#/components/responses/400\"\n        \"406\":\n          $ref: \"#/components/responses/406\"\n        \"410\":\n          $ref: \"#/components/responses/410\"\n  /autocomplete:\n    get:\n      operationId: getAutocomplete\n      summary: Gets suggestions for full names based on partial text.\n      tags:\n        - nodes\n        - search\n      description: |\n        Never returns more than 16 results. Results with the text toward the beginning are favored. The results can be clarified via `/nodes` or `/images`, using the `filter_name` query parameter.\n      parameters:\n        - $ref: \"#/components/parameters/Accept\"\n        - $ref: \"#/components/parameters/build\"\n        - name: query\n          in: query\n          required: true\n          description: |\n            The text to look up. Must be at least two characters.\n\n            If not normalized (lower case, single spaces only, only alphabetic characters and hyphens [`\"-\"`]\\), a `308` response will indicate the URL with the normalized query text.\n          schema:\n            format: \"^([a-z-]+ )*[^a-z-]+$\"\n            type: string\n            example: human\n      responses:\n        \"200\":\n          description: |\n            [HAL](http://stateless.co/hal_specification.html) [JSON](https://www.json.org/) textual matches.\n          headers:\n            Content-Type:\n              $ref: \"#/components/headers/Content-Type\"\n          content:\n            application/vnd.phylopic.v2+json:\n              schema:\n                allOf:\n                  - $ref: \"#/components/schemas/Data\"\n                  - description: Results of an autocomplete search.\n                    type: object\n                    required:\n                      - _links\n                      - build\n                      - matches\n                    properties:\n                      _links:\n                        type: object\n                        properties:\n                          self:\n                            $ref: \"#/components/schemas/Link\"\n                      matches:\n                        type: array\n                        description: Text matches for the query, found in node names.\n                        items:\n                          example: modern humans\n                          pattern: \"^([a-z-]+ )*[a-z-]+$\"\n                          type: string\n        \"307\":\n          $ref: \"#/components/responses/307\"\n        \"308\":\n          $ref: \"#/components/responses/308\"\n        \"400\":\n          $ref: \"#/components/responses/400\"\n        \"404\":\n          $ref: \"#/components/responses/404\"\n        \"406\":\n          $ref: \"#/components/responses/406\"\n        \"410\":\n          $ref: \"#/components/responses/410\"\n  /collections:\n    post:\n      operationId: postCollection\n      summary: Redirects to an entity collection based on a list of UUIDs.\n      tags:\n        - collections\n      parameters:\n        - $ref: \"#/components/parameters/Accept\"\n        - $ref: \"#/components/parameters/Content-Type\"\n      requestBody:\n        description: A list of UUIDs.\n        required: true\n        content:\n          application/json:\n            schema:\n              type: array\n              items:\n                example: \"060f03a9-fafd-4d08-81d1-b8f82080573f\"\n                format: uuid\n                type: string\n      responses:\n        \"303\":\n          $ref: \"#/components/responses/303\"\n        \"400\":\n          $ref: \"#/components/responses/400\"\n        \"406\":\n          $ref: \"#/components/responses/406\"\n        \"413\":\n          $ref: \"#/components/responses/413\"\n        \"415\":\n          $ref: \"#/components/responses/415\"\n  /collections/{uuid}:\n    get:\n      operationId: getCollection\n      summary: Links to endpoints for getting all entities of certain types that are in a specified collection.\n      description: UUIDs are sorted alphanumerically.\n      tags:\n        - collections\n      parameters:\n        - $ref: \"#/components/parameters/Accept\"\n      responses:\n        \"200\":\n          description: |\n            [HAL](http://stateless.co/hal_specification.html) [JSON](https://www.json.org/) resource description for the collection.\n          headers:\n            Content-Type:\n              $ref: \"#/components/headers/Content-Type\"\n          content:\n            application/vnd.phylopic.v2+json:\n              schema:\n                type: object\n                required:\n                  - _links\n                  - uuid\n                properties:\n                  _links:\n                    type: object\n                    required:\n                      - contributors\n                      - images\n                      - nodes\n                      - self\n                    properties:\n                      contributors:\n                        $ref: \"#/components/schemas/Link\"\n                      images:\n                        $ref: \"#/components/schemas/Link\"\n                      nodes:\n                        $ref: \"#/components/schemas/Link\"\n                      self:\n                        $ref: \"#/components/schemas/Link\"\n                  uuid:\n                    description: |\n                      The identifier for this collection.\n\n                      Note: this is formatted like a UUID, but may or may not be a valid UUID.\n                    example: \"060f03a9-fafd-4d08-81d1-b8f82080573f\"\n                    pattern: '^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$'\n                    type: string\n        \"404\":\n          $ref: \"#/components/responses/404\"\n        \"406\":\n          $ref: \"#/components/responses/406\"\n  /contributors:\n    get:\n      operationId: getContributors\n      summary: Lists all contributing users.\n      description: Contributors are listed in order from those with the most uploaded images to those with the fewest.\n      tags:\n        - collections\n        - contributors\n      parameters:\n        - $ref: \"#/components/parameters/Accept\"\n        - $ref: \"#/components/parameters/build\"\n        - $ref: \"#/components/parameters/embed_items\"\n        - $ref: \"#/components/parameters/filter_collection\"\n        - $ref: \"#/components/parameters/page\"\n      responses:\n        \"200\":\n          description: |\n            [HAL](http://stateless.co/hal_specification.html) [JSON](https://www.json.org/) list record (if `page` is not provided) or page record (if `page` is provided).\n          content:\n            application/vnd.phylopic.v2+json:\n              schema:\n                oneOf:\n                  - $ref: \"#/components/schemas/List\"\n                  - $ref: \"#/components/schemas/PageWithEmbeddedContributors\"\n        \"307\":\n          $ref: \"#/components/responses/307\"\n        \"400\":\n          $ref: \"#/components/responses/400\"\n        \"404\":\n          $ref: \"#/components/responses/404\"\n        \"406\":\n          $ref: \"#/components/responses/406\"\n        \"410\":\n          $ref: \"#/components/responses/410\"\n  /contributors/{uuid}:\n    get:\n      operationId: getContributor\n      summary: Returns a specific contributing user.\n      tags:\n        - contributors\n      parameters:\n        - $ref: \"#/components/parameters/Accept\"\n        - $ref: \"#/components/parameters/build\"\n        - $ref: \"#/components/parameters/uuid\"\n      responses:\n        \"200\":\n          description: |\n            [HAL](http://stateless.co/hal_specification.html) [JSON](https://www.json.org/) contributor record.\n          headers:\n            Content-Type:\n              $ref: \"#/components/headers/Content-Type\"\n          content:\n            application/vnd.phylopic.v2+json:\n              schema:\n                $ref: \"#/components/schemas/Contributor\"\n        \"307\":\n          $ref: \"#/components/responses/307\"\n        \"400\":\n          $ref: \"#/components/responses/400\"\n        \"404\":\n          $ref: \"#/components/responses/404\"\n        \"406\":\n          $ref: \"#/components/responses/406\"\n        \"410\":\n          $ref: \"#/components/responses/410\"\n  /images:\n    get:\n      operationId: getImages\n      summary: Lists all images, or a filtered subset.\n      description: |\n        Images are listed from most recently uploaded to least recently uploaded, unless certain `filter_*` parameters are specified:\n        - `filter_clade`: images are listed from most basal nodes to most deeply nested nodes.\n        - `filter_name`: images are listed according to which one's nodes' names fit the search string best.\n      tags:\n        - collections\n        - images\n        - search\n      parameters:\n        - $ref: \"#/components/parameters/Accept\"\n        - $ref: \"#/components/parameters/build\"\n        - $ref: \"#/components/parameters/embed_contributor\"\n        - $ref: \"#/components/parameters/embed_generalNode\"\n        - $ref: \"#/components/parameters/embed_items\"\n        - $ref: \"#/components/parameters/embed_nodes\"\n        - $ref: \"#/components/parameters/embed_specificNode\"\n        - $ref: \"#/components/parameters/filter_clade\"\n        - $ref: \"#/components/parameters/filter_collection\"\n        - $ref: \"#/components/parameters/filter_contributor\"\n        - $ref: \"#/components/parameters/filter_license_by\"\n        - $ref: \"#/components/parameters/filter_license_nc\"\n        - $ref: \"#/components/parameters/filter_license_sa\"\n        - $ref: \"#/components/parameters/filter_name\"\n        - $ref: \"#/components/parameters/filter_node\"\n        - $ref: \"#/components/parameters/page\"\n      responses:\n        \"200\":\n          description: |\n            [HAL](http://stateless.co/hal_specification.html) [JSON](https://www.json.org/) list record (if `page` is not provided) or page record (if `page` is provided).\n          content:\n            application/vnd.phylopic.v2+json:\n              schema:\n                oneOf:\n                  - $ref: \"#/components/schemas/List\"\n                  - $ref: \"#/components/schemas/PageWithEmbeddedImages\"\n        \"307\":\n          $ref: \"#/components/responses/307\"\n        \"400\":\n          $ref: \"#/components/responses/400\"\n        \"404\":\n          $ref: \"#/components/responses/404\"\n        \"406\":\n          $ref: \"#/components/responses/406\"\n        \"410\":\n          $ref: \"#/components/responses/410\"\n  /images/{uuid}:\n    get:\n      operationId: getImage\n      summary: Returns data for a specific image.\n      tags:\n        - images\n      parameters:\n        - $ref: \"#/components/parameters/Accept\"\n        - $ref: \"#/components/parameters/build\"\n        - $ref: \"#/components/parameters/embed_contributor\"\n        - $ref: \"#/components/parameters/embed_generalNode\"\n        - $ref: \"#/components/parameters/embed_nodes\"\n        - $ref: \"#/components/parameters/embed_specificNode\"\n        - $ref: \"#/components/parameters/uuid\"\n      responses:\n        \"200\":\n          description: |\n            [HAL](http://stateless.co/hal_specification.html) [JSON](https://www.json.org/) image record.\n          headers:\n            Content-Type:\n              $ref: \"#/components/headers/Content-Type\"\n          content:\n            application/vnd.phylopic.v2+json:\n              schema:\n                $ref: \"#/components/schemas/ImageWithEmbedded\"\n        \"307\":\n          $ref: \"#/components/responses/307\"\n        \"400\":\n          $ref: \"#/components/responses/400\"\n        \"404\":\n          $ref: \"#/components/responses/404\"\n        \"406\":\n          $ref: \"#/components/responses/406\"\n        \"410\":\n          $ref: \"#/components/responses/410\"\n  /licenses:\n    get:\n      operationId: getLicenses\n      summary: Returns a list of licenses.\n      tags:\n        - images\n      description:\n        Returns a list of all licenses that may be used for new submissions.\n\n        Note that this does not include all licenses for all images in the database.\n      parameters:\n        - $ref: \"#/components/parameters/Accept\"\n        - $ref: \"#/components/parameters/build\"\n      responses:\n        \"200\":\n          description: List of titled links to licenses.\n          headers:\n            Content-Type:\n              $ref: \"#/components/headers/Content-Type\"\n          content:\n            application/vnd.phylopic.v2+json:\n              schema:\n                type: array\n                items:\n                  $ref: \"#/components/schemas/TitledLink\"\n        \"307\":\n          $ref: \"#/components/responses/307\"\n        \"400\":\n          $ref: \"#/components/responses/400\"\n        \"404\":\n          $ref: \"#/components/responses/404\"\n        \"406\":\n          $ref: \"#/components/responses/406\"\n        \"410\":\n          $ref: \"#/components/responses/410\"\n  /namespaces:\n    get:\n      operationId: getNamespaces\n      summary: Returns a list of authorized namespaces.\n      tags:\n        - external identifiers\n      description:\n        Returns a list of authorities (e.g., `ubio.org`) and the namespaces under them (e.g., `namebank`). These may be used to resolve external identifiers the *PhyloPic* nodes.\n      parameters:\n        - $ref: \"#/components/parameters/Accept\"\n        - $ref: \"#/components/parameters/build\"\n      responses:\n        \"200\":\n          description: List of objects storing information for an authorized namespace.\n          headers:\n            Content-Type:\n              $ref: \"#/components/headers/Content-Type\"\n          content:\n            application/vnd.phylopic.v2+json:\n              schema:\n                type: array\n                items:\n                  type: object\n                  required:\n                    - authority\n                    - namespace\n                  properties:\n                    authority:\n                      type: string\n                    namespace:\n                      type: string\n        \"307\":\n          $ref: \"#/components/responses/307\"\n        \"400\":\n          $ref: \"#/components/responses/400\"\n        \"404\":\n          $ref: \"#/components/responses/404\"\n        \"406\":\n          $ref: \"#/components/responses/406\"\n        \"410\":\n          $ref: \"#/components/responses/410\"\n  /nodes:\n    get:\n      operationId: getNodes\n      summary: Lists all nodes, or a filtered subset.\n      description: |\n        Nodes are listed with the most basal node first, followed by subclades in order from smallest to largest.\n\n        If `filter_name` is passed, the nodes with names matching the search text are listed according to how early in the name the search text appears.\n      tags:\n        - collections\n        - nodes\n        - search\n      parameters:\n        - $ref: \"#/components/parameters/Accept\"\n        - $ref: \"#/components/parameters/build\"\n        - $ref: \"#/components/parameters/embed_childNodes\"\n        - $ref: \"#/components/parameters/embed_items\"\n        - $ref: \"#/components/parameters/embed_primaryImage\"\n        - $ref: \"#/components/parameters/embed_parentNode\"\n        - $ref: \"#/components/parameters/filter_collection\"\n        - $ref: \"#/components/parameters/filter_name\"\n        - $ref: \"#/components/parameters/page\"\n      responses:\n        \"200\":\n          description: |\n            [HAL](http://stateless.co/hal_specification.html) [JSON](https://www.json.org/) list record (if `page` is not provided) or page record (if `page` is provided).\n          content:\n            application/vnd.phylopic.v2+json:\n              schema:\n                oneOf:\n                  - $ref: \"#/components/schemas/List\"\n                  - $ref: \"#/components/schemas/PageWithEmbeddedNodes\"\n        \"307\":\n          $ref: \"#/components/responses/307\"\n        \"308\":\n          $ref: \"#/components/responses/308\"\n        \"400\":\n          $ref: \"#/components/responses/400\"\n        \"404\":\n          $ref: \"#/components/responses/404\"\n        \"406\":\n          $ref: \"#/components/responses/406\"\n        \"410\":\n          $ref: \"#/components/responses/410\"\n  /nodes/{uuid}:\n    get:\n      operationId: getNode\n      summary: Returns a specific phylogenetic node.\n      tags:\n        - nodes\n      parameters:\n        - $ref: \"#/components/parameters/Accept\"\n        - $ref: \"#/components/parameters/build\"\n        - $ref: \"#/components/parameters/embed_childNodes\"\n        - $ref: \"#/components/parameters/embed_primaryImage\"\n        - $ref: \"#/components/parameters/embed_parentNode\"\n        - $ref: \"#/components/parameters/uuid\"\n      responses:\n        \"200\":\n          description: |\n            [HAL](http://stateless.co/hal_specification.html) [JSON](https://www.json.org/) node record.\n          headers:\n            Content-Type:\n              $ref: \"#/components/headers/Content-Type\"\n          content:\n            application/vnd.phylopic.v2+json:\n              schema:\n                $ref: \"#/components/schemas/NodeWithEmbedded\"\n        \"307\":\n          $ref: \"#/components/responses/307\"\n        \"400\":\n          $ref: \"#/components/responses/400\"\n        \"404\":\n          $ref: \"#/components/responses/404\"\n        \"406\":\n          $ref: \"#/components/responses/406\"\n        \"410\":\n          $ref: \"#/components/responses/410\"\n  /nodes/{uuid}/lineage:\n    get:\n      operationId: getLineage\n      summary: Retrieves the ancestral lineage for a given node.\n      description: The nodes are listed in order from least to most ancestral. That is, the first node is the specified node, the second is its parent node, and the last is the root node.\n      tags:\n        - nodes\n      parameters:\n        - $ref: \"#/components/parameters/Accept\"\n        - $ref: \"#/components/parameters/build\"\n        - $ref: \"#/components/parameters/embed_childNodes\"\n        - $ref: \"#/components/parameters/embed_primaryImage\"\n        - $ref: \"#/components/parameters/embed_parentNode\"\n        - $ref: \"#/components/parameters/filter_name\"\n        - $ref: \"#/components/parameters/page\"\n        - $ref: \"#/components/parameters/uuid\"\n      responses:\n        \"200\":\n          description: |\n            [HAL](http://stateless.co/hal_specification.html) [JSON](https://www.json.org/) list record (if `page` is not provided) or page record (if `page` is provided).\n          content:\n            application/vnd.phylopic.v2+json:\n              schema:\n                oneOf:\n                  - $ref: \"#/components/schemas/List\"\n                  - $ref: \"#/components/schemas/PageWithEmbeddedNodes\"\n        \"307\":\n          $ref: \"#/components/responses/307\"\n        \"308\":\n          $ref: \"#/components/responses/308\"\n        \"400\":\n          $ref: \"#/components/responses/400\"\n        \"404\":\n          $ref: \"#/components/responses/404\"\n        \"406\":\n          $ref: \"#/components/responses/406\"\n        \"410\":\n          $ref: \"#/components/responses/410\"\n  /ping:\n    get:\n      operationId: ping\n      summary: Checks if the API is operational.\n      tags:\n        - general\n      responses:\n        \"204\":\n          $ref: \"#/components/responses/204\"\n  /resolve/{authority}/{namespace}:\n    post:\n      operationId: postResolveObjects\n      summary: Resolves a list of external identifiers under a single authorized namespace to a single phylogenetic node.\n      description: Identifiers toward the beginning of the list have priority. Subsequent identifiers are checked if a node cannot be found for an earlier identifier.\n      tags:\n        - external identifiers\n        - nodes\n        - search\n      parameters:\n        - $ref: \"#/components/parameters/Accept\"\n        - $ref: \"#/components/parameters/Content-Type\"\n        - $ref: \"#/components/parameters/authority\"\n        - $ref: \"#/components/parameters/build\"\n        - $ref: \"#/components/parameters/embed_childNodes\"\n        - $ref: \"#/components/parameters/embed_parentNode\"\n        - $ref: \"#/components/parameters/embed_primaryImage\"\n        - $ref: \"#/components/parameters/namespace\"\n      requestBody:\n        description: A list of object IDs.\n        required: true\n        content:\n          application/json:\n            schema:\n              type: array\n              items:\n                type: string\n      responses:\n        \"303\":\n          description: A matching node was found.\n          headers:\n            Location:\n              $ref: \"#/components/headers/Location\"\n          content:\n            application/vnd.phylopic.v2+json:\n              schema:\n                $ref: \"#/components/schemas/TitledLink\"\n        \"400\":\n          $ref: \"#/components/responses/400\"\n        \"404\":\n          $ref: \"#/components/responses/404\"\n        \"406\":\n          $ref: \"#/components/responses/406\"\n        \"410\":\n          $ref: \"#/components/responses/410\"\n        \"415\":\n          $ref: \"#/components/responses/415\"\n  /resolve/{authority}/{namespace}/{objectid}:\n    get:\n      operationId: getResolveObject\n      summary: Resolves an external identifier to the closest phylogenetic node.\n      description: Valid query parameters passed to this method are included in the returned `Location` header.\n      tags:\n        - external identifiers\n        - nodes\n        - search\n      parameters:\n        - $ref: \"#/components/parameters/Accept\"\n        - $ref: \"#/components/parameters/authority\"\n        - $ref: \"#/components/parameters/build\"\n        - $ref: \"#/components/parameters/embed_childNodes\"\n        - $ref: \"#/components/parameters/embed_parentNode\"\n        - $ref: \"#/components/parameters/embed_primaryImage\"\n        - $ref: \"#/components/parameters/namespace\"\n        - $ref: \"#/components/parameters/objectid\"\n      responses:\n        \"308\":\n          description: The node was found.\n          headers:\n            Location:\n              $ref: \"#/components/headers/Location\"\n          content:\n            application/vnd.phylopic.v2+json:\n              schema:\n                $ref: \"#/components/schemas/TitledLink\"\n        \"400\":\n          $ref: \"#/components/responses/400\"\n        \"404\":\n          $ref: \"#/components/responses/404\"\n        \"406\":\n          $ref: \"#/components/responses/406\"\n        \"410\":\n          $ref: \"#/components/responses/410\"\n  /root:\n    get:\n      operationId: getRoot\n      summary: Retrieves the root phylogenetic node (the ancestor of all others).\n      description: Redirects to the appropriate `/nodes/{uuid}` endpoint.\n      tags:\n        - nodes\n      parameters:\n        - $ref: \"#/components/parameters/Accept\"\n        - $ref: \"#/components/parameters/build\"\n        - $ref: \"#/components/parameters/embed_childNodes\"\n        - $ref: \"#/components/parameters/embed_parentNode\"\n        - $ref: \"#/components/parameters/embed_primaryImage\"\n      responses:\n        \"307\":\n          $ref: \"#/components/responses/307\"\n        \"308\":\n          $ref: \"#/components/responses/308\"\n        \"406\":\n          $ref: \"#/components/responses/406\"\n  /uploads:\n    post:\n      operationId: postUpload\n      security:\n        - bearerAuth: []\n      summary: Uploads a file\n      description: On success, redirects to a location where the file can be downloaded from.\n      tags:\n        - images\n        - uploads\n      parameters:\n        - $ref: \"#/components/parameters/Content-Type-image\"\n      requestBody:\n        description: File to upload.\n        required: true\n        content:\n          image/bmp:\n            schema:\n                format: binary\n                type: string\n          image/gif:\n            schema:\n                format: binary\n                type: string\n          image/jpeg:\n            schema:\n                format: binary\n                type: string\n          image/png:\n            schema:\n                format: binary\n                type: string\n          image/svg+xml:\n            schema:\n                format: xml\n                type: string\n      responses:\n        \"200\":\n          description: Link to the uploaded file.\n          headers:\n            Content-Type:\n              $ref: \"#/components/headers/Content-Type\"\n          content:\n            application/vnd.phylopic.v2+json:\n              schema:\n                $ref: \"#/components/schemas/Link\"\n        \"401\":\n          $ref: \"#/components/responses/401\"\n        \"413\":\n          $ref: \"#/components/responses/413\"\n        \"415\":\n          $ref: \"#/components/responses/415\"\n",
			"canonicalURL": "/github.com/keesey/phylopic@09f0eabaca25a718e84bd117bf0d3e802fe58e2e/-/blob/apps/api-docs/public/v2/openapi.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/keesey/phylopic/blob/09f0eabaca25a718e84bd117bf0d3e802fe58e2e/apps/api-docs/public/v2/openapi.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "parse: parse spec: parse path items: path \"/collections/{uuid}\": get: operation \"getCollection\": at apps/api-docs/public/v2/openapi.yaml:1071:7: parse path \"/collections/{uuid}\": path parameter not specified: \"uuid\""
}