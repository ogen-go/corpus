{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/APIs-guru/openapi-directory"
		},
		"file": {
			"name": "openapi.yaml",
			"size": 0,
			"path": "APIs/amazonaws.com/worklink/2018-09-25/openapi.yaml",
			"byteSize": 126249,
			"content": "openapi: 3.0.0\ninfo:\n  version: '2018-09-25'\n  x-release: v4\n  title: Amazon WorkLink\n  description: 'Amazon WorkLink is a cloud-based service that provides secure access to internal websites and web apps from iOS and Android phones. In a single step, your users, such as employees, can access internal websites as efficiently as they access any other public website. They enter a URL in their web browser, or choose a link to an internal website in an email. Amazon WorkLink authenticates the user''s access and securely renders authorized internal web content in a secure rendering service in the AWS cloud. Amazon WorkLink doesn''t download or store any internal web content on mobile devices.'\n  x-logo:\n    url: 'https://twitter.com/awscloud/profile_image?size=original'\n    backgroundColor: '#FFFFFF'\n  termsOfService: 'https://aws.amazon.com/service-terms/'\n  contact:\n    name: Mike Ralphson\n    email: mike.ralphson@gmail.com\n    url: 'https://github.com/mermade/aws2openapi'\n    x-twitter: PermittedSoc\n  license:\n    name: Apache 2.0 License\n    url: 'http://www.apache.org/licenses/'\n  x-providerName: amazonaws.com\n  x-serviceName: worklink\n  x-aws-signingName: worklink\n  x-origin:\n    - contentType: application/json\n      url: 'https://raw.githubusercontent.com/aws/aws-sdk-js/master/apis/worklink-2018-09-25.normal.json'\n      converter:\n        url: 'https://github.com/mermade/aws2openapi'\n        version: 1.0.0\n      x-apisguru-driver: external\n  x-apiClientRegistration:\n    url: 'https://portal.aws.amazon.com/gp/aws/developer/registration/index.html?nc2=h_ct'\n  x-apisguru-categories:\n    - cloud\n  x-preferred: true\nexternalDocs:\n  description: Amazon Web Services documentation\n  url: 'https://docs.aws.amazon.com/worklink/'\nservers:\n  - url: 'http://worklink.{region}.amazonaws.com'\n    variables:\n      region:\n        description: The AWS region\n        enum:\n          - us-east-1\n          - us-east-2\n          - us-west-1\n          - us-west-2\n          - us-gov-west-1\n          - us-gov-east-1\n          - ca-central-1\n          - eu-north-1\n          - eu-west-1\n          - eu-west-2\n          - eu-west-3\n          - eu-central-1\n          - eu-south-1\n          - af-south-1\n          - ap-northeast-1\n          - ap-northeast-2\n          - ap-northeast-3\n          - ap-southeast-1\n          - ap-southeast-2\n          - ap-east-1\n          - ap-south-1\n          - sa-east-1\n          - me-south-1\n        default: us-east-1\n    description: The WorkLink multi-region endpoint\n  - url: 'https://worklink.{region}.amazonaws.com'\n    variables:\n      region:\n        description: The AWS region\n        enum:\n          - us-east-1\n          - us-east-2\n          - us-west-1\n          - us-west-2\n          - us-gov-west-1\n          - us-gov-east-1\n          - ca-central-1\n          - eu-north-1\n          - eu-west-1\n          - eu-west-2\n          - eu-west-3\n          - eu-central-1\n          - eu-south-1\n          - af-south-1\n          - ap-northeast-1\n          - ap-northeast-2\n          - ap-northeast-3\n          - ap-southeast-1\n          - ap-southeast-2\n          - ap-east-1\n          - ap-south-1\n          - sa-east-1\n          - me-south-1\n        default: us-east-1\n    description: The WorkLink multi-region endpoint\n  - url: 'http://worklink.{region}.amazonaws.com.cn'\n    variables:\n      region:\n        description: The AWS region\n        enum:\n          - cn-north-1\n          - cn-northwest-1\n        default: cn-north-1\n    description: The WorkLink endpoint for China (Beijing) and China (Ningxia)\n  - url: 'https://worklink.{region}.amazonaws.com.cn'\n    variables:\n      region:\n        description: The AWS region\n        enum:\n          - cn-north-1\n          - cn-northwest-1\n        default: cn-north-1\n    description: The WorkLink endpoint for China (Beijing) and China (Ningxia)\nx-hasEquivalentPaths: true\npaths:\n  /associateDomain:\n    post:\n      operationId: AssociateDomain\n      description: Specifies a domain to be associated to Amazon WorkLink.\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AssociateDomainResponse'\n        '480':\n          description: UnauthorizedException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/UnauthorizedException'\n        '481':\n          description: InternalServerErrorException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InternalServerErrorException'\n        '482':\n          description: InvalidRequestException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InvalidRequestException'\n        '483':\n          description: ResourceNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResourceNotFoundException'\n        '484':\n          description: ResourceAlreadyExistsException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResourceAlreadyExistsException'\n        '485':\n          description: TooManyRequestsException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/TooManyRequestsException'\n      parameters: []\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              required:\n                - FleetArn\n                - DomainName\n                - AcmCertificateArn\n              properties:\n                FleetArn:\n                  description: The Amazon Resource Name (ARN) of the fleet.\n                  type: string\n                  minLength: 20\n                  maxLength: 2048\n                DomainName:\n                  description: The fully qualified domain name (FQDN).\n                  type: string\n                  pattern: '^[a-zA-Z0-9]?((?!-)([A-Za-z0-9-]*[A-Za-z0-9])\\.)+[a-zA-Z0-9]+$'\n                  minLength: 1\n                  maxLength: 253\n                DisplayName:\n                  description: The name to display.\n                  type: string\n                  maxLength: 100\n                AcmCertificateArn:\n                  description: The ARN of an issued ACM certificate that is valid for the domain being associated.\n                  type: string\n                  pattern: 'arn:[\\w+=/,.@-]+:[\\w+=/,.@-]+:[\\w+=/,.@-]*:[0-9]+:[\\w+=,.@-]+(/[\\w+=/,.@-]+)*'\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n  /associateWebsiteAuthorizationProvider:\n    post:\n      operationId: AssociateWebsiteAuthorizationProvider\n      description: Associates a website authorization provider with a specified fleet. This is used to authorize users against associated websites in the company network.\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AssociateWebsiteAuthorizationProviderResponse'\n        '480':\n          description: UnauthorizedException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/UnauthorizedException'\n        '481':\n          description: InternalServerErrorException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InternalServerErrorException'\n        '482':\n          description: InvalidRequestException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InvalidRequestException'\n        '483':\n          description: ResourceNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResourceNotFoundException'\n        '484':\n          description: ResourceAlreadyExistsException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResourceAlreadyExistsException'\n        '485':\n          description: TooManyRequestsException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/TooManyRequestsException'\n      parameters: []\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              required:\n                - FleetArn\n                - AuthorizationProviderType\n              properties:\n                FleetArn:\n                  description: The ARN of the fleet.\n                  type: string\n                  minLength: 20\n                  maxLength: 2048\n                AuthorizationProviderType:\n                  description: The authorization provider type.\n                  type: string\n                  enum:\n                    - SAML\n                DomainName:\n                  description: The domain name of the authorization provider. This applies only to SAML-based authorization providers.\n                  type: string\n                  pattern: '^[a-zA-Z0-9]?((?!-)([A-Za-z0-9-]*[A-Za-z0-9])\\.)+[a-zA-Z0-9]+$'\n                  minLength: 1\n                  maxLength: 253\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n  /associateWebsiteCertificateAuthority:\n    post:\n      operationId: AssociateWebsiteCertificateAuthority\n      description: Imports the root certificate of a certificate authority (CA) used to obtain TLS certificates used by associated websites within the company network.\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AssociateWebsiteCertificateAuthorityResponse'\n        '480':\n          description: UnauthorizedException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/UnauthorizedException'\n        '481':\n          description: InternalServerErrorException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InternalServerErrorException'\n        '482':\n          description: InvalidRequestException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InvalidRequestException'\n        '483':\n          description: ResourceNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResourceNotFoundException'\n        '484':\n          description: ResourceAlreadyExistsException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResourceAlreadyExistsException'\n        '485':\n          description: TooManyRequestsException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/TooManyRequestsException'\n      parameters: []\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              required:\n                - FleetArn\n                - Certificate\n              properties:\n                FleetArn:\n                  description: The ARN of the fleet.\n                  type: string\n                  minLength: 20\n                  maxLength: 2048\n                Certificate:\n                  description: The root certificate of the CA.\n                  type: string\n                  pattern: '-{5}BEGIN CERTIFICATE-{5}\\u000D?\\u000A([A-Za-z0-9/+]{64}\\u000D?\\u000A)*[A-Za-z0-9/+]{1,64}={0,2}\\u000D?\\u000A-{5}END CERTIFICATE-{5}(\\u000D?\\u000A)?'\n                  minLength: 1\n                  maxLength: 8192\n                DisplayName:\n                  description: The certificate name to display.\n                  type: string\n                  maxLength: 100\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n  /createFleet:\n    post:\n      operationId: CreateFleet\n      description: Creates a fleet. A fleet consists of resources and the configuration that delivers associated websites to authorized users who download and set up the Amazon WorkLink app.\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CreateFleetResponse'\n        '480':\n          description: UnauthorizedException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/UnauthorizedException'\n        '481':\n          description: InternalServerErrorException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InternalServerErrorException'\n        '482':\n          description: InvalidRequestException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InvalidRequestException'\n        '483':\n          description: ResourceNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResourceNotFoundException'\n        '484':\n          description: ResourceAlreadyExistsException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResourceAlreadyExistsException'\n        '485':\n          description: TooManyRequestsException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/TooManyRequestsException'\n      parameters: []\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              required:\n                - FleetName\n              properties:\n                FleetName:\n                  description: A unique name for the fleet.\n                  type: string\n                  pattern: '^[a-z0-9](?:[a-z0-9\\-]{0,46}[a-z0-9])?$'\n                  minLength: 1\n                  maxLength: 48\n                DisplayName:\n                  description: The fleet name to display.\n                  type: string\n                  maxLength: 100\n                OptimizeForEndUserLocation:\n                  description: 'The option to optimize for better performance by routing traffic through the closest AWS Region to users, which may be outside of your home Region.'\n                  type: boolean\n                Tags:\n                  description: ' The tags to add to the resource. A tag is a key-value pair.'\n                  type: object\n                  minProperties: 1\n                  maxProperties: 50\n                  additionalProperties:\n                    $ref: '#/components/schemas/TagValue'\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n  /deleteFleet:\n    post:\n      operationId: DeleteFleet\n      description: 'Deletes a fleet. Prevents users from accessing previously associated websites. '\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DeleteFleetResponse'\n        '480':\n          description: UnauthorizedException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/UnauthorizedException'\n        '481':\n          description: InternalServerErrorException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InternalServerErrorException'\n        '482':\n          description: InvalidRequestException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InvalidRequestException'\n        '483':\n          description: ResourceNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResourceNotFoundException'\n        '484':\n          description: TooManyRequestsException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/TooManyRequestsException'\n      parameters: []\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              required:\n                - FleetArn\n              properties:\n                FleetArn:\n                  description: The ARN of the fleet.\n                  type: string\n                  minLength: 20\n                  maxLength: 2048\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n  /describeAuditStreamConfiguration:\n    post:\n      operationId: DescribeAuditStreamConfiguration\n      description: Describes the configuration for delivering audit streams to the customer account.\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DescribeAuditStreamConfigurationResponse'\n        '480':\n          description: UnauthorizedException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/UnauthorizedException'\n        '481':\n          description: InternalServerErrorException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InternalServerErrorException'\n        '482':\n          description: InvalidRequestException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InvalidRequestException'\n        '483':\n          description: ResourceNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResourceNotFoundException'\n        '484':\n          description: TooManyRequestsException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/TooManyRequestsException'\n      parameters: []\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              required:\n                - FleetArn\n              properties:\n                FleetArn:\n                  description: The ARN of the fleet.\n                  type: string\n                  minLength: 20\n                  maxLength: 2048\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n  /describeCompanyNetworkConfiguration:\n    post:\n      operationId: DescribeCompanyNetworkConfiguration\n      description: Describes the networking configuration to access the internal websites associated with the specified fleet.\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DescribeCompanyNetworkConfigurationResponse'\n        '480':\n          description: UnauthorizedException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/UnauthorizedException'\n        '481':\n          description: InternalServerErrorException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InternalServerErrorException'\n        '482':\n          description: InvalidRequestException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InvalidRequestException'\n        '483':\n          description: ResourceNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResourceNotFoundException'\n        '484':\n          description: TooManyRequestsException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/TooManyRequestsException'\n      parameters: []\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              required:\n                - FleetArn\n              properties:\n                FleetArn:\n                  description: The ARN of the fleet.\n                  type: string\n                  minLength: 20\n                  maxLength: 2048\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n  /describeDevice:\n    post:\n      operationId: DescribeDevice\n      description: Provides information about a user's device.\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DescribeDeviceResponse'\n        '480':\n          description: UnauthorizedException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/UnauthorizedException'\n        '481':\n          description: InternalServerErrorException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InternalServerErrorException'\n        '482':\n          description: InvalidRequestException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InvalidRequestException'\n        '483':\n          description: ResourceNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResourceNotFoundException'\n        '484':\n          description: TooManyRequestsException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/TooManyRequestsException'\n      parameters: []\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              required:\n                - FleetArn\n                - DeviceId\n              properties:\n                FleetArn:\n                  description: The ARN of the fleet.\n                  type: string\n                  minLength: 20\n                  maxLength: 2048\n                DeviceId:\n                  description: A unique identifier for a registered user's device.\n                  type: string\n                  minLength: 1\n                  maxLength: 256\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n  /describeDevicePolicyConfiguration:\n    post:\n      operationId: DescribeDevicePolicyConfiguration\n      description: Describes the device policy configuration for the specified fleet.\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DescribeDevicePolicyConfigurationResponse'\n        '480':\n          description: UnauthorizedException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/UnauthorizedException'\n        '481':\n          description: InternalServerErrorException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InternalServerErrorException'\n        '482':\n          description: InvalidRequestException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InvalidRequestException'\n        '483':\n          description: ResourceNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResourceNotFoundException'\n        '484':\n          description: TooManyRequestsException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/TooManyRequestsException'\n      parameters: []\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              required:\n                - FleetArn\n              properties:\n                FleetArn:\n                  description: The ARN of the fleet.\n                  type: string\n                  minLength: 20\n                  maxLength: 2048\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n  /describeDomain:\n    post:\n      operationId: DescribeDomain\n      description: Provides information about the domain.\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DescribeDomainResponse'\n        '480':\n          description: UnauthorizedException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/UnauthorizedException'\n        '481':\n          description: InternalServerErrorException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InternalServerErrorException'\n        '482':\n          description: InvalidRequestException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InvalidRequestException'\n        '483':\n          description: ResourceNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResourceNotFoundException'\n        '484':\n          description: TooManyRequestsException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/TooManyRequestsException'\n      parameters: []\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              required:\n                - FleetArn\n                - DomainName\n              properties:\n                FleetArn:\n                  description: The ARN of the fleet.\n                  type: string\n                  minLength: 20\n                  maxLength: 2048\n                DomainName:\n                  description: The name of the domain.\n                  type: string\n                  pattern: '^[a-zA-Z0-9]?((?!-)([A-Za-z0-9-]*[A-Za-z0-9])\\.)+[a-zA-Z0-9]+$'\n                  minLength: 1\n                  maxLength: 253\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n  /describeFleetMetadata:\n    post:\n      operationId: DescribeFleetMetadata\n      description: 'Provides basic information for the specified fleet, excluding identity provider, networking, and device configuration details.'\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DescribeFleetMetadataResponse'\n        '480':\n          description: UnauthorizedException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/UnauthorizedException'\n        '481':\n          description: InternalServerErrorException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InternalServerErrorException'\n        '482':\n          description: InvalidRequestException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InvalidRequestException'\n        '483':\n          description: ResourceNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResourceNotFoundException'\n        '484':\n          description: TooManyRequestsException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/TooManyRequestsException'\n      parameters: []\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              required:\n                - FleetArn\n              properties:\n                FleetArn:\n                  description: The Amazon Resource Name (ARN) of the fleet.\n                  type: string\n                  minLength: 20\n                  maxLength: 2048\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n  /describeIdentityProviderConfiguration:\n    post:\n      operationId: DescribeIdentityProviderConfiguration\n      description: Describes the identity provider configuration of the specified fleet.\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DescribeIdentityProviderConfigurationResponse'\n        '480':\n          description: UnauthorizedException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/UnauthorizedException'\n        '481':\n          description: InternalServerErrorException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InternalServerErrorException'\n        '482':\n          description: InvalidRequestException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InvalidRequestException'\n        '483':\n          description: ResourceNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResourceNotFoundException'\n        '484':\n          description: TooManyRequestsException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/TooManyRequestsException'\n      parameters: []\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              required:\n                - FleetArn\n              properties:\n                FleetArn:\n                  description: The ARN of the fleet.\n                  type: string\n                  minLength: 20\n                  maxLength: 2048\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n  /describeWebsiteCertificateAuthority:\n    post:\n      operationId: DescribeWebsiteCertificateAuthority\n      description: Provides information about the certificate authority.\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DescribeWebsiteCertificateAuthorityResponse'\n        '480':\n          description: UnauthorizedException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/UnauthorizedException'\n        '481':\n          description: InternalServerErrorException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InternalServerErrorException'\n        '482':\n          description: InvalidRequestException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InvalidRequestException'\n        '483':\n          description: ResourceNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResourceNotFoundException'\n        '484':\n          description: TooManyRequestsException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/TooManyRequestsException'\n      parameters: []\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              required:\n                - FleetArn\n                - WebsiteCaId\n              properties:\n                FleetArn:\n                  description: The ARN of the fleet.\n                  type: string\n                  minLength: 20\n                  maxLength: 2048\n                WebsiteCaId:\n                  description: A unique identifier for the certificate authority.\n                  type: string\n                  minLength: 1\n                  maxLength: 256\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n  /disassociateDomain:\n    post:\n      operationId: DisassociateDomain\n      description: 'Disassociates a domain from Amazon WorkLink. End users lose the ability to access the domain with Amazon WorkLink. '\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DisassociateDomainResponse'\n        '480':\n          description: UnauthorizedException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/UnauthorizedException'\n        '481':\n          description: InternalServerErrorException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InternalServerErrorException'\n        '482':\n          description: InvalidRequestException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InvalidRequestException'\n        '483':\n          description: ResourceNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResourceNotFoundException'\n        '484':\n          description: TooManyRequestsException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/TooManyRequestsException'\n      parameters: []\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              required:\n                - FleetArn\n                - DomainName\n              properties:\n                FleetArn:\n                  description: The ARN of the fleet.\n                  type: string\n                  minLength: 20\n                  maxLength: 2048\n                DomainName:\n                  description: The name of the domain.\n                  type: string\n                  pattern: '^[a-zA-Z0-9]?((?!-)([A-Za-z0-9-]*[A-Za-z0-9])\\.)+[a-zA-Z0-9]+$'\n                  minLength: 1\n                  maxLength: 253\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n  /disassociateWebsiteAuthorizationProvider:\n    post:\n      operationId: DisassociateWebsiteAuthorizationProvider\n      description: 'Disassociates a website authorization provider from a specified fleet. After the disassociation, users can''t load any associated websites that require this authorization provider.'\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DisassociateWebsiteAuthorizationProviderResponse'\n        '480':\n          description: UnauthorizedException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/UnauthorizedException'\n        '481':\n          description: InternalServerErrorException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InternalServerErrorException'\n        '482':\n          description: InvalidRequestException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InvalidRequestException'\n        '483':\n          description: ResourceNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResourceNotFoundException'\n        '484':\n          description: ResourceAlreadyExistsException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResourceAlreadyExistsException'\n        '485':\n          description: TooManyRequestsException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/TooManyRequestsException'\n      parameters: []\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              required:\n                - FleetArn\n                - AuthorizationProviderId\n              properties:\n                FleetArn:\n                  description: The ARN of the fleet.\n                  type: string\n                  minLength: 20\n                  maxLength: 2048\n                AuthorizationProviderId:\n                  description: A unique identifier for the authorization provider.\n                  type: string\n                  minLength: 1\n                  maxLength: 256\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n  /disassociateWebsiteCertificateAuthority:\n    post:\n      operationId: DisassociateWebsiteCertificateAuthority\n      description: Removes a certificate authority (CA).\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DisassociateWebsiteCertificateAuthorityResponse'\n        '480':\n          description: UnauthorizedException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/UnauthorizedException'\n        '481':\n          description: InternalServerErrorException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InternalServerErrorException'\n        '482':\n          description: InvalidRequestException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InvalidRequestException'\n        '483':\n          description: ResourceNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResourceNotFoundException'\n        '484':\n          description: TooManyRequestsException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/TooManyRequestsException'\n      parameters: []\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              required:\n                - FleetArn\n                - WebsiteCaId\n              properties:\n                FleetArn:\n                  description: The ARN of the fleet.\n                  type: string\n                  minLength: 20\n                  maxLength: 2048\n                WebsiteCaId:\n                  description: A unique identifier for the CA.\n                  type: string\n                  minLength: 1\n                  maxLength: 256\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n  /listDevices:\n    post:\n      operationId: ListDevices\n      description: Retrieves a list of devices registered with the specified fleet.\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ListDevicesResponse'\n        '480':\n          description: UnauthorizedException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/UnauthorizedException'\n        '481':\n          description: InternalServerErrorException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InternalServerErrorException'\n        '482':\n          description: InvalidRequestException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InvalidRequestException'\n        '483':\n          description: ResourceNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResourceNotFoundException'\n        '484':\n          description: TooManyRequestsException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/TooManyRequestsException'\n      parameters:\n        - name: MaxResults\n          in: query\n          schema:\n            type: string\n          description: Pagination limit\n          required: false\n        - name: NextToken\n          in: query\n          schema:\n            type: string\n          description: Pagination token\n          required: false\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              required:\n                - FleetArn\n              properties:\n                FleetArn:\n                  description: The ARN of the fleet.\n                  type: string\n                  minLength: 20\n                  maxLength: 2048\n                NextToken:\n                  description: 'The pagination token used to retrieve the next page of results for this operation. If this value is null, it retrieves the first page.'\n                  type: string\n                  pattern: '[\\w\\-]+'\n                  minLength: 1\n                  maxLength: 4096\n                MaxResults:\n                  description: The maximum number of results to be included in the next page.\n                  type: integer\n                  minimum: 1\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n  /listDomains:\n    post:\n      operationId: ListDomains\n      description: Retrieves a list of domains associated to a specified fleet.\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ListDomainsResponse'\n        '480':\n          description: UnauthorizedException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/UnauthorizedException'\n        '481':\n          description: InternalServerErrorException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InternalServerErrorException'\n        '482':\n          description: InvalidRequestException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InvalidRequestException'\n        '483':\n          description: ResourceNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResourceNotFoundException'\n        '484':\n          description: TooManyRequestsException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/TooManyRequestsException'\n      parameters:\n        - name: MaxResults\n          in: query\n          schema:\n            type: string\n          description: Pagination limit\n          required: false\n        - name: NextToken\n          in: query\n          schema:\n            type: string\n          description: Pagination token\n          required: false\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              required:\n                - FleetArn\n              properties:\n                FleetArn:\n                  description: The ARN of the fleet.\n                  type: string\n                  minLength: 20\n                  maxLength: 2048\n                NextToken:\n                  description: 'The pagination token used to retrieve the next page of results for this operation. If this value is null, it retrieves the first page.'\n                  type: string\n                  pattern: '[\\w\\-]+'\n                  minLength: 1\n                  maxLength: 4096\n                MaxResults:\n                  description: The maximum number of results to be included in the next page.\n                  type: integer\n                  minimum: 1\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n  /listFleets:\n    post:\n      operationId: ListFleets\n      description: Retrieves a list of fleets for the current account and Region.\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ListFleetsResponse'\n        '480':\n          description: UnauthorizedException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/UnauthorizedException'\n        '481':\n          description: InternalServerErrorException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InternalServerErrorException'\n        '482':\n          description: InvalidRequestException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InvalidRequestException'\n        '483':\n          description: TooManyRequestsException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/TooManyRequestsException'\n      parameters:\n        - name: MaxResults\n          in: query\n          schema:\n            type: string\n          description: Pagination limit\n          required: false\n        - name: NextToken\n          in: query\n          schema:\n            type: string\n          description: Pagination token\n          required: false\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                NextToken:\n                  description: 'The pagination token used to retrieve the next page of results for this operation. If this value is null, it retrieves the first page.'\n                  type: string\n                  pattern: '[\\w\\-]+'\n                  minLength: 1\n                  maxLength: 4096\n                MaxResults:\n                  description: The maximum number of results to be included in the next page.\n                  type: integer\n                  minimum: 1\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n  '/tags/{ResourceArn}':\n    get:\n      operationId: ListTagsForResource\n      description: Retrieves a list of tags for the specified resource.\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ListTagsForResourceResponse'\n        '480':\n          description: InvalidRequestException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InvalidRequestException'\n      parameters:\n        - name: ResourceArn\n          in: path\n          required: true\n          description: The Amazon Resource Name (ARN) of the fleet.\n          schema:\n            type: string\n            minLength: 20\n            maxLength: 2048\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n    post:\n      operationId: TagResource\n      description: 'Adds or overwrites one or more tags for the specified resource, such as a fleet. Each tag consists of a key and an optional value. If a resource already has a tag with the same key, this operation updates its value.'\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/TagResourceResponse'\n        '480':\n          description: InvalidRequestException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InvalidRequestException'\n      parameters:\n        - name: ResourceArn\n          in: path\n          required: true\n          description: The Amazon Resource Name (ARN) of the fleet.\n          schema:\n            type: string\n            minLength: 20\n            maxLength: 2048\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              required:\n                - Tags\n              properties:\n                Tags:\n                  description: The tags to add to the resource. A tag is a key-value pair.\n                  type: object\n                  minProperties: 1\n                  maxProperties: 50\n                  additionalProperties:\n                    $ref: '#/components/schemas/TagValue'\n  /listWebsiteAuthorizationProviders:\n    post:\n      operationId: ListWebsiteAuthorizationProviders\n      description: Retrieves a list of website authorization providers associated with a specified fleet.\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ListWebsiteAuthorizationProvidersResponse'\n        '480':\n          description: UnauthorizedException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/UnauthorizedException'\n        '481':\n          description: InternalServerErrorException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InternalServerErrorException'\n        '482':\n          description: InvalidRequestException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InvalidRequestException'\n        '483':\n          description: ResourceNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResourceNotFoundException'\n        '484':\n          description: TooManyRequestsException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/TooManyRequestsException'\n      parameters:\n        - name: MaxResults\n          in: query\n          schema:\n            type: string\n          description: Pagination limit\n          required: false\n        - name: NextToken\n          in: query\n          schema:\n            type: string\n          description: Pagination token\n          required: false\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              required:\n                - FleetArn\n              properties:\n                FleetArn:\n                  description: The ARN of the fleet.\n                  type: string\n                  minLength: 20\n                  maxLength: 2048\n                NextToken:\n                  description: 'The pagination token to use to retrieve the next page of results for this operation. If this value is null, it retrieves the first page.'\n                  type: string\n                  pattern: '[\\w\\-]+'\n                  minLength: 1\n                  maxLength: 4096\n                MaxResults:\n                  description: The maximum number of results to be included in the next page.\n                  type: integer\n                  minimum: 1\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n  /listWebsiteCertificateAuthorities:\n    post:\n      operationId: ListWebsiteCertificateAuthorities\n      description: Retrieves a list of certificate authorities added for the current account and Region.\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ListWebsiteCertificateAuthoritiesResponse'\n        '480':\n          description: UnauthorizedException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/UnauthorizedException'\n        '481':\n          description: InternalServerErrorException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InternalServerErrorException'\n        '482':\n          description: InvalidRequestException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InvalidRequestException'\n        '483':\n          description: TooManyRequestsException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/TooManyRequestsException'\n      parameters:\n        - name: MaxResults\n          in: query\n          schema:\n            type: string\n          description: Pagination limit\n          required: false\n        - name: NextToken\n          in: query\n          schema:\n            type: string\n          description: Pagination token\n          required: false\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              required:\n                - FleetArn\n              properties:\n                FleetArn:\n                  description: The ARN of the fleet.\n                  type: string\n                  minLength: 20\n                  maxLength: 2048\n                MaxResults:\n                  description: The maximum number of results to be included in the next page.\n                  type: integer\n                  minimum: 1\n                NextToken:\n                  description: 'The pagination token used to retrieve the next page of results for this operation. If this value is null, it retrieves the first page.'\n                  type: string\n                  pattern: '[\\w\\-]+'\n                  minLength: 1\n                  maxLength: 4096\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n  /restoreDomainAccess:\n    post:\n      operationId: RestoreDomainAccess\n      description: Moves a domain to ACTIVE status if it was in the INACTIVE status.\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RestoreDomainAccessResponse'\n        '480':\n          description: UnauthorizedException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/UnauthorizedException'\n        '481':\n          description: InternalServerErrorException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InternalServerErrorException'\n        '482':\n          description: InvalidRequestException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InvalidRequestException'\n        '483':\n          description: ResourceNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResourceNotFoundException'\n        '484':\n          description: TooManyRequestsException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/TooManyRequestsException'\n      parameters: []\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              required:\n                - FleetArn\n                - DomainName\n              properties:\n                FleetArn:\n                  description: The ARN of the fleet.\n                  type: string\n                  minLength: 20\n                  maxLength: 2048\n                DomainName:\n                  description: The name of the domain.\n                  type: string\n                  pattern: '^[a-zA-Z0-9]?((?!-)([A-Za-z0-9-]*[A-Za-z0-9])\\.)+[a-zA-Z0-9]+$'\n                  minLength: 1\n                  maxLength: 253\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n  /revokeDomainAccess:\n    post:\n      operationId: RevokeDomainAccess\n      description: Moves a domain to INACTIVE status if it was in the ACTIVE status.\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RevokeDomainAccessResponse'\n        '480':\n          description: UnauthorizedException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/UnauthorizedException'\n        '481':\n          description: InternalServerErrorException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InternalServerErrorException'\n        '482':\n          description: InvalidRequestException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InvalidRequestException'\n        '483':\n          description: ResourceNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResourceNotFoundException'\n        '484':\n          description: TooManyRequestsException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/TooManyRequestsException'\n      parameters: []\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              required:\n                - FleetArn\n                - DomainName\n              properties:\n                FleetArn:\n                  description: The ARN of the fleet.\n                  type: string\n                  minLength: 20\n                  maxLength: 2048\n                DomainName:\n                  description: The name of the domain.\n                  type: string\n                  pattern: '^[a-zA-Z0-9]?((?!-)([A-Za-z0-9-]*[A-Za-z0-9])\\.)+[a-zA-Z0-9]+$'\n                  minLength: 1\n                  maxLength: 253\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n  /signOutUser:\n    post:\n      operationId: SignOutUser\n      description: Signs the user out from all of their devices. The user can sign in again if they have valid credentials.\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/SignOutUserResponse'\n        '480':\n          description: UnauthorizedException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/UnauthorizedException'\n        '481':\n          description: InternalServerErrorException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InternalServerErrorException'\n        '482':\n          description: InvalidRequestException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InvalidRequestException'\n        '483':\n          description: ResourceNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResourceNotFoundException'\n        '484':\n          description: TooManyRequestsException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/TooManyRequestsException'\n      parameters: []\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              required:\n                - FleetArn\n                - Username\n              properties:\n                FleetArn:\n                  description: The ARN of the fleet.\n                  type: string\n                  minLength: 20\n                  maxLength: 2048\n                Username:\n                  description: The name of the user.\n                  type: string\n                  minLength: 1\n                  maxLength: 256\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n  '/tags/{ResourceArn}#tagKeys':\n    delete:\n      operationId: UntagResource\n      description: Removes one or more tags from the specified resource.\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/UntagResourceResponse'\n        '480':\n          description: InvalidRequestException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InvalidRequestException'\n      parameters:\n        - name: ResourceArn\n          in: path\n          required: true\n          description: The Amazon Resource Name (ARN) of the fleet.\n          schema:\n            type: string\n            minLength: 20\n            maxLength: 2048\n        - name: tagKeys\n          in: query\n          required: true\n          description: The list of tag keys to remove from the resource.\n          schema:\n            type: array\n            items:\n              $ref: '#/components/schemas/TagKey'\n            minItems: 1\n            maxItems: 50\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n  /updateAuditStreamConfiguration:\n    post:\n      operationId: UpdateAuditStreamConfiguration\n      description: Updates the audit stream configuration for the fleet.\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/UpdateAuditStreamConfigurationResponse'\n        '480':\n          description: UnauthorizedException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/UnauthorizedException'\n        '481':\n          description: InternalServerErrorException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InternalServerErrorException'\n        '482':\n          description: InvalidRequestException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InvalidRequestException'\n        '483':\n          description: ResourceNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResourceNotFoundException'\n        '484':\n          description: TooManyRequestsException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/TooManyRequestsException'\n      parameters: []\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              required:\n                - FleetArn\n              properties:\n                FleetArn:\n                  description: The ARN of the fleet.\n                  type: string\n                  minLength: 20\n                  maxLength: 2048\n                AuditStreamArn:\n                  description: The ARN of the Amazon Kinesis data stream that receives the audit events.\n                  type: string\n                  pattern: '^arn:aws:kinesis:.+:[0-9]{12}:stream/AmazonWorkLink-.*$'\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n  /updateCompanyNetworkConfiguration:\n    post:\n      operationId: UpdateCompanyNetworkConfiguration\n      description: Updates the company network configuration for the fleet.\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/UpdateCompanyNetworkConfigurationResponse'\n        '480':\n          description: UnauthorizedException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/UnauthorizedException'\n        '481':\n          description: InternalServerErrorException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InternalServerErrorException'\n        '482':\n          description: InvalidRequestException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InvalidRequestException'\n        '483':\n          description: ResourceNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResourceNotFoundException'\n        '484':\n          description: TooManyRequestsException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/TooManyRequestsException'\n      parameters: []\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              required:\n                - FleetArn\n                - VpcId\n                - SubnetIds\n                - SecurityGroupIds\n              properties:\n                FleetArn:\n                  description: The ARN of the fleet.\n                  type: string\n                  minLength: 20\n                  maxLength: 2048\n                VpcId:\n                  description: The VPC with connectivity to associated websites.\n                  type: string\n                  pattern: '^vpc-([0-9a-f]{8}|[0-9a-f]{17})$'\n                SubnetIds:\n                  description: The subnets used for X-ENI connections from Amazon WorkLink rendering containers.\n                  type: array\n                  items:\n                    $ref: '#/components/schemas/SubnetId'\n                SecurityGroupIds:\n                  description: The security groups associated with access to the provided subnets.\n                  type: array\n                  items:\n                    $ref: '#/components/schemas/SecurityGroupId'\n                  maxItems: 5\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n  /updateDevicePolicyConfiguration:\n    post:\n      operationId: UpdateDevicePolicyConfiguration\n      description: Updates the device policy configuration for the fleet.\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/UpdateDevicePolicyConfigurationResponse'\n        '480':\n          description: UnauthorizedException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/UnauthorizedException'\n        '481':\n          description: InternalServerErrorException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InternalServerErrorException'\n        '482':\n          description: InvalidRequestException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InvalidRequestException'\n        '483':\n          description: ResourceNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResourceNotFoundException'\n        '484':\n          description: TooManyRequestsException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/TooManyRequestsException'\n      parameters: []\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              required:\n                - FleetArn\n              properties:\n                FleetArn:\n                  description: The ARN of the fleet.\n                  type: string\n                  minLength: 20\n                  maxLength: 2048\n                DeviceCaCertificate:\n                  description: 'The certificate chain, including intermediate certificates and the root certificate authority certificate used to issue device certificates.'\n                  type: string\n                  pattern: '(-{5}BEGIN CERTIFICATE-{5}\\u000D?\\u000A([A-Za-z0-9/+]{64}\\u000D?\\u000A)*[A-Za-z0-9/+]{1,64}={0,2}\\u000D?\\u000A-{5}END CERTIFICATE-{5}\\u000D?\\u000A)*-{5}BEGIN CERTIFICATE-{5}\\u000D?\\u000A([A-Za-z0-9/+]{64}\\u000D?\\u000A)*[A-Za-z0-9/+]{1,64}={0,2}\\u000D?\\u000A-{5}END CERTIFICATE-{5}(\\u000D?\\u000A)?'\n                  minLength: 1\n                  maxLength: 32768\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n  /updateDomainMetadata:\n    post:\n      operationId: UpdateDomainMetadata\n      description: 'Updates domain metadata, such as DisplayName.'\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/UpdateDomainMetadataResponse'\n        '480':\n          description: UnauthorizedException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/UnauthorizedException'\n        '481':\n          description: InternalServerErrorException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InternalServerErrorException'\n        '482':\n          description: InvalidRequestException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InvalidRequestException'\n        '483':\n          description: ResourceNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResourceNotFoundException'\n        '484':\n          description: TooManyRequestsException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/TooManyRequestsException'\n      parameters: []\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              required:\n                - FleetArn\n                - DomainName\n              properties:\n                FleetArn:\n                  description: The ARN of the fleet.\n                  type: string\n                  minLength: 20\n                  maxLength: 2048\n                DomainName:\n                  description: The name of the domain.\n                  type: string\n                  pattern: '^[a-zA-Z0-9]?((?!-)([A-Za-z0-9-]*[A-Za-z0-9])\\.)+[a-zA-Z0-9]+$'\n                  minLength: 1\n                  maxLength: 253\n                DisplayName:\n                  description: The name to display.\n                  type: string\n                  maxLength: 100\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n  /UpdateFleetMetadata:\n    post:\n      operationId: UpdateFleetMetadata\n      description: 'Updates fleet metadata, such as DisplayName.'\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/UpdateFleetMetadataResponse'\n        '480':\n          description: UnauthorizedException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/UnauthorizedException'\n        '481':\n          description: InternalServerErrorException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InternalServerErrorException'\n        '482':\n          description: InvalidRequestException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InvalidRequestException'\n        '483':\n          description: ResourceNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResourceNotFoundException'\n        '484':\n          description: TooManyRequestsException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/TooManyRequestsException'\n      parameters: []\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              required:\n                - FleetArn\n              properties:\n                FleetArn:\n                  description: The ARN of the fleet.\n                  type: string\n                  minLength: 20\n                  maxLength: 2048\n                DisplayName:\n                  description: The fleet name to display. The existing DisplayName is unset if null is passed.\n                  type: string\n                  maxLength: 100\n                OptimizeForEndUserLocation:\n                  description: 'The option to optimize for better performance by routing traffic through the closest AWS Region to users, which may be outside of your home Region.'\n                  type: boolean\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n  /updateIdentityProviderConfiguration:\n    post:\n      operationId: UpdateIdentityProviderConfiguration\n      description: Updates the identity provider configuration for the fleet.\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/UpdateIdentityProviderConfigurationResponse'\n        '480':\n          description: UnauthorizedException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/UnauthorizedException'\n        '481':\n          description: InternalServerErrorException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InternalServerErrorException'\n        '482':\n          description: InvalidRequestException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InvalidRequestException'\n        '483':\n          description: ResourceNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResourceNotFoundException'\n        '484':\n          description: TooManyRequestsException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/TooManyRequestsException'\n      parameters: []\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              required:\n                - FleetArn\n                - IdentityProviderType\n              properties:\n                FleetArn:\n                  description: The ARN of the fleet.\n                  type: string\n                  minLength: 20\n                  maxLength: 2048\n                IdentityProviderType:\n                  description: The type of identity provider.\n                  type: string\n                  enum:\n                    - SAML\n                IdentityProviderSamlMetadata:\n                  description: The SAML metadata document provided by the customer’s identity provider. The existing IdentityProviderSamlMetadata is unset if null is passed.\n                  type: string\n                  minLength: 1\n                  maxLength: 204800\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\ncomponents:\n  parameters:\n    X-Amz-Content-Sha256:\n      name: X-Amz-Content-Sha256\n      in: header\n      schema:\n        type: string\n      required: false\n    X-Amz-Date:\n      name: X-Amz-Date\n      in: header\n      schema:\n        type: string\n      required: false\n    X-Amz-Algorithm:\n      name: X-Amz-Algorithm\n      in: header\n      schema:\n        type: string\n      required: false\n    X-Amz-Credential:\n      name: X-Amz-Credential\n      in: header\n      schema:\n        type: string\n      required: false\n    X-Amz-Security-Token:\n      name: X-Amz-Security-Token\n      in: header\n      schema:\n        type: string\n      required: false\n    X-Amz-Signature:\n      name: X-Amz-Signature\n      in: header\n      schema:\n        type: string\n      required: false\n    X-Amz-SignedHeaders:\n      name: X-Amz-SignedHeaders\n      in: header\n      schema:\n        type: string\n      required: false\n  securitySchemes:\n    hmac:\n      type: apiKey\n      name: Authorization\n      in: header\n      description: Amazon Signature authorization v4\n      x-amazon-apigateway-authtype: awsSigv4\n  schemas:\n    AssociateDomainResponse:\n      type: object\n      properties: {}\n    UnauthorizedException: {}\n    InternalServerErrorException: {}\n    InvalidRequestException: {}\n    ResourceNotFoundException: {}\n    ResourceAlreadyExistsException: {}\n    TooManyRequestsException: {}\n    AssociateWebsiteAuthorizationProviderResponse:\n      type: object\n      properties:\n        AuthorizationProviderId:\n          allOf:\n            - $ref: '#/components/schemas/Id'\n            - description: A unique identifier for the authorization provider.\n    AssociateWebsiteCertificateAuthorityResponse:\n      type: object\n      properties:\n        WebsiteCaId:\n          allOf:\n            - $ref: '#/components/schemas/Id'\n            - description: A unique identifier for the CA.\n    CreateFleetResponse:\n      type: object\n      properties:\n        FleetArn:\n          allOf:\n            - $ref: '#/components/schemas/FleetArn'\n            - description: The Amazon Resource Name (ARN) of the fleet.\n    TagValue:\n      type: string\n      maxLength: 256\n    DeleteFleetResponse:\n      type: object\n      properties: {}\n    DescribeAuditStreamConfigurationResponse:\n      type: object\n      properties:\n        AuditStreamArn:\n          allOf:\n            - $ref: '#/components/schemas/AuditStreamArn'\n            - description: The ARN of the Amazon Kinesis data stream that will receive the audit events.\n    DescribeCompanyNetworkConfigurationResponse:\n      type: object\n      properties:\n        VpcId:\n          allOf:\n            - $ref: '#/components/schemas/VpcId'\n            - description: The VPC with connectivity to associated websites.\n        SubnetIds:\n          allOf:\n            - $ref: '#/components/schemas/SubnetIds'\n            - description: The subnets used for X-ENI connections from Amazon WorkLink rendering containers.\n        SecurityGroupIds:\n          allOf:\n            - $ref: '#/components/schemas/SecurityGroupIds'\n            - description: The security groups associated with access to the provided subnets.\n    DescribeDeviceResponse:\n      type: object\n      properties:\n        Status:\n          allOf:\n            - $ref: '#/components/schemas/DeviceStatus'\n            - description: The current state of the device.\n        Model:\n          allOf:\n            - $ref: '#/components/schemas/DeviceModel'\n            - description: The model of the device.\n        Manufacturer:\n          allOf:\n            - $ref: '#/components/schemas/DeviceManufacturer'\n            - description: The manufacturer of the device.\n        OperatingSystem:\n          allOf:\n            - $ref: '#/components/schemas/DeviceOperatingSystemName'\n            - description: The operating system of the device.\n        OperatingSystemVersion:\n          allOf:\n            - $ref: '#/components/schemas/DeviceOperatingSystemVersion'\n            - description: The operating system version of the device.\n        PatchLevel:\n          allOf:\n            - $ref: '#/components/schemas/DevicePatchLevel'\n            - description: The operating system patch level of the device.\n        FirstAccessedTime:\n          allOf:\n            - $ref: '#/components/schemas/DateTime'\n            - description: The date that the device first signed in to Amazon WorkLink.\n        LastAccessedTime:\n          allOf:\n            - $ref: '#/components/schemas/DateTime'\n            - description: The date that the device last accessed Amazon WorkLink.\n        Username:\n          allOf:\n            - $ref: '#/components/schemas/Username'\n            - description: The user name associated with the device.\n    DescribeDevicePolicyConfigurationResponse:\n      type: object\n      properties:\n        DeviceCaCertificate:\n          allOf:\n            - $ref: '#/components/schemas/Certificate'\n            - description: 'The certificate chain, including intermediate certificates and the root certificate authority certificate used to issue device certificates.'\n    DescribeDomainResponse:\n      type: object\n      properties:\n        DomainName:\n          allOf:\n            - $ref: '#/components/schemas/DomainName'\n            - description: The name of the domain.\n        DisplayName:\n          allOf:\n            - $ref: '#/components/schemas/DisplayName'\n            - description: The name to display.\n        CreatedTime:\n          allOf:\n            - $ref: '#/components/schemas/DateTime'\n            - description: The time that the domain was added.\n        DomainStatus:\n          allOf:\n            - $ref: '#/components/schemas/DomainStatus'\n            - description: The current state for the domain.\n        AcmCertificateArn:\n          allOf:\n            - $ref: '#/components/schemas/AcmCertificateArn'\n            - description: The ARN of an issued ACM certificate that is valid for the domain being associated.\n    DescribeFleetMetadataResponse:\n      type: object\n      properties:\n        CreatedTime:\n          allOf:\n            - $ref: '#/components/schemas/DateTime'\n            - description: The time that the fleet was created.\n        LastUpdatedTime:\n          allOf:\n            - $ref: '#/components/schemas/DateTime'\n            - description: The time that the fleet was last updated.\n        FleetName:\n          allOf:\n            - $ref: '#/components/schemas/FleetName'\n            - description: The name of the fleet.\n        DisplayName:\n          allOf:\n            - $ref: '#/components/schemas/DisplayName'\n            - description: The name to display.\n        OptimizeForEndUserLocation:\n          allOf:\n            - $ref: '#/components/schemas/Boolean'\n            - description: 'The option to optimize for better performance by routing traffic through the closest AWS Region to users, which may be outside of your home Region.'\n        CompanyCode:\n          allOf:\n            - $ref: '#/components/schemas/CompanyCode'\n            - description: The identifier used by users to sign in to the Amazon WorkLink app.\n        FleetStatus:\n          allOf:\n            - $ref: '#/components/schemas/FleetStatus'\n            - description: The current state of the fleet.\n        Tags:\n          allOf:\n            - $ref: '#/components/schemas/TagMap'\n            - description: The tags attached to the resource. A tag is a key-value pair.\n    DescribeIdentityProviderConfigurationResponse:\n      type: object\n      properties:\n        IdentityProviderType:\n          allOf:\n            - $ref: '#/components/schemas/IdentityProviderType'\n            - description: The type of identity provider.\n        ServiceProviderSamlMetadata:\n          allOf:\n            - $ref: '#/components/schemas/SamlMetadata'\n            - description: The SAML metadata document uploaded to the user’s identity provider.\n        IdentityProviderSamlMetadata:\n          allOf:\n            - $ref: '#/components/schemas/SamlMetadata'\n            - description: The SAML metadata document provided by the user’s identity provider.\n    DescribeWebsiteCertificateAuthorityResponse:\n      type: object\n      properties:\n        Certificate:\n          allOf:\n            - $ref: '#/components/schemas/Certificate'\n            - description: The root certificate of the certificate authority.\n        CreatedTime:\n          allOf:\n            - $ref: '#/components/schemas/DateTime'\n            - description: The time that the certificate authority was added.\n        DisplayName:\n          allOf:\n            - $ref: '#/components/schemas/DisplayName'\n            - description: The certificate name to display.\n    DisassociateDomainResponse:\n      type: object\n      properties: {}\n    DisassociateWebsiteAuthorizationProviderResponse:\n      type: object\n      properties: {}\n    DisassociateWebsiteCertificateAuthorityResponse:\n      type: object\n      properties: {}\n    ListDevicesResponse:\n      type: object\n      properties:\n        Devices:\n          allOf:\n            - $ref: '#/components/schemas/DeviceSummaryList'\n            - description: Information about the devices.\n        NextToken:\n          allOf:\n            - $ref: '#/components/schemas/NextToken'\n            - description: 'The pagination token used to retrieve the next page of results for this operation. If there are no more pages, this value is null.'\n    ListDomainsResponse:\n      type: object\n      properties:\n        Domains:\n          allOf:\n            - $ref: '#/components/schemas/DomainSummaryList'\n            - description: Information about the domains.\n        NextToken:\n          allOf:\n            - $ref: '#/components/schemas/NextToken'\n            - description: 'The pagination token used to retrieve the next page of results for this operation. If there are no more pages, this value is null.'\n    ListFleetsResponse:\n      type: object\n      properties:\n        FleetSummaryList:\n          allOf:\n            - $ref: '#/components/schemas/FleetSummaryList'\n            - description: The summary list of the fleets.\n        NextToken:\n          allOf:\n            - $ref: '#/components/schemas/NextToken'\n            - description: 'The pagination token used to retrieve the next page of results for this operation. If there are no more pages, this value is null.'\n    ListTagsForResourceResponse:\n      type: object\n      properties:\n        Tags:\n          allOf:\n            - $ref: '#/components/schemas/TagMap'\n            - description: The tags attached to the resource. A tag is a key-value pair.\n    ListWebsiteAuthorizationProvidersResponse:\n      type: object\n      properties:\n        WebsiteAuthorizationProviders:\n          allOf:\n            - $ref: '#/components/schemas/WebsiteAuthorizationProvidersSummaryList'\n            - description: The website authorization providers.\n        NextToken:\n          allOf:\n            - $ref: '#/components/schemas/NextToken'\n            - description: 'The pagination token to use to retrieve the next page of results for this operation. If this value is null, it retrieves the first page.'\n    ListWebsiteCertificateAuthoritiesResponse:\n      type: object\n      properties:\n        WebsiteCertificateAuthorities:\n          allOf:\n            - $ref: '#/components/schemas/WebsiteCaSummaryList'\n            - description: Information about the certificates.\n        NextToken:\n          allOf:\n            - $ref: '#/components/schemas/NextToken'\n            - description: 'The pagination token used to retrieve the next page of results for this operation. If there are no more pages, this value is null.'\n    RestoreDomainAccessResponse:\n      type: object\n      properties: {}\n    RevokeDomainAccessResponse:\n      type: object\n      properties: {}\n    SignOutUserResponse:\n      type: object\n      properties: {}\n    TagResourceResponse:\n      type: object\n      properties: {}\n    UntagResourceResponse:\n      type: object\n      properties: {}\n    TagKey:\n      type: string\n      pattern: '^(?!aws:)[a-zA-Z+-=._:/]+$'\n      minLength: 1\n      maxLength: 128\n    UpdateAuditStreamConfigurationResponse:\n      type: object\n      properties: {}\n    UpdateCompanyNetworkConfigurationResponse:\n      type: object\n      properties: {}\n    SubnetId:\n      type: string\n      pattern: '^subnet-([0-9a-f]{8}|[0-9a-f]{17})$'\n    SecurityGroupId:\n      type: string\n      pattern: '^sg-([0-9a-f]{8}|[0-9a-f]{17})$'\n    UpdateDevicePolicyConfigurationResponse:\n      type: object\n      properties: {}\n    UpdateDomainMetadataResponse:\n      type: object\n      properties: {}\n    UpdateFleetMetadataResponse:\n      type: object\n      properties: {}\n    UpdateIdentityProviderConfigurationResponse:\n      type: object\n      properties: {}\n    AcmCertificateArn:\n      type: string\n      pattern: 'arn:[\\w+=/,.@-]+:[\\w+=/,.@-]+:[\\w+=/,.@-]*:[0-9]+:[\\w+=,.@-]+(/[\\w+=/,.@-]+)*'\n    FleetArn:\n      type: string\n      minLength: 20\n      maxLength: 2048\n    DomainName:\n      type: string\n      pattern: '^[a-zA-Z0-9]?((?!-)([A-Za-z0-9-]*[A-Za-z0-9])\\.)+[a-zA-Z0-9]+$'\n      minLength: 1\n      maxLength: 253\n    DisplayName:\n      type: string\n      maxLength: 100\n    AssociateDomainRequest:\n      type: object\n      required:\n        - FleetArn\n        - DomainName\n        - AcmCertificateArn\n      title: AssociateDomainRequest\n      properties:\n        FleetArn:\n          allOf:\n            - $ref: '#/components/schemas/FleetArn'\n            - description: The Amazon Resource Name (ARN) of the fleet.\n        DomainName:\n          allOf:\n            - $ref: '#/components/schemas/DomainName'\n            - description: The fully qualified domain name (FQDN).\n        DisplayName:\n          allOf:\n            - $ref: '#/components/schemas/DisplayName'\n            - description: The name to display.\n        AcmCertificateArn:\n          allOf:\n            - $ref: '#/components/schemas/AcmCertificateArn'\n            - description: The ARN of an issued ACM certificate that is valid for the domain being associated.\n    AuthorizationProviderType:\n      type: string\n      enum:\n        - SAML\n    AssociateWebsiteAuthorizationProviderRequest:\n      type: object\n      required:\n        - FleetArn\n        - AuthorizationProviderType\n      title: AssociateWebsiteAuthorizationProviderRequest\n      properties:\n        FleetArn:\n          allOf:\n            - $ref: '#/components/schemas/FleetArn'\n            - description: The ARN of the fleet.\n        AuthorizationProviderType:\n          allOf:\n            - $ref: '#/components/schemas/AuthorizationProviderType'\n            - description: The authorization provider type.\n        DomainName:\n          allOf:\n            - $ref: '#/components/schemas/DomainName'\n            - description: The domain name of the authorization provider. This applies only to SAML-based authorization providers.\n    Id:\n      type: string\n      minLength: 1\n      maxLength: 256\n    Certificate:\n      type: string\n      pattern: '-{5}BEGIN CERTIFICATE-{5}\\u000D?\\u000A([A-Za-z0-9/+]{64}\\u000D?\\u000A)*[A-Za-z0-9/+]{1,64}={0,2}\\u000D?\\u000A-{5}END CERTIFICATE-{5}(\\u000D?\\u000A)?'\n      minLength: 1\n      maxLength: 8192\n    AssociateWebsiteCertificateAuthorityRequest:\n      type: object\n      required:\n        - FleetArn\n        - Certificate\n      title: AssociateWebsiteCertificateAuthorityRequest\n      properties:\n        FleetArn:\n          allOf:\n            - $ref: '#/components/schemas/FleetArn'\n            - description: The ARN of the fleet.\n        Certificate:\n          allOf:\n            - $ref: '#/components/schemas/Certificate'\n            - description: The root certificate of the CA.\n        DisplayName:\n          allOf:\n            - $ref: '#/components/schemas/DisplayName'\n            - description: The certificate name to display.\n    AuditStreamArn:\n      type: string\n      pattern: '^arn:aws:kinesis:.+:[0-9]{12}:stream/AmazonWorkLink-.*$'\n    Boolean:\n      type: boolean\n    CertificateChain:\n      type: string\n      pattern: '(-{5}BEGIN CERTIFICATE-{5}\\u000D?\\u000A([A-Za-z0-9/+]{64}\\u000D?\\u000A)*[A-Za-z0-9/+]{1,64}={0,2}\\u000D?\\u000A-{5}END CERTIFICATE-{5}\\u000D?\\u000A)*-{5}BEGIN CERTIFICATE-{5}\\u000D?\\u000A([A-Za-z0-9/+]{64}\\u000D?\\u000A)*[A-Za-z0-9/+]{1,64}={0,2}\\u000D?\\u000A-{5}END CERTIFICATE-{5}(\\u000D?\\u000A)?'\n      minLength: 1\n      maxLength: 32768\n    CompanyCode:\n      type: string\n      minLength: 1\n      maxLength: 32\n    FleetName:\n      type: string\n      pattern: '^[a-z0-9](?:[a-z0-9\\-]{0,46}[a-z0-9])?$'\n      minLength: 1\n      maxLength: 48\n    TagMap:\n      type: object\n      minProperties: 1\n      maxProperties: 50\n      additionalProperties:\n        $ref: '#/components/schemas/TagValue'\n    CreateFleetRequest:\n      type: object\n      required:\n        - FleetName\n      title: CreateFleetRequest\n      properties:\n        FleetName:\n          allOf:\n            - $ref: '#/components/schemas/FleetName'\n            - description: A unique name for the fleet.\n        DisplayName:\n          allOf:\n            - $ref: '#/components/schemas/DisplayName'\n            - description: The fleet name to display.\n        OptimizeForEndUserLocation:\n          allOf:\n            - $ref: '#/components/schemas/Boolean'\n            - description: 'The option to optimize for better performance by routing traffic through the closest AWS Region to users, which may be outside of your home Region.'\n        Tags:\n          allOf:\n            - $ref: '#/components/schemas/TagMap'\n            - description: ' The tags to add to the resource. A tag is a key-value pair.'\n    DateTime:\n      type: string\n      format: date-time\n    DeleteFleetRequest:\n      type: object\n      required:\n        - FleetArn\n      title: DeleteFleetRequest\n      properties:\n        FleetArn:\n          allOf:\n            - $ref: '#/components/schemas/FleetArn'\n            - description: The ARN of the fleet.\n    DescribeAuditStreamConfigurationRequest:\n      type: object\n      required:\n        - FleetArn\n      title: DescribeAuditStreamConfigurationRequest\n      properties:\n        FleetArn:\n          allOf:\n            - $ref: '#/components/schemas/FleetArn'\n            - description: The ARN of the fleet.\n    DescribeCompanyNetworkConfigurationRequest:\n      type: object\n      required:\n        - FleetArn\n      title: DescribeCompanyNetworkConfigurationRequest\n      properties:\n        FleetArn:\n          allOf:\n            - $ref: '#/components/schemas/FleetArn'\n            - description: The ARN of the fleet.\n    VpcId:\n      type: string\n      pattern: '^vpc-([0-9a-f]{8}|[0-9a-f]{17})$'\n    SubnetIds:\n      type: array\n      items:\n        $ref: '#/components/schemas/SubnetId'\n    SecurityGroupIds:\n      type: array\n      items:\n        $ref: '#/components/schemas/SecurityGroupId'\n      maxItems: 5\n    DescribeDevicePolicyConfigurationRequest:\n      type: object\n      required:\n        - FleetArn\n      title: DescribeDevicePolicyConfigurationRequest\n      properties:\n        FleetArn:\n          allOf:\n            - $ref: '#/components/schemas/FleetArn'\n            - description: The ARN of the fleet.\n    DescribeDeviceRequest:\n      type: object\n      required:\n        - FleetArn\n        - DeviceId\n      title: DescribeDeviceRequest\n      properties:\n        FleetArn:\n          allOf:\n            - $ref: '#/components/schemas/FleetArn'\n            - description: The ARN of the fleet.\n        DeviceId:\n          allOf:\n            - $ref: '#/components/schemas/Id'\n            - description: A unique identifier for a registered user's device.\n    DeviceStatus:\n      type: string\n      enum:\n        - ACTIVE\n        - SIGNED_OUT\n    DeviceModel:\n      type: string\n      minLength: 1\n      maxLength: 256\n    DeviceManufacturer:\n      type: string\n      minLength: 1\n      maxLength: 256\n    DeviceOperatingSystemName:\n      type: string\n      minLength: 1\n      maxLength: 256\n    DeviceOperatingSystemVersion:\n      type: string\n      minLength: 1\n      maxLength: 256\n    DevicePatchLevel:\n      type: string\n      minLength: 1\n      maxLength: 256\n    Username:\n      type: string\n      minLength: 1\n      maxLength: 256\n    DescribeDomainRequest:\n      type: object\n      required:\n        - FleetArn\n        - DomainName\n      title: DescribeDomainRequest\n      properties:\n        FleetArn:\n          allOf:\n            - $ref: '#/components/schemas/FleetArn'\n            - description: The ARN of the fleet.\n        DomainName:\n          allOf:\n            - $ref: '#/components/schemas/DomainName'\n            - description: The name of the domain.\n    DomainStatus:\n      type: string\n      enum:\n        - PENDING_VALIDATION\n        - ASSOCIATING\n        - ACTIVE\n        - INACTIVE\n        - DISASSOCIATING\n        - DISASSOCIATED\n        - FAILED_TO_ASSOCIATE\n        - FAILED_TO_DISASSOCIATE\n    DescribeFleetMetadataRequest:\n      type: object\n      required:\n        - FleetArn\n      title: DescribeFleetMetadataRequest\n      properties:\n        FleetArn:\n          allOf:\n            - $ref: '#/components/schemas/FleetArn'\n            - description: The Amazon Resource Name (ARN) of the fleet.\n    FleetStatus:\n      type: string\n      enum:\n        - CREATING\n        - ACTIVE\n        - DELETING\n        - DELETED\n        - FAILED_TO_CREATE\n        - FAILED_TO_DELETE\n    DescribeIdentityProviderConfigurationRequest:\n      type: object\n      required:\n        - FleetArn\n      title: DescribeIdentityProviderConfigurationRequest\n      properties:\n        FleetArn:\n          allOf:\n            - $ref: '#/components/schemas/FleetArn'\n            - description: The ARN of the fleet.\n    IdentityProviderType:\n      type: string\n      enum:\n        - SAML\n    SamlMetadata:\n      type: string\n      minLength: 1\n      maxLength: 204800\n    DescribeWebsiteCertificateAuthorityRequest:\n      type: object\n      required:\n        - FleetArn\n        - WebsiteCaId\n      title: DescribeWebsiteCertificateAuthorityRequest\n      properties:\n        FleetArn:\n          allOf:\n            - $ref: '#/components/schemas/FleetArn'\n            - description: The ARN of the fleet.\n        WebsiteCaId:\n          allOf:\n            - $ref: '#/components/schemas/Id'\n            - description: A unique identifier for the certificate authority.\n    DeviceSummary:\n      type: object\n      properties:\n        DeviceId:\n          allOf:\n            - $ref: '#/components/schemas/Id'\n            - description: The ID of the device.\n        DeviceStatus:\n          allOf:\n            - $ref: '#/components/schemas/DeviceStatus'\n            - description: The status of the device.\n      description: The summary of devices.\n    DeviceSummaryList:\n      type: array\n      items:\n        $ref: '#/components/schemas/DeviceSummary'\n    DisassociateDomainRequest:\n      type: object\n      required:\n        - FleetArn\n        - DomainName\n      title: DisassociateDomainRequest\n      properties:\n        FleetArn:\n          allOf:\n            - $ref: '#/components/schemas/FleetArn'\n            - description: The ARN of the fleet.\n        DomainName:\n          allOf:\n            - $ref: '#/components/schemas/DomainName'\n            - description: The name of the domain.\n    DisassociateWebsiteAuthorizationProviderRequest:\n      type: object\n      required:\n        - FleetArn\n        - AuthorizationProviderId\n      title: DisassociateWebsiteAuthorizationProviderRequest\n      properties:\n        FleetArn:\n          allOf:\n            - $ref: '#/components/schemas/FleetArn'\n            - description: The ARN of the fleet.\n        AuthorizationProviderId:\n          allOf:\n            - $ref: '#/components/schemas/Id'\n            - description: A unique identifier for the authorization provider.\n    DisassociateWebsiteCertificateAuthorityRequest:\n      type: object\n      required:\n        - FleetArn\n        - WebsiteCaId\n      title: DisassociateWebsiteCertificateAuthorityRequest\n      properties:\n        FleetArn:\n          allOf:\n            - $ref: '#/components/schemas/FleetArn'\n            - description: The ARN of the fleet.\n        WebsiteCaId:\n          allOf:\n            - $ref: '#/components/schemas/Id'\n            - description: A unique identifier for the CA.\n    DomainSummary:\n      type: object\n      required:\n        - DomainName\n        - CreatedTime\n        - DomainStatus\n      properties:\n        DomainName:\n          allOf:\n            - $ref: '#/components/schemas/DomainName'\n            - description: The name of the domain.\n        DisplayName:\n          allOf:\n            - $ref: '#/components/schemas/DisplayName'\n            - description: The name to display.\n        CreatedTime:\n          allOf:\n            - $ref: '#/components/schemas/DateTime'\n            - description: The time that the domain was created.\n        DomainStatus:\n          allOf:\n            - $ref: '#/components/schemas/DomainStatus'\n            - description: The status of the domain.\n      description: The summary of the domain.\n    DomainSummaryList:\n      type: array\n      items:\n        $ref: '#/components/schemas/DomainSummary'\n    FleetSummary:\n      type: object\n      properties:\n        FleetArn:\n          allOf:\n            - $ref: '#/components/schemas/FleetArn'\n            - description: The Amazon Resource Name (ARN) of the fleet.\n        CreatedTime:\n          allOf:\n            - $ref: '#/components/schemas/DateTime'\n            - description: The time when the fleet was created.\n        LastUpdatedTime:\n          allOf:\n            - $ref: '#/components/schemas/DateTime'\n            - description: The time when the fleet was last updated.\n        FleetName:\n          allOf:\n            - $ref: '#/components/schemas/FleetName'\n            - description: The name of the fleet.\n        DisplayName:\n          allOf:\n            - $ref: '#/components/schemas/DisplayName'\n            - description: The name of the fleet to display.\n        CompanyCode:\n          allOf:\n            - $ref: '#/components/schemas/CompanyCode'\n            - description: The identifier used by users to sign into the Amazon WorkLink app.\n        FleetStatus:\n          allOf:\n            - $ref: '#/components/schemas/FleetStatus'\n            - description: The status of the fleet.\n        Tags:\n          allOf:\n            - $ref: '#/components/schemas/TagMap'\n            - description: The tags attached to the resource. A tag is a key-value pair.\n      description: The summary of the fleet.\n    FleetSummaryList:\n      type: array\n      items:\n        $ref: '#/components/schemas/FleetSummary'\n    NextToken:\n      type: string\n      pattern: '[\\w\\-]+'\n      minLength: 1\n      maxLength: 4096\n    MaxResults:\n      type: integer\n      minimum: 1\n    ListDevicesRequest:\n      type: object\n      required:\n        - FleetArn\n      title: ListDevicesRequest\n      properties:\n        FleetArn:\n          allOf:\n            - $ref: '#/components/schemas/FleetArn'\n            - description: The ARN of the fleet.\n        NextToken:\n          allOf:\n            - $ref: '#/components/schemas/NextToken'\n            - description: 'The pagination token used to retrieve the next page of results for this operation. If this value is null, it retrieves the first page.'\n        MaxResults:\n          allOf:\n            - $ref: '#/components/schemas/MaxResults'\n            - description: The maximum number of results to be included in the next page.\n    ListDomainsRequest:\n      type: object\n      required:\n        - FleetArn\n      title: ListDomainsRequest\n      properties:\n        FleetArn:\n          allOf:\n            - $ref: '#/components/schemas/FleetArn'\n            - description: The ARN of the fleet.\n        NextToken:\n          allOf:\n            - $ref: '#/components/schemas/NextToken'\n            - description: 'The pagination token used to retrieve the next page of results for this operation. If this value is null, it retrieves the first page.'\n        MaxResults:\n          allOf:\n            - $ref: '#/components/schemas/MaxResults'\n            - description: The maximum number of results to be included in the next page.\n    ListFleetsRequest:\n      type: object\n      title: ListFleetsRequest\n      properties:\n        NextToken:\n          allOf:\n            - $ref: '#/components/schemas/NextToken'\n            - description: 'The pagination token used to retrieve the next page of results for this operation. If this value is null, it retrieves the first page.'\n        MaxResults:\n          allOf:\n            - $ref: '#/components/schemas/MaxResults'\n            - description: The maximum number of results to be included in the next page.\n    ListTagsForResourceRequest:\n      type: object\n      title: ListTagsForResourceRequest\n      properties: {}\n    ListWebsiteAuthorizationProvidersRequest:\n      type: object\n      required:\n        - FleetArn\n      title: ListWebsiteAuthorizationProvidersRequest\n      properties:\n        FleetArn:\n          allOf:\n            - $ref: '#/components/schemas/FleetArn'\n            - description: The ARN of the fleet.\n        NextToken:\n          allOf:\n            - $ref: '#/components/schemas/NextToken'\n            - description: 'The pagination token to use to retrieve the next page of results for this operation. If this value is null, it retrieves the first page.'\n        MaxResults:\n          allOf:\n            - $ref: '#/components/schemas/MaxResults'\n            - description: The maximum number of results to be included in the next page.\n    WebsiteAuthorizationProvidersSummaryList:\n      type: array\n      items:\n        $ref: '#/components/schemas/WebsiteAuthorizationProviderSummary'\n    ListWebsiteCertificateAuthoritiesRequest:\n      type: object\n      required:\n        - FleetArn\n      title: ListWebsiteCertificateAuthoritiesRequest\n      properties:\n        FleetArn:\n          allOf:\n            - $ref: '#/components/schemas/FleetArn'\n            - description: The ARN of the fleet.\n        MaxResults:\n          allOf:\n            - $ref: '#/components/schemas/MaxResults'\n            - description: The maximum number of results to be included in the next page.\n        NextToken:\n          allOf:\n            - $ref: '#/components/schemas/NextToken'\n            - description: 'The pagination token used to retrieve the next page of results for this operation. If this value is null, it retrieves the first page.'\n    WebsiteCaSummaryList:\n      type: array\n      items:\n        $ref: '#/components/schemas/WebsiteCaSummary'\n    RestoreDomainAccessRequest:\n      type: object\n      required:\n        - FleetArn\n        - DomainName\n      title: RestoreDomainAccessRequest\n      properties:\n        FleetArn:\n          allOf:\n            - $ref: '#/components/schemas/FleetArn'\n            - description: The ARN of the fleet.\n        DomainName:\n          allOf:\n            - $ref: '#/components/schemas/DomainName'\n            - description: The name of the domain.\n    RevokeDomainAccessRequest:\n      type: object\n      required:\n        - FleetArn\n        - DomainName\n      title: RevokeDomainAccessRequest\n      properties:\n        FleetArn:\n          allOf:\n            - $ref: '#/components/schemas/FleetArn'\n            - description: The ARN of the fleet.\n        DomainName:\n          allOf:\n            - $ref: '#/components/schemas/DomainName'\n            - description: The name of the domain.\n    SignOutUserRequest:\n      type: object\n      required:\n        - FleetArn\n        - Username\n      title: SignOutUserRequest\n      properties:\n        FleetArn:\n          allOf:\n            - $ref: '#/components/schemas/FleetArn'\n            - description: The ARN of the fleet.\n        Username:\n          allOf:\n            - $ref: '#/components/schemas/Username'\n            - description: The name of the user.\n    TagKeyList:\n      type: array\n      items:\n        $ref: '#/components/schemas/TagKey'\n      minItems: 1\n      maxItems: 50\n    TagResourceRequest:\n      type: object\n      required:\n        - Tags\n      title: TagResourceRequest\n      properties:\n        Tags:\n          allOf:\n            - $ref: '#/components/schemas/TagMap'\n            - description: The tags to add to the resource. A tag is a key-value pair.\n    UntagResourceRequest:\n      type: object\n      title: UntagResourceRequest\n      properties: {}\n    UpdateAuditStreamConfigurationRequest:\n      type: object\n      required:\n        - FleetArn\n      title: UpdateAuditStreamConfigurationRequest\n      properties:\n        FleetArn:\n          allOf:\n            - $ref: '#/components/schemas/FleetArn'\n            - description: The ARN of the fleet.\n        AuditStreamArn:\n          allOf:\n            - $ref: '#/components/schemas/AuditStreamArn'\n            - description: The ARN of the Amazon Kinesis data stream that receives the audit events.\n    UpdateCompanyNetworkConfigurationRequest:\n      type: object\n      required:\n        - FleetArn\n        - VpcId\n        - SubnetIds\n        - SecurityGroupIds\n      title: UpdateCompanyNetworkConfigurationRequest\n      properties:\n        FleetArn:\n          allOf:\n            - $ref: '#/components/schemas/FleetArn'\n            - description: The ARN of the fleet.\n        VpcId:\n          allOf:\n            - $ref: '#/components/schemas/VpcId'\n            - description: The VPC with connectivity to associated websites.\n        SubnetIds:\n          allOf:\n            - $ref: '#/components/schemas/SubnetIds'\n            - description: The subnets used for X-ENI connections from Amazon WorkLink rendering containers.\n        SecurityGroupIds:\n          allOf:\n            - $ref: '#/components/schemas/SecurityGroupIds'\n            - description: The security groups associated with access to the provided subnets.\n    UpdateDevicePolicyConfigurationRequest:\n      type: object\n      required:\n        - FleetArn\n      title: UpdateDevicePolicyConfigurationRequest\n      properties:\n        FleetArn:\n          allOf:\n            - $ref: '#/components/schemas/FleetArn'\n            - description: The ARN of the fleet.\n        DeviceCaCertificate:\n          allOf:\n            - $ref: '#/components/schemas/CertificateChain'\n            - description: 'The certificate chain, including intermediate certificates and the root certificate authority certificate used to issue device certificates.'\n    UpdateDomainMetadataRequest:\n      type: object\n      required:\n        - FleetArn\n        - DomainName\n      title: UpdateDomainMetadataRequest\n      properties:\n        FleetArn:\n          allOf:\n            - $ref: '#/components/schemas/FleetArn'\n            - description: The ARN of the fleet.\n        DomainName:\n          allOf:\n            - $ref: '#/components/schemas/DomainName'\n            - description: The name of the domain.\n        DisplayName:\n          allOf:\n            - $ref: '#/components/schemas/DisplayName'\n            - description: The name to display.\n    UpdateFleetMetadataRequest:\n      type: object\n      required:\n        - FleetArn\n      title: UpdateFleetMetadataRequest\n      properties:\n        FleetArn:\n          allOf:\n            - $ref: '#/components/schemas/FleetArn'\n            - description: The ARN of the fleet.\n        DisplayName:\n          allOf:\n            - $ref: '#/components/schemas/DisplayName'\n            - description: The fleet name to display. The existing DisplayName is unset if null is passed.\n        OptimizeForEndUserLocation:\n          allOf:\n            - $ref: '#/components/schemas/Boolean'\n            - description: 'The option to optimize for better performance by routing traffic through the closest AWS Region to users, which may be outside of your home Region.'\n    UpdateIdentityProviderConfigurationRequest:\n      type: object\n      required:\n        - FleetArn\n        - IdentityProviderType\n      title: UpdateIdentityProviderConfigurationRequest\n      properties:\n        FleetArn:\n          allOf:\n            - $ref: '#/components/schemas/FleetArn'\n            - description: The ARN of the fleet.\n        IdentityProviderType:\n          allOf:\n            - $ref: '#/components/schemas/IdentityProviderType'\n            - description: The type of identity provider.\n        IdentityProviderSamlMetadata:\n          allOf:\n            - $ref: '#/components/schemas/SamlMetadata'\n            - description: The SAML metadata document provided by the customer’s identity provider. The existing IdentityProviderSamlMetadata is unset if null is passed.\n    WebsiteAuthorizationProviderSummary:\n      type: object\n      required:\n        - AuthorizationProviderType\n      properties:\n        AuthorizationProviderId:\n          allOf:\n            - $ref: '#/components/schemas/Id'\n            - description: A unique identifier for the authorization provider.\n        AuthorizationProviderType:\n          allOf:\n            - $ref: '#/components/schemas/AuthorizationProviderType'\n            - description: The authorization provider type.\n        DomainName:\n          allOf:\n            - $ref: '#/components/schemas/DomainName'\n            - description: The domain name of the authorization provider. This applies only to SAML-based authorization providers.\n        CreatedTime:\n          allOf:\n            - $ref: '#/components/schemas/DateTime'\n            - description: The time of creation.\n      description: The summary of the website authorization provider.\n    WebsiteCaSummary:\n      type: object\n      properties:\n        WebsiteCaId:\n          allOf:\n            - $ref: '#/components/schemas/Id'\n            - description: A unique identifier for the CA.\n        CreatedTime:\n          allOf:\n            - $ref: '#/components/schemas/DateTime'\n            - description: The time when the CA was added.\n        DisplayName:\n          allOf:\n            - $ref: '#/components/schemas/DisplayName'\n            - description: The name to display.\n      description: The summary of the certificate authority (CA).\nsecurity:\n  - hmac: []\n",
			"canonicalURL": "/github.com/APIs-guru/openapi-directory@cafd364eceab1026372ac69bd0ef670c5fe491bb/-/blob/APIs/amazonaws.com/worklink/2018-09-25/openapi.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/APIs-guru/openapi-directory/blob/cafd364eceab1026372ac69bd0ef670c5fe491bb/APIs/amazonaws.com/worklink/2018-09-25/openapi.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "parse: parse spec: parse operations: paths: /tags/{ResourceArn}#tagKeys: delete: operation \"UntagResource\": parse path \"/tags/{ResourceArn}#tagKeys\": path MUST NOT contain a fragment"
}