{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/xvrh/atlassian_apis"
		},
		"file": {
			"name": "admin_user.json",
			"size": 0,
			"path": "tool/apis/admin_user.json",
			"byteSize": 39079,
			"content": "{\n  \"openapi\": \"3.0.0\",\n  \"info\": {\n    \"version\": \"0.0.1\",\n    \"title\": \"IDv2: User management\"\n  },\n  \"x-atlassian-narrative\": {\n    \"documents\": [\n      {\n        \"title\": \"About the user management REST API\",\n        \"anchor\": \"about\",\n        \"body\": \"Use this REST API to administer and edit the managed accounts in your organization by account ID.\\nYou can find the account ID for a user with\\n[get users in an organization](/cloud/admin/organization/rest/#api-orgs-orgId-users-get).\"\n      },\n      {\n        \"title\": \"Authentication and authorization\",\n        \"anchor\": \"auth\",\n        \"body\": \"To use the user management REST API you must have a valid API key. The API key protects the API\\nand ensures that you have permission to update and deactivate the accounts owned by your organization.\\nYou can use the same API key for the organizations REST API and the user management REST API.\\nFor more information, see [Create an API key](https://confluence.atlassian.com/x/jPnJOQ).\\n\\nOnce you have your API key, you can provide it as a bearer token\\nin the `Authorization` part of your HTTPS header.\"\n      },\n      {\n        \"title\": \"Version and URI\",\n        \"anchor\": \"uri\",\n        \"body\": \"\\nThis documentation is for version 1 of the user management REST API. The URIs for resources\\nhave the following structure:\\n\\n```\\nhttps://api.atlassian.com/users/\u003cresource-name\u003e\\n```\"\n      }\n    ]\n  },\n  \"security\": [\n    {\n      \"bearerAuth\": []\n    }\n  ],\n  \"servers\": [\n    {\n      \"url\": \"https://api.atlassian.com\",\n      \"description\": \"Atlassian API endpoint\"\n    }\n  ],\n  \"paths\": {\n    \"/users/{account_id}/manage\": {\n      \"get\": {\n        \"summary\": \"Get user management permissions\",\n        \"description\": \"Returns the set of permissions you have for managing the specified Atlassian account\",\n        \"tags\": [\n          \"manage\"\n        ],\n        \"parameters\": [\n          {\n            \"in\": \"path\",\n            \"name\": \"account_id\",\n            \"schema\": {\n              \"$ref\": \"#/components/schemas/AccountId\"\n            },\n            \"description\": \"The user account to manage\",\n            \"required\": true\n          },\n          {\n            \"name\": \"privileges\",\n            \"in\": \"query\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"array\",\n              \"items\": {\n                \"type\": \"string\",\n                \"enum\": [\n                  \"profile\",\n                  \"profile.write\",\n                  \"profile.read\",\n                  \"email.set\",\n                  \"lifecycle.enablement\",\n                  \"apiToken.read\",\n                  \"apiToken.delete\"\n                ]\n              }\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"You have permission to manage at least some aspect of the specified user account. Restrictions around the privileges specified are returned.\\n- _profile_: DEPRECATED, replace by profile.write\\n- _profile.read_: have permission to read the profile data of the user account (at GET ./profile)\\n- _profile.write_: refers to the object mutability of the user's profile (at PATCH ./profile)\\n- _email.set_: have permission to set the user's email address (at PUT ./email)\\n- _lifecycle.enablement_: have permission to activate and deactivate the user's account (at POST ./lifecycle/enable AND ./lifecycle/disable)\\n- _apiToken.read_: have permission to list the user's API tokens (at GET ./api-tokens)\\n- _apiToken.delete_: have permission to delete API tokens from the account (at DELETE ./api-tokens/{tokenId})\\n\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"profile\": {\n                      \"$ref\": \"#/components/schemas/Manageability.Rule.ObjectMutability\"\n                    },\n                    \"profile.write\": {\n                      \"$ref\": \"#/components/schemas/Manageability.Rule.ObjectMutability\"\n                    },\n                    \"profile.read\": {\n                      \"$ref\": \"#/components/schemas/Manageability.Rule.Simple\"\n                    },\n                    \"email.set\": {\n                      \"$ref\": \"#/components/schemas/Manageability.Rule.Simple\"\n                    },\n                    \"lifecycle.enablement\": {\n                      \"$ref\": \"#/components/schemas/Manageability.Rule.Simple\"\n                    },\n                    \"apiToken.read\": {\n                      \"$ref\": \"#/components/schemas/Manageability.Rule.Simple\"\n                    },\n                    \"apiToken.delete\": {\n                      \"$ref\": \"#/components/schemas/Manageability.Rule.Simple\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"401\": {\n            \"$ref\": \"#/components/responses/Unauthorized\"\n          },\n          \"403\": {\n            \"$ref\": \"#/components/responses/Forbidden\"\n          },\n          \"404\": {\n            \"$ref\": \"#/components/responses/NotFound.Account\"\n          }\n        }\n      }\n    },\n    \"/users/{account_id}/manage/profile\": {\n      \"get\": {\n        \"summary\": \"Get profile\",\n        \"description\": \"Returns information about a single Atlassian account by ID\",\n        \"tags\": [\n          \"profile\"\n        ],\n        \"parameters\": [\n          {\n            \"in\": \"path\",\n            \"name\": \"account_id\",\n            \"schema\": {\n              \"$ref\": \"#/components/schemas/AccountId\"\n            },\n            \"description\": \"The ID of the user\",\n            \"required\": true\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"You have permission to manage the user. The profile data is returned.\\n\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"account\"\n                  ],\n                  \"properties\": {\n                    \"account\": {\n                      \"$ref\": \"#/components/schemas/AtlassianAccountUser\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"401\": {\n            \"$ref\": \"#/components/responses/Unauthorized\"\n          },\n          \"403\": {\n            \"$ref\": \"#/components/responses/Forbidden\"\n          },\n          \"404\": {\n            \"$ref\": \"#/components/responses/NotFound.Account\"\n          }\n        }\n      },\n      \"patch\": {\n        \"summary\": \"Update profile\",\n        \"description\": \"Updates fields in a user account. The `profile.write` privilege details which fields you can change.\",\n        \"tags\": [\n          \"profile\"\n        ],\n        \"parameters\": [\n          {\n            \"in\": \"path\",\n            \"name\": \"account_id\",\n            \"schema\": {\n              \"$ref\": \"#/components/schemas/AccountId\"\n            },\n            \"description\": \"The ID of the user to update\",\n            \"required\": true\n          }\n        ],\n        \"requestBody\": {\n          \"description\": \"The information to change, a subset of the mutable fields described in the `profile.write` privilege.\",\n          \"required\": true,\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/AtlassianAccountUser\"\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"You have permission to manage the user. The profile is updated.\\n\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"account\"\n                  ],\n                  \"properties\": {\n                    \"account\": {\n                      \"$ref\": \"#/components/schemas/AtlassianAccountUser\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"$ref\": \"#/components/responses/BadRequest.Body\"\n          },\n          \"401\": {\n            \"$ref\": \"#/components/responses/Unauthorized\"\n          },\n          \"403\": {\n            \"$ref\": \"#/components/responses/Forbidden.FieldMutation\"\n          },\n          \"404\": {\n            \"$ref\": \"#/components/responses/NotFound.Account\"\n          }\n        }\n      }\n    },\n    \"/users/{account_id}/manage/email\": {\n      \"put\": {\n        \"summary\": \"Set email\\n\",\n        \"description\": \"Sets the specified user's email address. Before using this endpoint, you must [verify the target domain](https://confluence.atlassian.com/x/gjcWN) as the new email address will be considered verified.\\nThe permission to make use of this resource is exposed by the `email.set` privilege.\\nThis call invalidates all active sessions.\\n\",\n        \"tags\": [\n          \"email\"\n        ],\n        \"parameters\": [\n          {\n            \"in\": \"path\",\n            \"name\": \"account_id\",\n            \"schema\": {\n              \"$ref\": \"#/components/schemas/AccountId\"\n            },\n            \"description\": \"The ID of the user\\n\",\n            \"required\": true\n          }\n        ],\n        \"requestBody\": {\n          \"description\": \"An object containing the email address\\n\",\n          \"required\": true,\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"type\": \"object\",\n                \"required\": [\n                  \"email\"\n                ],\n                \"properties\": {\n                  \"email\": {\n                    \"$ref\": \"#/components/schemas/Email\"\n                  }\n                }\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"204\": {\n            \"$ref\": \"#/components/responses/NoContent\"\n          },\n          \"400\": {\n            \"$ref\": \"#/components/responses/BadRequest.Body\"\n          },\n          \"401\": {\n            \"$ref\": \"#/components/responses/Unauthorized\"\n          },\n          \"403\": {\n            \"$ref\": \"#/components/responses/Forbidden.UnclaimedDomain\"\n          },\n          \"404\": {\n            \"$ref\": \"#/components/responses/NotFound.Account\"\n          }\n        }\n      }\n    },\n    \"/users/{accountId}/manage/api-tokens\": {\n      \"get\": {\n        \"summary\": \"Get API tokens\",\n        \"description\": \"Gets the API tokens owned by the specified user.\",\n        \"tags\": [\n          \"Api-tokens\"\n        ],\n        \"parameters\": [\n          {\n            \"in\": \"path\",\n            \"name\": \"account_id\",\n            \"schema\": {\n              \"$ref\": \"#/components/schemas/AccountId\"\n            },\n            \"description\": \"The ID of the user\",\n            \"required\": true\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/responses/ApiTokenResponse\"\n                  }\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"$ref\": \"#/components/responses/BadRequest.Body\"\n          },\n          \"401\": {\n            \"$ref\": \"#/components/responses/Unauthorized\"\n          },\n          \"403\": {\n            \"$ref\": \"#/components/responses/Forbidden.Action\"\n          },\n          \"404\": {\n            \"$ref\": \"#/components/responses/NotFound.Account\"\n          },\n          \"429\": {\n            \"description\": \"Rate limited due to too many requests. For more information, see [Rate limiting](https://developer.atlassian.com/cloud/jira/platform/rate-limiting/).\"\n          }\n        }\n      }\n    },\n    \"/users/{accountId}/manage/api-tokens/{tokenId}\": {\n      \"delete\": {\n        \"summary\": \"Delete API token\",\n        \"description\": \"Deletes a specifid API token by ID.\",\n        \"tags\": [\n          \"Api-tokens\"\n        ],\n        \"parameters\": [\n          {\n            \"in\": \"path\",\n            \"name\": \"account_id\",\n            \"schema\": {\n              \"$ref\": \"#/components/schemas/AccountId\"\n            },\n            \"description\": \"The ID of the user\",\n            \"required\": true\n          },\n          {\n            \"name\": \"tokenId\",\n            \"description\": \"The ID of the API token\",\n            \"example\": \"fake-tokenId\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"204\": {\n            \"description\": \"The API token was deleted\"\n          },\n          \"400\": {\n            \"$ref\": \"#/components/responses/BadRequest.Body\"\n          },\n          \"401\": {\n            \"$ref\": \"#/components/responses/Unauthorized\"\n          },\n          \"403\": {\n            \"$ref\": \"#/components/responses/Forbidden.Action\"\n          },\n          \"404\": {\n            \"$ref\": \"#/components/responses/NotFound.Account\"\n          }\n        }\n      }\n    },\n    \"/users/{account_id}/manage/lifecycle/disable\": {\n      \"post\": {\n        \"summary\": \"Deactivate a user\",\n        \"description\": \"\\nDeactivate the specified user account. The permission to make use of this resource is exposed by the `lifecycle.enablement` privilege.\\nYou can optionally set a message associated with the block that will be shown to the user on attempted authentication. If none is supplied, a default message will be used.\\n\",\n        \"tags\": [\n          \"lifecycle\"\n        ],\n        \"parameters\": [\n          {\n            \"in\": \"path\",\n            \"name\": \"account_id\",\n            \"schema\": {\n              \"$ref\": \"#/components/schemas/AccountId\"\n            },\n            \"description\": \"The ID of the user\\n\",\n            \"required\": true\n          }\n        ],\n        \"requestBody\": {\n          \"description\": \"An object containing a message\\n\",\n          \"required\": true,\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"type\": \"object\",\n                \"properties\": {\n                  \"message\": {\n                    \"type\": \"string\",\n                    \"example\": \"On 6-month suspension\"\n                  }\n                }\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"204\": {\n            \"$ref\": \"#/components/responses/NoContent\"\n          },\n          \"401\": {\n            \"$ref\": \"#/components/responses/Unauthorized\"\n          },\n          \"403\": {\n            \"$ref\": \"#/components/responses/Forbidden.Action\"\n          },\n          \"404\": {\n            \"$ref\": \"#/components/responses/NotFound.Account\"\n          }\n        }\n      }\n    },\n    \"/users/{account_id}/manage/lifecycle/enable\": {\n      \"post\": {\n        \"summary\": \"Activate a user\",\n        \"description\": \"\\nActivates the specified user account. The permission to make use of this resource is exposed by the `lifecycle.enablement` privilege.\\nYou can optionally set a message associated with the block that will be shown to the user on attempted authentication. If none is supplied, a default message will be used.\\n\",\n        \"tags\": [\n          \"lifecycle\"\n        ],\n        \"parameters\": [\n          {\n            \"in\": \"path\",\n            \"name\": \"account_id\",\n            \"schema\": {\n              \"$ref\": \"#/components/schemas/AccountId\"\n            },\n            \"description\": \"The unique identifier of the user to activate.\\n\",\n            \"required\": true\n          }\n        ],\n        \"responses\": {\n          \"204\": {\n            \"$ref\": \"#/components/responses/NoContent\"\n          },\n          \"401\": {\n            \"$ref\": \"#/components/responses/Unauthorized\"\n          },\n          \"403\": {\n            \"$ref\": \"#/components/responses/Forbidden.Action\"\n          },\n          \"404\": {\n            \"$ref\": \"#/components/responses/NotFound.Account\"\n          }\n        }\n      }\n    }\n  },\n  \"components\": {\n    \"securitySchemes\": {\n      \"bearerAuth\": {\n        \"type\": \"http\",\n        \"scheme\": \"bearer\"\n      }\n    },\n    \"schemas\": {\n      \"AtlassianAccountUser\": {\n        \"allOf\": [\n          {\n            \"$ref\": \"#/components/schemas/User\"\n          },\n          {\n            \"type\": \"object\",\n            \"required\": [\n              \"nickname\"\n            ],\n            \"properties\": {\n              \"nickname\": {\n                \"$ref\": \"#/components/schemas/Nickname\"\n              },\n              \"zoneinfo\": {\n                \"$ref\": \"#/components/schemas/ZoneInfo\"\n              },\n              \"locale\": {\n                \"$ref\": \"#/components/schemas/Locale\"\n              },\n              \"extended_profile\": {\n                \"$ref\": \"#/components/schemas/ExtendedProfile\"\n              }\n            }\n          }\n        ]\n      },\n      \"ExtendedProfile\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"job_title\": {\n            \"$ref\": \"#/components/schemas/JobTitle\"\n          },\n          \"organization\": {\n            \"$ref\": \"#/components/schemas/Organization\"\n          },\n          \"department\": {\n            \"$ref\": \"#/components/schemas/Department\"\n          },\n          \"location\": {\n            \"$ref\": \"#/components/schemas/Location\"\n          }\n        }\n      },\n      \"AccountId\": {\n        \"type\": \"string\",\n        \"pattern\": \"[a-zA-Z0-9_|:-]{1,128}\\n\",\n        \"description\": \"A unique account identifier\",\n        \"example\": \"557057:4f9acfd2-6155-419b-8de5-5b5cf27a59a0\",\n        \"readOnly\": true\n      },\n      \"Nickname\": {\n        \"type\": \"string\",\n        \"pattern\": \".{1,30}\",\n        \"description\": \"A nickname for the user in content references to the user.\\n\\n_Constraints_\\n- `maxLength`: The maximum nickname length is 30 characters\\n- `validCharacters`: Control and null characters are not allowed\\n\",\n        \"example\": \"marshmallow\"\n      },\n      \"Name\": {\n        \"type\": \"string\",\n        \"example\": \"Lila User\",\n        \"description\": \"The display name of the user. Should be used for contextual rendering of\\ncontent authorship.\\n\\n_Constraints_\\n- `maxLength`: The maximum display name length is 100 characters\\n- `validCharacters`: Control and null characters are not allowed\\n\"\n      },\n      \"Locale\": {\n        \"type\": \"string\",\n        \"description\": \"An IETF BCP 47 locale string\",\n        \"example\": \"en-US\"\n      },\n      \"ZoneInfo\": {\n        \"type\": \"string\",\n        \"description\": \"A unix zoneinfo string describing the local timezone of the user\\n\",\n        \"example\": \"America/Los_Angeles\"\n      },\n      \"Email\": {\n        \"type\": \"string\",\n        \"description\": \"The email address of the user.\\n\\n_Constraints_\\n- `partMaxLength`: The maximum length of the user part and of any\\n  subdomain is 255 characters.\\n- `validCharacters`: Control and null characters are not allowed\\n\",\n        \"example\": \"vmars@marsinvestigations.com\"\n      },\n      \"JobTitle\": {\n        \"type\": \"string\",\n        \"description\": \"The job title of the user\\n\",\n        \"example\": \"Lead Investigator\"\n      },\n      \"Organization\": {\n        \"type\": \"string\",\n        \"description\": \"The organisation to which the user belongs\\n\",\n        \"example\": \"Amalgamated Investigations\"\n      },\n      \"Department\": {\n        \"type\": \"string\",\n        \"description\": \"The department in which the user works\\n\",\n        \"example\": \"Investigations\"\n      },\n      \"Location\": {\n        \"type\": \"string\",\n        \"description\": \"The physical location of the user\\n\",\n        \"example\": \"Lompoc, CA\"\n      },\n      \"Password\": {\n        \"type\": \"string\",\n        \"description\": \"A secret for use by the user in basic authentication flows\\n\",\n        \"example\": \"hunter2\",\n        \"writeOnly\": true\n      },\n      \"AccountCharacteristics\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"not_mentionable\": {\n            \"type\": \"boolean\",\n            \"example\": false\n          }\n        },\n        \"readOnly\": true\n      },\n      \"Avatar\": {\n        \"type\": \"string\",\n        \"example\": \"https://www.example.com/avatars/userl\",\n        \"description\": \"The absolute URI (RFC3986) to the avatar name of the user.\\n\",\n        \"readOnly\": true\n      },\n      \"AccountType\": {\n        \"type\": \"string\",\n        \"description\": \"The type of account\",\n        \"enum\": [\n          \"atlassian\",\n          \"customer\",\n          \"app\"\n        ],\n        \"readOnly\": true\n      },\n      \"AccountStatus\": {\n        \"type\": \"string\",\n        \"description\": \"The lifecycle status of the account\",\n        \"enum\": [\n          \"active\",\n          \"inactive\",\n          \"closed\"\n        ],\n        \"readOnly\": true\n      },\n      \"User\": {\n        \"type\": \"object\",\n        \"required\": [\n          \"account_id\",\n          \"account_status\",\n          \"account_type\",\n          \"name\",\n          \"email\",\n          \"picture\"\n        ],\n        \"properties\": {\n          \"account_id\": {\n            \"$ref\": \"#/components/schemas/AccountId\"\n          },\n          \"account_type\": {\n            \"$ref\": \"#/components/schemas/AccountType\"\n          },\n          \"account_status\": {\n            \"$ref\": \"#/components/schemas/AccountStatus\"\n          },\n          \"name\": {\n            \"$ref\": \"#/components/schemas/Name\"\n          },\n          \"picture\": {\n            \"$ref\": \"#/components/schemas/Avatar\"\n          },\n          \"email\": {\n            \"allOf\": [\n              {\n                \"$ref\": \"#/components/schemas/Email\"\n              }\n            ],\n            \"readOnly\": true\n          },\n          \"characteristics\": {\n            \"$ref\": \"#/components/schemas/AccountCharacteristics\"\n          }\n        }\n      },\n      \"Manageability.RestrictionReason\": {\n        \"type\": \"object\",\n        \"required\": [\n          \"key\"\n        ],\n        \"properties\": {\n          \"key\": {\n            \"description\": \"The property or action is restricted because:\\n\\n- _administrative_: The property or action is restricted\\n  because it is intended exclusively for administrative use\\n- _administrative.notMyself_: The property or action\\n  is restricted because it is intended for administrative use and\\n  is forbidden for self-use.\\n- _myselfOnly_: The property or action is restricted because it is\\n  available only to the user which the account belongs too\\n- _managedAccount_: The property or action is restricted because it is\\n  available only to the user's organisation administrator\\n- _externalDirectory.scim_: The property/action is restricted because\\n  the user is managed by an external SCIM directory\\n- _externalDirectory.google_: The property/action is restricted because\\n  the user is managed by an external Google directory\\n- _blocked.exportControl_: The property/action is restricted because\\n  the user is blocked by US export control\\n\",\n            \"enum\": [\n              \"administrative\",\n              \"administrative.notMyself\",\n              \"myselfOnly\",\n              \"managedAccount\",\n              \"externalDirectory.scim\",\n              \"externalDirectory.google\",\n              \"blocked.exportControl\"\n            ],\n            \"example\": \"managedAccount\"\n          }\n        }\n      },\n      \"Manageability.Allowed\": {\n        \"type\": \"object\",\n        \"description\": \"You are allowed to take or write the action/property\\n\",\n        \"required\": [\n          \"allowed\"\n        ],\n        \"properties\": {\n          \"allowed\": {\n            \"type\": \"boolean\",\n            \"enum\": [\n              true\n            ],\n            \"example\": true\n          }\n        }\n      },\n      \"Manageability.Unallowed\": {\n        \"type\": \"object\",\n        \"description\": \"You are not allowed to take or write the action/property\\n\",\n        \"required\": [\n          \"allowed\",\n          \"reason\"\n        ],\n        \"properties\": {\n          \"allowed\": {\n            \"type\": \"boolean\",\n            \"enum\": [\n              false\n            ],\n            \"example\": false\n          },\n          \"reason\": {\n            \"$ref\": \"#/components/schemas/Manageability.RestrictionReason\"\n          }\n        }\n      },\n      \"Manageability.Rule.Simple\": {\n        \"type\": \"object\",\n        \"oneOf\": [\n          {\n            \"$ref\": \"#/components/schemas/Manageability.Allowed\"\n          },\n          {\n            \"$ref\": \"#/components/schemas/Manageability.Unallowed\"\n          }\n        ],\n        \"discriminator\": {\n          \"propertyName\": \"allowed\",\n          \"mapping\": {\n            \"true\": \"#/components/schemas/Manageability.Allowed\",\n            \"false\": \"#/components/schemas/Manageability.Unallowed\"\n          }\n        },\n        \"example\": {\n          \"allowed\": true\n        }\n      },\n      \"Manageability.Rule.ObjectMutability\": {\n        \"type\": \"object\",\n        \"description\": \"Describes your permissions to change the object. Each key should be a valid JSON path of the target object.\\n\",\n        \"additionalProperties\": {\n          \"$ref\": \"#/components/schemas/Manageability.Rule.Simple\"\n        },\n        \"minProperties\": 1,\n        \"example\": {\n          \"name\": {\n            \"allowed\": true\n          },\n          \"nickname\": {\n            \"allowed\": true\n          },\n          \"zoneinfo\": {\n            \"allowed\": true\n          },\n          \"locale\": {\n            \"allowed\": true\n          },\n          \"extended_profile.job_title\": {\n            \"allowed\": true\n          },\n          \"extended_profile.organization\": {\n            \"allowed\": true\n          },\n          \"extended_profile.department\": {\n            \"allowed\": true\n          },\n          \"extended_profile.location\": {\n            \"allowed\": true\n          }\n        }\n      },\n      \"Response.BadRequest.BodyParseFailure\": {\n        \"description\": \"The body was not parsed successfully.\\n\",\n        \"type\": \"object\",\n        \"required\": [\n          \"key\"\n        ],\n        \"properties\": {\n          \"key\": {\n            \"type\": \"string\",\n            \"example\": \"bodyParseFailure\"\n          }\n        }\n      },\n      \"Response.BadRequest.FieldConstraintsViolated\": {\n        \"description\": \"The submitted JSON entity had one or more invalid properties.\\nFor each invalid field, a set of violated constraint keys are returned.\\n\",\n        \"type\": \"object\",\n        \"required\": [\n          \"key\",\n          \"context\"\n        ],\n        \"properties\": {\n          \"key\": {\n            \"type\": \"string\",\n            \"example\": \"fieldConstraintsViolated\"\n          },\n          \"context\": {\n            \"type\": \"object\",\n            \"required\": [\n              \"fieldViolations\"\n            ],\n            \"properties\": {\n              \"fieldViolations\": {\n                \"type\": \"array\",\n                \"minItems\": 1,\n                \"items\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"field\",\n                    \"violations\"\n                  ],\n                  \"properties\": {\n                    \"field\": {\n                      \"type\": \"string\",\n                      \"description\": \"The JSON path to the field with an invalid value\",\n                      \"example\": \"nickname\"\n                    },\n                    \"violations\": {\n                      \"type\": \"array\",\n                      \"minItems\": 1,\n                      \"uniqueItems\": true,\n                      \"items\": {\n                        \"type\": \"object\",\n                        \"required\": [\n                          \"key\"\n                        ],\n                        \"properties\": {\n                          \"key\": {\n                            \"type\": \"string\",\n                            \"description\": \"The key for a constraint that the submitted value has violated.\\nSee documentation for any submittable model for a set of constraint keys and definitions.\\n\",\n                            \"example\": \"maxLength\"\n                          }\n                        }\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      },\n      \"Response.Forbidden.Basic\": {\n        \"description\": \"You are not authorized to access this resource\\n\",\n        \"type\": \"object\",\n        \"required\": [\n          \"key\"\n        ],\n        \"properties\": {\n          \"key\": {\n            \"type\": \"string\",\n            \"enum\": [\n              \"forbidden\"\n            ],\n            \"example\": \"forbidden\"\n          }\n        }\n      },\n      \"Response.Forbidden.Action\": {\n        \"type\": \"object\",\n        \"required\": [\n          \"key\",\n          \"context\"\n        ],\n        \"properties\": {\n          \"key\": {\n            \"type\": \"string\",\n            \"enum\": [\n              \"forbidden.action\"\n            ],\n            \"example\": \"forbidden.action\"\n          },\n          \"context\": {\n            \"$ref\": \"#/components/schemas/Manageability.Unallowed\"\n          }\n        }\n      },\n      \"Response.Forbidden.UnclaimedDomain\": {\n        \"type\": \"object\",\n        \"required\": [\n          \"key\"\n        ],\n        \"properties\": {\n          \"key\": {\n            \"type\": \"string\",\n            \"enum\": [\n              \"forbidden.unclaimedDomain\"\n            ],\n            \"example\": \"forbidden.unclaimedDomain\"\n          },\n          \"context\": {\n            \"type\": \"object\",\n            \"required\": [\n              \"domain\"\n            ],\n            \"properties\": {\n              \"domain\": {\n                \"type\": \"string\",\n                \"example\": \"vanlowe-pi.net\"\n              }\n            }\n          }\n        }\n      },\n      \"Response.Forbidden.ObjectMutability\": {\n        \"type\": \"object\",\n        \"required\": [\n          \"key\",\n          \"context\"\n        ],\n        \"properties\": {\n          \"key\": {\n            \"type\": \"string\",\n            \"enum\": [\n              \"forbidden.fieldMutation\"\n            ],\n            \"example\": \"forbidden.fieldMutation\"\n          },\n          \"context\": {\n            \"$ref\": \"#/components/schemas/Manageability.Rule.ObjectMutability\"\n          }\n        }\n      },\n      \"Response.Forbidden.TargetUnverified\": {\n        \"description\": \"Cannot manage an unverified target account\\n\",\n        \"type\": \"object\",\n        \"required\": [\n          \"key\"\n        ],\n        \"properties\": {\n          \"key\": {\n            \"type\": \"string\",\n            \"enum\": [\n              \"forbidden.targetUnverified\"\n            ],\n            \"example\": \"forbidden.targetUnverified\"\n          }\n        }\n      }\n    },\n    \"responses\": {\n      \"ApiTokenResponse\": {\n        \"description\": \"API Token information\",\n        \"content\": {\n          \"application/json\": {\n            \"schema\": {\n              \"type\": \"object\",\n              \"required\": [\n                \"createdAt\",\n                \"id\",\n                \"label\"\n              ],\n              \"properties\": {\n                \"label\": {\n                  \"type\": \"string\",\n                  \"example\": \"My Addon\",\n                  \"description\": \"Human readable description for the token.\"\n                },\n                \"lastAccess\": {\n                  \"type\": \"string\",\n                  \"example\": \"2015-05-12T20:20:50.521Z\",\n                  \"description\": \"Timestamp last time the token was used to Authenticate as a UTC-ISO8601 string\\n\"\n                },\n                \"createdAt\": {\n                  \"type\": \"string\",\n                  \"example\": \"2015-04-12T23:20:50.522Z\",\n                  \"description\": \"Timestamp of when the token was generated as a UTC-ISO8601 string\"\n                },\n                \"id\": {\n                  \"type\": \"string\",\n                  \"description\": \"Container token id. This is the identifier of the system user associated with the container token.\"\n                }\n              }\n            }\n          }\n        }\n      },\n      \"NoContent\": {\n        \"description\": \"Everything went fine, nothing to return.\"\n      },\n      \"BadRequest.Body\": {\n        \"description\": \"The request body was malformed or a field violated its constraints.\\n\",\n        \"content\": {\n          \"application/json\": {\n            \"schema\": {\n              \"type\": \"object\",\n              \"oneOf\": [\n                {\n                  \"$ref\": \"#/components/schemas/Response.BadRequest.BodyParseFailure\"\n                },\n                {\n                  \"$ref\": \"#/components/schemas/Response.BadRequest.FieldConstraintsViolated\"\n                }\n              ],\n              \"discriminator\": {\n                \"propertyName\": \"key\",\n                \"mapping\": {\n                  \"bodyParseFailure\": \"#/components/schemas/Response.BadRequest.BodyParseFailure\",\n                  \"fieldConstraintsViolated\": \"#/components/schemas/Response.BadRequest.FieldConstraintsViolated\"\n                }\n              },\n              \"example\": {\n                \"key\": \"bodyParseFailure\"\n              }\n            }\n          }\n        }\n      },\n      \"Unauthorized\": {\n        \"description\": \"You are unauthenticated.\",\n        \"content\": {\n          \"application/json\": {\n            \"schema\": {\n              \"type\": \"object\",\n              \"required\": [\n                \"key\"\n              ],\n              \"properties\": {\n                \"key\": {\n                  \"type\": \"string\",\n                  \"enum\": [\n                    \"unauthorized\"\n                  ]\n                }\n              }\n            }\n          }\n        }\n      },\n      \"Forbidden\": {\n        \"description\": \"You are authenticated but have no permission to manage the target user.\\n\",\n        \"content\": {\n          \"application/json\": {\n            \"schema\": {\n              \"type\": \"object\",\n              \"oneOf\": [\n                {\n                  \"$ref\": \"#/components/schemas/Response.Forbidden.Basic\"\n                },\n                {\n                  \"$ref\": \"#/components/schemas/Response.Forbidden.TargetUnverified\"\n                }\n              ],\n              \"discriminator\": {\n                \"propertyName\": \"key\",\n                \"mapping\": {\n                  \"forbidden\": \"#/components/schemas/Response.Forbidden.Basic\",\n                  \"forbidden.targetUnverified\": \"#/components/schemas/Response.Forbidden.TargetUnverified\"\n                }\n              },\n              \"example\": {\n                \"key\": \"forbidden\"\n              }\n            }\n          }\n        }\n      },\n      \"Forbidden.Action\": {\n        \"description\": \"You are authenticated but do not have the authority to take this action.\\n\",\n        \"content\": {\n          \"application/json\": {\n            \"schema\": {\n              \"type\": \"object\",\n              \"oneOf\": [\n                {\n                  \"$ref\": \"#/components/schemas/Response.Forbidden.Basic\"\n                },\n                {\n                  \"$ref\": \"#/components/schemas/Response.Forbidden.Action\"\n                },\n                {\n                  \"$ref\": \"#/components/schemas/Response.Forbidden.TargetUnverified\"\n                }\n              ],\n              \"discriminator\": {\n                \"propertyName\": \"key\",\n                \"mapping\": {\n                  \"forbidden\": \"#/components/schemas/Response.Forbidden.Basic\",\n                  \"forbidden.action\": \"#/components/schemas/Response.Forbidden.Action\",\n                  \"forbidden.targetUnverified\": \"#/components/schemas/Response.Forbidden.TargetUnverified\"\n                }\n              },\n              \"example\": {\n                \"key\": \"forbidden\"\n              }\n            }\n          }\n        }\n      },\n      \"Forbidden.UnclaimedDomain\": {\n        \"description\": \"You asre authenticated but one of the following is true:\\n\\n- You do not have the authority to manage the user\\n- You do not have the authority to take the action\\n- You do not have authority over a specified domain\\n\",\n        \"content\": {\n          \"application/json\": {\n            \"schema\": {\n              \"type\": \"object\",\n              \"oneOf\": [\n                {\n                  \"$ref\": \"#/components/schemas/Response.Forbidden.Basic\"\n                },\n                {\n                  \"$ref\": \"#/components/schemas/Response.Forbidden.Action\"\n                },\n                {\n                  \"$ref\": \"#/components/schemas/Response.Forbidden.UnclaimedDomain\"\n                },\n                {\n                  \"$ref\": \"#/components/schemas/Response.Forbidden.TargetUnverified\"\n                }\n              ],\n              \"discriminator\": {\n                \"propertyName\": \"key\",\n                \"mapping\": {\n                  \"forbidden\": \"#/components/schemas/Response.Forbidden.Basic\",\n                  \"forbidden.action\": \"#/components/schemas/Response.Forbidden.Action\",\n                  \"forbidden.unclaimedDomain\": \"#/components/schemas/Response.Forbidden.UnclaimedDomain\",\n                  \"forbidden.targetUnverified\": \"#/components/schemas/Response.Forbidden.TargetUnverified\"\n                }\n              },\n              \"example\": {\n                \"key\": \"forbidden\"\n              }\n            }\n          }\n        }\n      },\n      \"Forbidden.FieldMutation\": {\n        \"description\": \"You are authenticated but one of the following is true:\\n\\n- You have no right to manage the target user\\n- You do not have the authority to change one or more requested properties\\n\",\n        \"content\": {\n          \"application/json\": {\n            \"schema\": {\n              \"oneOf\": [\n                {\n                  \"$ref\": \"#/components/schemas/Response.Forbidden.Basic\"\n                },\n                {\n                  \"$ref\": \"#/components/schemas/Response.Forbidden.ObjectMutability\"\n                },\n                {\n                  \"$ref\": \"#/components/schemas/Response.Forbidden.TargetUnverified\"\n                }\n              ],\n              \"discriminator\": {\n                \"propertyName\": \"key\",\n                \"mapping\": {\n                  \"forbidden\": \"#/components/schemas/Response.Forbidden.Basic\",\n                  \"forbidden.fieldMutation\": \"#/components/schemas/Response.Forbidden.ObjectMutability\",\n                  \"forbidden.targetUnverified\": \"#/components/schemas/Response.Forbidden.TargetUnverified\"\n                }\n              },\n              \"example\": {\n                \"key\": \"forbidden\"\n              }\n            }\n          }\n        }\n      },\n      \"NotFound.Account\": {\n        \"description\": \"The requested resource does not exist.\",\n        \"content\": {\n          \"application/json\": {\n            \"schema\": {\n              \"type\": \"object\",\n              \"properties\": {\n                \"key\": {\n                  \"description\": \"- _accountNotFound_: Requested accountId not found\\n- _notFound_: Requested resource not found\\n\",\n                  \"type\": \"string\",\n                  \"enum\": [\n                    \"accountNotFound\",\n                    \"notFound\"\n                  ]\n                }\n              },\n              \"required\": [\n                \"key\"\n              ],\n              \"example\": {\n                \"key\": \"accountNotFound\"\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n}",
			"canonicalURL": "/github.com/xvrh/atlassian_apis@eb9c4947617a7d9442e69c9edd77873f9849e560/-/blob/tool/apis/admin_user.json",
			"externalURLs": [
				{
					"url": "https://github.com/xvrh/atlassian_apis/blob/eb9c4947617a7d9442e69c9edd77873f9849e560/tool/apis/admin_user.json",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "parse: parse spec: parse path items: path \"/users/{accountId}/manage/api-tokens\": get: at tool/apis/admin_user.json:289:14: parse path \"/users/{accountId}/manage/api-tokens\": path parameter not specified: \"accountId\""
}