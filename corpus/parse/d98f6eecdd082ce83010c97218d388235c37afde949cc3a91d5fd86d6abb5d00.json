{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/gigili/good-food-tracker-api"
		},
		"file": {
			"name": "swagger.json",
			"size": 0,
			"path": "swagger.json",
			"byteSize": 54932,
			"content": "{\n  \"openapi\": \"3.0.0\",\n  \"info\": {\n    \"title\": \"Good Food Tracker API\",\n    \"description\": \"The project aims to allow the users to take pictures and/or leave notes, ratings, comments about restaurants they visit\\r\\n\\tin order to be able to reference it later when they try to pick were they want to go eat out or order from.\",\n    \"contact\": {\n      \"name\": \"Igor Ilic\",\n      \"email\": \"github@igorilic.net\"\n    },\n    \"version\": \"1.0.0\"\n  },\n  \"servers\": [\n    {\n      \"url\": \"http://localhost:8098\",\n      \"description\": \"Development API base url\"\n    },\n    {\n      \"url\": \"https://gft.igorilic.net/api\",\n      \"description\": \"Production API base url\"\n    }\n  ],\n  \"paths\": {\n    \"/auth/login\": {\n      \"post\": {\n        \"tags\": [\n          \"Auth\"\n        ],\n        \"summary\": \"Login endpoint\",\n        \"description\": \"Endpoint used to authenticate user and obtain JWT tokens\",\n        \"operationId\": \"f37d342cb00753efb2efa7875d4618cf\",\n        \"requestBody\": {\n          \"description\": \"Login parameters\",\n          \"required\": true,\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"properties\": {\n                  \"username\": {\n                    \"type\": \"string\"\n                  },\n                  \"password\": {\n                    \"type\": \"string\"\n                  }\n                },\n                \"type\": \"object\"\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Successfull login\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"properties\": {\n                    \"user\": {\n                      \"$ref\": \"#/components/schemas/UserEntity\"\n                    },\n                    \"tokens\": {\n                      \"properties\": {\n                        \"access_token\": {\n                          \"type\": \"string\"\n                        },\n                        \"refresh_token\": {\n                          \"type\": \"string\"\n                        }\n                      },\n                      \"type\": \"object\"\n                    }\n                  },\n                  \"type\": \"object\"\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"description\": \"Missing required fileds in the request body\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/error_response\"\n                }\n              }\n            }\n          },\n          \"404\": {\n            \"description\": \"User not found (invalid username/password)\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/error_response\"\n                }\n              }\n            }\n          },\n          \"423\": {\n            \"description\": \"Account not active\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/error_response\"\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/auth/register\": {\n      \"post\": {\n        \"tags\": [\n          \"Auth\"\n        ],\n        \"summary\": \"Register endpoint\",\n        \"description\": \"Endpoint used for registering new accounts\",\n        \"operationId\": \"42e7f1d156b5d98a81e2b94e9a7af221\",\n        \"requestBody\": {\n          \"description\": \"Register parameters\",\n          \"required\": true,\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"properties\": {\n                  \"name\": {\n                    \"type\": \"string\"\n                  },\n                  \"email\": {\n                    \"type\": \"string\"\n                  },\n                  \"username\": {\n                    \"type\": \"string\"\n                  },\n                  \"password\": {\n                    \"type\": \"string\"\n                  },\n                  \"password_again\": {\n                    \"type\": \"string\"\n                  }\n                },\n                \"type\": \"object\"\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"201\": {\n            \"description\": \"Registration successful\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"properties\": {\n                    \"message\": {\n                      \"type\": \"string\"\n                    },\n                    \"user\": {\n                      \"$ref\": \"#/components/schemas/UserEntity\"\n                    }\n                  },\n                  \"type\": \"object\"\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"description\": \"Missing required fileds in the request body\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/error_response\"\n                }\n              }\n            }\n          },\n          \"409\": {\n            \"description\": \"Username or Email taken\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/error_response\"\n                }\n              }\n            }\n          },\n          \"500\": {\n            \"description\": \"Registration failed\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/error_response\"\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/auth/verify\": {\n      \"post\": {\n        \"tags\": [\n          \"Auth\"\n        ],\n        \"summary\": \"Verify account endpoint\",\n        \"description\": \"Endpoint used for verifing user accounts after registration\",\n        \"operationId\": \"7b08c8dfe317bea9f1c37a266e9f3ee0\",\n        \"requestBody\": {\n          \"description\": \"Parameters\",\n          \"required\": true,\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"properties\": {\n                  \"activationKey\": {\n                    \"type\": \"string\"\n                  }\n                },\n                \"type\": \"object\"\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Account verified successfully\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/response_with_message_only\"\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"description\": \"Missing required fileds in the request body\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/error_response\"\n                }\n              }\n            }\n          },\n          \"412\": {\n            \"description\": \"Invalid activation key provided\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/error_response\"\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/auth/request-password-reset\": {\n      \"post\": {\n        \"tags\": [\n          \"Auth\"\n        ],\n        \"summary\": \"Request password reset code endpoint\",\n        \"description\": \"Endpoint used for request a new password reset code\",\n        \"operationId\": \"bc96bacf353b7d2741615279b0c7e1da\",\n        \"requestBody\": {\n          \"description\": \"Parameters\",\n          \"required\": true,\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"properties\": {\n                  \"emailOrUsername\": {\n                    \"type\": \"string\"\n                  }\n                },\n                \"type\": \"object\"\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Password reset code sent to email\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/response_with_message_only\"\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"description\": \"Missing required fileds in the request body\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/error_response\"\n                }\n              }\n            }\n          },\n          \"404\": {\n            \"description\": \"User account not found\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/error_response\"\n                }\n              }\n            }\n          },\n          \"500\": {\n            \"description\": \"Unable to send reset code via email\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/error_response\"\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/auth/reset-password\": {\n      \"post\": {\n        \"tags\": [\n          \"Auth\"\n        ],\n        \"summary\": \"Reset password endpoint\",\n        \"description\": \"Endpoint used for resetting a new password\",\n        \"operationId\": \"cfedc29b38bb0d51eefc48d5c0f22d1e\",\n        \"requestBody\": {\n          \"description\": \"Parameters\",\n          \"required\": true,\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"properties\": {\n                  \"passwordResetCode\": {\n                    \"type\": \"string\"\n                  },\n                  \"newPassword\": {\n                    \"type\": \"string\"\n                  },\n                  \"newPasswordAgain\": {\n                    \"type\": \"string\"\n                  }\n                },\n                \"type\": \"object\"\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Password reset successfully\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/response_with_message_only\"\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"description\": \"Missing required fileds in the request body\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/error_response\"\n                }\n              }\n            }\n          },\n          \"404\": {\n            \"description\": \"User account not found\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/error_response\"\n                }\n              }\n            }\n          },\n          \"500\": {\n            \"description\": \"Unable to send password reset confirmation email\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/error_response\"\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/auth/logout\": {\n      \"post\": {\n        \"tags\": [\n          \"Auth\"\n        ],\n        \"summary\": \"Logout endpoint\",\n        \"description\": \"Endpoint used for loggin user out and invalidating tokens\",\n        \"operationId\": \"a658b3822483da1e072726837721c1b1\",\n        \"parameters\": [\n          {\n            \"name\": \"Authorization\",\n            \"in\": \"header\",\n            \"description\": \"Refresh or access token\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\",\n              \"additionalProperties\": false\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Logout successfull\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/response_with_message_only\"\n                }\n              }\n            }\n          },\n          \"401\": {\n            \"description\": \"Missing token\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/error_response\"\n                }\n              }\n            }\n          },\n          \"498\": {\n            \"description\": \"Invalid token exception\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/error_response\"\n                }\n              }\n            }\n          },\n          \"500\": {\n            \"description\": \"Invalid or inccorent token provided: InvalidArgumentException | UnexpectedValueException | SignatureInvalidException | BeforeValidException | BeforeValidException | ExpiredException\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/error_response\"\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/auth/refresh\": {\n      \"post\": {\n        \"tags\": [\n          \"Auth\"\n        ],\n        \"summary\": \"Refresh token endpoint\",\n        \"description\": \"Endpoint used for generating a fresh access token based of refresh token\",\n        \"operationId\": \"8e0ff1a489c5dd385793c45a6da6f72a\",\n        \"parameters\": [\n          {\n            \"name\": \"Authorization\",\n            \"in\": \"header\",\n            \"description\": \"Refresh token\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\",\n              \"additionalProperties\": false\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Successfull generated new access token\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"properties\": {\n                    \"accessToken\": {\n                      \"type\": \"string\"\n                    },\n                    \"refreshToken\": {\n                      \"nullable\": true,\n                      \"type\": \"string\"\n                    }\n                  },\n                  \"type\": \"object\"\n                }\n              }\n            }\n          },\n          \"401\": {\n            \"description\": \"Missing token\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/error_response\"\n                }\n              }\n            }\n          },\n          \"498\": {\n            \"description\": \"Invalid token exception\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/error_response\"\n                }\n              }\n            }\n          },\n          \"500\": {\n            \"description\": \"Invalid or inccorent token provided: InvalidArgumentException | UnexpectedValueException | SignatureInvalidException | BeforeValidException | BeforeValidException | ExpiredException\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/error_response\"\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/city\": {\n      \"get\": {\n        \"tags\": [\n          \"City\"\n        ],\n        \"summary\": \"Fetch a list of cities\",\n        \"description\": \"Endpoint used for getting a list of cities\",\n        \"operationId\": \"e8d501fe8bfdc517ca4673c0d2a0e768\",\n        \"parameters\": [\n          {\n            \"name\": \"search\",\n            \"in\": \"query\",\n            \"description\": \"Value used to filter the cities\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"string\",\n              \"additionalProperties\": false\n            }\n          },\n          {\n            \"name\": \"start\",\n            \"in\": \"query\",\n            \"description\": \"Pagination start offset\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"integer\",\n              \"additionalProperties\": false\n            }\n          },\n          {\n            \"name\": \"limit\",\n            \"in\": \"query\",\n            \"description\": \"Pagination end offset\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"integer\",\n              \"additionalProperties\": false\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Successfull response\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"properties\": {\n                    \"data\": {\n                      \"type\": \"array\",\n                      \"items\": {\n                        \"$ref\": \"#/components/schemas/CityEntity\"\n                      }\n                    }\n                  },\n                  \"type\": \"object\"\n                }\n              }\n            }\n          }\n        }\n      },\n      \"post\": {\n        \"tags\": [\n          \"City\"\n        ],\n        \"summary\": \"Create a city\",\n        \"description\": \"Endpoint used for creating a city\",\n        \"operationId\": \"adacc285c00288c4c0bf045b5839f6c5\",\n        \"requestBody\": {\n          \"description\": \"Required parameters\",\n          \"required\": true,\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"properties\": {\n                  \"name\": {\n                    \"type\": \"string\"\n                  },\n                  \"country_id\": {\n                    \"type\": \"string\"\n                  }\n                },\n                \"type\": \"object\"\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"201\": {\n            \"description\": \"Successfull response\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"properties\": {\n                    \"data\": {\n                      \"$ref\": \"#/components/schemas/CityEntity\"\n                    }\n                  },\n                  \"type\": \"object\"\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"description\": \"Missing required arguments\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/error_response\"\n                }\n              }\n            }\n          },\n          \"401\": {\n            \"description\": \"Invalid or missing token\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/error_response\"\n                }\n              }\n            }\n          }\n        },\n        \"security\": [\n          {\n            \"bearer\": []\n          }\n        ]\n      }\n    },\n    \"/city/{cityID}\": {\n      \"get\": {\n        \"tags\": [\n          \"City\"\n        ],\n        \"summary\": \"Fetch a single city\",\n        \"description\": \"Endpoint used for get information about a single city\",\n        \"operationId\": \"c3217ec998b12b7ced2316cdce2a1d6f\",\n        \"parameters\": [\n          {\n            \"name\": \"cityID\",\n            \"in\": \"path\",\n            \"description\": \"ID of a city we are looking for\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\",\n              \"additionalProperties\": false\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Successfull response\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"properties\": {\n                    \"data\": {\n                      \"$ref\": \"#/components/schemas/CityEntity\"\n                    }\n                  },\n                  \"type\": \"object\"\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"description\": \"Missing required arguments\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/error_response\"\n                }\n              }\n            }\n          },\n          \"404\": {\n            \"description\": \"City not found\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/error_response\"\n                }\n              }\n            }\n          }\n        }\n      },\n      \"delete\": {\n        \"tags\": [\n          \"City\"\n        ],\n        \"summary\": \"Delete city\",\n        \"description\": \"Endpoint used for deleting a city\",\n        \"operationId\": \"3728f52c10130ab55512ed04c7db7ee7\",\n        \"parameters\": [\n          {\n            \"name\": \"cityID\",\n            \"in\": \"path\",\n            \"description\": \"ID of a city being updated\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\",\n              \"additionalProperties\": false\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Successfull response\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"properties\": {\n                    \"data\": {\n                      \"$ref\": \"#/components/schemas/CityEntity\"\n                    }\n                  },\n                  \"type\": \"object\"\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"description\": \"Missing required arguments\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/error_response\"\n                }\n              }\n            }\n          },\n          \"401\": {\n            \"description\": \"Invalid or missing token\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/error_response\"\n                }\n              }\n            }\n          }\n        },\n        \"security\": [\n          {\n            \"bearer\": []\n          }\n        ]\n      },\n      \"patch\": {\n        \"tags\": [\n          \"City\"\n        ],\n        \"summary\": \"Update city\",\n        \"description\": \"Endpoint used for updating city information\",\n        \"operationId\": \"4fd8a9400071d1b95c78581570f67d57\",\n        \"parameters\": [\n          {\n            \"name\": \"cityID\",\n            \"in\": \"path\",\n            \"description\": \"ID of a city being updated\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\",\n              \"additionalProperties\": false\n            }\n          }\n        ],\n        \"requestBody\": {\n          \"description\": \"Required parameters\",\n          \"required\": true,\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"properties\": {\n                  \"name\": {\n                    \"type\": \"string\"\n                  }\n                },\n                \"type\": \"object\"\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Successfull response\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"properties\": {\n                    \"data\": {\n                      \"$ref\": \"#/components/schemas/CityEntity\"\n                    }\n                  },\n                  \"type\": \"object\"\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"description\": \"Missing required arguments\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/error_response\"\n                }\n              }\n            }\n          },\n          \"401\": {\n            \"description\": \"Invalid or missing token\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/error_response\"\n                }\n              }\n            }\n          }\n        },\n        \"security\": [\n          {\n            \"bearer\": []\n          }\n        ]\n      }\n    },\n    \"/country\": {\n      \"get\": {\n        \"tags\": [\n          \"Country\"\n        ],\n        \"summary\": \"Fetch a list of countries\",\n        \"description\": \"Endpoint used for get a list of countries\",\n        \"operationId\": \"9b4823deea0af7e0075376465e07cc05\",\n        \"parameters\": [\n          {\n            \"name\": \"search\",\n            \"in\": \"query\",\n            \"description\": \"Value used to filter the countries\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"string\",\n              \"additionalProperties\": false\n            }\n          },\n          {\n            \"name\": \"start\",\n            \"in\": \"query\",\n            \"description\": \"Pagination start offset\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"integer\",\n              \"additionalProperties\": false\n            }\n          },\n          {\n            \"name\": \"limit\",\n            \"in\": \"query\",\n            \"description\": \"Pagination end offset\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"integer\",\n              \"additionalProperties\": false\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Successfull filtered countries\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"properties\": {\n                    \"data\": {\n                      \"type\": \"array\",\n                      \"items\": {\n                        \"$ref\": \"#/components/schemas/CountryEntity\"\n                      }\n                    }\n                  },\n                  \"type\": \"object\"\n                }\n              }\n            }\n          }\n        }\n      },\n      \"post\": {\n        \"tags\": [\n          \"Country\"\n        ],\n        \"summary\": \"Add new country\",\n        \"description\": \"Endpoint used for adding a new country\",\n        \"operationId\": \"2b7487fe8a3b5ecc1afe3b81f8f80fb3\",\n        \"requestBody\": {\n          \"description\": \"Required parameters\",\n          \"required\": true,\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"properties\": {\n                  \"name\": {\n                    \"type\": \"string\"\n                  },\n                  \"code\": {\n                    \"type\": \"string\"\n                  }\n                },\n                \"type\": \"object\"\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"201\": {\n            \"description\": \"Successfull response\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"properties\": {\n                    \"data\": {\n                      \"$ref\": \"#/components/schemas/CountryEntity\"\n                    }\n                  },\n                  \"type\": \"object\"\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"description\": \"Missing required arguments\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/error_response\"\n                }\n              }\n            }\n          },\n          \"401\": {\n            \"description\": \"Invalid or missing token\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/error_response\"\n                }\n              }\n            }\n          }\n        },\n        \"security\": [\n          {\n            \"bearer\": []\n          }\n        ]\n      }\n    },\n    \"/country/{countryID}\": {\n      \"get\": {\n        \"tags\": [\n          \"Country\"\n        ],\n        \"summary\": \"Fetch a information about a specific country\",\n        \"description\": \"Endpoint used for getting information about a specific country\",\n        \"operationId\": \"00b4848e7c68b94bfce85a91ff23d9ea\",\n        \"parameters\": [\n          {\n            \"name\": \"countryID\",\n            \"in\": \"path\",\n            \"description\": \"ID of a country\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\",\n              \"additionalProperties\": false\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Successfull response\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"properties\": {\n                    \"data\": {\n                      \"$ref\": \"#/components/schemas/CountryEntity\"\n                    }\n                  },\n                  \"type\": \"object\"\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"description\": \"Missing required arguments\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/error_response\"\n                }\n              }\n            }\n          }\n        }\n      },\n      \"delete\": {\n        \"tags\": [\n          \"Country\"\n        ],\n        \"summary\": \"Delete country\",\n        \"description\": \"Endpoint used for deleting a country\",\n        \"operationId\": \"cddc8735b2a77841fee97c210153c20a\",\n        \"parameters\": [\n          {\n            \"name\": \"countryID\",\n            \"in\": \"path\",\n            \"description\": \"ID of a country being updated\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"integer\",\n              \"additionalProperties\": false\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Successfull response\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"properties\": {\n                    \"data\": {\n                      \"$ref\": \"#/components/schemas/CountryEntity\"\n                    }\n                  },\n                  \"type\": \"object\"\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"description\": \"Missing required arguments\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/error_response\"\n                }\n              }\n            }\n          },\n          \"401\": {\n            \"description\": \"Invalid or missing token\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/error_response\"\n                }\n              }\n            }\n          },\n          \"404\": {\n            \"description\": \"Country not found\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/error_response\"\n                }\n              }\n            }\n          }\n        },\n        \"security\": [\n          {\n            \"bearer\": []\n          }\n        ]\n      },\n      \"patch\": {\n        \"tags\": [\n          \"Country\"\n        ],\n        \"summary\": \"Update country\",\n        \"description\": \"Endpoint used for updateing country information\",\n        \"operationId\": \"69646430a79ad2e443a3df9538d77022\",\n        \"parameters\": [\n          {\n            \"name\": \"countryID\",\n            \"in\": \"path\",\n            \"description\": \"ID of a country being updated\",\n            \"required\": true\n          }\n        ],\n        \"requestBody\": {\n          \"description\": \"Required parameters\",\n          \"required\": true,\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"properties\": {\n                  \"name\": {\n                    \"type\": \"string\"\n                  },\n                  \"code\": {\n                    \"type\": \"string\"\n                  }\n                },\n                \"type\": \"object\"\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Successfull response\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"properties\": {\n                    \"data\": {\n                      \"$ref\": \"#/components/schemas/CountryEntity\"\n                    }\n                  },\n                  \"type\": \"object\"\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"description\": \"Missing required arguments\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/error_response\"\n                }\n              }\n            }\n          },\n          \"404\": {\n            \"description\": \"Country not found\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/error_response\"\n                }\n              }\n            }\n          },\n          \"401\": {\n            \"description\": \"Invalid or missing token\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/error_response\"\n                }\n              }\n            }\n          }\n        },\n        \"security\": [\n          {\n            \"bearer\": []\n          }\n        ]\n      }\n    },\n    \"/restaurant\": {\n      \"get\": {\n        \"tags\": [\n          \"Restaurant\"\n        ],\n        \"summary\": \"Fetch a list of restaurants\",\n        \"description\": \"Endpoint used for getting a list of restaurants\",\n        \"operationId\": \"c392f8b3211f6ae14145a081130f2bae\",\n        \"parameters\": [\n          {\n            \"name\": \"search\",\n            \"in\": \"query\",\n            \"description\": \"Value used to filter the result\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"string\",\n              \"additionalProperties\": false\n            }\n          },\n          {\n            \"name\": \"start\",\n            \"in\": \"query\",\n            \"description\": \"Pagination start offset\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"integer\",\n              \"additionalProperties\": false\n            }\n          },\n          {\n            \"name\": \"limit\",\n            \"in\": \"query\",\n            \"description\": \"Pagination end offset\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"integer\",\n              \"additionalProperties\": false\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Successfull response\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"properties\": {\n                    \"data\": {\n                      \"type\": \"array\",\n                      \"items\": {\n                        \"$ref\": \"#/components/schemas/RestaurantEntity\"\n                      }\n                    }\n                  },\n                  \"type\": \"object\"\n                }\n              }\n            }\n          }\n        }\n      },\n      \"post\": {\n        \"tags\": [\n          \"Restaurant\"\n        ],\n        \"summary\": \"Create a restaurant\",\n        \"description\": \"Endpoint used for creating a restaurant\",\n        \"operationId\": \"13d68ed6899784ad0c0d32fca4112ff1\",\n        \"requestBody\": {\n          \"description\": \"Required parameters\",\n          \"required\": true,\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"properties\": {\n                  \"city_id\": {\n                    \"type\": \"string\"\n                  },\n                  \"name\": {\n                    \"type\": \"string\"\n                  },\n                  \"adress\": {\n                    \"type\": \"string\"\n                  },\n                  \"phone\": {\n                    \"type\": \"string\"\n                  },\n                  \"email\": {\n                    \"type\": \"string\"\n                  },\n                  \"delivery\": {\n                    \"type\": \"number\"\n                  },\n                  \"takeout\": {\n                    \"type\": \"number\"\n                  },\n                  \"geo_lat\": {\n                    \"type\": \"number\"\n                  },\n                  \"geo_long\": {\n                    \"type\": \"number\"\n                  }\n                },\n                \"type\": \"object\"\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"201\": {\n            \"description\": \"Successfull response\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"properties\": {\n                    \"data\": {\n                      \"$ref\": \"#/components/schemas/RestaurantEntity\"\n                    }\n                  },\n                  \"type\": \"object\"\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"description\": \"Missing required arguments\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/error_response\"\n                }\n              }\n            }\n          },\n          \"401\": {\n            \"description\": \"Invalid or missing token\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/error_response\"\n                }\n              }\n            }\n          }\n        },\n        \"security\": [\n          {\n            \"bearer\": []\n          }\n        ]\n      }\n    },\n    \"/restaurant/{restaurantID}\": {\n      \"get\": {\n        \"tags\": [\n          \"Restaurant\"\n        ],\n        \"summary\": \"Fetch a single restaurant\",\n        \"description\": \"Endpoint used for getting a single restaurant information\",\n        \"operationId\": \"158be7735fca0d1e121d8a25b34ee990\",\n        \"parameters\": [\n          {\n            \"name\": \"restaurantID\",\n            \"in\": \"path\",\n            \"description\": \"ID of a restaurant to fetch the information for\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\",\n              \"additionalProperties\": false\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Successfull response\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"properties\": {\n                    \"data\": {\n                      \"type\": \"array\",\n                      \"items\": {\n                        \"$ref\": \"#/components/schemas/RestaurantEntity\"\n                      }\n                    }\n                  },\n                  \"type\": \"object\"\n                }\n              }\n            }\n          }\n        }\n      },\n      \"delete\": {\n        \"tags\": [\n          \"Restaurant\"\n        ],\n        \"summary\": \"Delete a restaurant\",\n        \"description\": \"Endpoint used for deleting a restaurant\",\n        \"operationId\": \"b08188848487544ae76cb956a8a3849c\",\n        \"parameters\": [\n          {\n            \"name\": \"restaurantID\",\n            \"in\": \"path\",\n            \"description\": \"ID of a restaurant to delete from the database\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\",\n              \"additionalProperties\": false\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Successfull response\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"properties\": {\n                    \"data\": {\n                      \"$ref\": \"#/components/schemas/RestaurantEntity\"\n                    }\n                  },\n                  \"type\": \"object\"\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"description\": \"Invalid UUID provided for restaurant ID\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/error_response\"\n                }\n              }\n            }\n          },\n          \"401\": {\n            \"description\": \"Invalid or missing token\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/error_response\"\n                }\n              }\n            }\n          },\n          \"404\": {\n            \"description\": \"Restaurat not found\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/error_response\"\n                }\n              }\n            }\n          }\n        },\n        \"security\": [\n          {\n            \"bearer\": []\n          }\n        ]\n      },\n      \"patch\": {\n        \"tags\": [\n          \"Restaurant\"\n        ],\n        \"summary\": \"Update a restaurant\",\n        \"description\": \"Endpoint used for updating a restaurant\",\n        \"operationId\": \"7bc43a01164b851b1ac41edc30be24be\",\n        \"parameters\": [\n          {\n            \"name\": \"restaurantID\",\n            \"in\": \"path\",\n            \"description\": \"ID of a restaurant to update the information for\",\n            \"required\": true\n          }\n        ],\n        \"requestBody\": {\n          \"description\": \"Required parameters\",\n          \"required\": true,\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"properties\": {\n                  \"city_id\": {\n                    \"type\": \"string\"\n                  },\n                  \"name\": {\n                    \"type\": \"string\"\n                  },\n                  \"adress\": {\n                    \"nullable\": true,\n                    \"type\": \"string\"\n                  },\n                  \"phone\": {\n                    \"nullable\": true,\n                    \"type\": \"string\"\n                  },\n                  \"email\": {\n                    \"nullable\": true,\n                    \"type\": \"string\"\n                  },\n                  \"delivery\": {\n                    \"nullable\": true,\n                    \"type\": \"number\"\n                  },\n                  \"takeout\": {\n                    \"nullable\": true,\n                    \"type\": \"number\"\n                  },\n                  \"geo_lat\": {\n                    \"nullable\": true,\n                    \"type\": \"number\"\n                  },\n                  \"geo_long\": {\n                    \"nullable\": true,\n                    \"type\": \"number\"\n                  }\n                },\n                \"type\": \"object\"\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Successfull response\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"properties\": {\n                    \"data\": {\n                      \"$ref\": \"#/components/schemas/RestaurantEntity\"\n                    }\n                  },\n                  \"type\": \"object\"\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"description\": \"Missing required arguments\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/error_response\"\n                }\n              }\n            }\n          },\n          \"401\": {\n            \"description\": \"Invalid or missing token\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/error_response\"\n                }\n              }\n            }\n          }\n        },\n        \"security\": [\n          {\n            \"bearer\": []\n          }\n        ]\n      }\n    },\n    \"/user\": {\n      \"get\": {\n        \"tags\": [\n          \"User\"\n        ],\n        \"summary\": \"Filter users endpoint\",\n        \"description\": \"Endpoint used to filters users based on the value of search parameter\",\n        \"operationId\": \"080c0fa8d56c8d9f1cd023294c4bf571\",\n        \"parameters\": [\n          {\n            \"name\": \"search\",\n            \"in\": \"query\",\n            \"description\": \"Value used to filter the result\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"string\",\n              \"additionalProperties\": false\n            }\n          },\n          {\n            \"name\": \"start\",\n            \"in\": \"query\",\n            \"description\": \"Pagination start offset\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"integer\",\n              \"additionalProperties\": false\n            }\n          },\n          {\n            \"name\": \"limit\",\n            \"in\": \"query\",\n            \"description\": \"Pagination end offset\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"integer\",\n              \"additionalProperties\": false\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Successfull result\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"properties\": {\n                    \"data\": {\n                      \"type\": \"array\",\n                      \"items\": {\n                        \"$ref\": \"#/components/schemas/UserEntity\"\n                      }\n                    }\n                  },\n                  \"type\": \"object\"\n                }\n              }\n            }\n          }\n        }\n      },\n      \"put\": {\n        \"tags\": [\n          \"User\"\n        ],\n        \"summary\": \"Update information about currently logged in user\",\n        \"description\": \"Endpoint used for updating information about currently logged in user based on the JWT token value\",\n        \"operationId\": \"2df612e584ab8bd4a619fb6947ae57b6\",\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Successfull result\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"properties\": {\n                    \"data\": {\n                      \"$ref\": \"#/components/schemas/UserEntity\"\n                    }\n                  },\n                  \"type\": \"object\"\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"description\": \"Failed parameter validation\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/error_response\"\n                }\n              }\n            }\n          },\n          \"401\": {\n            \"description\": \"Invalid or missing token\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/error_response\"\n                }\n              }\n            }\n          },\n          \"404\": {\n            \"description\": \"User not found\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/error_response\"\n                }\n              }\n            }\n          },\n          \"406\": {\n            \"description\": \"Invalid file type\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/error_response\"\n                }\n              }\n            }\n          },\n          \"413\": {\n            \"description\": \"Uploaded file was too large\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/error_response\"\n                }\n              }\n            }\n          },\n          \"500\": {\n            \"description\": \"Fail upload failed or any other non specific error\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/error_response\"\n                }\n              }\n            }\n          }\n        },\n        \"security\": [\n          {\n            \"bearer\": []\n          }\n        ]\n      },\n      \"delete\": {\n        \"tags\": [\n          \"User\"\n        ],\n        \"summary\": \"Delete account\",\n        \"description\": \"Endpoint used for deleting a user account\",\n        \"operationId\": \"34206cdcf43ef1c515c6abc086c0f883\",\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Successfull result\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"properties\": {\n                    \"data\": {\n                      \"$ref\": \"#/components/schemas/response_with_message_only\"\n                    }\n                  },\n                  \"type\": \"object\"\n                }\n              }\n            }\n          },\n          \"401\": {\n            \"description\": \"Invalid or missing token\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/error_response\"\n                }\n              }\n            }\n          },\n          \"498\": {\n            \"description\": \"Invalid token provided\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/error_response\"\n                }\n              }\n            }\n          },\n          \"404\": {\n            \"description\": \"User not found\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/error_response\"\n                }\n              }\n            }\n          },\n          \"500\": {\n            \"description\": \"Email not sent or any other excpetion\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/error_response\"\n                }\n              }\n            }\n          }\n        },\n        \"security\": [\n          {\n            \"bearer\": []\n          }\n        ]\n      }\n    },\n    \"/user/{userID}\": {\n      \"get\": {\n        \"tags\": [\n          \"User\"\n        ],\n        \"summary\": \"Fetch information about a specific user\",\n        \"description\": \"Endpoint used for fetch information about a specific user\",\n        \"operationId\": \"f887ec73e6779216cdad8b4ccb710b14\",\n        \"parameters\": [\n          {\n            \"name\": \"userID\",\n            \"in\": \"path\",\n            \"description\": \"\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"integer\",\n              \"additionalProperties\": false\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Successfull result\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"properties\": {\n                    \"data\": {\n                      \"$ref\": \"#/components/schemas/UserEntity\"\n                    }\n                  },\n                  \"type\": \"object\"\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"description\": \"Invalid UUID provided for userID\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/error_response\"\n                }\n              }\n            }\n          },\n          \"404\": {\n            \"description\": \"User not found\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/error_response\"\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  },\n  \"components\": {\n    \"schemas\": {\n      \"CityEntity\": {\n        \"description\": \"CityEntity Class\",\n        \"properties\": {\n          \"id\": {\n            \"type\": \"string\"\n          },\n          \"name\": {\n            \"type\": \"string\"\n          },\n          \"country_id\": {\n            \"type\": \"string\"\n          },\n          \"country_name\": {\n            \"nullable\": true,\n            \"type\": \"string\"\n          }\n        },\n        \"type\": \"object\"\n      },\n      \"CountryEntity\": {\n        \"description\": \"CountryEntity Class\",\n        \"properties\": {\n          \"id\": {\n            \"type\": \"string\"\n          },\n          \"name\": {\n            \"type\": \"string\"\n          },\n          \"code\": {\n            \"type\": \"string\"\n          }\n        },\n        \"type\": \"object\"\n      },\n      \"RestaurantEntity\": {\n        \"description\": \"RestaurantEntity Class\",\n        \"properties\": {\n          \"id\": {\n            \"type\": \"string\"\n          },\n          \"city_id\": {\n            \"type\": \"string\"\n          },\n          \"name\": {\n            \"type\": \"string\"\n          },\n          \"address\": {\n            \"nullable\": true,\n            \"type\": \"string\"\n          },\n          \"phone\": {\n            \"nullable\": true,\n            \"type\": \"string\"\n          },\n          \"email\": {\n            \"nullable\": true,\n            \"type\": \"string\"\n          },\n          \"delivery\": {\n            \"type\": \"boolean\"\n          },\n          \"takeout\": {\n            \"type\": \"boolean\"\n          },\n          \"geo_lat\": {\n            \"nullable\": true,\n            \"type\": \"number\"\n          },\n          \"geo_long\": {\n            \"nullable\": true,\n            \"type\": \"number\"\n          },\n          \"city_name\": {\n            \"nullable\": true,\n            \"type\": \"string\"\n          }\n        },\n        \"type\": \"object\"\n      },\n      \"UserEntity\": {\n        \"description\": \"UserEntity class\",\n        \"properties\": {\n          \"id\": {\n            \"type\": \"string\"\n          },\n          \"name\": {\n            \"type\": \"string\"\n          },\n          \"email\": {\n            \"type\": \"string\"\n          },\n          \"username\": {\n            \"type\": \"string\"\n          },\n          \"image\": {\n            \"nullable\": true,\n            \"type\": \"string\"\n          }\n        },\n        \"type\": \"object\"\n      },\n      \"error_response\": {\n        \"properties\": {\n          \"class\": {\n            \"type\": \"string\"\n          },\n          \"message\": {\n            \"type\": \"string\"\n          },\n          \"field\": {\n            \"type\": \"string\"\n          }\n        },\n        \"type\": \"object\"\n      },\n      \"response_with_message_only\": {\n        \"description\": \"Swagger doc block\",\n        \"properties\": {\n          \"message\": {\n            \"type\": \"string\"\n          }\n        },\n        \"type\": \"object\"\n      }\n    },\n    \"securitySchemes\": {\n      \"bearer\": {\n        \"type\": \"http\",\n        \"scheme\": \"bearer\"\n      }\n    }\n  }\n}",
			"canonicalURL": "/github.com/gigili/good-food-tracker-api@d08a55dbad17845d46355026409c21e5013b6db1/-/blob/swagger.json",
			"externalURLs": [
				{
					"url": "https://github.com/gigili/good-food-tracker-api/blob/d08a55dbad17845d46355026409c21e5013b6db1/swagger.json",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "parse: parse spec: parse operations: paths: /restaurant/{restaurantID}: patch: operation \"7bc43a01164b851b1ac41edc30be24be\": parameters: parse parameter \"restaurantID\": parameter MUST contain either a schema property, or a content property"
}