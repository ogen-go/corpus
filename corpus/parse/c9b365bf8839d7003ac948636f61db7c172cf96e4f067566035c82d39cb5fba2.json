{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/AliceO2Group/Bookkeeping"
		},
		"file": {
			"name": "swagger.yaml",
			"size": 0,
			"path": "go-api-client/src/go-client-generated/api/swagger.yaml",
			"byteSize": 95907,
			"content": "openapi: 3.0.0\ninfo:\n  title: ALICE Bookkeeping\n  license:\n    name: GNU General Public License v3.0\n    url: http://alice-o2.web.cern.ch/license\n  version: 0.0.0\nservers:\n- url: /api\nsecurity:\n- ApiKeyAuth: []\npaths:\n  /:\n    get:\n      summary: Get server information\n      operationId: getServerInformation\n      responses:\n        \"200\":\n          description: API information\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ApiInformation'\n        default:\n          description: Unexpected Error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Errors'\n  /attachments:\n    post:\n      tags:\n      - attachment\n      summary: Create a new attachment on a log\n      operationId: createAttachment\n      requestBody:\n        $ref: '#/components/requestBodies/CreateAttachments'\n      responses:\n        \"201\":\n          description: Expected response to a valid request.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ArrayOfAttachmentsResponse'\n        \"400\":\n          description: Bad Request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Errors'\n        \"404\":\n          description: Not Found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Errors'\n        default:\n          description: Unexpected Error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Errors'\n  /attachments/{attachmentId}:\n    get:\n      tags:\n      - attachment\n      summary: Get one specific attachment\n      operationId: getAttachment\n      parameters:\n      - name: attachmentId\n        in: path\n        description: The id of the attached to retrieve\n        required: true\n        style: simple\n        explode: false\n        schema:\n          $ref: '#/components/schemas/EntityId'\n      responses:\n        \"200\":\n          description: Expected response to a valid request.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ArrayOfAttachmentsResponse'\n        \"400\":\n          description: Bad Request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Errors'\n        \"404\":\n          description: Not Found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Errors'\n        default:\n          description: Unexpected Error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Errors'\n  /environments:\n    get:\n      tags:\n      - environment\n      summary: Fetches all the environments\n      operationId: listEnvironments\n      responses:\n        \"200\":\n          description: Expected response to a valid request.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ArrayOfEnvironmentsResponse'\n        \"400\":\n          description: Bad Request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Errors'\n        \"403\":\n          description: Forbidden\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Errors'\n        default:\n          description: Unexpected Error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Errors'\n    post:\n      tags:\n      - environment\n      summary: Creation of the environment object.\n      operationId: createEnvironment\n      requestBody:\n        $ref: '#/components/requestBodies/CreateEnvironment'\n      responses:\n        \"201\":\n          description: Expected response to a valid request.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/EnvironmentResponse'\n        \"400\":\n          description: Bad Request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Errors'\n        \"409\":\n          description: Conflict\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Errors'\n        default:\n          description: Unexpected Error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Errors'\n  /environments/{envId}:\n    put:\n      tags:\n      - environment\n      summary: Update of the environment object.\n      operationId: replaceEnvironment\n      parameters:\n      - name: envId\n        in: path\n        description: The id of the environment to receive\n        required: true\n        style: simple\n        explode: false\n        schema:\n          $ref: '#/components/schemas/EnvironmentId'\n      requestBody:\n        $ref: '#/components/requestBodies/UpdateEnvironment'\n      responses:\n        \"201\":\n          description: Expected response to a valid request.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/EnvironmentResponse'\n        \"400\":\n          description: Bad Request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Errors'\n        \"409\":\n          description: Conflict\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Errors'\n        default:\n          description: Unexpected Error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Errors'\n  /flps:\n    get:\n      tags:\n      - flp\n      summary: List all flps\n      operationId: listFlps\n      responses:\n        \"200\":\n          description: Expected response to a valid request.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ArrayOfFlpsResponse'\n        \"400\":\n          description: Bad Request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Errors'\n        default:\n          description: Unexpected Error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Errors'\n    post:\n      tags:\n      - flp\n      summary: Adds a new flp\n      operationId: createFlp\n      requestBody:\n        $ref: '#/components/requestBodies/CreateFlp'\n      responses:\n        \"201\":\n          description: Expected response to a valid request.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/FlpResponse'\n        \"400\":\n          description: Bad Request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Errors'\n        default:\n          description: Unexpected Error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Errors'\n  /flps/{flpName}/runs/{runNumber}:\n    get:\n      tags:\n      - flp\n      summary: Gets a flp by Name\n      operationId: getFlpById\n      parameters:\n      - name: flpName\n        in: path\n        description: The id of the flp to retrieve\n        required: true\n        style: simple\n        explode: false\n        schema:\n          $ref: '#/components/schemas/FlpName'\n      - name: runNumber\n        in: path\n        description: The id of the runNumber to retrieve\n        required: true\n        style: simple\n        explode: false\n        schema:\n          $ref: '#/components/schemas/EntityId'\n      responses:\n        \"200\":\n          description: Expected response to a valid request.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/FlpResponse'\n        \"400\":\n          description: Bad Request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Errors'\n        \"404\":\n          description: Not Found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Errors'\n        default:\n          description: Unexpected Error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Errors'\n    patch:\n      tags:\n      - flp\n      summary: Update an existing flp\n      operationId: updateFlp\n      parameters:\n      - name: flpName\n        in: path\n        description: The id of the flp to retrieve\n        required: true\n        style: simple\n        explode: false\n        schema:\n          $ref: '#/components/schemas/FlpName'\n      - name: runNumber\n        in: path\n        description: The id of the runNumber to retrieve\n        required: true\n        style: simple\n        explode: false\n        schema:\n          $ref: '#/components/schemas/EntityId'\n      requestBody:\n        $ref: '#/components/requestBodies/UpdateFlp'\n      responses:\n        \"200\":\n          description: Expected response to a valid request.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/FlpResponse'\n        \"400\":\n          description: Bad Request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Errors'\n        \"404\":\n          description: Not Found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Errors'\n        default:\n          description: Unexpected Error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Errors'\n  /logs:\n    get:\n      tags:\n      - log\n      summary: List all logs\n      operationId: listLogs\n      responses:\n        \"200\":\n          description: Expected response to a valid request.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ArrayOfLogsResponse'\n        \"400\":\n          description: Bad Request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Errors'\n        default:\n          description: Unexpected Error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Errors'\n    post:\n      tags:\n      - log\n      summary: Adds a new log\n      operationId: createLog\n      requestBody:\n        $ref: '#/components/requestBodies/CreateLog'\n      responses:\n        \"201\":\n          description: Expected response to a valid request.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/LogResponse'\n        \"400\":\n          description: Bad Request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Errors'\n        default:\n          description: Unexpected Error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Errors'\n  /logs/{logId}:\n    get:\n      tags:\n      - log\n      summary: Gets a log by Id\n      operationId: getLogById\n      parameters:\n      - name: logId\n        in: path\n        description: The id of the log to retrieve\n        required: true\n        style: simple\n        explode: false\n        schema:\n          $ref: '#/components/schemas/EntityId'\n      responses:\n        \"200\":\n          description: Expected response to a valid request.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/LogResponse'\n        \"400\":\n          description: Bad Request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Errors'\n        \"404\":\n          description: Not Found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Errors'\n        default:\n          description: Unexpected Error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Errors'\n  /logs/{logId}/attachments:\n    get:\n      tags:\n      - log\n      summary: Get all attachments associated with a log\n      operationId: listLogAttachments\n      parameters:\n      - name: logId\n        in: path\n        description: The id of the log to retrieve\n        required: true\n        style: simple\n        explode: false\n        schema:\n          $ref: '#/components/schemas/EntityId'\n      responses:\n        \"200\":\n          description: Expected response to a valid request.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ArrayOfAttachmentsResponse'\n        \"400\":\n          description: Bad Request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Errors'\n        \"404\":\n          description: Not Found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Errors'\n        default:\n          description: Unexpected Error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Errors'\n  /logs/{logId}/attachments/{attachmentId}:\n    get:\n      tags:\n      - log\n      summary: Get one specific attachment associated with a log\n      operationId: getLogAttachment\n      parameters:\n      - name: logId\n        in: path\n        description: The id of the log to retrieve\n        required: true\n        style: simple\n        explode: false\n        schema:\n          $ref: '#/components/schemas/EntityId'\n      - name: attachmentId\n        in: path\n        description: The id of the attached to retrieve\n        required: true\n        style: simple\n        explode: false\n        schema:\n          $ref: '#/components/schemas/EntityId'\n      responses:\n        \"200\":\n          description: Expected response to a valid request.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AttachmentResponse'\n        \"400\":\n          description: Bad Request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Errors'\n        \"404\":\n          description: Not Found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Errors'\n        default:\n          description: Unexpected Error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Errors'\n  /logs/{logId}/tags:\n    get:\n      tags:\n      - log\n      summary: Lists all tags associated with a log\n      operationId: listTagsByLogId\n      parameters:\n      - name: logId\n        in: path\n        description: The id of the log to retrieve\n        required: true\n        style: simple\n        explode: false\n        schema:\n          $ref: '#/components/schemas/EntityId'\n      responses:\n        \"200\":\n          description: Expected response to a valid request.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ArrayOfTagsResponse'\n        \"400\":\n          description: Bad Request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Errors'\n        \"404\":\n          description: Not Found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Errors'\n        default:\n          description: Unexpected Error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Errors'\n  /logs/{logId}/tree:\n    get:\n      tags:\n      - log\n      summary: Get the Log tree for a given Log\n      operationId: getLogTree\n      parameters:\n      - name: logId\n        in: path\n        description: The id of the log to retrieve\n        required: true\n        style: simple\n        explode: false\n        schema:\n          $ref: '#/components/schemas/EntityId'\n      responses:\n        \"200\":\n          description: Expected response to a valid request.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/LogTreeResponse'\n        \"400\":\n          description: Bad Request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Errors'\n        \"404\":\n          description: Not Found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Errors'\n        default:\n          description: Unexpected Error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Errors'\n  /runs:\n    get:\n      tags:\n      - run\n      summary: List all runs\n      operationId: listRuns\n      responses:\n        \"200\":\n          description: Expected response to a valid request.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ArrayOfRunsResponse'\n        \"400\":\n          description: Bad Request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Errors'\n        default:\n          description: Unexpected Error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Errors'\n    post:\n      tags:\n      - run\n      summary: Creates a run\n      operationId: createRun\n      requestBody:\n        $ref: '#/components/requestBodies/CreateRun'\n      responses:\n        \"201\":\n          description: Expected response to a valid request.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RunResponse'\n        \"400\":\n          description: Bad Request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Errors'\n        \"409\":\n          description: Conflict\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Errors'\n        default:\n          description: Unexpected Error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Errors'\n  /runs/{runId}:\n    get:\n      tags:\n      - run\n      summary: Gets a run by Id\n      operationId: getRunById\n      parameters:\n      - name: runId\n        in: path\n        description: The id of the run to retrieve\n        required: true\n        style: simple\n        explode: false\n        schema:\n          $ref: '#/components/schemas/EntityId'\n      responses:\n        \"200\":\n          description: Expected response to a valid request.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RunResponse'\n        \"400\":\n          description: Bad Request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Errors'\n        \"404\":\n          description: Not Found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Errors'\n        default:\n          description: Unexpected Error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Errors'\n    patch:\n      tags:\n      - run\n      summary: Updates certain fields of a run\n      operationId: updateRun\n      parameters:\n      - name: runId\n        in: path\n        description: The id of the run to retrieve\n        required: true\n        style: simple\n        explode: false\n        schema:\n          $ref: '#/components/schemas/EntityId'\n      requestBody:\n        $ref: '#/components/requestBodies/UpdateRun'\n      responses:\n        \"201\":\n          description: Expected response to a valid request.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RunResponse'\n        \"400\":\n          description: Bad Request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Errors'\n        \"409\":\n          description: Conflict\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Errors'\n        default:\n          description: Unexpected Error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Errors'\n  /status:\n    get:\n      summary: Get deploy information\n      operationId: getDeployInformation\n      responses:\n        \"200\":\n          description: Deploy information\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DeployInformation'\n        default:\n          description: Unexpected Error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Errors'\n  /subsystems:\n    get:\n      tags:\n      - subsystem\n      summary: List all subsystems\n      operationId: listSubsystems\n      responses:\n        \"200\":\n          description: Expected response to a valid request.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ArrayOfSubsystemsResponse'\n        \"400\":\n          description: Bad Request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Errors'\n        default:\n          description: Unexpected Error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Errors'\n    post:\n      tags:\n      - subsystem\n      summary: Adds a new subsystem\n      operationId: createSubsystem\n      requestBody:\n        $ref: '#/components/requestBodies/CreateSubsystem'\n      responses:\n        \"201\":\n          description: Expected response to a valid request.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/SubsystemResponse'\n        \"400\":\n          description: Bad Request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Errors'\n        \"409\":\n          description: Conflict\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Errors'\n        default:\n          description: Unexpected Error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Errors'\n  /subsystems/{subsystemId}:\n    get:\n      tags:\n      - subsystem\n      summary: Get a subsystem by Id\n      operationId: getSubsystem\n      parameters:\n      - name: subsystemId\n        in: path\n        description: The id of the subsystem to retrieve\n        required: true\n        style: simple\n        explode: false\n        schema:\n          $ref: '#/components/schemas/EntityId'\n      responses:\n        \"200\":\n          description: Expected response to a valid request.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/SubsystemResponse'\n        \"400\":\n          description: Bad Request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Errors'\n        \"404\":\n          description: Not Found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Errors'\n        default:\n          description: Unexpected Error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Errors'\n    delete:\n      tags:\n      - subsystem\n      summary: Deletes a subsystem by Id\n      operationId: deleteSubsystem\n      parameters:\n      - name: subsystemId\n        in: path\n        description: The id of the subsystem to retrieve\n        required: true\n        style: simple\n        explode: false\n        schema:\n          $ref: '#/components/schemas/EntityId'\n      responses:\n        \"200\":\n          description: Expected response to a valid request.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/SubsystemResponse'\n        \"400\":\n          description: Bad Request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Errors'\n        \"404\":\n          description: Not Found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Errors'\n        default:\n          description: Unexpected Error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Errors'\n  /tags:\n    get:\n      tags:\n      - tag\n      summary: List all tags\n      operationId: listTags\n      responses:\n        \"200\":\n          description: Expected response to a valid request.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ArrayOfTagsResponse'\n        \"400\":\n          description: Bad Request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Errors'\n        default:\n          description: Unexpected Error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Errors'\n    post:\n      tags:\n      - tag\n      summary: Adds a new tag\n      operationId: createTag\n      requestBody:\n        $ref: '#/components/requestBodies/CreateTag'\n      responses:\n        \"201\":\n          description: Expected response to a valid request.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/TagResponse'\n        \"400\":\n          description: Bad Request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Errors'\n        \"409\":\n          description: Conflict\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Errors'\n        default:\n          description: Unexpected Error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Errors'\n  /tags/{tagId}:\n    get:\n      tags:\n      - tag\n      summary: Gets a tag by Id\n      operationId: getTagById\n      parameters:\n      - name: tagId\n        in: path\n        description: The id of the tag to retrieve\n        required: true\n        style: simple\n        explode: false\n        schema:\n          $ref: '#/components/schemas/EntityId'\n      responses:\n        \"200\":\n          description: Expected response to a valid request.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/TagResponse'\n        \"400\":\n          description: Bad Request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Errors'\n        \"404\":\n          description: Not Found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Errors'\n        default:\n          description: Unexpected Error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Errors'\n    delete:\n      tags:\n      - tag\n      summary: Deletes a tag by Id\n      operationId: deleteTagById\n      parameters:\n      - name: tagId\n        in: path\n        description: The id of the tag to retrieve\n        required: true\n        style: simple\n        explode: false\n        schema:\n          $ref: '#/components/schemas/EntityId'\n      responses:\n        \"200\":\n          description: Expected response to a valid request.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/TagResponse'\n        \"400\":\n          description: Bad Request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Errors'\n        \"404\":\n          description: Not Found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Errors'\n        default:\n          description: Unexpected Error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Errors'\n  /tags/{tagId}/logs:\n    get:\n      tags:\n      - tag\n      summary: Gets all logs with this tag id\n      operationId: getLogsByTagId\n      parameters:\n      - name: tagId\n        in: path\n        description: The id of the tag to retrieve\n        required: true\n        style: simple\n        explode: false\n        schema:\n          $ref: '#/components/schemas/EntityId'\n      responses:\n        \"200\":\n          description: Expected response to a valid request.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ArrayOfLogsResponse'\n        \"400\":\n          description: Bad Request\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Errors'\n        \"404\":\n          description: Not Found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Errors'\n        default:\n          description: Unexpected Error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Errors'\ncomponents:\n  schemas:\n    ApiInformation:\n      required:\n      - name\n      - version\n      type: object\n      properties:\n        name:\n          type: string\n          description: Name of the API\n        version:\n          type: string\n          description: Version of the API\n      additionalProperties: false\n      description: API information\n      example:\n        name: name\n        version: version\n    ArrayOfAttachments:\n      type: array\n      description: A list of attachment objects.\n      items:\n        $ref: '#/components/schemas/Attachment'\n      x-schema-name: ArrayOfAttachments\n    ArrayOfAttachmentsResponse:\n      required:\n      - data\n      type: object\n      properties:\n        data:\n          $ref: '#/components/schemas/ArrayOfAttachments'\n      additionalProperties: false\n      description: Response containing multiple attachments.\n      example:\n        data:\n        - originalName: originalName\n          createdAt: 853113599\n          path: path\n          fileName: fileName\n          size: 6\n          logId: null\n          id: 1\n          mimeType: mimeType\n          encoding: encoding\n          updatedAt: 853113599\n        - originalName: originalName\n          createdAt: 853113599\n          path: path\n          fileName: fileName\n          size: 6\n          logId: null\n          id: 1\n          mimeType: mimeType\n          encoding: encoding\n          updatedAt: 853113599\n    ArrayOfEnvironments:\n      type: array\n      description: A list of Environment objects.\n      items:\n        $ref: '#/components/schemas/Environment'\n      x-schema-name: ArrayOfEnvironments\n    ArrayOfEnvironmentsResponse:\n      required:\n      - data\n      type: object\n      properties:\n        data:\n          $ref: '#/components/schemas/ArrayOfEnvironments'\n        meta:\n          $ref: '#/components/schemas/ArrayOfEnvironmentsResponseMeta'\n      additionalProperties: false\n      description: Response containing multiple environments.\n      example:\n        data:\n        - createdAt: 853113599\n          toredownAt: 2000-01-23T04:56:07.000+00:00\n          id: id\n          runs:\n          - epn: false\n            timeTrgStart: 2000-01-23T04:56:07.000+00:00\n            timeO2End: 2000-01-23T04:56:07.000+00:00\n            timeTrgEnd: 2000-01-23T04:56:07.000+00:00\n            runType: physics\n            detectors: CPV\n            bytesReadOut: 0\n            nSubtimeframes: 2\n            createdAt: 853113599\n            nEpns: 5\n            runQuality: good\n            timeO2Start: 2000-01-23T04:56:07.000+00:00\n            environmentId: environmentId\n            dcs: false\n            epnTopology: normal\n            nDetectors: 1\n            nFlps: 5\n            dd_flp: false\n            runNumber: 7\n            id: 1\n            updatedAt: 853113599\n          - epn: false\n            timeTrgStart: 2000-01-23T04:56:07.000+00:00\n            timeO2End: 2000-01-23T04:56:07.000+00:00\n            timeTrgEnd: 2000-01-23T04:56:07.000+00:00\n            runType: physics\n            detectors: CPV\n            bytesReadOut: 0\n            nSubtimeframes: 2\n            createdAt: 853113599\n            nEpns: 5\n            runQuality: good\n            timeO2Start: 2000-01-23T04:56:07.000+00:00\n            environmentId: environmentId\n            dcs: false\n            epnTopology: normal\n            nDetectors: 1\n            nFlps: 5\n            dd_flp: false\n            runNumber: 7\n            id: 1\n            updatedAt: 853113599\n          statusMessage: statusMessage\n          updatedAt: 853113599\n          status: status\n        - createdAt: 853113599\n          toredownAt: 2000-01-23T04:56:07.000+00:00\n          id: id\n          runs:\n          - epn: false\n            timeTrgStart: 2000-01-23T04:56:07.000+00:00\n            timeO2End: 2000-01-23T04:56:07.000+00:00\n            timeTrgEnd: 2000-01-23T04:56:07.000+00:00\n            runType: physics\n            detectors: CPV\n            bytesReadOut: 0\n            nSubtimeframes: 2\n            createdAt: 853113599\n            nEpns: 5\n            runQuality: good\n            timeO2Start: 2000-01-23T04:56:07.000+00:00\n            environmentId: environmentId\n            dcs: false\n            epnTopology: normal\n            nDetectors: 1\n            nFlps: 5\n            dd_flp: false\n            runNumber: 7\n            id: 1\n            updatedAt: 853113599\n          - epn: false\n            timeTrgStart: 2000-01-23T04:56:07.000+00:00\n            timeO2End: 2000-01-23T04:56:07.000+00:00\n            timeTrgEnd: 2000-01-23T04:56:07.000+00:00\n            runType: physics\n            detectors: CPV\n            bytesReadOut: 0\n            nSubtimeframes: 2\n            createdAt: 853113599\n            nEpns: 5\n            runQuality: good\n            timeO2Start: 2000-01-23T04:56:07.000+00:00\n            environmentId: environmentId\n            dcs: false\n            epnTopology: normal\n            nDetectors: 1\n            nFlps: 5\n            dd_flp: false\n            runNumber: 7\n            id: 1\n            updatedAt: 853113599\n          statusMessage: statusMessage\n          updatedAt: 853113599\n          status: status\n        meta:\n          page:\n            pageCount: 9\n            totalCount: 3\n    ArrayOfEnvironmentsResponseMeta:\n      required:\n      - page\n      type: object\n      properties:\n        page:\n          $ref: '#/components/schemas/PaginationMeta'\n      additionalProperties: false\n      description: The metadata related to an array of Environments response.\n      example:\n        page:\n          pageCount: 9\n          totalCount: 3\n    ArrayOfFlps:\n      type: array\n      description: A list of Flp objects.\n      items:\n        $ref: '#/components/schemas/Flp'\n      x-schema-name: ArrayOfFlps\n    ArrayOfFlpsResponse:\n      required:\n      - data\n      type: object\n      properties:\n        data:\n          $ref: '#/components/schemas/ArrayOfFlps'\n        meta:\n          $ref: '#/components/schemas/ArrayOfFlpsResponseMeta'\n      additionalProperties: false\n      description: Response containing multiple flps.\n      example:\n        data:\n        - bytesFairMQReadOut: 6\n          createdAt: 853113599\n          hostname: hostname\n          bytesEquipmentReadOut: 0\n          nTimeframes: 2\n          name: name\n          bytesRecordingReadOut: 5\n          id: 1\n          bytesProcessed: 1\n          updatedAt: 853113599\n        - bytesFairMQReadOut: 6\n          createdAt: 853113599\n          hostname: hostname\n          bytesEquipmentReadOut: 0\n          nTimeframes: 2\n          name: name\n          bytesRecordingReadOut: 5\n          id: 1\n          bytesProcessed: 1\n          updatedAt: 853113599\n        meta:\n          page:\n            pageCount: 9\n            totalCount: 3\n    ArrayOfFlpsResponseMeta:\n      required:\n      - page\n      type: object\n      properties:\n        page:\n          $ref: '#/components/schemas/PaginationMeta'\n      additionalProperties: false\n      description: The metadata related to an array of flps response.\n      example:\n        page:\n          pageCount: 9\n          totalCount: 3\n    ArrayOfLogTrees:\n      type: array\n      description: A list of Log tree objects.\n      items:\n        $ref: '#/components/schemas/LogTree'\n      x-schema-name: ArrayOfLogTrees\n    ArrayOfLogs:\n      type: array\n      description: A list of Log objects.\n      items:\n        $ref: '#/components/schemas/Log'\n      x-schema-name: ArrayOfLogs\n    ArrayOfLogsResponse:\n      required:\n      - data\n      type: object\n      properties:\n        data:\n          $ref: '#/components/schemas/ArrayOfLogs'\n        meta:\n          $ref: '#/components/schemas/ArrayOfLogsResponseMeta'\n      additionalProperties: false\n      description: Response containing multiple logs.\n      example:\n        data:\n        - parentLogId: null\n          attachments:\n          - originalName: originalName\n            createdAt: 853113599\n            path: path\n            fileName: fileName\n            size: 6\n            logId: null\n            id: 1\n            mimeType: mimeType\n            encoding: encoding\n            updatedAt: 853113599\n          - originalName: originalName\n            createdAt: 853113599\n            path: path\n            fileName: fileName\n            size: 6\n            logId: null\n            id: 1\n            mimeType: mimeType\n            encoding: encoding\n            updatedAt: 853113599\n          author:\n            name: name\n            externalId: 0\n            id: 6\n          origin: human\n          title: title\n          subsystems:\n          - createdAt: 853113599\n            name: name\n            id: null\n            updatedAt: 853113599\n          - createdAt: 853113599\n            name: name\n            id: null\n            updatedAt: 853113599\n          tags:\n          - createdAt: 853113599\n            lastEditedName: lastEditedName\n            mattermost: mattermost\n            id: null\n            text: text\n            email: email\n            updatedAt: 853113599\n          - createdAt: 853113599\n            lastEditedName: lastEditedName\n            mattermost: mattermost\n            id: null\n            text: text\n            email: email\n            updatedAt: 853113599\n          createdAt: 853113599\n          replies: 5\n          subtype: run\n          rootLogId: null\n          id: 1\n          text: text\n          runs:\n          - runNumber: 5\n            id: null\n          - runNumber: 5\n            id: null\n          updatedAt: 853113599\n        - parentLogId: null\n          attachments:\n          - originalName: originalName\n            createdAt: 853113599\n            path: path\n            fileName: fileName\n            size: 6\n            logId: null\n            id: 1\n            mimeType: mimeType\n            encoding: encoding\n            updatedAt: 853113599\n          - originalName: originalName\n            createdAt: 853113599\n            path: path\n            fileName: fileName\n            size: 6\n            logId: null\n            id: 1\n            mimeType: mimeType\n            encoding: encoding\n            updatedAt: 853113599\n          author:\n            name: name\n            externalId: 0\n            id: 6\n          origin: human\n          title: title\n          subsystems:\n          - createdAt: 853113599\n            name: name\n            id: null\n            updatedAt: 853113599\n          - createdAt: 853113599\n            name: name\n            id: null\n            updatedAt: 853113599\n          tags:\n          - createdAt: 853113599\n            lastEditedName: lastEditedName\n            mattermost: mattermost\n            id: null\n            text: text\n            email: email\n            updatedAt: 853113599\n          - createdAt: 853113599\n            lastEditedName: lastEditedName\n            mattermost: mattermost\n            id: null\n            text: text\n            email: email\n            updatedAt: 853113599\n          createdAt: 853113599\n          replies: 5\n          subtype: run\n          rootLogId: null\n          id: 1\n          text: text\n          runs:\n          - runNumber: 5\n            id: null\n          - runNumber: 5\n            id: null\n          updatedAt: 853113599\n        meta:\n          page:\n            pageCount: 9\n            totalCount: 3\n    ArrayOfLogsResponseMeta:\n      required:\n      - page\n      type: object\n      properties:\n        page:\n          $ref: '#/components/schemas/PaginationMeta'\n      additionalProperties: false\n      description: The metadata related to an array of logs response.\n      example:\n        page:\n          pageCount: 9\n          totalCount: 3\n    RunNumbers:\n      type: string\n      description: A serialized string of run numbers\n      example: \"1,2,3,4,5,6,7,8\"\n    ArrayOfRuns:\n      type: array\n      description: A list of Run objects.\n      items:\n        $ref: '#/components/schemas/Run'\n      x-schema-name: ArrayOfRuns\n    ArrayOfRunsResponse:\n      required:\n      - data\n      type: object\n      properties:\n        data:\n          $ref: '#/components/schemas/ArrayOfRuns'\n        meta:\n          $ref: '#/components/schemas/ArrayOfRunsResponseMeta'\n      additionalProperties: false\n      description: Response containing multiple runs.\n      example:\n        data:\n        - epn: false\n          timeTrgStart: 2000-01-23T04:56:07.000+00:00\n          timeO2End: 2000-01-23T04:56:07.000+00:00\n          timeTrgEnd: 2000-01-23T04:56:07.000+00:00\n          runType: physics\n          detectors: CPV\n          bytesReadOut: 0\n          nSubtimeframes: 2\n          createdAt: 853113599\n          nEpns: 5\n          runQuality: good\n          timeO2Start: 2000-01-23T04:56:07.000+00:00\n          environmentId: environmentId\n          dcs: false\n          epnTopology: normal\n          nDetectors: 1\n          nFlps: 5\n          dd_flp: false\n          runNumber: 7\n          id: 1\n          updatedAt: 853113599\n        - epn: false\n          timeTrgStart: 2000-01-23T04:56:07.000+00:00\n          timeO2End: 2000-01-23T04:56:07.000+00:00\n          timeTrgEnd: 2000-01-23T04:56:07.000+00:00\n          runType: physics\n          detectors: CPV\n          bytesReadOut: 0\n          nSubtimeframes: 2\n          createdAt: 853113599\n          nEpns: 5\n          runQuality: good\n          timeO2Start: 2000-01-23T04:56:07.000+00:00\n          environmentId: environmentId\n          dcs: false\n          epnTopology: normal\n          nDetectors: 1\n          nFlps: 5\n          dd_flp: false\n          runNumber: 7\n          id: 1\n          updatedAt: 853113599\n        meta:\n          page:\n            pageCount: 9\n            totalCount: 3\n    ArrayOfRunsResponseMeta:\n      required:\n      - page\n      type: object\n      properties:\n        page:\n          $ref: '#/components/schemas/PaginationMeta'\n      additionalProperties: false\n      description: The metadata related to an array of runs response.\n      example:\n        page:\n          pageCount: 9\n          totalCount: 3\n    ArrayOfSubsystems:\n      type: array\n      description: A list of Subsystem objects.\n      items:\n        $ref: '#/components/schemas/Subsystem'\n      x-schema-name: ArrayOfSubsystems\n    ArrayOfSubsystemsResponse:\n      required:\n      - data\n      type: object\n      properties:\n        data:\n          $ref: '#/components/schemas/ArrayOfSubsystems'\n        meta:\n          $ref: '#/components/schemas/ArrayOfSubsystemsResponseMeta'\n      additionalProperties: false\n      description: Response containing multiple subsystems.\n      example:\n        data:\n        - createdAt: 853113599\n          name: name\n          id: null\n          updatedAt: 853113599\n        - createdAt: 853113599\n          name: name\n          id: null\n          updatedAt: 853113599\n        meta:\n          page:\n            pageCount: 9\n            totalCount: 3\n    ArrayOfSubsystemsResponseMeta:\n      required:\n      - page\n      type: object\n      properties:\n        page:\n          $ref: '#/components/schemas/PaginationMeta'\n      additionalProperties: false\n      description: The metadata related to an array of subsystems response.\n      example:\n        page:\n          pageCount: 9\n          totalCount: 3\n    ArrayOfTags:\n      type: array\n      description: A list of Tag objects.\n      items:\n        $ref: '#/components/schemas/Tag'\n      x-schema-name: ArrayOfTags\n    ArrayOfTagsResponse:\n      required:\n      - data\n      type: object\n      properties:\n        data:\n          $ref: '#/components/schemas/ArrayOfTags'\n      additionalProperties: false\n      description: Response containing multiple tags.\n      example:\n        data:\n        - createdAt: 853113599\n          lastEditedName: lastEditedName\n          mattermost: mattermost\n          id: null\n          text: text\n          email: email\n          updatedAt: 853113599\n        - createdAt: 853113599\n          lastEditedName: lastEditedName\n          mattermost: mattermost\n          id: null\n          text: text\n          email: email\n          updatedAt: 853113599\n    Attachment:\n      required:\n      - id\n      type: object\n      properties:\n        createdAt:\n          type: integer\n          description: Unix timestamp when this entity was created.\n          format: int32\n          example: 853113599\n        encoding:\n          $ref: '#/components/schemas/FileEncoding'\n        fileName:\n          $ref: '#/components/schemas/FileName'\n        id:\n          $ref: '#/components/schemas/EntityId'\n        logId:\n          $ref: '#/components/schemas/EntityId'\n        mimeType:\n          $ref: '#/components/schemas/FileMimeType'\n        originalName:\n          $ref: '#/components/schemas/FileOriginalName'\n        path:\n          $ref: '#/components/schemas/FilePath'\n        size:\n          $ref: '#/components/schemas/FileSize'\n        updatedAt:\n          type: integer\n          description: Unix timestamp when this entity was created.\n          format: int32\n          example: 853113599\n      additionalProperties: false\n      description: Describes metadata of an attachment.\n      example:\n        originalName: originalName\n        createdAt: 853113599\n        path: path\n        fileName: fileName\n        size: 6\n        logId: null\n        id: 1\n        mimeType: mimeType\n        encoding: encoding\n        updatedAt: 853113599\n    AttachmentResponse:\n      required:\n      - data\n      type: object\n      properties:\n        data:\n          $ref: '#/components/schemas/Attachment'\n      additionalProperties: false\n      description: Response containing a single attachment.\n      example:\n        data:\n          originalName: originalName\n          createdAt: 853113599\n          path: path\n          fileName: fileName\n          size: 6\n          logId: null\n          id: 1\n          mimeType: mimeType\n          encoding: encoding\n          updatedAt: 853113599\n    CommaSeparatedEntityIds:\n      pattern: \"^([1-9]+\\\\d*,)*[1-9]+\\\\d*$\"\n      type: string\n      description: CSV style string of EntityIds.\n      example: \"1,2,3\"\n    CreateAttachments:\n      type: object\n      properties:\n        attachments:\n          $ref: '#/components/schemas/ArrayOfAttachments'\n      additionalProperties: false\n      description: Describes an attachment\n    CreateEnvironment:\n      required:\n      - envId\n      type: object\n      properties:\n        envId:\n          $ref: '#/components/schemas/EnvironmentId'\n        createdAt:\n          $ref: '#/components/schemas/EnvironmentAt'\n        status:\n          $ref: '#/components/schemas/EnvironmentStatus'\n        statusMessage:\n          $ref: '#/components/schemas/EnvironmentStatusMessage'\n      additionalProperties: false\n      description: Describes an environment\n    CreateFlp:\n      required:\n      - hostname\n      - name\n      type: object\n      properties:\n        name:\n          $ref: '#/components/schemas/FlpName'\n        hostname:\n          $ref: '#/components/schemas/FlpHostname'\n        runNumber:\n          $ref: '#/components/schemas/RunNumber'\n      additionalProperties: false\n      description: Describes an flp\n    CreateLog:\n      required:\n      - text\n      - title\n      type: object\n      properties:\n        attachments:\n          $ref: '#/components/schemas/ArrayOfAttachments'\n        parentLogId:\n          $ref: '#/components/schemas/EntityId'\n        text:\n          $ref: '#/components/schemas/LogText'\n        title:\n          $ref: '#/components/schemas/LogTitle'\n        runNumbers:\n          $ref: '#/components/schemas/RunNumbers'\n      additionalProperties: false\n      description: Describes an intervention or an event that happened.\n    CreateSubsystem:\n      required:\n      - text\n      type: object\n      properties:\n        text:\n          type: string\n          description: The label value of the subsystem.\n      additionalProperties: false\n      description: A label attached to something for the purpose of identification.\n    CreateTag:\n      required:\n      - text\n      type: object\n      properties:\n        text:\n          type: string\n          description: The label value of the tag.\n      additionalProperties: false\n      description: A label attached to something for the purpose of identification.\n    DeployInformation:\n      required:\n      - age\n      - start\n      type: object\n      properties:\n        age:\n          type: number\n          description: The number of seconds that the server is online.\n        start:\n          type: integer\n          description: The unix timestamp of the moment that the the server went online.\n          format: int32\n          example: 853113599\n      additionalProperties: false\n      description: Deploy information\n      example:\n        start: 853113599\n        age: 0.80082819046101150206595775671303272247314453125\n    Entity:\n      required:\n      - id\n      type: object\n      properties:\n        createdAt:\n          type: integer\n          description: Unix timestamp when this entity was created.\n          format: int32\n          example: 853113599\n        id:\n          $ref: '#/components/schemas/EntityId'\n        updatedAt:\n          type: integer\n          description: Unix timestamp when this entity was last updated.\n          format: int32\n          example: 853113599\n      description: Base entity.\n    EntityId:\n      minimum: 1\n      type: integer\n      description: The unique identifier of this entity.\n      format: int32\n    Environment:\n      required:\n      - id\n      type: object\n      properties:\n        id:\n          $ref: '#/components/schemas/EnvironmentId'\n        createdAt:\n          minimum: 0\n          type: integer\n          description: Unix timestamp when this entity was created.\n          example: 853113599\n        updatedAt:\n          minimum: 0\n          type: integer\n          description: Unix timestamp when this entity was last updated.\n          example: 853113599\n        toredownAt:\n          type: string\n          description: Unix timestamp when this entity was tore down.\n          format: date-time\n          nullable: true\n        status:\n          type: string\n          description: The status of the environment.\n          nullable: true\n        statusMessage:\n          type: string\n          description: A message explaining the status or the current state of the\n            environment.\n          nullable: true\n        runs:\n          type: array\n          description: Array of minified Run objects.\n          items:\n            $ref: '#/components/schemas/Run'\n      additionalProperties: false\n      description: The Environment object.\n      example:\n        createdAt: 853113599\n        toredownAt: 2000-01-23T04:56:07.000+00:00\n        id: id\n        runs:\n        - epn: false\n          timeTrgStart: 2000-01-23T04:56:07.000+00:00\n          timeO2End: 2000-01-23T04:56:07.000+00:00\n          timeTrgEnd: 2000-01-23T04:56:07.000+00:00\n          runType: physics\n          detectors: CPV\n          bytesReadOut: 0\n          nSubtimeframes: 2\n          createdAt: 853113599\n          nEpns: 5\n          runQuality: good\n          timeO2Start: 2000-01-23T04:56:07.000+00:00\n          environmentId: environmentId\n          dcs: false\n          epnTopology: normal\n          nDetectors: 1\n          nFlps: 5\n          dd_flp: false\n          runNumber: 7\n          id: 1\n          updatedAt: 853113599\n        - epn: false\n          timeTrgStart: 2000-01-23T04:56:07.000+00:00\n          timeO2End: 2000-01-23T04:56:07.000+00:00\n          timeTrgEnd: 2000-01-23T04:56:07.000+00:00\n          runType: physics\n          detectors: CPV\n          bytesReadOut: 0\n          nSubtimeframes: 2\n          createdAt: 853113599\n          nEpns: 5\n          runQuality: good\n          timeO2Start: 2000-01-23T04:56:07.000+00:00\n          environmentId: environmentId\n          dcs: false\n          epnTopology: normal\n          nDetectors: 1\n          nFlps: 5\n          dd_flp: false\n          runNumber: 7\n          id: 1\n          updatedAt: 853113599\n        statusMessage: statusMessage\n        updatedAt: 853113599\n        status: status\n    EnvironmentAt:\n      type: string\n      description: The earliest allowed unix timestamp for the fetched data.\n      format: date-time\n    EnvironmentId:\n      type: string\n      description: The environment identifier.\n    EnvironmentResponse:\n      required:\n      - data\n      type: object\n      properties:\n        data:\n          $ref: '#/components/schemas/Environment'\n      additionalProperties: false\n      description: The Environment response object\n      example:\n        data:\n          createdAt: 853113599\n          toredownAt: 2000-01-23T04:56:07.000+00:00\n          id: id\n          runs:\n          - epn: false\n            timeTrgStart: 2000-01-23T04:56:07.000+00:00\n            timeO2End: 2000-01-23T04:56:07.000+00:00\n            timeTrgEnd: 2000-01-23T04:56:07.000+00:00\n            runType: physics\n            detectors: CPV\n            bytesReadOut: 0\n            nSubtimeframes: 2\n            createdAt: 853113599\n            nEpns: 5\n            runQuality: good\n            timeO2Start: 2000-01-23T04:56:07.000+00:00\n            environmentId: environmentId\n            dcs: false\n            epnTopology: normal\n            nDetectors: 1\n            nFlps: 5\n            dd_flp: false\n            runNumber: 7\n            id: 1\n            updatedAt: 853113599\n          - epn: false\n            timeTrgStart: 2000-01-23T04:56:07.000+00:00\n            timeO2End: 2000-01-23T04:56:07.000+00:00\n            timeTrgEnd: 2000-01-23T04:56:07.000+00:00\n            runType: physics\n            detectors: CPV\n            bytesReadOut: 0\n            nSubtimeframes: 2\n            createdAt: 853113599\n            nEpns: 5\n            runQuality: good\n            timeO2Start: 2000-01-23T04:56:07.000+00:00\n            environmentId: environmentId\n            dcs: false\n            epnTopology: normal\n            nDetectors: 1\n            nFlps: 5\n            dd_flp: false\n            runNumber: 7\n            id: 1\n            updatedAt: 853113599\n          statusMessage: statusMessage\n          updatedAt: 853113599\n          status: status\n    EnvironmentRun:\n      minimum: 0\n      type: integer\n      description: Run that needs to be added.\n    EnvironmentStatus:\n      type: string\n      description: Current environment status\n      nullable: true\n    EnvironmentStatusMessage:\n      type: string\n      description: Message about the current status.\n      nullable: true\n    Error:\n      required:\n      - status\n      - title\n      type: object\n      properties:\n        detail:\n          type: string\n          description: A human-readable explanation specific to this occurrence of\n            the problem.\n        source:\n          $ref: '#/components/schemas/ErrorSource'\n        status:\n          type: string\n          description: The HTTP status code applicable to this problem.\n        title:\n          type: string\n          description: \"A short, human-readable summary of the problem.\"\n      additionalProperties: false\n      description: An Error object.\n    ErrorSource:\n      type: object\n      properties:\n        pointer:\n          type: string\n          description: A pointer to the associated entity in the request document.\n      additionalProperties: false\n      description: An object containing references to the source of the error.\n    Errors:\n      required:\n      - errors\n      type: object\n      properties:\n        errors:\n          minItems: 1\n          type: array\n          description: A list of Error objects.\n          items:\n            $ref: '#/components/schemas/Error'\n      additionalProperties: false\n      description: A list of Error objects.\n    FileEncoding:\n      type: string\n      description: Encoding used on the file.\n    FileMimeType:\n      type: string\n      description: Mime-type of a file.\n    FileName:\n      type: string\n      description: Name of a file.\n    FileOriginalName:\n      type: string\n      description: Original name of a file.\n    FilePath:\n      type: string\n      description: Path of where the file is stored.\n    FileSize:\n      type: integer\n      description: Size of a file.\n      format: int32\n    FilterLogsCreatedOptions:\n      type: object\n      properties:\n        from:\n          type: integer\n          description: The earliest allowed unix timestamp for the fetched data.\n          format: int32\n          example: 853113599\n        to:\n          type: integer\n          description: The latest allowed unix timestamp for the fetched data.\n          format: int32\n          example: 853113599\n      additionalProperties: false\n      description: Specifies the creation time related filter requirements for a request.\n    FilterLogsOptions:\n      type: object\n      properties:\n        author:\n          type: string\n          description: Name of the author.\n          example: John Doe\n        created:\n          $ref: '#/components/schemas/FilterLogsCreatedOptions'\n        origin:\n          $ref: '#/components/schemas/LogOrigin'\n        parentLog:\n          $ref: '#/components/schemas/EntityId'\n        rootLog:\n          $ref: '#/components/schemas/EntityId'\n        tag:\n          $ref: '#/components/schemas/FilterLogsTagOptions'\n        title:\n          $ref: '#/components/schemas/LogTitle'\n      additionalProperties: false\n      description: Specifies the log related filter requirements for a request.\n    FilterLogsTagOptions:\n      required:\n      - operation\n      - values\n      type: object\n      properties:\n        operation:\n          type: string\n          description: The operation indicating the relation between the data.\n          enum:\n          - and\n          - or\n        values:\n          $ref: '#/components/schemas/CommaSeparatedEntityIds'\n      additionalProperties: false\n      description: Specifies the tag related filter requirements for a request.\n    Flp:\n      required:\n      - bytesEquipmentReadOut\n      - bytesFairMQReadOut\n      - bytesProcessed\n      - bytesRecordingReadOut\n      - hostname\n      - id\n      - nTimeframes\n      - name\n      type: object\n      properties:\n        bytesEquipmentReadOut:\n          $ref: '#/components/schemas/FlpBytesEquipmentReadOut'\n        bytesFairMQReadOut:\n          $ref: '#/components/schemas/FlpBytesFairMQReadOut'\n        bytesProcessed:\n          $ref: '#/components/schemas/FlpBytesProcessed'\n        bytesRecordingReadOut:\n          $ref: '#/components/schemas/FlpBytesRecordingReadOut'\n        createdAt:\n          type: integer\n          description: Unix timestamp when this entity was created.\n          format: int32\n          example: 853113599\n        hostname:\n          $ref: '#/components/schemas/FlpHostname'\n        id:\n          $ref: '#/components/schemas/EntityId'\n        nTimeframes:\n          $ref: '#/components/schemas/FlpTimeframes'\n        name:\n          $ref: '#/components/schemas/FlpName'\n        updatedAt:\n          type: integer\n          description: Unix timestamp when this entity was last updated.\n          format: int32\n          example: 853113599\n      additionalProperties: false\n      description: Describes an intervention or an event that happened.\n      example:\n        bytesFairMQReadOut: 6\n        createdAt: 853113599\n        hostname: hostname\n        bytesEquipmentReadOut: 0\n        nTimeframes: 2\n        name: name\n        bytesRecordingReadOut: 5\n        id: 1\n        bytesProcessed: 1\n        updatedAt: 853113599\n    FlpBytesEquipmentReadOut:\n      type: integer\n      description: Total data volume out from the readout 'equipment' component in\n        bytes. Can reach PetaBytes. Updated regularly.\n      format: int32\n    FlpBytesFairMQReadOut:\n      type: integer\n      description: Total data volume out from the readout 'fmq' component in bytes.\n        Can reach PetaBytes. Updated regularly.\n      format: int32\n    FlpBytesProcessed:\n      type: integer\n      description: Total data volume read out in bytes.\n      format: int32\n    FlpBytesRecordingReadOut:\n      type: integer\n      description: Total data volume out from the readout 'recording' component in\n        bytes. Can reach PetaBytes. Updated regularly.\n      format: int32\n    FlpHostname:\n      type: string\n      description: FLP hostname.\n    FlpName:\n      type: string\n      description: FLP name.\n    FlpResponse:\n      required:\n      - data\n      type: object\n      properties:\n        data:\n          $ref: '#/components/schemas/Flp'\n      additionalProperties: false\n      description: Response containing a single flp.\n      example:\n        data:\n          bytesFairMQReadOut: 6\n          createdAt: 853113599\n          hostname: hostname\n          bytesEquipmentReadOut: 0\n          nTimeframes: 2\n          name: name\n          bytesRecordingReadOut: 5\n          id: 1\n          bytesProcessed: 1\n          updatedAt: 853113599\n    FlpSortOptions:\n      type: object\n      properties:\n        id:\n          $ref: '#/components/schemas/SortOrder'\n      additionalProperties: false\n      description: Specifies the sorting requirements of a flp request.\n    FlpTimeframes:\n      type: integer\n      description: Number of subtimeframes processed in this FLP. Updated regularly.\n      format: int32\n    Log:\n      required:\n      - author\n      - id\n      - origin\n      - parentLogId\n      - rootLogId\n      - subtype\n      - text\n      - title\n      type: object\n      properties:\n        attachments:\n          $ref: '#/components/schemas/ArrayOfAttachments'\n        author:\n          $ref: '#/components/schemas/User'\n        createdAt:\n          type: integer\n          description: Unix timestamp when this entity was created.\n          format: int32\n          example: 853113599\n        id:\n          $ref: '#/components/schemas/EntityId'\n        origin:\n          $ref: '#/components/schemas/LogOrigin'\n        parentLogId:\n          $ref: '#/components/schemas/EntityId'\n        replies:\n          $ref: '#/components/schemas/LogReplies'\n        rootLogId:\n          $ref: '#/components/schemas/EntityId'\n        runs:\n          type: array\n          description: Array of minified Run objects.\n          items:\n            $ref: '#/components/schemas/Log_runs'\n        subsystems:\n          $ref: '#/components/schemas/ArrayOfSubsystems'\n        subtype:\n          $ref: '#/components/schemas/LogSubtype'\n        tags:\n          $ref: '#/components/schemas/ArrayOfTags'\n        text:\n          $ref: '#/components/schemas/LogText'\n        title:\n          $ref: '#/components/schemas/LogTitle'\n        updatedAt:\n          type: integer\n          description: Unix timestamp when this entity was last updated.\n          format: int32\n          example: 853113599\n      additionalProperties: false\n      description: Describes an intervention or an event that happened.\n      example:\n        parentLogId: null\n        attachments:\n        - originalName: originalName\n          createdAt: 853113599\n          path: path\n          fileName: fileName\n          size: 6\n          logId: null\n          id: 1\n          mimeType: mimeType\n          encoding: encoding\n          updatedAt: 853113599\n        - originalName: originalName\n          createdAt: 853113599\n          path: path\n          fileName: fileName\n          size: 6\n          logId: null\n          id: 1\n          mimeType: mimeType\n          encoding: encoding\n          updatedAt: 853113599\n        author:\n          name: name\n          externalId: 0\n          id: 6\n        origin: human\n        title: title\n        subsystems:\n        - createdAt: 853113599\n          name: name\n          id: null\n          updatedAt: 853113599\n        - createdAt: 853113599\n          name: name\n          id: null\n          updatedAt: 853113599\n        tags:\n        - createdAt: 853113599\n          lastEditedName: lastEditedName\n          mattermost: mattermost\n          id: null\n          text: text\n          email: email\n          updatedAt: 853113599\n        - createdAt: 853113599\n          lastEditedName: lastEditedName\n          mattermost: mattermost\n          id: null\n          text: text\n          email: email\n          updatedAt: 853113599\n        createdAt: 853113599\n        replies: 5\n        subtype: run\n        rootLogId: null\n        id: 1\n        text: text\n        runs:\n        - runNumber: 5\n          id: null\n        - runNumber: 5\n          id: null\n        updatedAt: 853113599\n    LogOrigin:\n      type: string\n      description: Type of creator.\n      enum:\n      - human\n      - process\n    LogReplies:\n      type: integer\n      description: The amount of children of a root log.\n      format: int32\n    LogResponse:\n      required:\n      - data\n      type: object\n      properties:\n        data:\n          $ref: '#/components/schemas/Log'\n      additionalProperties: false\n      description: Response containing a single log.\n      example:\n        data:\n          parentLogId: null\n          attachments:\n          - originalName: originalName\n            createdAt: 853113599\n            path: path\n            fileName: fileName\n            size: 6\n            logId: null\n            id: 1\n            mimeType: mimeType\n            encoding: encoding\n            updatedAt: 853113599\n          - originalName: originalName\n            createdAt: 853113599\n            path: path\n            fileName: fileName\n            size: 6\n            logId: null\n            id: 1\n            mimeType: mimeType\n            encoding: encoding\n            updatedAt: 853113599\n          author:\n            name: name\n            externalId: 0\n            id: 6\n          origin: human\n          title: title\n          subsystems:\n          - createdAt: 853113599\n            name: name\n            id: null\n            updatedAt: 853113599\n          - createdAt: 853113599\n            name: name\n            id: null\n            updatedAt: 853113599\n          tags:\n          - createdAt: 853113599\n            lastEditedName: lastEditedName\n            mattermost: mattermost\n            id: null\n            text: text\n            email: email\n            updatedAt: 853113599\n          - createdAt: 853113599\n            lastEditedName: lastEditedName\n            mattermost: mattermost\n            id: null\n            text: text\n            email: email\n            updatedAt: 853113599\n          createdAt: 853113599\n          replies: 5\n          subtype: run\n          rootLogId: null\n          id: 1\n          text: text\n          runs:\n          - runNumber: 5\n            id: null\n          - runNumber: 5\n            id: null\n          updatedAt: 853113599\n    LogSortOptions:\n      type: object\n      properties:\n        author:\n          $ref: '#/components/schemas/SortOrder'\n        createdAt:\n          $ref: '#/components/schemas/SortOrder'\n        id:\n          $ref: '#/components/schemas/SortOrder'\n        tags:\n          $ref: '#/components/schemas/SortOrder'\n        title:\n          $ref: '#/components/schemas/SortOrder'\n      additionalProperties: false\n      description: Specifies the sorting requirements of a log request.\n    LogSubtype:\n      type: string\n      description: The subtype of a Log.\n      enum:\n      - run\n      - subsystem\n      - announcement\n      - intervention\n      - comment\n    LogText:\n      minLength: 3\n      type: string\n      description: Body of the log.\n    LogTitle:\n      maxLength: 140\n      minLength: 3\n      type: string\n      description: Title of the log.\n    LogTree:\n      required:\n      - author\n      - children\n      - id\n      - origin\n      - parentLogId\n      - rootLogId\n      - subtype\n      - text\n      - title\n      type: object\n      properties:\n        attachments:\n          $ref: '#/components/schemas/ArrayOfAttachments'\n        author:\n          $ref: '#/components/schemas/User'\n        children:\n          $ref: '#/components/schemas/ArrayOfLogTrees'\n        createdAt:\n          type: integer\n          description: Unix timestamp when this entity was created.\n          format: int32\n          example: 853113599\n        id:\n          $ref: '#/components/schemas/EntityId'\n        origin:\n          $ref: '#/components/schemas/LogOrigin'\n        parentLogId:\n          $ref: '#/components/schemas/EntityId'\n        replies:\n          $ref: '#/components/schemas/LogReplies'\n        rootLogId:\n          $ref: '#/components/schemas/EntityId'\n        runs:\n          type: array\n          description: Array of minified Run objects.\n          items:\n            $ref: '#/components/schemas/Log_runs'\n        subsystems:\n          $ref: '#/components/schemas/ArrayOfSubsystems'\n        subtype:\n          $ref: '#/components/schemas/LogSubtype'\n        tags:\n          $ref: '#/components/schemas/ArrayOfTags'\n        text:\n          $ref: '#/components/schemas/LogText'\n        title:\n          $ref: '#/components/schemas/LogTitle'\n        updatedAt:\n          type: integer\n          description: Unix timestamp when this entity was last updated.\n          format: int32\n          example: 853113599\n      additionalProperties: false\n      description: Describes an intervention or an event that happened.\n      example:\n        parentLogId: null\n        attachments:\n        - originalName: originalName\n          createdAt: 853113599\n          path: path\n          fileName: fileName\n          size: 6\n          logId: null\n          id: 1\n          mimeType: mimeType\n          encoding: encoding\n          updatedAt: 853113599\n        - originalName: originalName\n          createdAt: 853113599\n          path: path\n          fileName: fileName\n          size: 6\n          logId: null\n          id: 1\n          mimeType: mimeType\n          encoding: encoding\n          updatedAt: 853113599\n        author:\n          name: name\n          externalId: 0\n          id: 6\n        origin: human\n        title: title\n        subsystems:\n        - createdAt: 853113599\n          name: name\n          id: null\n          updatedAt: 853113599\n        - createdAt: 853113599\n          name: name\n          id: null\n          updatedAt: 853113599\n        tags:\n        - createdAt: 853113599\n          lastEditedName: lastEditedName\n          mattermost: mattermost\n          id: null\n          text: text\n          email: email\n          updatedAt: 853113599\n        - createdAt: 853113599\n          lastEditedName: lastEditedName\n          mattermost: mattermost\n          id: null\n          text: text\n          email: email\n          updatedAt: 853113599\n        createdAt: 853113599\n        replies: 6\n        children:\n        - null\n        - null\n        subtype: run\n        rootLogId: null\n        id: 1\n        text: text\n        runs:\n        - runNumber: 5\n          id: null\n        - runNumber: 5\n          id: null\n        updatedAt: 853113599\n    LogTreeResponse:\n      required:\n      - data\n      type: object\n      properties:\n        data:\n          $ref: '#/components/schemas/LogTree'\n      additionalProperties: false\n      description: Response containing a single log tree.\n      example:\n        data:\n          parentLogId: null\n          attachments:\n          - originalName: originalName\n            createdAt: 853113599\n            path: path\n            fileName: fileName\n            size: 6\n            logId: null\n            id: 1\n            mimeType: mimeType\n            encoding: encoding\n            updatedAt: 853113599\n          - originalName: originalName\n            createdAt: 853113599\n            path: path\n            fileName: fileName\n            size: 6\n            logId: null\n            id: 1\n            mimeType: mimeType\n            encoding: encoding\n            updatedAt: 853113599\n          author:\n            name: name\n            externalId: 0\n            id: 6\n          origin: human\n          title: title\n          subsystems:\n          - createdAt: 853113599\n            name: name\n            id: null\n            updatedAt: 853113599\n          - createdAt: 853113599\n            name: name\n            id: null\n            updatedAt: 853113599\n          tags:\n          - createdAt: 853113599\n            lastEditedName: lastEditedName\n            mattermost: mattermost\n            id: null\n            text: text\n            email: email\n            updatedAt: 853113599\n          - createdAt: 853113599\n            lastEditedName: lastEditedName\n            mattermost: mattermost\n            id: null\n            text: text\n            email: email\n            updatedAt: 853113599\n          createdAt: 853113599\n          replies: 6\n          children:\n          - null\n          - null\n          subtype: run\n          rootLogId: null\n          id: 1\n          text: text\n          runs:\n          - runNumber: 5\n            id: null\n          - runNumber: 5\n            id: null\n          updatedAt: 853113599\n    PaginationLimit:\n      maximum: 100\n      minimum: 1\n      type: integer\n      description: The numbers of items to return.\n      default: 100\n    PaginationMeta:\n      required:\n      - pageCount\n      - totalCount\n      type: object\n      properties:\n        pageCount:\n          type: integer\n          description: The total number of pages which contain data.\n          format: int32\n        totalCount:\n          type: integer\n          description: The total number of elements in the collection\n          format: int32\n      additionalProperties: false\n      description: The metadata related to pagination.\n      example:\n        pageCount: 9\n        totalCount: 3\n    PaginationOffset:\n      type: integer\n      description: The number of items to skip before starting to collect the result\n        set.\n      format: int32\n      default: 0\n    PaginationOptions:\n      type: object\n      properties:\n        limit:\n          $ref: '#/components/schemas/PaginationLimit'\n        offset:\n          $ref: '#/components/schemas/PaginationOffset'\n      additionalProperties: false\n      description: Specifies the pagination requirements of a request.\n    Run:\n      type: object\n      properties:\n        environmentId:\n          $ref: '#/components/schemas/RunEnvironmentId'\n        bytesReadOut:\n          $ref: '#/components/schemas/RunBytesReadOut'\n        createdAt:\n          type: integer\n          description: Unix timestamp when this entity was created.\n          format: int32\n          example: 853113599\n        id:\n          $ref: '#/components/schemas/EntityId'\n        nDetectors:\n          $ref: '#/components/schemas/RunDetectors'\n        nEpns:\n          $ref: '#/components/schemas/RunEpns'\n        nFlps:\n          $ref: '#/components/schemas/RunFlps'\n        nSubtimeframes:\n          $ref: '#/components/schemas/RunSubtimeframes'\n        runNumber:\n          $ref: '#/components/schemas/RunNumber'\n        runQuality:\n          $ref: '#/components/schemas/RunQuality'\n        runType:\n          $ref: '#/components/schemas/RunType'\n        timeO2End:\n          $ref: '#/components/schemas/RunO2End'\n        timeO2Start:\n          $ref: '#/components/schemas/RunO2Start'\n        timeTrgEnd:\n          $ref: '#/components/schemas/RunTrgEnd'\n        timeTrgStart:\n          $ref: '#/components/schemas/RunTrgStart'\n        dd_flp:\n          $ref: '#/components/schemas/DD_FLP'\n        dcs:\n          $ref: '#/components/schemas/DCS'\n        epn:\n          $ref: '#/components/schemas/EPN'\n        epnTopology:\n          $ref: '#/components/schemas/EPN_Topology'\n        detectors:\n          $ref: '#/components/schemas/DETECTORS'\n        updatedAt:\n          type: integer\n          description: Unix timestamp when this entity was last updated.\n          format: int32\n          example: 853113599\n      additionalProperties: false\n      description: Describes an intervention or an event that happened.\n      example:\n        epn: false\n        timeTrgStart: 2000-01-23T04:56:07.000+00:00\n        timeO2End: 2000-01-23T04:56:07.000+00:00\n        timeTrgEnd: 2000-01-23T04:56:07.000+00:00\n        runType: physics\n        detectors: CPV\n        bytesReadOut: 0\n        nSubtimeframes: 2\n        createdAt: 853113599\n        nEpns: 5\n        runQuality: good\n        timeO2Start: 2000-01-23T04:56:07.000+00:00\n        environmentId: environmentId\n        dcs: false\n        epnTopology: normal\n        nDetectors: 1\n        nFlps: 5\n        dd_flp: false\n        runNumber: 7\n        id: 1\n        updatedAt: 853113599\n    RunEnvironmentId:\n      type: string\n      description: The unique identifier of this entity.\n    RunBytesReadOut:\n      type: integer\n      description: Total data volume read out from the detectors by the O2 system\n        in bytes.\n      format: int32\n    RunDetectors:\n      type: integer\n      description: The amount of detectors in a single run.\n      format: int32\n    RunEpns:\n      type: integer\n      description: The amount of Epns nodes in a single run.\n      format: int32\n    RunFlps:\n      type: integer\n      description: The amount of Flps nodes in a single run.\n      format: int32\n    RunNumber:\n      type: integer\n      description: The unique identifier of this entity.\n      format: int32\n    RunO2End:\n      type: string\n      description: Unix timestamp when this entity was created.\n      format: date-time\n    RunO2Start:\n      type: string\n      description: Unix timestamp when this entity was created.\n      format: date-time\n    RunOrigin:\n      type: string\n      description: Type of creator.\n      enum:\n      - process\n    RunQuality:\n      type: string\n      description: Specifies the type of run.\n      enum:\n      - good\n      - bad\n      - test\n    RunResponse:\n      required:\n      - data\n      type: object\n      properties:\n        data:\n          $ref: '#/components/schemas/Run'\n      additionalProperties: false\n      description: Response containing a single run.\n      example:\n        data:\n          epn: false\n          timeTrgStart: 2000-01-23T04:56:07.000+00:00\n          timeO2End: 2000-01-23T04:56:07.000+00:00\n          timeTrgEnd: 2000-01-23T04:56:07.000+00:00\n          runType: physics\n          detectors: CPV\n          bytesReadOut: 0\n          nSubtimeframes: 2\n          createdAt: 853113599\n          nEpns: 5\n          runQuality: good\n          timeO2Start: 2000-01-23T04:56:07.000+00:00\n          environmentId: environmentId\n          dcs: false\n          epnTopology: normal\n          nDetectors: 1\n          nFlps: 5\n          dd_flp: false\n          runNumber: 7\n          id: 1\n          updatedAt: 853113599\n    RunSortOptions:\n      type: object\n      properties:\n        id:\n          $ref: '#/components/schemas/SortOrder'\n      additionalProperties: false\n      description: Specifies the sorting requirements of a run request.\n    RunSubtimeframes:\n      type: integer\n      description: Total number of subtimeframes processed by the O2 system.\n      format: int32\n    RunTrgEnd:\n      type: string\n      description: Unix timestamp when this entity was created.\n      format: date-time\n    RunTrgStart:\n      type: string\n      description: Unix timestamp when this entity was created.\n      format: date-time\n    DD_FLP:\n      type: boolean\n      description: \"Boolean for Data Distrubution (FLP), On or Off.\"\n      example: false\n    DCS:\n      type: boolean\n      description: \"Boolean for DCS, On or Off.\"\n      example: false\n    EPN:\n      type: boolean\n      description: \"Boolean for EPN, On or Off.\"\n      example: false\n    EPN_Topology:\n      type: string\n      description: Topology for EPN.\n      example: normal\n    DETECTORS:\n      type: string\n      description: Adds one or multiple detectors to the run.\n      enum:\n      - CPV\n      - EMC\n      - FDD\n      - FT0\n      - FV0\n      - HMP\n      - ITS\n      - MCH\n      - MFT\n      - MID\n      - PHS\n      - TOF\n      - TPC\n      - TRD\n      - TST\n      - ZDC\n    RunType:\n      type: string\n      description: Specifies the type of run.\n      enum:\n      - physics\n      - cosmics\n      - technical\n    SortOrder:\n      type: string\n      description: Specifies the sorting direction of a sorting option.\n      enum:\n      - asc\n      - desc\n    Subsystem:\n      required:\n      - id\n      - name\n      type: object\n      properties:\n        createdAt:\n          type: integer\n          description: Unix timestamp when this entity was created.\n          format: int32\n          example: 853113599\n        id:\n          $ref: '#/components/schemas/EntityId'\n        name:\n          type: string\n          description: The label value of the subsystem.\n        updatedAt:\n          type: integer\n          description: Unix timestamp when this entity was last updated.\n          format: int32\n          example: 853113599\n      additionalProperties: false\n      description: A label attached to something for the purpose of identification.\n      example:\n        createdAt: 853113599\n        name: name\n        id: null\n        updatedAt: 853113599\n    SubsystemResponse:\n      required:\n      - data\n      type: object\n      properties:\n        data:\n          $ref: '#/components/schemas/Subsystem'\n      additionalProperties: false\n      description: Response containing a single subsystem.\n      example:\n        data:\n          createdAt: 853113599\n          name: name\n          id: null\n          updatedAt: 853113599\n    Tag:\n      required:\n      - id\n      - text\n      type: object\n      properties:\n        createdAt:\n          type: integer\n          description: Unix timestamp when this entity was created.\n          format: int32\n          example: 853113599\n        id:\n          $ref: '#/components/schemas/EntityId'\n        text:\n          type: string\n          description: The label value of the tag.\n        email:\n          type: string\n          description: The email for the tag.\n          nullable: true\n        mattermost:\n          type: string\n          description: All the mattermost tags for updates\n          nullable: true\n        updatedAt:\n          type: integer\n          description: Unix timestamp when this entity was last updated.\n          format: int32\n          example: 853113599\n        lastEditedName:\n          type: string\n          description: The last person that edited the email/mattermost fields\n          nullable: true\n      additionalProperties: false\n      description: A label attached to something for the purpose of identification.\n      example:\n        createdAt: 853113599\n        lastEditedName: lastEditedName\n        mattermost: mattermost\n        id: null\n        text: text\n        email: email\n        updatedAt: 853113599\n    TagResponse:\n      required:\n      - data\n      type: object\n      properties:\n        data:\n          $ref: '#/components/schemas/Tag'\n      additionalProperties: false\n      description: Response containing a single tag.\n      example:\n        data:\n          createdAt: 853113599\n          lastEditedName: lastEditedName\n          mattermost: mattermost\n          id: null\n          text: text\n          email: email\n          updatedAt: 853113599\n    UpdateEnvironment:\n      type: object\n      properties:\n        toredownAt:\n          $ref: '#/components/schemas/EnvironmentAt'\n        status:\n          $ref: '#/components/schemas/EnvironmentStatus'\n        statusMessage:\n          $ref: '#/components/schemas/EnvironmentStatusMessage'\n        run:\n          $ref: '#/components/schemas/EnvironmentRun'\n      additionalProperties: false\n      description: Describes an update to an environment\n    UpdateFlp:\n      type: object\n      properties:\n        nTimeframes:\n          $ref: '#/components/schemas/FlpTimeframes'\n        bytesProcessed:\n          $ref: '#/components/schemas/FlpBytesProcessed'\n        bytesEquipmentReadOut:\n          $ref: '#/components/schemas/FlpBytesEquipmentReadOut'\n        bytesRecordingReadOut:\n          $ref: '#/components/schemas/FlpBytesRecordingReadOut'\n        bytesFairMQReadOut:\n          $ref: '#/components/schemas/FlpBytesFairMQReadOut'\n      additionalProperties: false\n      description: Describes an update to an flp\n    User:\n      required:\n      - externalId\n      - id\n      - name\n      type: object\n      properties:\n        externalId:\n          type: integer\n          description: The unique CERN identifier of this user.\n          format: int32\n        id:\n          type: integer\n          description: The unique identifier of this entity.\n          format: int32\n        name:\n          type: string\n          description: Name of the user.\n      additionalProperties: false\n      description: Describes an intervention or an event that happened.\n      example:\n        name: name\n        externalId: 0\n        id: 6\n    Log_runs:\n      required:\n      - id\n      - runNumber\n      type: object\n      properties:\n        id:\n          $ref: '#/components/schemas/EntityId'\n        runNumber:\n          $ref: '#/components/schemas/RunNumber'\n      additionalProperties: false\n      description: Minified Run object.\n      example:\n        runNumber: 5\n        id: null\n  responses:\n    ArrayOfAttachments:\n      description: Expected response to a valid request.\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/ArrayOfAttachmentsResponse'\n    ArrayOfEnvironments:\n      description: Expected response to a valid request.\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/ArrayOfEnvironmentsResponse'\n    ArrayOfFlps:\n      description: Expected response to a valid request.\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/ArrayOfFlpsResponse'\n    ArrayOfLogs:\n      description: Expected response to a valid request.\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/ArrayOfLogsResponse'\n    ArrayOfRuns:\n      description: Expected response to a valid request.\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/ArrayOfRunsResponse'\n    ArrayOfSubsystems:\n      description: Expected response to a valid request.\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/ArrayOfSubsystemsResponse'\n    ArrayOfTags:\n      description: Expected response to a valid request.\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/ArrayOfTagsResponse'\n    Attachment:\n      description: Expected response to a valid request.\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/AttachmentResponse'\n    BadRequest:\n      description: Bad Request\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/Errors'\n    Conflict:\n      description: Conflict\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/Errors'\n    Environment:\n      description: Expected response to a valid request.\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/EnvironmentResponse'\n    Flp:\n      description: Expected response to a valid request.\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/FlpResponse'\n    Forbidden:\n      description: Forbidden\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/Errors'\n    Log:\n      description: Expected response to a valid request.\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/LogResponse'\n    LogTree:\n      description: Expected response to a valid request.\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/LogTreeResponse'\n    NotFound:\n      description: Not Found\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/Errors'\n    Run:\n      description: Expected response to a valid request.\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/RunResponse'\n    ServiceUnavailable:\n      description: Service Unavailable\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/Errors'\n    Subsystem:\n      description: Expected response to a valid request.\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/SubsystemResponse'\n    Tag:\n      description: Expected response to a valid request.\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/TagResponse'\n    UnexpectedError:\n      description: Unexpected Error\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/Errors'\n  parameters:\n    AttachmentId:\n      name: attachmentId\n      in: path\n      description: The id of the attached to retrieve\n      required: true\n      style: simple\n      explode: false\n      schema:\n        $ref: '#/components/schemas/EntityId'\n    EnvId:\n      name: envId\n      in: path\n      description: The id of the environment to receive\n      required: true\n      style: simple\n      explode: false\n      schema:\n        $ref: '#/components/schemas/EnvironmentId'\n    FilterLogs:\n      name: filter\n      in: query\n      description: Specifies the filter requirements.\n      required: false\n      style: deepObject\n      explode: false\n      schema:\n        $ref: '#/components/schemas/FilterLogsOptions'\n    FlpName:\n      name: flpName\n      in: path\n      description: The id of the flp to retrieve\n      required: true\n      style: simple\n      explode: false\n      schema:\n        $ref: '#/components/schemas/FlpName'\n    RunNumber:\n      name: runNumber\n      in: path\n      description: The id of the runNumber to retrieve\n      required: true\n      style: simple\n      explode: false\n      schema:\n        $ref: '#/components/schemas/EntityId'\n    FlpSorting:\n      name: sort\n      in: query\n      description: Specifies the flp sorting requirements.\n      required: false\n      style: deepObject\n      explode: false\n      schema:\n        $ref: '#/components/schemas/FlpSortOptions'\n    LogId:\n      name: logId\n      in: path\n      description: The id of the log to retrieve\n      required: true\n      style: simple\n      explode: false\n      schema:\n        $ref: '#/components/schemas/EntityId'\n    LogSorting:\n      name: sort\n      in: query\n      description: Specifies the log sorting requirements.\n      required: false\n      style: deepObject\n      explode: false\n      schema:\n        $ref: '#/components/schemas/LogSortOptions'\n    Pagination:\n      name: page\n      in: query\n      description: Specifies the pagination requirements.\n      required: false\n      style: deepObject\n      explode: false\n      schema:\n        $ref: '#/components/schemas/PaginationOptions'\n    RunId:\n      name: runId\n      in: path\n      description: The id of the run to retrieve\n      required: true\n      style: simple\n      explode: false\n      schema:\n        $ref: '#/components/schemas/EntityId'\n    RunSorting:\n      name: sort\n      in: query\n      description: Specifies the run sorting requirements.\n      required: false\n      style: deepObject\n      explode: false\n      schema:\n        $ref: '#/components/schemas/RunSortOptions'\n    SubsystemId:\n      name: subsystemId\n      in: path\n      description: The id of the subsystem to retrieve\n      required: true\n      style: simple\n      explode: false\n      schema:\n        $ref: '#/components/schemas/EntityId'\n    TagId:\n      name: tagId\n      in: path\n      description: The id of the tag to retrieve\n      required: true\n      style: simple\n      explode: false\n      schema:\n        $ref: '#/components/schemas/EntityId'\n  requestBodies:\n    CreateEnvironment:\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/CreateEnvironment'\n      required: true\n    CreateRun:\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/Run'\n      required: true\n    UpdateRun:\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/Run'\n      required: true\n    CreateAttachments:\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/CreateAttachments'\n      required: true\n    CreateFlp:\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/CreateFlp'\n      required: true\n    CreateLog:\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/CreateLog'\n      required: true\n    CreateSubsystem:\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/CreateSubsystem'\n      required: true\n    CreateTag:\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/CreateTag'\n      required: true\n    UpdateEnvironment:\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/UpdateEnvironment'\n      required: true\n    UpdateFlp:\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/UpdateFlp'\n      required: true\n  securitySchemes:\n    ApiKeyAuth:\n      type: apiKey\n      name: token\n      in: query\n",
			"canonicalURL": "/github.com/AliceO2Group/Bookkeeping@89571d3358d88ab0ada88635c23035c55c67942b/-/blob/go-api-client/src/go-client-generated/api/swagger.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/AliceO2Group/Bookkeeping/blob/89571d3358d88ab0ada88635c23035c55c67942b/go-api-client/src/go-client-generated/api/swagger.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "parse: parse spec: parse components: at 1:15: parameters: \"FilterLogs\": at 1:438: invalid style explode combination \"deepObject\", explode:false"
}