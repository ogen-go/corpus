{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/davidmoten/openapi-to-plantuml"
		},
		"file": {
			"name": "strava.yml",
			"size": 0,
			"path": "src/test/resources/demo/strava.yml",
			"byteSize": 125902,
			"content": "openapi: 3.0.1\ninfo:\n  title: Strava API v3\n  description: The [Swagger Playground](https://developers.strava.com/playground)\n    is the easiest way to familiarize yourself with the Strava API by submitting HTTP\n    requests and observing the responses before you write any client code. It will\n    show what a response will look like with different endpoints depending on the\n    authorization scope you receive from your athletes. To use the Playground, go\n    to https://www.strava.com/settings/api and change your “Authorization Callback\n    Domain” to developers.strava.com. Please note, we only support Swagger 2.0. There\n    is a known issue where you can only select one scope at a time. For more information,\n    please check the section “client code” at https://developers.strava.com/docs.\n  version: 3.0.0\nservers:\n- url: https://www.strava.com/api/v3\nsecurity:\n- strava_oauth:\n  - public\npaths:\n  /athletes/{id}/stats:\n    get:\n      tags:\n      - Athletes\n      summary: Get Athlete Stats\n      description: Returns the activity stats of an athlete. Only includes data from\n        activities set to Everyone visibilty.\n      operationId: getStats\n      parameters:\n      - name: id\n        in: path\n        description: The identifier of the athlete. Must match the authenticated athlete.\n        required: true\n        schema:\n          type: integer\n          format: int64\n      responses:\n        200:\n          description: Activity stats of the athlete.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ActivityStats'\n        default:\n          description: Unexpected error.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Fault'\n  /athlete:\n    get:\n      tags:\n      - Athletes\n      summary: Get Authenticated Athlete\n      description: Returns the currently authenticated athlete. Tokens with profile:read_all\n        scope will receive a detailed athlete representation; all others will receive\n        a summary representation.\n      operationId: getLoggedInAthlete\n      responses:\n        200:\n          description: Profile information for the authenticated athlete.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DetailedAthlete'\n              example:\n                id: 1234567890987654400\n                username: marianne_t\n                resource_state: 3\n                firstname: Marianne\n                lastname: Teutenberg\n                city: San Francisco\n                state: CA\n                country: US\n                sex: F\n                premium: true\n                created_at: 2017-11-14T02:30:05Z\n                updated_at: 2018-02-06T19:32:20Z\n                badge_type_id: 4\n                profile_medium: https://xxxxxx.cloudfront.net/pictures/athletes/123456789/123456789/2/medium.jpg\n                profile: https://xxxxx.cloudfront.net/pictures/athletes/123456789/123456789/2/large.jpg\n                follower_count: 5\n                friend_count: 5\n                mutual_friend_count: 0\n                athlete_type: 1\n                date_preference: '%m/%d/%Y'\n                measurement_preference: feet\n                clubs: []\n                weight: 0\n                bikes:\n                - id: b12345678987655\n                  primary: true\n                  name: EMC\n                  resource_state: 2\n                  distance: 0\n                shoes:\n                - id: g12345678987655\n                  primary: true\n                  name: adidas\n                  resource_state: 2\n                  distance: 4904\n        default:\n          description: Unexpected error.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Fault'\n    put:\n      tags:\n      - Athletes\n      summary: Update Athlete\n      description: Update the currently authenticated athlete. Requires profile:write\n        scope.\n      operationId: updateLoggedInAthlete\n      parameters:\n      - name: weight\n        in: path\n        description: The weight of the athlete in kilograms.\n        required: true\n        schema:\n          type: number\n          format: float\n      responses:\n        200:\n          description: Profile information for the authenticated athlete.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DetailedAthlete'\n              example:\n                id: 1.2345678987655098E22\n                username: marianne_v\n                resource_state: 3\n                firstname: Marianne\n                lastname: V.\n                city: San Francisco\n                state: CA\n                country: US\n                sex: F\n                premium: true\n                created_at: 2017-11-14T02:30:05Z\n                updated_at: 2018-02-06T19:32:20Z\n                badge_type_id: 4\n                profile_medium: https://xxxxxx.cloudfront.net/pictures/athletes/1234567898765509876/1234567898765509876/2/medium.jpg\n                profile: https://xxxxx.cloudfront.net/pictures/athletes/1234567898765509876/1234567898765509876/2/large.jpg\n                follower_count: 5\n                friend_count: 5\n                mutual_friend_count: 0\n                athlete_type: 1\n                date_preference: '%m/%d/%Y'\n                measurement_preference: feet\n                clubs: []\n                weight: 0\n                bikes:\n                - id: b1234567898765509876\n                  primary: true\n                  name: EMC\n                  resource_state: 2\n                  distance: 0\n                shoes:\n                - id: g1234567898765509876\n                  primary: true\n                  name: adidas\n                  resource_state: 2\n                  distance: 4904\n        default:\n          description: Unexpected error.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Fault'\n  /athlete/zones:\n    get:\n      tags:\n      - Athletes\n      summary: Get Zones\n      description: Returns the the authenticated athlete's heart rate and power zones.\n        Requires profile:read_all.\n      operationId: getLoggedInAthleteZones\n      responses:\n        200:\n          description: Heart rate and power zones.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Zones'\n              example:\n              - distribution_buckets:\n                - max: 0\n                  min: 0\n                  time: 1498\n                - max: 50\n                  min: 0\n                  time: 62\n                - max: 100\n                  min: 50\n                  time: 169\n                - max: 150\n                  min: 100\n                  time: 536\n                - max: 200\n                  min: 150\n                  time: 672\n                - max: 250\n                  min: 200\n                  time: 821\n                - max: 300\n                  min: 250\n                  time: 529\n                - max: 350\n                  min: 300\n                  time: 251\n                - max: 400\n                  min: 350\n                  time: 80\n                - max: 450\n                  min: 400\n                  time: 81\n                - max: -1\n                  min: 450\n                  time: 343\n                type: power\n                resource_state: 3\n                sensor_based: true\n        default:\n          description: Unexpected error.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Fault'\n  /segments/{id}:\n    get:\n      tags:\n      - Segments\n      summary: Get Segment\n      description: Returns the specified segment. read_all scope required in order\n        to retrieve athlete-specific segment information, or to retrieve private segments.\n      operationId: getSegmentById\n      parameters:\n      - name: id\n        in: path\n        description: The identifier of the segment.\n        required: true\n        schema:\n          type: integer\n          format: int64\n      responses:\n        200:\n          description: Representation of a segment.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DetailedSegment'\n              example:\n                id: 229781\n                resource_state: 3\n                name: Hawk Hill\n                activity_type: Ride\n                distance: 2684.82\n                average_grade: 5.7\n                maximum_grade: 14.2\n                elevation_high: 245.3\n                elevation_low: 92.4\n                start_latlng:\n                - 37.8331119\n                - -122.4834356\n                end_latlng:\n                - 37.8280722\n                - -122.4981393\n                climb_category: 1\n                city: San Francisco\n                state: CA\n                country: United States\n                private: false\n                hazardous: false\n                starred: false\n                created_at: 2009-09-21T20:29:41Z\n                updated_at: 2018-02-15T09:04:18Z\n                total_elevation_gain: 155.733\n                map:\n                  id: s229781\n                  polyline: '}g|eFnpqjVl@En@Md@HbAd@d@^h@Xx@VbARjBDh@OPQf@w@d@k@XKXDFPH\\EbGT`AV`@v@|@NTNb@?XOb@cAxAWLuE@eAFMBoAv@eBt@q@b@}@tAeAt@i@dAC`AFZj@dB?~@[h@MbAVn@b@b@\\d@Eh@Qb@_@d@eB|@c@h@WfBK|AMpA?VF\\\\t@f@t@h@j@|@b@hCb@b@XTd@Bl@GtA?jAL`ALp@Tr@RXd@Rx@Pn@^Zh@Tx@Zf@`@FTCzDy@f@Yx@m@n@Op@VJr@'\n                  resource_state: 3\n                effort_count: 309974\n                athlete_count: 30623\n                star_count: 2428\n                athlete_segment_stats:\n                  pr_elapsed_time: 553\n                  pr_date: 1993-04-03\n                  effort_count: 2\n        default:\n          description: Unexpected error.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Fault'\n  /segments/starred:\n    get:\n      tags:\n      - Segments\n      summary: List Starred Segments\n      description: List of the authenticated athlete's starred segments. Private segments\n        are filtered out unless requested by a token with read_all scope.\n      operationId: getLoggedInAthleteStarredSegments\n      parameters:\n      - name: page\n        in: query\n        description: Page number. Defaults to 1.\n        schema:\n          type: integer\n      - name: per_page\n        in: query\n        description: Number of items per page. Defaults to 30.\n        schema:\n          type: integer\n          default: 30\n      responses:\n        200:\n          description: List of the authenticated athlete's starred segments.\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/SummarySegment'\n              example:\n                id: 229781\n                resource_state: 3\n                name: Hawk Hill\n                activity_type: Ride\n                distance: 2684.82\n                average_grade: 5.7\n                maximum_grade: 14.2\n                elevation_high: 245.3\n                elevation_low: 92.4\n                start_latlng:\n                - 37.8331119\n                - -122.4834356\n                end_latlng:\n                - 37.8280722\n                - -122.4981393\n                climb_category: 1\n                city: San Francisco\n                state: CA\n                country: United States\n                private: false\n                hazardous: false\n                starred: false\n                created_at: 2009-09-21T20:29:41Z\n                updated_at: 2018-02-15T09:04:18Z\n                total_elevation_gain: 155.733\n                map:\n                  id: s229781\n                  polyline: '}g|eFnpqjVl@En@Md@HbAd@d@^h@Xx@VbARjBDh@OPQf@w@d@k@XKXDFPH\\EbGT`AV`@v@|@NTNb@?XOb@cAxAWLuE@eAFMBoAv@eBt@q@b@}@tAeAt@i@dAC`AFZj@dB?~@[h@MbAVn@b@b@\\d@Eh@Qb@_@d@eB|@c@h@WfBK|AMpA?VF\\\\t@f@t@h@j@|@b@hCb@b@XTd@Bl@GtA?jAL`ALp@Tr@RXd@Rx@Pn@^Zh@Tx@Zf@`@FTCzDy@f@Yx@m@n@Op@VJr@'\n                  resource_state: 3\n                effort_count: 309974\n                athlete_count: 30623\n                star_count: 2428\n                athlete_segment_stats:\n                  pr_elapsed_time: 553\n                  pr_date: 1993-04-03\n                  effort_count: 2\n        default:\n          description: Unexpected error.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Fault'\n  /segments/{id}/starred:\n    put:\n      tags:\n      - Segments\n      summary: Star Segment\n      description: Stars/Unstars the given segment for the authenticated athlete.\n        Requires profile:write scope.\n      operationId: starSegment\n      parameters:\n      - name: id\n        in: path\n        description: The identifier of the segment to star.\n        required: true\n        schema:\n          type: integer\n          format: int64\n      requestBody:\n        content:\n          multipart/form-data:\n            schema:\n              required:\n              - starred\n              properties:\n                starred:\n                  type: boolean\n                  description: If true, star the segment; if false, unstar the segment.\n                  default: false\n        required: true\n      responses:\n        200:\n          description: Representation of a segment.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DetailedSegment'\n              example:\n                id: 229781\n                resource_state: 3\n                name: Hawk Hill\n                activity_type: Ride\n                distance: 2684.82\n                average_grade: 5.7\n                maximum_grade: 14.2\n                elevation_high: 245.3\n                elevation_low: 92.4\n                start_latlng:\n                - 37.8331119\n                - -122.4834356\n                end_latlng:\n                - 37.8280722\n                - -122.4981393\n                climb_category: 1\n                city: San Francisco\n                state: CA\n                country: United States\n                private: false\n                hazardous: false\n                starred: false\n                created_at: 2009-09-21T20:29:41Z\n                updated_at: 2018-02-15T09:04:18Z\n                total_elevation_gain: 155.733\n                map:\n                  id: s229781\n                  polyline: '}g|eFnpqjVl@En@Md@HbAd@d@^h@Xx@VbARjBDh@OPQf@w@d@k@XKXDFPH\\EbGT`AV`@v@|@NTNb@?XOb@cAxAWLuE@eAFMBoAv@eBt@q@b@}@tAeAt@i@dAC`AFZj@dB?~@[h@MbAVn@b@b@\\d@Eh@Qb@_@d@eB|@c@h@WfBK|AMpA?VF\\\\t@f@t@h@j@|@b@hCb@b@XTd@Bl@GtA?jAL`ALp@Tr@RXd@Rx@Pn@^Zh@Tx@Zf@`@FTCzDy@f@Yx@m@n@Op@VJr@'\n                  resource_state: 3\n                effort_count: 309974\n                athlete_count: 30623\n                star_count: 2428\n                athlete_segment_stats:\n                  pr_elapsed_time: 553\n                  pr_date: 1993-04-03\n                  effort_count: 2\n        default:\n          description: Unexpected error.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Fault'\n  /segment_efforts:\n    get:\n      tags:\n      - SegmentEfforts\n      summary: List Segment Efforts\n      description: Returns a set of the authenticated athlete's segment efforts for\n        a given segment.  Requires subscription.\n      operationId: getEffortsBySegmentId\n      parameters:\n      - name: segment_id\n        in: query\n        description: The identifier of the segment.\n        required: true\n        schema:\n          type: integer\n      - name: start_date_local\n        in: query\n        description: ISO 8601 formatted date time.\n        schema:\n          type: string\n          format: date-time\n      - name: end_date_local\n        in: query\n        description: ISO 8601 formatted date time.\n        schema:\n          type: string\n          format: date-time\n      - name: per_page\n        in: query\n        description: Number of items per page. Defaults to 30.\n        schema:\n          type: integer\n          default: 30\n      responses:\n        200:\n          description: List of segment efforts.\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/DetailedSegmentEffort'\n              example:\n              - id: 123456789\n                resource_state: 2\n                name: Alpe d'Huez\n                activity:\n                  id: 1234567890\n                  resource_state: 1\n                athlete:\n                  id: 123445678689\n                  resource_state: 1\n                elapsed_time: 1657\n                moving_time: 1642\n                start_date: 2007-09-15T08:15:29Z\n                start_date_local: 2007-09-15T09:15:29Z\n                distance: 6148.92\n                start_index: 1102\n                end_index: 1366\n                device_watts: false\n                average_watts: 220.2\n                segment:\n                  id: 788127\n                  resource_state: 2\n                  name: Alpe d'Huez\n                  activity_type: Ride\n                  distance: 6297.46\n                  average_grade: 4.8\n                  maximum_grade: 16.3\n                  elevation_high: 416\n                  elevation_low: 104.6\n                  start_latlng:\n                  - 52.98501000581467\n                  - -3.1869720001197366\n                  end_latlng:\n                  - 53.02204074375785\n                  - -3.2039630001245736\n                  climb_category: 2\n                  city: Le Bourg D'Oisans\n                  state: RA\n                  country: France\n                  private: false\n                  hazardous: false\n                  starred: false\n                achievements: []\n        default:\n          description: Unexpected error.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Fault'\n  /segments/explore:\n    get:\n      tags:\n      - Segments\n      summary: Explore segments\n      description: Returns the top 10 segments matching a specified query.\n      operationId: exploreSegments\n      parameters:\n      - name: bounds\n        in: query\n        description: 'The latitude and longitude for two points describing a rectangular\n          boundary for the search: [southwest corner latitutde, southwest corner longitude,\n          northeast corner latitude, northeast corner longitude]'\n        required: true\n        style: form\n        explode: false\n        schema:\n          maxItems: 4\n          minItems: 4\n          type: array\n          items:\n            type: number\n            format: float\n      - name: activity_type\n        in: query\n        description: Desired activity type.\n        schema:\n          type: string\n          enum:\n          - running\n          - riding\n      - name: min_cat\n        in: query\n        description: The minimum climbing category.\n        schema:\n          maximum: 5\n          minimum: 0\n          type: integer\n      - name: max_cat\n        in: query\n        description: The maximum climbing category.\n        schema:\n          maximum: 5\n          minimum: 0\n          type: integer\n      responses:\n        200:\n          description: List of matching segments.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ExplorerResponse'\n              example:\n                segments:\n                - id: 229781\n                  resource_state: 2\n                  name: Hawk Hill\n                  climb_category: 1\n                  climb_category_desc: \"4\"\n                  avg_grade: 5.7\n                  start_latlng:\n                  - 37.8331119\n                  - -122.4834356\n                  end_latlng:\n                  - 37.8280722\n                  - -122.4981393\n                  elev_difference: 152.8\n                  distance: 2684.8\n                  points: '}g|eFnpqjVl@En@Md@HbAd@d@^h@Xx@VbARjBDh@OPQf@w@d@k@XKXDFPH\\EbGT`AV`@v@|@NTNb@?XOb@cAxAWLuE@eAFMBoAv@eBt@q@b@}@tAeAt@i@dAC`AFZj@dB?~@[h@MbAVn@b@b@\\d@Eh@Qb@_@d@eB|@c@h@WfBK|AMpA?VF\\\\t@f@t@h@j@|@b@hCb@b@XTd@Bl@GtA?jAL`ALp@Tr@RXd@Rx@Pn@^Zh@Tx@Zf@`@FTCzDy@f@Yx@m@n@Op@VJr@'\n                  starred: false\n        default:\n          description: Unexpected error.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Fault'\n  /segment_efforts/{id}:\n    get:\n      tags:\n      - SegmentEfforts\n      summary: Get Segment Effort\n      description: Returns a segment effort from an activity that is owned by the\n        authenticated athlete. Requires subscription.\n      operationId: getSegmentEffortById\n      parameters:\n      - name: id\n        in: path\n        description: The identifier of the segment effort.\n        required: true\n        schema:\n          type: integer\n          format: int64\n      responses:\n        200:\n          description: Representation of a segment effort.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DetailedSegmentEffort'\n              example:\n                id: 1234556789\n                resource_state: 3\n                name: Alpe d'Huez\n                activity:\n                  id: 3454504\n                  resource_state: 1\n                athlete:\n                  id: 54321\n                  resource_state: 1\n                elapsed_time: 381\n                moving_time: 340\n                start_date: 2018-02-12T16:12:41Z\n                start_date_local: 2018-02-12T08:12:41Z\n                distance: 83\n                start_index: 65\n                end_index: 83\n                segment:\n                  id: 63450\n                  resource_state: 2\n                  name: Alpe d'Huez\n                  activity_type: Run\n                  distance: 780.35\n                  average_grade: -0.5\n                  maximum_grade: 0\n                  elevation_high: 21\n                  elevation_low: 17.2\n                  start_latlng:\n                  - 37.808407654682\n                  - -122.426682919323\n                  end_latlng:\n                  - 37.808297909724\n                  - -122.421324329674\n                  climb_category: 0\n                  city: San Francisco\n                  state: CA\n                  country: United States\n                  private: false\n                  hazardous: false\n                  starred: false\n                achievements: []\n                athlete_segment_stats:\n                  pr_elapsed_time: 212\n                  pr_date: 2015-02-12\n                  effort_count: 149\n        default:\n          description: Unexpected error.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Fault'\n  /running_races/{id}:\n    get:\n      tags:\n      - RunningRaces\n      summary: Get Running Race\n      description: Returns a running race for a given identifier.\n      operationId: getRunningRaceById\n      parameters:\n      - name: id\n        in: path\n        description: The identifier of the running race.\n        required: true\n        schema:\n          type: integer\n          format: int64\n      responses:\n        200:\n          description: Representation of a running race.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RunningRace'\n        default:\n          description: Unexpected error.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Fault'\n  /running_races:\n    get:\n      tags:\n      - RunningRaces\n      summary: List Running Races\n      description: Returns a list running races based on a set of search criteria.\n      operationId: getRunningRaces\n      parameters:\n      - name: year\n        in: query\n        description: Filters the list by a given year.\n        schema:\n          type: integer\n      responses:\n        200:\n          description: Representation of a list of running race.\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/RunningRace'\n        default:\n          description: Unexpected error.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Fault'\n  /activities:\n    post:\n      tags:\n      - Activities\n      summary: Create an Activity\n      description: Creates a manual activity for an athlete, requires activity:write\n        scope.\n      operationId: createActivity\n      requestBody:\n        content:\n          multipart/form-data:\n            schema:\n              required:\n              - elapsed_time\n              - name\n              - start_date_local\n              - type\n              properties:\n                name:\n                  type: string\n                  description: The name of the activity.\n                type:\n                  type: string\n                  description: Type of activity. For example - Run, Ride etc.\n                start_date_local:\n                  type: string\n                  description: ISO 8601 formatted date time.\n                  format: date-time\n                elapsed_time:\n                  type: integer\n                  description: In seconds.\n                  format: int32\n                description:\n                  type: string\n                  description: Description of the activity.\n                distance:\n                  type: number\n                  description: In meters.\n                  format: float\n                trainer:\n                  type: integer\n                  description: Set to 1 to mark as a trainer activity.\n                  format: int32\n                commute:\n                  type: integer\n                  description: Set to 1 to mark as commute.\n                  format: int32\n        required: true\n      responses:\n        201:\n          description: The activity's detailed representation.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DetailedActivity'\n              example:\n                id: 123456778928065\n                resource_state: 3\n                athlete:\n                  id: 12343545645788\n                  resource_state: 1\n                name: Chill Day\n                distance: 0\n                moving_time: 18373\n                elapsed_time: 18373\n                total_elevation_gain: 0\n                type: Ride\n                start_date: 2018-02-20T18:02:13Z\n                start_date_local: 2018-02-20T10:02:13Z\n                timezone: (GMT-08:00) America/Los_Angeles\n                utc_offset: -28800\n                achievement_count: 0\n                kudos_count: 0\n                comment_count: 0\n                athlete_count: 1\n                photo_count: 0\n                map:\n                  id: a12345678908766\n                  resource_state: 3\n                trainer: false\n                commute: false\n                manual: true\n                private: false\n                flagged: false\n                gear_id: b453542543\n                average_speed: 0\n                max_speed: 0\n                device_watts: false\n                has_heartrate: false\n                pr_count: 0\n                total_photo_count: 0\n                has_kudoed: false\n                calories: 0\n                segment_efforts: []\n        default:\n          description: Unexpected error.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Fault'\n  /activities/{id}:\n    get:\n      tags:\n      - Activities\n      summary: Get Activity\n      description: Returns the given activity that is owned by the authenticated athlete.\n        Requires activity:read for Everyone and Followers activities. Requires activity:read_all\n        for Only Me activities.\n      operationId: getActivityById\n      parameters:\n      - name: id\n        in: path\n        description: The identifier of the activity.\n        required: true\n        schema:\n          type: integer\n          format: int64\n      - name: include_all_efforts\n        in: query\n        description: To include all segments efforts.\n        schema:\n          type: boolean\n      responses:\n        200:\n          description: The activity's detailed representation.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DetailedActivity'\n              example:\n                id: 12345678987654320\n                resource_state: 3\n                external_id: garmin_push_12345678987654321\n                upload_id: 98765432123456780\n                athlete:\n                  id: 134815\n                  resource_state: 1\n                name: Happy Friday\n                distance: 28099\n                moving_time: 4207\n                elapsed_time: 4410\n                total_elevation_gain: 516\n                type: Ride\n                start_date: 2018-02-16T14:52:54Z\n                start_date_local: 2018-02-16T06:52:54Z\n                timezone: (GMT-08:00) America/Los_Angeles\n                utc_offset: -28800\n                start_latlng:\n                - 37.83\n                - -122.26\n                end_latlng:\n                - 37.83\n                - -122.26\n                achievement_count: 0\n                kudos_count: 19\n                comment_count: 0\n                athlete_count: 1\n                photo_count: 0\n                map:\n                  id: a1410355832\n                  polyline: ki{eFvqfiVqAWQIGEEKAYJgBVqDJ{BHa@jAkNJw@Pw@V{APs@^aABQAOEQGKoJ_FuJkFqAo@{A}@sH{DiAs@Q]?WVy@`@oBt@_CB]KYMMkB{AQEI@WT{BlE{@zAQPI@ICsCqA_BcAeCmAaFmCqIoEcLeG}KcG}A}@cDaBiDsByAkAuBqBi@y@_@o@o@kB}BgIoA_EUkAMcACa@BeBBq@LaAJe@b@uA`@_AdBcD`@iAPq@RgALqAB{@EqAyAoOCy@AmCBmANqBLqAZkB\\iCPiBJwCCsASiCq@iD]eA]y@[i@w@mAa@i@k@g@kAw@i@Ya@Q]EWFMLa@~BYpAFNpA`Aj@n@X`@V`AHh@JfB@xAMvAGZGHIDIAWOEQNcC@sACYK[MSOMe@QKKKYOs@UYQISCQ?Q@WNo@r@OHGAGCKOQ_BU}@MQGG]Io@@c@FYNg@d@s@d@ODQAMOMaASs@_@a@SESAQDqBn@a@RO?KK?UBU\\kA@Y?WMo@Iy@GWQ_@WSSGg@AkABQB_Ap@_A^o@b@Q@o@IS@OHi@n@OFS?OI}@iAQMQGQC}@DOIIUK{@IUOMyBo@kASOKIQCa@L[|AgATWN[He@?QKw@FOPCh@Fx@l@TDLELKl@aAHIJEX@r@ZTDV@LENQVg@RkA@c@MeA?WFOPMf@Ej@Fj@@LGHKDM?_@_@iC?a@HKRIl@NT?FCHMFW?YEYGWQa@GYBiAIq@Gq@L_BHSHK|@WJETSLQZs@z@_A~@uA^U`@G\\CRB\\Tl@p@Th@JZ^bB`@lAHLXVLDP?LGFSKiDBo@d@wBVi@R]VYVE\\@`@Lh@Fh@CzAk@RSDQA]GYe@eAGWSiBAWBWBIJORK`@KPOPSTg@h@}Ad@o@F[E_@EGMKUGmAEYGMIMYKs@?a@J}@@_BD_@HQJMx@e@LKHKHWAo@UoAAWFmAH}@?w@C[YwAAc@HSNM|Ao@rA}@zAq@`@a@j@eAxAuBXQj@MXSR[b@gAFg@?YISOGaAHi@Xw@v@_@d@WRSFqARUHQJc@d@m@`A[VSFUBcAEU@WFULUPa@v@Y~@UrBc@dBI~@?l@P~ABt@N`HEjA]zAEp@@p@TrBCl@CTQb@k@dAg@jAU^KJYLK@k@A[Js@d@a@b@]RgBl@[FMAw@[]G]?m@D_@F]P[Vu@t@[TMF_@Do@E_@@q@P]PWZUZw@vAkAlAGJOj@IlAMd@OR{@p@a@d@sBpD]v@a@`Aa@n@]TODgBVk@Pe@^cBfBc@Rs@La@RSPm@|@wCpDS^Wp@QZML{@l@qBbCYd@k@lAIVCZBZNTr@`@RRHZANIZQPKDW@e@CaASU?I@YTKRQx@@\\VmALYRQLCL?v@P|@D\\GJEFKDM@OCa@COOYIGm@YMUCM@]JYr@uAx@kAt@}@jAeAPWbAkBj@s@bAiAz@oAj@m@VQlAc@VQ~@aA`Au@p@Q`AIv@MZORUV_@p@iB|AoCh@q@dAaANUNWH[N{AJ[^m@t@_Av@wA\\a@`@W`@In@Al@B^E`@Wl@u@\\[VQ\\K`@Eb@?R@dAZP@d@CRExAs@\\Yt@{@LG\\MjAATINOXo@d@kAl@_AHYBOCe@QiBCm@Fq@\\wADo@AyGEeBWuB@YHu@Tu@Lk@VcCTo@d@aA\\WJE`@G~@FP?VI\\U~@sANO`@SfAMj@U\\WjAsAXS`@UNENALBHFFL?^Ml@Uj@]b@q@RUJSPkChEc@XcAb@sA|@]PaA\\OJKNER?TDTNj@Jn@?p@OfC@ZR`B@VCV_@n@{@l@WbACv@OlABnAPl@LNNHbBBNBLFFJ@^GLg@x@i@|AMP[X}@XOJKPET?l@LhAFXp@fBDRCd@S\\_@Ps@PQ@}A]S?QDe@V]b@MR[fAKt@ErAF~CANILYDKGIKe@{@Yy@e@sB[gA[c@e@YUCU?WBUHUNQPq@`AiArAMV[^e@Zc@JQJKNMz@?r@Bb@PfAAfA@VVbADn@E`@KHSEe@SMAKDKFM\\^dDCh@m@LoAQ_@@MFOZLfBEl@QbASd@KLQBOAaAc@QAQ@QHc@v@ONMJOBOCg@c@]O[EMBKFGL?RHv@ARERGNe@h@{@h@WVGNDt@JLNFPFz@LdBf@f@PJNHPF`ADPJJJDl@I`@B^Tp@bALJNDNALIf@i@PGPCt@DNE`@Uv@[dAw@RITGRCtAARBPJLPJRZxB?VEX_@vAAR?RDNHJJBh@UnBm@h@IRDRJNNJPNbBFRJLLBLCzAmAd@Uf@Gf@?P@PFJNHPFTH`BDTHNJJJ@LG`@m@^YPER@RDPHNNJRLn@HRLN^VNPHTFX@\\UlDFb@FHh@NP@HKPsB?}ASkCQ{@[y@q@}@cA{@KOCQDa@t@{CFGJCf@Nl@ZtA~@r@p@`@h@rAxBd@rA\\fARdAPjANrB?f@AtBCd@QfBkAjJOlBChA?rBFrBNlBdAfKFzAC~@Iz@Mz@Sv@s@jBmAxBi@hAWt@Sv@Qx@O`BA`@?dAPfBVpAd@`BfBlFf@fBdA~Cr@pAz@fApBhBjAt@H?IL?FBFJLx@^lHvDvh@~XnElCbAd@pGhDbAb@nAr@`Ad@`GhDnBbAxCbBrWhNJJDPARGP_@t@Qh@]pAUtAoA`Ny@jJApBBNFLJFJBv@Hb@HBF?\\\n                  resource_state: 3\n                  summary_polyline: ki{eFvqfiVsBmA`Feh@qg@iX`B}JeCcCqGjIq~@kf@cM{KeHeX`@_GdGkSeBiXtB}YuEkPwFyDeAzAe@pC~DfGc@bIOsGmCcEiD~@oBuEkFhBcBmDiEfAVuDiAuD}NnDaNiIlCyDD_CtJKv@wGhD]YyEzBo@g@uKxGmHpCGtEtI~AuLrHkAcAaIvEgH_EaDR_FpBuBg@sNxHqEtHgLoTpIiCzKNr[sB|Es\\`JyObYeMbGsMnPsAfDxAnD}DBu@bCx@{BbEEyAoD`AmChNoQzMoGhOwX|[yIzBeFKg[zAkIdU_LiHxK}HzEh@vM_BtBg@xGzDbCcF~GhArHaIfByAhLsDiJuC?_HbHd@nL_Cz@ZnEkDDy@hHwJLiCbIrNrIvN_EfAjDWlEnEiAfBxDlFkBfBtEfDaAzBvDKdFx@|@XgJmDsHhAgD`GfElEzOwBnYdBxXgGlSc@bGdHpW|HdJztBnhAgFxc@HnCvBdA\n                trainer: false\n                commute: false\n                manual: false\n                private: false\n                flagged: false\n                gear_id: b12345678987654321\n                from_accepted_tag: false\n                average_speed: 6.679\n                max_speed: 18.5\n                average_cadence: 78.5\n                average_temp: 4\n                average_watts: 185.5\n                weighted_average_watts: 230\n                kilojoules: 780.5\n                device_watts: true\n                has_heartrate: false\n                max_watts: 743\n                elev_high: 446.6\n                elev_low: 17.2\n                pr_count: 0\n                total_photo_count: 2\n                has_kudoed: false\n                workout_type: 10\n                description: \"\"\n                calories: 870.2\n                segment_efforts:\n                - id: 12345678987654320\n                  resource_state: 2\n                  name: Tunnel Rd.\n                  activity:\n                    id: 12345678987654320\n                    resource_state: 1\n                  athlete:\n                    id: 134815\n                    resource_state: 1\n                  elapsed_time: 2038\n                  moving_time: 2038\n                  start_date: 2018-02-16T14:56:25Z\n                  start_date_local: 2018-02-16T06:56:25Z\n                  distance: 9434.8\n                  start_index: 211\n                  end_index: 2246\n                  average_cadence: 78.6\n                  device_watts: true\n                  average_watts: 237.6\n                  segment:\n                    id: 673683\n                    resource_state: 2\n                    name: Tunnel Rd.\n                    activity_type: Ride\n                    distance: 9220.7\n                    average_grade: 4.2\n                    maximum_grade: 25.8\n                    elevation_high: 426.5\n                    elevation_low: 43.4\n                    start_latlng:\n                    - 37.8346153\n                    - -122.2520872\n                    end_latlng:\n                    - 37.8476261\n                    - -122.2008944\n                    climb_category: 3\n                    city: Oakland\n                    state: CA\n                    country: United States\n                    private: false\n                    hazardous: false\n                    starred: false\n                  achievements: []\n                  hidden: false\n                splits_metric:\n                - distance: 1001.5\n                  elapsed_time: 141\n                  elevation_difference: 4.4\n                  moving_time: 141\n                  split: 1\n                  average_speed: 7.1\n                  pace_zone: 0\n                laps:\n                - id: 4479306946\n                  resource_state: 2\n                  name: Lap 1\n                  activity:\n                    id: 1410355832\n                    resource_state: 1\n                  athlete:\n                    id: 134815\n                    resource_state: 1\n                  elapsed_time: 1573\n                  moving_time: 1569\n                  start_date: 2018-02-16T14:52:54Z\n                  start_date_local: 2018-02-16T06:52:54Z\n                  distance: 8046.72\n                  start_index: 0\n                  end_index: 1570\n                  total_elevation_gain: 276\n                  average_speed: 5.12\n                  max_speed: 9.5\n                  average_cadence: 78.6\n                  device_watts: true\n                  average_watts: 233.1\n                  lap_index: 1\n                  split: 1\n                gear:\n                  id: b12345678987654321\n                  primary: true\n                  name: Tarmac\n                  resource_state: 2\n                  distance: 32547610\n                photos:\n                  primary:\n                    unique_id: 3FDGKL3-204E-4867-9E8D-89FC79EAAE17\n                    urls:\n                      100: https://dgtzuqphqg23d.cloudfront.net/Bv93zv5t_mr57v0wXFbY_JyvtucgmU5Ym6N9z_bKeUI-128x96.jpg\n                      600: https://dgtzuqphqg23d.cloudfront.net/Bv93zv5t_mr57v0wXFbY_JyvtucgmU5Ym6N9z_bKeUI-768x576.jpg\n                    source: 1\n                  use_primary_photo: true\n                  count: 2\n                highlighted_kudosers:\n                - destination_url: strava://athletes/12345678987654321\n                  display_name: Marianne V.\n                  avatar_url: https://dgalywyr863hv.cloudfront.net/pictures/athletes/12345678987654321/12345678987654321/3/medium.jpg\n                  show_name: true\n                device_name: Garmin Edge 1030\n                embed_token: 18e4615989b47dd4ff3dc711b0aa4502e4b311a9\n                segment_leaderboard_opt_out: false\n                leaderboard_opt_out: false\n        default:\n          description: Unexpected error.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Fault'\n    put:\n      tags:\n      - Activities\n      summary: Update Activity\n      description: Updates the given activity that is owned by the authenticated athlete.\n        Requires activity:write. Also requires activity:read_all in order to update\n        Only Me activities\n      operationId: updateActivityById\n      parameters:\n      - name: id\n        in: path\n        description: The identifier of the activity.\n        required: true\n        schema:\n          type: integer\n          format: int64\n      requestBody:\n        content:\n          '*/*':\n            schema:\n              $ref: '#/components/schemas/UpdatableActivity'\n        required: false\n      responses:\n        200:\n          description: The activity's detailed representation.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DetailedActivity'\n              example:\n                id: 12345678987654320\n                resource_state: 3\n                external_id: garmin_push_12345678987654321\n                upload_id: 98765432123456780\n                athlete:\n                  id: 134815\n                  resource_state: 1\n                name: Happy Friday\n                distance: 28099\n                moving_time: 4207\n                elapsed_time: 4410\n                total_elevation_gain: 516\n                type: Ride\n                start_date: 2018-02-16T14:52:54Z\n                start_date_local: 2018-02-16T06:52:54Z\n                timezone: (GMT-08:00) America/Los_Angeles\n                utc_offset: -28800\n                start_latlng:\n                - 37.83\n                - -122.26\n                end_latlng:\n                - 37.83\n                - -122.26\n                location_country: United States\n                achievement_count: 0\n                kudos_count: 19\n                comment_count: 0\n                athlete_count: 1\n                photo_count: 0\n                map:\n                  id: a1410355832\n                  polyline: ki{eFvqfiVqAWQIGEEKAYJgBVqDJ{BHa@jAkNJw@Pw@V{APs@^aABQAOEQGKoJ_FuJkFqAo@{A}@sH{DiAs@Q]?WVy@`@oBt@_CB]KYMMkB{AQEI@WT{BlE{@zAQPI@ICsCqA_BcAeCmAaFmCqIoEcLeG}KcG}A}@cDaBiDsByAkAuBqBi@y@_@o@o@kB}BgIoA_EUkAMcACa@BeBBq@LaAJe@b@uA`@_AdBcD`@iAPq@RgALqAB{@EqAyAoOCy@AmCBmANqBLqAZkB\\iCPiBJwCCsASiCq@iD]eA]y@[i@w@mAa@i@k@g@kAw@i@Ya@Q]EWFMLa@~BYpAFNpA`Aj@n@X`@V`AHh@JfB@xAMvAGZGHIDIAWOEQNcC@sACYK[MSOMe@QKKKYOs@UYQISCQ?Q@WNo@r@OHGAGCKOQ_BU}@MQGG]Io@@c@FYNg@d@s@d@ODQAMOMaASs@_@a@SESAQDqBn@a@RO?KK?UBU\\kA@Y?WMo@Iy@GWQ_@WSSGg@AkABQB_Ap@_A^o@b@Q@o@IS@OHi@n@OFS?OI}@iAQMQGQC}@DOIIUK{@IUOMyBo@kASOKIQCa@L[|AgATWN[He@?QKw@FOPCh@Fx@l@TDLELKl@aAHIJEX@r@ZTDV@LENQVg@RkA@c@MeA?WFOPMf@Ej@Fj@@LGHKDM?_@_@iC?a@HKRIl@NT?FCHMFW?YEYGWQa@GYBiAIq@Gq@L_BHSHK|@WJETSLQZs@z@_A~@uA^U`@G\\CRB\\Tl@p@Th@JZ^bB`@lAHLXVLDP?LGFSKiDBo@d@wBVi@R]VYVE\\@`@Lh@Fh@CzAk@RSDQA]GYe@eAGWSiBAWBWBIJORK`@KPOPSTg@h@}Ad@o@F[E_@EGMKUGmAEYGMIMYKs@?a@J}@@_BD_@HQJMx@e@LKHKHWAo@UoAAWFmAH}@?w@C[YwAAc@HSNM|Ao@rA}@zAq@`@a@j@eAxAuBXQj@MXSR[b@gAFg@?YISOGaAHi@Xw@v@_@d@WRSFqARUHQJc@d@m@`A[VSFUBcAEU@WFULUPa@v@Y~@UrBc@dBI~@?l@P~ABt@N`HEjA]zAEp@@p@TrBCl@CTQb@k@dAg@jAU^KJYLK@k@A[Js@d@a@b@]RgBl@[FMAw@[]G]?m@D_@F]P[Vu@t@[TMF_@Do@E_@@q@P]PWZUZw@vAkAlAGJOj@IlAMd@OR{@p@a@d@sBpD]v@a@`Aa@n@]TODgBVk@Pe@^cBfBc@Rs@La@RSPm@|@wCpDS^Wp@QZML{@l@qBbCYd@k@lAIVCZBZNTr@`@RRHZANIZQPKDW@e@CaASU?I@YTKRQx@@\\VmALYRQLCL?v@P|@D\\GJEFKDM@OCa@COOYIGm@YMUCM@]JYr@uAx@kAt@}@jAeAPWbAkBj@s@bAiAz@oAj@m@VQlAc@VQ~@aA`Au@p@Q`AIv@MZORUV_@p@iB|AoCh@q@dAaANUNWH[N{AJ[^m@t@_Av@wA\\a@`@W`@In@Al@B^E`@Wl@u@\\[VQ\\K`@Eb@?R@dAZP@d@CRExAs@\\Yt@{@LG\\MjAATINOXo@d@kAl@_AHYBOCe@QiBCm@Fq@\\wADo@AyGEeBWuB@YHu@Tu@Lk@VcCTo@d@aA\\WJE`@G~@FP?VI\\U~@sANO`@SfAMj@U\\WjAsAXS`@UNENALBHFFL?^Ml@Uj@]b@q@RUJSPkChEc@XcAb@sA|@]PaA\\OJKNER?TDTNj@Jn@?p@OfC@ZR`B@VCV_@n@{@l@WbACv@OlABnAPl@LNNHbBBNBLFFJ@^GLg@x@i@|AMP[X}@XOJKPET?l@LhAFXp@fBDRCd@S\\_@Ps@PQ@}A]S?QDe@V]b@MR[fAKt@ErAF~CANILYDKGIKe@{@Yy@e@sB[gA[c@e@YUCU?WBUHUNQPq@`AiArAMV[^e@Zc@JQJKNMz@?r@Bb@PfAAfA@VVbADn@E`@KHSEe@SMAKDKFM\\^dDCh@m@LoAQ_@@MFOZLfBEl@QbASd@KLQBOAaAc@QAQ@QHc@v@ONMJOBOCg@c@]O[EMBKFGL?RHv@ARERGNe@h@{@h@WVGNDt@JLNFPFz@LdBf@f@PJNHPF`ADPJJJDl@I`@B^Tp@bALJNDNALIf@i@PGPCt@DNE`@Uv@[dAw@RITGRCtAARBPJLPJRZxB?VEX_@vAAR?RDNHJJBh@UnBm@h@IRDRJNNJPNbBFRJLLBLCzAmAd@Uf@Gf@?P@PFJNHPFTH`BDTHNJJJ@LG`@m@^YPER@RDPHNNJRLn@HRLN^VNPHTFX@\\UlDFb@FHh@NP@HKPsB?}ASkCQ{@[y@q@}@cA{@KOCQDa@t@{CFGJCf@Nl@ZtA~@r@p@`@h@rAxBd@rA\\fARdAPjANrB?f@AtBCd@QfBkAjJOlBChA?rBFrBNlBdAfKFzAC~@Iz@Mz@Sv@s@jBmAxBi@hAWt@Sv@Qx@O`BA`@?dAPfBVpAd@`BfBlFf@fBdA~Cr@pAz@fApBhBjAt@H?IL?FBFJLx@^lHvDvh@~XnElCbAd@pGhDbAb@nAr@`Ad@`GhDnBbAxCbBrWhNJJDPARGP_@t@Qh@]pAUtAoA`Ny@jJApBBNFLJFJBv@Hb@HBF?\\\n                  resource_state: 3\n                  summary_polyline: ki{eFvqfiVsBmA`Feh@qg@iX`B}JeCcCqGjIq~@kf@cM{KeHeX`@_GdGkSeBiXtB}YuEkPwFyDeAzAe@pC~DfGc@bIOsGmCcEiD~@oBuEkFhBcBmDiEfAVuDiAuD}NnDaNiIlCyDD_CtJKv@wGhD]YyEzBo@g@uKxGmHpCGtEtI~AuLrHkAcAaIvEgH_EaDR_FpBuBg@sNxHqEtHgLoTpIiCzKNr[sB|Es\\`JyObYeMbGsMnPsAfDxAnD}DBu@bCx@{BbEEyAoD`AmChNoQzMoGhOwX|[yIzBeFKg[zAkIdU_LiHxK}HzEh@vM_BtBg@xGzDbCcF~GhArHaIfByAhLsDiJuC?_HbHd@nL_Cz@ZnEkDDy@hHwJLiCbIrNrIvN_EfAjDWlEnEiAfBxDlFkBfBtEfDaAzBvDKdFx@|@XgJmDsHhAgD`GfElEzOwBnYdBxXgGlSc@bGdHpW|HdJztBnhAgFxc@HnCvBdA\n                trainer: false\n                commute: false\n                manual: false\n                private: false\n                flagged: false\n                gear_id: b12345678987654321\n                from_accepted_tag: false\n                average_speed: 6.679\n                max_speed: 18.5\n                average_cadence: 78.5\n                average_temp: 4\n                average_watts: 185.5\n                weighted_average_watts: 230\n                kilojoules: 780.5\n                device_watts: true\n                has_heartrate: false\n                max_watts: 743\n                elev_high: 446.6\n                elev_low: 17.2\n                pr_count: 0\n                total_photo_count: 2\n                has_kudoed: false\n                workout_type: 10\n                description: \"\"\n                calories: 870.2\n                segment_efforts:\n                - id: 12345678987654320\n                  resource_state: 2\n                  name: Tunnel Rd.\n                  activity:\n                    id: 12345678987654320\n                    resource_state: 1\n                  athlete:\n                    id: 12345678987654320\n                    resource_state: 1\n                  elapsed_time: 2038\n                  moving_time: 2038\n                  start_date: 2018-02-16T14:56:25Z\n                  start_date_local: 2018-02-16T06:56:25Z\n                  distance: 9434.8\n                  start_index: 211\n                  end_index: 2246\n                  average_cadence: 78.6\n                  device_watts: true\n                  average_watts: 237.6\n                  segment:\n                    id: 673683\n                    resource_state: 2\n                    name: Tunnel Rd.\n                    activity_type: Ride\n                    distance: 9220.7\n                    average_grade: 4.2\n                    maximum_grade: 25.8\n                    elevation_high: 426.5\n                    elevation_low: 43.4\n                    start_latlng:\n                    - 37.8346153\n                    - -122.2520872\n                    end_latlng:\n                    - 37.8476261\n                    - -122.2008944\n                    climb_category: 3\n                    city: Oakland\n                    state: CA\n                    country: United States\n                    private: false\n                    hazardous: false\n                    starred: false\n                  achievements: []\n                  hidden: false\n                splits_metric:\n                - distance: 1001.5\n                  elapsed_time: 141\n                  elevation_difference: 4.4\n                  moving_time: 141\n                  split: 1\n                  average_speed: 7.1\n                  pace_zone: 0\n                laps:\n                - id: 4479306946\n                  resource_state: 2\n                  name: Lap 1\n                  activity:\n                    id: 1410355832\n                    resource_state: 1\n                  athlete:\n                    id: 134815\n                    resource_state: 1\n                  elapsed_time: 1573\n                  moving_time: 1569\n                  start_date: 2018-02-16T14:52:54Z\n                  start_date_local: 2018-02-16T06:52:54Z\n                  distance: 8046.72\n                  start_index: 0\n                  end_index: 1570\n                  total_elevation_gain: 276\n                  average_speed: 5.12\n                  max_speed: 9.5\n                  average_cadence: 78.6\n                  device_watts: true\n                  average_watts: 233.1\n                  lap_index: 1\n                  split: 1\n                gear:\n                  id: b12345678987654321\n                  primary: true\n                  name: Tarmac\n                  resource_state: 2\n                  distance: 32547610\n                photos:\n                  primary:\n                    unique_id: 3FDGKL3-204E-4867-9E8D-89FC79EAAE17\n                    urls:\n                      100: https://dgtzuqphqg23d.cloudfront.net/Bv93zv5t_mr57v0wXFbY_JyvtucgmU5Ym6N9z_bKeUI-128x96.jpg\n                      600: https://dgtzuqphqg23d.cloudfront.net/Bv93zv5t_mr57v0wXFbY_JyvtucgmU5Ym6N9z_bKeUI-768x576.jpg\n                    source: 1\n                  use_primary_photo: true\n                  count: 2\n                highlighted_kudosers:\n                - destination_url: strava://athletes/12345678987654321\n                  display_name: Marianne V.\n                  avatar_url: https://dgalywyr863hv.cloudfront.net/pictures/athletes/12345678987654321/12345678987654321/3/medium.jpg\n                  show_name: true\n                device_name: Garmin Edge 1030\n                embed_token: 18e4615989b47dd4ff3dc711b0aa4502e4b311a9\n                segment_leaderboard_opt_out: false\n                leaderboard_opt_out: false\n        default:\n          description: Unexpected error.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Fault'\n      x-codegen-request-body-name: body\n  /athlete/activities:\n    get:\n      tags:\n      - Activities\n      summary: List Athlete Activities\n      description: Returns the activities of an athlete for a specific identifier.\n        Requires activity:read. Only Me activities will be filtered out unless requested\n        by a token with activity:read_all.\n      operationId: getLoggedInAthleteActivities\n      parameters:\n      - name: before\n        in: query\n        description: An epoch timestamp to use for filtering activities that have\n          taken place before a certain time.\n        schema:\n          type: integer\n      - name: after\n        in: query\n        description: An epoch timestamp to use for filtering activities that have\n          taken place after a certain time.\n        schema:\n          type: integer\n      - name: page\n        in: query\n        description: Page number. Defaults to 1.\n        schema:\n          type: integer\n      - name: per_page\n        in: query\n        description: Number of items per page. Defaults to 30.\n        schema:\n          type: integer\n          default: 30\n      responses:\n        200:\n          description: The authenticated athlete's activities\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/SummaryActivity'\n              example:\n              - resource_state: 2\n                athlete:\n                  id: 134815\n                  resource_state: 1\n                name: Happy Friday\n                distance: 24931.4\n                moving_time: 4500\n                elapsed_time: 4500\n                total_elevation_gain: 0\n                type: Ride\n                id: 154504250376823\n                external_id: garmin_push_12345678987654321\n                upload_id: 987654321234567900000\n                start_date: 2018-05-02T12:15:09Z\n                start_date_local: 2018-05-02T05:15:09Z\n                timezone: (GMT-08:00) America/Los_Angeles\n                utc_offset: -25200\n                location_country: United States\n                achievement_count: 0\n                kudos_count: 3\n                comment_count: 1\n                athlete_count: 1\n                photo_count: 0\n                map:\n                  id: a12345678987654321\n                  resource_state: 2\n                trainer: true\n                commute: false\n                manual: false\n                private: false\n                flagged: false\n                gear_id: b12345678987654321\n                from_accepted_tag: false\n                average_speed: 5.54\n                max_speed: 11\n                average_cadence: 67.1\n                average_watts: 175.3\n                weighted_average_watts: 210\n                kilojoules: 788.7\n                device_watts: true\n                has_heartrate: true\n                average_heartrate: 140.3\n                max_heartrate: 178\n                max_watts: 406\n                pr_count: 0\n                total_photo_count: 1\n                has_kudoed: false\n                suffer_score: 82\n              - resource_state: 2\n                athlete:\n                  id: 167560\n                  resource_state: 1\n                name: Bondcliff\n                distance: 23676.5\n                moving_time: 5400\n                elapsed_time: 5400\n                total_elevation_gain: 0\n                type: Ride\n                id: 1234567809\n                external_id: garmin_push_12345678987654321\n                upload_id: 1234567819\n                start_date: 2018-04-30T12:35:51Z\n                start_date_local: 2018-04-30T05:35:51Z\n                timezone: (GMT-08:00) America/Los_Angeles\n                utc_offset: -25200\n                location_country: United States\n                achievement_count: 0\n                kudos_count: 4\n                comment_count: 0\n                athlete_count: 1\n                photo_count: 0\n                map:\n                  id: a12345689\n                  resource_state: 2\n                trainer: true\n                commute: false\n                manual: false\n                private: false\n                flagged: false\n                gear_id: b12345678912343\n                from_accepted_tag: false\n                average_speed: 4.385\n                max_speed: 8.8\n                average_cadence: 69.8\n                average_watts: 200\n                weighted_average_watts: 214\n                kilojoules: 1080\n                device_watts: true\n                has_heartrate: true\n                average_heartrate: 152.4\n                max_heartrate: 183\n                max_watts: 403\n                pr_count: 0\n                total_photo_count: 1\n                has_kudoed: false\n                suffer_score: 162\n        default:\n          description: Unexpected error.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Fault'\n  /activities/{id}/laps:\n    get:\n      tags:\n      - Activities\n      summary: List Activity Laps\n      description: Returns the laps of an activity identified by an identifier. Requires\n        activity:read for Everyone and Followers activities. Requires activity:read_all\n        for Only Me activities.\n      operationId: getLapsByActivityId\n      parameters:\n      - name: id\n        in: path\n        description: The identifier of the activity.\n        required: true\n        schema:\n          type: integer\n          format: int64\n      responses:\n        200:\n          description: Activity Laps.\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/Lap'\n              example:\n              - id: 12345678987654320\n                resource_state: 2\n                name: Lap 1\n                activity:\n                  id: 12345678987654320\n                  resource_state: 1\n                athlete:\n                  id: 12345678987654320\n                  resource_state: 1\n                elapsed_time: 1691\n                moving_time: 1587\n                start_date: 2018-02-08T14:13:37Z\n                start_date_local: 2018-02-08T06:13:37Z\n                distance: 8046.72\n                start_index: 0\n                end_index: 1590\n                total_elevation_gain: 270\n                average_speed: 4.76\n                max_speed: 9.4\n                average_cadence: 79\n                device_watts: true\n                average_watts: 228.2\n                lap_index: 1\n                split: 1\n        default:\n          description: Unexpected error.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Fault'\n  /activities/{id}/zones:\n    get:\n      tags:\n      - Activities\n      summary: Get Activity Zones\n      description: Summit Feature. Returns the zones of a given activity. Requires\n        activity:read for Everyone and Followers activities. Requires activity:read_all\n        for Only Me activities.\n      operationId: getZonesByActivityId\n      parameters:\n      - name: id\n        in: path\n        description: The identifier of the activity.\n        required: true\n        schema:\n          type: integer\n          format: int64\n      responses:\n        200:\n          description: Activity Zones.\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/ActivityZone'\n        default:\n          description: Unexpected error.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Fault'\n  /activities/{id}/comments:\n    get:\n      tags:\n      - Activities\n      summary: List Activity Comments\n      description: Returns the comments on the given activity. Requires activity:read\n        for Everyone and Followers activities. Requires activity:read_all for Only\n        Me activities.\n      operationId: getCommentsByActivityId\n      parameters:\n      - name: id\n        in: path\n        description: The identifier of the activity.\n        required: true\n        schema:\n          type: integer\n          format: int64\n      - name: page\n        in: query\n        description: Page number. Defaults to 1.\n        schema:\n          type: integer\n      - name: per_page\n        in: query\n        description: Number of items per page. Defaults to 30.\n        schema:\n          type: integer\n          default: 30\n      responses:\n        200:\n          description: Comments.\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/Comment'\n              example:\n              - id: 12345678987654320\n                activity_id: 12345678987654320\n                resource_state: 2\n                text: Good job and keep the cat pictures coming!\n                created_at: 2018-02-08T19:25:39Z\n                athlete:\n                  firstname: Peter\n                  lastname: S\n        default:\n          description: Unexpected error.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Fault'\n  /activities/{id}/kudos:\n    get:\n      tags:\n      - Activities\n      summary: List Activity Kudoers\n      description: Returns the athletes who kudoed an activity identified by an identifier.\n        Requires activity:read for Everyone and Followers activities. Requires activity:read_all\n        for Only Me activities.\n      operationId: getKudoersByActivityId\n      parameters:\n      - name: id\n        in: path\n        description: The identifier of the activity.\n        required: true\n        schema:\n          type: integer\n          format: int64\n      - name: page\n        in: query\n        description: Page number. Defaults to 1.\n        schema:\n          type: integer\n      - name: per_page\n        in: query\n        description: Number of items per page. Defaults to 30.\n        schema:\n          type: integer\n          default: 30\n      responses:\n        200:\n          description: Comments.\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/SummaryAthlete'\n              example:\n              - firstname: Peter\n                lastname: S\n        default:\n          description: Unexpected error.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Fault'\n  /clubs/{id}:\n    get:\n      tags:\n      - Clubs\n      summary: Get Club\n      description: Returns a given club using its identifier.\n      operationId: getClubById\n      parameters:\n      - name: id\n        in: path\n        description: The identifier of the club.\n        required: true\n        schema:\n          type: integer\n          format: int64\n      responses:\n        200:\n          description: The detailed representation of a club.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DetailedClub'\n              example:\n                id: 1\n                resource_state: 3\n                name: Team Strava Cycling\n                profile_medium: https://dgalywyr863hv.cloudfront.net/pictures/clubs/1/1582/4/medium.jpg\n                profile: https://dgalywyr863hv.cloudfront.net/pictures/clubs/1/1582/4/large.jpg\n                cover_photo: https://dgalywyr863hv.cloudfront.net/pictures/clubs/1/4328276/1/large.jpg\n                cover_photo_small: https://dgalywyr863hv.cloudfront.net/pictures/clubs/1/4328276/1/small.jpg\n                sport_type: cycling\n                city: San Francisco\n                state: California\n                country: United States\n                private: true\n                member_count: 116\n                featured: false\n                verified: false\n                url: team-strava-bike\n                membership: member\n                admin: false\n                owner: false\n                description: Private club for Cyclists who work at Strava.\n                club_type: company\n                post_count: 29\n                owner_id: 759\n                following_count: 107\n        default:\n          description: Unexpected error.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Fault'\n  /clubs/{id}/members:\n    get:\n      tags:\n      - Clubs\n      summary: List Club Members\n      description: Returns a list of the athletes who are members of a given club.\n      operationId: getClubMembersById\n      parameters:\n      - name: id\n        in: path\n        description: The identifier of the club.\n        required: true\n        schema:\n          type: integer\n          format: int64\n      - name: page\n        in: query\n        description: Page number. Defaults to 1.\n        schema:\n          type: integer\n      - name: per_page\n        in: query\n        description: Number of items per page. Defaults to 30.\n        schema:\n          type: integer\n          default: 30\n      responses:\n        200:\n          description: A list of summary athlete representations.\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/SummaryAthlete'\n              example:\n              - resource_state: 2\n                firstname: Peter\n                lastname: S.\n                membership: member\n                admin: false\n                owner: false\n        default:\n          description: Unexpected error.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Fault'\n  /clubs/{id}/admins:\n    get:\n      tags:\n      - Clubs\n      summary: List Club Administrators\n      description: Returns a list of the administrators of a given club.\n      operationId: getClubAdminsById\n      parameters:\n      - name: id\n        in: path\n        description: The identifier of the club.\n        required: true\n        schema:\n          type: integer\n          format: int64\n      - name: page\n        in: query\n        description: Page number. Defaults to 1.\n        schema:\n          type: integer\n      - name: per_page\n        in: query\n        description: Number of items per page. Defaults to 30.\n        schema:\n          type: integer\n          default: 30\n      responses:\n        200:\n          description: A list of summary athlete representations.\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/SummaryAthlete'\n              example:\n              - resource_state: 2\n                firstname: Peter\n                lastname: S.\n        default:\n          description: Unexpected error.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Fault'\n  /clubs/{id}/activities:\n    get:\n      tags:\n      - Clubs\n      summary: List Club Activities\n      description: Retrieve recent activities from members of a specific club. The\n        authenticated athlete must belong to the requested club in order to hit this\n        endpoint. Pagination is supported. Athlete profile visibility is respected\n        for all activities.\n      operationId: getClubActivitiesById\n      parameters:\n      - name: id\n        in: path\n        description: The identifier of the club.\n        required: true\n        schema:\n          type: integer\n          format: int64\n      - name: page\n        in: query\n        description: Page number. Defaults to 1.\n        schema:\n          type: integer\n      - name: per_page\n        in: query\n        description: Number of items per page. Defaults to 30.\n        schema:\n          type: integer\n          default: 30\n      responses:\n        200:\n          description: A list of activities.\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/SummaryActivity'\n              example:\n              - resource_state: 2\n                athlete:\n                  resource_state: 2\n                  firstname: Peter\n                  lastname: S.\n                name: World Championship\n                distance: 2641.7\n                moving_time: 577\n                elapsed_time: 635\n                total_elevation_gain: 8.8\n                type: Ride\n        default:\n          description: Unexpected error.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Fault'\n  /athlete/clubs:\n    get:\n      tags:\n      - Clubs\n      summary: List Athlete Clubs\n      description: Returns a list of the clubs whose membership includes the authenticated\n        athlete.\n      operationId: getLoggedInAthleteClubs\n      parameters:\n      - name: page\n        in: query\n        description: Page number. Defaults to 1.\n        schema:\n          type: integer\n      - name: per_page\n        in: query\n        description: Number of items per page. Defaults to 30.\n        schema:\n          type: integer\n          default: 30\n      responses:\n        200:\n          description: A list of summary club representations.\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/SummaryClub'\n              example:\n              - id: 231407\n                resource_state: 2\n                name: The Strava Club\n                profile_medium: https://dgalywyr863hv.cloudfront.net/pictures/clubs/231407/5319085/1/medium.jpg\n                profile: https://dgalywyr863hv.cloudfront.net/pictures/clubs/231407/5319085/1/large.jpg\n                cover_photo: https://dgalywyr863hv.cloudfront.net/pictures/clubs/231407/5098428/4/large.jpg\n                cover_photo_small: https://dgalywyr863hv.cloudfront.net/pictures/clubs/231407/5098428/4/small.jpg\n                sport_type: other\n                city: San Francisco\n                state: California\n                country: United States\n                private: false\n                member_count: 93151\n                featured: false\n                verified: true\n                url: strava\n        default:\n          description: Unexpected error.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Fault'\n  /gear/{id}:\n    get:\n      tags:\n      - Gears\n      summary: Get Equipment\n      description: Returns an equipment using its identifier.\n      operationId: getGearById\n      parameters:\n      - name: id\n        in: path\n        description: The identifier of the gear.\n        required: true\n        schema:\n          type: string\n      responses:\n        200:\n          description: A representation of the gear.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DetailedGear'\n              example:\n                id: b1231\n                primary: false\n                resource_state: 3\n                distance: 388206\n                brand_name: BMC\n                model_name: Teammachine\n                frame_type: 3\n                description: My Bike.\n        default:\n          description: Unexpected error.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Fault'\n  /routes/{id}:\n    get:\n      tags:\n      - Routes\n      summary: Get Route\n      description: Returns a route using its identifier. Requires read_all scope for\n        private routes.\n      operationId: getRouteById\n      parameters:\n      - name: id\n        in: path\n        description: The identifier of the route.\n        required: true\n        schema:\n          type: integer\n          format: int64\n      responses:\n        200:\n          description: A representation of the route.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Route'\n        default:\n          description: Unexpected error.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Fault'\n  /athletes/{id}/routes:\n    get:\n      tags:\n      - Routes\n      summary: List Athlete Routes\n      description: Returns a list of the routes created by the authenticated athlete.\n        Private routes are filtered out unless requested by a token with read_all\n        scope.\n      operationId: getRoutesByAthleteId\n      parameters:\n      - name: page\n        in: query\n        description: Page number. Defaults to 1.\n        schema:\n          type: integer\n      - name: per_page\n        in: query\n        description: Number of items per page. Defaults to 30.\n        schema:\n          type: integer\n          default: 30\n      responses:\n        200:\n          description: A representation of the route.\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/Route'\n        default:\n          description: Unexpected error.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Fault'\n  /routes/{id}/export_gpx:\n    get:\n      tags:\n      - Routes\n      summary: Export Route GPX\n      description: Returns a GPX file of the route. Requires read_all scope for private\n        routes.\n      operationId: getRouteAsGPX\n      parameters:\n      - name: id\n        in: path\n        description: The identifier of the route.\n        required: true\n        schema:\n          type: integer\n          format: int64\n      responses:\n        200:\n          description: A GPX file with the route.\n          content: {}\n        default:\n          description: Unexpected error.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Fault'\n  /routes/{id}/export_tcx:\n    get:\n      tags:\n      - Routes\n      summary: Export Route TCX\n      description: Returns a TCX file of the route. Requires read_all scope for private\n        routes.\n      operationId: getRouteAsTCX\n      parameters:\n      - name: id\n        in: path\n        description: The identifier of the route.\n        required: true\n        schema:\n          type: integer\n          format: int64\n      responses:\n        200:\n          description: A TCX file with the route.\n          content: {}\n        default:\n          description: Unexpected error.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Fault'\n  /uploads:\n    post:\n      tags:\n      - Uploads\n      summary: Upload Activity\n      description: Uploads a new data file to create an activity from. Requires activity:write\n        scope.\n      operationId: createUpload\n      requestBody:\n        content:\n          multipart/form-data:\n            schema:\n              properties:\n                file:\n                  type: string\n                  description: The uploaded file.\n                  format: binary\n                name:\n                  type: string\n                  description: The desired name of the resulting activity.\n                description:\n                  type: string\n                  description: The desired description of the resulting activity.\n                trainer:\n                  type: string\n                  description: Whether the resulting activity should be marked as\n                    having been performed on a trainer.\n                commute:\n                  type: string\n                  description: Whether the resulting activity should be tagged as\n                    a commute.\n                data_type:\n                  type: string\n                  description: The format of the uploaded file.\n                  enum:\n                  - fit\n                  - fit.gz\n                  - tcx\n                  - tcx.gz\n                  - gpx\n                  - gpx.gz\n                external_id:\n                  type: string\n                  description: The desired external identifier of the resulting activity.\n      responses:\n        201:\n          description: A representation of the created upload.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Upload'\n        default:\n          description: Unexpected error.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Fault'\n  /uploads/{uploadId}:\n    get:\n      tags:\n      - Uploads\n      summary: Get Upload\n      description: Returns an upload for a given identifier. Requires activity:write\n        scope.\n      operationId: getUploadById\n      parameters:\n      - name: uploadId\n        in: path\n        description: The identifier of the upload.\n        required: true\n        schema:\n          type: integer\n          format: int64\n      responses:\n        200:\n          description: Representation of the upload.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Upload'\n        default:\n          description: Unexpected error.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Fault'\n  /activities/{id}/streams:\n    get:\n      tags:\n      - Streams\n      summary: Get Activity Streams\n      description: Returns the given activity's streams. Requires activity:read scope.\n        Requires activity:read_all scope for Only Me activities.\n      operationId: getActivityStreams\n      parameters:\n      - name: id\n        in: path\n        description: The identifier of the activity.\n        required: true\n        schema:\n          type: integer\n          format: int64\n      - name: keys\n        in: query\n        description: Desired stream types.\n        required: true\n        style: form\n        explode: false\n        schema:\n          minItems: 1\n          type: array\n          items:\n            type: string\n            enum:\n            - time\n            - distance\n            - latlng\n            - altitude\n            - velocity_smooth\n            - heartrate\n            - cadence\n            - watts\n            - temp\n            - moving\n            - grade_smooth\n      - name: key_by_type\n        in: query\n        description: Must be true.\n        required: true\n        schema:\n          type: boolean\n          default: true\n      responses:\n        200:\n          description: The set of requested streams.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/StreamSet'\n              example:\n              - type: distance\n                data:\n                - 2.9\n                - 5.8\n                - 8.5\n                - 11.7\n                - 15\n                - 19\n                - 23.2\n                - 28\n                - 32.8\n                - 38.1\n                - 43.8\n                - 49.5\n                series_type: distance\n                original_size: 12\n                resolution: high\n        default:\n          description: Unexpected error.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Fault'\n  /segment_efforts/{id}/streams:\n    get:\n      tags:\n      - Streams\n      summary: Get Segment Effort Streams\n      description: Returns a set of streams for a segment effort completed by the\n        authenticated athlete. Requires read_all scope.\n      operationId: getSegmentEffortStreams\n      parameters:\n      - name: id\n        in: path\n        description: The identifier of the segment effort.\n        required: true\n        schema:\n          type: integer\n          format: int64\n      - name: keys\n        in: query\n        description: The types of streams to return.\n        required: true\n        style: form\n        explode: false\n        schema:\n          minItems: 1\n          type: array\n          items:\n            type: string\n            enum:\n            - time\n            - distance\n            - latlng\n            - altitude\n            - velocity_smooth\n            - heartrate\n            - cadence\n            - watts\n            - temp\n            - moving\n            - grade_smooth\n      - name: key_by_type\n        in: query\n        description: Must be true.\n        required: true\n        schema:\n          type: boolean\n          default: true\n      responses:\n        200:\n          description: The set of requested streams.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/StreamSet'\n              example:\n              - type: distance\n                data:\n                - 904.5\n                - 957.8\n                - 963.1\n                - 989.1\n                - 1011.9\n                - 1049.7\n                - 1082.4\n                - 1098.1\n                - 1113.2\n                - 1124.7\n                - 1139.2\n                - 1142.1\n                - 1170.4\n                - 1173\n                series_type: distance\n                original_size: 14\n                resolution: high\n        default:\n          description: Unexpected error.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Fault'\n  /segments/{id}/streams:\n    get:\n      tags:\n      - Streams\n      summary: Get Segment Streams\n      description: Returns the given segment's streams. Requires read_all scope for\n        private segments.\n      operationId: getSegmentStreams\n      parameters:\n      - name: id\n        in: path\n        description: The identifier of the segment.\n        required: true\n        schema:\n          type: integer\n          format: int64\n      - name: keys\n        in: query\n        description: The types of streams to return.\n        required: true\n        style: form\n        explode: false\n        schema:\n          minItems: 1\n          type: array\n          items:\n            type: string\n            enum:\n            - distance\n            - latlng\n            - altitude\n      - name: key_by_type\n        in: query\n        description: Must be true.\n        required: true\n        schema:\n          type: boolean\n          default: true\n      responses:\n        200:\n          description: The set of requested streams.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/StreamSet'\n              example:\n              - type: latlng\n                data:\n                - - 37.833112\n                  - -122.483436\n                - - 37.832964\n                  - -122.483406\n                series_type: distance\n                original_size: 2\n                resolution: high\n              - type: distance\n                data:\n                - 0\n                - 16.8\n                series_type: distance\n                original_size: 2\n                resolution: high\n              - type: altitude\n                data:\n                - 92.4\n                - 93.4\n                series_type: distance\n                original_size: 2\n                resolution: high\n        default:\n          description: Unexpected error.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Fault'\n  /routes/{id}/streams:\n    get:\n      tags:\n      - Streams\n      summary: Get Route Streams\n      description: Returns the given route's streams. Requires read_all scope for\n        private routes.\n      operationId: getRouteStreams\n      parameters:\n      - name: id\n        in: path\n        description: The identifier of the route.\n        required: true\n        schema:\n          type: integer\n          format: int64\n      responses:\n        200:\n          description: The set of requested streams.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/StreamSet'\n              example:\n              - type: latlng\n                data:\n                - - 37.833112\n                  - -122.483436\n                - - 37.832964\n                  - -122.483406\n              - type: distance\n                data:\n                - 0\n                - 16.8\n              - type: altitude\n                data:\n                - 92.4\n                - 93.4\n        default:\n          description: Unexpected error.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Fault'\ncomponents:\n  schemas:\n    ActivityStats:\n      type: object\n      properties:\n        biggest_ride_distance:\n          type: number\n          description: The longest distance ridden by the athlete.\n          format: double\n        biggest_climb_elevation_gain:\n          type: number\n          description: The highest climb ridden by the athlete.\n          format: double\n        recent_ride_totals:\n          $ref: '#/components/schemas/ActivityTotal'\n        recent_run_totals:\n          $ref: '#/components/schemas/ActivityTotal'\n        recent_swim_totals:\n          $ref: '#/components/schemas/ActivityTotal'\n        ytd_ride_totals:\n          $ref: '#/components/schemas/ActivityTotal'\n        ytd_run_totals:\n          $ref: '#/components/schemas/ActivityTotal'\n        ytd_swim_totals:\n          $ref: '#/components/schemas/ActivityTotal'\n        all_ride_totals:\n          $ref: '#/components/schemas/ActivityTotal'\n        all_run_totals:\n          $ref: '#/components/schemas/ActivityTotal'\n        all_swim_totals:\n          $ref: '#/components/schemas/ActivityTotal'\n      description: A set of rolled-up statistics and totals for an athlete\n    ActivityTotal:\n      type: object\n      properties:\n        count:\n          type: integer\n          description: The number of activities considered in this total.\n        distance:\n          type: number\n          description: The total distance covered by the considered activities.\n          format: float\n        moving_time:\n          type: integer\n          description: The total moving time of the considered activities.\n        elapsed_time:\n          type: integer\n          description: The total elapsed time of the considered activities.\n        elevation_gain:\n          type: number\n          description: The total elevation gain of the considered activities.\n          format: float\n        achievement_count:\n          type: integer\n          description: The total number of achievements of the considered activities.\n      description: A roll-up of metrics pertaining to a set of activities. Values\n        are in seconds and meters.\n    Fault:\n      type: object\n      properties:\n        errors:\n          type: array\n          description: The set of specific errors associated with this fault, if any.\n          items:\n            $ref: '#/components/schemas/Error'\n        message:\n          type: string\n          description: The message of the fault.\n      description: Encapsulates the errors that may be returned from the API.\n    Error:\n      type: object\n      properties:\n        code:\n          type: string\n          description: The code associated with this error.\n        field:\n          type: string\n          description: The specific field or aspect of the resource associated with\n            this error.\n        resource:\n          type: string\n          description: The type of resource associated with this error.\n    DetailedAthlete:\n      allOf:\n      - $ref: '#/components/schemas/SummaryAthlete'\n      - type: object\n        properties:\n          follower_count:\n            type: integer\n            description: The athlete's follower count.\n          friend_count:\n            type: integer\n            description: The athlete's friend count.\n          measurement_preference:\n            type: string\n            description: The athlete's preferred unit system.\n            enum:\n            - feet\n            - meters\n          ftp:\n            type: integer\n            description: The athlete's FTP (Functional Threshold Power).\n          weight:\n            type: number\n            description: The athlete's weight.\n            format: float\n          clubs:\n            type: array\n            description: The athlete's clubs.\n            items:\n              $ref: '#/components/schemas/SummaryClub'\n          bikes:\n            type: array\n            description: The athlete's bikes.\n            items:\n              $ref: '#/components/schemas/SummaryGear'\n          shoes:\n            type: array\n            description: The athlete's shoes.\n            items:\n              $ref: '#/components/schemas/SummaryGear'\n    SummaryAthlete:\n      allOf:\n      - $ref: '#/components/schemas/MetaAthlete'\n      - type: object\n        properties:\n          resource_state:\n            type: integer\n            description: 'Resource state, indicates level of detail. Possible values:\n              1 -\u003e \"meta\", 2 -\u003e \"summary\", 3 -\u003e \"detail\"'\n          firstname:\n            type: string\n            description: The athlete's first name.\n          lastname:\n            type: string\n            description: The athlete's last name.\n          profile_medium:\n            type: string\n            description: URL to a 62x62 pixel profile picture.\n          profile:\n            type: string\n            description: URL to a 124x124 pixel profile picture.\n          city:\n            type: string\n            description: The athlete's city.\n          state:\n            type: string\n            description: The athlete's state or geographical region.\n          country:\n            type: string\n            description: The athlete's country.\n          sex:\n            type: string\n            description: The athlete's sex.\n            enum:\n            - M\n            - F\n          premium:\n            type: boolean\n            description: Deprecated.  Use summit field instead. Whether the athlete\n              has any Summit subscription.\n          summit:\n            type: boolean\n            description: Whether the athlete has any Summit subscription.\n          created_at:\n            type: string\n            description: The time at which the athlete was created.\n            format: date-time\n          updated_at:\n            type: string\n            description: The time at which the athlete was last updated.\n            format: date-time\n    MetaAthlete:\n      type: object\n      properties:\n        id:\n          type: integer\n          description: The unique identifier of the athlete\n          format: int64\n    SummaryClub:\n      allOf:\n      - $ref: '#/components/schemas/MetaClub'\n      - type: object\n        properties:\n          profile_medium:\n            type: string\n            description: URL to a 60x60 pixel profile picture.\n          cover_photo:\n            type: string\n            description: URL to a ~1185x580 pixel cover photo.\n          cover_photo_small:\n            type: string\n            description: URL to a ~360x176  pixel cover photo.\n          sport_type:\n            type: string\n            enum:\n            - cycling\n            - running\n            - triathlon\n            - other\n          city:\n            type: string\n            description: The club's city.\n          state:\n            type: string\n            description: The club's state or geographical region.\n          country:\n            type: string\n            description: The club's country.\n          private:\n            type: boolean\n            description: Whether the club is private.\n          member_count:\n            type: integer\n            description: The club's member count.\n          featured:\n            type: boolean\n            description: Whether the club is featured or not.\n          verified:\n            type: boolean\n            description: Whether the club is verified or not.\n          url:\n            type: string\n            description: The club's vanity URL.\n    MetaClub:\n      type: object\n      properties:\n        id:\n          type: integer\n          description: The club's unique identifier.\n          format: int64\n        resource_state:\n          type: integer\n          description: 'Resource state, indicates level of detail. Possible values:\n            1 -\u003e \"meta\", 2 -\u003e \"summary\", 3 -\u003e \"detail\"'\n        name:\n          type: string\n          description: The club's name.\n    SummaryGear:\n      type: object\n      properties:\n        id:\n          type: string\n          description: The gear's unique identifier.\n        resource_state:\n          type: integer\n          description: 'Resource state, indicates level of detail. Possible values:\n            2 -\u003e \"summary\", 3 -\u003e \"detail\"'\n        primary:\n          type: boolean\n          description: Whether this gear's is the owner's default one.\n        name:\n          type: string\n          description: The gear's name.\n        distance:\n          type: number\n          description: The distance logged with this gear.\n          format: float\n    Zones:\n      type: object\n      properties:\n        heart_rate:\n          $ref: '#/components/schemas/HeartRateZoneRanges'\n        power:\n          $ref: '#/components/schemas/PowerZoneRanges'\n    HeartRateZoneRanges:\n      type: object\n      properties:\n        custom_zones:\n          type: boolean\n          description: Whether the athlete has set their own custom heart rate zones\n        zones:\n          $ref: '#/components/schemas/ZoneRanges'\n    ZoneRanges:\n      type: array\n      items:\n        $ref: '#/components/schemas/ZoneRange'\n    ZoneRange:\n      type: object\n      properties:\n        min:\n          type: integer\n          description: The minimum value in the range.\n        max:\n          type: integer\n          description: The maximum value in the range.\n    PowerZoneRanges:\n      type: object\n      properties:\n        zones:\n          $ref: '#/components/schemas/ZoneRanges'\n    DetailedSegment:\n      allOf:\n      - $ref: '#/components/schemas/SummarySegment'\n      - type: object\n        properties:\n          created_at:\n            type: string\n            description: The time at which the segment was created.\n            format: date-time\n          updated_at:\n            type: string\n            description: The time at which the segment was last updated.\n            format: date-time\n          total_elevation_gain:\n            type: number\n            description: The segment's total elevation gain.\n            format: float\n          map:\n            $ref: '#/components/schemas/PolylineMap'\n          effort_count:\n            type: integer\n            description: The total number of efforts for this segment\n          athlete_count:\n            type: integer\n            description: The number of unique athletes who have an effort for this\n              segment\n          hazardous:\n            type: boolean\n            description: Whether this segment is considered hazardous\n          star_count:\n            type: integer\n            description: The number of stars for this segment\n    SummarySegment:\n      type: object\n      properties:\n        id:\n          type: integer\n          description: The unique identifier of this segment\n          format: int64\n        name:\n          type: string\n          description: The name of this segment\n        activity_type:\n          type: string\n          enum:\n          - Ride\n          - Run\n        distance:\n          type: number\n          description: The segment's distance, in meters\n          format: float\n        average_grade:\n          type: number\n          description: The segment's average grade, in percents\n          format: float\n        maximum_grade:\n          type: number\n          description: The segments's maximum grade, in percents\n          format: float\n        elevation_high:\n          type: number\n          description: The segments's highest elevation, in meters\n          format: float\n        elevation_low:\n          type: number\n          description: The segments's lowest elevation, in meters\n          format: float\n        start_latlng:\n          $ref: '#/components/schemas/LatLng'\n        end_latlng:\n          $ref: '#/components/schemas/LatLng'\n        climb_category:\n          type: integer\n          description: The category of the climb [0, 5]. Higher is harder ie. 5 is\n            Hors catégorie, 0 is uncategorized in climb_category.\n        city:\n          type: string\n          description: The segments's city.\n        state:\n          type: string\n          description: The segments's state or geographical region.\n        country:\n          type: string\n          description: The segment's country.\n        private:\n          type: boolean\n          description: Whether this segment is private.\n        athlete_pr_effort:\n          $ref: '#/components/schemas/SummarySegmentEffort'\n        athlete_segment_stats:\n          $ref: '#/components/schemas/SummaryPRSegmentEffort'\n    LatLng:\n      maxItems: 2\n      minItems: 2\n      type: array\n      description: A pair of latitude/longitude coordinates, represented as an array\n        of 2 floating point numbers.\n      items:\n        type: number\n        format: float\n    SummarySegmentEffort:\n      type: object\n      properties:\n        id:\n          type: integer\n          description: The unique identifier of this effort\n          format: int64\n        activity_id:\n          type: integer\n          description: The unique identifier of the activity related to this effort\n          format: int64\n        elapsed_time:\n          type: integer\n          description: The effort's elapsed time\n        start_date:\n          type: string\n          description: The time at which the effort was started.\n          format: date-time\n        start_date_local:\n          type: string\n          description: The time at which the effort was started in the local timezone.\n          format: date-time\n        distance:\n          type: number\n          description: The effort's distance in meters\n          format: float\n        is_kom:\n          type: boolean\n          description: Whether this effort is the current best on the leaderboard\n    SummaryPRSegmentEffort:\n      type: object\n      properties:\n        pr_activity_id:\n          type: integer\n          description: The unique identifier of the activity related to the PR effort.\n          format: int64\n        pr_elapsed_time:\n          type: integer\n          description: The elapsed time ot the PR effort.\n        pr_date:\n          type: string\n          description: The time at which the PR effort was started.\n          format: date-time\n        effort_count:\n          type: integer\n          description: Number of efforts by the authenticated athlete on this segment.\n    PolylineMap:\n      type: object\n      properties:\n        id:\n          type: string\n          description: The identifier of the map\n        polyline:\n          type: string\n          description: The polyline of the map, only returned on detailed representation\n            of an object\n        summary_polyline:\n          type: string\n          description: The summary polyline of the map\n    DetailedSegmentEffort:\n      allOf:\n      - $ref: '#/components/schemas/SummarySegmentEffort'\n      - type: object\n        properties:\n          name:\n            type: string\n            description: The name of the segment on which this effort was performed\n          activity:\n            $ref: '#/components/schemas/MetaActivity'\n          athlete:\n            $ref: '#/components/schemas/MetaAthlete'\n          moving_time:\n            type: integer\n            description: The effort's moving time\n          start_index:\n            type: integer\n            description: The start index of this effort in its activity's stream\n          end_index:\n            type: integer\n            description: The end index of this effort in its activity's stream\n          average_cadence:\n            type: number\n            description: The effort's average cadence\n            format: float\n          average_watts:\n            type: number\n            description: The average wattage of this effort\n            format: float\n          device_watts:\n            type: boolean\n            description: For riding efforts, whether the wattage was reported by a\n              dedicated recording device\n          average_heartrate:\n            type: number\n            description: The heart heart rate of the athlete during this effort\n            format: float\n          max_heartrate:\n            type: number\n            description: The maximum heart rate of the athlete during this effort\n            format: float\n          segment:\n            $ref: '#/components/schemas/SummarySegment'\n          kom_rank:\n            maximum: 1E+1\n            minimum: 1\n            type: integer\n            description: The rank of the effort on the global leaderboard if it belongs\n              in the top 10 at the time of upload\n          pr_rank:\n            maximum: 3\n            minimum: 1\n            type: integer\n            description: The rank of the effort on the athlete's leaderboard if it\n              belongs in the top 3 at the time of upload\n          hidden:\n            type: boolean\n            description: Whether this effort should be hidden when viewed within an\n              activity\n    MetaActivity:\n      type: object\n      properties:\n        id:\n          type: integer\n          description: The unique identifier of the activity\n          format: int64\n    ExplorerResponse:\n      type: object\n      properties:\n        segments:\n          type: array\n          description: The set of segments matching an explorer request\n          items:\n            $ref: '#/components/schemas/ExplorerSegment'\n    ExplorerSegment:\n      type: object\n      properties:\n        id:\n          type: integer\n          description: The unique identifier of this segment\n          format: int64\n        name:\n          type: string\n          description: The name of this segment\n        climb_category:\n          maximum: 5\n          minimum: 0\n          type: integer\n          description: The category of the climb [0, 5]. Higher is harder ie. 5 is\n            Hors catégorie, 0 is uncategorized in climb_category. If climb_category\n            = 5, climb_category_desc = HC. If climb_category = 2, climb_category_desc\n            = 3.\n        climb_category_desc:\n          type: string\n          description: The description for the category of the climb\n          enum:\n          - NC\n          - \"4\"\n          - \"3\"\n          - \"2\"\n          - \"1\"\n          - HC\n        avg_grade:\n          type: number\n          description: The segment's average grade, in percents\n          format: float\n        start_latlng:\n          $ref: '#/components/schemas/LatLng'\n        end_latlng:\n          $ref: '#/components/schemas/LatLng'\n        elev_difference:\n          type: number\n          description: The segments's evelation difference, in meters\n          format: float\n        distance:\n          type: number\n          description: The segment's distance, in meters\n          format: float\n        points:\n          type: string\n          description: The polyline of the segment\n    RunningRace:\n      type: object\n      properties:\n        id:\n          type: integer\n          description: The unique identifier of this race.\n          format: int64\n        name:\n          type: string\n          description: The name of this race.\n        running_race_type:\n          type: integer\n          description: The type of this race.\n        distance:\n          type: number\n          description: The race's distance, in meters.\n          format: float\n        start_date_local:\n          type: string\n          description: The time at which the race begins started in the local timezone.\n          format: date-time\n        city:\n          type: string\n          description: The name of the city in which the race is taking place.\n        state:\n          type: string\n          description: The name of the state or geographical region in which the race\n            is taking place.\n        country:\n          type: string\n          description: The name of the country in which the race is taking place.\n        route_ids:\n          type: array\n          description: The set of routes that cover this race's course.\n          items:\n            type: integer\n            format: int64\n        measurement_preference:\n          type: string\n          description: The unit system in which the race should be displayed.\n          enum:\n          - feet\n          - meters\n        url:\n          type: string\n          description: The vanity URL of this race on Strava.\n        website_url:\n          type: string\n          description: The URL of this race's website.\n    DetailedActivity:\n      allOf:\n      - $ref: '#/components/schemas/SummaryActivity'\n      - type: object\n        properties:\n          description:\n            type: string\n            description: The description of the activity\n          photos:\n            $ref: '#/components/schemas/PhotosSummary'\n          gear:\n            $ref: '#/components/schemas/SummaryGear'\n          calories:\n            type: number\n            description: The number of kilocalories consumed during this activity\n            format: float\n          segment_efforts:\n            type: array\n            items:\n              $ref: '#/components/schemas/DetailedSegmentEffort'\n          device_name:\n            type: string\n            description: The name of the device used to record the activity\n          embed_token:\n            type: string\n            description: The token used to embed a Strava activity\n          splits_metric:\n            type: array\n            description: The splits of this activity in metric units (for runs)\n            items:\n              $ref: '#/components/schemas/Split'\n          splits_standard:\n            type: array\n            description: The splits of this activity in imperial units (for runs)\n            items:\n              $ref: '#/components/schemas/Split'\n          laps:\n            type: array\n            items:\n              $ref: '#/components/schemas/Lap'\n          best_efforts:\n            type: array\n            items:\n              $ref: '#/components/schemas/DetailedSegmentEffort'\n    SummaryActivity:\n      allOf:\n      - $ref: '#/components/schemas/MetaActivity'\n      - type: object\n        properties:\n          external_id:\n            type: string\n            description: The identifier provided at upload time\n          upload_id:\n            type: integer\n            description: The identifier of the upload that resulted in this activity\n            format: int64\n          athlete:\n            $ref: '#/components/schemas/MetaAthlete'\n          name:\n            type: string\n            description: The name of the activity\n          distance:\n            type: number\n            description: The activity's distance, in meters\n            format: float\n          moving_time:\n            type: integer\n            description: The activity's moving time, in seconds\n          elapsed_time:\n            type: integer\n            description: The activity's elapsed time, in seconds\n          total_elevation_gain:\n            type: number\n            description: The activity's total elevation gain.\n            format: float\n          elev_high:\n            type: number\n            description: The activity's highest elevation, in meters\n            format: float\n          elev_low:\n            type: number\n            description: The activity's lowest elevation, in meters\n            format: float\n          type:\n            $ref: '#/components/schemas/ActivityType'\n          start_date:\n            type: string\n            description: The time at which the activity was started.\n            format: date-time\n          start_date_local:\n            type: string\n            description: The time at which the activity was started in the local timezone.\n            format: date-time\n          timezone:\n            type: string\n            description: The timezone of the activity\n          start_latlng:\n            $ref: '#/components/schemas/LatLng'\n          end_latlng:\n            $ref: '#/components/schemas/LatLng'\n          achievement_count:\n            type: integer\n            description: The number of achievements gained during this activity\n          kudos_count:\n            type: integer\n            description: The number of kudos given for this activity\n          comment_count:\n            type: integer\n            description: The number of comments for this activity\n          athlete_count:\n            minimum: 1\n            type: integer\n            description: The number of athletes for taking part in a group activity\n          photo_count:\n            type: integer\n            description: The number of Instagram photos for this activity\n          total_photo_count:\n            type: integer\n            description: The number of Instagram and Strava photos for this activity\n          map:\n            $ref: '#/components/schemas/PolylineMap'\n          trainer:\n            type: boolean\n            description: Whether this activity was recorded on a training machine\n          commute:\n            type: boolean\n            description: Whether this activity is a commute\n          manual:\n            type: boolean\n            description: Whether this activity was created manually\n          private:\n            type: boolean\n            description: Whether this activity is private\n          flagged:\n            type: boolean\n            description: Whether this activity is flagged\n          workout_type:\n            type: integer\n            description: The activity's workout type\n          upload_id_str:\n            type: string\n            description: The unique identifier of the upload in string format\n          average_speed:\n            type: number\n            description: The activity's average speed, in meters per second\n            format: float\n          max_speed:\n            type: number\n            description: The activity's max speed, in meters per second\n            format: float\n          has_kudoed:\n            type: boolean\n            description: Whether the logged-in athlete has kudoed this activity\n          gear_id:\n            type: string\n            description: The id of the gear for the activity\n          kilojoules:\n            type: number\n            description: The total work done in kilojoules during this activity. Rides\n              only\n            format: float\n          average_watts:\n            type: number\n            description: Average power output in watts during this activity. Rides\n              only\n            format: float\n          device_watts:\n            type: boolean\n            description: Whether the watts are from a power meter, false if estimated\n          max_watts:\n            type: integer\n            description: Rides with power meter data only\n          weighted_average_watts:\n            type: integer\n            description: Similar to Normalized Power. Rides with power meter data\n              only\n    ActivityType:\n      type: string\n      description: An enumeration of the types an activity may have.\n      enum:\n      - AlpineSki\n      - BackcountrySki\n      - Canoeing\n      - Crossfit\n      - EBikeRide\n      - Elliptical\n      - Golf\n      - Handcycle\n      - Hike\n      - IceSkate\n      - InlineSkate\n      - Kayaking\n      - Kitesurf\n      - NordicSki\n      - Ride\n      - RockClimbing\n      - RollerSki\n      - Rowing\n      - Run\n      - Sail\n      - Skateboard\n      - Snowboard\n      - Snowshoe\n      - Soccer\n      - StairStepper\n      - StandUpPaddling\n      - Surfing\n      - Swim\n      - Velomobile\n      - VirtualRide\n      - VirtualRun\n      - Walk\n      - WeightTraining\n      - Wheelchair\n      - Windsurf\n      - Workout\n      - Yoga\n    PhotosSummary:\n      type: object\n      properties:\n        count:\n          type: integer\n          description: The number of photos\n        primary:\n          type: object\n          properties:\n            id:\n              type: integer\n              format: int64\n            source:\n              type: integer\n            unique_id:\n              type: string\n            urls:\n              type: object\n              additionalProperties:\n                type: string\n    Split:\n      type: object\n      properties:\n        average_speed:\n          type: number\n          description: The average speed of this split, in meters per second\n          format: float\n        distance:\n          type: number\n          description: The distance of this split, in meters\n          format: float\n        elapsed_time:\n          type: integer\n          description: The elapsed time of this split, in seconds\n        elevation_difference:\n          type: number\n          description: The elevation difference of this split, in meters\n          format: float\n        pace_zone:\n          type: integer\n          description: The pacing zone of this split\n        moving_time:\n          type: integer\n          description: The moving time of this split, in seconds\n        split:\n          type: integer\n          description: N/A\n    Lap:\n      type: object\n      properties:\n        id:\n          type: integer\n          description: The unique identifier of this lap\n          format: int64\n        activity:\n          $ref: '#/components/schemas/MetaActivity'\n        athlete:\n          $ref: '#/components/schemas/MetaAthlete'\n        average_cadence:\n          type: number\n          description: The lap's average cadence\n          format: float\n        average_speed:\n          type: number\n          description: The lap's average speed\n          format: float\n        distance:\n          type: number\n          description: The lap's distance, in meters\n          format: float\n        elapsed_time:\n          type: integer\n          description: The lap's elapsed time, in seconds\n        start_index:\n          type: integer\n          description: The start index of this effort in its activity's stream\n        end_index:\n          type: integer\n          description: The end index of this effort in its activity's stream\n        lap_index:\n          type: integer\n          description: The index of this lap in the activity it belongs to\n        max_speed:\n          type: number\n          description: The maximum speed of this lat, in meters per second\n          format: float\n        moving_time:\n          type: integer\n          description: The lap's moving time, in seconds\n        name:\n          type: string\n          description: The name of the lap\n        pace_zone:\n          type: integer\n          description: The athlete's pace zone during this lap\n        split:\n          type: integer\n        start_date:\n          type: string\n          description: The time at which the lap was started.\n          format: date-time\n        start_date_local:\n          type: string\n          description: The time at which the lap was started in the local timezone.\n          format: date-time\n        total_elevation_gain:\n          type: number\n          description: The elevation gain of this lap, in meters\n          format: float\n    UpdatableActivity:\n      type: object\n      properties:\n        commute:\n          type: boolean\n          description: Whether this activity is a commute\n        trainer:\n          type: boolean\n          description: Whether this activity was recorded on a training machine\n        description:\n          type: string\n          description: The description of the activity\n        name:\n          type: string\n          description: The name of the activity\n        type:\n          $ref: '#/components/schemas/ActivityType'\n        gear_id:\n          type: string\n          description: Identifier for the gear associated with the activity. ‘none’\n            clears gear from activity\n    ActivityZone:\n      type: object\n      properties:\n        score:\n          type: integer\n        distribution_buckets:\n          $ref: '#/components/schemas/TimedZoneDistribution'\n        type:\n          type: string\n          enum:\n          - heartrate\n          - power\n        sensor_based:\n          type: boolean\n        points:\n          type: integer\n        custom_zones:\n          type: boolean\n        max:\n          type: integer\n    TimedZoneDistribution:\n      type: array\n      description: Stores the exclusive ranges representing zones and the time spent\n        in each.\n      items:\n        $ref: '#/components/schemas/TimedZoneRange'\n    TimedZoneRange:\n      description: A union type representing the time spent in a given zone.\n      allOf:\n      - $ref: '#/components/schemas/ZoneRange'\n      - type: object\n        properties:\n          time:\n            type: integer\n            description: The number of seconds spent in this zone\n    Comment:\n      type: object\n      properties:\n        id:\n          type: integer\n          description: The unique identifier of this comment\n          format: int64\n        activity_id:\n          type: integer\n          description: The identifier of the activity this comment is related to\n          format: int64\n        text:\n          type: string\n          description: The content of the comment\n        athlete:\n          $ref: '#/components/schemas/SummaryAthlete'\n        created_at:\n          type: string\n          description: The time at which this comment was created.\n          format: date-time\n    DetailedClub:\n      allOf:\n      - $ref: '#/components/schemas/SummaryClub'\n      - type: object\n        properties:\n          membership:\n            type: string\n            description: The membership status of the logged-in athlete.\n            enum:\n            - member\n            - pending\n          admin:\n            type: boolean\n            description: Whether the currently logged-in athlete is an administrator\n              of this club.\n          owner:\n            type: boolean\n            description: Whether the currently logged-in athlete is the owner of this\n              club.\n          following_count:\n            type: integer\n            description: The number of athletes in the club that the logged-in athlete\n              follows.\n    DetailedGear:\n      allOf:\n      - $ref: '#/components/schemas/SummaryGear'\n      - type: object\n        properties:\n          brand_name:\n            type: string\n            description: The gear's brand name.\n          model_name:\n            type: string\n            description: The gear's model name.\n          frame_type:\n            type: integer\n            description: The gear's frame type (bike only).\n          description:\n            type: string\n            description: The gear's description.\n    Route:\n      type: object\n      properties:\n        athlete:\n          $ref: '#/components/schemas/SummaryAthlete'\n        description:\n          type: string\n          description: The description of the route\n        distance:\n          type: number\n          description: The route's distance, in meters\n          format: float\n        elevation_gain:\n          type: number\n          description: The route's elevation gain.\n          format: float\n        id:\n          type: integer\n          description: The unique identifier of this route\n          format: int64\n        id_str:\n          type: string\n          description: The unique identifier of the route in string format\n        map:\n          $ref: '#/components/schemas/PolylineMap'\n        name:\n          type: string\n          description: The name of this route\n        private:\n          type: boolean\n          description: Whether this route is private\n        starred:\n          type: boolean\n          description: Whether this route is starred by the logged-in athlete\n        timestamp:\n          type: integer\n          description: An epoch timestamp of when the route was created\n        type:\n          type: integer\n          description: This route's type (1 for ride, 2 for runs)\n        sub_type:\n          type: integer\n          description: This route's sub-type (1 for road, 2 for mountain bike, 3 for\n            cross, 4 for trail, 5 for mixed)\n        created_at:\n          type: string\n          description: The time at which the route was created\n          format: date-time\n        updated_at:\n          type: string\n          description: The time at which the route was last updated\n          format: date-time\n        estimated_moving_time:\n          type: integer\n          description: Estimated time in seconds for the authenticated athlete to\n            complete route\n        segments:\n          type: array\n          description: The segments traversed by this route\n          items:\n            $ref: '#/components/schemas/SummarySegment'\n    Upload:\n      type: object\n      properties:\n        id:\n          type: integer\n          description: The unique identifier of the upload\n          format: int64\n        id_str:\n          type: string\n          description: The unique identifier of the upload in string format\n        external_id:\n          type: string\n          description: The external identifier of the upload\n        error:\n          type: string\n          description: The error associated with this upload\n        status:\n          type: string\n          description: The status of this upload\n        activity_id:\n          type: integer\n          description: The identifier of the activity this upload resulted into\n          format: int64\n    StreamSet:\n      type: object\n      properties:\n        time:\n          $ref: '#/components/schemas/TimeStream'\n        distance:\n          $ref: '#/components/schemas/DistanceStream'\n        latlng:\n          $ref: '#/components/schemas/LatLngStream'\n        altitude:\n          $ref: '#/components/schemas/AltitudeStream'\n        velocity_smooth:\n          $ref: '#/components/schemas/SmoothVelocityStream'\n        heartrate:\n          $ref: '#/components/schemas/HeartrateStream'\n        cadence:\n          $ref: '#/components/schemas/CadenceStream'\n        watts:\n          $ref: '#/components/schemas/PowerStream'\n        temp:\n          $ref: '#/components/schemas/TemperatureStream'\n        moving:\n          $ref: '#/components/schemas/MovingStream'\n        grade_smooth:\n          $ref: '#/components/schemas/SmoothGradeStream'\n    TimeStream:\n      allOf:\n      - $ref: '#/components/schemas/BaseStream'\n      - type: object\n        properties:\n          data:\n            type: array\n            description: The sequence of time values for this stream, in seconds\n            items:\n              type: integer\n    BaseStream:\n      type: object\n      properties:\n        original_size:\n          type: integer\n          description: The number of data points in this stream\n        resolution:\n          type: string\n          description: The level of detail (sampling) in which this stream was returned\n          enum:\n          - low\n          - medium\n          - high\n        series_type:\n          type: string\n          description: The base series used in the case the stream was downsampled\n          enum:\n          - distance\n          - time\n    DistanceStream:\n      allOf:\n      - $ref: '#/components/schemas/BaseStream'\n      - type: object\n        properties:\n          data:\n            type: array\n            description: The sequence of distance values for this stream, in meters\n            items:\n              type: number\n              format: float\n    LatLngStream:\n      allOf:\n      - $ref: '#/components/schemas/BaseStream'\n      - type: object\n        properties:\n          data:\n            type: array\n            description: The sequence of lat/long values for this stream\n            items:\n              $ref: '#/components/schemas/LatLng'\n    AltitudeStream:\n      allOf:\n      - $ref: '#/components/schemas/BaseStream'\n      - type: object\n        properties:\n          data:\n            type: array\n            description: The sequence of altitude values for this stream, in meters\n            items:\n              type: number\n              format: float\n    SmoothVelocityStream:\n      allOf:\n      - $ref: '#/components/schemas/BaseStream'\n      - type: object\n        properties:\n          data:\n            type: array\n            description: The sequence of velocity values for this stream, in meters\n              per second\n            items:\n              type: number\n              format: float\n    HeartrateStream:\n      allOf:\n      - $ref: '#/components/schemas/BaseStream'\n      - type: object\n        properties:\n          data:\n            type: array\n            description: The sequence of heart rate values for this stream, in beats\n              per minute\n            items:\n              type: integer\n    CadenceStream:\n      allOf:\n      - $ref: '#/components/schemas/BaseStream'\n      - type: object\n        properties:\n          data:\n            type: array\n            description: The sequence of cadence values for this stream, in rotations\n              per minute\n            items:\n              type: integer\n    PowerStream:\n      allOf:\n      - $ref: '#/components/schemas/BaseStream'\n      - type: object\n        properties:\n          data:\n            type: array\n            description: The sequence of power values for this stream, in watts\n            items:\n              type: integer\n    TemperatureStream:\n      allOf:\n      - $ref: '#/components/schemas/BaseStream'\n      - type: object\n        properties:\n          data:\n            type: array\n            description: The sequence of temperature values for this stream, in celsius\n              degrees\n            items:\n              type: integer\n    MovingStream:\n      allOf:\n      - $ref: '#/components/schemas/BaseStream'\n      - type: object\n        properties:\n          data:\n            type: array\n            description: The sequence of moving values for this stream, as boolean\n              values\n            items:\n              type: boolean\n    SmoothGradeStream:\n      allOf:\n      - $ref: '#/components/schemas/BaseStream'\n      - type: object\n        properties:\n          data:\n            type: array\n            description: The sequence of grade values for this stream, as percents\n              of a grade\n            items:\n              type: number\n              format: float\n  parameters:\n    page:\n      name: page\n      in: query\n      description: Page number. Defaults to 1.\n      schema:\n        type: integer\n    perPage:\n      name: per_page\n      in: query\n      description: Number of items per page. Defaults to 30.\n      schema:\n        type: integer\n        default: 30\n  securitySchemes:\n    strava_oauth:\n      type: oauth2\n      flows:\n        authorizationCode:\n          authorizationUrl: https://www.strava.com/api/v3/oauth/authorize\n          tokenUrl: https://www.strava.com/api/v3/oauth/token\n          scopes:\n            read: Read public segments, public routes, public profile data, public\n              posts, public events, club feeds, and leaderboards\n            read_all: Read private routes, private segments, and private events for\n              the user\n            profile:read_all: Read all profile information even if the user has set\n              their profile visibility to Followers or Only You\n            profile:write: Update the user's weight and Functional Threshold Power\n              (FTP), and access to star or unstar segments on their behalf\n            activity:read: Read the user's activity data for activities that are visible\n              to Everyone and Followers, excluding privacy zone data\n            activity:read_all: The same access as activity:read, plus privacy zone\n              data and access to read the user's activities with visibility set to\n              Only You\n            activity:write: Access to create manual activities and uploads, and access\n              to edit any activities that are visible to the app, based on activity\n              read access level\n\n",
			"canonicalURL": "/github.com/davidmoten/openapi-to-plantuml@250b5a6cd0d333db4c676376a43186463f673b93/-/blob/src/test/resources/demo/strava.yml",
			"externalURLs": [
				{
					"url": "https://github.com/davidmoten/openapi-to-plantuml/blob/250b5a6cd0d333db4c676376a43186463f673b93/src/test/resources/demo/strava.yml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "parse: parse spec: parse operations: paths: /gear/{id}: get: operation \"getGearById\": security: parse security scheme \"strava_oauth\": oauth2: flow \"authorizationCode\": unknown scope \"public\""
}