{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/NCATS-Tangerine/translator-api-registry"
		},
		"file": {
			"name": "openapi_full.yml",
			"size": 0,
			"path": "mychem.info/openapi_full.yml",
			"byteSize": 41806,
			"content": "openapi: 3.0.3\ninfo:\n  contact:\n    email: help@biothings.io\n    name: Chunlei Wu\n    x-id: https://github.com/newgene\n    x-role: responsible developer\n  description: Documentation of the MyChem.info chem query web services.  Learn more\n    about [MyChem.info](http://MyChem.info/)\n  termsOfService: http://MyChem.info/terms\n  title: MyChem.info API\n  version: '1.0'\n  x-translator:\n    infores: \"infores:mychem-info\"\n    component: KP\n    team:\n      - Service Provider\n    biolink-version: \"2.2.13\"\nservers:\n- description: Encrypted Production server\n  url: https://mychem.info/v1\n  x-maturity: production\n- description: Production server\n  url: http://mychem.info/v1\n  x-maturity: production\ntags:\n- name: chemical\n- name: drug\n- name: annotation\n- name: query\n- name: translator\n- name: biothings\npaths:\n  \"/chem/{id}\":\n    get:\n      parameters:\n      - name: id\n        description: 'Retrieve chemical objects based on ID - currently one of: [InChiKey](https://en.wikipedia.org/wiki/International_Chemical_Identifier#InChIKey),\n          [DrugBank accession number](https://www.drugbank.ca/documentation), [ChEMBLID](https://www.ebi.ac.uk/chembl/faq#faq40),\n          [ChEBI identifier](http://www.ebi.ac.uk/chebi/aboutChebiForward.do), [PubChem\n          CID](https://pubchem.ncbi.nlm.nih.gov/search/help_search.html#Cid), [UNII](https://www.fda.gov/ForIndustry/DataStandards/SubstanceRegistrationSystem-UniqueIngredientIdentifierUNII/).  Supports\n          JSONP and CORS as well.'\n        in: path\n        required: true\n        example: \"USNINKBPBVKHHZ-CYUUQNCZSA-L\"\n        schema:\n          type: string\n      - \"$ref\": \"#/components/parameters/raw\"\n      - \"$ref\": \"#/components/parameters/rawquery\"\n      - \"$ref\": \"#/components/parameters/_source\"\n      - \"$ref\": \"#/components/parameters/size\"\n      - \"$ref\": \"#/components/parameters/dotfield\"\n      - \"$ref\": \"#/components/parameters/_sorted\"\n      - \"$ref\": \"#/components/parameters/always_list\"\n      - \"$ref\": \"#/components/parameters/allow_null\"\n      - \"$ref\": \"#/components/parameters/format\"\n      responses:\n        '200':\n          description: \"Success\"\n      #     content:\n      #       application/json:\n      #         schema:\n      #           $ref: '#/components/schemas/Chem'\n      #   '404':\n      #     description: A response indicating an unknown chemical ID\n      # summary: Retrieve chemical objects based on ID\n      tags:\n      - chemical\n  \"/chem\":\n    post:\n      parameters:\n      - \"$ref\": \"#/components/parameters/raw\"\n      - \"$ref\": \"#/components/parameters/rawquery\"\n      - \"$ref\": \"#/components/parameters/_source\"\n      - \"$ref\": \"#/components/parameters/size\"\n      - \"$ref\": \"#/components/parameters/dotfield\"\n      - \"$ref\": \"#/components/parameters/_sorted\"\n      - \"$ref\": \"#/components/parameters/always_list\"\n      - \"$ref\": \"#/components/parameters/allow_null\"\n      - \"$ref\": \"#/components/parameters/format\"\n      requestBody:\n        content:\n          application/json:\n            example:\n              ids:\n              - \"USNINKBPBVKHHZ-CYUUQNCZSA-L\"\n              - \"KTUFNOKKBVMGRW-UHFFFAOYSA-N\"\n            schema:\n              type: object\n              properties:\n                ids:\n                  description: 'multiple chemical IDs separated by comma. Note that\n                    currently we only take the input ids up to 1000 maximum, the rest\n                    will be omitted. Type: string (list). Max: 1000.'\n                  type: array\n                  items:\n                    type: string\n      responses:\n        '200':\n          description: \"Success\"\n      tags:\n      - chemical\n  \"/metadata\":\n    get:\n      parameters:\n      - \"$ref\": \"#/components/parameters/format\"\n      - \"$ref\": \"#/components/parameters/raw\"\n      - \"$ref\": \"#/components/parameters/dev\"\n      responses:\n        '200':\n          description: Success\n      summary: Get metadata about the data available from the API\n      tags:\n      - metadata\n  \"/metadata/fields\":\n    get:\n      parameters:\n      - \"$ref\": \"#/components/parameters/format\"\n      - \"$ref\": \"#/components/parameters/raw\"\n      - \"$ref\": \"#/components/parameters/search\"\n      - \"$ref\": \"#/components/parameters/prefix\"\n      responses:\n        '200':\n          description: Success\n      summary: Get metadata about the data fields available from a record\n      tags:\n      - metadata\n  \"/query\":\n    get:\n      parameters:\n      - name: q\n        description: 'Query string.  The detailed query syntax can be found from our\n          [docs](http://MyChem.info).  Examples: \"Fludara\", \"CHEMBI:63599\", \"DB01073\".'\n        in: query\n        required: true\n        example: \"Fludara\"\n        schema:\n          type: string\n      - \"$ref\": \"#/components/parameters/aggs\"\n      - \"$ref\": \"#/components/parameters/facet_size\"\n      - \"$ref\": \"#/components/parameters/from\"\n      - \"$ref\": \"#/components/parameters/userquery\"\n      - \"$ref\": \"#/components/parameters/sort\"\n      - \"$ref\": \"#/components/parameters/explain\"\n      - \"$ref\": \"#/components/parameters/fetch_all\"\n      - \"$ref\": \"#/components/parameters/scroll_id\"\n      - \"$ref\": \"#/components/parameters/raw\"\n      - \"$ref\": \"#/components/parameters/rawquery\"\n      - \"$ref\": \"#/components/parameters/_source\"\n      - \"$ref\": \"#/components/parameters/size\"\n      - \"$ref\": \"#/components/parameters/dotfield\"\n      - \"$ref\": \"#/components/parameters/_sorted\"\n      - \"$ref\": \"#/components/parameters/always_list\"\n      - \"$ref\": \"#/components/parameters/allow_null\"\n      - \"$ref\": \"#/components/parameters/format\"\n      responses:\n        '200':\n          description: Success\n      #     content:\n      #       application/json:\n      #         schema:\n      #           \"$ref\": \"#/components/schemas/QueryResult\"\n      #   '400':\n      #     content:\n      #       application/json:\n      #         schema:\n      #           \"$ref\": \"#/components/schemas/ErrorResult\"\n      #     description: A response indicating an improperly formatted query\n      # summary: Make queries and return matching gene hits. Supports JSONP and CORS\n      #   as well.\n      tags:\n      - query\n    post:\n      parameters:\n      - name: q\n        in: query\n        required: false\n        schema:\n          type: array\n          items:\n            type: string\n      - name: scopes\n        in: query\n        required: false\n        schema:\n          type: array\n          items:\n            type: string\n            default:\n            - _id\n      - \"$ref\": \"#/components/parameters/from\"\n      - \"$ref\": \"#/components/parameters/sort\"\n      - \"$ref\": \"#/components/parameters/raw\"\n      - \"$ref\": \"#/components/parameters/rawquery\"\n      - \"$ref\": \"#/components/parameters/_source\"\n      - \"$ref\": \"#/components/parameters/size\"\n      - \"$ref\": \"#/components/parameters/dotfield\"\n      - \"$ref\": \"#/components/parameters/_sorted\"\n      - \"$ref\": \"#/components/parameters/always_list\"\n      - \"$ref\": \"#/components/parameters/allow_null\"\n      - \"$ref\": \"#/components/parameters/format\"\n      requestBody:\n        content:\n          application/json:\n            example:\n              q:\n              - \"CHEMBL266510\"\n              - \"CHEMBL1200833\"\n              scopes:\n              - \"subject.CHEMBL_COMPOUND\"\n            schema:\n              type: object\n              properties:\n                q:\n                  description: multiple query terms separated by comma (also \"+\" or\n                    whitespace).  Does not support wildcard queries\n                  type: array\n                  items:\n                    type: string\n                scopes:\n                  description: 'a comma-separated list of fields as the search \"scopes\"\n                    (fields to search through for query term). The available \"fields\"\n                    that can be passed to the \"scopes\" parameter are listed in the\n                    **/metadata/fields** endpoint.string Default: \"scopes=_id\".'\n                  type: array\n                  items:\n                    type: string\n                from:\n                  type: integer\n                sort:\n                  type: array\n                  items:\n                    type: string\n      responses:\n        '200':\n          description: Success\n      #     content:\n      #       application/json:\n      #         schema:\n      #           \"$ref\": \"#/components/schemas/QueryPOSTResult\"\n      #   '400':\n      #     content:\n      #       application/json:\n      #         schema:\n      #           \"$ref\": \"#/components/schemas/ErrorResult\"\n      #     description: A response indicating an improperly formatted query\n      # summary: Make batch gene queries and return matching gene hits\n      tags:\n      - query\n      x-bte-kgs-operations:\n      - \"$ref\": \"#/components/x-bte-kgs-operations/aeolusTreats\"\n      - \"$ref\": \"#/components/x-bte-kgs-operations/aeolusTreats-rev\"\n      - \"$ref\": \"#/components/x-bte-kgs-operations/chebiToReactome\"\n      - \"$ref\": \"#/components/x-bte-kgs-operations/chebiToReactome-rev\"\n      - \"$ref\": \"#/components/x-bte-kgs-operations/chebiToRhea\"\n      - \"$ref\": \"#/components/x-bte-kgs-operations/chebiToRhea-rev\"\n      - \"$ref\": \"#/components/x-bte-kgs-operations/treatsChembl\"\n      - \"$ref\": \"#/components/x-bte-kgs-operations/treatsChembl-rev\"\n      - \"$ref\": \"#/components/x-bte-kgs-operations/drugcentral-bioactivity\"\n      - \"$ref\": \"#/components/x-bte-kgs-operations/drugcentral-bioactivity-rev\"\n      - \"$ref\": \"#/components/x-bte-kgs-operations/drugcentral-contraindication\"\n      - \"$ref\": \"#/components/x-bte-kgs-operations/drugcentral-contraindication-rev\"\n      - \"$ref\": \"#/components/x-bte-kgs-operations/drugcentral-indication\"\n      - \"$ref\": \"#/components/x-bte-kgs-operations/drugcentral-indication-rev\"\n      - \"$ref\": \"#/components/x-bte-kgs-operations/drugcentral-offlabel\"\n      - \"$ref\": \"#/components/x-bte-kgs-operations/drugcentral-offlabel-rev\"\n      - \"$ref\": \"#/components/x-bte-kgs-operations/drugcentral-adverseEvent\"\n      - \"$ref\": \"#/components/x-bte-kgs-operations/drugcentral-adverseEvent-rev\"\n      - \"$ref\": \"#/components/x-bte-kgs-operations/fdaOrphanData\"\n      - \"$ref\": \"#/components/x-bte-kgs-operations/fdaOrphanData-rev\"\ncomponents:\n  parameters:\n    _sorted:\n      name: _sorted\n      in: query\n      required: false\n      schema:\n        type: boolean\n        default: true\n    _source:\n      name: _source\n      in: query\n      required: false\n      schema:\n        type: array\n        items:\n          type: string\n    aggs:\n      name: aggs\n      in: query\n      required: false\n      schema:\n        type: array\n        items:\n          type: string\n    allow_null:\n      name: allow_null\n      in: query\n      required: false\n      schema:\n        type: array\n        items:\n          type: string\n    always_list:\n      name: always_list\n      in: query\n      required: false\n      schema:\n        type: array\n        items:\n          type: string\n    dev:\n      name: dev\n      in: query\n      required: false\n      schema:\n        type: boolean\n    dotfield:\n      name: dotfield\n      in: query\n      required: false\n      schema:\n        type: boolean\n    explain:\n      name: explain\n      in: query\n      required: false\n      schema:\n        type: boolean\n    facet_size:\n      name: facet_size\n      in: query\n      required: false\n      schema:\n        type: integer\n        default: 10\n    fetch_all:\n      name: fetch_all\n      in: query\n      required: false\n      schema:\n        type: boolean\n    format:\n      name: format\n      description: 'controls output format of server response, currently supports:\n        \"json\", \"jsonld\", \"html\". Type: string. Default: json.'\n      in: query\n      required: false\n      schema:\n        type: string\n        default: json\n    from:\n      name: from\n      in: query\n      required: false\n      schema:\n        type: integer\n    prefix:\n      name: prefix\n      in: query\n      required: false\n      schema:\n        type: string\n    raw:\n      name: raw\n      in: query\n      required: false\n      schema:\n        type: boolean\n    rawquery:\n      name: rawquery\n      in: query\n      required: false\n      schema:\n        type: boolean\n    scroll_id:\n      name: scroll_id\n      in: query\n      required: false\n      schema:\n        type: string\n    search:\n      name: search\n      in: query\n      required: false\n      schema:\n        type: string\n    size:\n      name: size\n      description: \"default: 10 objects/records in response\"\n      in: query\n      required: false\n      schema:\n        type: integer\n    sort:\n      name: sort\n      in: query\n      required: false\n      schema:\n        type: array\n        items:\n          type: string\n    userquery:\n      name: userquery\n      in: query\n      required: false\n      schema:\n        type: string\n  schemas:\n    Chem:\n      properties:\n        _id:\n          type: string\n      required:\n      - _id\n      type: object\n    ErrorResult:\n      properties:\n        message:\n          type: string\n        success:\n          type: boolean\n      type: object\n    QueryPOSTResult:\n      items:\n        allOf:\n        - \"$ref\": \"#/components/schemas/Chem\"\n        - properties:\n            _score:\n              format: float\n              type: number\n            query:\n              type: string\n          type: object\n      type: array\n    QueryResult:\n      properties:\n        hits:\n          items:\n            \"$ref\": \"#/components/schemas/Chem\"\n          type: array\n        max_score:\n          format: float\n          type: number\n        took:\n          type: integer\n        total:\n          type: integer\n      type: object\n    int64_or_array:\n      oneOf:\n      - items:\n          format: int64\n          type: integer\n        type: array\n      - format: int64\n        type: integer\n    string_or_array:\n      oneOf:\n      - items:\n          type: string\n        type: array\n      - type: string\n  x-bte-response-mapping:\n    aeolusIndication-meddra:\n      MEDDRA: aeolus.indications.meddra_code\n    aeolus-unii:\n      UNII: aeolus.unii\n    chebiXrefs-reactome:\n      REACT: chebi.xrefs.reactome\n    chebi:\n      CHEBI: chebi.id\n    chebiXrefs-rhea:\n      RHEA: chebi.xrefs.rhea\n    chembl-treats:\n      MESH: chembl.drug_indications.mesh_id\n      ## edge attributes\n      max_clinical_phase_for_indication: chembl.drug_indications.max_phase_for_ind\n      year_first_approved: chembl.drug_indications.first_approval\n      ## provenance-related field. Sources are ATC, ClinicalTrial, DailyMed, FDA\n      reference_urls: chembl.drug_indications.indication_refs.url\n      source: chembl.drug_indications.indication_refs.type\n    chembl:\n      \"CHEMBL.COMPOUND\": chembl.molecule_chembl_id  ## no prefix\n    drugcentral-bioactivity:\n      UniProtKB: drugcentral.bioactivity.uniprot.uniprot_id  ## no prefix\n      ## edge attributes\n      drugcentral_bioactivity_action_source: drugcentral.bioactivity.act_source\n      drugcentral_bioactivity_action_type: drugcentral.bioactivity.action_type\n      in_taxon: drugcentral.bioactivity.organism\n    drugcentral-chembl:\n      \"CHEMBL.COMPOUND\": drugcentral.xrefs.chembl_id  ## no prefix\n    drugcentral-contraindication:\n      UMLS: drugcentral.drug_use.contraindication.umls_cui  ## no prefix\n    drugcentral-indication:\n      UMLS: drugcentral.drug_use.indication.umls_cui  ## no prefix\n    drugcentral-unii:\n      UNII: drugcentral.xrefs.unii  ## no prefix\n    drugcentral-offlabel:\n      UMLS: \"drugcentral.drug_use.off_label_use.umls_cui\"  ## no prefix\n    drugcentral-adverseEvent:\n      MEDDRA: drugcentral.fda_adverse_event.meddra_code\n      fda_count_had-drug_adverse-event: drugcentral.fda_adverse_event.drug_ae\n      fda_count_had-drug_no-adverse-event: drugcentral.fda_adverse_event.drug_no_ae\n      fda_count_no-drug_adverse-event: drugcentral.fda_adverse_event.no_drug_ae\n      fda_count_no-drug_no-adverse-event: drugcentral.fda_adverse_event.no_drug_no_ar\n    fdaOrphanDrug:\n      UMLS: fda_orphan_drug.orphan_designation.umls\n      fda_orphan_drug_approval_status: fda_orphan_drug.approval_status\n      fda_orphan_drug_approved_indication: fda_orphan_drug.approved_labeled_indication\n      fda_orphan_drug_designation_date: fda_orphan_drug.designated_date\n      fda_orphan_drug_designation_status: fda_orphan_drug.designated_status\n      fda_orphan_drug_exclusivity_end_date: fda_orphan_drug.exclusivity_end_date\n      fda_orphan_drug_marketing_approval_date: fda_orphan_drug.marketing_approval_date\n      fda_orphan_drug_designation_original_text: fda_orphan_drug.orphan_designation.original_text\n    fdaOrphanDrug-pubchemCompound:\n      \"PUBCHEM.COMPOUND\": fda_orphan_drug.pubchem_cid  ## no prefix\n  x-bte-kgs-operations:\n  ## deciding not to annotate aeolus.outcomes since this list of side effects can be very long\n  ##   this says mychem truncates it to 5000...https://docs.mychem.info/en/latest/doc/data_source.html\n  ## deciding not to annotate sider since it's not clear how the records are structured (is meddra ID for the side effect?)\n  ##   it is also long...https://docs.mychem.info/en/latest/doc/data_source.html\n    aeolusTreats:\n    ## - chose to map to Disease semantic type since I saw SRI map some MEDDRA IDs to Disease...\n    ##   https://nodenormalization-sri.renci.org/1.2/get_normalized_nodes?curie=MEDDRA%3A10021639\u0026conflate=true\n    ##   But some seem like PhenotypicFeatures...\n    - supportBatch: true\n      inputSeparator: \",\"\n      inputs:\n      - id: UNII\n        semantic: SmallMolecule\n      requestBody:\n        body:\n          q: \"{inputs[0]}\"  ## no prefix\n          scopes: aeolus.unii\n          ## all 3044 records have unii, only 1931 have inchikey\n        header: application/x-www-form-urlencoded\n      outputs:\n      - id: MEDDRA\n        semantic: Disease\n      parameters:\n        fields: aeolus.indications.meddra_code  ## no prefix\n        size: 1000  ## note size limit; added just in case\n      predicate: treats  ## current biolink predicate\n      source: \"infores:aeolus\"\n      response_mapping:\n        \"$ref\": \"#/components/x-bte-response-mapping/aeolusIndication-meddra\"\n      # testExamples:\n      #   - qInput: \"UNII:90347YTW5F\"     ## alfuzosin\n      #     oneOutput: \"MEDDRA:10004446\"  ## Benign prostatic hyperplasia\n    ## once MyChem comes out (indexes the field) \n    ##   un-comment the operation in x-bte-kgs-operation list under post and try this out \n    aeolusTreats-rev:\n    - supportBatch: true\n      inputSeparator: \",\"\n      inputs:\n      - id: MEDDRA\n        semantic: Disease\n      requestBody:\n        body:\n          q: \"{inputs[0]}\"  ## no prefix\n          scopes: aeolus.indications.meddra_code\n        header: application/x-www-form-urlencoded\n      outputs:\n      - id: UNII\n        semantic: SmallMolecule\n      parameters:\n        fields: aeolus.unii  ## no prefix\n        size: 1000  ## note size limit\n      predicate: treated_by  ## current biolink predicate\n      source: \"infores:aeolus\"\n      response_mapping:\n        \"$ref\": \"#/components/x-bte-response-mapping/aeolus-unii\"\n      # testExamples:\n      #   - qInput: \"MEDDRA:10012378\"        ## Depression \n      #     oneOutput: \"UNII:OGG85SX4E4\"     ## Imipramine\n  ## chebi xrefs actually include relationships to other bioentities...\n  ## - note that truncation was done by MyChem for rhea...\n  ##   see https://docs.mychem.info/en/latest/doc/data_source.html\n  ## - not including chebi.xrefs.uniprot because:\n  ##    * too many genes linked to a chemical\n  ##    * genes are from all species (not clear how to restrict to human)\n  ## - not including chebi.xrefs.brenda (EC numbers): not clear what this means,\n  ##    or how accurately it's been ingested into chebi...\n  ## - not including chebi.xrefs.intenz (EC numbers): not in curie or ID form \n  ##   (example: EC 1.5.1.28)\n    chebiToReactome:\n    ## there are 1941 records with chebi.xrefs.reactome\n    - supportBatch: true\n      inputSeparator: \",\"\n      inputs:\n      - id: CHEBI\n        semantic: SmallMolecule\n      requestBody:\n        body:\n          q: \"{inputs[0]}\"  ## HAS PREFIX!\n          scopes: chebi.id\n        header: application/x-www-form-urlencoded\n      outputs:\n      ## uses Reactome Reaction, not pathway...\n      - id: REACT\n        semantic: MolecularActivity\n      parameters:\n        fields: chebi.xrefs.reactome  ## no prefix\n        size: 1000  ## note size limit; added just in case\n      predicate: participates_in  ## current biolink predicate\n      source: \"infores:chebi\"\n      response_mapping:\n        \"$ref\": \"#/components/x-bte-response-mapping/chebiXrefs-reactome\"\n      # testExamples:\n      #   - qInput: \"CHEBI:15724\"            ## trimethylamine N-oxide\n      #     oneOutput: \"REACT:R-HSA-139970\"  ##  FMO3:FAD N-oxidises TMA to TMAO \n    chebiToReactome-rev:\n    - supportBatch: true\n      inputSeparator: \",\"\n      inputs:\n      - id: REACT\n        semantic: MolecularActivity\n      requestBody:\n        body:\n          q: \"{inputs[0]}\"  ## no prefix\n          scopes: chebi.xrefs.reactome\n        header: application/x-www-form-urlencoded\n      outputs:\n      - id: CHEBI\n        semantic: SmallMolecule\n      parameters:\n        fields: chebi.id\n        size: 1000  ## note size limit\n      predicate: has_participant  ## current biolink predicate\n      source: \"infores:chebi\"\n      response_mapping:\n        \"$ref\": \"#/components/x-bte-response-mapping/chebi\"\n      # testExamples:\n      #   - qInput: \"REACT:R-HSA-1855166\"   ## PP-IP4 is dephosphorylated to I(1,3,4,5,6)P5 by NUDT4 in the cytosol \n      #     oneOutput: \"CHEBI:62926\"        ##  1-Diphospho-1D-myo-inositol 3,4,5,6-tetrakisphosphate\n    chebiToRhea:\n    ## there are 11079 records with chebi.xrefs.rhea\n    - supportBatch: true\n      inputSeparator: \",\"\n      inputs:\n      - id: CHEBI\n        semantic: SmallMolecule\n      requestBody:\n        body:\n          q: \"{inputs[0]}\"  ## HAS PREFIX!\n          scopes: chebi.id\n        header: application/x-www-form-urlencoded\n      outputs:\n      - id: RHEA\n        semantic: MolecularActivity\n      parameters:\n        fields: chebi.xrefs.rhea  ## HAS PREFIX\n        size: 1000  ## note size limit; added just in case\n      predicate: participates_in  ## current biolink predicate\n      source: \"infores:chebi\"\n      response_mapping:\n        \"$ref\": \"#/components/x-bte-response-mapping/chebiXrefs-rhea\"\n      # testExamples:\n      #   - qInput: \"CHEBI:4885\"      ## ethionamide\n      #     oneOutput: \"RHEA:47616\"   ## ethionamide + H(+) + NADPH + O2 = ethionamide S-oxide + H2O + NADP(+)\n    chebiToRhea-rev:\n    - supportBatch: true\n      inputSeparator: \",\"\n      inputs:\n      - id: RHEA\n        semantic: MolecularActivity\n      requestBody:\n        body:\n          q: \"{inputs[0]}\"  ## HAS PREFIX (RHEA)\n          scopes: chebi.xrefs.rhea\n        header: application/x-www-form-urlencoded\n      outputs:\n      - id: CHEBI\n        semantic: SmallMolecule\n      parameters:\n        fields: chebi.id  ## HAS PREFIX\n        size: 1000  ## note size limit\n      predicate: has_participant  ## current biolink predicate\n      source: \"infores:chebi\"\n      response_mapping:\n        \"$ref\": \"#/components/x-bte-response-mapping/chebi\"\n      # testExamples:\n      #   - qInput: \"RHEA:23312\"      ## 2 sucrose = 1(F)-beta-D-fructosylsucrose + D-glucose\n      #     oneOutput: \"CHEBI:16885\"  ## 1-kestose\n    ## chembl\n    ## - not including drug_mechanisms because \n    ##   * it uses CHEMBL.TARGET IDs and SRI ID resolver doesn't support that yet...\n    ##   * it also will include non-human protein targets (like tuberculosis protein...)\n    treatsChembl:\n    ## all drug_indication records have a mesh ID for the indication...\n    - supportBatch: true\n      inputSeparator: \",\"\n      inputs:\n      - id: CHEMBL.COMPOUND\n        semantic: SmallMolecule\n      requestBody:\n        body:\n          q: \"{inputs[0]}\"  ## no prefix\n          scopes: chembl.molecule_chembl_id\n        header: application/x-www-form-urlencoded\n      outputs:\n      - id: MESH\n        semantic: Disease\n      parameters:\n      ## not including: mesh_heading (name)\n      ## including: first_approval is only in some records (not indexed right now)\n        fields: \u003e-\n          chembl.drug_indications.mesh_id,\n          chembl.drug_indications.max_phase_for_ind,\n          chembl.drug_indications.indication_refs.url,\n          chembl.drug_indications.indication_refs.type,\n          chembl.drug_indications.first_approval\n        size: 1000  ## note size limit; added just in case\n      ## child of treats, seems to better fit the \"indication\" idea\n      predicate: approved_to_treat\n      source: \"infores:chembl\"\n      response_mapping:\n        \"$ref\": \"#/components/x-bte-response-mapping/chembl-treats\"\n      # testExamples:\n      #   - qInput: \"CHEMBL.COMPOUND:CHEMBL471737\"   ## IVABRADINE\n      #     oneOutput: \"MESH:D000072658\"             ## Non-ST Elevated Myocardial Infarction\n    treatsChembl-rev:\n    - supportBatch: true\n      inputSeparator: \",\"\n      inputs:\n      - id: MESH\n        semantic: Disease\n      requestBody:\n        body:\n          q: \"{inputs[0]}\"  ## no prefix\n          scopes: chembl.drug_indications.mesh_id\n        header: application/x-www-form-urlencoded\n      outputs:\n      - id: CHEMBL.COMPOUND\n        semantic: SmallMolecule\n      parameters:\n        fields: chembl.molecule_chembl_id  ## no prefix\n        size: 1000  ## note size limit\n      predicate: approved_for_treatment_by\n      source: \"infores:chembl\"\n      response_mapping:\n        \"$ref\": \"#/components/x-bte-response-mapping/chembl\"\n      # testExamples:\n      #   - qInput: \"MESH:D014376\"                    ## Tuberculosis\n      #     oneOutput: \"CHEMBL.COMPOUND:CHEMBL1441\"   ## ETHIONAMIDE\n  ## DrugCentral source\n  ## - not including: \n  ##   - drugcentral.approval (node properties?)\n  ##   - drugcentral.drug_dosage (node properties?)\n  ##   - drugcentral.drug_use.diagnosis (only has 1 matching record...)\n  ##   - drugcentral.drug_use.reduce_risk (only has 1 matching record...)\n  ##   - drugcentral.drug_use.symptomatic_treatment (only has 2 matching records...)\n    drugcentral-bioactivity:\n      ## BIG NOTE: this endpoint actually gives genes from multiple organisms. \n      ##   for example, see: https://mychem.info/v1/chem/ONNOFKFOZAJDHT-UHFFFAOYSA-N : it says rat...\n      ##   possible values: \"Homo sapiens\", \"Rattus norvegicus\", \"Bos taurus\", \"Mus musculus\"...\n      ## I'm not clear on how to get only human genes to return...\n    - supportBatch: true\n      inputSeparator: \",\"\n      inputs:\n      ## there are 2382 records with drugcentral.bioactivity fields\n      ##   most of them (2362) also have the drugcentral.xrefs.chembl_id field\n      - id: CHEMBL.COMPOUND\n        semantic: SmallMolecule\n      requestBody:\n        body:\n          q: \"{inputs[0]}\"  ## no prefix\n          scopes: drugcentral.xrefs.chembl_id\n        header: application/x-www-form-urlencoded\n      outputs:\n      - id: UniProtKB\n        semantic: Gene\n      ## not including: \n      ##   - uniprot.gene_symbol, uniprot.swissprot_entry\n      ##   - target_name, target_class\n      ##   - act_type, act_value (since units are unclear)\n      ##   - moa, moa_source (value of 1 seems to mean this interaction is part of \n      ##     drug's mechanism of action (moa))\n      ## note on bioactivity.action_type:\n      ##   - has values like AGONIST, ANTAGONIST, INHIBITOR, BLOCKER...\n      ##   - BUT NOT ALL ASSOCATIONS HAVE THIS\n      ## bioactivity.organism is the organism the gene/protein is in\n      parameters:\n        fields: \u003e-\n          drugcentral.bioactivity.uniprot.uniprot_id,\n          drugcentral.bioactivity.act_source,\n          drugcentral.bioactivity.action_type,\n          drugcentral.bioactivity.organism\n        size: 1000  ## note size limit; added just in case\n      predicate: physically_interacts_with\n      ## would like something more specific, mapped to drugcentral's bioactivity concept...\n      source: \"infores:drugcentral\"\n      response_mapping:\n        \"$ref\": \"#/components/x-bte-response-mapping/drugcentral-bioactivity\"\n      # testExamples:\n      #   - qInput: \"CHEMBL.COMPOUND:CHEMBL3545412\"    ## pemafibrate\n      #     oneOutput: \"UniProtKB:Q07869\"              ## PPARA\n    drugcentral-bioactivity-rev:\n    - supportBatch: true\n      inputSeparator: \",\"\n      inputs:\n      - id: UniProtKB\n        semantic: Gene\n      requestBody:\n        body:\n          q: \"{inputs[0]}\"  ## no prefix\n          scopes: drugcentral.bioactivity.uniprot.uniprot_id\n        header: application/x-www-form-urlencoded\n      outputs:\n      - id: CHEMBL.COMPOUND\n        semantic: SmallMolecule\n      parameters:\n        fields: drugcentral.xrefs.chembl_id\n        size: 1000  ## note size limit\n      predicate: physically_interacts_with\n      source: \"infores:drugcentral\"\n      response_mapping:\n        \"$ref\": \"#/components/x-bte-response-mapping/drugcentral-chembl\"\n      # testExamples:\n      #   - qInput: \"UniProtKB:P30968\"                 ## GNRHR\n      #     oneOutput: \"CHEMBL.COMPOUND:CHEMBL1252\"    ## abarelix\n    drugcentral-contraindication:\n    - supportBatch: true\n      inputSeparator: \",\"\n      inputs:\n      - id: CHEMBL.COMPOUND\n        semantic: SmallMolecule\n      ## there are 1375 records with drugcentral.drug_use.contraindication fields\n      ##   most of them (1365) also have the drugcentral.xrefs.chembl_id field\n      requestBody:\n        body:\n          q: \"{inputs[0]}\"  ## no prefix\n          scopes: drugcentral.xrefs.chembl_id\n        header: application/x-www-form-urlencoded\n      outputs:\n      - id: UMLS\n        semantic: Disease\n      ## FYI: output could also be SNOMED (specifically SNOMED-CT US Edition). \n      ##     Looks like the native ID for DrugCentral, see https://drugcentral.org/drugcard/1768#druguse. \n      ##     The original data source also may have some DOID mappings (see the linked example), but the API doesn't have this right now\n      parameters:\n        fields: drugcentral.drug_use.contraindication.umls_cui  ## no prefix\n        size: 1000  ## note size limit; added just in case\n      predicate: contraindicated_for  ## current biolink predicate\n      source: \"infores:drugcentral\"\n      response_mapping:\n        \"$ref\": \"#/components/x-bte-response-mapping/drugcentral-contraindication\"\n      # testExamples:\n      #   - qInput: \"CHEMBL.COMPOUND:CHEMBL1441\"    ## ethioniamide\n      #     oneOutput: \"UMLS:C0001973\"              ## Alcoholism\n    drugcentral-contraindication-rev:\n    - supportBatch: true\n      inputSeparator: \",\"\n      inputs:\n      - id: UMLS\n        semantic: Disease\n      requestBody:\n        body:\n          q: \"{inputs[0]}\"  ## no prefix\n          scopes: drugcentral.drug_use.contraindication.umls_cui\n        header: application/x-www-form-urlencoded\n      outputs:\n      - id: CHEMBL.COMPOUND\n        semantic: SmallMolecule\n      parameters:\n        fields: drugcentral.xrefs.chembl_id  ## no prefix\n        size: 1000  ## note size limit\n      predicate: has_contraindication\n      source: \"infores:drugcentral\"\n      response_mapping:\n        \"$ref\": \"#/components/x-bte-response-mapping/drugcentral-chembl\"\n      # testExamples:\n      #   - qInput: \"UMLS:C0020621\"                   ## Hypokalemia\n      #     oneOutput: \"CHEMBL.COMPOUND:CHEMBL471\"    ## sotalol\n    drugcentral-indication:\n    ## note: some records don't have the needed output IDs...only a concept name...\n    - supportBatch: true\n      inputSeparator: \",\"\n      inputs:\n      - id: UNII\n        semantic: SmallMolecule\n      ## there are 2366 records with drugcentral.drug_use.indication fields\n      ##   most of them (2324) also have the drugcentral.xrefs.unii field \n      ## note: there were slightly less records (2320) with the drugcentral.xrefs.chembl_id field\n      requestBody:\n        body:\n          q: \"{inputs[0]}\"  ## no prefix\n          scopes: drugcentral.xrefs.unii\n        header: application/x-www-form-urlencoded\n      outputs:\n      - id: UMLS\n        semantic: Disease\n      parameters:\n        fields: drugcentral.drug_use.indication.umls_cui  ## no prefix\n        size: 1000  ## note size limit; added just in case\n      ## FYI: output could also be SNOMED (specifically SNOMED-CT US Edition). \n      ##     Looks like the native ID for DrugCentral, see https://drugcentral.org/drugcard/1768#druguse. \n      ##     The original data source also may have some DOID mappings (see the linked example), but the API doesn't have this right now.\n      ## child of treats, seems to better fit the \"indication\" idea\n      predicate: approved_to_treat\n      source: \"infores:drugcentral\"\n      response_mapping:\n        \"$ref\": \"#/components/x-bte-response-mapping/drugcentral-indication\"\n      # testExamples:\n      #   - qInput: \"UNII:17VGG92R23\"    ## pemafibrate\n      #     oneOutput: \"UMLS:C0242339\"   ## Dyslipidemia\n    drugcentral-indication-rev:\n    - supportBatch: true\n      inputSeparator: \",\"\n      inputs:\n      - id: UMLS\n        semantic: Disease\n      requestBody:\n        body:\n          q: \"{inputs[0]}\"  ## no prefix\n          ## example: put C0038013 here (Ankylosing spondylitis)\n          ##   should get CHEMBL650 (METHYLPREDNISOLONE) in response\n          scopes: drugcentral.drug_use.indication.umls_cui\n        header: application/x-www-form-urlencoded\n      outputs:\n      - id: UNII\n        semantic: SmallMolecule\n      parameters:\n        fields: drugcentral.xrefs.unii\n        size: 1000  ## note size limit\n      predicate: approved_for_treatment_by\n      source: \"infores:drugcentral\"\n      response_mapping:\n        \"$ref\": \"#/components/x-bte-response-mapping/drugcentral-unii\"\n      # testExamples:\n      #   - qInput: \"UMLS:C0234974\"    ## Simple partial seizure\n      #     oneOutput: \"UNII:44YRR34555\"   ## keppra\n    ## edit, try this out once spaces in fields are fixed (next MyChem release)\n    drugcentral-offlabel:\n    - supportBatch: true\n      useTemplating: true\n      inputs:\n      - id: \"CHEMBL.COMPOUND\"\n        semantic: SmallMolecule\n      ## there are 782 records with \"drugcentral.drug_use.off_label_use\" fields\n      ##   most of them (780) also have the drugcentral.xrefs.chembl_id field \n      ## note: there were slightly less records (775) with the drugcentral.xrefs.unii field\n      requestBodyType: object\n      requestBody:\n        body: \u003e-\n          { \n            \"q\": \"{{ queryInputs }}\",\n            \"scopes\": \"drugcentral.xrefs.chembl_id\"\n          }\n        header: application/x-www-form-urlencoded\n      outputs:\n      - id: UMLS\n        semantic: Disease\n      ## moved parameters (fields, size) to the request body to allow MyChem to handle field with space inside...\n      parameters:\n        fields: drugcentral.drug_use.off_label_use.umls_cui\n        size: 1000     ## note size limit; added just in case\n      ## FYI: output could also be SNOMED (specifically SNOMED-CT US Edition). \n      ##     Looks like the native ID for DrugCentral, see https://drugcentral.org/drugcard/1768#druguse. \n      ##     The original data source also may have some DOID mappings (see the linked example), but the API doesn't have this right now.\n      predicate: treats\n      source: \"infores:drugcentral\"\n      response_mapping:\n        \"$ref\": \"#/components/x-bte-response-mapping/drugcentral-offlabel\"\n      # testExamples:\n      #   - qInput: \"CHEMBL.COMPOUND:CHEMBL11\"    ## imipramine\n      #     oneOutput: \"UMLS:C0027796\"   ## Neuropathic pain\n    drugcentral-offlabel-rev:\n    - supportBatch: true\n      useTemplating: true\n      inputs:\n      - id: UMLS\n        semantic: Disease\n      requestBodyType: object  \n      requestBody:\n        body: \u003e-\n          {\n            \"q\": \"{{ queryInputs }}\",\n            \"scopes\": [\"drugcentral.drug_use.off_label_use.umls_cui\"]\n          }\n        header: application/x-www-form-urlencoded\n      outputs:\n      - id: \"CHEMBL.COMPOUND\"\n        semantic: SmallMolecule\n      parameters:\n        fields: drugcentral.xrefs.chembl_id\n        size: 1000  ## note size limit\n      predicate: treated_by\n      source: \"infores:drugcentral\"\n      response_mapping:\n        \"$ref\": \"#/components/x-bte-response-mapping/drugcentral-chembl\"\n      # testExamples:\n      #   - qInput: \"UMLS:C0149931\"                      ## Migraine\n      #     oneOutput: \"CHEMBL.COMPOUND:CHEMBL2105833\"   ## octodrine\n    drugcentral-adverseEvent:\n    ## - chose to map to Disease semantic type since I saw SRI map some MEDDRA IDs to Disease...\n    ##   https://nodenormalization-sri.renci.org/1.2/get_normalized_nodes?curie=MEDDRA%3A10035528\u0026conflate=true\n    ##   But some are definitely PhenotypicFeatures...\n    - supportBatch: true\n      inputSeparator: \",\"\n      inputs:\n      - id: CHEMBL.COMPOUND\n        semantic: SmallMolecule\n      ## there are 2016 records with drugcentral.fda_adverse_event fields\n      ##   most of them (1994) also have the drugcentral.xrefs.chembl_id field\n      requestBody:\n        body:\n          q: \"{inputs[0]}\"  ## no prefix\n          scopes: drugcentral.xrefs.chembl_id\n        header: application/x-www-form-urlencoded\n      outputs:\n      - id: MEDDRA\n        semantic: Disease\n      parameters:\n      ## - there are also edge attributes that are hard to explain/understand\n      ##    - not sure what the llr, llr_threshold, level means. \n      ##      Likely related to log-likelihood ratio (LLR) and its test...\n        fields: \u003e-\n          drugcentral.fda_adverse_event.meddra_code,\n          drugcentral.fda_adverse_event.drug_ae,\n          drugcentral.fda_adverse_event.drug_no_ae,\n          drugcentral.fda_adverse_event.no_drug_ae,\n          drugcentral.fda_adverse_event.no_drug_no_ar\n        size: 1000  ## note size limit; added just in case\n      predicate: causes_adverse_event  ## current biolink predicate\n      ## through drugcentral, FDA Adverse Event Reporting System (FAERS) information\n      source: \"infores:drugcentral\"\n      response_mapping:\n        \"$ref\": \"#/components/x-bte-response-mapping/drugcentral-adverseEvent\"\n      # testExamples:\n      #   - qInput: \"CHEMBL.COMPOUND:CHEMBL440\"    ## thiamylal sodium\n      #     oneOutput: \"MEDDRA:10006093\"           ## Bradycardia\n    drugcentral-adverseEvent-rev:\n    - supportBatch: true\n      inputSeparator: \",\"\n      inputs:\n      - id: MEDDRA\n        semantic: Disease\n      requestBody:\n        body:\n          q: \"{inputs[0]}\"  ## no prefix\n          scopes: drugcentral.fda_adverse_event.meddra_code\n        header: application/x-www-form-urlencoded\n      outputs:\n      - id: CHEMBL.COMPOUND\n        semantic: SmallMolecule\n      parameters:\n        fields: drugcentral.xrefs.chembl_id\n        size: 1000  ## note size limit\n      predicate: adverse_event_caused_by  ## current biolink predicate\n      ## through drugcentral, FDA Adverse Event Reporting System (FAERS) information\n      source: \"infores:drugcentral\"\n      response_mapping:\n        \"$ref\": \"#/components/x-bte-response-mapping/drugcentral-chembl\"\n      # testExamples:\n      #   - qInput: \"MEDDRA:10040108\"                      ## Serotonin syndrome\n      #     oneOutput: \"CHEMBL.COMPOUND:CHEMBL395091\"      ## esketamine HCl\n    fdaOrphanData:\n    - supportBatch: true\n      inputSeparator: \",\"\n      inputs:\n      - id: PUBCHEM.COMPOUND\n        semantic: SmallMolecule\n      ## there are 3661 records with fda_orphan_drug fields\n      ##   some of them (1826) also have the fda_orphan_drug.pubchem_cid field\n      ##   same amount have inchikey field...\n      requestBody:\n        body:\n          q: \"{inputs[0]}\"  ## no prefix\n          scopes: fda_orphan_drug.pubchem_cid\n        header: application/x-www-form-urlencoded\n      outputs:\n      - id: UMLS\n        semantic: Disease\n      parameters:\n      ## categorical variables:\n      ##   - approval_status (also similar to a relation?)\n      ##   - designated_status\n      ## free text:\n      ##   - approved_labeled_indication\n      ## not including:\n      ##   - exclusivity_protected_indication: same as approved_labeled_indication?\n        fields: \u003e-\n          fda_orphan_drug.orphan_designation.umls,\n          fda_orphan_drug.approval_status,\n          fda_orphan_drug.approved_labeled_indication,\n          fda_orphan_drug.designated_date,\n          fda_orphan_drug.designated_status,\n          fda_orphan_drug.exclusivity_end_date,\n          fda_orphan_drug.marketing_approval_date,\n          fda_orphan_drug.orphan_designation.original_text\n      predicate: treats  ## current biolink predicate\n      ## through drugcentral, FDA Orphan Drug Designations and Approvals database...\n      source: \"infores:drugcentral\"\n      response_mapping:\n        \"$ref\": \"#/components/x-bte-response-mapping/fdaOrphanDrug\"\n      # testExamples:\n      #   - qInput: \"PUBCHEM.COMPOUND:24889392\"    ## quizartinib\n      #     oneOutput: \"UMLS:C0023467\"             ## Acute myeloid leukemia\n    fdaOrphanData-rev:\n    - supportBatch: true\n      inputSeparator: \",\"\n      inputs:\n      - id: UMLS\n        semantic: Disease\n      requestBody:\n        body:\n          q: \"{inputs[0]}\"  ## no prefix\n          scopes: fda_orphan_drug.orphan_designation.umls\n        header: application/x-www-form-urlencoded\n      outputs:\n      - id: PUBCHEM.COMPOUND\n        semantic: SmallMolecule\n      parameters:\n        fields: fda_orphan_drug.pubchem_cid\n        size: 1000  ## note size limit\n      predicate: treated_by  ## current biolink predicate\n      ## through drugcentral, FDA Orphan Drug Designations and Approvals database...\n      source: \"infores:drugcentral\"\n      response_mapping:\n        \"$ref\": \"#/components/x-bte-response-mapping/fdaOrphanDrug-pubchemCompound\"\n      # testExamples:\n      #   - qInput: \"UMLS:C1412063\"                     ## Stargardt disease\n      #     oneOutput: \"PUBCHEM.COMPOUND:25221720\"      ## emixustat\n",
			"canonicalURL": "/github.com/NCATS-Tangerine/translator-api-registry@5925bba6420fb77fa3e54d9258970431e340e092/-/blob/mychem.info/openapi_full.yml",
			"externalURLs": [
				{
					"url": "https://github.com/NCATS-Tangerine/translator-api-registry/blob/5925bba6420fb77fa3e54d9258970431e340e092/mychem.info/openapi_full.yml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "parse: parse spec: parse operations: paths: /query: post: parameters: parse parameter \"scopes\": schema: parse schema: item: parse default: expected type \"string\", got \"array\""
}