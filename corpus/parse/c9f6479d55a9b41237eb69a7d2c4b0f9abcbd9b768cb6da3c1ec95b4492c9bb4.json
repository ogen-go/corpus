{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/academic-resources/stared-repos"
		},
		"file": {
			"name": "schema-form-missing-values.yaml",
			"size": 0,
			"path": "swagger-ui/test/e2e-cypress/static/documents/features/schema-form-missing-values.yaml",
			"byteSize": 2731,
			"content": "openapi: 3.0.0\ninfo:\n  description: No type for schema\n  version: \"1\"\n  title: \"No type\"\npaths:\n  /case-one-no-schema:\n    parameters:\n      - name: namespace\n        description: The custom resource's namespace\n        # schema:\n        in: path\n        required: true\n    get:\n      description: sf\n      responses:\n        default:\n          description: one\n  /case-one-no-type-or-format:\n    parameters:\n      - name: namespace\n        description: The custom resource's namespace\n        schema:\n        in: path\n        required: true\n    get:\n      description: sf\n      responses:\n        default:\n          description: one\n  /case-one-type-only-no-format:\n    parameters:\n      - name: namespace\n        description: The custom resource's namespace\n        schema:\n          type: integer\n        in: path\n        required: true\n    get:\n      description: sf\n      responses:\n        default:\n          description: one\n  /case-one-format-only-no-type:\n    parameters:\n      - name: namespace\n        description: The custom resource's namespace\n        schema:\n          format: int64\n        in: path\n        required: true\n    get:\n      description: sf\n      responses:\n        default:\n          description: one\n  /case-two-no-schema:\n    get:\n      description: sf\n      responses:\n        default:\n          description: one\n      parameters:\n        - name: namespace\n          in: path\n          description: The custom resource's namespace\n          required: true\n          # schema:\n  /case-two-no-type-or-format:\n    get:\n      description: sf\n      responses:\n        default:\n          description: one\n      parameters:\n        - name: namespace\n          in: path\n          description: The custom resource's namespace\n          required: true\n          schema:\n  /case-two-type-only-no-format:\n    get:\n      description: sf\n      responses:\n        default:\n          description: one\n      parameters:\n        - name: namespace\n          in: path\n          description: The custom resource's namespace\n          required: true\n          schema:\n            type: integer\n  /case-two-format-only-no-type:\n    get:\n      description: sf\n      responses:\n        default:\n          description: one\n      parameters:\n        - name: namespace\n          in: path\n          description: The custom resource's namespace\n          required: true\n          schema:\n            format: int64\n  /case-two-not-a-real-type:\n    get:\n      description: sf\n      responses:\n        default:\n          description: one\n      parameters:\n        - name: namespace\n          in: path\n          description: The custom resource's namespace\n          required: true\n          schema:\n            type: \"NotARealType\"\n"
		}
	},
	"Error": "parse: parse spec: parse operations: paths: /case-two-format-only-no-type: get: parameters: parse parameter \"namespace\": invalid schema:style:explode combination"
}