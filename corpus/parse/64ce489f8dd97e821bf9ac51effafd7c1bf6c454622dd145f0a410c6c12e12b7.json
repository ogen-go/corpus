{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/plantbreeding/BrAPI"
		},
		"file": {
			"name": "Methods_GET_POST.yaml",
			"size": 0,
			"path": "Specification/BrAPI-Phenotyping/Methods/Methods_GET_POST.yaml",
			"byteSize": 3033,
			"content": "info:\n  title: BrAPI\n  version: ''\nopenapi: 3.0.0\npaths:\n  /methods:\n    get:\n      summary: Get the Methods\n      description: |-\n        Returns a list of Methods available on a server.\n\n        An Observation Variable has 3 critical parts; A Trait being observed, a Method for making the observation, and a Scale on which the observation can be measured and compared with other observations.'\n      parameters:\n      - description: The unique identifier for a method\n        in: query\n        name: methodDbId\n        required: false\n        schema:\n          type: string\n      - description: The unique identifier for an observation variable\n        in: query\n        name: observationVariableDbId\n        required: false\n        schema:\n          type: string\n      - $ref: '#/components/parameters/ontologyDbId'\n      - $ref: '#/components/parameters/commonCropName'\n      - $ref: '#/components/parameters/programDbId'\n      - $ref: '#/components/parameters/externalReferenceID'\n      - $ref: '#/components/parameters/externalReferenceId'\n      - $ref: '#/components/parameters/externalReferenceSource'\n      - $ref: '#/components/parameters/page'\n      - $ref: '#/components/parameters/pageSize'\n      - $ref: '#/components/parameters/authorizationHeader'\n      responses:\n        '200':\n          $ref: '#/components/responses/MethodListResponse'\n        '400':\n          $ref: '#/components/responses/400BadRequest'\n        '401':\n          $ref: '#/components/responses/401Unauthorized'\n        '403':\n          $ref: '#/components/responses/403Forbidden'\n      tags:\n      - Methods\n    post:\n      summary: Add new Methods\n      description: Create new method objects in the database\n      parameters:\n      - $ref: '#/components/parameters/authorizationHeader'\n      requestBody:\n        content: \n          application/json:\n            schema:\n              type: array\n              items:\n                $ref: '#/components/schemas/MethodNewRequest'\n      responses:\n        '200':\n          $ref: '#/components/responses/MethodListResponse'\n        '400':\n          $ref: '#/components/responses/400BadRequest'\n        '401':\n          $ref: '#/components/responses/401Unauthorized'\n        '403':\n          $ref: '#/components/responses/403Forbidden'\n      tags: \n      - Methods\ncomponents:\n  responses:\n    MethodListResponse:\n      content:\n        application/json:\n          schema:\n            title: MethodListResponse\n            type: object\n            properties:\n              '@context':\n                $ref: '#/components/schemas/Context'\n              metadata:\n                $ref: '#/components/schemas/metadata'\n              result:\n                properties:\n                  data:\n                    items:\n                      $ref: '#/components/schemas/Method'\n                    type: array\n                required:\n                - data\n                type: object\n            required:\n            - metadata\n            - result\n      description: OK\n      headers: {}\n    \n",
			"canonicalURL": "/github.com/plantbreeding/BrAPI@a45723dba8753a1c1177ec8f7759d57ebcf5f5b1/-/blob/Specification/BrAPI-Phenotyping/Methods/Methods_GET_POST.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/plantbreeding/BrAPI/blob/a45723dba8753a1c1177ec8f7759d57ebcf5f5b1/Specification/BrAPI-Phenotyping/Methods/Methods_GET_POST.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "parse: parse spec: parse components: at 1:15: responses: \"MethodListResponse\": at 1:50: at 1:61: content: application/json: at 1:81: schema: at 1:91: parse schema: property \"@context\": at 1:117: parse schema: resolve \"#/components/schemas/Context\": find schema: resolve: can't find value for \"components/schemas/Context\""
}