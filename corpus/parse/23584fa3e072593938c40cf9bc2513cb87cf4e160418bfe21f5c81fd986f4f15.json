{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/hiteshchoudhary/pro-backend-developer"
		},
		"file": {
			"name": "swagger.yaml",
			"size": 0,
			"path": "mydocslco/swagger.yaml",
			"byteSize": 5414,
			"content": "openapi: \"3.0.0\"\ninfo:\n  title: learn express and swagger - LearnCodeOnline\n  description: LCO - a course segment about writing docs\n  version: 1.1.0\n  contact:\n    email: hitesh@google.com\n    url: \"https://lco.dev\"\n\n# servers:\n#   - url: \"https://localhost:4000/api/v1\"\n#     description: for local host - secure\n#   - url: \"http://localhost:4000/api/v1\"\n#     description: for local host - regular\n\nservers:\n  - url: \"{protocol}://localhost:4000/api/{version}\"\n    description: for local host \n    variables:\n      version:\n        enum:\n          - v1\n          - v2\n        default: v1\n      protocol:\n        enum:\n          - http\n          - https\n        default: http\n\ncomponents:\n  securitySchemes:\n    cookieAuth:\n      type: apiKey\n      in: cookie\n      name: token\n    BearerAuth:\n      type: http\n      scheme: bearer\n\npaths:\n  /lco:\n    get:\n      tags:\n        - String\n      summary: returns a greet message from LCO\n      responses:\n        200:\n          description: All good success\n          content:\n            application/json:\n              schema:\n                type: string\n                example: \"mystring\"\n        400:\n          description: Bad request\n        500:\n          description: internal server error\n  \n  /lcoobject:\n    get:\n      tags:\n        - Object\n      summary: returns a unique course \n      responses:\n        200:\n          description: All good success\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  id:\n                    type: string\n                  name:\n                    type: string\n                  price:\n                    type: number\n        400:\n          description: Bad request\n        500:\n          description: internal server error\n\n  /courses:\n    get:\n      tags:\n        - Array\n      summary: returns all courses\n      responses:\n        200:\n          description: All good success\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  type: object\n                  properties:\n                    id:\n                      type: string\n                    name:\n                      type: string\n                    price:\n                      type: number\n        400:\n          description: Bad request\n        500:\n          description: internal server error\n  /mycourse/{courseId}:\n    get:\n      tags:\n        - String\n      summary: returns course based on request id\n      parameters:\n        - name: courseId\n          in: path\n          required: true\n          default: 22\n          schema:\n            type: string\n      responses:\n        200:\n          description: All good success\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  id:\n                    type: string\n                  name:\n                    type: string\n                  price:\n                    type: number\n        400:\n          description: Bad request\n        500:\n          description: internal server error\n\n  /addCourse:\n    post:\n      tags:\n        - String\n      summary: adds a new course to existing courses\n      consumes:\n        - application/json\n      produces:\n        - application/json\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                id:\n                  type: string\n                name:\n                  type: string\n                price:\n                  type: number\n      responses:\n        200:\n          description: All good success\n          content:\n            application/json:\n              schema:\n                type: boolean\n                \n        400:\n          description: Bad request\n        500:\n          description: internal server error\n\n  /coursequery:\n    get:\n      tags:\n        - String\n      summary: trying to learn about query\n      parameters:\n        - name: location\n          in: query\n          required: true\n          schema:\n            type: string\n            enum: [delhi, london, jaipur]\n        - name: device\n          in: query\n          required: true\n          schema:\n            type: string\n            enum: [web, mobile]\n      responses:\n        200:\n          description: All good success\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  location:\n                    type: string\n                  device:\n                    type: string\n                \n        400:\n          description: Bad request\n        500:\n          description: internal server error\n\n  /courseupload:\n    post:\n      tags:\n        - String\n      summary: uploading course image\n      parameters:\n        - in: header\n          name: auth\n      requestBody:\n        content:\n          multipart/form-data:\n            schema:\n              type: object\n              properties:\n                file:\n                  type: string\n                  format: binary\n      responses:\n        200:\n          description: All good success\n              \n        400:\n          description: Bad request\n        500:\n          description: internal server error\n\n",
			"canonicalURL": "/github.com/hiteshchoudhary/pro-backend-developer@d876ccc661b599c343890e82228a073002479aa6/-/blob/mydocslco/swagger.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/hiteshchoudhary/pro-backend-developer/blob/d876ccc661b599c343890e82228a073002479aa6/mydocslco/swagger.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "parse: parse spec: parse path items: path \"/courseupload\": post: parameters: parse parameter \"auth\": at mydocslco/swagger.yaml:217:11: parameter MUST contain either a schema property, or a content property"
}