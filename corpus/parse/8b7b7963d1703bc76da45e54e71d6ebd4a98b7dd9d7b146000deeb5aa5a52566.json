{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/thisdot/starter.dev"
		},
		"file": {
			"name": "swagger_v3.json",
			"size": 0,
			"path": "starters/express-typeorm-postgres/swagger_v3.json",
			"byteSize": 8291,
			"content": "{\n  \"openapi\": \"3.0.0\",\n  \"info\": {\n    \"title\": \"express-typeorm-postgres\",\n    \"version\": \"0.0.1\",\n    \"license\": {\n      \"name\": \"MIT\"\n    },\n    \"description\": \"Specification JSONs: [v2](/api-spec/v2), [v3](/api-spec/v3).\\n\\nexpress, typescript, REST\"\n  },\n  \"paths\": {\n    \"*\": {\n      \"options\": {\n        \"summary\": \"*\",\n        \"responses\": {},\n        \"tags\": []\n      }\n    },\n    \"/health\": {\n      \"get\": {\n        \"summary\": \"/health\",\n        \"responses\": {\n          \"200\": {\n            \"description\": \"OK\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"database\": {\n                      \"type\": \"string\",\n                      \"example\": \"PostgreSQL 15.1 (Debian 15.1-1.pgdg110+1) on aarch64-unknown-linux-gnu, compiled by gcc (Debian 10.2.1-6) 10.2.1 20210110, 64-bit\"\n                    },\n                    \"redisCacheConnection\": {\n                      \"type\": \"string\",\n                      \"example\": \"CONNECTED\"\n                    },\n                    \"redisQueueHealth\": {\n                      \"type\": \"object\",\n                      \"properties\": {\n                        \"connection\": {\n                          \"type\": \"string\",\n                          \"example\": \"PONG\"\n                        },\n                        \"activeCount\": {\n                          \"type\": \"number\",\n                          \"example\": 0\n                        },\n                        \"waitingCount\": {\n                          \"type\": \"number\",\n                          \"example\": 0\n                        },\n                        \"completedCount\": {\n                          \"type\": \"number\",\n                          \"example\": 2\n                        },\n                        \"failedCount\": {\n                          \"type\": \"number\",\n                          \"example\": 0\n                        }\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"304\": {\n            \"description\": \"\"\n          }\n        },\n        \"tags\": []\n      }\n    },\n    \"/technology\": {\n      \"get\": {\n        \"summary\": \"/technology\",\n        \"responses\": {\n          \"200\": {\n            \"description\": \"OK\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"id\": {\n                        \"type\": \"number\"\n                      },\n                      \"displayName\": {\n                        \"type\": \"string\"\n                      },\n                      \"description\": {\n                        \"type\": \"string\"\n                      }\n                    },\n                    \"required\": [\n                      \"id\",\n                      \"displayName\",\n                      \"description\"\n                    ]\n                  }\n                }\n              }\n            }\n          },\n          \"304\": {\n            \"description\": \"\"\n          }\n        },\n        \"tags\": []\n      },\n      \"post\": {\n        \"summary\": \"/technology\",\n        \"requestBody\": {\n          \"$ref\": \"#/components/requestBodies/Body\"\n        },\n        \"responses\": {\n          \"202\": {\n            \"description\": \"Accepted\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"id\": {\n                      \"type\": \"number\",\n                      \"example\": 12\n                    }\n                  }\n                }\n              }\n            }\n          }\n        },\n        \"tags\": []\n      }\n    },\n    \"/technology/{technologyId}\": {\n      \"get\": {\n        \"summary\": \"/technology/{technologyId}\",\n        \"parameters\": [\n          {\n            \"name\": \"technologyId\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"OK\",\n            \"content\": {\n              \"*/*\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"id\": {\n                      \"type\": \"number\"\n                    },\n                    \"displayName\": {\n                      \"type\": \"string\"\n                    },\n                    \"description\": {\n                      \"type\": \"string\"\n                    }\n                  },\n                  \"required\": [\n                    \"id\",\n                    \"displayName\",\n                    \"description\"\n                  ]\n                }\n              }\n            }\n          },\n          \"304\": {\n            \"description\": \"\"\n          }\n        },\n        \"tags\": []\n      },\n      \"put\": {\n        \"summary\": \"/technology/{technologyId}\",\n        \"parameters\": [\n          {\n            \"name\": \"technologyId\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"requestBody\": {\n          \"$ref\": \"#/components/requestBodies/Body\"\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Accepted\",\n            \"content\": {\n              \"*/*\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"id\": {\n                      \"type\": \"number\",\n                      \"example\": 12\n                    }\n                  }\n                }\n              }\n            }\n          }\n        },\n        \"tags\": []\n      },\n      \"delete\": {\n        \"summary\": \"/technology/{technologyId}\",\n        \"parameters\": [\n          {\n            \"name\": \"technologyId\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Accepted\",\n            \"content\": {\n              \"*/*\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"id\": {\n                      \"type\": \"number\",\n                      \"example\": 12\n                    }\n                  }\n                }\n              }\n            }\n          }\n        },\n        \"tags\": []\n      }\n    },\n    \"/queue\": {\n      \"post\": {\n        \"summary\": \"/queue\",\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"type\": \"object\",\n                \"properties\": {\n                  \"data\": {\n                    \"type\": \"string\",\n                    \"example\": \"It can be anything\"\n                  }\n                }\n              }\n            }\n          },\n          \"required\": true\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"OK\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"jobId\": {\n                      \"type\": \"string\",\n                      \"example\": \"6\"\n                    }\n                  }\n                }\n              }\n            }\n          }\n        },\n        \"tags\": []\n      }\n    }\n  },\n  \"tags\": [],\n  \"servers\": [\n    {\n      \"url\": \"http://localhost:3333\"\n    }\n  ],\n  \"components\": {\n    \"requestBodies\": {\n      \"Body\": {\n        \"content\": {\n          \"application/json\": {\n            \"schema\": {\n              \"type\": \"object\",\n              \"properties\": {\n                \"displayName\": {\n                  \"type\": \"string\",\n                  \"example\": \"BullMQ\"\n                },\n                \"description\": {\n                  \"type\": \"string\",\n                  \"example\": \"A javascript library that leverages Redis to set up queues\"\n                }\n              }\n            }\n          }\n        },\n        \"required\": true\n      }\n    }\n  }\n}",
			"canonicalURL": "/github.com/thisdot/starter.dev@b51b929b0e4654aafc089abd29a9f128cfc8183f/-/blob/starters/express-typeorm-postgres/swagger_v3.json",
			"externalURLs": [
				{
					"url": "https://github.com/thisdot/starter.dev/blob/b51b929b0e4654aafc089abd29a9f128cfc8183f/starters/express-typeorm-postgres/swagger_v3.json",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "parse: parse spec: parse path items: path \"*\": options: at starters/express-typeorm-postgres/swagger_v3.json:13:18: parse path \"*\": path MUST begin with a forward slash"
}