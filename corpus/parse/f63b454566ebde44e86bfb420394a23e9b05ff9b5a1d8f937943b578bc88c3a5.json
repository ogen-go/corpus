{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/MG-RAST/AWE"
		},
		"file": {
			"name": "awe-openapi.yaml",
			"size": 0,
			"path": "docs/API/awe-openapi.yaml",
			"byteSize": 10606,
			"content": "openapi: 3.0.0\nservers:\n  - url: awe.mg-rast.org\ninfo:\n  description: |\n  version: 1.0.0\n  title: AWE API specification\n  termsOfService: ''\n\n#components:\n  #securitySchemes:\n    #OAuth2:\n    #  type: oauth2\n    #  flows:\n    #    authorizationCode:\n    #      authorizationUrl: https://example.com/oauth/authorize\n    #      tokenUrl: https://example.com/oauth/token\n    #      scopes:\n    #        read: Grants read access\n    #        write: Grants write access\n    #        admin: Grants access to admin operations\n\ntags:\n  - name: job\n    description: Job resource\n  - name: work\n    description: Workunit resource\n  - name: client\n    description: Client resource\n  - name: queue\n    description: Queue resource\n  - name: logger\n    description: Logger resource\npaths:\n  '/job':\n    get:\n      summary: List all or some jobs\n      description: \"This API returns a page of job objects and total counts. Use `limit` \u0026 `offset` to control paginated view (by default `limit=25`, `offset=0`), to show all jobs, you can set `limit=total_counts` and `offset = 0`. By default the jobs will be sorted by last updated time (`desc`). You can change the sorting criteria by setting  `order=\u003cjob_field\u003e\u0026direction=\u003casc|desc\u003e`.\"\n      parameters:\n      - in: query\n        name: limit\n        required: false\n        schema:\n          type: integer\n      - in: query\n        name: offset\n        required: false\n        schema:\n          type: integer\n      - in: query\n        name: order\n        required: false\n        schema:\n          type: string\n          enum: [\"asc\", \"desc\"]\n        examples:\n          asc:\n            value: \"asc\"\n          desc:\n            value: \"desc\"\n      - in: query\n        name: active\n        required: false\n        schema:\n          type: boolean\n      - in: query\n        name: suspend\n        required: false\n        schema:\n          type: boolean\n      - in: query\n        name: registered\n        required: false\n        schema:\n          type: boolean\n      responses:\n        '200':\n          description: OK\n      tags:\n        - job\n      security:\n        - OAuth2: [admin]\n    post:\n      summary: \"Submit job\"\n      responses:\n        '200':\n          description: OK\n      tags:\n        - job\n    delete:\n      parameters: \n      - in: query\n        description: Delete all suspended jobs\n        name: suspend\n        required: false\n        schema:\n          type: boolean\n      summary: \"Delete jobs\"\n      responses:\n        '200':\n          description: OK\n      tags:\n        - job\n  '/job/{job_id}':\n    parameters:\n      - in: path\n        name: job_id\n        description: \"ID of jobdocument\"\n        required: true\n        schema:\n          type: string\n    get:\n      summary: Show one job with specific job id\n      \n      responses:\n        '200':\n          description: OK\n      tags:\n        - job\n      security:\n        - OAuth2: [read]\n    put:\n      parameters:\n        - in: query\n          name: suspend\n          required: false\n          schema:\n            type: boolean\n        - in: query\n          name: resume\n          required: false\n          schema:\n            type: boolean\n        - in: query\n          name: recover\n          required: false\n          schema:\n            type: boolean\n        - in: query\n          name: recompute\n          required: false\n          schema:\n            type: integer\n        - in: query\n          name: resubmit\n          required: false\n          schema:\n            type: boolean\n        - in: query\n          name: clientgroup\n          required: false\n          schema:\n            type: string\n        - in: query\n          name: pipeline\n          required: false\n          schema:\n            type: string\n            \n        - in: query\n          name: priority\n          required: false\n          schema:\n            type: integer\n        - in: query\n          name: expiration\n          required: false\n          schema:\n            type: string\n            \n      responses:\n        '200':\n          description: OK\n      tags:\n        - job\n      security:\n        - OAuth2: [read]\n        \n        \n    delete:\n      parameters: \n        - in: query\n          name: full\n          required: false\n          schema:\n            type: boolean\n      responses:\n        '200':\n          description: OK\n      tags:\n        - job\n      security:\n        - OAuth2: [read]\n  '/work':\n    get:\n      summary: \"view a workunit\"\n      parameters: \n        - in: query\n          name: client\n          description: \"client checkout workunit\"\n          required: false\n          schema:\n            type: string\n      responses:\n        '200':\n          description: OK\n      tags:\n        - work\n      security:\n        - OAuth2: [read]\n        \n  '/work/{work_id}':\n    parameters:\n      - in: path\n        name: work_id\n        description: \"ID of workunit\"\n        required: true\n        schema:\n          type: string\n    get:\n      parameters: \n        - in: query\n          name: client\n          description: \"client checkout workunit\"\n          required: false\n          schema:\n            type: string\n        - in: query\n          name: datatoken\n          description: \"request data token for the specific workunit\"\n          required: false\n          schema:\n            type: string    \n        - in: query\n          name: report\n          description: \"request data token for the specific workunit\"\n          required: false\n          schema:\n            type: string\n            enum: [\"worknotes\", \"stdout\", \"stderr\"]     \n      responses:\n        '200':\n          description: OK\n      tags:\n        - work\n      security:\n        - OAuth2: [read]\n  '/client':\n    get:\n      summary: \"View all clients\"\n      parameters: \n        - in: query\n          name: busy\n          description: \"View all busy clients\"\n          required: false\n          schema:\n            type: boolean\n        - in: query\n          name: group\n          description: \"View all clients in clientgroup\"\n          required: false\n          schema:\n            type: boolean\n        - in: query\n          name: status\n          description: \"View all clients by status\"\n          required: false\n          schema:\n            type: string\n            \n      responses:\n        '200':\n          description: OK\n      tags:\n        - client\n      security:\n        - OAuth2: [read]\n    put:\n      parameters: \n        - in: query\n          name: suspendall\n          description: \"Suspend all clients\"\n          required: false\n          schema:\n            type: boolean\n        - in: query\n          name: resumeall\n          description: \"Resume all clients\"\n          required: false\n          schema:\n            type: boolean\n      responses:\n        '200':\n          description: OK\n      tags:\n        - client\n      security:\n        - OAuth2: [read]    \n        \n    post:\n      summary: \"Register a new client\"\n      responses:\n        '200':\n          description: OK\n      tags:\n        - client\n      security:\n        - OAuth2: [read]\n  '/client/{client_id}':              \n    parameters:\n      - in: path\n        name: client_id\n        description: \"ID of client/worker\"\n        required: true\n        schema:\n          type: string\n    get:\n      responses:\n        '200':\n          description: OK\n      tags:\n        - client\n      security:\n        - OAuth2: [read]\n    put:\n      parameters: \n        - in: query\n          name: suspend\n          description: \"Suspend client\"\n          required: false\n          schema:\n            type: boolean\n        - in: query\n          name: resume\n          description: \"Resume client\"\n          required: false\n          schema:\n            type: boolean\n      responses:\n        '200':\n          description: OK\n      tags:\n        - client\n      security:\n        - OAuth2: [read]\n  '/queue':\n    get:\n      summary: \"Queue summary, 'json' option for json format\"\n      parameters: \n        - in: query\n          name: json\n          description: \"json format\"\n          required: false\n          schema:\n            type: boolean\n        - in: query\n          name: job\n          description: \"Job queue details, requires admin authorization\"\n          required: false\n          schema:\n            type: boolean\n        - in: query\n          name: task\n          description: \"Task queue details, requires admin authorization\"\n          required: false\n          schema:\n            type: boolean\n        - in: query\n          name: work\n          description: \"Workunit queue details, requires admin authorization\"\n          required: false\n          schema:\n            type: boolean\n        - in: query\n          name: client\n          description: \"Client queue details, requires admin authorization\"\n          required: false\n          schema:\n            type: boolean\n        - in: query\n          name: clientgroup\n          description: \"View running jobs for given clientgroup, requires clientgroup authorization\"\n          required: false\n          schema:\n            type: string\n        \n      responses:\n        '200':\n          description: OK\n      tags:\n        - queue\n      security:\n        - OAuth2: [read]\n  \n    put:\n      parameters:\n        - in: query\n          name: suspend\n          description: \"Suspend queue, requires admin authorization\"\n          required: false\n          schema:\n            type: boolean \n        - in: query\n          name: resume\n          description: \"Resume queue, requires admin authorization\"\n          required: false\n          schema:\n            type: boolean \n      responses:\n        '200':\n          description: OK\n      tags:\n        - queue\n      security:\n        - OAuth2: [read]\n\n  '/logger':\n    get:\n      parameters: \n        - in: query\n          name: event\n          description: \"Event code descriptions\"\n          required: false\n          schema:\n            type: boolean \n        - in: query\n          name: debug\n          description: \"View debug logging level\"\n          required: false\n          schema:\n            type: boolean \n      responses:\n        '200':\n          description: OK\n      tags:\n        - logger\n      security:\n        - OAuth2: [read]\n    put:\n      parameters: \n        - in: query\n          name: debug\n          description: \"Set debug logging level, 0-3\"\n          required: false\n          schema:\n            type: integer \n      responses:\n        '200':\n          description: OK\n      tags:\n        - logger\n      security:\n        - OAuth2: [read]  \n        \n        \n        \n    \n  \n  \n  \n  \n  \n  \n  \n",
			"canonicalURL": "/github.com/MG-RAST/AWE@4b29331b5e4604a4741fd90048268c0cb6496514/-/blob/docs/API/awe-openapi.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/MG-RAST/AWE/blob/4b29331b5e4604a4741fd90048268c0cb6496514/docs/API/awe-openapi.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "parse: parse spec: parse operations: paths: /client/{client_id}: get: security: unknown security schema \"OAuth2\""
}