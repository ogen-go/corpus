{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/bf2fc6cc711aee1a0c2a/kas-fleet-manager"
		},
		"file": {
			"name": "kas-fleet-manager-private.yaml",
			"size": 0,
			"path": "openapi/kas-fleet-manager-private.yaml",
			"byteSize": 18132,
			"content": "openapi: 3.0.0 # need this as first line to allow some IDEs to know this is an openapi document.\n# Warning: This file should only be used if the endpoints are not yet ready to be public, or not suitable for public consumption (like the data plane endpoints).\n# In most cases, you shouldn't need to add the endpoints here.\n# Only add endpoints here when it is an explicit requirement, or if you know what you are doing.\n# There should be no duplicated endpoints or schemas in these 2 files. They should only defined in one of them.\ninfo:\n  title: Kafka Service Fleet Manager\n  version: 1.5.1\n  description: Kafka Service Fleet Manager APIs that are used by internal services e.g kas-fleetshard operators.\nservers:\n  - url: https://api.openshift.com\n    description: Main (production) server\n  - url: https://api.stage.openshift.com\n    description: Staging server\n  - url: http://localhost:8000\n    description: localhost\n  - url: /\n    description: current domain\ntags:\n  - name: Agent Clusters\n    description: \"\"\n\npaths:\n  # Endpoints for data plane communications\n  '/api/kafkas_mgmt/v1/agent-clusters/{id}/status':\n    put:\n      tags:\n        - Agent Clusters\n      parameters:\n        - $ref: \"kas-fleet-manager.yaml#/components/parameters/id\"\n      requestBody:\n        description: Cluster status update data\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/DataPlaneClusterUpdateStatusRequest'\n        required: true\n      responses:\n        '200':\n          description: Cluster status is updated\n        '400':\n          content:\n            application/json:\n              schema:\n                $ref: 'kas-fleet-manager.yaml#/components/schemas/Error'\n              examples:\n                400InvalidIdExample:\n                  $ref: '#/components/examples/400InvalidIdExample'\n          description: id value is not valid\n        '404':\n          content:\n            application/json:\n              schema:\n                $ref: 'kas-fleet-manager.yaml#/components/schemas/Error'\n              examples:\n                404Example:\n                  $ref: 'kas-fleet-manager.yaml#/components/examples/404Example'\n          # This is deliberate to hide the endpoints for unauthorised users\n          description: Auth token is not valid.\n      security:\n        - Bearer: [ ]\n      operationId: updateAgentClusterStatus\n      summary: Update the status of an agent cluster\n\n  '/api/kafkas_mgmt/v1/agent-clusters/{id}/kafkas/status':\n    put:\n      tags:\n        - Agent Clusters\n      parameters:\n        - $ref: \"kas-fleet-manager.yaml#/components/parameters/id\"\n      requestBody:\n        description: Kafka clusters status update data\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/DataPlaneKafkaStatusUpdateRequest'\n        required: true\n      responses:\n        '200':\n          description: Status is updated for Kafka clusters\n        '400':\n          content:\n            application/json:\n              schema:\n                $ref: 'kas-fleet-manager.yaml#/components/schemas/Error'\n              examples:\n                400InvalidIdExample:\n                  $ref: '#/components/examples/400InvalidIdExample'\n          description: id value is not valid\n        '404':\n          content:\n            application/json:\n              schema:\n                $ref: 'kas-fleet-manager.yaml#/components/schemas/Error'\n              examples:\n                404Example:\n                  $ref: 'kas-fleet-manager.yaml#/components/examples/404Example'\n          # This is deliberate to hide the endpoints for unauthorised users\n          description: Auth token is not valid.\n      security:\n        - Bearer: [ ]\n      operationId: updateKafkaClusterStatus\n      summary: Update the status of Kafka clusters on an agent cluster\n\n  '/api/kafkas_mgmt/v1/agent-clusters/{id}/kafkas':\n    get:\n      tags:\n        - Agent Clusters\n      parameters:\n        - $ref: \"kas-fleet-manager.yaml#/components/parameters/id\"\n      responses:\n        '200':\n          description: The list of the ManagedKafkas for the specified agent cluster\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ManagedKafkaList'\n        '400':\n          content:\n            application/json:\n              schema:\n                $ref: 'kas-fleet-manager.yaml#/components/schemas/Error'\n              examples:\n                400InvalidIdExample:\n                  $ref: '#/components/examples/400InvalidIdExample'\n          description: id value is not valid\n        '404':\n          content:\n            application/json:\n              schema:\n                $ref: 'kas-fleet-manager.yaml#/components/schemas/Error'\n              examples:\n                404Example:\n                  $ref: 'kas-fleet-manager.yaml#/components/examples/404Example'\n          # This is deliberate to hide the endpoints for unauthorised users\n          description: Auth token is not valid.\n      security:\n        - Bearer: [ ]\n      operationId: getKafkas\n      summary: Get the list of ManagedaKafkas for the specified agent cluster\n\n  '/api/kafkas_mgmt/v1/agent-clusters/{id}':\n    get:\n      tags:\n        - Agent Clusters\n      parameters:\n        - $ref: \"kas-fleet-manager.yaml#/components/parameters/id\"\n      responses:\n        '200':\n          description: The ManagedKafkaAgent CR Spec\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DataplaneClusterAgentConfig'\n        '400':\n          content:\n            application/json:\n              schema:\n                $ref: 'kas-fleet-manager.yaml#/components/schemas/Error'\n              examples:\n                400InvalidIdExample:\n                  $ref: '#/components/examples/400InvalidIdExample'\n          description: id value is not valid\n        '404':\n          content:\n            application/json:\n              schema:\n                $ref: 'kas-fleet-manager.yaml#/components/schemas/Error'\n              examples:\n                404Example:\n                  $ref: 'kas-fleet-manager.yaml#/components/examples/404Example'\n          # This is deliberate to hide the endpoints for unauthorised users\n          description: Auth token is not valid.\n      security:\n        - Bearer: [ ]\n      operationId: getKafkaAgent\n      summary: Get the spec of the ManagedKafkaAgent CR spec\n\ncomponents:\n  schemas:\n\n    ListReference:\n      required:\n        - kind\n        - items\n      type: object\n      properties:\n        kind:\n          type: string\n\n    PrivateObjectReference:\n      type: object\n      properties:\n        id:\n          type: string\n        kind:\n          type: string\n\n    ManagedKafkaCapacity:\n      type: object\n      properties:\n        ingressPerSec:\n          type: string\n        egressPerSec:\n          type: string\n        totalMaxConnections:\n          type: integer\n          format: int\n        maxDataRetentionSize:\n          type: string\n        maxPartitions:\n          type: integer\n          format: int\n        maxDataRetentionPeriod:\n          type: string\n        maxConnectionAttemptsPerSec:\n          type: integer\n          format: int\n\n    ManagedKafkaVersions:\n      type: object\n      properties:\n        kafka:\n          type: string\n        kafkaIbp:\n          type: string\n        strimzi:\n          type: string\n\n    ManagedKafka:\n      allOf:\n        - $ref: \"#/components/schemas/PrivateObjectReference\"\n        - type: object\n          properties:\n            metadata:\n              type: object\n              properties:\n                name:\n                  type: string\n                namespace:\n                  type: string\n                annotations:\n                  type: object\n                  required:\n                    - bf2.org/placementId\n                    - bf2.org/id\n                  properties:\n                    bf2.org/id:\n                      type: string\n                    bf2.org/placementId:\n                      type: string\n                labels:\n                  type: object\n                  required:\n                    - bf2.org/kafkaInstanceProfileQuotaConsumed\n                  properties:\n                    bf2.org/kafkaInstanceProfileType:\n                      type: string\n                    bf2.org/kafkaInstanceProfileQuotaConsumed:\n                      type: string\n\n            spec:\n              type: object\n              properties:\n                serviceAccounts:\n                  type: array\n                  items:\n                    type: object\n                    required:\n                      - name\n                      - principal\n                      - password\n                    properties:\n                      name:\n                        type: string\n                      principal:\n                        type: string\n                      password:\n                        type: string\n                capacity:\n                  $ref: \"#/components/schemas/ManagedKafkaCapacity\"\n                oauth:\n                  type: object\n                  required:\n                    - maximumSessionLifetime\n                  properties:\n                    tokenEndpointURI:\n                      type: string\n                    jwksEndpointURI:\n                      type: string\n                    validIssuerEndpointURI:\n                      type: string\n                    userNameClaim:\n                      type: string\n                    fallbackUserNameClaim:\n                      type: string\n                    tlsTrustedCertificate:\n                      type: string\n                      nullable: true\n                    customClaimCheck:\n                      type: string\n                    maximumSessionLifetime:\n                      type: long\n\n                owners:\n                  type: array\n                  items:\n                    type: string\n                endpoint:\n                  type: object\n                  properties:\n                    bootstrapServerHost:\n                      type: string\n                    tls:\n                      type: object\n                      nullable: true\n                      properties:\n                        cert:\n                          type: string\n                        key:\n                          type: string\n                versions:\n                  $ref: \"#/components/schemas/ManagedKafkaVersions\"\n                deleted:\n                  type: boolean\n              required:\n                - deleted\n\n    ManagedKafkaList:\n      description: \u003e-\n        A list of ManagedKafka\n      allOf:\n        - $ref: \"#/components/schemas/ListReference\"\n        - type: object\n          example:\n            kind: \"ManagedKafkaList\"\n            items:\n              $ref: '#/components/examples/ManagedKafkaExample'\n          properties:\n            items:\n              type: array\n              items:\n                allOf:\n                  - $ref: \"#/components/schemas/ManagedKafka\"\n\n    DataPlaneClusterUpdateStatusRequest:\n      # TODO are there any fields that should be required?\n      # TODO are there any fields that should be nullable? (this is, a pointer in the resulting generated Go code)\n      description: \"Schema for the request to update a data plane cluster's status\"\n      type: object\n      properties:\n        conditions:\n          description: \"The cluster data plane conditions\"\n          type: array\n          items:\n            type: object\n            properties:\n              type:\n                type: string\n              reason:\n                type: string\n              message:\n                type: string\n              status:\n                type: string\n                \n        strimzi:\n          type: array\n          items:\n            type: object\n            properties:\n              ready:\n                type: boolean\n              version:\n                type: string\n              kafkaVersions:\n                type: array\n                items:\n                  type: string\n              kafkaIbpVersions:\n                type: array\n                items:\n                  type: string\n            required:\n            - ready\n            - version\n    DataPlaneKafkaStatus:\n      description: \"Schema of the status object for a Kafka cluster\"\n      type: object\n      properties:\n        conditions:\n          description: \"The status conditions of a Kafka cluster\"\n          type: array\n          items:\n            type: object\n            properties:\n              type:\n                type: string\n              reason:\n                type: string\n              message:\n                type: string\n              status:\n                type: string\n        capacity:\n          description: \"Capacity information of the data plane cluster\"\n          type: object\n          properties:\n            ingressEgressThroughputPerSec:\n              type: string #example: 4Mi\n              nullable: true\n            totalMaxConnections:\n              type: integer #example: 500\n              nullable: true\n            maxDataRetentionSize:\n              type: string #example: 100Gi\n              nullable: true\n            maxPartitions:\n              type: integer #example: 100\n              nullable: true\n            maxDataRetentionPeriod:\n              type: string #example: P14D\n              nullable: true\n            maxConnectionAttemptsPerSec:\n              type: integer #example: 100\n              nullable: true\n\n        versions:\n          description: \"Version information related to a Kafka cluster\"\n          type: object\n          properties:\n            kafka:\n              type: string\n            strimzi:\n              type: string\n            kafkaIbp:\n              type: string\n        routes:\n          description: \"Routes created for a Kafka cluster\"\n          type: array\n          nullable: true\n          items:\n            type: object\n            properties:\n              name:\n                type: string\n              prefix:\n                type: string\n              router:\n                type: string\n        adminServerURI:\n          type: string\n      example:\n        $ref: '#/components/examples/DataPlaneKafkaStatusRequestExample'\n\n    DataPlaneKafkaStatusUpdateRequest:\n      description: \"Schema for the request to update the statuses of Kafka clusters from data plane\"\n      type: object\n      additionalProperties:\n        $ref: '#/components/schemas/DataPlaneKafkaStatus'\n\n    DataplaneClusterAgentConfig:\n      description: \"Configuration for the data plane cluster agent\"\n      type: object\n      properties:\n        spec:\n          description: \"Data plane cluster agent spec\"\n          type: object\n          properties:\n            observability:\n              description: \"Observability configurations\"\n              type: object\n              properties:\n                accessToken:\n                  type: string\n                  nullable: true\n                channel:\n                  type: string\n                repository:\n                  type: string\n                tag:\n                  type: string\n\n    WatchEvent:\n      required:\n        - type\n      type: object\n      properties:\n        type:\n          type: string\n        error:\n          nullable: true\n          $ref: \"kas-fleet-manager.yaml#/components/schemas/Error\"\n        object:\n          type: object\n          nullable: true\n\n  securitySchemes:\n    Bearer:\n      scheme: bearer\n      bearerFormat: JWT\n      type: http\n\n  examples:\n    ManagedKafkaExample:\n      value:\n        kind: \"ManagedKafka\"\n        metadata:\n          name: \"example-kafka\"\n          namespace: \"example-kafka-1rfpsqbvq1em2u9u0z54ymjcwac\"\n          annotations:\n            bf2.org/id: \"1rfpsqbvq1em2u9u0z54ymjcwac\"\n            bf2.org/placementId: \"\"\n          labels:\n            bf2.org/kafkaInstanceProfileType: \"standard\"\n            bf2.org/kafkaInstanceProfileQuotaConsumed: \"1\"\n        spec:\n          capacity:\n            ingressThroughputPerSec: 4Mi\n            egressThroughputPerSec: 4Mi\n            totalMaxConnections: 500\n            maxDataRetentionSize: 100Gi\n            maxPartitions: 100\n            maxDataRetentionPeriod: P14D\n            maxConnectionAttemptsPerSec: 100\n          oauth:\n            clientId: \"kafka-1rfpsqbvq1em2u9u0z54ymjcwac\"\n            clientSecret: \"example-client-secret\"\n            tokenEndpointUri: \"https://example-token-endpoint-uri.com/token\"\n            jwksEndpointUri: \"https://example-jwks-endpoint-uri.com/certs\"\n            validIssuerEndpointUri: \"https://issuer-endpoint-uri.com\"\n            userNameClaim: \"clientId\"\n            fallbackUserNameClaim: \"preferred_username\"\n            tlsTrustedCertificate: \"\"\n            customClaimCheck: \"\"\n            maximumSessionLifetime: 1898\n          endpoint:\n            bootstrapServerHost: \"example-kafka--rfpsqbvq-em-u-u-z--ymjcwac.kafka.devshift.org\"\n            tls:\n              cert: \"\"\n              key: \"\"\n          versions:\n            kafka: 2.7.0\n            strimzi: 0.21.2\n            kafkaIbp: \"2.7\"\n          deleted: false\n    DataPlaneKafkaStatusRequestExample:\n      value:\n        conditions:\n          - type: Ready\n            reason: KafkaInstanceReady\n            message: installing\n            status: \"False\"\n            lastTransitionTime: \"2018-01-01T00:00:00Z\"\n        capacity:\n          ingressEgressThroughputPerSec: 4Mi\n          totalMaxConnections: 500\n          maxDataRetentionSize: 100Gi\n          maxPartitions: 100\n          maxDataRetentionPeriod: P14D\n          maxConnectionAttemptsPerSec: 100\n        versions:\n          kafka: 2.4.1\n          strimzi: 0.21.2\n          kafkaIbp: \"2.4\"\n    400InvalidIdExample:\n      value:\n        id: \"21\"\n        kind: \"Error\"\n        href: \"/api/kafkas_mgmt/v1/errors/21\"\n        code: \"KAFKAS-MGMT-21\"\n        reason: \"Bad request\"\n        operation_id: \"1lWDGuybIrEnxrAem724gqkkiDv\"\n"
		}
	},
	"Error": "parse: parse spec: parse components: schemas: \"ManagedKafka\": parse schema: allOf: [1]: parse schema: property \"spec\": parse schema: property \"oauth\": parse schema: property \"maximumSessionLifetime\": parse schema: unexpected schema type: \"long\""
}