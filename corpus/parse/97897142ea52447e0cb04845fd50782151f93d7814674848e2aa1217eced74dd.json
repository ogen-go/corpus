{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/android/privacy-sandbox-samples"
		},
		"file": {
			"name": "js-server.json",
			"size": 0,
			"path": "Fledge/FledgeServerSpec/js-server.json",
			"byteSize": 2363,
			"content": "{\n  \"openapi\": \"3.0.0\",\n  \"info\": {\n    \"title\": \"js\",\n    \"version\": \"1.0.0\"\n  },\n  \"servers\": [\n    {\n      \"url\": \"http://{{url}}\"\n    }\n  ],\n  \"paths\": {\n    \"//bidding\": {\n      \"get\": {\n        \"tags\": [\n            \"default\"\n        ],\n        \"summary\": \"/bidding\",\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"text/plain\": {\n                \"schema\": {\n                  \"type\": \"string\"\n                },\n                \"example\": \"/**\\n * Generates a bid of 10 for the shoes CA, and a bid of 5 otherwise\\n */\\nfunction generateBid(ad, auction_signals, per_buyer_signals,\\n  trusted_bidding_signals, contextual_signals, user_signals,\\n  custom_audience_signals) {\\n  var bid = 5;\\n  if (custom_audience_signals.name === \\\"shoes\\\") {\\n    bid = 10;\\n  }\\n  return {'status': 0, 'ad': ad, 'bid': bid };\\n}\\n\\nfunction reportWin(ad_selection_signals, per_buyer_signals, signals_for_buyer,\\n contextual_signals, custom_audience_signals) {\\n  // Add the address of your reporting server here\\n  let reporting_address = 'https://reporting.example.com';\\n  return {'status': 0, 'results': {'reporting_url':\\n         reporting_address + '?ca=' + custom_audience_signals.name} };\\n}\\n\"\n              }\n            }\n          }\n        }\n      }\n    },\n    \"//scoring\": {\n      \"get\": {\n        \"tags\": [\n            \"default\"\n        ],\n        \"summary\": \"/scoring\",\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"text/plain\": {\n                \"schema\": {\n                  \"type\": \"string\"\n                },\n                \"example\": \"/**\\n * Trivial scoring function -- scores each ad with the value of its bid.\\n */\\nfunction scoreAd(ad, bid, auction_config, seller_signals, trusted_scoring_signals,\\n  contextual_signal, user_signal, custom_audience_signal) {\\n  return {'status': 0, 'score': bid };\\n}\\n\\n\\nfunction reportResult(ad_selection_config, render_url, bid, contextual_signals) {\\n  // Add the address of your reporting server here\\n  let reporting_address = 'https://reporting.example.com';\\n  return {'status': 0, 'results': {'signals_for_buyer': '{\\\"signals_for_buyer\\\" : 1}'\\n          , 'reporting_url': reporting_address + '?render_url='\\n            + render_url + '?bid=' + bid } };\\n}\\n\"\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n}"
		}
	},
	"Error": "parse: parse spec: parse operations: paths: //bidding: get: parse path \"//bidding\": path MUST be relative"
}