{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/PaloAltoNetworks/gaia"
		},
		"file": {
			"name": "renderedpolicy.json",
			"size": 0,
			"path": "openapi3_autogen/renderedpolicy.json",
			"byteSize": 7037,
			"content": "{\n  \"openapi\": \"3.0.3\",\n  \"components\": {\n    \"schemas\": {\n      \"renderedpolicy\": {\n        \"description\": \"Retrieve the aggregated policies applied to a particular processing unit.\",\n        \"properties\": {\n          \"certificate\": {\n            \"deprecated\": true,\n            \"description\": \"The certificate associated with this processing unit. It will identify the\\nprocessing unit to any internal or external services.\",\n            \"readOnly\": true,\n            \"type\": \"string\"\n          },\n          \"datapathType\": {\n            \"deprecated\": true,\n            \"description\": \"The datapath type that this processing unit must implement according to\\nthe rendered policy:\\n- `Default`: This policy is not making a decision for the datapath.\\n- `Aporeto`: The enforcer is managing and handling the datapath.\\n- `EnvoyAuthorizer`: The enforcer is serving Envoy-compatible gRPC APIs\\nthat for example can be used by an Envoy proxy to use the Microsegmentation PKI\\nand implement Microsegmentation network policies. NOTE: The enforcer is not\\nowning the datapath in this case. It is merely providing an authorizer API.\",\n            \"enum\": [\n              \"Default\",\n              \"Aporeto\",\n              \"EnvoyAuthorizer\"\n            ],\n            \"readOnly\": true\n          },\n          \"defaultPUIncomingTrafficAction\": {\n            \"default\": \"Reject\",\n            \"description\": \"Describes the default for incoming traffic.\",\n            \"enum\": [\n              \"Allow\",\n              \"Reject\"\n            ]\n          },\n          \"defaultPUOutgoingTrafficAction\": {\n            \"default\": \"Reject\",\n            \"description\": \"Describes the default for outgoing traffic.\",\n            \"enum\": [\n              \"Allow\",\n              \"Reject\"\n            ]\n          },\n          \"dependendServices\": {\n            \"description\": \"The list of services that this processing unit depends on.\",\n            \"items\": {\n              \"$ref\": \"./service#/components/schemas/service\"\n            },\n            \"type\": \"array\"\n          },\n          \"egressPolicies\": {\n            \"additionalProperties\": {\n              \"$ref\": \"#/components/schemas/policyrule\"\n            },\n            \"deprecated\": true,\n            \"description\": \"Lists all the egress policies attached to processing unit.\",\n            \"readOnly\": true,\n            \"type\": \"object\"\n          },\n          \"exposedServices\": {\n            \"description\": \"The list of services that this processing unit is implementing.\",\n            \"items\": {\n              \"$ref\": \"./service#/components/schemas/service\"\n            },\n            \"type\": \"array\"\n          },\n          \"hashedTags\": {\n            \"additionalProperties\": {\n              \"type\": \"string\"\n            },\n            \"description\": \"Contains the list of all tags and their hashed that have been used.\",\n            \"readOnly\": true,\n            \"type\": \"object\"\n          },\n          \"ingressPolicies\": {\n            \"additionalProperties\": {\n              \"$ref\": \"#/components/schemas/policyrule\"\n            },\n            \"deprecated\": true,\n            \"description\": \"Lists all the ingress policies attached to the processing unit.\",\n            \"readOnly\": true,\n            \"type\": \"object\"\n          },\n          \"matchingTags\": {\n            \"deprecated\": true,\n            \"description\": \"Contains the list of tags that matched the policies.\",\n            \"items\": {\n              \"type\": \"string\"\n            },\n            \"readOnly\": true,\n            \"type\": \"array\"\n          },\n          \"processingUnit\": {\n            \"$ref\": \"./processingunit#/components/schemas/processingunit\"\n          },\n          \"processingUnitID\": {\n            \"deprecated\": true,\n            \"description\": \"Identifier of the processing unit.\",\n            \"readOnly\": true,\n            \"type\": \"string\"\n          },\n          \"processingUnitTags\": {\n            \"description\": \"Can be set during a `POST` operation to render a policy on a processing unit\\ntags.\",\n            \"items\": {\n              \"type\": \"string\"\n            },\n            \"type\": \"array\"\n          },\n          \"rendererVersion\": {\n            \"description\": \"Indicates the version of the engine used to render the policies.\",\n            \"readOnly\": true,\n            \"type\": \"integer\"\n          },\n          \"ruleSetPolicies\": {\n            \"description\": \"Lists all the rule set policies attached to processing unit.\",\n            \"items\": {\n              \"$ref\": \"./policyrule#/components/schemas/policyrule\"\n            },\n            \"readOnly\": true,\n            \"type\": \"array\"\n          },\n          \"scopes\": {\n            \"description\": \"The set of scopes granted to this processing unit that has to be\\npresent in HTTP requests.\",\n            \"items\": {\n              \"type\": \"string\"\n            },\n            \"type\": \"array\"\n          },\n          \"wireTags\": {\n            \"description\": \"Contains the list of tags that must go on the wire.\",\n            \"items\": {\n              \"type\": \"string\"\n            },\n            \"readOnly\": true,\n            \"type\": \"array\"\n          }\n        },\n        \"type\": \"object\"\n      }\n    }\n  },\n  \"info\": {\n    \"contact\": {\n      \"email\": \"dev@aporeto.com\",\n      \"name\": \"Aporeto Inc.\",\n      \"url\": \"go.aporeto.io/api\"\n    },\n    \"license\": {\n      \"name\": \"TODO\"\n    },\n    \"termsOfService\": \"https://localhost/TODO\",\n    \"title\": \"renderedpolicy\",\n    \"version\": \"1.0\"\n  },\n  \"paths\": {\n    \"/renderedpolicies\": {\n      \"post\": {\n        \"description\": \"Render a policy for a processing unit.\",\n        \"operationId\": \"create-a-new-renderedpolicy\",\n        \"parameters\": [\n          {\n            \"description\": \"Select the network policy renderer to use.\",\n            \"in\": \"query\",\n            \"name\": \"renderer\",\n            \"schema\": {\n              \"enum\": [\n                \"v1\",\n                \"v2\"\n              ]\n            }\n          },\n          {\n            \"description\": \"If set to true, the entries field of all network rules will be stripped.\",\n            \"in\": \"query\",\n            \"name\": \"stripNetworkEntries\",\n            \"schema\": {\n              \"type\": \"boolean\"\n            }\n          }\n        ],\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/renderedpolicy\"\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/renderedpolicy\"\n                }\n              }\n            },\n            \"description\": \"n/a\"\n          }\n        },\n        \"tags\": [\n          \"core/policy\",\n          \"squall\"\n        ]\n      }\n    }\n  },\n  \"tags\": [\n    {\n      \"description\": \"This tag is for group 'core/policy'\",\n      \"name\": \"core/policy\"\n    },\n    {\n      \"description\": \"This tag is for package 'squall'\",\n      \"name\": \"squall\"\n    }\n  ]\n}\n",
			"canonicalURL": "/github.com/PaloAltoNetworks/gaia@df2a8b26f99710e7a7ddaf87ca4898570dd669f6/-/blob/openapi3_autogen/renderedpolicy.json",
			"externalURLs": [
				{
					"url": "https://github.com/PaloAltoNetworks/gaia/blob/df2a8b26f99710e7a7ddaf87ca4898570dd669f6/openapi3_autogen/renderedpolicy.json",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "parse: parse spec: parse components: schemas: \"renderedpolicy\": parse schema: property \"dependendServices\": parse schema: parse schema: at 43:23: external \"./service\": get: file: local file reference is not allowed"
}