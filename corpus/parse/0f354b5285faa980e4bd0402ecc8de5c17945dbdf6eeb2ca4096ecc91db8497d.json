{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/open-traffic-generator/openapiart"
		},
		"file": {
			"name": "service_b.api.yaml",
			"size": 0,
			"path": "openapiart/goserver/api/service_b.api.yaml",
			"byteSize": 2730,
			"content": "openapi: 3.0.3\n\ninfo:\n  title: Schema for ServiceB\n  version: 0.0.0\n  description: \u003e-\n\npaths:\n\n  /serviceb:\n    get:\n      tags: [ServiceB]\n      operationId: GetAllItems\n      description: return list of some items\n      responses:\n        200:\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: './service_b.yaml#/components/schemas/ServiceB.ItemList'\n        '400':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: './common.yaml#/components/schemas/Common.ResponseError'\n        '500':\n          description: Error500\n          content:\n            application/json:\n              schema:\n                $ref: './common.yaml#/components/schemas/Common.ResponseError'\n\n  /serviceb/{item_id}:\n    get:\n      tags: [ServiceB]\n      operationId: GetSingleItem\n      description: return single item\n      parameters:\n        - in: path\n          name: item_id\n          required: true\n          schema:\n            type: string\n      responses:\n        200:\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: './service_b.yaml#/components/schemas/ServiceB.Item'\n        '400':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: './common.yaml#/components/schemas/Common.ResponseError'\n        '500':\n          description: Error500\n          content:\n            application/json:\n              schema:\n                $ref: './common.yaml#/components/schemas/Common.ResponseError'\n\n  /serviceb/{item_id}/{level_2}:\n    get:\n      tags: [ServiceB]\n      # operationId will be CamelCased, it is not possible to define a private method in an interface\n      operationId: getSingleItemLevel2\n      description: return single item\n      parameters:\n        - in: path\n          name: item_id\n          required: true\n          schema:\n            type: string\n        - in: path\n          name: level_2\n          required: true\n          schema:\n            type: string\n      responses:\n        200:\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: './service_b.yaml#/components/schemas/ServiceB.Item'\n        '400':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: './common.yaml#/components/schemas/Common.ResponseError'\n        '500':\n          description: Error500\n          content:\n            application/json:\n              schema:\n                $ref: './common.yaml#/components/schemas/Common.ResponseError'"
		}
	},
	"Error": "parse: parse spec: paths: /serviceb: get: operation \"GetAllItems\": responses: 500: content: \"application/json\": schema: parse schema: resolve \"./common.yaml#/components/schemas/Common.ResponseError\": find schema: external base \"./common.yaml\" is not supported"
}