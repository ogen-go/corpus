{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/edi3/edi3.github.io"
		},
		"file": {
			"name": "CertificateOfOrigin.yml",
			"size": 0,
			"path": "specs/edi3-regulatory/coo-update-v2/certificates/CertificateOfOrigin.yml",
			"byteSize": 19862,
			"content": "openapi: 3.0.0\ninfo:\n  description: ''\n  title: CertificateOfOrigin\n  version: ''\nservers: []\npaths:\n  /CertificatesOfOrigin:\n    get:\n      tags:\n        - CertificatesOfOrigin\n      description: Get a list of CertificateOfOrigin\n      parameters: []\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: '#/components/schemas/CertificateOfOriginObj'\n                type: array\n    post:\n      tags:\n        - CertificatesOfOrigin\n      description: Create a new CertificateOfOrigin\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/CertificateOfOriginObj'\n        description: ''\n        required: true\n      responses:\n        '201':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CertificateOfOriginObj'\n          description: Created\n  '/CertificatesOfOrigin/{id}':\n    get:\n      tags:\n        - CertificatesOfOrigin\n      description: Get single CertificateOfOrigin by id\n      parameters:\n        - name: id\n          in: path\n          description: missing description\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CertificateOfOriginObj'\n    put:\n      tags:\n        - CertificatesOfOrigin\n      description: Update an existing CertificateOfOrigin\n      parameters:\n        - name: id\n          in: path\n          description: missing description\n          required: true\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/CertificateOfOriginObj'\n        description: ''\n        required: true\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CertificateOfOriginObj'\n  '/CertificatesOfOrigin/{id}/Certification':\n    post:\n      tags:\n        - CertificatesOfOrigin\n      description: Create a new CertificateOfOrigin\n      parameters:\n        - name: id\n          in: path\n          description: missing description\n          required: true\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/DocumentAuthentication'\n        description: ''\n        required: true\n      responses:\n        '201':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DocumentAuthentication'\n          description: Created\ncomponents:\n  schemas:\n    CertificateOfOriginObj:\n      type: object\n      properties:\n        certificateOfOrigin:\n          $ref: '#/components/schemas/CertificateOfOrigin'\n    CertificateOfOrigin:\n      description: ''\n      type: object\n      properties:\n        status:\n          description: \u003e-\n            The status of the certificate of origin - but be one of the allowed\n            state lifecycle values.\n          type: string\n        isPreferential:\n          description: \u003e-\n            indicates whether the certificate is a preferential or\n            non-preferential certificate of origin.\n          type: boolean\n        freeTradeAgreement:\n          description: \u003e-\n            for preferential certificates of origin, the name of the free trade\n            agreement (eg CHAFTA)\n          type: string\n        supplyChainConsignment:\n          allOf:\n            - description: ''\n            - $ref: '#/components/schemas/SupplyChainConsignment'\n      allOf:\n        - $ref: '#/components/schemas/ExchangedDocument'\n        - type: object\n      required:\n        - isPreferential\n        - supplyChainConsignment\n    CrossBorderRegulatoryProcedure:\n      description: \u003e-\n        A set of formal steps to satisfy a cross-border regulation, law or\n        convention.\n      type: object\n      properties:\n        originCriteriaText:\n          description: \u003e-\n            The origin criteria, expressed as text, for this cross-border\n            regulatory procedure.\n          type: string\n    DocumentAuthentication:\n      description: A proof that a document is genuine.\n      type: object\n      properties:\n        signature:\n          description: the multi-hash of the document  that is authenticated\n          type: string\n        actualDateTime:\n          description: \u003e-\n            The actual date, time, date time, or other date time value of this\n            document authentication.\n          type: string\n          format: date-time\n        statement:\n          description: 'The statement, expressed as text, for this document authentication.'\n          type: string\n    ExchangedDocument:\n      description: \u003e-\n        A collection of data for a piece of written, printed or electronic\n        matter that is exchanged between two or more parties.\n      type: object\n      properties:\n        iD:\n          description: The unique identifier of this exchanged document.\n          type: string\n          format: uri\n        issueDateTime:\n          description: \u003e-\n            The date, time, date time or other date time value for the issuance\n            of this exchanged document.\n          type: string\n          format: date-time\n        name:\n          description: 'A name, expressed as text, of this exchanged document.'\n          type: string\n        attachedFile:\n          allOf:\n            - description: A binary file attached to this exchanged document.\n            - $ref: '#/components/schemas/SpecifiedBinaryFile'\n        firstSignatoryAuthentication:\n          allOf:\n            - description: \u003e-\n                The first or primary signature that authenticates this exchanged\n                document.\n            - $ref: '#/components/schemas/DocumentAuthentication'\n        issueLocation:\n          allOf:\n            - description: The location where this exchanged document has been issued.\n            - $ref: '#/components/schemas/LogisticsLocation'\n        issuer:\n          allOf:\n            - description: The party that issues this exchanged document.\n            - $ref: '#/components/schemas/TradeParty'\n        secondSignatoryAuthentication:\n          allOf:\n            - description: \u003e-\n                The second signature, also known as the first counter signature,\n                that has been authenticated on this exchanged document\n                indicating where appropriate the authentication party.\n            - $ref: '#/components/schemas/DocumentAuthentication'\n      required:\n        - iD\n    LogisticsLocation:\n      description: A logistics related physical location or place.\n      type: object\n      properties:\n        iD:\n          description: \u003e-\n            A unique identifier for this logistics related location, such as a\n            United Nations Location Code (UNLOCODE) or GS1 Global Location\n            Number (GLN).\n          type: string\n          format: uri\n        name:\n          description: 'A name, expressed as text, of this logistics related location.'\n          type: string\n    LogisticsPackage:\n      description: \u003e-\n        A self-contained wrapping or container within which goods can be\n        contained for logistics purposes, such as a box or a barrel which can be\n        filled, partially filled or empty.\n      type: object\n      properties:\n        iD:\n          description: The unique identifier for this logistics package.\n          type: string\n          format: uri\n        grossVolume:\n          description: The measure of the gross volume of this logistics package.\n          type: string\n        grossWeight:\n          description: \u003e-\n            The measure of the gross weight (mass) of this logistics package and\n            its contents.\n          type: string\n    LogisticsTransportMeans:\n      description: \u003e-\n        The devices used to convey goods or other objects from place to place\n        during logistics cargo movements.\n      type: object\n      properties:\n        iD:\n          description: \u003e-\n            An identifier of this logistics means of transport, such as the\n            International Maritime Organization number of a vessel.\n          type: string\n          format: uri\n        name:\n          description: 'The name, expressed as text, of this logistics means of transport.'\n          type: string\n    LogisticsTransportMovement:\n      description: \u003e-\n        The conveyance (physical carriage) of goods or other objects used for\n        logistics transport purposes.\n      type: object\n      properties:\n        iD:\n          description: \u003e-\n            The unique identifier for this logistics transport movement, such as\n            a voyage number, flight number, or trip number.\n          type: string\n          format: uri\n        information:\n          description: \u003e-\n            Information, expressed as text, for this logistics transport\n            movement.\n          type: string\n        departureEvent:\n          allOf:\n            - description: A departure event during this logistics transport movement.\n            - $ref: '#/components/schemas/TransportEvent'\n        usedTransportMeans:\n          allOf:\n            - description: \u003e-\n                The means of transport used for this logistics transport\n                movement.\n            - $ref: '#/components/schemas/LogisticsTransportMeans'\n    ProductClassification:\n      description: \u003e-\n        A systematic arrangement of products in classes or categories according\n        to established criteria.\n      type: object\n      properties:\n        classCode:\n          description: The code specifying the class for this product classification.\n          type: string\n        className:\n          description: 'A class name, expressed as text, for this product classification.'\n          type: string\n    ReferencedDocument:\n      description: 'Written, printed or electronic matter that is referenced.'\n      type: object\n      properties:\n        iD:\n          description: A unique identifier for this referenced document.\n          type: string\n          format: uri\n        formattedIssueDateTime:\n          description: \u003e-\n            The formatted date or date time for the issuance of this referenced\n            document.\n          type: string\n          format: date-time\n        attachedBinaryFile:\n          allOf:\n            - $ref: '#/components/schemas/SpecifiedBinaryFileIds'\n            - type: object\n    SpecifiedBinaryFileIds:\n      type: object\n      properties:\n        uRI:\n          description: \u003e-\n            The unique Uniform Resource Identifier (URI) for this specified\n            binary file.\n          type: string\n          format: uri\n      required:\n        - uRI\n    SpecifiedBinaryFile:\n      description: A specified computer file or program stored in a binary format.\n      type: object\n      properties:\n        uRI:\n          description: \u003e-\n            The unique Uniform Resource Identifier (URI) for this specified\n            binary file.\n          type: string\n          format: uri\n        encodingCode:\n          description: The code specifying the encoding of this specified binary file.\n          type: string\n        mIMECode:\n          description: \u003e-\n            The code specifying the Multipurpose Internet Mail Extensions (MIME)\n            type for this specified binary file.\n          type: string\n        size:\n          description: The measure of the size of this specified binary file.\n          type: string\n      required:\n        - uRI\n    SupplyChainConsignment:\n      description: \u003e-\n        A separately identifiable collection of goods items to be transported or\n        available to be transported from one consignor to one consignee in a\n        supply chain via one or more modes of transport where each consignment\n        is the subject of one single transport contract.\n      type: object\n      properties:\n        iD:\n          description: A unique identifier for this supply chain consignment.\n          type: string\n          format: uri\n        information:\n          description: 'Information, expressed as text, for this supply chain consignment.'\n          type: string\n        exportCountry:\n          allOf:\n            - description: The export country for this supply chain consignment.\n            - $ref: '#/components/schemas/TradeCountry'\n        exporter:\n          allOf:\n            - description: The party who exports this supply chain consignment.\n            - $ref: '#/components/schemas/TradeParty'\n        importCountry:\n          allOf:\n            - description: The import country for this supply chain consignment.\n            - $ref: '#/components/schemas/TradeCountry'\n        importer:\n          allOf:\n            - description: The party who imports this supply chain consignment.\n            - $ref: '#/components/schemas/TradeParty'\n        includedConsignmentItems:\n          items:\n            $ref: '#/components/schemas/SupplyChainConsignmentItem'\n          type: array\n          description: A consignment item included in this supply chain consignment.\n        loadingBaseportLocation:\n          allOf:\n            - description: \u003e-\n                The baseport location at which this supply chain consignment is\n                to be loaded on a means of transport according to the transport\n                contract.\n            - $ref: '#/components/schemas/LogisticsLocation'\n        mainCarriageTransportMovement:\n          allOf:\n            - description: \u003e-\n                A main carriage logistics transport movement for this supply\n                chain consignment.\n            - $ref: '#/components/schemas/LogisticsTransportMovement'\n        transportPackages:\n          items:\n            $ref: '#/components/schemas/LogisticsPackage'\n          type: array\n          description: Transport packages for this supply chain consignment.\n        unloadingBaseportLocation:\n          allOf:\n            - description: \u003e-\n                The baseport location at which this supply chain consignment is\n                to be unloaded from a means of transport according to the\n                transport contract.\n            - $ref: '#/components/schemas/LogisticsLocation'\n    SupplyChainConsignmentItem:\n      description: \u003e-\n        An item within a supply chain consignment of goods separately identified\n        for transport and customs purposes.\n      type: object\n      properties:\n        iD:\n          description: A unique identifier for this supply chain consignment item.\n          type: string\n          format: uri\n        information:\n          description: \u003e-\n            Information, expressed as text, for this supply chain consignment\n            item.\n          type: string\n        crossBorderRegulatoryProcedure:\n          allOf:\n            - description: \u003e-\n                A cross-border regulatory procedure applicable to this supply\n                chain consignment item.\n            - $ref: '#/components/schemas/CrossBorderRegulatoryProcedure'\n        manufacturer:\n          allOf:\n            - description: The party which manufactured this supply chain consignment item.\n            - $ref: '#/components/schemas/TradeParty'\n        tradeLineItems:\n          items:\n            $ref: '#/components/schemas/SupplyChainTradeLineItem'\n          type: array\n          description: A trade line item included in this supply chain consignment item.\n    SupplyChainTradeLineItem:\n      description: \u003e-\n        A collection of information specific to an item being used or reported\n        on for supply chain trade purposes.\n      type: object\n      properties:\n        sequenceNumber:\n          description: A sequence number for this supply chain trade line item.\n          type: number\n        invoiceReference:\n          allOf:\n            - description: A document referenced for this supply chain trade line item.\n            - $ref: '#/components/schemas/ReferencedDocument'\n        tradeProduct:\n          allOf:\n            - description: The product specified for this supply chain trade line item.\n            - $ref: '#/components/schemas/TradeProduct'\n    TradeAddress:\n      description: \u003e-\n        The location at which a particular trade related organization or person\n        may be found or reached.\n      type: object\n      properties:\n        line1:\n          description: missing description\n          type: string\n        line2:\n          description: missing description\n          type: string\n        cityName:\n          description: \u003e-\n            The name, expressed as text, of the city, town or village of this\n            trade address.\n          type: string\n        postcode:\n          description: A code specifying the postcode of this trade address.\n          type: string\n        countrySubDivisionName:\n          description: \u003e-\n            A name, expressed as text, of the sub-division of a country for this\n            trade address.\n          type: string\n        countryCode:\n          allOf:\n            - description: The unique identifier of a country for this trade address.\n            - $ref: '#/components/schemas/ISO3166Code'\n    ISO3166Code:\n      $ref: \u003e-\n        https://edi3.org/shared/openapi/ISO/codes.yml#/components/schemas/ISO3166_Code\n    TradeCountry:\n      description: \u003e-\n        The area of land that belongs to a nation together with its properties,\n        such as population, political organization, etc., used or referenced for\n        trade purposes.\n      type: object\n      properties:\n        code:\n          allOf:\n            - description: A unique identifier for this trade country.\n            - $ref: '#/components/schemas/ISO3166Code'\n        name:\n          description: 'A name, expressed as text, of this trade country.'\n          type: string\n    TradeParty:\n      description: \u003e-\n        An individual, a group, or a body having a role in a trade business\n        function.\n      type: object\n      properties:\n        iD:\n          description: A unique identifier of this trade party.\n          type: string\n          format: uri\n        name:\n          description: 'The name, expressed as text, for this trade party.'\n          type: string\n        postalAddress:\n          allOf:\n            - description: The postal address for this trade party.\n            - $ref: '#/components/schemas/TradeAddress'\n    TradeProduct:\n      description: \u003e-\n        Any tangible output or service produced by human or mechanical effort or\n        by a natural process for trade purposes.\n      type: object\n      properties:\n        iD:\n          description: A unique identifier for this trade product.\n          type: string\n          format: uri\n        description:\n          description: A textual description for this trade product.\n          type: string\n        harmonisedTariffCode:\n          allOf:\n            - description: A product classification designated for this trade product.\n            - $ref: '#/components/schemas/ProductClassification'\n        originCountry:\n          allOf:\n            - description: A country of origin for this trade product.\n            - $ref: '#/components/schemas/TradeCountry'\n    TransportEvent:\n      description: A significant occurrence or happening during transport.\n      type: object\n      properties:\n        departureDateTime:\n          description: \u003e-\n            A departure date, time, date time, or other date time value related\n            to this transport event.\n          type: string\n          format: date-time\n"
		}
	},
	"Error": "parse: parse spec: paths: /CertificatesOfOrigin: get: operation \"\": responses: 200: content: \"application/json\": schema: parse schema: item: parse schema: reference \"#/components/schemas/CertificateOfOriginObj\": parse schema: certificateOfOrigin: parse schema: reference \"#/components/schemas/CertificateOfOrigin\": parse schema: allOf: [0]: parse schema: reference \"#/components/schemas/ExchangedDocument\": parse schema: issuer: parse schema: allOf: [1]: parse schema: reference \"#/components/schemas/TradeParty\": parse schema: postalAddress: parse schema: allOf: [1]: parse schema: reference \"#/components/schemas/TradeAddress\": parse schema: countryCode: parse schema: allOf: [1]: parse schema: reference \"#/components/schemas/ISO3166Code\": parse schema: reference \"https://edi3.org/shared/openapi/ISO/codes.yml#/components/schemas/ISO3166_Code\": resolve reference \"https://edi3.org/shared/openapi/ISO/codes.yml#/components/schemas/ISO3166_Code\": invalid schema reference \"https://edi3.org/shared/openapi/ISO/codes.yml#/components/schemas/ISO3166_Code\""
}