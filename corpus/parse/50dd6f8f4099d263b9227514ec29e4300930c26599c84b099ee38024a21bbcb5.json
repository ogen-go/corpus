{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/dcsaorg/DCSA-OpenAPI"
		},
		"file": {
			"name": "ovs.yaml",
			"size": 0,
			"path": "ovs/v2/ovs.yaml",
			"byteSize": 10646,
			"content": "openapi: 3.0.3\ninfo:\n  version: 2.0.0\n  title: 'DCSA OpenAPI specification for Operational Vessel Schedules'\n  description: |\n    This API also supports JIT (Just in Time Portcalls). JIT is used for negotiating timestamps between vessel and port/terminal.\n    \n    API specification issued by DCSA.org\n\n    For explanation to specific values or objects please refer to the \u003ca href='https://dcsa.org/wp-content/uploads/2021/07/202108_DCSA_P1_Information-Model-v3.2_Final.pdf'\u003eInformation Model v3.2\u003c/a\u003e\n\n    It is possible to use this API as a standalone API. In order to do so it is necessary to use the poll-endPoint\n    - /v2/events\n\n    in order to poll event information.\n\n    It is recomended to implement the \u003ca href='https://app.swaggerhub.com/apis/dcsaorg/OVS_EVENT_HUB'\u003eDCSA Operational Vessel Schedules (OVS) Event Hub\u003c/a\u003e in order to use the push model. Here events are pushed as they occur.\n    \n  license:\n    name: Apache 2.0\n    url: http://www.apache.org/licenses/LICENSE-2.0.html\n  contact:\n    name: Digital Container Shipping Association (DCSA)\n    url: https://dcsa.org\n    email: info@dcsa.org\ntags:\n  - name: Operational Vessel Schedules\n    description: Operational Vessel Schedules operations\n  - name: Events\npaths:\n  /v2/timestamps:\n    post:\n      parameters:\n        - $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/1.0.1#/components/parameters/Api-Version-Major'\n      tags:\n        - Operational Vessel Schedules\n      summary: Post a new timestamp\n      requestBody:\n        description: The new Timestamp\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: 'https://api.swaggerhub.com/domains/dcsaorg/OVS_DOMAIN/1.0.0#/components/schemas/timestamp'\n      responses:\n        '204':\n          description: Timestamp successfully posted\n          headers:\n            API-Version:\n              $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/1.0.1#/components/headers/API-Version'\n        default:\n          description: Unexpected error\n          headers:\n            API-Version:\n              $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/1.0.1#/components/headers/API-Version'\n          content:\n            application/json:\n              schema:\n                $ref: 'https://api.swaggerhub.com/domains/dcsaorg/ERROR_DOMAIN/1.0.0#/components/schemas/error'\n\n\n  /v2/events:\n    get:\n      tags:\n        - Events\n      summary: Get Operations and Transport events\n      description: |\n        Retrieves Operations and Transport events. The default sort order is by eventCreatedDateTime in descending order (DESC)\n        \n        \u003cb\u003eNB\u003c/b\u003e\u0026#58; It is possible to combine queryParameters. When combining queryParameters be aware that it is also possible to make combinations that are mutual contradicting.\n        \n        Example\u0026#58; \u003ci\u003eoperationsEventTypeCode=CMPL and transportEventTypeCode=ARRI\u003c/i\u003e\n        \n        Since there is no event that can be an OperationsEvent \u003cu\u003eand\u003c/u\u003e a TransportEvent at the same time \u003cb\u003ethis will return an empty list\u003cb\u003e!\n      parameters:\n        - in: query\n          name: eventType\n          description: |\n            The type of event(s) to filter by. Possible values are\n            \n            - TRANSPORT (Transport events)\n            - OPERATIONS (Operations events)\n            \n            It is possible to select multiple values by comma (,) separating them. For multiple values the OR-operator is used. For example eventType=TRANSPORT,OPERATIONS matches both Transport- and Operations-events.\n            \n            Default value is all event types.\n          required: false\n          explode: false\n          style: form\n          example: TRANSPORT,OPERATIONS\n          schema:\n            default: TRANSPORT,OPERATIONS\n            type: array\n            items:\n              type: string\n              enum:\n                - TRANSPORT\n                - OPERATIONS\n\n        # Chunk with Transport related event parameters\n        - $ref: 'https://api.swaggerhub.com/domains/dcsaorg/EVENT_DOMAIN/1.0.1#/components/parameters/transportEventTypeCode'\n        - $ref: 'https://api.swaggerhub.com/domains/dcsaorg/EVENT_DOMAIN/1.0.1#/components/parameters/transportCallID'\n        - $ref: 'https://api.swaggerhub.com/domains/dcsaorg/EVENT_DOMAIN/1.0.1#/components/parameters/vesselIMONumber'\n        - $ref: 'https://api.swaggerhub.com/domains/dcsaorg/EVENT_DOMAIN/1.0.1#/components/parameters/carrierVoyageNumber'\n        - $ref: 'https://api.swaggerhub.com/domains/dcsaorg/EVENT_DOMAIN/1.0.1#/components/parameters/carrierServiceCode'\n\n        # Chunk with Operations related event parameters\n        - $ref: 'https://api.swaggerhub.com/domains/dcsaorg/EVENT_DOMAIN/1.0.1#/components/parameters/operationsEventTypeCode'\n\n        # Chunk with base event parameters\n        - $ref: 'https://api.swaggerhub.com/domains/dcsaorg/EVENT_DOMAIN/1.0.1#/components/parameters/eventCreatedDateTime'\n\n        # Chunk with Global related event parameters\n        - $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/1.0.1#/components/parameters/limit'\n        - $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/1.0.1#/components/parameters/cursor'\n        - $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/1.0.1#/components/parameters/Api-Version-Major'\n      responses:\n        '200':\n          description: Successful operation\n          headers:\n            API-Version:\n              $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/1.0.1#/components/headers/API-Version'\n            Current-Page:\n              $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/1.0.1#/components/headers/Current-Page'\n            Next-Page:\n              $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/1.0.1#/components/headers/Next-Page'\n            Prev-Page:\n              $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/1.0.1#/components/headers/Prev-Page'\n            Last-Page:\n              $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/1.0.1#/components/headers/Last-Page'\n            First-Page:\n              $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/1.0.1#/components/headers/First-Page'\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  anyOf:\n                    - $ref: 'https://api.swaggerhub.com/domains/dcsaorg/EVENT_DOMAIN/1.0.1#/components/schemas/operationsEvent'\n                    - $ref: '#/components/schemas/transportEvent'\n        default:\n          description: Unexpected error\n          headers:\n            API-Version:\n              $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/1.0.1#/components/headers/API-Version'\n          content:\n            application/json:\n              schema:\n                $ref: 'https://api.swaggerhub.com/domains/dcsaorg/ERROR_DOMAIN/1.0.0#/components/schemas/error'\n\n\ncomponents:\n  parameters: \n                  \n    ##############\n    # Query params\n    ##############\n    carrierServiceCode:\n      in: query\n      name: carrierServiceCode\n      description: The code of the service for which information should be sent. This is the code used by the vessel operator for that service and should be part of a VSA agreement between the subscribing vessel operator and the vessel operator\n      required: false\n      schema:\n        $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/1.0.1#/components/schemas/carrierServiceCode'\n    vesselIMONumber:\n      in: query\n      name: vesselIMONumber\n      description: The identifier of the vessel for which schedule information is sent. If not provided, the schedule is sent for all vessels.\n      required: false\n      schema:\n        $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/1.0.1#/components/schemas/vesselIMONumber'\n    carrierVoyageNumber:  \n      in: query\n      name: carrierVoyageNumber\n      description: The vessel operator assigned voyage number for the respective voyage.\n      required: false\n      schema:\n        $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/1.0.1#/components/schemas/carrierVoyageNumber'\n    UNLocationCode:  \n      in: query\n      name: UNLocationCode\n      description: The UN location code identifies a location in the sense of a city/a town/a village, being the smaller administrative area existing as defined by the competent national authority in each country.\n      required: false\n      schema:\n        $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/1.0.1#/components/schemas/UNLocationCode'\n    startDate:  \n      in: query\n      name: startDate\n      description: The start date of the period for which schedule information is requested. The value is populated in ISO 8601 Date format. If not provided, the current date is used by default.\n      required: false\n      schema:\n        $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/1.0.1#/components/schemas/startDate'\n    dateRange:  \n      in: query\n      name: dateRange\n      description: The time period for which schedule information is sent. The duration is populated in ISO 8601 Duration format.\n      required: false\n      schema:\n        $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/1.0.1#/components/schemas/dateRange'\n  schemas:\n    # Modify the example of the TransportEvent\n    transportEvent:\n      type: object\n      allOf:\n        - $ref: 'https://api.swaggerhub.com/domains/dcsaorg/EVENT_DOMAIN/1.0.1#/components/schemas/transportEvent'\n        - example: {\n          \"eventID\": \"84db923d-2a19-4eb0-beb5-446c1ec57d34\",\n          \"eventCreatedDateTime\": \"2021-01-09T14:12:56+01:00\",\n          \"eventType\": \"TRANSPORT\",\n          \"eventClassifierCode\": \"ACT\",\n          \"eventDateTime\": \"2019-11-12T07:41:00+08:30\",\n          \"transportEventTypeCode\": \"ARRI\",\n          \"delayReasonCode\": \"WEA\",\n          \"changeRemark\": \"Bad weather\",\n          \"transportCall\": {\n            \"transportCallID\": \"123e4567-e89b-12d3-a456-426614174000\",\n            \"carrierServiceCode\": \"FE1\",\n            \"carrierVoyageNumber\": \"2103S\",\n            \"UNLocationCode\": \"USNYC\",\n            \"facilityCode\": \"ADT\",\n            \"facilityCodeListProvider\": \"SMDG\",\n            \"facilityTypeCode\": \"POTE\",\n            \"otherFacility\": \"Depot location or address\",\n            \"modeOfTransport\": \"VESSEL\",\n            \"vessel\": {\n              \"vesselIMONumber\": 9321483,\n              \"vesselName\": \"King of the Seas\"\n            }\n          }\n        }",
			"canonicalURL": "/github.com/dcsaorg/DCSA-OpenAPI@18caeb803330d26b2c25aba119a677d79647af54/-/blob/ovs/v2/ovs.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/dcsaorg/DCSA-OpenAPI/blob/18caeb803330d26b2c25aba119a677d79647af54/ovs/v2/ovs.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "parse: parse spec: parse components: parameters: \"UNLocationCode\": schema: parse schema: resolve \"https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/1.0.1#/components/schemas/UNLocationCode\": external \"https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/1.0.1\": https: do: Get \"https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/1.0.1\": host \"api.swaggerhub.com\" is not allowed"
}