{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/cloudtrust/keycloak-bridge"
		},
		"file": {
			"name": "swagger_api_validation.yml",
			"size": 0,
			"path": "api/validation/swagger_api_validation.yml",
			"byteSize": 4975,
			"content": "openapi: 3.0.1\ninfo:\n  title: Swagger Cloudtrust Validation Check (KYC)\n  description: 'Internal API Validation Check for Cloudtrust.'\n  version: 1.0.0\nservers:\n- url: http://localhost:8888\ntags:\n- name: UserData\n  description: User data information\n- name: Check\n  description: Validation checks\npaths:\n  /validation/realms/{realm}/users/{userID}:\n    get:\n      tags:\n      - Check\n      summary: Get user data information\n      parameters:\n      - name: realm\n        in: path\n        description: Realm name (not id!)\n        required: true\n        schema:\n          type: string\n      - name: userID\n        in: path\n        description: userID to retrieve\n        required: true\n        schema:\n          type: string\n      responses:\n        200:\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/User'\n    put:\n      tags:\n      - UserData\n      summary: Updates user data information\n      parameters:\n      - name: userID\n        in: path\n        description: userID of user to update\n        required: true\n        schema:\n          type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/User'\n      responses:\n        200:\n          description: successful operation\n  /validation/realms/{realm}/users/{userID}/checks:\n    post:\n      tags:\n        - Check\n      summary: Create validation check\n      parameters:\n      - name: realm\n        in: path\n        description: Realm name (not id!)\n        required: true\n        schema:\n          type: string\n      - name: userID\n        in: path\n        description: userID of user checked\n        required: true\n        schema:\n          type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Check'\n      responses:\n        201:\n          description: successful operation\n  /validation/realms/{realm}/users/{userID}/checks/pending:\n    post:\n      tags:\n        - Check\n      summary: Create a pending validation check\n      parameters:\n      - name: realm\n        in: path\n        description: Realm name (not id!)\n        required: true\n        schema:\n          type: string\n      - name: userID\n        in: path\n        description: userID of user checked\n        required: true\n        schema:\n          type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/PendingChecks'\n      responses:\n        201:\n          description: successful operation\n  /validation/realms/{realm}/users/{userID}/checks/pending/{pendingCheck}:\n    delete:\n      tags:\n        - Check\n      summary: Delete a pending validation check\n      parameters:\n      - name: realm\n        in: path\n        description: Realm name (not id!)\n        required: true\n        schema:\n          type: string\n      - name: userID\n        in: path\n        description: userID of user checked\n        required: true\n        schema:\n          type: string\n      - name: pendingCheck\n        in: path\n        description: nature of the pending check to be removed\n        required: true\n        schema:\n          type: string\n          enum: [IDNOW_CHECK]\n      responses:\n        201:\n          description: successful operation\ncomponents:\n  schemas:\n    User:\n      type: object\n      required: [gender, firstName, lastName, emailAddress, phoneNumber]\n      properties:\n        id:\n          type: string\n        gender:\n          type: string\n        firstName:\n          type: string\n        lastName:\n          type: string\n        email:\n          type: string\n        phoneNumber:\n          type: string\n        birthDate:\n          type: string\n          description: format is DD.MM.YYYY\n        birthLocation:\n          type: string\n        nationality:\n          type: string\n          description: ISO 3166 Alpha-2 country code\n        idDocumentType:\n          type: string\n          enum: [ID_CARD, PASSPORT, RESIDENCE_PERMIT]\n        idDocumentNumber:\n          type: string\n        idDocumentExpiration:\n          type: string\n        idDocumentCountry:\n          type: string\n          description: ISO 3166 Alpha-2 country code\n    Check:\n      type: object\n      properties:\n        userId:\n          type: string\n        operator:\n          type: string\n        datetime:\n          type: string\n          format: date-time\n        status:\n          type: string\n        proofData:\n          type: string\n          format: byte\n        proofType:\n          type: string\n        type:\n          type: string\n        nature:\n          type: string\n    PendingChecks:\n      type: object\n      properties:\n        nature:\n          type: string\n          enum: [IDNOW_CHECK]\n  securitySchemes:\n    basicAuth:\n      type: http\n      scheme: basic\nsecurity:\n  - basicAuth: []",
			"canonicalURL": "/github.com/cloudtrust/keycloak-bridge@9d9d16f3faebda3347ef0c7270e8b79f60df3006/-/blob/api/validation/swagger_api_validation.yml",
			"externalURLs": [
				{
					"url": "https://github.com/cloudtrust/keycloak-bridge/blob/9d9d16f3faebda3347ef0c7270e8b79f60df3006/api/validation/swagger_api_validation.yml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "parse: parse spec: parse operations: path \"/validation/realms/{realm}/users/{userID}\": put: at 1:1853: parse path \"/validation/realms/{realm}/users/{userID}\": path parameter not specified: \"realm\""
}