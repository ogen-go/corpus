{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/stargate/docs"
		},
		"file": {
			"name": "StargateRESTv1.yaml",
			"size": 0,
			"path": "api/StargateRESTv1.yaml",
			"byteSize": 25539,
			"content": "openapi: 3.0.1\ninfo:\n  title: Stargate REST API reference\n  description: \"The Stargate REST API provides CRUD operations on table data managed by Stargate.\"\n  license:\n    name: Apache 2.0\n    url: http://www.apache.org/licenses/LICENSE-2.0.html\n  version: 1.0.0\nservers:\n  - url: https://localhost:8082\n    description: \"Replace the port if necessary.\"\nexternalDocs:\n  description: Reference Document\n  url: http://shorturl.at/hnqIQ\ntags:\n  - name: Auth\n    description: \"The Auth API allows you to create an authorization token to connect to your database\"\n  - name: Schemas\n    description: \"The Schema API allows you to interact with keyspaces and tables in your database\"\n  - name: Data\n    description: \"The Data API allows you to add, update, and delete rows in your database\"\npaths:\n  /v1/auth:\n    servers:\n      - url: https://localhost:8081\n    post:\n      tags:\n        - Auth\n      summary: Create an authorization token\n      description: \"Create an authorization token used for all queries.\"\n      operationId: createToken\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/Credentials\"\n        required: true\n      responses:\n        201:\n          description: Created\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AuthTokenResponse'\n        400:\n          $ref: \"#/components/responses/400\"\n        401:\n          $ref: \"#/components/responses/401\"\n        500:\n          $ref: \"#/components/responses/500\"\n  /v1/keyspaces:\n    get:\n      tags:\n        - Schemas\n      summary: Get all keyspaces\n      description: \"Retrieve all available keyspaces in the specific database.\"\n      operationId: getKeyspaces\n      parameters:\n        - $ref: \"#/components/parameters/X-Cassandra-Token\"\n        - $ref: \"#/components/parameters/raw\"\n      responses:\n        200:\n          description: \"\"\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  data:\n                    type: array\n                    items:\n                      $ref: \"#/components/schemas/Keyspace\"\n        401:\n          $ref: \"#/components/responses/401\"\n        500:\n          $ref: \"#/components/responses/500\"\n    post:\n      tags:\n        - Schemas\n      summary: Create a keyspace\n      operationId: createKeyspace\n      parameters:\n        - $ref: \"#/components/parameters/X-Cassandra-Token\"\n      requestBody:\n        description: \"\"\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/Keyspace\"\n      responses:\n        201:\n          description: resource created\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  name:\n                    type: string\n        400:\n          $ref: \"#/components/responses/400\"\n        401:\n          $ref: \"#/components/responses/401\"\n        409:\n          $ref: \"#/components/responses/409\"\n        500:\n          $ref: \"#/components/responses/500\"\n  /v1/keyspaces/{keyspace-id}/tables:\n    post:\n      tags:\n        - Schemas\n      summary: Create a table\n      operationId: createTable\n      parameters:\n        - $ref: \"#/components/parameters/X-Cassandra-Token\"\n        - $ref: \"#/components/parameters/keyspace-id\"\n      requestBody:\n        description: \"\"\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/TableAdd\"\n      responses:\n        201:\n          description: resource created\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  name:\n                    type: string\n        400:\n          $ref: \"#/components/responses/400\"\n        401:\n          $ref: \"#/components/responses/401\"\n        409:\n          $ref: \"#/components/responses/409\"\n        500:\n          $ref: \"#/components/responses/500\"\n    get:\n      tags:\n        - Schemas\n      summary: Get tables\n      operationId: getTables\n      parameters:\n        - $ref: \"#/components/parameters/X-Cassandra-Token\"\n        - $ref: \"#/components/parameters/keyspace-id\"\n        - $ref: \"#/components/parameters/raw\"\n      responses:\n        200:\n          description: \"\"\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  data:\n                    type: array\n                    items:\n                      $ref: \"#/components/schemas/Table\"\n        401:\n          $ref: \"#/components/responses/401\"\n        404:\n          $ref: \"#/components/responses/404\"\n        500:\n          $ref: \"#/components/responses/500\"\n  /v1/keyspaces/{keyspace-id}/tables/{table-id}:\n    put:\n      tags:\n        - Schemas\n      summary: Create a table by {table-id}\n      operationId: createTableById\n      parameters:\n        - $ref: \"#/components/parameters/X-Cassandra-Token\"\n        - $ref: \"#/components/parameters/keyspace-id\"\n        - $ref: \"#/components/parameters/table-id\"\n      requestBody:\n        description: \"\"\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/TableAdd\"\n      responses:\n        201:\n          description: resource created\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  name:\n                    type: string\n        400:\n          $ref: \"#/components/responses/400\"\n        401:\n          $ref: \"#/components/responses/401\"\n        409:\n          $ref: \"#/components/responses/409\"\n        500:\n          $ref: \"#/components/responses/500\"\n    get:\n      tags:\n        - Schemas\n      summary: Get tables by {table-id}\n      operationId: getTablesByID\n      parameters:\n        - $ref: \"#/components/parameters/X-Cassandra-Token\"\n        - $ref: \"#/components/parameters/keyspace-id\"\n        - $ref: \"#/components/parameters/table-id\"\n        - $ref: \"#/components/parameters/raw\"\n      responses:\n        200:\n          description: \"\"\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  data:\n                    type: array\n                    items:\n                      $ref: \"#/components/schemas/Table\"\n        401:\n          $ref: \"#/components/responses/401\"\n        404:\n          $ref: \"#/components/responses/404\"\n        500:\n          $ref: \"#/components/responses/500\"\n    delete:\n      tags:\n        - Schemas\n      summary: Delete a table by {table-id}\n      operationId: deleteTable\n      parameters:\n        - $ref: \"#/components/parameters/X-Cassandra-Token\"\n        - $ref: \"#/components/parameters/keyspace-id\"\n        - $ref: \"#/components/parameters/table-id\"\n      responses:\n        204:\n          description: No Content\n        401:\n          $ref: \"#/components/responses/401\"\n        500:\n          $ref: \"#/components/responses/500\"\n  /v1/keyspaces/{keyspace-id}/tables/{table-id}/columns}:\n    post:\n      tags:\n        - Schemas\n      summary: Create a column\n      operationId: createColumn\n      parameters:\n        - $ref: \"#/components/parameters/X-Cassandra-Token\"\n        - $ref: \"#/components/parameters/keyspace-id\"\n        - $ref: \"#/components/parameters/table-id\"\n      requestBody:\n        description: \"\"\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/ColumnDefinition\"\n      responses:\n        201:\n          description: resource created\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  name:\n                    type: string\n        400:\n          $ref: \"#/components/responses/400\"\n        401:\n          $ref: \"#/components/responses/401\"\n        409:\n          $ref: \"#/components/responses/409\"\n        500:\n          $ref: \"#/components/responses/500\"\n    get:\n      tags:\n        - Schemas\n      summary: Get all columns\n      operationId: getColumns\n      parameters:\n        - $ref: \"#/components/parameters/X-Cassandra-Token\"\n        - $ref: \"#/components/parameters/keyspace-id\"\n        - $ref: \"#/components/parameters/table-id\"\n        - $ref: \"#/components/parameters/raw\"\n      responses:\n        200:\n          description: \"\"\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  data:\n                    type: array\n                    items:\n                      $ref: \"#/components/schemas/ColumnDefinition\"\n        401:\n          $ref: \"#/components/responses/401\"\n        404:\n          $ref: \"#/components/responses/404\"\n        500:\n          $ref: \"#/components/responses/500\"\n  /v1/keyspaces/{keyspace-id}/tables/{table-id}/columns/{column-id}:\n    get:\n      tags:\n        - Schemas\n      summary: Get a column by {column-id}\n      operationId: getAColumn\n      parameters:\n        - $ref: \"#/components/parameters/X-Cassandra-Token\"\n        - $ref: \"#/components/parameters/keyspace-id\"\n        - $ref: \"#/components/parameters/table-id\"\n        - $ref: \"#/components/parameters/column-id\"\n        - $ref: \"#/components/parameters/raw\"\n      responses:\n        200:\n          description: \"\"\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  data:\n                    type: array\n                    items:\n                      $ref: \"#/components/schemas/ColumnDefinition\"\n        401:\n          $ref: \"#/components/responses/401\"\n        404:\n          $ref: \"#/components/responses/404\"\n        500:\n          $ref: \"#/components/responses/500\"\n    put:\n      tags:\n        - Schemas\n      summary: Create a column by {column-id}\n      operationId: createColumnById\n      parameters:\n        - $ref: \"#/components/parameters/X-Cassandra-Token\"\n        - $ref: \"#/components/parameters/keyspace-id\"\n        - $ref: \"#/components/parameters/table-id\"\n        - $ref: \"#/components/parameters/column-id\"\n      requestBody:\n        description: \"\"\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/ColumnDefinition\"\n      responses:\n        201:\n          description: resource created\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  name:\n                    type: string\n        400:\n          $ref: \"#/components/responses/400\"\n        401:\n          $ref: \"#/components/responses/401\"\n        409:\n          $ref: \"#/components/responses/409\"\n        500:\n          $ref: \"#/components/responses/500\"\n    delete:\n      tags:\n          - Schemas\n      summary: Delete a column by {column-id}\n      operationId: deleteColumnById\n      parameters:\n          - $ref: \"#/components/parameters/X-Cassandra-Token\"\n          - $ref: \"#/components/parameters/keyspace-id\"\n          - $ref: \"#/components/parameters/table-id\"\n          - $ref: \"#/components/parameters/column-id\"\n      responses:\n          204:\n            description: No Content\n          401:\n            $ref: \"#/components/responses/401\"\n          500:\n            $ref: \"#/components/responses/500\"\n  /v1/keyspaces/{keyspace-id}/tables/{table-id}/rows:\n    post:\n      tags:\n        - Data\n      summary: Create a row\n      operationId: createRow\n      parameters:\n          - $ref: \"#/components/parameters/X-Cassandra-Token\"\n          - $ref: \"#/components/parameters/keyspace-id\"\n          - $ref: \"#/components/parameters/table-id\"\n      requestBody:\n        description: \"\"\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/ColumnDefinition\"\n      responses:\n        201:\n          description: resource created\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  name:\n                    type: string\n        400:\n          $ref: \"#/components/responses/400\"\n        401:\n          $ref: \"#/components/responses/401\"\n        409:\n          $ref: \"#/components/responses/409\"\n        500:\n          $ref: \"#/components/responses/500\"\n    get:\n      tags:\n        - Data\n      summary: Get all rows\n      operationId: getRows\n      parameters:\n          - $ref: \"#/components/parameters/X-Cassandra-Token\"\n          - $ref: \"#/components/parameters/keyspace-id\"\n          - $ref: \"#/components/parameters/table-id\"\n          - $ref: \"#/components/parameters/raw\"\n      responses:\n        200:\n          description: \"\"\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  data:\n                    type: array\n                    items:\n                      $ref: \"#/components/schemas/ColumnDefinition\"\n        401:\n          $ref: \"#/components/responses/401\"\n        404:\n          $ref: \"#/components/responses/404\"\n        500:\n          $ref: \"#/components/responses/500\"\n  /v1/keyspaces/{keyspace-id}/tables/{table-id}/rows/{primary-key}:\n    get:\n      tags:\n          - Data\n      summary: Get a row by primary key\n      operationId: getRowByPrimKey\n      parameters:\n          - $ref: \"#/components/parameters/X-Cassandra-Token\"\n          - $ref: \"#/components/parameters/keyspace-id\"\n          - $ref: \"#/components/parameters/table-id\"\n          - $ref: \"#/components/parameters/primary-key\"\n          - $ref: \"#/components/parameters/raw\"\n      responses:\n          200:\n            description: \"\"\n            content:\n              application/json:\n                schema:\n                  $ref: \"#/components/schemas/Table\"\n          401:\n            $ref: \"#/components/responses/401\"\n          404:\n            $ref: \"#/components/responses/404\"\n          500:\n            $ref: \"#/components/responses/500\"\n    put:\n      tags:\n          - Data\n      summary: Replace a row by primary key\n      operationId: replaceRowByPrimKey\n      parameters:\n          - $ref: \"#/components/parameters/X-Cassandra-Token\"\n          - $ref: \"#/components/parameters/keyspace-id\"\n          - $ref: \"#/components/parameters/table-id\"\n      requestBody:\n          description: \"\"\n          required: true\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/TableAdd\"\n      responses:\n          200:\n            description: resource updated\n            content:\n              application/json:\n                schema:\n                  type: object\n                  properties:\n                    name:\n                      type: string\n          400:\n            $ref: \"#/components/responses/400\"\n          401:\n            $ref: \"#/components/responses/401\"\n          404:\n            $ref: \"#/components/responses/404\"\n          409:\n            $ref: \"#/components/responses/409\"\n          500:\n            $ref: \"#/components/responses/500\"\n    delete:\n      tags:\n          - Data\n      summary: Delete a row\n      operationId: deleteRow\n      parameters:\n          - $ref: \"#/components/parameters/X-Cassandra-Token\"\n          - $ref: \"#/components/parameters/keyspace-id\"\n          - $ref: \"#/components/parameters/table-id\"\n      responses:\n          204:\n            description: No Content\n          401:\n            $ref: \"#/components/responses/401\"\n          500:\n            $ref: \"#/components/responses/500\"\n  # /v1/keyspaces/{keyspace-id}/tables/{table-id}/rows/{query}:\n  #   post:\n  #     tags:\n  #       - Data\n  #     summary: Post a row query\n  #     operationId: getRowQuery\n  #     parameters:\n  #       - $ref: \"#/components/parameters/X-Cassandra-Token\"\n  #       - $ref: \"#/components/parameters/keyspace-id\"\n  #       - $ref: \"#/components/parameters/table-id\"\n  #       - $ref: \"#/components/parameters/query\"\n  #       - $ref: \"#/components/parameters/raw\"\n  #     responses:\n  #       200:\n  #         description: \"\"\n  #         content:\n  #           application/json:\n  #             schema:\n  #               $ref: \"#/components/schemas/ColumnDefinition\"\n  #       401:\n  #         $ref: \"#/components/responses/401\"\n  #       404:\n  #         $ref: \"#/components/responses/404\"\n  #       500:\n  #         $ref: \"#/components/responses/500\"\ncomponents:\n  parameters:\n    X-Cassandra-Token:\n      name: X-Cassandra-Token\n      in: header\n      required: true\n      description: \"The token returned from the authorization endpoint for classic databases. Use this token in each request.\"\n      schema:\n        type: string\n    raw:\n      name: raw\n      in: query\n      description: unwrap results\n      required: false\n      schema:\n        type: boolean\n        default: false\n    keyspace-id:\n      name: keyspace-id\n      in: path\n      description: keyspace name\n      required: true\n      schema:\n        type: string\n    table-id:\n      name: table-id\n      in: path\n      description: table name\n      required: true\n      schema:\n        type: string\n    column-id:\n      name: column-id\n      in: path\n      description: column name\n      required: true\n      schema:\n        type: string\n    primary-key:\n      name: primary-key\n      in: path\n      required: true\n      description: |\n        Value from the primary key column for the table. Define composite keys by separating values with\n        semicolons (`val1;val2...`) in the order they were defined. \u003c/br\u003e For example, if the composite key\n        was defined as `PRIMARY KEY(race_year, race_name)` then the primary key in the path would be\n        `race_year;race_name`.\n      schema:\n        type: string\n    query:\n      name: query\n      in: path\n      description: query\n      required: true\n      schema:\n        type: string\n    fields:\n      name: fields\n      in: query\n      description: URL escaped, comma delimited list of keys to include\n      schema:\n        type: string\n    sort:\n      name: sort\n      in: query\n      description: keys to sort by\n      schema:\n        $ref: '#/components/schemas/Sort'\n    page-state:\n      name: page-state\n      in: query\n      description: move the cursor to a particular result\n      schema:\n        type: string\n    page-size:\n      name: page-size\n      description: restrict the number of returned items\n      in: query\n      schema:\n        type: integer\n        format: int32\n    where:\n      name: where\n      in: query\n      description: |\n        URL escaped JSON query using the following keys:\n\n        | Key | Operation |\n        |-|-|\n        | $lt | Less Than |\n        | $lte | Less Than Or Equal To |\n        | $gt | Greater Than |\n        | $gte | Greater Than Or Equal To |\n        | $ne | Not Equal To |\n        | $in | Contained In |\n        | $exists | A value is set for the key |\n\n      schema:\n        type: object\n  responses:\n    404:\n      description: Not Found\n      content:\n        '*/*':\n          schema:\n            $ref: '#/components/schemas/Error'\n    400:\n      description: Bad Request\n      content:\n        '*/*':\n          schema:\n            $ref: '#/components/schemas/Error'\n    401:\n      description: Unauthorized\n      content:\n        '*/*':\n          schema:\n            $ref: '#/components/schemas/Error'\n    409:\n      description: Conflict\n      content:\n        '*/*':\n          schema:\n            $ref: '#/components/schemas/Error'\n    500:\n      description: Internal server error\n      content:\n        '*/*':\n          schema:\n            $ref: '#/components/schemas/Error'\n  schemas:\n    Credentials:\n      type: object\n      required:\n        - username\n        - password\n      description: User credentials for authenticating\n      properties:\n        username:\n          type: string\n          description: Username\n        password:\n          type: string\n          description: Password\n    AuthTokenResponse:\n      type: object\n      properties:\n        authToken:\n          type: string\n    Keyspace:\n      type: object\n      properties:\n        name:\n          type: string\n        datacenters:\n          type: array\n          items:\n            $ref: '#/components/schemas/Datacenter'\n      required:\n        - name\n    Datacenter:\n      type: object\n      properties:\n        name:\n          type: string\n        replicas:\n          type: integer\n      required:\n        - name\n        - replicas\n    Table:\n      type: object\n      properties:\n        name:\n          type: string\n        keyspace:\n          type: string\n        columnDefinitions:\n          type: array\n          items:\n            $ref: '#/components/schemas/ColumnDefinition'\n        primaryKey:\n          $ref: '#/components/schemas/PrimaryKey'\n        tableOptions:\n          $ref: '#/components/schemas/TableOptions'\n    TableAdd:\n      type: object\n      required:\n        - name\n        - columnDefinitions\n        - primaryKey\n      properties:\n        name:\n          type: string\n        ifNotExists:\n          type: boolean\n          description: \"Determines whether to create a new table if a table with the same name exists. Attempting to create an existing table returns an error unless this option is true.\"\n          default: false\n        columnDefinitions:\n          type: array\n          items:\n            $ref: '#/components/schemas/ColumnDefinition'\n        primaryKey:\n          $ref: '#/components/schemas/PrimaryKey'\n        tableOptions:\n          $ref: '#/components/schemas/TableOptions'\n    ColumnDefinition:\n      type: object\n      required:\n        - name\n        - typeDefinition\n      properties:\n        name:\n          type: string\n          description: \"Name for the column, which must be unique.\"\n          example: emailaddress\n        typeDefinition:\n          type: string\n          description: \"The type of data allowed in the column.\"\n          example: text\n          enum:\n            - ascii\n            - text\n            - varchar\n            - tinyint\n            - smallint\n            - int\n            - bigint\n            - varint\n            - decimal\n            - float\n            - double\n            - date\n            - DateRangeType\n            - duration\n            - time\n            - timestamp\n            - uuid\n            - timeuuid\n            - blob\n            - boolean\n            - counter\n            - inet\n            - PointType\n            - LineStringType\n            - PolygonType\n            - frozen\n            - list\n            - map\n            - set\n            - tuple\n        static:\n          type: boolean\n          default: false\n          description: \"Denotes whether the column is shared by all rows of a partition.\"\n    PrimaryKey:\n      type: object\n      description: \"Defines a column list for the primary key. Can be either a single\n        column, compound primary key, or composite partition key. Provide\n        multiple columns for the partition key to define a composite partition\n        key.\"\n      required:\n        - partitionKey\n      properties:\n        partitionKey:\n          type: array\n          description: \"Name of the column or columns that constitute the partition key.\"\n          minItems: 1\n          items:\n            type: string\n        clusteringKey:\n          type: array\n          description: \"Name of the column or columns that constitute the clustering key.\"\n          items:\n            type: string\n    TableOptions:\n      type: object\n      properties:\n        defaultTimeToLive:\n          type: integer\n          description: \"Defines the Time To Live (TTL), which determines the time period (in seconds) to expire data. If the value is \u003e0, TTL is enabled for the entire table and an expiration timestamp is added to each column. The maximum value is 630720000 (20 years). A new TTL timestamp is calculated each time the data is updated and the row is removed after the data expires.\"\n          default: 0\n        clusteringExpression:\n          type: array\n          items:\n            $ref: '#/components/schemas/ClusteringExpression'\n    ClusteringExpression:\n      type: object\n      description: \u003e-\n        Order rows storage to make use of the on-disk sorting of columns.\n        Specifying order can make query results more efficient.\n      required:\n        - column\n        - order\n      properties:\n        column:\n          type: string\n        order:\n          type: string\n          enum:\n            - ASC\n            - DESC\n    Sort:\n      type: object\n      additionalProperties:\n        type: string\n        enum:\n            - asc\n            - desc\n      example:\n        firstName: asc\n        age: desc\n    Error:\n      type: object\n      description: A description of an error state\n      properties:\n        description:\n          type: string\n          example: \u003e-\n            Invalid STRING constant (8be6d514-3436-4e04-a5fc-0ffbefa4c1fe) for\n            \"id\" of type uuid\n          description: A human readable description of the error state\n        code:\n          type: integer\n          example: 400\n          description: The code referencing the error state\n",
			"canonicalURL": "/github.com/stargate/docs@2358400acf91b26f1b6cfe044c2faa537a334b9c/-/blob/api/StargateRESTv1.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/stargate/docs/blob/2358400acf91b26f1b6cfe044c2faa537a334b9c/api/StargateRESTv1.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "parse: parse spec: parse operations: paths: /v1/keyspaces/{keyspace-id}/tables/{table-id}/columns}: get: operation \"getColumns\": parse path \"/v1/keyspaces/{keyspace-id}/tables/{table-id}/columns}\": invalid path: /v1/keyspaces/{keyspace-id}/tables/{table-id}/columns}"
}