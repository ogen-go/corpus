{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/opengeospatial/ogcapi-features"
		},
		"file": {
			"name": "ogcapi-features-4-example1.yaml",
			"size": 0,
			"path": "extensions/transactions/create-replace-update-delete/examples/openapi/ogcapi-features-4-example1.yaml",
			"byteSize": 11012,
			"content": "openapi: 3.0.2\ninfo:\n  title: \"A sample API conforming to the draft standard OGC API - Features - Part 1: Core \u0026 OGC API - Features - Part 4: Create, replace, update and delete\"\n  version: '1.0.0'\n  description: |-\n    This is a sample OpenAPI definition that conforms to the conformance\n    classes \"Core\", \"GeoJSON\", \"HTML\" and \"OpenAPI 3.0\" of the draft\n    standard \"OGC API - Features - Part 1: Core\" and to the conformance \n    classes \"Create/Replace/Delete\" and \"Features\" of the draft standard\n    \"OGC API - Features - Part 4: Create, replace, update and delete\".\n\n    This example is a generic OGC API Features definition that uses path\n    parameters to describe all feature collections and all features.\n    The generic OpenAPI definition does not provide any details on the\n    collections or the feature content. This information is only available\n    from accessing the feature collection resources.\n\n    There is [another example](ogcapi-features-4-example2.yaml)\n    that specifies each collection explicitly.\n  contact:\n    name: Acme Corporation\n    email: info@example.org\n    url: 'http://example.org/'\n  license:\n    name: CC-BY 4.0 license\n    url: 'https://creativecommons.org/licenses/by/4.0/'\nservers:\n  - url: 'https://data.example.org/'\n    description: Production server\n  - url: 'https://dev.example.org/'\n    description: Development server\ntags:\n  - name: Capabilities\n    description: |-\n      essential characteristics of this API\n  - name: Data\n    description: |-\n      access to data (features)\npaths:\n  '/':\n    get:\n      tags:\n        - Capabilities\n      summary: landing page\n      description: |-\n        The landing page provides links to the API definition, the conformance\n        statements and to the feature collections in this dataset.\n      operationId: getLandingPage\n      responses:\n        '200':\n          $ref: 'https://raw.githubusercontent.com/opengeospatial/ogcapi-features/master/core/openapi/ogcapi-features-1.yaml#/components/responses/LandingPage'\n        '500':\n          $ref: 'https://raw.githubusercontent.com/opengeospatial/ogcapi-features/master/core/openapi/ogcapi-features-1.yaml#/components/responses/ServerError'\n  '/conformance':\n    get:\n      tags:\n        - Capabilities\n      summary: information about specifications that this API conforms to\n      description: |-\n        A list of all conformance classes specified in a standard that the\n        server conforms to.\n      operationId: getConformanceDeclaration\n      responses:\n        '200':\n          $ref: 'https://raw.githubusercontent.com/opengeospatial/ogcapi-features/master/core/openapi/ogcapi-features-1.yaml#/components/responses/ConformanceDeclaration'\n        '500':\n          $ref: 'https://raw.githubusercontent.com/opengeospatial/ogcapi-features/master/core/openapi/ogcapi-features-1.yaml#/components/responses/ServerError'\n  '/collections':\n    get:\n      tags:\n        - Capabilities\n      summary: the feature collections in the dataset\n      operationId: getCollections\n      responses:\n        '200':\n          $ref: 'https://raw.githubusercontent.com/opengeospatial/ogcapi-features/master/core/openapi/ogcapi-features-1.yaml#/components/responses/Collections'\n        '500':\n          $ref: 'https://raw.githubusercontent.com/opengeospatial/ogcapi-features/master/core/openapi/ogcapi-features-1.yaml#/components/responses/ServerError'\n  '/collections/{collectionId}':\n    get:\n      tags:\n        - Capabilities\n      summary: |-\n        describe the feature collection with id `collectionId`\n      operationId: describeCollection\n      parameters:\n        - $ref: 'https://raw.githubusercontent.com/opengeospatial/ogcapi-features/master/core/openapi/ogcapi-features-1.yaml#/components/parameters/collectionId'\n      responses:\n        '200':\n          $ref: 'https://raw.githubusercontent.com/opengeospatial/ogcapi-features/master/core/openapi/ogcapi-features-1.yaml#/components/responses/Collection'\n        '404':\n          $ref: 'https://raw.githubusercontent.com/opengeospatial/ogcapi-features/master/core/openapi/ogcapi-features-1.yaml#/components/responses/NotFound'\n        '500':\n          $ref: 'https://raw.githubusercontent.com/opengeospatial/ogcapi-features/master/core/openapi/ogcapi-features-1.yaml#/components/responses/ServerError'\n  '/collections/{collectionId}/items':\n    get:\n      tags:\n        - Data\n      summary: fetch features\n      description: |-\n        Fetch features of the feature collection with id `collectionId`.\n\n        Every feature in a dataset belongs to a collection. A dataset may\n        consist of multiple feature collections. A feature collection is often a\n        collection of features of a similar type, based on a common schema.\n\n        Use content negotiation to request HTML or GeoJSON.\n      operationId: getFeatures\n      parameters:\n        - $ref: 'https://raw.githubusercontent.com/opengeospatial/ogcapi-features/master/core/openapi/ogcapi-features-1.yaml#/components/parameters/collectionId'\n        - $ref: 'https://raw.githubusercontent.com/opengeospatial/ogcapi-features/master/core/openapi/ogcapi-features-1.yaml#/components/parameters/limit'\n        - $ref: 'https://raw.githubusercontent.com/opengeospatial/ogcapi-features/master/core/openapi/ogcapi-features-1.yaml#/components/parameters/bbox'\n        - $ref: 'https://raw.githubusercontent.com/opengeospatial/ogcapi-features/master/core/openapi/ogcapi-features-1.yaml#/components/parameters/datetime'\n      responses:\n        '200':\n          $ref: 'https://raw.githubusercontent.com/opengeospatial/ogcapi-features/master/core/openapi/ogcapi-features-1.yaml#/components/responses/Features'\n        '400':\n          $ref: 'https://raw.githubusercontent.com/opengeospatial/ogcapi-features/master/core/openapi/ogcapi-features-1.yaml#/components/responses/InvalidParameter'\n        '404':\n          $ref: 'https://raw.githubusercontent.com/opengeospatial/ogcapi-features/master/core/openapi/ogcapi-features-1.yaml#/components/responses/NotFound'\n        '500':\n          $ref: 'https://raw.githubusercontent.com/opengeospatial/ogcapi-features/master/core/openapi/ogcapi-features-1.yaml#/components/responses/ServerError'\n    post:\n      summary: insert resource\n      description: Adds a new resource to the API.  Use content negotiation to indicate the representation of the resource (e.g. GeoJSON).\n      operationId: createResource\n      tags:\n        - insert\n      parameters:\n        - $ref: 'https://raw.githubusercontent.com/opengeospatial/ogcapi-features/master/core/openapi/ogcapi-features-1.yaml#/components/parameters/collectionId'\n      requestBody:\n        description: The request body shall contain a representation of the resource to be added to this collection.\n        content:\n          application/json:\n            schema:\n              $ref: 'https://raw.githubusercontent.com/opengeospatial/ogcapi-features/master/core/openapi/ogcapi-features-1.yaml#/components/schemas/featureGeoJSON'\n      responses:\n        '201':\n          $ref: 'https://raw.githubusercontent.com/opengeospatial/ogcapi-features/master/core/openapi/ogcapi-features-1.yaml#/components/responses/Feature'\n        '404':\n          $ref: 'https://raw.githubusercontent.com/opengeospatial/ogcapi-features/master/core/openapi/ogcapi-features-1.yaml#/components/responses/NotFound'\n        '500':\n          $ref: 'https://raw.githubusercontent.com/opengeospatial/ogcapi-features/master/core/openapi/ogcapi-features-1.yaml#/components/responses/ServerError'\n  '/collections/{collectionId}/items/{featureId}':\n    get:\n      tags:\n        - Data\n      summary: fetch a single feature\n      description: |-\n        Fetch the feature with id `featureId` in the feature collection\n        with id `collectionId`.\n\n        Use content negotiation to request HTML or GeoJSON.\n      operationId: getFeature\n      parameters:\n        - $ref: 'https://raw.githubusercontent.com/opengeospatial/ogcapi-features/master/core/openapi/ogcapi-features-1.yaml#/components/parameters/collectionId'\n        - $ref: 'https://raw.githubusercontent.com/opengeospatial/ogcapi-features/master/core/openapi/ogcapi-features-1.yaml#/components/parameters/featureId'\n      responses:\n        '200':\n          $ref: 'https://raw.githubusercontent.com/opengeospatial/ogcapi-features/master/core/openapi/ogcapi-features-1.yaml#/components/responses/Feature'\n        '404':\n          $ref: 'https://raw.githubusercontent.com/opengeospatial/ogcapi-features/master/core/openapi/ogcapi-features-1.yaml#/components/responses/NotFound'\n        '500':\n          $ref: 'https://raw.githubusercontent.com/opengeospatial/ogcapi-features/master/core/openapi/ogcapi-features-1.yaml#/components/responses/ServerError'\n    put:\n      summary: replace resource\n      description: Replaces an existing resource.  Use content negotiation to indicate the representation of the resource (e.g. GeoJSON).\n      operationId: updateResource\n      tags:\n        - update\n      parameters:\n        - $ref: 'https://raw.githubusercontent.com/opengeospatial/ogcapi-features/master/core/openapi/ogcapi-features-1.yaml#/components/parameters/collectionId'\n        - $ref: 'https://raw.githubusercontent.com/opengeospatial/ogcapi-features/master/core/openapi/ogcapi-features-1.yaml#/components/parameters/featureId'\n      requestBody:\n        description: The request body shall contain a representation of the replacement resource.\n        content:\n          application/json:\n            schema:\n              $ref: 'https://raw.githubusercontent.com/opengeospatial/ogcapi-features/master/core/openapi/ogcapi-features-1.yaml#/components/schemas/featureGeoJSON'\n      responses:\n        '204':\n           description: The resource was replaced.\n        '404':\n          $ref: 'https://raw.githubusercontent.com/opengeospatial/ogcapi-features/master/core/openapi/ogcapi-features-1.yaml#/components/responses/NotFound'\n        '500':\n          $ref: 'https://raw.githubusercontent.com/opengeospatial/ogcapi-features/master/core/openapi/ogcapi-features-1.yaml#/components/responses/ServerError'\n    delete:\n      summary: delete resource\n      description: Remove an existing resource.  \n      operationId: deleteResource\n      tags:\n        - delete\n      parameters:\n        - $ref: 'https://raw.githubusercontent.com/opengeospatial/ogcapi-features/master/core/openapi/ogcapi-features-1.yaml#/components/parameters/collectionId'\n        - $ref: 'https://raw.githubusercontent.com/opengeospatial/ogcapi-features/master/core/openapi/ogcapi-features-1.yaml#/components/parameters/featureId'\n      responses:\n        '204':\n           description: The resource was deleted.\n        '404':\n          $ref: 'https://raw.githubusercontent.com/opengeospatial/ogcapi-features/master/core/openapi/ogcapi-features-1.yaml#/components/responses/NotFound'\n        '500':\n          $ref: 'https://raw.githubusercontent.com/opengeospatial/ogcapi-features/master/core/openapi/ogcapi-features-1.yaml#/components/responses/ServerError'\n"
		}
	},
	"Error": "parse: parse spec: paths: /: get: operation \"getLandingPage\": responses: 500: resolve \"https://raw.githubusercontent.com/opengeospatial/ogcapi-features/master/core/openapi/ogcapi-features-1.yaml#/components/responses/ServerError\" reference: invalid response reference: \"https://raw.githubusercontent.com/opengeospatial/ogcapi-features/master/core/openapi/ogcapi-features-1.yaml#/components/responses/ServerError\""
}