{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/ULCA-IN/ulca"
		},
		"file": {
			"name": "ulca-modal-api-contract.yaml",
			"size": 0,
			"path": "backend/model/api/ulca-model-api/docs/ulca-modal-api-contract.yaml",
			"byteSize": 22650,
			"content": "openapi: 3.0.1\ninfo:\n  title: Unified Language Contribution API (ULCA) documentation\n  description: 'The ULCA API documentation defines a core set of interfaces that enables users and communities to contribute AI/ML datasets to build a large, open Indic languages resource ecosystem. The dataset contributions are primarily geared toward the area of NLP, ASR/TTS and OCR. The documentation proposes core set of interfaces where various AI based models can be hosted, referenced and benchmarked. The interfaces enables entire community to participate, collaborate and track key benchmark parameters.'\n  contact:\n    name: ekstep foundation\n    email: contact@ekstep.org\n  version: 0.7.0\n\nservers:\n- url: https://stage-auth.ulcacontrib.org\n  description: Production server (uses live data)\npaths:\n  /ulca/apis/v0/model/upload:\n    post:\n      tags:\n      - model-controller\n      operationId: uploadModel\n      parameters:\n      - name: userId\n        in: query\n        required: true\n        schema:\n          type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                file:\n                  type: string\n                  format: binary\n      responses:\n        \"200\":\n          description: OK\n          content:\n            '*/*':\n              schema:\n                $ref: '#/components/schemas/UploadModelResponse'\n        \"400\":\n          description: On input errors causing a failure in the job.\n          content:\n            '*/*':\n              schema:\n                $ref: '#/components/schemas/HttpErrorResponse'\n\n  /ulca/apis/v0/model/submit:\n    post:\n      tags:\n      - model-controller\n      operationId: submitModel\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/ModelExtended'\n        required: true\n      responses:\n        \"200\":\n          description: OK\n          content:\n            '*/*':\n              schema:\n                $ref: '#/components/schemas/ModelExtended'\n        \"400\":\n          description: On input errors causing a failure in the job.\n          content:\n            '*/*':\n              schema:\n                $ref: '#/components/schemas/HttpErrorResponse'\n  /ulca/apis/v0/model/search:\n    post:\n      tags:\n      - model-controller\n      operationId: searchModel\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/ModelSearchRequest'\n        required: true\n      responses:\n        \"200\":\n          description: OK\n          content:\n            '*/*':\n              schema:\n                $ref: '#/components/schemas/ModelSearchResponse'\n        \"400\":\n          description: On input errors causing a failure in the job.\n          content:\n            '*/*':\n              schema:\n                $ref: '#/components/schemas/HttpErrorResponse'\n  /ulca/apis/v0/model/compute:\n    post:\n      tags:\n      - model-controller\n      operationId: computeModel\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/ModelComputeRequest'\n        required: true\n      responses:\n        \"200\":\n          description: OK\n          content:\n            '*/*':\n              schema:\n                $ref: '#/components/schemas/ModelComputeResponse'\n        \"400\":\n          description: On input errors causing a failure in the job.\n          content:\n            '*/*':\n              schema:\n                $ref: '#/components/schemas/HttpErrorResponse'\n\n  /ulca/apis/v0/model:\n    get:\n      tags:\n      - model-controller\n      operationId: getModel\n      parameters:\n      - name: modelId\n        in: query\n        required: true\n        schema:\n          type: string\n      responses:\n        \"200\":\n          description: OK\n          content:\n            '*/*':\n              schema:\n                $ref: '#/components/schemas/ModelExtended'\n        \"400\":\n          description: On input errors causing a failure in the job.\n          content:\n            '*/*':\n              schema:\n                $ref: '#/components/schemas/HttpErrorResponse'\n  /ulca/apis/v0/model/listByUserId:\n    get:\n      tags:\n      - model-controller\n      operationId: listByUserId\n      parameters:\n      - name: userId\n        in: query\n        required: true\n        schema:\n          type: string\n      - name: startPage\n        in: query\n        required: false\n        schema:\n          type: integer\n          format: int32\n      - name: endPage\n        in: query\n        required: false\n        schema:\n          type: integer\n          format: int32\n      responses:\n        \"200\":\n          description: OK\n          content:\n            '*/*':\n              schema:\n                $ref: '#/components/schemas/ModelListByUserIdResponse'\n        \"400\":\n          description: On input errors causing a failure in the job.\n          content:\n            '*/*':\n              schema:\n                $ref: '#/components/schemas/HttpErrorResponse'\ncomponents:\n  schemas:\n    ASRConfig:\n      required:\n      - language\n      type: object\n      properties:\n        modelId:\n          type: string\n          description: Unique identifier of model\n          example: \"103\"\n        language:\n          $ref: '#/components/schemas/LanguagePair'\n        audioFormat:\n          type: string\n          enum:\n          - wav\n          - pcm\n          - mp3\n          - flac\n        channel:\n          type: string\n          enum:\n          - mono\n          - stereo\n        samplingRate:\n          type: number\n        bitsPerSample:\n          type: string\n          enum:\n          - sixteen\n          - eight\n        transcriptionFormat:\n          $ref: '#/components/schemas/TranscriptionFormat'\n        profanityFilter:\n          type: boolean\n          example: true\n        domain:\n          type: array\n          properties:\n            empty:\n              type: boolean\n          description: This attribute defines that `relevant business area`\n          items:\n            type: string\n            description: This attribute defines that `relevant business area`\n        detailed:\n          type: boolean\n          description: \"to specify whether details are required in output like SNR,\\\n            \\ sampling rate\"\n        punctuation:\n          type: boolean\n          example: true\n        model:\n          type: string\n          enum:\n          - command_and_search\n          - phone_call\n          - video\n          - default\n    ASRFile:\n      type: object\n      properties:\n        audioContent:\n          type: array\n          description: audio content with audio duration \u003c= 1min\n          items:\n            type: string\n            description: audio content with audio duration \u003c= 1min\n            format: byte\n        audioUri:\n          type: string\n          description: path on gcp/s3 bucket or https url\n          example: gs://bucket/audio.wav\n    ASRInference:\n      required:\n      - request\n      - taskType\n      type: object\n      allOf:\n      - $ref: '#/components/schemas/OneOfInferenceAPIEndPointSchema'\n      - type: object\n        properties:\n          taskType:\n            type: string\n          request:\n            $ref: '#/components/schemas/ASRRequest'\n          response:\n            $ref: '#/components/schemas/ASRResponse'\n    ASRRequest:\n      required:\n      - audio\n      - config\n      type: object\n      properties:\n        audio:\n          $ref: '#/components/schemas/ASRFile'\n        config:\n          $ref: '#/components/schemas/ASRConfig'\n    ASRResponse:\n      required:\n      - output\n      type: object\n      properties:\n        output:\n          type: array\n          properties:\n            empty:\n              type: boolean\n          description: list of\n          items:\n            $ref: '#/components/schemas/Sentence'\n        config:\n          $ref: '#/components/schemas/TranslationConfig'\n      description: the response for translation.  Standard http status codes to be\n        used.\n    Contributor:\n      required:\n      - name\n      type: object\n      properties:\n        name:\n          maxLength: 50\n          minLength: 5\n          type: string\n          description: human name of the contributor\n        oauthId:\n          $ref: '#/components/schemas/OAuthIdentity'\n        aboutMe:\n          type: string\n          description: describing the contributor\n    InferenceAPIEndPoint:\n      required:\n      - callbackUrl\n      - schema\n      type: object\n      properties:\n        callbackUrl:\n          type: string\n        schema:\n          oneOf:\n          - $ref: '#/components/schemas/ASRInference'\n          - $ref: '#/components/schemas/OCRInference'\n          - $ref: '#/components/schemas/TTSInference'\n          - $ref: '#/components/schemas/TranslationInference'\n      description: hosted location defines the end point of the model inference. specify\n        a taskType along with Inference type\n    LanguagePair:\n      required:\n      - sourceLanguage\n      type: object\n      properties:\n        sourceLanguageName:\n          type: string\n          description: human name associated with the language code\n        sourceLanguage:\n          type: string\n          description: \"Indic language code, iso-639-1, iso 639-2\"\n          enum:\n          - en\n          - hi\n          - mr\n          - ta\n          - te\n          - kn\n          - gu\n          - pa\n          - bn\n          - ml\n          - as\n          - brx\n          - doi\n          - ks\n          - kok\n          - mai\n          - mni\n          - ne\n          - or\n          - sd\n          - si\n          - ur\n          - sat\n          - lus\n          - njz\n          - pnr\n          - kha\n          - grt\n          - sa\n        targetLanguageName:\n          type: string\n          description: human name associated with the language code\n        targetLanguage:\n          type: string\n          description: \"Indic language code, iso-639-1, iso 639-2\"\n          enum:\n          - en\n          - hi\n          - mr\n          - ta\n          - te\n          - kn\n          - gu\n          - pa\n          - bn\n          - ml\n          - as\n          - brx\n          - doi\n          - ks\n          - kok\n          - mai\n          - mni\n          - ne\n          - or\n          - sd\n          - si\n          - ur\n          - sat\n          - lus\n          - njz\n          - pnr\n          - kha\n          - grt\n          - sa\n      description: \"language pair, make targetLanguage null to reuse the object to\\\n        \\ indicate single language\"\n    ModelExtended:\n      required:\n      - description\n      - domain\n      - inferenceEndPoint\n      - languages\n      - license\n      - name\n      - submitter\n      - task\n      - trainingDataset\n      type: object\n      properties:\n        name:\n          maxLength: 100\n          minLength: 5\n          type: string\n          description: model name that you want your users to see\n          example: vakyansh asr model\n        description:\n          maxLength: 1000\n          minLength: 25\n          type: string\n          description: \"brief description about model, its goal, basically something\\\n            \\ sweet about it\"\n          example: Speech recognition model for classroom lecture\n        refUrl:\n          maxLength: 200\n          minLength: 5\n          type: string\n          description: github link or url giving further info about the model\n          example: https://github.com/Open-Speech-EkStep/vakyansh-models\n        task:\n          $ref: '#/components/schemas/ModelTask'\n        languages:\n          type: array\n          properties:\n            empty:\n              type: boolean\n          items:\n            $ref: '#/components/schemas/LanguagePair'\n        license:\n          type: string\n          enum:\n          - cc-by-4.0\n          - cc-by-sa-4.0\n          - cc-by-nd-2.0\n          - cc-by-nd-4.0\n          - cc-by-nc-3.0\n          - cc-by-nc-4.0\n          - cc-by-nc-sa-4.0\n          - mit\n          - gpl-3.0\n          - bsd-3-clause\n          - private-commercial\n          - unknown-license\n        domain:\n          type: array\n          properties:\n            empty:\n              type: boolean\n          description: This attribute defines that `relevant business area`\n          items:\n            type: string\n            description: This attribute defines that `relevant business area`\n        submitter:\n          $ref: '#/components/schemas/Submitter'\n        inferenceEndPoint:\n          $ref: '#/components/schemas/InferenceAPIEndPoint'\n        trainingDataset:\n          $ref: '#/components/schemas/TrainingDataset'\n        modelId:\n          type: string\n        userId:\n          type: string\n        submittedOn:\n          type: string\n        publishedOn:\n          type: string\n        status:\n          type: string\n    ModelTask:\n      type: object\n      properties:\n        type:\n          type: string\n          enum:\n          - translation\n          - tts\n          - asr\n          - document-layout\n          - ocr\n      description: the category of model under which it has been released or trained\n    OAuthIdentity:\n      type: object\n      properties:\n        identifier:\n          type: string\n          description: system identification for the contributor\n        oauthId:\n          type: string\n          description: \"popular social network identifier, typically identifier returned\\\n            \\ after auth\"\n        provider:\n          type: string\n          description: user authentication provider\n          enum:\n          - custom\n          - github\n          - facebook\n          - instagram\n          - google\n          - yahoo\n    OCRConfig:\n      required:\n      - language\n      type: object\n      properties:\n        modelId:\n          type: string\n          description: Unique identifier of model\n          example: \"103\"\n        language:\n          $ref: '#/components/schemas/LanguagePair'\n    OCRInference:\n      required:\n      - request\n      - taskType\n      type: object\n      allOf:\n      - $ref: '#/components/schemas/OneOfInferenceAPIEndPointSchema'\n      - type: object\n        properties:\n          taskType:\n            type: string\n          request:\n            $ref: '#/components/schemas/OCRRequest'\n          response:\n            $ref: '#/components/schemas/OCRResponse'\n    OCRRequest:\n      required:\n      - config\n      - imageUri\n      type: object\n      properties:\n        imageUri:\n          type: array\n          description: list of paths on gcp/s3 bucket or https url\n          example: gs://bucket/testimg.jpeg\n          items:\n            type: string\n            description: list of paths on gcp/s3 bucket or https url\n            example: gs://bucket/testimg.jpeg\n        config:\n          $ref: '#/components/schemas/OCRConfig'\n    OCRResponse:\n      required:\n      - output\n      type: object\n      properties:\n        output:\n          type: array\n          properties:\n            empty:\n              type: boolean\n          description: list of\n          items:\n            $ref: '#/components/schemas/Sentence'\n        config:\n          $ref: '#/components/schemas/TranslationConfig'\n      description: the response for translation.  Standard http status codes to be\n        used.\n    OneOfInferenceAPIEndPointSchema:\n      required:\n      - taskType\n      type: object\n      properties:\n        taskType:\n          type: string\n      discriminator:\n        propertyName: taskType\n    Sentence:\n      required:\n      - source\n      type: object\n      properties:\n        source:\n          maxLength: 2147483647\n          minLength: 1\n          type: string\n          description: input sentence for the model\n        target:\n          maxLength: 2147483647\n          minLength: 1\n          type: string\n          description: \"to be used along with translation model. expected translated\\\n            \\ sentence, for reference\"\n      description: list of\n    Submitter:\n      required:\n      - name\n      type: object\n      properties:\n        name:\n          maxLength: 50\n          minLength: 5\n          type: string\n          description: Name of the Submitter\n        oauthId:\n          $ref: '#/components/schemas/OAuthIdentity'\n        aboutMe:\n          type: string\n          description: Describing the Submitter\n        team:\n          type: array\n          properties:\n            empty:\n              type: boolean\n          items:\n            $ref: '#/components/schemas/Contributor'\n      description: the schema of data file uploaded should adhere to this specified\n        structure.\n    TTSConfig:\n      required:\n      - language\n      type: object\n      properties:\n        modelId:\n          type: string\n          description: Unique identifier of model\n          example: \"103\"\n        language:\n          $ref: '#/components/schemas/LanguagePair'\n    TTSInference:\n      required:\n      - request\n      - taskType\n      type: object\n      allOf:\n      - $ref: '#/components/schemas/OneOfInferenceAPIEndPointSchema'\n      - type: object\n        properties:\n          taskType:\n            type: string\n          request:\n            $ref: '#/components/schemas/TTSRequest'\n          response:\n            $ref: '#/components/schemas/TTSResponse'\n    TTSRequest:\n      required:\n      - config\n      - input\n      type: object\n      properties:\n        input:\n          type: array\n          properties:\n            empty:\n              type: boolean\n          description: list of\n          items:\n            $ref: '#/components/schemas/Sentence'\n        config:\n          $ref: '#/components/schemas/TTSConfig'\n    TTSResponse:\n      required:\n      - audioUri\n      type: object\n      properties:\n        audioUri:\n          type: string\n          description: path on gcp/s3 bucket or https url\n          example: gs://bucket/audio.wav\n        config:\n          $ref: '#/components/schemas/ASRConfig'\n      description: the response for translation.  Standard http status codes to be\n        used.\n    TrainingDataset:\n      required:\n      - description\n      type: object\n      properties:\n        datasetId:\n          type: string\n          description: \"dataset identifier that has been exported from ULCA system,\\\n            \\ passing this information makes your model enriched with further information\\\n            \\ for the community\"\n        description:\n          type: string\n          description: explain your dataset that you have used for training your model\n      description: training dataset metadata used to train the model\n    TranscriptionFormat:\n      type: object\n      properties:\n        value:\n          type: string\n          description: format of ASR output\n          enum:\n          - srt\n          - transcript\n          - alternatives\n    TranslationConfig:\n      required:\n      - language\n      type: object\n      properties:\n        modelId:\n          type: integer\n          description: Unique identifier of model\n          format: int32\n          example: 103\n        language:\n          $ref: '#/components/schemas/LanguagePair'\n    TranslationInference:\n      required:\n      - request\n      - taskType\n      type: object\n      allOf:\n      - $ref: '#/components/schemas/OneOfInferenceAPIEndPointSchema'\n      - type: object\n        properties:\n          taskType:\n            type: string\n          request:\n            $ref: '#/components/schemas/TranslationRequest'\n          response:\n            $ref: '#/components/schemas/TranslationResponse'\n    TranslationRequest:\n      required:\n      - config\n      - input\n      type: object\n      properties:\n        input:\n          type: array\n          properties:\n            empty:\n              type: boolean\n          description: list of\n          items:\n            $ref: '#/components/schemas/Sentence'\n        config:\n          $ref: '#/components/schemas/TranslationConfig'\n    TranslationResponse:\n      required:\n      - output\n      type: object\n      properties:\n        output:\n          type: array\n          properties:\n            empty:\n              type: boolean\n          description: list of\n          items:\n            $ref: '#/components/schemas/Sentence'\n        config:\n          $ref: '#/components/schemas/TranslationConfig'\n      description: the response for translation.  Standard http status codes to be\n        used.\n    UploadModelResponse:\n      type: object\n      properties:\n        message:\n          type: string\n        data:\n          $ref: '#/components/schemas/ModelExtended'\n    ModelSearchRequest:\n      required:\n      - sourceLanguage\n      - task\n      type: object\n      properties:\n        task:\n          type: string\n        sourceLanguage:\n          type: string\n        targetLanguage:\n          type: string\n    ModelSearchResponse:\n      type: object\n      properties:\n        message:\n          type: string\n        data:\n          type: array\n          items:\n            $ref: '#/components/schemas/ModelExtended'\n        count:\n          type: integer\n          format: int32\n    Input:\n      type: object\n      properties:\n        source:\n          type: string\n    ModelComputeRequest:\n      required:\n      - modelId\n      type: object\n      properties:\n        modelId:\n          type: string\n        task:\n          type: string\n        input:\n          type: array\n          items:\n            $ref: '#/components/schemas/Input'\n        audioUri:\n          type: string\n        audioContent:\n          type: array\n          items:\n            type: string\n            format: byte\n    ModelComputeResponse:\n      type: object\n      properties:\n        outputText:\n          type: string\n    ModelListByUserIdResponse:\n      type: object\n      properties:\n        message:\n          type: string\n        data:\n          type: array\n          items:\n            $ref: '#/components/schemas/ModelExtended'\n        count:\n          type: integer\n          format: int32\n    HttpErrorResponse:\n      required:\n      - code\n      - message\n      type: object\n      properties:\n        code:\n          type: string\n          description: status code as encountered in the processing life-cycle\n          \n        message:\n          type: string\n          description: human understandable format\n        timestamp:\n          type: string\n          format: datetime\n\n  securitySchemes:\n      apiKey:\n        type: apiKey\n        in: header\n        name: key\n      apiSig:\n        type: apiKey\n        in: header\n        name: sig\n        description: signed request url or body   \n",
			"canonicalURL": "/github.com/ULCA-IN/ulca@1d834e4b7fa2256780e524838388c50cedf4a943/-/blob/backend/model/api/ulca-model-api/docs/ulca-modal-api-contract.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/ULCA-IN/ulca/blob/1d834e4b7fa2256780e524838388c50cedf4a943/backend/model/api/ulca-model-api/docs/ulca-modal-api-contract.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "parse: parse spec: parse components: schemas: \"ModelSearchResponse\": parse schema: property \"data\": parse schema: parse schema: parse schema: property \"domain\": parse schema: at 1:5106: array cannot contain properties"
}