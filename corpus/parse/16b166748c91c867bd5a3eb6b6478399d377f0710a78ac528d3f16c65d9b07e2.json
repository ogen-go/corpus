{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/influxdata/openapi"
		},
		"file": {
			"name": "cloud-diff.yml",
			"size": 0,
			"path": "contracts/cloud-diff.yml",
			"byteSize": 183048,
			"content": "openapi: 3.0.0\ninfo:\n  title: InfluxDB Cloud API Service\n  version: 2.0.1\n  description: |\n    The InfluxDB v2 API provides a programmatic interface for all interactions with InfluxDB. Access the InfluxDB API using the `/api/v2/` endpoint.\nservers:\n  - url: /api/v2\npaths:\n  /users:\n    get:\n      operationId: GetUsers\n      tags:\n        - Users\n      summary: List all users\n      parameters:\n        - in: header\n          name: Zap-Trace-Span\n          description: OpenTracing span context\n          example:\n            trace_id: '1'\n            span_id: '1'\n            baggage:\n              key: value\n          required: false\n          schema:\n            type: string\n      responses:\n        '200':\n          description: A list of users\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Users'\n        default:\n          description: Unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: '#/paths/~1tasks/get/responses/default/content/application~1json/schema'\n    post:\n      operationId: PostUsers\n      tags:\n        - Users\n      summary: Create a user\n      parameters:\n        - $ref: '#/paths/~1users/get/parameters/0'\n      requestBody:\n        description: User to create\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/User'\n      responses:\n        '201':\n          description: User created\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/OnboardingResponse/properties/user'\n        default:\n          description: Unexpected error\n          $ref: '#/paths/~1users/get/responses/default'\n  '/users/{userID}':\n    get:\n      operationId: GetUsersID\n      tags:\n        - Users\n      summary: Retrieve a user\n      parameters:\n        - $ref: '#/paths/~1users/get/parameters/0'\n        - in: path\n          name: userID\n          schema:\n            type: string\n          required: true\n          description: The user ID.\n      responses:\n        '200':\n          description: User details\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/OnboardingResponse/properties/user'\n        default:\n          description: Unexpected error\n          $ref: '#/paths/~1users/get/responses/default'\n    patch:\n      operationId: PatchUsersID\n      tags:\n        - Users\n      summary: Update a user\n      requestBody:\n        description: User update to apply\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/User'\n      parameters:\n        - $ref: '#/paths/~1users/get/parameters/0'\n        - in: path\n          name: userID\n          schema:\n            type: string\n          required: true\n          description: The ID of the user to update.\n      responses:\n        '200':\n          description: User updated\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/OnboardingResponse/properties/user'\n        default:\n          description: Unexpected error\n          $ref: '#/paths/~1users/get/responses/default'\n    delete:\n      operationId: DeleteUsersID\n      tags:\n        - Users\n      summary: Delete a user\n      parameters:\n        - $ref: '#/paths/~1users/get/parameters/0'\n        - in: path\n          name: userID\n          schema:\n            type: string\n          required: true\n          description: The ID of the user to delete.\n      responses:\n        '204':\n          description: User deleted\n        default:\n          description: Unexpected error\n          $ref: '#/paths/~1users/get/responses/default'\n  /setup:\n    get:\n      operationId: GetSetup\n      tags:\n        - Setup\n      summary: Retrieve setup status\n      description: 'Check if setup is allowed. Returns `true` if no default user, organization, or bucket have been created.'\n      parameters:\n        - $ref: '#/paths/~1users/get/parameters/0'\n      responses:\n        '200':\n          description: 'Setup is allowed, true or false'\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  allowed:\n                    description: True means that the influxdb instance has NOT had initial setup; false means that the database has been setup.\n                    type: boolean\n    post:\n      operationId: PostSetup\n      tags:\n        - Setup\n      summary: 'Create an initial user, organization, and bucket'\n      description: 'Post an onboarding request to create an initial user, organization, and bucket.'\n      parameters:\n        - $ref: '#/paths/~1users/get/parameters/0'\n      requestBody:\n        description: Source to create\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/OnboardingRequest'\n      responses:\n        '201':\n          description: 'The created default user, bucket, and organization'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/OnboardingResponse'\n        default:\n          description: Unexpected error\n          $ref: '#/paths/~1users/get/responses/default'\n  /setup/user:\n    post:\n      operationId: PostSetupUser\n      tags:\n        - Setup\n      summary: 'Create a new user, organization, and bucket'\n      description: 'Post an onboarding request to create a new user, organization, and bucket.'\n      requestBody:\n        description: Source to create\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/OnboardingRequest'\n      responses:\n        '201':\n          description: 'The created default user, bucket, and organization.'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/OnboardingResponse'\n        default:\n          description: Unexpected error\n          $ref: '#/paths/~1users/get/responses/default'\n  /authorizations:\n    get:\n      operationId: GetAuthorizations\n      tags:\n        - Authorizations\n      summary: List all authorizations\n      parameters:\n        - $ref: '#/paths/~1users/get/parameters/0'\n        - in: query\n          name: userID\n          schema:\n            type: string\n          description: Only show authorizations that belong to a user ID.\n        - in: query\n          name: user\n          schema:\n            type: string\n          description: Only show authorizations that belong to a user name.\n        - in: query\n          name: orgID\n          schema:\n            type: string\n          description: Only show authorizations that belong to an organization ID.\n        - in: query\n          name: org\n          schema:\n            type: string\n          description: Only show authorizations that belong to a organization name.\n        - in: query\n          name: token\n          schema:\n            type: string\n          description: Find a token by value.\n      responses:\n        '200':\n          description: A list of authorizations\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Authorizations'\n        default:\n          description: Unexpected error\n          $ref: '#/paths/~1users/get/responses/default'\n    post:\n      operationId: PostAuthorizations\n      tags:\n        - Authorizations\n      summary: Create an authorization\n      parameters:\n        - $ref: '#/paths/~1users/get/parameters/0'\n      requestBody:\n        description: Authorization to create\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Authorization'\n      responses:\n        '201':\n          description: Authorization created\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Authorization'\n        '400':\n          description: Invalid request\n          $ref: '#/paths/~1users/get/responses/default'\n        default:\n          description: Unexpected error\n          $ref: '#/paths/~1users/get/responses/default'\n  '/authorizations/{authID}':\n    get:\n      operationId: GetAuthorizationsID\n      tags:\n        - Authorizations\n      summary: Retrieve an authorization\n      parameters:\n        - $ref: '#/paths/~1users/get/parameters/0'\n        - in: path\n          name: authID\n          schema:\n            type: string\n          required: true\n          description: The identifier of the authorization to get.\n      responses:\n        '200':\n          description: Authorization details\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Authorization'\n        default:\n          description: Unexpected error\n          $ref: '#/paths/~1users/get/responses/default'\n    patch:\n      operationId: PatchAuthorizationsID\n      tags:\n        - Authorizations\n      summary: Update authorization status\n      description: Update an authorization's status to `active` or `inactive`.\n      requestBody:\n        description: The updated Authorization object.\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Authorization/allOf/0'\n      parameters:\n        - $ref: '#/paths/~1users/get/parameters/0'\n        - in: path\n          name: authID\n          schema:\n            type: string\n          required: true\n          description: The identifier of the authorization to update.\n      responses:\n        '200':\n          description: The updated authorization.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Authorization'\n        default:\n          description: Unexpected error\n          $ref: '#/paths/~1users/get/responses/default'\n    delete:\n      operationId: DeleteAuthorizationsID\n      tags:\n        - Authorizations\n      summary: Delete an authorization\n      parameters:\n        - $ref: '#/paths/~1users/get/parameters/0'\n        - in: path\n          name: authID\n          schema:\n            type: string\n          required: true\n          description: The identifier of the authorization to delete.\n      responses:\n        '204':\n          description: Authorization deleted\n        default:\n          description: Unexpected error\n          $ref: '#/paths/~1users/get/responses/default'\n  /variables:\n    get:\n      operationId: GetVariables\n      tags:\n        - Variables\n      summary: List all variables\n      parameters:\n        - $ref: '#/paths/~1users/get/parameters/0'\n        - in: query\n          name: org\n          description: The name of the organization.\n          schema:\n            type: string\n        - in: query\n          name: orgID\n          description: The organization ID.\n          schema:\n            type: string\n      responses:\n        '200':\n          description: A list of variables for an organization.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Variables'\n        '400':\n          description: Invalid request\n          $ref: '#/paths/~1users/get/responses/default'\n        default:\n          description: Internal server error\n          $ref: '#/paths/~1users/get/responses/default'\n    post:\n      operationId: PostVariables\n      summary: Create a variable\n      tags:\n        - Variables\n      parameters:\n        - $ref: '#/paths/~1users/get/parameters/0'\n      requestBody:\n        description: Variable to create\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Variable'\n      responses:\n        '201':\n          description: Variable created\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Variable'\n        default:\n          description: Internal server error\n          $ref: '#/paths/~1users/get/responses/default'\n  '/variables/{variableID}':\n    get:\n      operationId: GetVariablesID\n      tags:\n        - Variables\n      summary: Retrieve a variable\n      parameters:\n        - $ref: '#/paths/~1users/get/parameters/0'\n        - in: path\n          name: variableID\n          required: true\n          schema:\n            type: string\n          description: The variable ID.\n      responses:\n        '200':\n          description: Variable found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Variable'\n        '404':\n          description: Variable not found\n          $ref: '#/paths/~1users/get/responses/default'\n        default:\n          description: Internal server error\n          $ref: '#/paths/~1users/get/responses/default'\n    delete:\n      operationId: DeleteVariablesID\n      tags:\n        - Variables\n      summary: Delete a variable\n      parameters:\n        - $ref: '#/paths/~1users/get/parameters/0'\n        - in: path\n          name: variableID\n          required: true\n          schema:\n            type: string\n          description: The variable ID.\n      responses:\n        '204':\n          description: Variable deleted\n        default:\n          description: Internal server error\n          $ref: '#/paths/~1users/get/responses/default'\n    patch:\n      operationId: PatchVariablesID\n      summary: Update a variable\n      tags:\n        - Variables\n      parameters:\n        - $ref: '#/paths/~1users/get/parameters/0'\n        - in: path\n          name: variableID\n          required: true\n          schema:\n            type: string\n          description: The variable ID.\n      requestBody:\n        description: Variable update to apply\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Variable'\n      responses:\n        '200':\n          description: Variable updated\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Variable'\n        default:\n          description: Internal server error\n          $ref: '#/paths/~1users/get/responses/default'\n    put:\n      operationId: PutVariablesID\n      summary: Replace a variable\n      tags:\n        - Variables\n      parameters:\n        - $ref: '#/paths/~1users/get/parameters/0'\n        - in: path\n          name: variableID\n          required: true\n          schema:\n            type: string\n          description: The variable ID.\n      requestBody:\n        description: Variable to replace\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Variable'\n      responses:\n        '200':\n          description: Variable updated\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Variable'\n        default:\n          description: Internal server error\n          $ref: '#/paths/~1users/get/responses/default'\n  '/buckets/{bucketID}/schema/measurements':\n    summary: Bucket schemas\n    get:\n      summary: List all measurement schemas of a bucket\n      operationId: getMeasurementSchemas\n      parameters:\n        - in: query\n          name: org\n          description: The name of the organization.\n          schema:\n            type: string\n        - in: query\n          name: orgID\n          description: The identifier of the organization.\n          schema:\n            type: string\n        - in: query\n          name: name\n          description: The name of the measurement to return schemas for.\n          schema:\n            type: string\n        - in: path\n          name: bucketID\n          description: The identifier of the bucket.\n          schema:\n            type: string\n          required: true\n      tags:\n        - Bucket Schemas\n      responses:\n        '200':\n          description: A list of measurement schemas returning summary information.\n          headers:\n            ETag:\n              description: The current version of the bucket schema\n              schema:\n                type: string\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/MeasurementSchemaList'\n        '404':\n          description: Bucket not found\n          $ref: '#/paths/~1users/get/responses/default'\n    post:\n      summary: Create a measurement schema for a bucket\n      operationId: createMeasurementSchema\n      parameters:\n        - in: query\n          name: org\n          description: The name of the organization.\n          schema:\n            type: string\n        - in: query\n          name: orgID\n          description: The identifier of the organization.\n          schema:\n            type: string\n        - in: path\n          name: bucketID\n          description: The identifier of the bucket.\n          schema:\n            type: string\n          required: true\n      tags:\n        - Bucket Schemas\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/MeasurementSchemaCreateRequest'\n      responses:\n        '201':\n          description: The created measurement schema.\n          headers:\n            ETag:\n              description: The current version of the measurement schema\n              schema:\n                type: string\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/MeasurementSchema'\n        '400':\n          description: Client error with create request\n          content:\n            application/json:\n              examples:\n                badNameExample:\n                  summary: Invalid name\n                  description: 'The error returned when the name is invalid, such as too few or too many characters or the name contains non-printable ASCII or is not valid UTF-8.'\n                  value:\n                    code: invalid\n                    message: name is invalid\n                missingColumnsExample:\n                  summary: Missing columns\n                  description: The error returned when the request body is missing the columns property.\n                  value:\n                    code: invalid\n                    message: columns is required\n                missingTimestampExample:\n                  summary: Missing timestamp\n                  description: The error returned when the request body is missing a timestamp type column.\n                  value:\n                    code: invalid\n                    message: Timestamp column is required\n                duplicateColumnNamesExample:\n                  summary: Duplicate column names\n                  description: The error returned when the request body contains duplicate column names.\n                  value:\n                    code: invalid\n                    message: Duplicate column names\n                missingFieldExample:\n                  summary: Missing field\n                  description: The error returned when the request body is missing at least one field type column.\n                  value:\n                    code: invalid\n                    message: At least one field column is required\n              schema:\n                $ref: '#/paths/~1tasks/get/responses/default/content/application~1json/schema'\n  '/buckets/{bucketID}/schema/measurements/{measurementID}':\n    summary: Bucket Schema\n    get:\n      summary: Retrieve measurement schema information\n      operationId: getMeasurementSchema\n      parameters:\n        - in: query\n          name: org\n          description: The name of the organization.\n          schema:\n            type: string\n        - in: query\n          name: orgID\n          description: The identifier of the organization.\n          schema:\n            type: string\n        - in: path\n          name: bucketID\n          description: The identifier of the bucket.\n          schema:\n            type: string\n          required: true\n        - in: path\n          name: measurementID\n          description: The identifier of the measurement.\n          schema:\n            type: string\n          required: true\n      tags:\n        - Bucket Schemas\n      responses:\n        '200':\n          description: Schema definition for a single measurement\n          headers:\n            ETag:\n              description: The current version of the measurement schema\n              schema:\n                type: string\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/MeasurementSchema'\n    patch:\n      summary: Update a measurement schema\n      operationId: updateMeasurementSchema\n      parameters:\n        - in: query\n          name: org\n          description: The name of the organization.\n          schema:\n            type: string\n        - in: query\n          name: orgID\n          description: The identifier of the organization.\n          schema:\n            type: string\n        - in: path\n          name: bucketID\n          description: The identifier of the bucket.\n          schema:\n            type: string\n          required: true\n        - in: path\n          name: measurementID\n          description: The identifier of the measurement.\n          schema:\n            type: string\n          required: true\n      tags:\n        - Bucket Schemas\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/MeasurementSchemaUpdateRequest'\n      responses:\n        '200':\n          description: The updated measurement schema\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/MeasurementSchema'\n        '400':\n          description: Client error updating measurement schema\n          content:\n            application/json:\n              examples:\n                missingColumnsExample:\n                  summary: Deleted columns\n                  description: The error returned when the request body does not contain all the columns from the source.\n                  value:\n                    code: invalid\n                    message: Unable to delete columns from schema\n              schema:\n                $ref: '#/paths/~1tasks/get/responses/default/content/application~1json/schema'\n  '/orgs/{orgID}/limits':\n    get:\n      tags:\n        - Limits\n      summary: Retrieve limits for an organization\n      operationId: GetOrgLimitsID\n      parameters:\n        - in: path\n          name: orgID\n          description: ID of the organization.\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: Limits defined for the organization.\n          content:\n            application/json:\n              schema:\n                type: object\n                description: These are org limits similar to those configured in/by quartz.\n                properties:\n                  links:\n                    $ref: '#/paths/~1dashboards/get/responses/200/content/application~1json/schema/properties/links'\n                  limits:\n                    $ref: '#/components/schemas/Limit'\n        default:\n          description: unexpected error\n          $ref: '#/paths/~1users/get/responses/default'\n  '/orgs/{orgID}/usage':\n    get:\n      tags:\n        - Usage\n      summary: Retrieve usage for an organization\n      operationId: GetOrgUsageID\n      parameters:\n        - in: path\n          name: orgID\n          description: ID of the organization.\n          required: true\n          schema:\n            type: string\n        - in: query\n          name: start\n          description: |\n            Earliest time to include in results.\n            For more information about timestamps, see [Manipulate timestamps with Flux]({{% INFLUXDB_DOCS_URL %}}/query-data/flux/manipulate-timestamps/).\n          required: true\n          schema:\n            type: integer\n            format: unix timestamp\n        - in: query\n          name: stop\n          description: |\n            Latest time to include in results.\n            For more information about timestamps, see [Manipulate timestamps with Flux]({{% INFLUXDB_DOCS_URL %}}/query-data/flux/manipulate-timestamps/).\n          required: false\n          schema:\n            type: integer\n            format: unix timestamp\n        - in: query\n          name: raw\n          description: return raw usage data\n          required: false\n          schema:\n            type: boolean\n            default: false\n      responses:\n        '200':\n          description: Usage data\n          headers:\n            Content-Encoding:\n              description: Lists any encodings (usually compression algorithms) that have been applied to the response payload.\n              schema:\n                type: string\n                description: 'The content coding. `gzip` for compressed data or `identity` for unmodified, uncompressed data.'\n                default: identity\n                enum:\n                  - gzip\n                  - identity\n          content:\n            text/csv:\n              schema:\n                type: string\n                example: |\n                  #group,false,false,true,true,false,false,true,true,true,true #datatype,string,long,dateTime:RFC3339,dateTime:RFC3339,dateTime:RFC3339,double,string,string,string,string #default,_result,,,,,,,,, ,result,table,_start,_stop,_time,_value,_field,_measurement,bucket_id,org_id ,,0,2021-05-10T14:25:10.865702397Z,2021-05-10T15:25:10.865702397Z,2021-05-10T15:00:00Z,5434066,gauge,storage_usage_bucket_bytes,2f6ba0cf9a2fdcbb,cec6fc1d2176dc11 ,,1,2021-05-10T14:25:10.865702397Z,2021-05-10T15:25:10.865702397Z,2021-05-10T15:00:00Z,9924053.966666665,gauge,storage_usage_bucket_bytes,8af67bcaf69d9daf,cec6fc1d2176dc11\n        default:\n          description: unexpected error\n          $ref: '#/paths/~1users/get/responses/default'\n  /dashboards:\n    post:\n      operationId: PostDashboards\n      tags:\n        - Dashboards\n      summary: Create a dashboard\n      parameters:\n        - $ref: '#/paths/~1users/get/parameters/0'\n      requestBody:\n        description: Dashboard to create\n        required: true\n        content:\n          application/json:\n            schema:\n              properties:\n                orgID:\n                  type: string\n                  description: The ID of the organization that owns the dashboard.\n                name:\n                  type: string\n                  description: The user-facing name of the dashboard.\n                description:\n                  type: string\n                  description: The user-facing description of the dashboard.\n              required:\n                - orgID\n                - name\n      responses:\n        '201':\n          description: Added dashboard\n          content:\n            application/json:\n              schema:\n                oneOf:\n                  - type: object\n                    allOf:\n                      - $ref: '#/paths/~1dashboards/post/requestBody/content/application~1json/schema'\n                      - type: object\n                        properties:\n                          links:\n                            type: object\n                            example:\n                              self: /api/v2/dashboards/1\n                              cells: /api/v2/dashboards/1/cells\n                              owners: /api/v2/dashboards/1/owners\n                              members: /api/v2/dashboards/1/members\n                              labels: /api/v2/dashboards/1/labels\n                              org: /api/v2/labels/1\n                            properties:\n                              self:\n                                $ref: '#/paths/~1tasks/post/responses/201/content/application~1json/schema/properties/links/properties/self'\n                              cells:\n                                $ref: '#/paths/~1tasks/post/responses/201/content/application~1json/schema/properties/links/properties/self'\n                              members:\n                                $ref: '#/paths/~1tasks/post/responses/201/content/application~1json/schema/properties/links/properties/self'\n                              owners:\n                                $ref: '#/paths/~1tasks/post/responses/201/content/application~1json/schema/properties/links/properties/self'\n                              labels:\n                                $ref: '#/paths/~1tasks/post/responses/201/content/application~1json/schema/properties/links/properties/self'\n                              org:\n                                $ref: '#/paths/~1tasks/post/responses/201/content/application~1json/schema/properties/links/properties/self'\n                          id:\n                            readOnly: true\n                            type: string\n                          meta:\n                            type: object\n                            properties:\n                              createdAt:\n                                type: string\n                                format: date-time\n                              updatedAt:\n                                type: string\n                                format: date-time\n                          cells:\n                            type: array\n                            items:\n                              type: object\n                              properties:\n                                id:\n                                  type: string\n                                links:\n                                  type: object\n                                  properties:\n                                    self:\n                                      type: string\n                                    view:\n                                      type: string\n                                x:\n                                  type: integer\n                                  format: int32\n                                'y':\n                                  type: integer\n                                  format: int32\n                                w:\n                                  type: integer\n                                  format: int32\n                                h:\n                                  type: integer\n                                  format: int32\n                                viewID:\n                                  type: string\n                                  description: The reference to a view from the views API.\n                          labels:\n                            $ref: '#/components/schemas/Variable/properties/labels'\n                  - type: object\n                    allOf:\n                      - $ref: '#/paths/~1dashboards/post/requestBody/content/application~1json/schema'\n                      - type: object\n                        properties:\n                          links:\n                            type: object\n                            example:\n                              self: /api/v2/dashboards/1\n                              cells: /api/v2/dashboards/1/cells\n                              owners: /api/v2/dashboards/1/owners\n                              members: /api/v2/dashboards/1/members\n                              labels: /api/v2/dashboards/1/labels\n                              org: /api/v2/labels/1\n                            properties:\n                              self:\n                                $ref: '#/paths/~1tasks/post/responses/201/content/application~1json/schema/properties/links/properties/self'\n                              cells:\n                                $ref: '#/paths/~1tasks/post/responses/201/content/application~1json/schema/properties/links/properties/self'\n                              members:\n                                $ref: '#/paths/~1tasks/post/responses/201/content/application~1json/schema/properties/links/properties/self'\n                              owners:\n                                $ref: '#/paths/~1tasks/post/responses/201/content/application~1json/schema/properties/links/properties/self'\n                              labels:\n                                $ref: '#/paths/~1tasks/post/responses/201/content/application~1json/schema/properties/links/properties/self'\n                              org:\n                                $ref: '#/paths/~1tasks/post/responses/201/content/application~1json/schema/properties/links/properties/self'\n                          id:\n                            readOnly: true\n                            type: string\n                          meta:\n                            type: object\n                            properties:\n                              createdAt:\n                                type: string\n                                format: date-time\n                              updatedAt:\n                                type: string\n                                format: date-time\n                          cells:\n                            type: array\n                            items:\n                              type: object\n                              allOf:\n                                - $ref: '#/paths/~1dashboards/get/responses/200/content/application~1json/schema/properties/dashboards/items/allOf/1/properties/cells/items'\n                                - type: object\n                                  properties:\n                                    name:\n                                      type: string\n                                    properties:\n                                      oneOf:\n                                        - type: object\n                                          required:\n                                            - type\n                                            - queries\n                                            - shape\n                                            - axes\n                                            - colors\n                                            - note\n                                            - showNoteWhenEmpty\n                                            - prefix\n                                            - suffix\n                                            - decimalPlaces\n                                            - position\n                                          properties:\n                                            timeFormat:\n                                              type: string\n                                            type:\n                                              type: string\n                                              enum:\n                                                - line-plus-single-stat\n                                            queries:\n                                              type: array\n                                              items:\n                                                type: object\n                                                properties:\n                                                  text:\n                                                    type: string\n                                                    description: The text of the Flux query.\n                                                  editMode:\n                                                    type: string\n                                                    enum:\n                                                      - builder\n                                                      - advanced\n                                                  name:\n                                                    type: string\n                                                  builderConfig:\n                                                    type: object\n                                                    properties:\n                                                      buckets:\n                                                        type: array\n                                                        items:\n                                                          type: string\n                                                      tags:\n                                                        type: array\n                                                        items:\n                                                          type: object\n                                                          properties:\n                                                            key:\n                                                              type: string\n                                                            values:\n                                                              type: array\n                                                              items:\n                                                                type: string\n                                                            aggregateFunctionType:\n                                                              type: string\n                                                              enum:\n                                                                - filter\n                                                                - group\n                                                      functions:\n                                                        type: array\n                                                        items:\n                                                          type: object\n                                                          properties:\n                                                            name:\n                                                              type: string\n                                                      aggregateWindow:\n                                                        type: object\n                                                        properties:\n                                                          period:\n                                                            type: string\n                                                          fillValues:\n                                                            type: boolean\n                                            colors:\n                                              description: Colors define color encoding of data into a visualization\n                                              type: array\n                                              items:\n                                                type: object\n                                                description: Defines an encoding of data value into color space.\n                                                required:\n                                                  - id\n                                                  - type\n                                                  - hex\n                                                  - name\n                                                  - value\n                                                properties:\n                                                  id:\n                                                    description: The unique ID of the view color.\n                                                    type: string\n                                                  type:\n                                                    description: Type is how the color is used.\n                                                    type: string\n                                                    enum:\n                                                      - min\n                                                      - max\n                                                      - threshold\n                                                      - scale\n                                                      - text\n                                                      - background\n                                                  hex:\n                                                    description: The hex number of the color\n                                                    type: string\n                                                    maxLength: 7\n                                                    minLength: 7\n                                                  name:\n                                                    description: The user-facing name of the hex color.\n                                                    type: string\n                                                  value:\n                                                    description: The data value mapped to this color.\n                                                    type: number\n                                                    format: float\n                                            shape:\n                                              type: string\n                                              enum:\n                                                - chronograf-v2\n                                            note:\n                                              type: string\n                                            showNoteWhenEmpty:\n                                              description: 'If true, will display note when empty'\n                                              type: boolean\n                                            axes:\n                                              description: The viewport for a View's visualizations\n                                              type: object\n                                              required:\n                                                - x\n                                                - 'y'\n                                              properties:\n                                                x:\n                                                  type: object\n                                                  description: Axis used in a visualization.\n                                                  properties:\n                                                    bounds:\n                                                      type: array\n                                                      minItems: 0\n                                                      maxItems: 2\n                                                      description: 'The extents of the axis in the form [lower, upper]. Clients determine whether bounds are inclusive or exclusive of their limits.'\n                                                      items:\n                                                        type: string\n                                                    label:\n                                                      description: Description of the axis.\n                                                      type: string\n                                                    prefix:\n                                                      description: Label prefix for formatting axis values.\n                                                      type: string\n                                                    suffix:\n                                                      description: Label suffix for formatting axis values.\n                                                      type: string\n                                                    base:\n                                                      description: Radix for formatting axis values.\n                                                      type: string\n                                                      enum:\n                                                        - ''\n                                                        - '2'\n                                                        - '10'\n                                                    scale:\n                                                      description: 'Scale is the axis formatting scale. Supported: \"log\", \"linear\"'\n                                                      type: string\n                                                      enum:\n                                                        - log\n                                                        - linear\n                                                'y':\n                                                  $ref: '#/paths/~1dashboards/post/responses/201/content/application~1json/schema/oneOf/1/allOf/1/properties/cells/items/allOf/1/properties/properties/oneOf/0/properties/axes/properties/x'\n                                            staticLegend:\n                                              description: StaticLegend represents the options specific to the static legend\n                                              type: object\n                                              properties:\n                                                colorizeRows:\n                                                  type: boolean\n                                                heightRatio:\n                                                  type: number\n                                                  format: float\n                                                show:\n                                                  type: boolean\n                                                opacity:\n                                                  type: number\n                                                  format: float\n                                                orientationThreshold:\n                                                  type: integer\n                                                valueAxis:\n                                                  type: string\n                                                widthRatio:\n                                                  type: number\n                                                  format: float\n                                            xColumn:\n                                              type: string\n                                            generateXAxisTicks:\n                                              type: array\n                                              items:\n                                                type: string\n                                            xTotalTicks:\n                                              type: integer\n                                            xTickStart:\n                                              type: number\n                                              format: float\n                                            xTickStep:\n                                              type: number\n                                              format: float\n                                            yColumn:\n                                              type: string\n                                            generateYAxisTicks:\n                                              type: array\n                                              items:\n                                                type: string\n                                            yTotalTicks:\n                                              type: integer\n                                            yTickStart:\n                                              type: number\n                                              format: float\n                                            yTickStep:\n                                              type: number\n                                              format: float\n                                            shadeBelow:\n                                              type: boolean\n                                            hoverDimension:\n                                              type: string\n                                              enum:\n                                                - auto\n                                                - x\n                                                - 'y'\n                                                - xy\n                                            position:\n                                              type: string\n                                              enum:\n                                                - overlaid\n                                                - stacked\n                                            prefix:\n                                              type: string\n                                            suffix:\n                                              type: string\n                                            decimalPlaces:\n                                              description: 'Indicates whether decimal places should be enforced, and how many digits it should show.'\n                                              type: object\n                                              properties:\n                                                isEnforced:\n                                                  description: Indicates whether decimal point setting should be enforced\n                                                  type: boolean\n                                                digits:\n                                                  description: The number of digits after decimal to display\n                                                  type: integer\n                                                  format: int32\n                                            legendColorizeRows:\n                                              type: boolean\n                                            legendHide:\n                                              type: boolean\n                                            legendOpacity:\n                                              type: number\n                                              format: float\n                                            legendOrientationThreshold:\n                                              type: integer\n                                        - type: object\n                                          required:\n                                            - type\n                                            - geom\n                                            - queries\n                                            - shape\n                                            - axes\n                                            - colors\n                                            - note\n                                            - showNoteWhenEmpty\n                                            - position\n                                          properties:\n                                            timeFormat:\n                                              type: string\n                                            type:\n                                              type: string\n                                              enum:\n                                                - xy\n                                            queries:\n                                              type: array\n                                              items:\n                                                $ref: '#/paths/~1dashboards/post/responses/201/content/application~1json/schema/oneOf/1/allOf/1/properties/cells/items/allOf/1/properties/properties/oneOf/0/properties/queries/items'\n                                            colors:\n                                              description: Colors define color encoding of data into a visualization\n                                              type: array\n                                              items:\n                                                $ref: '#/paths/~1dashboards/post/responses/201/content/application~1json/schema/oneOf/1/allOf/1/properties/cells/items/allOf/1/properties/properties/oneOf/0/properties/colors/items'\n                                            colorMapping:\n                                              description: An object that contains information about the color mapping\n                                              type: object\n                                              additionalProperties:\n                                                type: string\n                                              example:\n                                                series_id_1: '#edf529'\n                                                series_id_2: '#edf529'\n                                                measurement_birdmigration_europe: '#663cd0'\n                                                configcat_deployments-autopromotionblocker: '#663cd0'\n                                            shape:\n                                              type: string\n                                              enum:\n                                                - chronograf-v2\n                                            note:\n                                              type: string\n                                            showNoteWhenEmpty:\n                                              description: 'If true, will display note when empty'\n                                              type: boolean\n                                            axes:\n                                              $ref: '#/paths/~1dashboards/post/responses/201/content/application~1json/schema/oneOf/1/allOf/1/properties/cells/items/allOf/1/properties/properties/oneOf/0/properties/axes'\n                                            staticLegend:\n                                              $ref: '#/paths/~1dashboards/post/responses/201/content/application~1json/schema/oneOf/1/allOf/1/properties/cells/items/allOf/1/properties/properties/oneOf/0/properties/staticLegend'\n                                            xColumn:\n                                              type: string\n                                            generateXAxisTicks:\n                                              type: array\n                                              items:\n                                                type: string\n                                            xTotalTicks:\n                                              type: integer\n                                            xTickStart:\n                                              type: number\n                                              format: float\n                                            xTickStep:\n                                              type: number\n                                              format: float\n                                            yColumn:\n                                              type: string\n                                            generateYAxisTicks:\n                                              type: array\n                                              items:\n                                                type: string\n                                            yTotalTicks:\n                                              type: integer\n                                            yTickStart:\n                                              type: number\n                                              format: float\n                                            yTickStep:\n                                              type: number\n                                              format: float\n                                            shadeBelow:\n                                              type: boolean\n                                            hoverDimension:\n                                              type: string\n                                              enum:\n                                                - auto\n                                                - x\n                                                - 'y'\n                                                - xy\n                                            position:\n                                              type: string\n                                              enum:\n                                                - overlaid\n                                                - stacked\n                                            geom:\n                                              type: string\n                                              enum:\n                                                - line\n                                                - step\n                                                - stacked\n                                                - bar\n                                                - monotoneX\n                                                - stepBefore\n                                                - stepAfter\n                                            legendColorizeRows:\n                                              type: boolean\n                                            legendHide:\n                                              type: boolean\n                                            legendOpacity:\n                                              type: number\n                                              format: float\n                                            legendOrientationThreshold:\n                                              type: integer\n                                        - type: object\n                                          required:\n                                            - type\n                                            - queries\n                                            - colors\n                                            - shape\n                                            - note\n                                            - showNoteWhenEmpty\n                                            - prefix\n                                            - tickPrefix\n                                            - suffix\n                                            - tickSuffix\n                                            - decimalPlaces\n                                          properties:\n                                            type:\n                                              type: string\n                                              enum:\n                                                - single-stat\n                                            queries:\n                                              type: array\n                                              items:\n                                                $ref: '#/paths/~1dashboards/post/responses/201/content/application~1json/schema/oneOf/1/allOf/1/properties/cells/items/allOf/1/properties/properties/oneOf/0/properties/queries/items'\n                                            colors:\n                                              description: Colors define color encoding of data into a visualization\n                                              type: array\n                                              items:\n                                                $ref: '#/paths/~1dashboards/post/responses/201/content/application~1json/schema/oneOf/1/allOf/1/properties/cells/items/allOf/1/properties/properties/oneOf/0/properties/colors/items'\n                                            shape:\n                                              type: string\n                                              enum:\n                                                - chronograf-v2\n                                            note:\n                                              type: string\n                                            showNoteWhenEmpty:\n                                              description: 'If true, will display note when empty'\n                                              type: boolean\n                                            prefix:\n                                              type: string\n                                            tickPrefix:\n                                              type: string\n                                            suffix:\n                                              type: string\n                                            tickSuffix:\n                                              type: string\n                                            staticLegend:\n                                              $ref: '#/paths/~1dashboards/post/responses/201/content/application~1json/schema/oneOf/1/allOf/1/properties/cells/items/allOf/1/properties/properties/oneOf/0/properties/staticLegend'\n                                            decimalPlaces:\n                                              $ref: '#/paths/~1dashboards/post/responses/201/content/application~1json/schema/oneOf/1/allOf/1/properties/cells/items/allOf/1/properties/properties/oneOf/0/properties/decimalPlaces'\n                                        - type: object\n                                          required:\n                                            - type\n                                            - queries\n                                            - colors\n                                            - shape\n                                            - note\n                                            - showNoteWhenEmpty\n                                            - xColumn\n                                            - fillColumns\n                                            - xDomain\n                                            - xAxisLabel\n                                            - position\n                                            - binCount\n                                          properties:\n                                            type:\n                                              type: string\n                                              enum:\n                                                - histogram\n                                            queries:\n                                              type: array\n                                              items:\n                                                $ref: '#/paths/~1dashboards/post/responses/201/content/application~1json/schema/oneOf/1/allOf/1/properties/cells/items/allOf/1/properties/properties/oneOf/0/properties/queries/items'\n                                            colors:\n                                              description: Colors define color encoding of data into a visualization\n                                              type: array\n                                              items:\n                                                $ref: '#/paths/~1dashboards/post/responses/201/content/application~1json/schema/oneOf/1/allOf/1/properties/cells/items/allOf/1/properties/properties/oneOf/0/properties/colors/items'\n                                            shape:\n                                              type: string\n                                              enum:\n                                                - chronograf-v2\n                                            note:\n                                              type: string\n                                            showNoteWhenEmpty:\n                                              description: 'If true, will display note when empty'\n                                              type: boolean\n                                            xColumn:\n                                              type: string\n                                            fillColumns:\n                                              type: array\n                                              items:\n                                                type: string\n                                            xDomain:\n                                              type: array\n                                              items:\n                                                type: number\n                                                format: float\n                                            xAxisLabel:\n                                              type: string\n                                            position:\n                                              type: string\n                                              enum:\n                                                - overlaid\n                                                - stacked\n                                            binCount:\n                                              type: integer\n                                            legendColorizeRows:\n                                              type: boolean\n                                            legendHide:\n                                              type: boolean\n                                            legendOpacity:\n                                              type: number\n                                              format: float\n                                            legendOrientationThreshold:\n                                              type: integer\n                                        - type: object\n                                          required:\n                                            - type\n                                            - queries\n                                            - colors\n                                            - shape\n                                            - note\n                                            - showNoteWhenEmpty\n                                            - prefix\n                                            - tickPrefix\n                                            - suffix\n                                            - tickSuffix\n                                            - decimalPlaces\n                                          properties:\n                                            type:\n                                              type: string\n                                              enum:\n                                                - gauge\n                                            queries:\n                                              type: array\n                                              items:\n                                                $ref: '#/paths/~1dashboards/post/responses/201/content/application~1json/schema/oneOf/1/allOf/1/properties/cells/items/allOf/1/properties/properties/oneOf/0/properties/queries/items'\n                                            colors:\n                                              description: Colors define color encoding of data into a visualization\n                                              type: array\n                                              items:\n                                                $ref: '#/paths/~1dashboards/post/responses/201/content/application~1json/schema/oneOf/1/allOf/1/properties/cells/items/allOf/1/properties/properties/oneOf/0/properties/colors/items'\n                                            shape:\n                                              type: string\n                                              enum:\n                                                - chronograf-v2\n                                            note:\n                                              type: string\n                                            showNoteWhenEmpty:\n                                              description: 'If true, will display note when empty'\n                                              type: boolean\n                                            prefix:\n                                              type: string\n                                            tickPrefix:\n                                              type: string\n                                            suffix:\n                                              type: string\n                                            tickSuffix:\n                                              type: string\n                                            decimalPlaces:\n                                              $ref: '#/paths/~1dashboards/post/responses/201/content/application~1json/schema/oneOf/1/allOf/1/properties/cells/items/allOf/1/properties/properties/oneOf/0/properties/decimalPlaces'\n                                        - type: object\n                                          required:\n                                            - type\n                                            - queries\n                                            - colors\n                                            - shape\n                                            - note\n                                            - showNoteWhenEmpty\n                                            - tableOptions\n                                            - fieldOptions\n                                            - timeFormat\n                                            - decimalPlaces\n                                          properties:\n                                            type:\n                                              type: string\n                                              enum:\n                                                - table\n                                            queries:\n                                              type: array\n                                              items:\n                                                $ref: '#/paths/~1dashboards/post/responses/201/content/application~1json/schema/oneOf/1/allOf/1/properties/cells/items/allOf/1/properties/properties/oneOf/0/properties/queries/items'\n                                            colors:\n                                              description: Colors define color encoding of data into a visualization\n                                              type: array\n                                              items:\n                                                $ref: '#/paths/~1dashboards/post/responses/201/content/application~1json/schema/oneOf/1/allOf/1/properties/cells/items/allOf/1/properties/properties/oneOf/0/properties/colors/items'\n                                            shape:\n                                              type: string\n                                              enum:\n                                                - chronograf-v2\n                                            note:\n                                              type: string\n                                            showNoteWhenEmpty:\n                                              description: 'If true, will display note when empty'\n                                              type: boolean\n                                            tableOptions:\n                                              type: object\n                                              properties:\n                                                verticalTimeAxis:\n                                                  description: verticalTimeAxis describes the orientation of the table by indicating whether the time axis will be displayed vertically\n                                                  type: boolean\n                                                sortBy:\n                                                  $ref: '#/paths/~1dashboards/post/responses/201/content/application~1json/schema/oneOf/1/allOf/1/properties/cells/items/allOf/1/properties/properties/oneOf/5/properties/fieldOptions/items'\n                                                wrapping:\n                                                  description: Wrapping describes the text wrapping style to be used in table views\n                                                  type: string\n                                                  enum:\n                                                    - truncate\n                                                    - wrap\n                                                    - single-line\n                                                fixFirstColumn:\n                                                  description: fixFirstColumn indicates whether the first column of the table should be locked\n                                                  type: boolean\n                                            fieldOptions:\n                                              description: fieldOptions represent the fields retrieved by the query with customization options\n                                              type: array\n                                              items:\n                                                description: Describes a field that can be renamed and made visible or invisible.\n                                                type: object\n                                                properties:\n                                                  internalName:\n                                                    description: The calculated name of a field.\n                                                    readOnly: true\n                                                    type: string\n                                                  displayName:\n                                                    description: The name that a field is renamed to by the user.\n                                                    type: string\n                                                  visible:\n                                                    description: Indicates whether this field should be visible on the table.\n                                                    type: boolean\n                                            timeFormat:\n                                              description: timeFormat describes the display format for time values according to moment.js date formatting\n                                              type: string\n                                            decimalPlaces:\n                                              $ref: '#/paths/~1dashboards/post/responses/201/content/application~1json/schema/oneOf/1/allOf/1/properties/cells/items/allOf/1/properties/properties/oneOf/0/properties/decimalPlaces'\n                                        - type: object\n                                          required:\n                                            - type\n                                            - showAll\n                                            - queries\n                                            - shape\n                                            - note\n                                            - showNoteWhenEmpty\n                                          properties:\n                                            type:\n                                              type: string\n                                              enum:\n                                                - simple-table\n                                            showAll:\n                                              type: boolean\n                                            queries:\n                                              type: array\n                                              items:\n                                                $ref: '#/paths/~1dashboards/post/responses/201/content/application~1json/schema/oneOf/1/allOf/1/properties/cells/items/allOf/1/properties/properties/oneOf/0/properties/queries/items'\n                                            shape:\n                                              type: string\n                                              enum:\n                                                - chronograf-v2\n                                            note:\n                                              type: string\n                                            showNoteWhenEmpty:\n                                              description: 'If true, will display note when empty'\n                                              type: boolean\n                                        - type: object\n                                          required:\n                                            - type\n                                            - shape\n                                            - note\n                                          properties:\n                                            type:\n                                              type: string\n                                              enum:\n                                                - markdown\n                                            shape:\n                                              type: string\n                                              enum:\n                                                - chronograf-v2\n                                            note:\n                                              type: string\n                                        - type: object\n                                          required:\n                                            - type\n                                            - shape\n                                            - checkID\n                                            - queries\n                                            - colors\n                                          properties:\n                                            type:\n                                              type: string\n                                              enum:\n                                                - check\n                                            shape:\n                                              type: string\n                                              enum:\n                                                - chronograf-v2\n                                            checkID:\n                                              type: string\n                                            check:\n                                              allOf:\n                                                - oneOf:\n                                                    - allOf:\n                                                        - properties:\n                                                            id:\n                                                              readOnly: true\n                                                              type: string\n                                                            name:\n                                                              type: string\n                                                            orgID:\n                                                              description: The ID of the organization that owns this check.\n                                                              type: string\n                                                            taskID:\n                                                              description: The ID of the task associated with this check.\n                                                              type: string\n                                                            ownerID:\n                                                              description: The ID of creator used to create this check.\n                                                              type: string\n                                                              readOnly: true\n                                                            createdAt:\n                                                              type: string\n                                                              format: date-time\n                                                              readOnly: true\n                                                            updatedAt:\n                                                              type: string\n                                                              format: date-time\n                                                              readOnly: true\n                                                            query:\n                                                              $ref: '#/paths/~1dashboards/post/responses/201/content/application~1json/schema/oneOf/1/allOf/1/properties/cells/items/allOf/1/properties/properties/oneOf/0/properties/queries/items'\n                                                            status:\n                                                              $ref: '#/paths/~1tasks/post/requestBody/content/application~1json/schema/properties/status'\n                                                            description:\n                                                              description: An optional description of the check.\n                                                              type: string\n                                                            latestCompleted:\n                                                              type: string\n                                                              description: 'Timestamp (in RFC3339 date/time format](https://datatracker.ietf.org/doc/html/rfc3339)) of the latest scheduled and completed run.'\n                                                              format: date-time\n                                                              readOnly: true\n                                                            lastRunStatus:\n                                                              readOnly: true\n                                                              type: string\n                                                              enum:\n                                                                - failed\n                                                                - success\n                                                                - canceled\n                                                            lastRunError:\n                                                              readOnly: true\n                                                              type: string\n                                                            labels:\n                                                              $ref: '#/components/schemas/Variable/properties/labels'\n                                                            links:\n                                                              type: object\n                                                              readOnly: true\n                                                              example:\n                                                                self: /api/v2/checks/1\n                                                                labels: /api/v2/checks/1/labels\n                                                                members: /api/v2/checks/1/members\n                                                                owners: /api/v2/checks/1/owners\n                                                                query: /api/v2/checks/1/query\n                                                              properties:\n                                                                self:\n                                                                  description: URL for this check\n                                                                  $ref: '#/paths/~1tasks/post/responses/201/content/application~1json/schema/properties/links/properties/self'\n                                                                labels:\n                                                                  description: URL to retrieve labels for this check\n                                                                  $ref: '#/paths/~1tasks/post/responses/201/content/application~1json/schema/properties/links/properties/self'\n                                                                members:\n                                                                  description: URL to retrieve members for this check\n                                                                  $ref: '#/paths/~1tasks/post/responses/201/content/application~1json/schema/properties/links/properties/self'\n                                                                owners:\n                                                                  description: URL to retrieve owners for this check\n                                                                  $ref: '#/paths/~1tasks/post/responses/201/content/application~1json/schema/properties/links/properties/self'\n                                                                query:\n                                                                  description: URL to retrieve flux script for this check\n                                                                  $ref: '#/paths/~1tasks/post/responses/201/content/application~1json/schema/properties/links/properties/self'\n                                                          required:\n                                                            - name\n                                                            - orgID\n                                                            - query\n                                                        - type: object\n                                                          required:\n                                                            - type\n                                                          properties:\n                                                            type:\n                                                              type: string\n                                                              enum:\n                                                                - deadman\n                                                            timeSince:\n                                                              description: String duration before deadman triggers.\n                                                              type: string\n                                                            staleTime:\n                                                              description: String duration for time that a series is considered stale and should not trigger deadman.\n                                                              type: string\n                                                            reportZero:\n                                                              description: 'If only zero values reported since time, trigger an alert'\n                                                              type: boolean\n                                                            level:\n                                                              description: The state to record if check matches a criteria.\n                                                              type: string\n                                                              enum:\n                                                                - UNKNOWN\n                                                                - OK\n                                                                - INFO\n                                                                - CRIT\n                                                                - WARN\n                                                            every:\n                                                              description: Check repetition interval.\n                                                              type: string\n                                                            offset:\n                                                              description: 'Duration to delay after the schedule, before executing check.'\n                                                              type: string\n                                                            tags:\n                                                              description: List of tags to write to each status.\n                                                              type: array\n                                                              items:\n                                                                type: object\n                                                                properties:\n                                                                  key:\n                                                                    type: string\n                                                                  value:\n                                                                    type: string\n                                                            statusMessageTemplate:\n                                                              description: The template used to generate and write a status message.\n                                                              type: string\n                                                    - allOf:\n                                                        - $ref: '#/paths/~1dashboards/post/responses/201/content/application~1json/schema/oneOf/1/allOf/1/properties/cells/items/allOf/1/properties/properties/oneOf/8/properties/check/allOf/0/oneOf/0/allOf/0'\n                                                        - type: object\n                                                          required:\n                                                            - type\n                                                          properties:\n                                                            type:\n                                                              type: string\n                                                              enum:\n                                                                - threshold\n                                                            thresholds:\n                                                              type: array\n                                                              items:\n                                                                oneOf:\n                                                                  - allOf:\n                                                                      - properties:\n                                                                          level:\n                                                                            $ref: '#/paths/~1dashboards/post/responses/201/content/application~1json/schema/oneOf/1/allOf/1/properties/cells/items/allOf/1/properties/properties/oneOf/8/properties/check/allOf/0/oneOf/0/allOf/1/properties/level'\n                                                                          allValues:\n                                                                            description: 'If true, only alert if all values meet threshold.'\n                                                                            type: boolean\n                                                                      - type: object\n                                                                        required:\n                                                                          - type\n                                                                          - value\n                                                                        properties:\n                                                                          type:\n                                                                            type: string\n                                                                            enum:\n                                                                              - greater\n                                                                          value:\n                                                                            type: number\n                                                                            format: float\n                                                                  - allOf:\n                                                                      - $ref: '#/paths/~1dashboards/post/responses/201/content/application~1json/schema/oneOf/1/allOf/1/properties/cells/items/allOf/1/properties/properties/oneOf/8/properties/check/allOf/0/oneOf/1/allOf/1/properties/thresholds/items/oneOf/0/allOf/0'\n                                                                      - type: object\n                                                                        required:\n                                                                          - type\n                                                                          - value\n                                                                        properties:\n                                                                          type:\n                                                                            type: string\n                                                                            enum:\n                                                                              - lesser\n                                                                          value:\n                                                                            type: number\n                                                                            format: float\n                                                                  - allOf:\n                                                                      - $ref: '#/paths/~1dashboards/post/responses/201/content/application~1json/schema/oneOf/1/allOf/1/properties/cells/items/allOf/1/properties/properties/oneOf/8/properties/check/allOf/0/oneOf/1/allOf/1/properties/thresholds/items/oneOf/0/allOf/0'\n                                                                      - type: object\n                                                                        required:\n                                                                          - type\n                                                                          - min\n                                                                          - max\n                                                                          - within\n                                                                        properties:\n                                                                          type:\n                                                                            type: string\n                                                                            enum:\n                                                                              - range\n                                                                          min:\n                                                                            type: number\n                                                                            format: float\n                                                                          max:\n                                                                            type: number\n                                                                            format: float\n                                                                          within:\n                                                                            type: boolean\n                                                                discriminator:\n                                                                  propertyName: type\n                                                                  mapping:\n                                                                    greater: '#/components/schemas/GreaterThreshold'\n                                                                    lesser: '#/components/schemas/LesserThreshold'\n                                                                    range: '#/components/schemas/RangeThreshold'\n                                                            every:\n                                                              description: Check repetition interval.\n                                                              type: string\n                                                            offset:\n                                                              description: 'Duration to delay after the schedule, before executing check.'\n                                                              type: string\n                                                            tags:\n                                                              description: List of tags to write to each status.\n                                                              type: array\n                                                              items:\n                                                                type: object\n                                                                properties:\n                                                                  key:\n                                                                    type: string\n                                                                  value:\n                                                                    type: string\n                                                            statusMessageTemplate:\n                                                              description: The template used to generate and write a status message.\n                                                              type: string\n                                                    - allOf:\n                                                        - $ref: '#/paths/~1dashboards/post/responses/201/content/application~1json/schema/oneOf/1/allOf/1/properties/cells/items/allOf/1/properties/properties/oneOf/8/properties/check/allOf/0/oneOf/0/allOf/0'\n                                                        - type: object\n                                                          properties:\n                                                            type:\n                                                              type: string\n                                                              enum:\n                                                                - custom\n                                                          required:\n                                                            - type\n                                                  discriminator:\n                                                    propertyName: type\n                                                    mapping:\n                                                      deadman: '#/components/schemas/DeadmanCheck'\n                                                      threshold: '#/components/schemas/ThresholdCheck'\n                                                      custom: '#/components/schemas/CustomCheck'\n                                            queries:\n                                              type: array\n                                              items:\n                                                $ref: '#/paths/~1dashboards/post/responses/201/content/application~1json/schema/oneOf/1/allOf/1/properties/cells/items/allOf/1/properties/properties/oneOf/0/properties/queries/items'\n                                            colors:\n                                              description: Colors define color encoding of data into a visualization\n                                              type: array\n                                              items:\n                                                $ref: '#/paths/~1dashboards/post/responses/201/content/application~1json/schema/oneOf/1/allOf/1/properties/cells/items/allOf/1/properties/properties/oneOf/0/properties/colors/items'\n                                            legendColorizeRows:\n                                              type: boolean\n                                            legendHide:\n                                              type: boolean\n                                            legendOpacity:\n                                              type: number\n                                              format: float\n                                            legendOrientationThreshold:\n                                              type: integer\n                                        - type: object\n                                          required:\n                                            - type\n                                            - queries\n                                            - colors\n                                            - shape\n                                            - note\n                                            - showNoteWhenEmpty\n                                            - xColumn\n                                            - yColumn\n                                            - fillColumns\n                                            - symbolColumns\n                                            - xDomain\n                                            - yDomain\n                                            - xAxisLabel\n                                            - yAxisLabel\n                                            - xPrefix\n                                            - yPrefix\n                                            - xSuffix\n                                            - ySuffix\n                                          properties:\n                                            timeFormat:\n                                              type: string\n                                            type:\n                                              type: string\n                                              enum:\n                                                - scatter\n                                            queries:\n                                              type: array\n                                              items:\n                                                $ref: '#/paths/~1dashboards/post/responses/201/content/application~1json/schema/oneOf/1/allOf/1/properties/cells/items/allOf/1/properties/properties/oneOf/0/properties/queries/items'\n                                            colors:\n                                              description: Colors define color encoding of data into a visualization\n                                              type: array\n                                              items:\n                                                type: string\n                                            shape:\n                                              type: string\n                                              enum:\n                                                - chronograf-v2\n                                            note:\n                                              type: string\n                                            showNoteWhenEmpty:\n                                              description: 'If true, will display note when empty'\n                                              type: boolean\n                                            xColumn:\n                                              type: string\n                                            generateXAxisTicks:\n                                              type: array\n                                              items:\n                                                type: string\n                                            xTotalTicks:\n                                              type: integer\n                                            xTickStart:\n                                              type: number\n                                              format: float\n                                            xTickStep:\n                                              type: number\n                                              format: float\n                                            yColumn:\n                                              type: string\n                                            generateYAxisTicks:\n                                              type: array\n                                              items:\n                                                type: string\n                                            yTotalTicks:\n                                              type: integer\n                                            yTickStart:\n                                              type: number\n                                              format: float\n                                            yTickStep:\n                                              type: number\n                                              format: float\n                                            fillColumns:\n                                              type: array\n                                              items:\n                                                type: string\n                                            symbolColumns:\n                                              type: array\n                                              items:\n                                                type: string\n                                            xDomain:\n                                              type: array\n                                              items:\n                                                type: number\n                                              maxItems: 2\n                                            yDomain:\n                                              type: array\n                                              items:\n                                                type: number\n                                              maxItems: 2\n                                            xAxisLabel:\n                                              type: string\n                                            yAxisLabel:\n                                              type: string\n                                            xPrefix:\n                                              type: string\n                                            xSuffix:\n                                              type: string\n                                            yPrefix:\n                                              type: string\n                                            ySuffix:\n                                              type: string\n                                            legendColorizeRows:\n                                              type: boolean\n                                            legendHide:\n                                              type: boolean\n                                            legendOpacity:\n                                              type: number\n                                              format: float\n                                            legendOrientationThreshold:\n                                              type: integer\n                                        - type: object\n                                          required:\n                                            - type\n                                            - queries\n                                            - colors\n                                            - shape\n                                            - note\n                                            - showNoteWhenEmpty\n                                            - xColumn\n                                            - yColumn\n                                            - xDomain\n                                            - yDomain\n                                            - xAxisLabel\n                                            - yAxisLabel\n                                            - xPrefix\n                                            - yPrefix\n                                            - xSuffix\n                                            - ySuffix\n                                            - binSize\n                                          properties:\n                                            timeFormat:\n                                              type: string\n                                            type:\n                                              type: string\n                                              enum:\n                                                - heatmap\n                                            queries:\n                                              type: array\n                                              items:\n                                                $ref: '#/paths/~1dashboards/post/responses/201/content/application~1json/schema/oneOf/1/allOf/1/properties/cells/items/allOf/1/properties/properties/oneOf/0/properties/queries/items'\n                                            colors:\n                                              description: Colors define color encoding of data into a visualization\n                                              type: array\n                                              items:\n                                                type: string\n                                            shape:\n                                              type: string\n                                              enum:\n                                                - chronograf-v2\n                                            note:\n                                              type: string\n                                            showNoteWhenEmpty:\n                                              description: 'If true, will display note when empty'\n                                              type: boolean\n                                            xColumn:\n                                              type: string\n                                            generateXAxisTicks:\n                                              type: array\n                                              items:\n                                                type: string\n                                            xTotalTicks:\n                                              type: integer\n                                            xTickStart:\n                                              type: number\n                                              format: float\n                                            xTickStep:\n                                              type: number\n                                              format: float\n                                            yColumn:\n                                              type: string\n                                            generateYAxisTicks:\n                                              type: array\n                                              items:\n                                                type: string\n                                            yTotalTicks:\n                                              type: integer\n                                            yTickStart:\n                                              type: number\n                                              format: float\n                                            yTickStep:\n                                              type: number\n                                              format: float\n                                            xDomain:\n                                              type: array\n                                              items:\n                                                type: number\n                                              maxItems: 2\n                                            yDomain:\n                                              type: array\n                                              items:\n                                                type: number\n                                              maxItems: 2\n                                            xAxisLabel:\n                                              type: string\n                                            yAxisLabel:\n                                              type: string\n                                            xPrefix:\n                                              type: string\n                                            xSuffix:\n                                              type: string\n                                            yPrefix:\n                                              type: string\n                                            ySuffix:\n                                              type: string\n                                            binSize:\n                                              type: number\n                                            legendColorizeRows:\n                                              type: boolean\n                                            legendHide:\n                                              type: boolean\n                                            legendOpacity:\n                                              type: number\n                                              format: float\n                                            legendOrientationThreshold:\n                                              type: integer\n                                        - type: object\n                                          required:\n                                            - type\n                                            - queries\n                                            - colors\n                                            - shape\n                                            - note\n                                            - showNoteWhenEmpty\n                                            - xColumn\n                                            - ySeriesColumns\n                                            - fillColumns\n                                            - xDomain\n                                            - yDomain\n                                            - xAxisLabel\n                                            - yAxisLabel\n                                            - xPrefix\n                                            - yPrefix\n                                            - xSuffix\n                                            - ySuffix\n                                          properties:\n                                            timeFormat:\n                                              type: string\n                                            type:\n                                              type: string\n                                              enum:\n                                                - mosaic\n                                            queries:\n                                              type: array\n                                              items:\n                                                $ref: '#/paths/~1dashboards/post/responses/201/content/application~1json/schema/oneOf/1/allOf/1/properties/cells/items/allOf/1/properties/properties/oneOf/0/properties/queries/items'\n                                            colors:\n                                              description: Colors define color encoding of data into a visualization\n                                              type: array\n                                              items:\n                                                type: string\n                                            shape:\n                                              type: string\n                                              enum:\n                                                - chronograf-v2\n                                            note:\n                                              type: string\n                                            showNoteWhenEmpty:\n                                              description: 'If true, will display note when empty'\n                                              type: boolean\n                                            xColumn:\n                                              type: string\n                                            generateXAxisTicks:\n                                              type: array\n                                              items:\n                                                type: string\n                                            xTotalTicks:\n                                              type: integer\n                                            xTickStart:\n                                              type: number\n                                              format: float\n                                            xTickStep:\n                                              type: number\n                                              format: float\n                                            yLabelColumnSeparator:\n                                              type: string\n                                            yLabelColumns:\n                                              type: array\n                                              items:\n                                                type: string\n                                            ySeriesColumns:\n                                              type: array\n                                              items:\n                                                type: string\n                                            fillColumns:\n                                              type: array\n                                              items:\n                                                type: string\n                                            xDomain:\n                                              type: array\n                                              items:\n                                                type: number\n                                              maxItems: 2\n                                            yDomain:\n                                              type: array\n                                              items:\n                                                type: number\n                                              maxItems: 2\n                                            xAxisLabel:\n                                              type: string\n                                            yAxisLabel:\n                                              type: string\n                                            xPrefix:\n                                              type: string\n                                            xSuffix:\n                                              type: string\n                                            yPrefix:\n                                              type: string\n                                            ySuffix:\n                                              type: string\n                                            hoverDimension:\n                                              type: string\n                                              enum:\n                                                - auto\n                                                - x\n                                                - 'y'\n                                                - xy\n                                            legendColorizeRows:\n                                              type: boolean\n                                            legendHide:\n                                              type: boolean\n                                            legendOpacity:\n                                              type: number\n                                              format: float\n                                            legendOrientationThreshold:\n                                              type: integer\n                                        - type: object\n                                          required:\n                                            - type\n                                            - geom\n                                            - queries\n                                            - shape\n                                            - axes\n                                            - colors\n                                            - note\n                                            - showNoteWhenEmpty\n                                          properties:\n                                            timeFormat:\n                                              type: string\n                                            type:\n                                              type: string\n                                              enum:\n                                                - band\n                                            queries:\n                                              type: array\n                                              items:\n                                                $ref: '#/paths/~1dashboards/post/responses/201/content/application~1json/schema/oneOf/1/allOf/1/properties/cells/items/allOf/1/properties/properties/oneOf/0/properties/queries/items'\n                                            colors:\n                                              description: Colors define color encoding of data into a visualization\n                                              type: array\n                                              items:\n                                                $ref: '#/paths/~1dashboards/post/responses/201/content/application~1json/schema/oneOf/1/allOf/1/properties/cells/items/allOf/1/properties/properties/oneOf/0/properties/colors/items'\n                                            shape:\n                                              type: string\n                                              enum:\n                                                - chronograf-v2\n                                            note:\n                                              type: string\n                                            showNoteWhenEmpty:\n                                              description: 'If true, will display note when empty'\n                                              type: boolean\n                                            axes:\n                                              $ref: '#/paths/~1dashboards/post/responses/201/content/application~1json/schema/oneOf/1/allOf/1/properties/cells/items/allOf/1/properties/properties/oneOf/0/properties/axes'\n                                            staticLegend:\n                                              $ref: '#/paths/~1dashboards/post/responses/201/content/application~1json/schema/oneOf/1/allOf/1/properties/cells/items/allOf/1/properties/properties/oneOf/0/properties/staticLegend'\n                                            xColumn:\n                                              type: string\n                                            generateXAxisTicks:\n                                              type: array\n                                              items:\n                                                type: string\n                                            xTotalTicks:\n                                              type: integer\n                                            xTickStart:\n                                              type: number\n                                              format: float\n                                            xTickStep:\n                                              type: number\n                                              format: float\n                                            yColumn:\n                                              type: string\n                                            generateYAxisTicks:\n                                              type: array\n                                              items:\n                                                type: string\n                                            yTotalTicks:\n                                              type: integer\n                                            yTickStart:\n                                              type: number\n                                              format: float\n                                            yTickStep:\n                                              type: number\n                                              format: float\n                                            upperColumn:\n                                              type: string\n                                            mainColumn:\n                                              type: string\n                                            lowerColumn:\n                                              type: string\n                                            hoverDimension:\n                                              type: string\n                                              enum:\n                                                - auto\n                                                - x\n                                                - 'y'\n                                                - xy\n                                            geom:\n                                              $ref: '#/paths/~1dashboards/post/responses/201/content/application~1json/schema/oneOf/1/allOf/1/properties/cells/items/allOf/1/properties/properties/oneOf/1/properties/geom'\n                                            legendColorizeRows:\n                                              type: boolean\n                                            legendHide:\n                                              type: boolean\n                                            legendOpacity:\n                                              type: number\n                                              format: float\n                                            legendOrientationThreshold:\n                                              type: integer\n                                        - type: object\n                                          required:\n                                            - type\n                                            - shape\n                                            - queries\n                                            - note\n                                            - showNoteWhenEmpty\n                                            - center\n                                            - zoom\n                                            - allowPanAndZoom\n                                            - detectCoordinateFields\n                                            - layers\n                                          properties:\n                                            type:\n                                              type: string\n                                              enum:\n                                                - geo\n                                            queries:\n                                              type: array\n                                              items:\n                                                $ref: '#/paths/~1dashboards/post/responses/201/content/application~1json/schema/oneOf/1/allOf/1/properties/cells/items/allOf/1/properties/properties/oneOf/0/properties/queries/items'\n                                            shape:\n                                              type: string\n                                              enum:\n                                                - chronograf-v2\n                                            center:\n                                              description: Coordinates of the center of the map\n                                              type: object\n                                              required:\n                                                - lat\n                                                - lon\n                                              properties:\n                                                lat:\n                                                  description: Latitude of the center of the map\n                                                  type: number\n                                                  format: double\n                                                lon:\n                                                  description: Longitude of the center of the map\n                                                  type: number\n                                                  format: double\n                                            zoom:\n                                              description: Zoom level used for initial display of the map\n                                              type: number\n                                              format: double\n                                              minimum: 1\n                                              maximum: 28\n                                            allowPanAndZoom:\n                                              description: 'If true, map zoom and pan controls are enabled on the dashboard view'\n                                              type: boolean\n                                              default: true\n                                            detectCoordinateFields:\n                                              description: 'If true, search results get automatically regroupped so that lon,lat and value are treated as columns'\n                                              type: boolean\n                                              default: true\n                                            useS2CellID:\n                                              description: 'If true, S2 column is used to calculate lat/lon'\n                                              type: boolean\n                                            s2Column:\n                                              description: String to define the column\n                                              type: string\n                                            latLonColumns:\n                                              description: Object type to define lat/lon columns\n                                              type: object\n                                              required:\n                                                - lat\n                                                - lon\n                                              properties:\n                                                lat:\n                                                  description: Object type for key and column definitions\n                                                  type: object\n                                                  required:\n                                                    - key\n                                                    - column\n                                                  properties:\n                                                    key:\n                                                      description: Key to determine whether the column is tag/field\n                                                      type: string\n                                                    column:\n                                                      description: Column to look up Lat/Lon\n                                                      type: string\n                                                lon:\n                                                  $ref: '#/paths/~1dashboards/post/responses/201/content/application~1json/schema/oneOf/1/allOf/1/properties/cells/items/allOf/1/properties/properties/oneOf/13/properties/latLonColumns/properties/lat'\n                                            mapStyle:\n                                              description: 'Define map type - regular, satellite etc.'\n                                              type: string\n                                            note:\n                                              type: string\n                                            showNoteWhenEmpty:\n                                              description: 'If true, will display note when empty'\n                                              type: boolean\n                                            colors:\n                                              description: Colors define color encoding of data into a visualization\n                                              type: array\n                                              items:\n                                                $ref: '#/paths/~1dashboards/post/responses/201/content/application~1json/schema/oneOf/1/allOf/1/properties/cells/items/allOf/1/properties/properties/oneOf/0/properties/colors/items'\n                                            layers:\n                                              description: List of individual layers shown in the map\n                                              type: array\n                                              items:\n                                                type: object\n                                                oneOf:\n                                                  - allOf:\n                                                      - type: object\n                                                        required:\n                                                          - type\n                                                        properties:\n                                                          type:\n                                                            type: string\n                                                            enum:\n                                                              - heatmap\n                                                              - circleMap\n                                                              - pointMap\n                                                              - trackMap\n                                                      - type: object\n                                                        required:\n                                                          - radiusField\n                                                          - radiusDimension\n                                                          - colorField\n                                                          - colorDimension\n                                                          - colors\n                                                        properties:\n                                                          radiusField:\n                                                            type: string\n                                                            description: Radius field\n                                                          radiusDimension:\n                                                            $ref: '#/paths/~1dashboards/post/responses/201/content/application~1json/schema/oneOf/1/allOf/1/properties/cells/items/allOf/1/properties/properties/oneOf/0/properties/axes/properties/x'\n                                                          colorField:\n                                                            type: string\n                                                            description: Circle color field\n                                                          colorDimension:\n                                                            $ref: '#/paths/~1dashboards/post/responses/201/content/application~1json/schema/oneOf/1/allOf/1/properties/cells/items/allOf/1/properties/properties/oneOf/0/properties/axes/properties/x'\n                                                          colors:\n                                                            description: Colors define color encoding of data into a visualization\n                                                            type: array\n                                                            items:\n                                                              $ref: '#/paths/~1dashboards/post/responses/201/content/application~1json/schema/oneOf/1/allOf/1/properties/cells/items/allOf/1/properties/properties/oneOf/0/properties/colors/items'\n                                                          radius:\n                                                            description: Maximum radius size in pixels\n                                                            type: integer\n                                                          interpolateColors:\n                                                            description: Interpolate circle color based on displayed value\n                                                            type: boolean\n                                                  - allOf:\n                                                      - $ref: '#/paths/~1dashboards/post/responses/201/content/application~1json/schema/oneOf/1/allOf/1/properties/cells/items/allOf/1/properties/properties/oneOf/13/properties/layers/items/oneOf/0/allOf/0'\n                                                      - type: object\n                                                        required:\n                                                          - intensityField\n                                                          - intensityDimension\n                                                          - radius\n                                                          - blur\n                                                          - colors\n                                                        properties:\n                                                          intensityField:\n                                                            type: string\n                                                            description: Intensity field\n                                                          intensityDimension:\n                                                            $ref: '#/paths/~1dashboards/post/responses/201/content/application~1json/schema/oneOf/1/allOf/1/properties/cells/items/allOf/1/properties/properties/oneOf/0/properties/axes/properties/x'\n                                                          radius:\n                                                            description: Radius size in pixels\n                                                            type: integer\n                                                          blur:\n                                                            description: Blur for heatmap points\n                                                            type: integer\n                                                          colors:\n                                                            description: Colors define color encoding of data into a visualization\n                                                            type: array\n                                                            items:\n                                                              $ref: '#/paths/~1dashboards/post/responses/201/content/application~1json/schema/oneOf/1/allOf/1/properties/cells/items/allOf/1/properties/properties/oneOf/0/properties/colors/items'\n                                                  - allOf:\n                                                      - $ref: '#/paths/~1dashboards/post/responses/201/content/application~1json/schema/oneOf/1/allOf/1/properties/cells/items/allOf/1/properties/properties/oneOf/13/properties/layers/items/oneOf/0/allOf/0'\n                                                      - type: object\n                                                        required:\n                                                          - colorField\n                                                          - colorDimension\n                                                          - colors\n                                                        properties:\n                                                          colorField:\n                                                            type: string\n                                                            description: Marker color field\n                                                          colorDimension:\n                                                            $ref: '#/paths/~1dashboards/post/responses/201/content/application~1json/schema/oneOf/1/allOf/1/properties/cells/items/allOf/1/properties/properties/oneOf/0/properties/axes/properties/x'\n                                                          colors:\n                                                            description: Colors define color encoding of data into a visualization\n                                                            type: array\n                                                            items:\n                                                              $ref: '#/paths/~1dashboards/post/responses/201/content/application~1json/schema/oneOf/1/allOf/1/properties/cells/items/allOf/1/properties/properties/oneOf/0/properties/colors/items'\n                                                          isClustered:\n                                                            description: Cluster close markers together\n                                                            type: boolean\n                                                          tooltipColumns:\n                                                            description: An array for which columns to display in tooltip\n                                                            type: array\n                                                            items:\n                                                              type: string\n                                                  - allOf:\n                                                      - $ref: '#/paths/~1dashboards/post/responses/201/content/application~1json/schema/oneOf/1/allOf/1/properties/cells/items/allOf/1/properties/properties/oneOf/13/properties/layers/items/oneOf/0/allOf/0'\n                                                      - type: object\n                                                        required:\n                                                          - trackWidth\n                                                          - speed\n                                                          - randomColors\n                                                          - trackPointVisualization\n                                                    properties:\n                                                      trackWidth:\n                                                        description: Width of the track\n                                                        type: integer\n                                                      speed:\n                                                        description: Speed of the track animation\n                                                        type: integer\n                                                      randomColors:\n                                                        description: Assign different colors to different tracks\n                                                        type: boolean\n                                                      colors:\n                                                        description: Colors define color encoding of data into a visualization\n                                                        type: array\n                                                        items:\n                                                          $ref: '#/paths/~1dashboards/post/responses/201/content/application~1json/schema/oneOf/1/allOf/1/properties/cells/items/allOf/1/properties/properties/oneOf/0/properties/colors/items'\n                          labels:\n                            $ref: '#/components/schemas/Variable/properties/labels'\n        default:\n          description: Unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: '#/paths/~1tasks/get/responses/default/content/application~1json/schema'\n    get:\n      operationId: GetDashboards\n      tags:\n        - Dashboards\n      summary: List all dashboards\n      parameters:\n        - $ref: '#/paths/~1users/get/parameters/0'\n        - in: query\n          name: offset\n          required: false\n          schema:\n            type: integer\n            minimum: 0\n        - in: query\n          name: descending\n          required: false\n          schema:\n            type: boolean\n            default: false\n        - in: query\n          name: limit\n          schema:\n            type: integer\n            minimum: -1\n            maximum: 100\n            default: 20\n          description: The non-zero number of dashboards to return\n        - in: query\n          name: owner\n          description: A user identifier. Returns only dashboards where this user has the `owner` role.\n          schema:\n            type: string\n        - in: query\n          name: sortBy\n          description: The column to sort by.\n          schema:\n            type: string\n            enum:\n              - ID\n              - CreatedAt\n              - UpdatedAt\n        - in: query\n          name: id\n          description: 'A list of dashboard identifiers. Returns only the listed dashboards. If both `id` and `owner` are specified, only `id` is used.'\n          schema:\n            type: array\n            items:\n              type: string\n        - in: query\n          name: orgID\n          description: The identifier of the organization.\n          schema:\n            type: string\n        - in: query\n          name: org\n          description: The name of the organization.\n          schema:\n            type: string\n      responses:\n        '200':\n          description: All dashboards\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  links:\n                    type: object\n                    properties:\n                      next:\n                        $ref: '#/paths/~1tasks/post/responses/201/content/application~1json/schema/properties/links/properties/self'\n                      self:\n                        $ref: '#/paths/~1tasks/post/responses/201/content/application~1json/schema/properties/links/properties/self'\n                      prev:\n                        $ref: '#/paths/~1tasks/post/responses/201/content/application~1json/schema/properties/links/properties/self'\n                    required:\n                      - self\n                  dashboards:\n                    type: array\n                    items:\n                      $ref: '#/paths/~1dashboards/post/responses/201/content/application~1json/schema/oneOf/0'\n        default:\n          description: Unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: '#/paths/~1tasks/get/responses/default/content/application~1json/schema'\n  /tasks:\n    get:\n      operationId: GetTasks\n      tags:\n        - Tasks\n      summary: List all tasks\n      parameters:\n        - $ref: '#/paths/~1users/get/parameters/0'\n        - in: query\n          name: name\n          description: Returns task with a specific name.\n          schema:\n            type: string\n        - in: query\n          name: after\n          schema:\n            type: string\n          description: Return tasks after a specified ID.\n        - in: query\n          name: user\n          schema:\n            type: string\n          description: Filter tasks to a specific user ID.\n        - in: query\n          name: org\n          schema:\n            type: string\n          description: Filter tasks to a specific organization name.\n        - in: query\n          name: orgID\n          schema:\n            type: string\n          description: Filter tasks to a specific organization ID.\n        - in: query\n          name: status\n          schema:\n            type: string\n            enum:\n              - active\n              - inactive\n          description: Filter tasks by a status--\"inactive\" or \"active\".\n        - in: query\n          name: limit\n          schema:\n            type: integer\n            minimum: -1\n            maximum: 500\n            default: 100\n          description: The non-zero number of tasks to return\n        - in: query\n          name: offset\n          required: false\n          schema:\n            type: integer\n            minimum: 0\n            default: 0\n          description: The number of records to skip\n        - in: query\n          name: sortBy\n          description: Field that records should be sorted by\n          required: false\n          schema:\n            type: string\n            enum:\n              - name\n        - in: query\n          name: type\n          description: 'Type of task, unset by default.'\n          required: false\n          schema:\n            default: ''\n            type: string\n            enum:\n              - basic\n              - system\n      responses:\n        '200':\n          description: A list of tasks\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  links:\n                    readOnly: true\n                    $ref: '#/paths/~1dashboards/get/responses/200/content/application~1json/schema/properties/links'\n                  tasks:\n                    type: array\n                    items:\n                      $ref: '#/paths/~1tasks/post/responses/201/content/application~1json/schema'\n        default:\n          description: Unexpected error\n          content:\n            application/json:\n              schema:\n                properties:\n                  code:\n                    description: code is the machine-readable error code.\n                    readOnly: true\n                    type: string\n                    enum:\n                      - internal error\n                      - not found\n                      - conflict\n                      - invalid\n                      - unprocessable entity\n                      - empty value\n                      - unavailable\n                      - forbidden\n                      - too many requests\n                      - unauthorized\n                      - method not allowed\n                      - request too large\n                      - unsupported media type\n                  message:\n                    readOnly: true\n                    description: Human-readable message.\n                    type: string\n                  op:\n                    readOnly: true\n                    description: Describes the logical code operation when the error occurred. Useful for debugging.\n                    type: string\n                  err:\n                    readOnly: true\n                    description: Stack of errors that occurred during processing of the request. Useful for debugging.\n                    type: string\n                required:\n                  - code\n    post:\n      operationId: PostTasks\n      tags:\n        - Tasks\n      summary: Create a new task\n      parameters:\n        - $ref: '#/paths/~1users/get/parameters/0'\n      requestBody:\n        description: Task to create\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                orgID:\n                  description: The ID of the organization that owns this Task.\n                  type: string\n                org:\n                  description: The name of the organization that owns this Task.\n                  type: string\n                status:\n                  type: string\n                  enum:\n                    - active\n                    - inactive\n                flux:\n                  description: The Flux script to run for this task.\n                  type: string\n                description:\n                  description: An optional description of the task.\n                  type: string\n              required:\n                - flux\n      responses:\n        '201':\n          description: Task created\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  id:\n                    readOnly: true\n                    type: string\n                  type:\n                    description: 'The type of the task, useful for filtering a task list.'\n                    type: string\n                  orgID:\n                    description: The ID of the organization that owns the task.\n                    type: string\n                  org:\n                    description: The name of the organization that owns the task.\n                    type: string\n                  name:\n                    description: The name of the task.\n                    type: string\n                  ownerID:\n                    description: The ID of the user who owns this Task.\n                    type: string\n                  description:\n                    description: The description of the task.\n                    type: string\n                  status:\n                    $ref: '#/paths/~1tasks/post/requestBody/content/application~1json/schema/properties/status'\n                  labels:\n                    $ref: '#/components/schemas/Variable/properties/labels'\n                  authorizationID:\n                    description: The ID of the authorization used when the task communicates with the query engine.\n                    type: string\n                  flux:\n                    description: The Flux script to run for this task.\n                    type: string\n                  every:\n                    description: 'An interval ([duration literal](https://docs.influxdata.com/flux/v0.x/spec/lexical-elements/#duration-literals))) at which the task runs. `every` also determines when the task first runs, depending on the specified time.'\n                    type: string\n                    format: duration\n                  cron:\n                    description: '[Cron expression](https://en.wikipedia.org/wiki/Cron#Overview) that defines the schedule on which the task runs. InfluxDB bases cron runs on the system time.'\n                    type: string\n                  offset:\n                    description: 'A [duration](https://docs.influxdata.com/flux/v0.x/spec/lexical-elements/#duration-literals) to delay execution of the task after the scheduled time has elapsed. `0` removes the offset.'\n                    type: string\n                    format: duration\n                  latestCompleted:\n                    description: 'A timestamp ([RFC3339 date/time format](https://docs.influxdata.com/flux/v0.x/data-types/basic/time/#time-syntax)) of the latest scheduled and completed run.'\n                    type: string\n                    format: date-time\n                    readOnly: true\n                  lastRunStatus:\n                    readOnly: true\n                    type: string\n                    enum:\n                      - failed\n                      - success\n                      - canceled\n                  lastRunError:\n                    readOnly: true\n                    type: string\n                  createdAt:\n                    type: string\n                    format: date-time\n                    readOnly: true\n                  updatedAt:\n                    type: string\n                    format: date-time\n                    readOnly: true\n                  links:\n                    type: object\n                    readOnly: true\n                    example:\n                      self: /api/v2/tasks/1\n                      owners: /api/v2/tasks/1/owners\n                      members: /api/v2/tasks/1/members\n                      labels: /api/v2/tasks/1/labels\n                      runs: /api/v2/tasks/1/runs\n                      logs: /api/v2/tasks/1/logs\n                    properties:\n                      self:\n                        type: string\n                        format: uri\n                        readOnly: true\n                        description: URI of resource.\n                      owners:\n                        $ref: '#/paths/~1tasks/post/responses/201/content/application~1json/schema/properties/links/properties/self'\n                      members:\n                        $ref: '#/paths/~1tasks/post/responses/201/content/application~1json/schema/properties/links/properties/self'\n                      runs:\n                        $ref: '#/paths/~1tasks/post/responses/201/content/application~1json/schema/properties/links/properties/self'\n                      logs:\n                        $ref: '#/paths/~1tasks/post/responses/201/content/application~1json/schema/properties/links/properties/self'\n                      labels:\n                        $ref: '#/paths/~1tasks/post/responses/201/content/application~1json/schema/properties/links/properties/self'\n                required:\n                  - id\n                  - name\n                  - orgID\n                  - flux\n        default:\n          description: Unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: '#/paths/~1tasks/get/responses/default/content/application~1json/schema'\ncomponents:\n  parameters: null\n  schemas:\n    Resource:\n      type: object\n      required:\n        - type\n      properties:\n        type:\n          type: string\n          enum:\n            - authorizations\n            - buckets\n            - dashboards\n            - orgs\n            - tasks\n            - telegrafs\n            - users\n            - variables\n            - secrets\n            - labels\n            - views\n            - documents\n            - notificationRules\n            - notificationEndpoints\n            - checks\n            - dbrp\n            - flows\n            - annotations\n            - functions\n        id:\n          type: string\n          nullable: true\n          description: If ID is set that is a permission for a specific resource. if it is not set it is a permission for all resources of that resource type.\n        name:\n          type: string\n          nullable: true\n          description: Optional name of the resource if the resource has a name field.\n        orgID:\n          type: string\n          nullable: true\n          description: If orgID is set that is a permission for all resources owned my that org. if it is not set it is a permission for all resources of that resource type.\n        org:\n          type: string\n          nullable: true\n          description: Optional name of the organization of the organization with orgID.\n    Permission:\n      required:\n        - action\n        - resource\n      properties:\n        action:\n          type: string\n          enum:\n            - read\n            - write\n        resource:\n          $ref: '#/components/schemas/Resource'\n    Authorization:\n      required:\n        - orgID\n        - permissions\n      allOf:\n        - properties:\n            status:\n              description: 'Status of the token. If `inactive`, requests using the token will be rejected.'\n              default: active\n              type: string\n              enum:\n                - active\n                - inactive\n            description:\n              type: string\n              description: A description of the token.\n        - type: object\n          properties:\n            createdAt:\n              type: string\n              format: date-time\n              readOnly: true\n            updatedAt:\n              type: string\n              format: date-time\n              readOnly: true\n            orgID:\n              type: string\n              description: ID of org that authorization is scoped to.\n            permissions:\n              type: array\n              minItems: 1\n              description: List of permissions for an auth.  An auth must have at least one Permission.\n              items:\n                $ref: '#/components/schemas/Permission'\n            id:\n              readOnly: true\n              type: string\n            token:\n              readOnly: true\n              type: string\n              description: Passed via the Authorization Header and Token Authentication type.\n            userID:\n              readOnly: true\n              type: string\n              description: ID of user that created and owns the token.\n            user:\n              readOnly: true\n              type: string\n              description: Name of user that created and owns the token.\n            org:\n              readOnly: true\n              type: string\n              description: Name of the org token is scoped to.\n            links:\n              type: object\n              readOnly: true\n              example:\n                self: /api/v2/authorizations/1\n                user: /api/v2/users/12\n              properties:\n                self:\n                  readOnly: true\n                  $ref: '#/paths/~1tasks/post/responses/201/content/application~1json/schema/properties/links/properties/self'\n                user:\n                  readOnly: true\n                  $ref: '#/paths/~1tasks/post/responses/201/content/application~1json/schema/properties/links/properties/self'\n    Authorizations:\n      type: object\n      properties:\n        links:\n          readOnly: true\n          $ref: '#/paths/~1dashboards/get/responses/200/content/application~1json/schema/properties/links'\n        authorizations:\n          type: array\n          items:\n            $ref: '#/components/schemas/Authorization'\n    User:\n      properties:\n        id:\n          readOnly: true\n          type: string\n        oauthID:\n          type: string\n        name:\n          type: string\n        status:\n          description: If inactive the user is inactive.\n          default: active\n          type: string\n          enum:\n            - active\n            - inactive\n        role:\n          type: string\n          enum:\n            - owner\n            - member\n        org_id:\n          type: string\n      required:\n        - name\n    Users:\n      type: object\n      properties:\n        links:\n          type: object\n          properties:\n            self:\n              type: string\n              format: uri\n        users:\n          type: array\n          items:\n            $ref: '#/components/schemas/OnboardingResponse/properties/user'\n    OnboardingRequest:\n      type: object\n      properties:\n        username:\n          type: string\n        password:\n          type: string\n        org:\n          type: string\n        bucket:\n          type: string\n        retentionPeriodHrs:\n          type: integer\n          deprecated: true\n        retentionPeriodSeconds:\n          type: integer\n        limit:\n          $ref: '#/components/schemas/Limit'\n      required:\n        - username\n        - org\n        - bucket\n    OnboardingResponse:\n      type: object\n      properties:\n        user:\n          properties:\n            id:\n              readOnly: true\n              type: string\n            oauthID:\n              type: string\n            name:\n              type: string\n            status:\n              description: If inactive the user is inactive.\n              default: active\n              type: string\n              enum:\n                - active\n                - inactive\n            links:\n              type: object\n              readOnly: true\n              example:\n                self: /api/v2/users/1\n              properties:\n                self:\n                  type: string\n                  format: uri\n          required:\n            - name\n        org:\n          properties:\n            links:\n              type: object\n              readOnly: true\n              example:\n                self: /api/v2/orgs/1\n                members: /api/v2/orgs/1/members\n                owners: /api/v2/orgs/1/owners\n                labels: /api/v2/orgs/1/labels\n                secrets: /api/v2/orgs/1/secrets\n                buckets: /api/v2/buckets?org=myorg\n                tasks: /api/v2/tasks?org=myorg\n                dashboards: /api/v2/dashboards?org=myorg\n              properties:\n                self:\n                  $ref: '#/paths/~1tasks/post/responses/201/content/application~1json/schema/properties/links/properties/self'\n                members:\n                  $ref: '#/paths/~1tasks/post/responses/201/content/application~1json/schema/properties/links/properties/self'\n                owners:\n                  $ref: '#/paths/~1tasks/post/responses/201/content/application~1json/schema/properties/links/properties/self'\n                labels:\n                  $ref: '#/paths/~1tasks/post/responses/201/content/application~1json/schema/properties/links/properties/self'\n                secrets:\n                  $ref: '#/paths/~1tasks/post/responses/201/content/application~1json/schema/properties/links/properties/self'\n                buckets:\n                  $ref: '#/paths/~1tasks/post/responses/201/content/application~1json/schema/properties/links/properties/self'\n                tasks:\n                  $ref: '#/paths/~1tasks/post/responses/201/content/application~1json/schema/properties/links/properties/self'\n                dashboards:\n                  $ref: '#/paths/~1tasks/post/responses/201/content/application~1json/schema/properties/links/properties/self'\n            id:\n              readOnly: true\n              type: string\n            name:\n              type: string\n            description:\n              type: string\n            createdAt:\n              type: string\n              format: date-time\n              readOnly: true\n            updatedAt:\n              type: string\n              format: date-time\n              readOnly: true\n            status:\n              description: If inactive the organization is inactive.\n              default: active\n              type: string\n              enum:\n                - active\n                - inactive\n          required:\n            - name\n        bucket:\n          properties:\n            links:\n              type: object\n              readOnly: true\n              example:\n                labels: /api/v2/buckets/1/labels\n                members: /api/v2/buckets/1/members\n                org: /api/v2/orgs/2\n                owners: /api/v2/buckets/1/owners\n                self: /api/v2/buckets/1\n                write: /api/v2/write?org=2\u0026bucket=1\n              properties:\n                labels:\n                  description: URL to retrieve labels for this bucket.\n                  $ref: '#/paths/~1tasks/post/responses/201/content/application~1json/schema/properties/links/properties/self'\n                members:\n                  description: URL to retrieve members that can read this bucket.\n                  $ref: '#/paths/~1tasks/post/responses/201/content/application~1json/schema/properties/links/properties/self'\n                org:\n                  description: URL to retrieve parent organization for this bucket.\n                  $ref: '#/paths/~1tasks/post/responses/201/content/application~1json/schema/properties/links/properties/self'\n                owners:\n                  description: URL to retrieve owners that can read and write to this bucket.\n                  $ref: '#/paths/~1tasks/post/responses/201/content/application~1json/schema/properties/links/properties/self'\n                self:\n                  description: URL for this bucket.\n                  $ref: '#/paths/~1tasks/post/responses/201/content/application~1json/schema/properties/links/properties/self'\n                write:\n                  description: URL to write line protocol to this bucket.\n                  $ref: '#/paths/~1tasks/post/responses/201/content/application~1json/schema/properties/links/properties/self'\n            id:\n              readOnly: true\n              type: string\n            type:\n              readOnly: true\n              type: string\n              default: user\n              enum:\n                - user\n                - system\n            name:\n              type: string\n            description:\n              type: string\n            orgID:\n              type: string\n            rp:\n              type: string\n            schemaType:\n              default: implicit\n              type: string\n              enum:\n                - implicit\n                - explicit\n            createdAt:\n              type: string\n              format: date-time\n              readOnly: true\n            updatedAt:\n              type: string\n              format: date-time\n              readOnly: true\n            retentionRules:\n              type: array\n              description: Rules to expire or retain data.  No rules means data never expires.\n              items:\n                type: object\n                properties:\n                  type:\n                    type: string\n                    default: expire\n                    enum:\n                      - expire\n                  everySeconds:\n                    type: integer\n                    format: int64\n                    description: Duration in seconds for how long data will be kept in the database. 0 means infinite.\n                    example: 86400\n                    minimum: 0\n                  shardGroupDurationSeconds:\n                    type: integer\n                    format: int64\n                    description: Shard duration measured in seconds.\n                required:\n                  - type\n                  - everySeconds\n            labels:\n              $ref: '#/components/schemas/Variable/properties/labels'\n          required:\n            - name\n            - retentionRules\n        auth:\n          $ref: '#/components/schemas/Authorization'\n    Limit:\n      type: object\n      description: These are org limits similar to those configured in/by quartz.\n      properties:\n        orgID:\n          type: string\n        rate:\n          type: object\n          properties:\n            queryTime:\n              type: integer\n              description: Query Time in nanoseconds\n            readKBs:\n              type: integer\n              description: Query limit in kb/sec. 0 is unlimited.\n            concurrentReadRequests:\n              type: integer\n              description: Allowed concurrent queries. 0 is unlimited.\n            writeKBs:\n              type: integer\n              description: Write limit in kb/sec. 0 is unlimited.\n            concurrentWriteRequests:\n              type: integer\n              description: Allowed concurrent writes. 0 is unlimited.\n            cardinality:\n              type: integer\n              description: Allowed organization total cardinality. 0 is unlimited.\n            concurrentDeleteRequests:\n              type: integer\n              description: Allowed organization concurrent outstanding delete requests.\n            deleteRequestsPerSecond:\n              type: integer\n              description: Allowed organization delete request rate.\n          required:\n            - readKBs\n            - queryTime\n            - concurrentReadRequests\n            - writeKBs\n            - concurrentWriteRequests\n            - cardinality\n        bucket:\n          type: object\n          properties:\n            maxBuckets:\n              type: integer\n            maxRetentionDuration:\n              type: integer\n              description: Max bucket retention duration in nanoseconds. 0 is unlimited.\n          required:\n            - maxBuckets\n            - maxRetentionDuration\n        task:\n          type: object\n          properties:\n            maxTasks:\n              type: integer\n          required:\n            - maxTasks\n        dashboard:\n          type: object\n          properties:\n            maxDashboards:\n              type: integer\n          required:\n            - maxDashboards\n        check:\n          type: object\n          properties:\n            maxChecks:\n              type: integer\n          required:\n            - maxChecks\n        notificationRule:\n          type: object\n          properties:\n            maxNotifications:\n              type: integer\n            blockedNotificationRules:\n              type: string\n              description: comma separated list of notification rules\n              example: 'http,pagerduty'\n          required:\n            - maxNotifications\n            - blockNotificationRules\n        notificationEndpoint:\n          type: object\n          properties:\n            blockedNotificationEndpoints:\n              type: string\n              description: comma separated list of notification endpoints\n              example: 'http,pagerduty'\n          required:\n            - blockNotificationEndpoints\n        features:\n          type: object\n          properties:\n            allowDelete:\n              type: boolean\n              description: allow delete predicate endpoint\n      required:\n        - rate\n        - bucket\n        - task\n        - dashboard\n        - check\n        - notificationRule\n        - notificationEndpoint\n    Variable:\n      type: object\n      required:\n        - name\n        - orgID\n        - arguments\n      properties:\n        links:\n          type: object\n          readOnly: true\n          properties:\n            self:\n              type: string\n              format: uri\n            org:\n              type: string\n              format: uri\n            labels:\n              type: string\n              format: uri\n        id:\n          readOnly: true\n          type: string\n        orgID:\n          type: string\n        name:\n          type: string\n        description:\n          type: string\n        selected:\n          type: array\n          items:\n            type: string\n        sort_order:\n          type: integer\n        labels:\n          type: array\n          items:\n            type: object\n            properties:\n              id:\n                readOnly: true\n                type: string\n              orgID:\n                readOnly: true\n                type: string\n              name:\n                type: string\n              properties:\n                type: object\n                additionalProperties:\n                  type: string\n                description: Key/Value pairs associated with this label. Keys can be removed by sending an update with an empty value.\n                example:\n                  color: ffb3b3\n                  description: this is a description\n        arguments:\n          type: object\n          oneOf:\n            - properties:\n                type:\n                  type: string\n                  enum:\n                    - query\n                values:\n                  type: object\n                  properties:\n                    query:\n                      type: string\n                    language:\n                      type: string\n            - properties:\n                type:\n                  type: string\n                  enum:\n                    - constant\n                values:\n                  type: array\n                  items:\n                    type: string\n            - properties:\n                type:\n                  type: string\n                  enum:\n                    - map\n                values:\n                  type: object\n                  additionalProperties:\n                    type: string\n        createdAt:\n          type: string\n          format: date-time\n        updatedAt:\n          type: string\n          format: date-time\n    Variables:\n      type: object\n      example:\n        variables:\n          - id: '1221432'\n            name: ':ok:'\n            selected:\n              - hello\n            arguments:\n              type: constant\n              values:\n                - howdy\n                - hello\n                - hi\n                - yo\n                - oy\n          - id: '1221432'\n            name: ':ok:'\n            selected:\n              - c\n            arguments:\n              type: map\n              values:\n                a: fdjaklfdjkldsfjlkjdsa\n                b: dfaksjfkljekfajekdljfas\n                c: fdjksajfdkfeawfeea\n          - id: '1221432'\n            name: ':ok:'\n            selected:\n              - host\n            arguments:\n              type: query\n              query: 'from(bucket: \"foo\") |\u003e showMeasurements()'\n              language: flux\n      properties:\n        variables:\n          type: array\n          items:\n            $ref: '#/components/schemas/Variable'\n    ColumnDataType:\n      type: string\n      enum:\n        - integer\n        - float\n        - boolean\n        - string\n        - unsigned\n    ColumnSemanticType:\n      type: string\n      nullable: false\n      enum:\n        - timestamp\n        - tag\n        - field\n    MeasurementSchema:\n      description: Definition of a measurement schema.\n      type: object\n      example:\n        id: 1a3c5e7f9b0a8642\n        orgID: 0a3c5e7f9b0a0001\n        bucketID: ba3c5e7f9b0a0010\n        name: cpu\n        columns:\n          - name: time\n            type: integer\n            format: unix timestamp\n          - name: host\n            type: tag\n          - name: region\n            type: tag\n          - name: usage_user\n            type: field\n            dataType: float\n          - name: usage_user\n            type: field\n            dataType: float\n        createdAt: '2021-01-21T00:48:40.993Z'\n        updatedAt: '2021-01-21T00:48:40.993Z'\n      required:\n        - id\n        - name\n        - columns\n        - createdAt\n        - updatedAt\n      properties:\n        id:\n          type: string\n          readOnly: true\n        orgID:\n          type: string\n          description: ID of the organization that the measurement schema is associated with.\n        bucketID:\n          type: string\n          description: ID of the bucket that the measurement schema is associated with.\n        name:\n          type: string\n          nullable: false\n        columns:\n          description: Ordered collection of column definitions.\n          type: array\n          items:\n            $ref: '#/components/schemas/MeasurementSchemaColumn'\n        createdAt:\n          type: string\n          format: date-time\n          readOnly: true\n        updatedAt:\n          type: string\n          format: date-time\n          readOnly: true\n    MeasurementSchemaColumn:\n      description: Definition of a measurement schema column.\n      example:\n        name: time\n        type: integer\n        format: unix timestamp\n      type: object\n      required:\n        - name\n        - type\n      properties:\n        name:\n          type: string\n        type:\n          $ref: '#/components/schemas/ColumnSemanticType'\n        dataType:\n          $ref: '#/components/schemas/ColumnDataType'\n    MeasurementSchemaCreateRequest:\n      description: Create a new measurement schema.\n      type: object\n      example:\n        name: cpu\n        columns:\n          - name: time\n            type: integer\n            format: unix timestamp\n          - name: host\n            type: tag\n          - name: region\n            type: tag\n          - name: usage_user\n            type: field\n            dataType: float\n          - name: usage_user\n            type: field\n            dataType: float\n      required:\n        - name\n        - columns\n      properties:\n        name:\n          type: string\n        columns:\n          description: Ordered collection of column definitions.\n          type: array\n          items:\n            $ref: '#/components/schemas/MeasurementSchemaColumn'\n    MeasurementSchemaList:\n      description: A list of measurement schemas returning summary information\n      example:\n        measurementSchemas:\n          - id: 1a3c5e7f9b0a8642\n            orgID: 0a3c5e7f9b0a0001\n            bucketID: ba3c5e7f9b0a0010\n            name: cpu\n            createdAt: '2021-01-21T00:48:40.993Z'\n            updatedAt: '2021-01-21T00:48:40.993Z'\n          - id: 1a3c5e7f9b0a8643\n            orgID: 0a3c5e7f9b0a0001\n            bucketID: ba3c5e7f9b0a0010\n            name: memory\n            createdAt: '2021-01-21T00:48:40.993Z'\n            updatedAt: '2021-01-21T00:48:40.993Z'\n          - id: 1a3c5e7f9b0a8644\n            orgID: 0a3c5e7f9b0a0001\n            bucketID: ba3c5e7f9b0a0010\n            name: disk\n            createdAt: '2021-01-21T00:48:40.993Z'\n            updatedAt: '2021-01-21T00:48:40.993Z'\n      type: object\n      required:\n        - measurementSchemas\n      properties:\n        measurementSchemas:\n          type: array\n          items:\n            $ref: '#/components/schemas/MeasurementSchema'\n    MeasurementSchemaUpdateRequest:\n      description: Update an existing measurement schema\n      type: object\n      example:\n        columns:\n          - name: time\n            type: integer\n            format: unix timestamp\n          - name: host\n            type: tag\n          - name: region\n            type: tag\n          - name: usage_user\n            type: field\n            dataType: float\n          - name: usage_user\n            type: field\n            dataType: float\n      required:\n        - columns\n      properties:\n        columns:\n          description: An ordered collection of column definitions\n          type: array\n          items:\n            $ref: '#/components/schemas/MeasurementSchemaColumn'\n  responses: null\n  securitySchemes:\n    TokenAuthentication:\n      type: apiKey\n      name: Authorization\n      in: header\n      description: |\n        Use the [Token authentication](#section/Authentication/TokenAuthentication)\n        scheme to authenticate to the InfluxDB API.\n\n\n        In your API requests, send an `Authorization` header.\n        For the header value, provide the word `Token` followed by a space and an InfluxDB API token.\n        The word `Token` is case-sensitive.\n\n\n        ### Syntax\n\n        `Authorization: Token YOUR_INFLUX_TOKEN`\n\n\n        For more information and examples, see the following:\n          - [`/authorizations`](#tag/Authorizations) endpoint.\n          - [Authorize API requests]({{% INFLUXDB_DOCS_URL %}}/api-guide/api_intro/#authentication).\n          - [Manage API tokens]({{% INFLUXDB_DOCS_URL %}}/security/tokens/).\n    BasicAuthentication:\n      type: http\n      scheme: basic\n      description: |\n        ### Basic authentication scheme\n\n        Use the HTTP Basic authentication scheme for InfluxDB `/api/v2` API operations that support it:\n          - **username**: InfluxDB Cloud username\n          - **password**: InfluxDB Cloud API token\n\n        #### Example\n\n        `curl --get \"https://europe-west1-1.gcp.cloud2.influxdata.com/query\"\n              --user \"exampleuser@influxdata.com\":\"INFLUX_API_TOKEN\"`\n\n        Replace the following:\n        - *`exampleuser@influxdata.com`*: the email address that you signed up with\n        - *`INFLUX_API_TOKEN`*: your [InfluxDB API token]({{% INFLUXDB_DOCS_URL %}}/reference/glossary/#token)\nsecurity:\n  - TokenAuthentication: []\n"
		}
	},
	"Error": "parse: parse spec: parse operations: paths: /variables: get: operation \"GetVariables\": parameters: parse parameter \"\": resolve \"#/paths/~1users/get/parameters/0\" reference: component by reference not found"
}