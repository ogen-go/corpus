{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/CanalTP/Chaos"
		},
		"file": {
			"name": "swagger.yml",
			"size": 0,
			"path": "documentation/swagger.yml",
			"byteSize": 128069,
			"content": "openapi: 3.0.0\ninfo:\n  version: v1.5\n  title: Documentation of API Chaos\n  x-logo:\n    url: \"https://navitia.com/content/uploads/2021/04/logo-navitia-bleu@3x.png\"\n    backgroundColor: \"#FFFFFF\"\n    altText: \"The Famous Navitia Logo\"\n  description: \u003e\n    Chaos is the web service which can feed\n    [Navitia](https://github.com/CanalTP/navitia) with real-time\n    [disruptions](http://doc.navitia.io/#traffic-reports).\n\n\n    It can work together with [Kirin](https://github.com/CanalTP/kirin) which can feed [Navitia](https://github.com/CanalTP/navitia) with real-time delays.\n\n\n    Chaos manage disruptions and help you to communicate with your travelers on the best.\n\n\n    **Requirements**\n\n\n    Before using Chaos, you will need few things:\n     * a Navitia token, allowing you to request Navitia on a data coverage\n     * a customer ID\n     * a contributor ID\n\n    Your usual Kisio Digital interlocutor can provide you these elements and an access to the production or pre-production platform.\n\n\n    ***customer ID***\n\n\n    A customer (aka 'client') is a string value of your choice that will be set at your first cause, channel, severity or tag creation.\n    When set, all created resources will be related to this client.\n\n\n    ***contributor ID***\n\n\n    A contributor is a string value shared with Navitia to identify who's providing disruptions in your coverage(s). It's named 'rt_topics' in Navitia configuration.\n    You can use several contributors per client and in your coverage(s) for example to differentiate disruptions creators (web UI(s)/automated bot(s)).\n\n\n\n    ***Work with us***\n\n\n    Before using this fabulous API in production, you will need to share with Kisio Digital:\n     * integration specifications\n     * expected load your application will generate.\n\n    These two points are required to manage the Chaos platform.\n\n\n    To properly use following examples the values of hostname and port number should be updated depending on your configuration of the WebService access.\n\n  license:\n    name: AGPL\n    url: http://www.gnu.org/licenses/agpl-3.0.html\ntags:\n  - name: Category\n  - name: Channel\n  - name: Channel type\n  - name: Cause\n  - name: Disruption\n  - name: Draft\n  - name: Impact\n  - name: Property\n  - name: Severity\n  - name: Status\n  - name: Tag\n  - name: Traffic Reports\n  - name: Search\n  - name: Export\n  - name: History\n  - name: Contributor\npaths:\n  /categories:\n    get:\n      description: Retrieve the list of all categories\n      parameters:\n        - $ref: \"#/components/parameters/header_authorization\"\n        - $ref: \"#/components/parameters/header_coverage\"\n        - $ref: \"#/components/parameters/header_customer_id\"\n      tags:\n        - Category\n      responses:\n        \"200\":\n          description: List of categories\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  meta:\n                    type: object\n                  categories:\n                    type: array\n                    items:\n                      $ref: \"#/components/schemas/category\"\n    post:\n      description: Creates a category\n      parameters:\n        - $ref: \"#/components/parameters/header_authorization\"\n        - $ref: \"#/components/parameters/header_coverage\"\n        - $ref: \"#/components/parameters/header_customer_id_create_client\"\n      requestBody:\n        $ref: \"#/components/requestBodies/category_creation\"\n      tags:\n        - Category\n      responses:\n        \"201\":\n          description: Created category\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  category:\n                    $ref: \"#/components/schemas/category\"\n        \"400\":\n          description: Bad Request\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/error_occurred\"\n  \"/categories/{id}\":\n    get:\n      description: Retrieve the category identified by ID\n      parameters:\n        - $ref: \"#/components/parameters/header_authorization\"\n        - $ref: \"#/components/parameters/header_coverage\"\n        - $ref: \"#/components/parameters/header_customer_id\"\n        - name: id\n          in: path\n          required: true\n          description: Entity identifier\n          schema:\n            type: string\n      tags:\n        - Category\n      responses:\n        \"200\":\n          description: Category entity\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  category:\n                    $ref: \"#/components/schemas/category\"\n        \"400\":\n          description: Bad request\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  error:\n                    $ref: \"#/components/schemas/bad_id\"\n    put:\n      description: Update a category\n      parameters:\n        - $ref: \"#/components/parameters/header_authorization\"\n        - $ref: \"#/components/parameters/header_coverage\"\n        - $ref: \"#/components/parameters/header_customer_id\"\n        - name: id\n          in: path\n          required: true\n          description: Entity identifier\n          schema:\n            type: string\n      requestBody:\n        $ref: \"#/components/requestBodies/category_creation\"\n      tags:\n        - Category\n      responses:\n        \"200\":\n          description: Category entity\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  category:\n                    $ref: \"#/components/schemas/category\"\n        \"400\":\n          description: Bad Request\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/error_occurred\"\n    delete:\n      description: remove a category\n      parameters:\n        - $ref: \"#/components/parameters/header_authorization\"\n        - $ref: \"#/components/parameters/header_coverage\"\n        - $ref: \"#/components/parameters/header_customer_id\"\n        - name: id\n          in: path\n          required: true\n          description: Entity identifier\n          schema:\n            type: string\n      tags:\n        - Category\n      responses:\n        \"204\":\n          description: Category has been removed\n        \"400\":\n          description: Bad request\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  error:\n                    $ref: \"#/components/schemas/bad_id\"\n  /causes:\n    get:\n      description: Retrieve the list of all causes\n      parameters:\n        - $ref: \"#/components/parameters/header_authorization\"\n        - $ref: \"#/components/parameters/header_coverage\"\n        - $ref: \"#/components/parameters/header_customer_id\"\n      tags:\n        - Cause\n      responses:\n        \"200\":\n          description: List of causes\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  meta:\n                    type: object\n                  causes:\n                    type: array\n                    items:\n                      $ref: \"#/components/schemas/cause\"\n    post:\n      description: Creates a cause\n      parameters:\n        - $ref: \"#/components/parameters/header_authorization\"\n        - $ref: \"#/components/parameters/header_coverage\"\n        - $ref: \"#/components/parameters/header_customer_id_create_client\"\n      requestBody:\n        $ref: \"#/components/requestBodies/cause_creation\"\n      tags:\n        - Cause\n      responses:\n        \"201\":\n          description: Created cause\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  cause:\n                    $ref: \"#/components/schemas/cause\"\n        \"400\":\n          description: Bad Request\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/error_occurred\"\n  \"/causes/{id}\":\n    get:\n      description: Retrieve the cause identified by ID\n      parameters:\n        - $ref: \"#/components/parameters/header_authorization\"\n        - $ref: \"#/components/parameters/header_coverage\"\n        - $ref: \"#/components/parameters/header_customer_id\"\n        - name: id\n          in: path\n          required: true\n          description: Entity identifier\n          schema:\n            type: string\n      tags:\n        - Cause\n      responses:\n        \"200\":\n          description: Cause entity\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  cause:\n                    $ref: \"#/components/schemas/cause\"\n        \"400\":\n          description: Wrong ID\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  error:\n                    $ref: \"#/components/schemas/bad_id\"\n        \"404\":\n          description: Not Found\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/error_404\"\n    put:\n      description: Update a cause\n      parameters:\n        - $ref: \"#/components/parameters/header_authorization\"\n        - $ref: \"#/components/parameters/header_coverage\"\n        - $ref: \"#/components/parameters/header_customer_id\"\n        - name: id\n          in: path\n          required: true\n          description: Entity identifier\n          schema:\n            type: string\n      requestBody:\n        $ref: \"#/components/requestBodies/cause_creation\"\n      tags:\n        - Cause\n      responses:\n        \"200\":\n          description: Cause entity\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  cause:\n                    $ref: \"#/components/schemas/cause\"\n        \"400\":\n          description: Bad Request\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/error_occurred\"\n        \"404\":\n          description: Not Found\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/error_404\"\n    delete:\n      description: remove a cause\n      parameters:\n        - $ref: \"#/components/parameters/header_authorization\"\n        - $ref: \"#/components/parameters/header_coverage\"\n        - $ref: \"#/components/parameters/header_customer_id\"\n        - name: id\n          in: path\n          required: true\n          description: Entity identifier\n          schema:\n            type: string\n      tags:\n        - Cause\n      responses:\n        \"204\":\n          description: Cause has been removed\n        \"400\":\n          description: Wrong ID\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  error:\n                    $ref: \"#/components/schemas/bad_id\"\n        \"404\":\n          description: Not Found\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/error_404\"\n        \"409\":\n          description: Conflict\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/error_occurred\"\n  /channels:\n    get:\n      description: Retrieves all the channels\n      parameters:\n        - $ref: \"#/components/parameters/header_authorization\"\n        - $ref: \"#/components/parameters/header_coverage\"\n        - $ref: \"#/components/parameters/header_customer_id\"\n      tags:\n        - Channel\n      responses:\n        \"200\":\n          description: List of channels\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  meta:\n                    type: object\n                  channels:\n                    type: array\n                    items:\n                      $ref: \"#/components/schemas/channel\"\n    post:\n      description: Creates a channel\n      parameters:\n        - $ref: \"#/components/parameters/header_authorization\"\n        - $ref: \"#/components/parameters/header_coverage\"\n        - $ref: \"#/components/parameters/header_customer_id_create_client\"\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/channel_creation\"\n        description: Channel that needs to be stored\n      tags:\n        - Channel\n      responses:\n        \"201\":\n          description: Created channel\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  channel:\n                    $ref: \"#/components/schemas/channel\"\n        \"400\":\n          description: Bad Request\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/error_occurred\"\n  \"/channels/{id}\":\n    get:\n      description: Retrieve the channel identified by ID\n      parameters:\n        - $ref: \"#/components/parameters/header_authorization\"\n        - $ref: \"#/components/parameters/header_coverage\"\n        - $ref: \"#/components/parameters/header_customer_id\"\n        - name: id\n          in: path\n          required: true\n          description: Entity identifier\n          schema:\n            type: string\n      tags:\n        - Channel\n      responses:\n        \"200\":\n          description: Channel entity\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  channel:\n                    $ref: \"#/components/schemas/channel\"\n        \"400\":\n          description: ID is wrong\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/error_occurred\"\n        \"404\":\n          description: Not Found\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/error_404\"\n    put:\n      description: Update a channel\n      parameters:\n        - $ref: \"#/components/parameters/header_authorization\"\n        - $ref: \"#/components/parameters/header_coverage\"\n        - $ref: \"#/components/parameters/header_customer_id\"\n        - name: id\n          in: path\n          required: true\n          description: Entity identifier\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/channel_creation\"\n        description: Category that needs to be stored\n      tags:\n        - Channel\n      responses:\n        \"200\":\n          description: Channel entity\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  channel:\n                    $ref: \"#/components/schemas/channel\"\n        \"400\":\n          description: Bad Request\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/error_occurred\"\n        \"404\":\n          description: Not Found\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/error_404\"\n    delete:\n      description: remove a channel\n      parameters:\n        - $ref: \"#/components/parameters/header_authorization\"\n        - $ref: \"#/components/parameters/header_coverage\"\n        - $ref: \"#/components/parameters/header_customer_id\"\n        - name: id\n          in: path\n          required: true\n          description: Entity identifier\n          schema:\n            type: string\n      tags:\n        - Channel\n      responses:\n        \"204\":\n          description: Channel has been removed\n        \"400\":\n          description: Wrong ID\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/error_occurred\"\n        \"404\":\n          description: Not Found\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/error_404\"\n  /channel_types:\n    get:\n      description: Retrieve the list of channel types\n      parameters:\n        - $ref: \"#/components/parameters/header_authorization\"\n        - $ref: \"#/components/parameters/header_coverage\"\n        - $ref: \"#/components/parameters/header_customer_id\"\n      tags:\n        - Channel type\n      responses:\n        \"200\":\n          description: List of channel types\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  channel_types:\n                    type: array\n                    items:\n                      type: string\n  /properties:\n    get:\n      description: Retrieve the list of all properties\n      parameters:\n        - $ref: \"#/components/parameters/header_authorization\"\n        - $ref: \"#/components/parameters/header_coverage\"\n        - $ref: \"#/components/parameters/header_customer_id\"\n        - $ref: \"#/components/parameters/header_contributors\"\n      tags:\n        - Property\n      responses:\n        \"200\":\n          description: List of properties\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  properties:\n                    type: array\n                    items:\n                      $ref: \"#/components/schemas/property\"\n    post:\n      description: Creates a property\n      parameters:\n        - $ref: \"#/components/parameters/header_authorization\"\n        - $ref: \"#/components/parameters/header_coverage\"\n        - $ref: \"#/components/parameters/header_customer_id_create_client\"\n        - $ref: \"#/components/parameters/header_contributors\"\n      requestBody:\n        $ref: \"#/components/requestBodies/property_creation\"\n      tags:\n        - Property\n      responses:\n        \"201\":\n          description: Created\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  property:\n                    $ref: \"#/components/schemas/property\"\n        \"400\":\n          description: Bad Request\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/error_occurred\"\n        \"409\":\n          description: Conflict\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/error_occurred\"\n  \"/properties/{id}\":\n    get:\n      description: Retrieve the property identified by ID\n      parameters:\n        - $ref: \"#/components/parameters/header_authorization\"\n        - $ref: \"#/components/parameters/header_coverage\"\n        - $ref: \"#/components/parameters/header_customer_id\"\n        - name: id\n          in: path\n          required: true\n          description: Entity identifier\n          schema:\n            type: string\n      tags:\n        - Property\n      responses:\n        \"200\":\n          description: Property entity\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  property:\n                    $ref: \"#/components/schemas/property\"\n        \"400\":\n          description: Bad request\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/error_occurred\"\n        \"404\":\n          description: Not Found\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/error_occurred\"\n    put:\n      description: Update a property\n      parameters:\n        - $ref: \"#/components/parameters/header_authorization\"\n        - $ref: \"#/components/parameters/header_coverage\"\n        - $ref: \"#/components/parameters/header_customer_id\"\n        - name: id\n          in: path\n          required: true\n          description: Entity identifier\n          schema:\n            type: string\n      requestBody:\n        $ref: \"#/components/requestBodies/property_creation\"\n      tags:\n        - Property\n      responses:\n        \"200\":\n          description: Property entity\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/property\"\n        \"400\":\n          description: Bad Request\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/error_occurred\"\n        \"404\":\n          description: Not Found\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/error_occurred\"\n        \"409\":\n          description: Conflict\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/error_occurred\"\n    delete:\n      description: remove a property\n      parameters:\n        - $ref: \"#/components/parameters/header_authorization\"\n        - $ref: \"#/components/parameters/header_coverage\"\n        - $ref: \"#/components/parameters/header_customer_id\"\n        - name: id\n          in: path\n          required: true\n          description: Entity identifier\n          schema:\n            type: string\n      tags:\n        - Property\n      responses:\n        \"204\":\n          description: Property has been removed\n        \"400\":\n          description: Bad request\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/error_occurred\"\n        \"404\":\n          description: Not Found\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/error_occurred\"\n  /severities:\n    get:\n      description: Retrieves all the severities ordered by priority\n      parameters:\n        - $ref: \"#/components/parameters/header_authorization\"\n        - $ref: \"#/components/parameters/header_coverage\"\n        - $ref: \"#/components/parameters/header_customer_id\"\n      tags:\n        - Severity\n      responses:\n        \"200\":\n          description: List of severities\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  meta:\n                    type: object\n                  severities:\n                    type: array\n                    items:\n                      $ref: \"#/components/schemas/severity\"\n    post:\n      description: Creates a severity\n      parameters:\n        - $ref: \"#/components/parameters/header_authorization\"\n        - $ref: \"#/components/parameters/header_coverage\"\n        - $ref: \"#/components/parameters/header_customer_id_create_client\"\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/severity_creation\"\n        description: Severity that needs to be stored\n      tags:\n        - Severity\n      responses:\n        \"201\":\n          description: Created severity\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  severity:\n                    $ref: \"#/components/schemas/severity\"\n        \"400\":\n          description: Bad Request\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/error_occurred\"\n  \"/severities/{id}\":\n    get:\n      description: Retrieve the severity identified by ID\n      parameters:\n        - $ref: \"#/components/parameters/header_authorization\"\n        - $ref: \"#/components/parameters/header_coverage\"\n        - $ref: \"#/components/parameters/header_customer_id\"\n        - name: id\n          in: path\n          required: true\n          description: Entity identifier\n          schema:\n            type: string\n      tags:\n        - Severity\n      responses:\n        \"200\":\n          description: Severity entity\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  severity:\n                    $ref: \"#/components/schemas/severity\"\n        \"400\":\n          description: Bad Request\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/bad_id\"\n        \"404\":\n          description: Not Found\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/error_occurred\"\n    put:\n      description: Update a severity\n      parameters:\n        - $ref: \"#/components/parameters/header_authorization\"\n        - $ref: \"#/components/parameters/header_coverage\"\n        - $ref: \"#/components/parameters/header_customer_id\"\n        - name: id\n          in: path\n          required: true\n          description: Entity identifier\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/severity_creation\"\n        description: Category that needs to be stored\n      tags:\n        - Severity\n      responses:\n        \"200\":\n          description: Severity entity\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  severity:\n                    $ref: \"#/components/schemas/severity\"\n        \"400\":\n          description: Bad Request\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/bad_id\"\n        \"404\":\n          description: Not Found\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/error_occurred\"\n    delete:\n      description: remove a severity\n      parameters:\n        - $ref: \"#/components/parameters/header_authorization\"\n        - $ref: \"#/components/parameters/header_coverage\"\n        - $ref: \"#/components/parameters/header_customer_id\"\n        - name: id\n          in: path\n          required: true\n          description: Entity identifier\n          schema:\n            type: string\n      tags:\n        - Severity\n      responses:\n        \"204\":\n          description: Severity has been removed\n        \"400\":\n          description: Bad Request\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/bad_id\"\n        \"404\":\n          description: Not Found\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/error_occurred\"\n        \"409\":\n          description: Conflict\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/error_occurred\"\n  /status:\n    get:\n      description: Renders state of application\n      tags:\n        - Status\n      responses:\n        \"200\":\n          description: Renders information about configuration of different components\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  version:\n                    type: string\n                    description: version of application\n                  db_pool_status:\n                    type: string\n                  db_version:\n                    type: string\n                    description: version of db migration\n                  navitia_url:\n                    type: string\n                    description: URL of navitia Web Service\n                  rabbitmq_info:\n                    type: object\n                    description: Information about configuration of RabbitMQ\n                    properties:\n                      alternates:\n                        type: array\n                        description: Information about usage of RabbitMQ\n                        items:\n                          type: string\n                      connect_timeout:\n                        type: integer\n                      heartbeat:\n                        type: integer\n                      hostname:\n                        type: string\n                      insist:\n                        type: boolean\n                      is_active:\n                        type: boolean\n                      is_connected:\n                        type: boolean\n                      login_method:\n                        type: string\n                      port:\n                        type: integer\n                      ssl:\n                        type: boolean\n                      transport:\n                        type: string\n                      transport_options:\n                        type: object\n                      uri_prefix:\n                        type: string\n                      userid:\n                        type: string\n                      virtual_host:\n                        type: string\n  /tags:\n    get:\n      description: Retrieve the list of all tags\n      parameters:\n        - $ref: \"#/components/parameters/header_authorization\"\n        - $ref: \"#/components/parameters/header_coverage\"\n        - $ref: \"#/components/parameters/header_customer_id\"\n      tags:\n        - Tag\n      responses:\n        \"200\":\n          description: List of tags\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  meta:\n                    type: object\n                  tags:\n                    type: array\n                    items:\n                      $ref: \"#/components/schemas/tag\"\n        \"400\":\n          description: Bad Request\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  severity:\n                    $ref: \"#/components/schemas/error_occurred\"\n    post:\n      description: Creates a tag\n      parameters:\n        - $ref: \"#/components/parameters/header_authorization\"\n        - $ref: \"#/components/parameters/header_coverage\"\n        - $ref: \"#/components/parameters/header_customer_id_create_client\"\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/tag_creation\"\n        description: Tag that needs to be stored\n      tags:\n        - Tag\n      responses:\n        \"201\":\n          description: Created tag\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  tag:\n                    $ref: \"#/components/schemas/tag\"\n        \"400\":\n          description: Bad Request\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  tag:\n                    $ref: \"#/components/schemas/error_occurred\"\n  \"/tags/{id}\":\n    get:\n      description: Retrieve the tag identified by ID\n      parameters:\n        - $ref: \"#/components/parameters/header_authorization\"\n        - $ref: \"#/components/parameters/header_coverage\"\n        - $ref: \"#/components/parameters/header_customer_id\"\n        - name: id\n          in: path\n          required: true\n          description: Entity identifier\n          schema:\n            type: string\n      tags:\n        - Tag\n      responses:\n        \"201\":\n          description: Tag could be find\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  tag:\n                    $ref: \"#/components/schemas/tag\"\n        \"400\":\n          description: Wrong ID\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  error:\n                    $ref: \"#/components/schemas/bad_id\"\n        \"404\":\n          description: Not Found\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/error_404\"\n    put:\n      description: Update a tag\n      parameters:\n        - $ref: \"#/components/parameters/header_authorization\"\n        - $ref: \"#/components/parameters/header_coverage\"\n        - $ref: \"#/components/parameters/header_customer_id\"\n        - name: id\n          in: path\n          required: true\n          description: Entity identifier\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/tag_creation\"\n        description: Category that needs to be stored\n      tags:\n        - Tag\n      responses:\n        \"200\":\n          description: Tag entity\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  tag:\n                    $ref: \"#/components/schemas/tag\"\n        \"400\":\n          description: Bad Request\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  tag:\n                    $ref: \"#/components/schemas/error_occurred\"\n        \"404\":\n          description: Not Found\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/error_404\"\n    delete:\n      description: remove a tag\n      parameters:\n        - $ref: \"#/components/parameters/header_authorization\"\n        - $ref: \"#/components/parameters/header_coverage\"\n        - $ref: \"#/components/parameters/header_customer_id\"\n        - name: id\n          in: path\n          required: true\n          description: Entity identifier\n          schema:\n            type: string\n      tags:\n        - Tag\n      responses:\n        \"204\":\n          description: Tag has been removed\n        \"400\":\n          description: BAD REQUEST\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  error:\n                    $ref: \"#/components/schemas/bad_id\"\n        \"404\":\n          description: Not Found\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/error_404\"\n  /traffic_reports:\n    get:\n      deprecated: true\n      description: Use POST /traffic_reports instead\n      parameters:\n        - $ref: \"#/components/parameters/header_authorization\"\n        - $ref: \"#/components/parameters/header_coverage\"\n        - $ref: \"#/components/parameters/header_customer_id\"\n        - $ref: \"#/components/parameters/header_contributors\"\n      tags:\n        - Traffic Reports\n      responses:\n        \"200\":\n          description: State of public transport traffic\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  disruptions:\n                    type: array\n                    items:\n                      $ref: \"#/components/schemas/traffic_report_disruption\"\n                  traffic_reports:\n                    $ref: \"#/components/schemas/traffic_report\"\n    post:\n      description: This service provides the state of public transport traffic with filter\n      parameters:\n        - $ref: \"#/components/parameters/header_authorization\"\n        - $ref: \"#/components/parameters/header_coverage\"\n        - $ref: \"#/components/parameters/header_customer_id\"\n        - $ref: \"#/components/parameters/header_contributors\"\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                ptObjectFilter:\n                  $ref: \"#/components/schemas/pt_object_filter\"\n        description: traffic with filter on ptObject possible\n      tags:\n        - Traffic Reports\n      responses:\n        \"200\":\n          description: State of public transport traffic\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  disruptions:\n                    type: array\n                    items:\n                      $ref: \"#/components/schemas/traffic_report_disruption\"\n                  traffic_reports:\n                    $ref: \"#/components/schemas/traffic_report\"\n        \"400\":\n          description: Bad request\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/error_occurred\"\n  /disruptions:\n    get:\n      deprecated: true\n      description: Use POST /disruptions/_search instead\n      parameters:\n        - $ref: \"#/components/parameters/header_authorization\"\n        - $ref: \"#/components/parameters/header_coverage\"\n        - $ref: \"#/components/parameters/header_customer_id\"\n        - $ref: \"#/components/parameters/header_contributors\"\n        - $ref: \"#/components/parameters/start_page\"\n        - $ref: \"#/components/parameters/items_per_page\"\n        - $ref: \"#/components/parameters/publication_status\"\n        - $ref: \"#/components/parameters/ends_after_date\"\n        - $ref: \"#/components/parameters/ends_before_date\"\n        - $ref: \"#/components/parameters/current_time\"\n        - $ref: \"#/components/parameters/tag\"\n        - $ref: \"#/components/parameters/uri\"\n        - $ref: \"#/components/parameters/line_section\"\n        - $ref: \"#/components/parameters/status\"\n        - $ref: \"#/components/parameters/depth\"\n      tags:\n        - Disruption\n      responses:\n        \"200\":\n          description: List of disruption\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  disruptions:\n                    type: array\n                    items:\n                      $ref: \"#/components/schemas/disruption\"\n                  meta:\n                    type: object\n                    properties:\n                      pagination:\n                        $ref: \"#/components/schemas/pagination\"\n    post:\n      description: Create one valid disruption with impacts\n      parameters:\n        - $ref: \"#/components/parameters/header_authorization\"\n        - $ref: \"#/components/parameters/header_coverage\"\n        - $ref: \"#/components/parameters/header_customer_id\"\n        - $ref: \"#/components/parameters/header_contributors\"\n      requestBody:\n        $ref: \"#/components/requestBodies/disruption_creation\"\n      tags:\n        - Disruption\n      responses:\n        \"201\":\n          description: Created disruption\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  disruption:\n                    $ref: \"#/components/schemas/disruption\"\n        \"400\":\n          description: Bad Request\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/error_occurred\"\n        \"404\":\n          description: Not found\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/error_occurred\"\n        \"500\":\n          description: Server error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/error_occurred\"\n        \"503\":\n          description: Error during transferring of disruption to Navitia\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/error_occurred\"\n  \"/disruptions/{id}\":\n    get:\n      description: Retrieve the disruption identified by ID\n      parameters:\n        - $ref: \"#/components/parameters/header_authorization\"\n        - $ref: \"#/components/parameters/header_coverage\"\n        - $ref: \"#/components/parameters/header_customer_id\"\n        - $ref: \"#/components/parameters/header_contributors\"\n        - $ref: \"#/components/parameters/depth\"\n        - name: id\n          in: path\n          required: true\n          description: Entity identifier\n          schema:\n            type: string\n      tags:\n        - Disruption\n      responses:\n        \"200\":\n          description: Disruption could be find\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  disruption:\n                    $ref: \"#/components/schemas/disruption\"\n        \"400\":\n          description: Disruption bad id\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/error_occurred\"\n        \"404\":\n          description: Not found\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/error_404\"\n    put:\n      description: Update the disruption identified by ID\n      parameters:\n        - $ref: \"#/components/parameters/header_authorization\"\n        - $ref: \"#/components/parameters/header_coverage\"\n        - $ref: \"#/components/parameters/header_customer_id\"\n        - $ref: \"#/components/parameters/header_contributors\"\n        - name: id\n          in: path\n          required: true\n          description: Entity identifier\n          schema:\n            type: string\n      requestBody:\n        $ref: \"#/components/requestBodies/disruption_update\"\n      tags:\n        - Disruption\n      responses:\n        \"201\":\n          description: Disruption could be find\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  disruption:\n                    $ref: \"#/components/schemas/disruption\"\n        \"400\":\n          description: Bad request\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/error_occurred\"\n        \"404\":\n          description: Not found\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/error_404\"\n        \"409\":\n          description: Conflict (disruption cannot get back to the 'draft' status)\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/error_occurred\"\n    delete:\n      description: Change the disruption and its impacts statuses to \"archived\". Archived\n        elements aren't used by Navitia.\n      parameters:\n        - $ref: \"#/components/parameters/header_authorization\"\n        - $ref: \"#/components/parameters/header_coverage\"\n        - $ref: \"#/components/parameters/header_customer_id\"\n        - $ref: \"#/components/parameters/header_contributors\"\n        - name: id\n          in: path\n          required: true\n          description: Entity identifier\n          schema:\n            type: string\n      tags:\n        - Disruption\n      responses:\n        \"204\":\n          description: Disruption has been removed\n        \"400\":\n          description: Bad request\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/error_occurred\"\n        \"404\":\n          description: Not found\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/error_404\"\n        \"500\":\n          description: Internal server error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/error_occurred\"\n        \"503\":\n          description: Service unavailable\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/error_occurred\"\n  \"/disruptions/{id}/history\":\n    get:\n      description: Get a list of historical states of a disruption\n      parameters:\n        - $ref: \"#/components/parameters/header_authorization\"\n        - $ref: \"#/components/parameters/header_coverage\"\n        - $ref: \"#/components/parameters/header_customer_id\"\n        - $ref: \"#/components/parameters/header_contributors\"\n        - name: id\n          in: path\n          required: true\n          description: Entity identifier\n          schema:\n            type: string\n      tags:\n        - History\n      responses:\n        \"200\":\n          description: List of disruption histories\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  disruptions:\n                    type: array\n                    items:\n                      $ref: \"#/components/schemas/disruption_history\"\n                  meta:\n                    type: object\n                    properties:\n                      pagination:\n                        $ref: \"#/components/schemas/pagination\"\n        \"400\":\n          description: Disruption bad id\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/error_occurred\"\n        \"404\":\n          description: Not found\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/error_occurred\"\n  \"/disruptions/{id}/impacts\":\n    get:\n      description: Return all impacts of a disruption\n      parameters:\n        - $ref: \"#/components/parameters/header_authorization\"\n        - $ref: \"#/components/parameters/header_coverage\"\n        - $ref: \"#/components/parameters/header_customer_id\"\n        - $ref: \"#/components/parameters/header_contributors\"\n        - name: id\n          in: path\n          required: true\n          description: Entity identifier\n          schema:\n            type: string\n      tags:\n        - Impact\n      responses:\n        \"200\":\n          description: List of impacts for given disruption\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  impacts:\n                    type: array\n                    items:\n                      $ref: \"#/components/schemas/impact\"\n                  meta:\n                    type: object\n                    properties:\n                      pagination:\n                        $ref: \"#/components/schemas/pagination\"\n    post:\n      description: Create a new impact on a disruption\n      parameters:\n        - $ref: \"#/components/parameters/header_authorization\"\n        - $ref: \"#/components/parameters/header_coverage\"\n        - $ref: \"#/components/parameters/header_customer_id\"\n        - $ref: \"#/components/parameters/header_contributors\"\n        - name: id\n          in: path\n          required: true\n          description: Entity identifier\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/impact_creation\"\n        description: Impact that needs to be stored\n      tags:\n        - Impact\n      responses:\n        \"201\":\n          description: Created impact\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  impact:\n                    $ref: \"#/components/schemas/impact\"\n  \"/disruptions/{id}/impacts/{impact_id}\":\n    get:\n      description: Get an impact by id\n      parameters:\n        - $ref: \"#/components/parameters/header_authorization\"\n        - $ref: \"#/components/parameters/header_coverage\"\n        - $ref: \"#/components/parameters/header_customer_id\"\n        - $ref: \"#/components/parameters/header_contributors\"\n        - name: id\n          in: path\n          required: true\n          description: Entity identifier\n          schema:\n            type: string\n        - in: path\n          name: impact_id\n          description: Impact identifier\n          required: true\n          schema:\n            type: string\n            format: uuid\n      tags:\n        - Impact\n      responses:\n        \"200\":\n          description: Impact identified by ID and disruption ID\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  impact:\n                    $ref: \"#/components/schemas/impact\"\n    put:\n      description: Update an impact identified by ID and disruption ID\n      parameters:\n        - $ref: \"#/components/parameters/header_authorization\"\n        - $ref: \"#/components/parameters/header_coverage\"\n        - $ref: \"#/components/parameters/header_customer_id\"\n        - $ref: \"#/components/parameters/header_contributors\"\n        - name: id\n          in: path\n          required: true\n          description: Entity identifier\n          schema:\n            type: string\n        - in: path\n          name: impact_id\n          description: Impact identifier\n          required: true\n          schema:\n            type: string\n            format: uuid\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/impact_creation\"\n        description: Impact data to be updated\n      tags:\n        - Impact\n      responses:\n        \"200\":\n          description: Impact identified by ID and disruption ID\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  impact:\n                    $ref: \"#/components/schemas/impact\"\n    delete:\n      description: Remove an impact identified by ID and disruption ID\n      parameters:\n        - $ref: \"#/components/parameters/header_authorization\"\n        - $ref: \"#/components/parameters/header_coverage\"\n        - $ref: \"#/components/parameters/header_customer_id\"\n        - $ref: \"#/components/parameters/header_contributors\"\n        - name: id\n          in: path\n          required: true\n          description: Entity identifier\n          schema:\n            type: string\n        - in: path\n          name: impact_id\n          description: Impact identifier\n          required: true\n          schema:\n            type: string\n            format: uuid\n      tags:\n        - Impact\n      responses:\n        \"204\":\n          description: Impact has been removed\n  /disruptions/_search:\n    post:\n      description: Return filtered disruptions and impacts\n      parameters:\n        - $ref: \"#/components/parameters/header_authorization\"\n        - $ref: \"#/components/parameters/header_coverage\"\n        - $ref: \"#/components/parameters/header_customer_id\"\n        - $ref: \"#/components/parameters/header_contributors\"\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/disruptions_search\"\n        description: Parameters of filter\n      tags:\n        - Search\n      responses:\n        \"200\":\n          description: List of disruption\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  disruptions:\n                    type: array\n                    items:\n                      $ref: \"#/components/schemas/disruption\"\n                  meta:\n                    type: object\n                    properties:\n                      pagination:\n                        $ref: \"#/components/schemas/pagination\"\n        \"400\":\n          description: Bad request\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/error_occurred\"\n  /drafts:\n    get:\n      description: Retrieve the list of all drafts\n      parameters:\n        - $ref: \"#/components/parameters/header_authorization\"\n        - $ref: \"#/components/parameters/header_customer_id\"\n      tags:\n        - Draft\n      responses:\n        200:\n          description: List of drafts\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  drafts:\n                    type: array\n                    items:\n                      $ref: \"#/components/schemas/draft\"\n                  meta:\n                    type: object\n                    properties:\n                      pagination:\n                        $ref: \"#/components/schemas/pagination\"\n        404:\n          description: Not Found\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/error_occurred\"\n        500:\n          description: Server error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/error_occurred\"\n    post:\n      description: Create draft\n      tags:\n        - Draft\n      parameters:\n        - $ref: \"#/components/parameters/header_authorization\"\n        - $ref: \"#/components/parameters/header_customer_id\"\n      requestBody:\n        $ref: \"#/components/requestBodies/draft\"\n      responses:\n        201:\n          description: Created draft\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  draft:\n                    $ref: \"#/components/schemas/draft\"\n        400:\n          description: Bad request\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/error_occurred\"\n        404:\n          description: Not found\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/error_occurred\"\n        500:\n          description: Server error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/error_occurred\"\n  /drafts/{id}:\n    get:\n      description: Retrieve draft identified by {id}\n      parameters:\n        - $ref: \"#/components/parameters/header_authorization\"\n        - $ref: \"#/components/parameters/header_customer_id\"\n        - name: id\n          in: path\n          description: Draft identifier\n          required: true\n          schema:\n            type: string\n      tags:\n        - Draft\n      responses:\n        200:\n          description: Disruption draft\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/draft\"\n        404:\n          description: Not Found\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/error_occurred\"\n        500:\n          description: Server error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/error_occurred\"\n    put:\n      description: Updates a draft identified by {id}\n      tags:\n        - Draft\n      parameters:\n        - $ref: \"#/components/parameters/header_authorization\"\n        - $ref: \"#/components/parameters/header_customer_id\"\n        - name: id\n          in: path\n          description: Draft identifier\n          required: true\n          schema:\n            type: string\n      requestBody:\n        $ref: \"#/components/requestBodies/draft\"\n      responses:\n        201:\n          description: Update draft identified by {id}\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  draft:\n                    $ref: \"#/components/schemas/draft\"\n        400:\n          description: Bad request\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/error_occurred\"\n        404:\n          description: Not found\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/error_occurred\"\n        500:\n          description: Server error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/error_occurred\"\n    delete:\n      description: Removes a draft identified by {id}\n      tags:\n        - Draft\n      parameters:\n        - $ref: \"#/components/parameters/header_authorization\"\n        - $ref: \"#/components/parameters/header_customer_id\"\n        - name: id\n          in: path\n          description: Draft identifier\n          required: true\n          schema:\n            type: string\n      responses:\n        204:\n          description: Disruption draft has been removed\n        404:\n          description: Not Found\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/error_404\"\n        500:\n          description: Server error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/error_occurred\"\n  /impacts/_search:\n    post:\n      description: Return filtered impacts\n      parameters:\n        - $ref: \"#/components/parameters/header_authorization\"\n        - $ref: \"#/components/parameters/header_coverage\"\n        - $ref: \"#/components/parameters/header_customer_id\"\n        - $ref: \"#/components/parameters/header_contributors\"\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/impacts_search\"\n        description: Parameters of filter\n      tags:\n        - Search\n      responses:\n        \"200\":\n          description: List of impact\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  impacts:\n                    type: array\n                    items:\n                      $ref: \"#/components/schemas/impact_with_disruption\"\n                  meta:\n                    type: object\n                    properties:\n                      pagination:\n                        $ref: \"#/components/schemas/pagination_impacts_search\"\n        \"400\":\n          description: Bad request\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/error_occurred\"\n  /impacts/exports:\n    get:\n      description: Get exports status\n      parameters:\n        - $ref: \"#/components/parameters/header_authorization\"\n        - $ref: \"#/components/parameters/header_customer_id\"\n        - $ref: \"#/components/parameters/exports_sort\"\n      tags:\n        - Export\n      responses:\n        \"200\":\n          description: List of exports status\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  exports:\n                    type: array\n                    items:\n                      $ref: \"#/components/schemas/impacts_exports_status\"\n    post:\n      description: Create archive file export\n      parameters:\n        - $ref: \"#/components/parameters/header_authorization\"\n        - $ref: \"#/components/parameters/header_coverage\"\n        - $ref: \"#/components/parameters/header_customer_id\"\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/impacts_export_create\"\n        description: Date range filters\n      tags:\n        - Export\n      responses:\n        \"200\":\n          description: Export already exist\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  export:\n                    $ref: \"#/components/schemas/impacts_exports_status\"\n        \"201\":\n          description: Export in progress\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  export:\n                    $ref: \"#/components/schemas/impacts_exports_status\"\n        \"400\":\n          description: Bad request\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/error_occurred\"\n        \"409\":\n          description: Conflict\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/error_occurred\"\n  \"/impacts/exports/{id}\":\n    get:\n      description: Get the status of one export\n      parameters:\n        - $ref: \"#/components/parameters/header_authorization\"\n        - $ref: \"#/components/parameters/header_customer_id\"\n        - name: id\n          in: path\n          description: identifier\n          required: true\n          schema:\n            type: string\n            format: uuid\n      tags:\n        - Export\n      responses:\n        \"200\":\n          description: Export status\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  export:\n                    $ref: \"#/components/schemas/impacts_exports_status\"\n        \"404\":\n          description: Not found\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/error_404\"\n  \"/impacts/exports/{id}/download\":\n    get:\n      description: Returns the archive file based ID\n      parameters:\n        - $ref: \"#/components/parameters/header_authorization\"\n        - $ref: \"#/components/parameters/header_customer_id\"\n        - name: id\n          in: path\n          description: identifier\n          required: true\n          schema:\n            type: string\n            format: uuid\n      tags:\n        - Export\n      responses:\n        \"200\":\n          description: Archive file\n        \"404\":\n          description: Not found\n          content:\n            application/csv:\n              schema:\n                $ref: \"#/components/schemas/error_404\"\n  /contributors:\n    post:\n      description: Create a contributor\n      parameters:\n        - $ref: \"#/components/parameters/header_authorization\"\n        - $ref: \"#/components/parameters/header_customer_id\"\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/contributor_create\"\n      tags:\n        - Contributor\n      responses:\n        \"201\":\n          description: Contributor created\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/contributor\"\n        \"400\":\n          description: Bad Request\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/error_occurred\"\n        \"401\":\n          description: Unauthorized\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/error_occurred\"\n        \"404\":\n          description: Not Found (Customer not found)\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/error_occurred\"\n        \"409\":\n          description: Conflict\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/error_occurred\"\n\nservers:\n  - url: http://127.0.0.1:5000/\ncomponents:\n  parameters:\n    header_customer_id_create_client:\n      in: header\n      required: true\n      description: Client code. A client is owner of cause, channel, severity and tag. If this Client code doesn't exist, it will be created.\n      name: X-Customer-Id\n      schema:\n        type: string\n    header_customer_id:\n      in: header\n      required: true\n      description: Client code. A client is owner of cause, channel, severity and tag.\n      name: X-Customer-Id\n      schema:\n        type: string\n    header_coverage:\n      in: header\n      required: true\n      description: Coverage of navitia services\n      name: X-Coverage\n      schema:\n        type: string\n    header_authorization:\n      in: header\n      required: true\n      description: Token for navitia services\n      name: Authorization\n      schema:\n        type: string\n    header_contributors:\n      required: true\n      description: Contributor code\n      name: X-Contributors\n      in: header\n      schema:\n        type: string\n    start_page:\n      in: query\n      name: start_page\n      description: Index of the first element returned (start at 1)\n      required: false\n      schema:\n        type: integer\n        minimum: 1\n        default: 1\n    items_per_page:\n      in: query\n      name: items_per_page\n      description: Number of items per page\n      required: false\n      schema:\n        type: integer\n        minimum: 0\n        maximum: 1000\n        default: 20\n    publication_status:\n      in: query\n      name: publication_status\n      description: Filter by publication_status (example:publication_status[]=ongoing)\n      required: false\n      schema:\n        type: array\n        items:\n          type: string\n          enum:\n            - past\n            - ongoing\n            - coming\n        default:\n          - past\n          - ongoing\n          - coming\n    ends_after_date:\n      in: query\n      name: ends_after_date\n      description: \"Start-date restriction for end_publication date (example:\n        2018-08-03T12:19:13Z)\"\n      required: false\n      schema:\n        type: string\n    ends_before_date:\n      in: query\n      name: ends_before_date\n      description: \"End-date restriction for end_publication date (example:\n        2018-08-03T12:19:13Z)\"\n      required: false\n      schema:\n        type: string\n    current_time:\n      in: query\n      name: current_time\n      description: \"Parameter for settings the current time, mostly for debugging purpose\n        (example: '2018-08-03T12:19:13Z')\"\n      required: false\n      schema:\n        type: string\n        default: now\n    tag:\n      in: query\n      name: tag\n      description: Filter by tag (id of tag)\n      required: false\n      schema:\n        type: array\n        items:\n          type: string\n          format: uuid\n    uri:\n      in: query\n      name: uri\n      description: Filter by uri of ptobject\n      required: false\n      schema:\n        type: string\n    line_section:\n      in: query\n      name: line_section\n      description: If uri is a line id, filter also on related line_section(s)\n      required: false\n      schema:\n        type: boolean\n        default: false\n    status:\n      in: query\n      name: status\n      description: Filter by status\n      required: false\n      schema:\n        type: array\n        items:\n          type: string\n          enum:\n            - archived\n            - published\n            - draft (deprecated)\n        default:\n          - published\n    depth:\n      in: query\n      name: depth\n      description: With depth=2, you could retrieve the first page of impacts from the\n        disruption\n      required: false\n      schema:\n        type: integer\n        default: 1\n    exports_sort:\n      in: query\n      name: sort\n      description: Sort exports list\n      required: false\n      schema:\n        type: string\n        enum:\n          - created_at\n          - created_at:asc\n          - created_at:desc\n        default: created_at:desc\n  requestBodies:\n    cause_creation:\n      content:\n        application/json:\n          schema:\n            $ref: \"#/components/schemas/cause_creation\"\n      description: Cause that needs to be stored\n    property_creation:\n      content:\n        application/json:\n          schema:\n            $ref: \"#/components/schemas/property_creation\"\n      description: Property that needs to be stored\n    category_creation:\n      content:\n        application/json:\n          schema:\n            $ref: \"#/components/schemas/category_creation\"\n      description: Category that needs to be stored\n    disruption_creation:\n      content:\n        application/json:\n          schema:\n            $ref: \"#/components/schemas/disruption_creation\"\n      description: Disruption that needs to be stored\n    disruption_update:\n      content:\n        application/json:\n          schema:\n            $ref: \"#/components/schemas/disruption_update\"\n      description: Disruption that needs to be updated\n    draft:\n      content:\n        application/json:\n          schema:\n            $ref: \"#/components/schemas/draft_body\"\n  schemas:\n    application_period_pattern_create:\n      type: object\n      required:\n        - start_date\n        - end_date\n        - weekly_pattern\n        - time_slots\n        - time_zone\n      properties:\n        end_date:\n          type: string\n          format: date\n        start_date:\n          type: string\n          format: date\n        weekly_pattern:\n          description: \u003e\n            Days of week beginning at monday. If notification on given day is\n            active,\n\n            it should be marked with 1, otherwise 0\n          type: string\n          example: \"0110000\"\n        time_slots:\n          description: List with time slots whitin impact is active\n          type: array\n          uniqueItems: true\n          minItems: 1\n          items:\n            type: object\n            required:\n              - begin\n              - end\n            properties:\n              begin:\n                type: string\n                description: Start time (Format HH:MM)\n                example: \"13:45\"\n              end:\n                type: string\n                description: Start time (Format HH:MM)\n                example: \"15:30\"\n        time_zone:\n          type: string\n          example: Europe/Paris\n    application_period_pattern:\n      type: object\n      properties:\n        end_date:\n          type: string\n          format: date\n        start_date:\n          type: string\n          format: date\n        weekly_pattern:\n          description: \u003e\n            Days of week beginning at monday. If notification on given day is\n            active,\n\n            it should be marked with 1, otherwise 0\n          type: string\n          example: \"0110000\"\n        time_slots:\n          description: List with time slots whitin impact is active\n          type: array\n          uniqueItems: true\n          minItems: 1\n          items:\n            type: object\n            properties:\n              begin:\n                type: string\n                description: Start time (Format HH:MM)\n                example: \"13:45\"\n              end:\n                type: string\n                description: Start time (Format HH:MM)\n                example: \"15:30\"\n        time_zone:\n          type: string\n          example: Europe/Paris\n    bad_id:\n      type: object\n      properties:\n        message:\n          type: string\n    category:\n      type: object\n      properties:\n        id:\n          type: string\n          format: uuid\n        self:\n          $ref: \"#/components/schemas/href\"\n        name:\n          type: string\n        created_at:\n          type: string\n          pattern: '^\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}Z$'\n          example: '2018-08-03T12:19:13Z'\n        updated_at:\n          type: string\n          pattern: '^\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}Z$'\n          example: '2018-08-03T12:19:13Z'\n    category_creation:\n      required:\n        - name\n      type: object\n      properties:\n        name:\n          type: string\n    cause:\n      type: object\n      properties:\n        id:\n          type: string\n          format: uuid\n        wordings:\n          type: array\n          items:\n            $ref: \"#/components/schemas/wording\"\n        category:\n          $ref: \"#/components/schemas/category\"\n        self:\n          $ref: \"#/components/schemas/href\"\n        created_at:\n          type: string\n          pattern: '^\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}Z$'\n          example: '2018-08-03T12:19:13Z'\n        updated_at:\n          type: string\n          pattern: '^\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}Z$'\n          example: '2018-08-03T12:19:13Z'\n    cause_creation:\n      type: object\n      required:\n        - wordings\n      properties:\n        wordings:\n          type: array\n          items:\n            $ref: \"#/components/schemas/wording\"\n        category:\n          type: object\n          properties:\n            id:\n              type: string\n              format: uuid\n    causes_ids_filter:\n      description: Filter by causes ids. If set it returns disruptions with one of these causes ids.\n      type: array\n      items:\n        type: string\n        format: uuid\n    channel:\n      type: object\n      properties:\n        id:\n          type: string\n          format: uuid\n        self:\n          $ref: \"#/components/schemas/href\"\n        name:\n          type: string\n        content_type:\n          type: string\n        max_size:\n          type: integer\n        required:\n          type: boolean\n          example: false\n        created_at:\n          type: string\n          pattern: '^\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}Z$'\n          example: '2018-08-03T12:19:13Z'\n        updated_at:\n          type: string\n          pattern: '^\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}Z$'\n          example: '2018-08-03T12:19:13Z'\n        types:\n          type: array\n          items:\n            type: string\n    channel_creation:\n      type: object\n      required:\n        - name\n        - max_size\n        - content_type\n        - types\n      properties:\n        name:\n          type: string\n        max_size:\n          type: integer\n        content_type:\n          type: string\n        required:\n          type: boolean\n          description: If true, this channel must contains text for an impact to be created\n            or edited.\n          example: false\n        types:\n          type: array\n          items:\n            type: string\n            enum:\n              - web\n              - sms\n              - email\n              - mobile\n              - notification\n              - twitter\n              - facebook\n              - title\n              - beacon\n    draft:\n      type: object\n      properties:\n        id:\n          type: string\n          format: uuid\n          description: Draft ID\n        data:\n          $ref: \"#/components/schemas/disruption_draft\"\n        self:\n          $ref: \"#/components/schemas/href\"\n        type:\n          type: string\n          enum:\n            - disruption\n        created_at:\n          type: string\n          pattern: '^\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}Z$'\n          example: '2018-08-03T12:19:13Z'\n        updated_at:\n          type: string\n          pattern: '^\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}Z$'\n          example: '2021-12-21T00:00:00Z'\n    disruption:\n      type: object\n      properties:\n        cause:\n          $ref: \"#/components/schemas/cause\"\n        contributor:\n          type: string\n          description: Contributor code\n        author:\n          $ref: \"#/components/schemas/author\"\n        created_at:\n          type: string\n          pattern: '^\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}Z$'\n          example: '2018-08-03T12:19:13Z'\n        id:\n          type: string\n          format: uuid\n          description: Disruption ID\n        impacts:\n          type: object\n          description: Links to impacts of this disruption\n          properties:\n            pagination:\n              $ref: \"#/components/schemas/pagination\"\n        localization:\n          type: array\n          description: List of stop areas\n          items:\n            type: object\n            required:\n              - id\n              - type\n            properties:\n              id:\n                type: string\n                description: Stop area ID\n              label:\n                type: string\n                description: Label of stop area\n              name:\n                type: string\n                description: Label of stop area\n              type:\n                type: string\n                enum:\n                  - stop_area\n              codes:\n                type: array\n                items:\n                  type: object\n                  properties:\n                    type:\n                      type: string\n                      description: Type of code\n                    value:\n                      type: string\n                      description: Value of code\n              coord:\n                type: object\n                description: Coordinates - WGS84\n                properties:\n                  lat:\n                    type: number\n                    format: float\n                  lon:\n                    type: number\n                    format: float\n        note:\n          type: string\n          description: Service note of disruption\n        properties:\n          type: object\n          description: Associated properties\n        publication_period:\n          $ref: \"#/components/schemas/period\"\n        publication_status:\n          type: string\n          description: \u003e\n            Status of publication.\n\n            past when publication end date is in past\n\n            ongoing when publication start date is in past and end date is in future\n\n            coming when publication start date is in future\n          enum:\n            - past\n            - ongoing\n            - coming\n        reference:\n          type: string\n          description: Publication reference label\n        self:\n          $ref: \"#/components/schemas/href\"\n        status:\n          type: string\n          enum:\n            - archived\n            - published\n            - draft (deprecated)\n        tags:\n          type: array\n          description: List of associated tags\n          items:\n            $ref: \"#/components/schemas/tag\"\n        type:\n          description: Type of the disruption\n          type: string\n          enum:\n            - unexpected\n        updated_at:\n          type: string\n          pattern: '^\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}Z$'\n          example: '2018-08-03T12:19:13Z'\n        version:\n          type: integer\n          description: Number of how many time this disruption has been changed\n    disruption_creation:\n      type: object\n      required:\n        - reference\n        - impacts\n        - contributor\n        - cause\n        - publication_period\n      properties:\n        reference:\n          type: string\n          maxLength: 250\n          description: Publication reference label\n        note:\n          type: string\n          description: Service note of disruption\n        contributor:\n          type: string\n          description: Contributor code (same as header X-Contributors)\n        author:\n          $ref: \"#/components/schemas/author\"\n        cause:\n          type: object\n          required:\n            - id\n          properties:\n            id:\n              type: string\n              format: uuid\n              description: Cause ID\n        tags:\n          description: List with Tag IDs\n          type: array\n          items:\n            type: object\n            required:\n              - id\n            properties:\n              id:\n                type: string\n                format: uuid\n                description: Tag ID\n        type:\n          description: Type of the disruption\n          type: string\n          enum:\n            - unexpected\n        localization:\n          description: List with IDs of stop areas\n          type: array\n          items:\n            type: object\n            required:\n              - id\n              - type\n            properties:\n              id:\n                type: string\n                description: Stop area ID\n              type:\n                type: string\n                enum:\n                  - stop_area\n          uniqueItems: true\n        publication_period:\n          $ref: \"#/components/schemas/period_create\"\n        impacts:\n          type: array\n          description: List of associated impacts\n          items:\n            $ref: \"#/components/schemas/disruption_impact\"\n          uniqueItems: true\n          minItems: 1\n        properties:\n          description: List with property IDs\n          type: array\n          items:\n            type: object\n            required:\n              - property_id\n              - value\n            properties:\n              property_id:\n                description: Property ID\n                type: string\n                format: uuid\n              value:\n                description: Value of a property\n                type: string\n                minLength: 1\n                maxLength: 250\n    disruption_impact:\n      type: object\n      required:\n        - severity\n        - objects\n        - application_periods\n      properties:\n        severity:\n          type: object\n          required:\n            - id\n          properties:\n            id:\n              description: Severity ID\n              type: string\n              format: uuid\n        application_periods:\n          type: array\n          description: Array with dates of application periods\n          items:\n            $ref: \"#/components/schemas/period_create\"\n        send_notifications:\n          description: If notifications should be send or not  ! deprecated in favor of Message value\n          type: boolean\n          default: false\n          deprecated: true\n        notification_date:\n          description: Date of notification (if not set and send_notifications is true, it\n            will be the current UTC date) ! deprecated in favor of Message value\n          type: string\n          pattern: '^\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}Z$'\n          example: '2018-08-03T12:19:13Z'\n          deprecated: true\n        messages:\n          type: array\n          description: List with messages by channel\n          items:\n            $ref: \"#/components/schemas/impact_message\"\n          uniqueItems: true\n        objects:\n          type: array\n          description: List of impacted PT objects\n          items:\n            oneOf:\n              - $ref: \"#/components/schemas/impact_object\"\n              - $ref: \"#/components/schemas/impact_object_line_section\"\n              - $ref: \"#/components/schemas/impact_object_rail_section\"\n          uniqueItems: true\n          minItems: 1\n    draft_body:\n      type: object\n      properties:\n        data:\n          $ref: \"#/components/schemas/disruption_draft\"\n        type:\n          type: string\n          enum:\n            - disruption\n    disruption_draft:\n      type: object\n      properties:\n        id:\n          type: string\n          format: uuid\n          description: Disruption draft ID\n        reference:\n          type: string\n          maxLength: 250\n          description: Publication reference label\n        author:\n          $ref: \"#/components/schemas/author\"\n        causeId:\n          type: string\n          format: uuid\n          description: Cause ID\n        publicationPeriod:\n          $ref: \"#/components/schemas/publication_period_with_optional_begin_end\"\n        impacts:\n          type: array\n          description: List of associated impacts\n          items:\n            $ref: \"#/components/schemas/disruption_draft_impact\"\n          uniqueItems: true\n    disruption_draft_impact:\n      type: object\n      properties:\n        objects:\n          type: array\n          description: List of impacted PT objects\n          items:\n            oneOf:\n              - $ref: \"#/components/schemas/impact_object\"\n              - $ref: \"#/components/schemas/impact_object_line_section\"\n              - $ref: \"#/components/schemas/impact_object_rail_section\"\n          uniqueItems: true\n          minItems: 0\n        severityId:\n          type: string\n          format: uuid\n          description: Severity ID\n        applicationPeriodPatterns:\n          type: array\n          items:\n            $ref: \"#/components/schemas/disruption_draft_impact_application_period_pattern\"\n        notificationDate:\n          description: Date of notification (if not set and send_notifications is true, it\n            will be the current UTC date)\n          type: string\n          pattern: '^\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}Z$'\n          example: '2018-08-03T12:19:13Z'\n        message:\n          type: string\n        channels:\n          type: array\n          items:\n            items:\n              $ref: \"#/components/schemas/disruption_draft_impact_channel\"\n    disruption_draft_impact_application_period_pattern:\n      type: object\n      properties:\n        endDate:\n          type: string\n          format: date\n        startDate:\n          type: string\n          format: date\n        weeklyPattern:\n          description: \"List of active week days\"\n          type: array\n          items:\n            type: string\n            enum:\n              - all\n              - monday\n              - tuesday\n              - wednesday\n              - thursday\n              - friday\n              - saturday\n              - sunday\n        time_slots:\n          description: List with time slots whitin impact is active\n          type: array\n          uniqueItems: true\n          minItems: 1\n          items:\n            type: object\n            properties:\n              begin:\n                type: string\n                description: Start time (Format HH:MM)\n                example: \"13:45\"\n              end:\n                type: string\n                description: Start time (Format HH:MM)\n                example: \"15:30\"\n        timeZone:\n          type: string\n          example: Europe/Paris\n    disruption_draft_impact_channel:\n      type: object\n      properties:\n        id:\n          type: string\n          format: uuid\n        message:\n          type: string\n        enabled:\n          type: string\n    impact_object:\n      type: object\n      required:\n        - id\n        - type\n      properties:\n        id:\n          description: Impacted PT object ID in navitia\n          type: string\n          maxLength: 250\n        type:\n          description: Impacted PT object type in navitia\n          type: string\n          enum:\n            - network\n            - stop_area\n            - line\n            - route\n            - stop_point\n    impact_object_line_section:\n      type: object\n      required:\n        - type\n      properties:\n        id:\n          description: Impacted PT object ID in navitia\n          type: string\n          maxLength: 250\n        type:\n          description: Impacted PT object type in navitia\n          type: string\n          enum:\n            - line_section\n        line_section:\n          type: object\n          properties:\n            start_point:\n              type: object\n              properties:\n                id:\n                  type: string\n                type:\n                  type: string\n                  enum:\n                    - stop_area\n              required:\n                - id\n                - type\n            end_point:\n              type: object\n              properties:\n                id:\n                  type: string\n                type:\n                  type: string\n                  enum:\n                    - stop_area\n              required:\n                - id\n                - type\n            metas:\n              type: array\n              items:\n                $ref: \"#/components/schemas/traffic_report_line_section_meta\"\n            routes:\n              type: array\n              items:\n                type: object\n                properties:\n                  id:\n                    type: string\n                  type:\n                    type: string\n                    enum:\n                      - route\n                required:\n                  - id\n                  - type\n            line:\n              type: object\n              properties:\n                id:\n                  type: string\n                type:\n                  type: string\n                  enum:\n                    - line\n              required:\n                - id\n                - type\n          required:\n            - start_point\n            - end_point\n            - line\n    impact_object_rail_section:\n      type: object\n      required:\n        - type\n      properties:\n        id:\n          description: Impacted PT object ID in navitia\n          type: string\n          maxLength: 250\n        type:\n          description: Impacted PT object type in navitia (BETA version)\n          type: string\n          enum:\n            - rail_section\n        rail_section:\n          title: \u003e\n            \"routes\" or \"line\" property are mandatory.\n          allOf:\n            - type: object\n              required:\n                - start_point\n                - end_point\n              properties:\n                start_point:\n                  type: object\n                  properties:\n                    id:\n                      type: string\n                    type:\n                      type: string\n                      enum:\n                        - stop_area\n                  required:\n                    - id\n                    - type\n                end_point:\n                  type: object\n                  properties:\n                    id:\n                      type: string\n                    type:\n                      type: string\n                      enum:\n                        - stop_area\n                  required:\n                    - id\n                    - type\n                blocked_stop_areas:\n                  type: array\n                  items:\n                    type: object\n                    properties:\n                      id:\n                        type: string\n                      order:\n                        type: integer\n                        minimum: 0\n                    required:\n                      - id\n                      - order\n                  minItems: 0\n            - anyOf:\n              - type: object\n                required:\n                  - routes\n                properties:\n                  routes:\n                    type: array\n                    items:\n                      type: object\n                      properties:\n                        id:\n                          type: string\n                        type:\n                          type: string\n                          enum:\n                            - route\n                      required:\n                        - id\n                        - type\n              - type: object\n                required:\n                  - line\n                properties:\n                  line:\n                    type: object\n                    properties:\n                      id:\n                        type: string\n                      type:\n                        type: string\n                        enum:\n                          - line\n                    required:\n                      - id\n                      - type\n    disruption_update:\n      type: object\n      required:\n        - reference\n        - impacts\n        - contributor\n        - cause\n        - publication_period\n      properties:\n        reference:\n          type: string\n          maxLength: 250\n          description: Publication reference label\n        note:\n          type: string\n          description: Service note of disruption\n        contributor:\n          type: string\n          description: Contributor code (same as header X-Contributors)\n        author:\n          $ref: \"#/components/schemas/author\"\n        cause:\n          type: object\n          required:\n            - id\n          properties:\n            id:\n              type: string\n              format: uuid\n              description: Cause ID\n        tags:\n          description: List with Tag IDs\n          type: array\n          items:\n            type: object\n            required:\n              - id\n            properties:\n              id:\n                type: string\n                format: uuid\n                description: Tag ID\n        type:\n          description: Type of the disruption\n          type: string\n          enum:\n            - unexpected\n        localization:\n          description: List with IDs of stop areas\n          type: array\n          items:\n            type: object\n            required:\n              - id\n              - type\n            properties:\n              id:\n                type: string\n                description: Stop area ID\n              type:\n                type: string\n                enum:\n                  - stop_area\n          uniqueItems: true\n        publication_period:\n          $ref: \"#/components/schemas/period_create\"\n        impacts:\n          type: array\n          description: List of associated impacts\n          items:\n            $ref: \"#/components/schemas/disruption_update_impact\"\n          uniqueItems: true\n          minItems: 1\n        properties:\n          description: List with property IDs\n          type: array\n          items:\n            type: object\n            required:\n              - property_id\n              - value\n            properties:\n              property_id:\n                description: Property ID\n                type: string\n                format: uuid\n              value:\n                description: Value of a property\n                type: string\n                minLength: 1\n                maxLength: 250\n    disruption_update_impact:\n      type: object\n      required:\n        - severity\n        - objects\n      properties:\n        id:\n          type: string\n          format: uuid\n          description: Impact ID\n        severity:\n          type: object\n          required:\n            - id\n          properties:\n            id:\n              description: Severity ID\n              type: string\n              format: uuid\n        application_periods:\n          type: array\n          description: Array with dates of application periods\n          items:\n            $ref: \"#/components/schemas/period_create\"\n        send_notifications:\n          description: If notifications should be send or not  ! deprecated in favor of Message value\n          type: boolean\n          default: false\n          deprecated: true\n        notification_date:\n          description: Date of notification (if not set and send_notifications is true, it\n            will be the current UTC date) ! deprecated in favor of Message value\n          type: string\n          pattern: '^\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}Z$'\n          example: '2018-08-03T12:19:13Z'\n          deprecated: true\n        messages:\n          type: array\n          description: List with messages by channel\n          items:\n            $ref: \"#/components/schemas/impact_message\"\n          uniqueItems: true\n        objects:\n          type: array\n          description: List of impacted PT objects\n          items:\n            oneOf:\n              - $ref: \"#/components/schemas/impact_object\"\n              - $ref: \"#/components/schemas/impact_object_line_section\"\n              - $ref: \"#/components/schemas/impact_object_rail_section\"\n          uniqueItems: true\n          minItems: 1\n    disruption_in_impact:\n      type: object\n      properties:\n        cause:\n          $ref: \"#/components/schemas/cause\"\n        id:\n          type: string\n          format: uuid\n          description: Disruption ID\n        self:\n          $ref: \"#/components/schemas/href\"\n    disruptions_search:\n      type: object\n      properties:\n        start_page:\n          description: Index of the first element returned (start at 1)\n          type: integer\n          default: 1\n          minimum: 1\n          example: 1\n        items_per_page:\n          description: Number of items per page\n          type: integer\n          default: 20\n          minimum: 0\n          maximum: 1000\n          example: 20\n        application_status:\n          description: Filter by application_status (on impact)\n          default:\n            - past\n            - ongoing\n            - coming\n          type: array\n          items:\n            type: string\n            enum:\n              - past\n              - ongoing\n              - coming\n        publication_status:\n          description: Filter by publication_status (on disruption)\n          default:\n            - past\n            - ongoing\n            - coming\n          type: array\n          items:\n            type: string\n            enum:\n              - past\n              - ongoing\n              - coming\n        ends_after_date:\n          description: Start-date restriction for end_publication date\n          type: string\n          pattern: '^\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}Z$'\n          example: '2018-08-03T12:19:13Z'\n        ends_before_date:\n          description: End-date restriction for end_publication date\n          type: string\n          pattern: '^\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}Z$'\n          example: '2018-08-03T12:19:13Z'\n        application_period:\n          required:\n            - begin\n            - end\n          type: object\n          description: Filter on impact application_period\n          properties:\n            begin:\n              type: string\n              pattern: '^\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}Z$'\n              example: '2018-08-03T12:19:13Z'\n            end:\n              type: string\n              pattern: '^\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}Z$'\n              example: '2018-08-03T14:19:13Z'\n        current_time:\n          description: Parameter for settings the current time, mostly for debugging purpose\n          default: now\n          type: string\n          pattern: '^\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}Z$'\n          example: '2018-08-03T12:19:13Z'\n        tag:\n          description: Filter by tag (id of tag)\n          type: array\n          items:\n            type: string\n            format: uuid\n        with_disruption_types:\n          description: Filter by type (include)\n          type: array\n          items:\n            type: string\n            enum:\n              - unexpected\n        without_disruption_types:\n          description: Filter by type (exclude)\n          type: array\n          items:\n            type: string\n            enum:\n              - unexpected\n        uri:\n          description: Filter by uri of ptobject\n          type: string\n        line_section:\n          description: If uri is a line id, filter also on related line_section(s)\n          type: boolean\n          default: false\n        rail_section:\n          description: If uri is a line id, filter also on related rail_section(s)\n          type: boolean\n          default: false\n        status:\n          description: Filter by status\n          default:\n            - published\n          type: array\n          items:\n            type: string\n            enum:\n              - archived\n              - published\n              - draft (deprecated)\n        depth:\n          description: With depth=2, you could retrieve the first page of impacts from the\n            disruption\n          type: integer\n          default: 1\n        causes_ids:\n          $ref: \"#/components/schemas/causes_ids_filter\"\n        cause_category_id:\n          description: Filter by category id\n          type: string\n          format: uuid\n        ptObjectFilter:\n          $ref: \"#/components/schemas/pt_object_filter\"\n        severity_ids:\n          $ref: \"#/components/schemas/severity_ids_filter\"\n        sort:\n          type: object\n          properties:\n            by:\n              description: order column\n              type: string\n              enum:\n                - disruptionUpdatedAt\n                - impactsSeverityPriority\n            order:\n              description: order type\n              default: asc\n              type: string\n              enum:\n                - desc\n                - asc\n    error_404:\n      type: object\n      properties:\n        status:\n          type: number\n        message:\n          type: string\n    error_occurred:\n      type: object\n      properties:\n        error:\n          type: object\n          properties:\n            message:\n              type: string\n    href:\n      type: object\n      properties:\n        href:\n          type: string\n    impact:\n      type: object\n      properties:\n        application_period_patterns:\n          type: array\n          items:\n            $ref: \"#/components/schemas/application_period_pattern\"\n        application_periods:\n          type: array\n          items:\n            $ref: \"#/components/schemas/period\"\n        created_at:\n          type: string\n          pattern: '^\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}Z$'\n          example: '2018-08-03T12:19:13Z'\n        disruption:\n          $ref: \"#/components/schemas/href\"\n        id:\n          description: Impact ID\n          type: string\n          format: uuid\n        messages:\n          type: array\n          items:\n            $ref: \"#/components/schemas/impact_message\"\n        notification_date:\n          description: Date of notification (if not set and send_notifications is true, it\n            will be the current UTC date)\n          type: string\n          pattern: '^\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}Z$'\n          example: '2018-08-03T12:19:13Z'\n        objects:\n          type: array\n          description: List with impacted PT objects\n          items:\n            type: object\n            properties:\n              id:\n                description: Impacted PT object ID in navitia\n                type: string\n              name:\n                description: Name of impacted PT object in navitia\n                type: string\n              type:\n                description: Impacted PT object type in navitia\n                type: string\n        self:\n          $ref: \"#/components/schemas/href\"\n        send_notifications:\n          description: If notifications should be send or not ! deprecated in favor of Message value\n          type: boolean\n          default: false\n          deprecated: true\n        severity:\n          $ref: \"#/components/schemas/severity\"\n        updated_at:\n          type: string\n          pattern: '^\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}Z$'\n          example: '2018-08-03T12:19:13Z'\n    impact_creation:\n      type: object\n      required:\n        - severity\n        - objects\n      properties:\n        application_period_patterns:\n          type: array\n          description: Either application_period_patterns or application_periods could be\n            used\n          items:\n            $ref: \"#/components/schemas/application_period_pattern_create\"\n        application_periods:\n          type: array\n          description: Either application_period_patterns or application_periods could be\n            used\n          items:\n            $ref: \"#/components/schemas/period_create\"\n        severity:\n          type: object\n          properties:\n            id:\n              description: Severity ID\n              type: string\n              format: uuid\n        messages:\n          description: List with messages by Channel\n          type: array\n          items:\n            $ref: \"#/components/schemas/impact_message\"\n        objects:\n          type: array\n          description: List with impacted PT objects\n          items:\n            oneOf:\n              - $ref: \"#/components/schemas/impact_object\"\n              - $ref: \"#/components/schemas/impact_object_line_section\"\n              - $ref: \"#/components/schemas/impact_object_rail_section\"\n        send_notifications:\n          description: If notifications should be send or not ! deprecated in favor of Message value\n          type: boolean\n          default: false\n          deprecated: true\n        notification_date:\n          description: Date of notification (if not set and send_notifications is true, it\n            will be the current UTC date) ! deprecated in favor of Message value\n          type: string\n          pattern: '^\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}Z$'\n          example: '2018-08-03T12:19:13Z'\n          deprecated: true\n    impact_message:\n      type: object\n      properties:\n        id:\n          type: string\n          format: uuid\n          readOnly: true\n        created_at:\n          type: string\n          pattern: '^\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}Z$'\n          example: '2018-08-03T12:19:13Z'\n        updated_at:\n          type: string\n          pattern: '^\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}Z$'\n          example: '2018-08-03T12:19:13Z'\n        text:\n          description: Message for given channel\n          type: string\n        channel:\n          $ref: \"#/components/schemas/impact_message_channel\"\n        send_notification:\n          description: If notification should be send or not.\n          type: boolean\n          default: null\n        notification_date:\n          description: Date of notification for this message (if not set and send_notification is true, it\n            will be the current UTC date)\n          type: string\n          pattern: '^\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}Z$'\n          example: '2018-08-03T12:19:13Z'\n        meta:\n          type: array\n          description: Message meta for additional information\n          items:\n            $ref: \"#/components/schemas/meta\"\n    impact_message_channel:\n      type: object\n      properties:\n        id:\n          type: string\n          format: uuid\n        name:\n          type: string\n        content_type:\n          type: string\n        max_size:\n          type: integer\n        created_at:\n          type: string\n          pattern: '^\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}Z$'\n          example: '2018-08-03T12:19:13Z'\n        updated_at:\n          type: string\n          pattern: '^\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}Z$'\n          example: '2018-08-03T12:19:13Z'\n        types:\n          type: array\n          items:\n            type: string\n    impact_with_disruption:\n      type: object\n      properties:\n        application_period_patterns:\n          type: array\n          items:\n            $ref: \"#/components/schemas/application_period_pattern\"\n        application_periods:\n          type: array\n          items:\n            $ref: \"#/components/schemas/period\"\n        created_at:\n          type: string\n          pattern: '^\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}Z$'\n          example: '2018-08-03T12:19:13Z'\n        disruption:\n          $ref: \"#/components/schemas/disruption_in_impact\"\n        id:\n          description: Impact ID\n          type: string\n          format: uuid\n        messages:\n          type: array\n          items:\n            $ref: \"#/components/schemas/impact_message\"\n        objects:\n          type: array\n          description: List with impacted PT objects\n          items:\n            type: object\n            properties:\n              id:\n                description: Impacted PT object ID in navitia\n                type: string\n              name:\n                description: Name of impacted PT object in navitia\n                type: string\n              type:\n                description: Impacted PT object type in navitia\n                type: string\n        self:\n          $ref: \"#/components/schemas/href\"\n        send_notifications:\n          description: If notifications should be send or not ! deprecated in favor of Message value\n          type: boolean\n          default: false\n          deprecated: true\n        notification_date:\n          description: Date of notification (if not set and send_notifications is true, it\n            will be the current UTC date) ! deprecated in favor of Message value\n          type: string\n          pattern: '^\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}Z$'\n          example: '2018-08-03T12:19:13Z'\n        severity:\n          $ref: \"#/components/schemas/severity\"\n        updated_at:\n          type: string\n          pattern: '^\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}Z$'\n          example: '2018-08-03T12:19:13Z'\n          deprecated: true\n    impacts_export_create:\n      type: object\n      required:\n        - start_date\n        - end_date\n      properties:\n        start_date:\n          type: string\n          pattern: '^\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}Z$'\n          example: 2019-01-01T00:00:00Z\n        end_date:\n          type: string\n          pattern: '^\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}Z$'\n          example: 2019-03-01T23:59:59Z\n        time_zone:\n          type: string\n          default: UTC\n          example: Europe/Paris\n    impacts_exports_status:\n      type: object\n      properties:\n        id:\n          type: string\n          format: uuid\n        status:\n          type: string\n          enum:\n            - waiting\n            - handling\n            - error\n            - done\n        process_start_date:\n          type: string\n          pattern: '^\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}Z$'\n          example: 2019-03-20T16:00:00Z\n        start_date:\n          type: string\n          pattern: '^\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}Z$'\n          example: 2019-01-01T00:00:00Z\n        end_date:\n          type: string\n          pattern: '^\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}Z$'\n          example: 2019-03-01T23:59:59Z\n        time_zone:\n          type: string\n          example: Europe/Paris\n        created_at:\n          type: string\n          pattern: '^\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}Z$'\n          example: '2018-08-03T12:19:13Z'\n        updated_at:\n          type: string\n          pattern: '^\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}Z$'\n          example: '2018-08-03T12:19:13Z'\n    impacts_search:\n      type: object\n      properties:\n        start_page:\n          description: Index of the first element returned (start at 1)\n          type: integer\n          default: 1\n          minimum: 1\n          example: 1\n        items_per_page:\n          description: Number of items per page\n          type: integer\n          default: 20\n          minimum: 0\n          maximum: 1000\n          example: 20\n        severity_ids:\n          $ref: \"#/components/schemas/severity_ids_filter\"\n        application_status:\n          description: Filter by application_status (on impact)\n          default:\n            - past\n            - ongoing\n            - coming\n          type: array\n          items:\n            type: string\n            enum:\n              - past\n              - ongoing\n              - coming\n        application_period:\n          required:\n            - begin\n            - end\n          type: object\n          description: Filter on impact application_period\n          properties:\n            begin:\n              type: string\n              pattern: '^\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}Z$'\n              example: '2018-08-03T12:19:13Z'\n            end:\n              type: string\n              pattern: '^\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}Z$'\n              example: '2018-08-03T14:19:13Z'\n        current_time:\n          description: Parameter for settings the current time, mostly for debugging purpose\n          default: now\n          type: string\n          pattern: '^\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}Z$'\n          example: '2018-08-03T12:19:13Z'\n        causes_ids:\n          $ref: \"#/components/schemas/causes_ids_filter\"\n        cause_category_id:\n          description: Filter by category id\n          type: string\n          format: uuid\n        ptObjectFilter:\n          $ref: \"#/components/schemas/pt_object_filter\"\n        with_disruption_types:\n          description: Filter by type (include)\n          type: array\n          items:\n            type: string\n            enum:\n              - unexpected\n        without_disruption_types:\n          description: Filter by type (exclude)\n          type: array\n          items:\n            type: string\n            enum:\n              - unexpected\n        sort:\n          type: object\n          properties:\n            by:\n              description: order column\n              type: string\n              enum:\n                - impactUpdatedAt\n                - impactApplicationEndDate\n                - severityPriority\n            order:\n              description: order type\n              default: asc\n              type: string\n              enum:\n                - desc\n                - asc\n    meta:\n      type: object\n      required:\n        - key\n        - value\n      properties:\n        key:\n          type: string\n          example: subject\n        value:\n          type: string\n          example: Mail subject\n    pagination:\n      type: object\n      properties:\n        start_page:\n          type: integer\n        items_per_page:\n          type: integer\n        total_result:\n          type: integer\n        prev:\n          $ref: \"#/components/schemas/href\"\n        next:\n          $ref: \"#/components/schemas/href\"\n        first:\n          $ref: \"#/components/schemas/href\"\n        last:\n          $ref: \"#/components/schemas/href\"\n    pagination_impacts_search:\n      type: object\n      properties:\n        start_page:\n          type: integer\n        items_per_page:\n          type: integer\n        total_result:\n          type: integer\n        items_on_page:\n          type: integer\n    period:\n      type: object\n      properties:\n        begin:\n          type: string\n          pattern: '^\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}Z$'\n          example: '2018-08-03T12:19:13Z'\n        end:\n          type: string\n          pattern: '^\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}Z$'\n          example: '2018-08-03T14:19:13Z'\n    publication_period_with_optional_begin_end:\n      type: object\n      properties:\n        begin:\n          type: string\n          pattern: '^\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}Z$'\n          example: '2018-08-03T12:19:13Z'\n        end:\n          type: string\n          pattern: '^\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}Z$'\n          example: '2018-08-03T14:19:13Z'\n    period_create:\n      type: object\n      required:\n        - begin\n        - end\n      properties:\n        begin:\n          type: string\n          pattern: '^\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}Z$'\n          example: '2018-08-03T12:19:13Z'\n        end:\n          type: string\n          pattern: '^\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}Z$'\n          example: '2018-08-03T14:19:13Z'\n    property:\n      type: object\n      properties:\n        id:\n          type: string\n          format: uuid\n        self:\n          $ref: \"#/components/schemas/href\"\n        key:\n          type: string\n        type:\n          type: string\n        created_at:\n          type: string\n          pattern: '^\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}Z$'\n          example: '2018-08-03T12:19:13Z'\n        updated_at:\n          type: string\n          pattern: '^\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}Z$'\n          example: '2018-08-03T12:19:13Z'\n    property_creation:\n      type: object\n      required:\n        - key\n        - type\n      properties:\n        key:\n          type: string\n        type:\n          type: string\n    pt_object_filter:\n      type: object\n      description: Filter by ptObject list. If set it returns impacts (or disruptions which contain impacts) with one of these ptObjects.\n      properties:\n        networks:\n          type: array\n          items:\n            description: Id of network object\n            type: string\n        lines:\n          type: array\n          items:\n            description: Id of line object\n            type: string\n        routes:\n          type: array\n          items:\n            description: Id of route object\n            type: string\n        stop_points:\n          type: array\n          items:\n            description: Id of stop_point object\n            type: string\n        stop_areas:\n          type: array\n          items:\n            description: Id of stop_area object\n            type: string\n    severity:\n      type: object\n      properties:\n        id:\n          type: string\n          format: uuid\n        self:\n          $ref: \"#/components/schemas/href\"\n        color:\n          type: string\n        created_at:\n          type: string\n          pattern: '^\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}Z$'\n          example: '2018-08-03T12:19:13Z'\n        effect:\n          type: string\n          enum:\n            - no_service\n            - reduced_service\n            - significant_delays\n            - detour\n            - additional_service\n            - modified_service\n            - other_effect\n            - unknown_effect\n            - stop_moved\n            - None\n        priority:\n          type: integer\n        updated_at:\n          type: string\n          pattern: '^\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}Z$'\n          example: '2018-08-03T12:19:13Z'\n        wording:\n          type: string\n        wordings:\n          type: array\n          items:\n            $ref: \"#/components/schemas/wording\"\n    severity_creation:\n      type: object\n      required:\n        - wordings\n      properties:\n        color:\n          type: string\n        effect:\n          type: string\n          enum:\n            - no_service\n            - reduced_service\n            - significant_delays\n            - detour\n            - additional_service\n            - modified_service\n            - other_effect\n            - unknown_effect\n            - stop_moved\n            - None\n        priority:\n          type: integer\n          default: 0\n        wordings:\n          type: array\n          items:\n            $ref: \"#/components/schemas/wording\"\n    severity_ids_filter:\n      description: Filter by severity ids. If set it returns impacts (or disruptions which contain impacts) with one of these severities ids.\n      type: array\n      items:\n        type: string\n        format: uuid\n    tag:\n      type: object\n      properties:\n        id:\n          type: string\n          format: uuid\n        self:\n          $ref: \"#/components/schemas/href\"\n        name:\n          type: string\n        created_at:\n          type: string\n          pattern: '^\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}Z$'\n          example: '2018-08-03T12:19:13Z'\n        updated_at:\n          type: string\n          pattern: '^\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}Z$'\n          example: '2018-08-03T12:19:13Z'\n    tag_creation:\n      type: object\n      required:\n        - name\n      properties:\n        name:\n          type: string\n    traffic_report:\n      type: array\n      items:\n        $ref: \"#/components/schemas/traffic_report_for_network\"\n    traffic_report_disruption:\n      type: object\n      properties:\n        id:\n          type: string\n          format: uuid\n          description: Impact ID\n        disruption_id:\n          type: string\n          format: uuid\n          description: Impact ID\n        status:\n          type: string\n          enum:\n            - active\n          description: If impact is active or not\n        cause:\n          type: string\n          description: Label of related cause\n        severity:\n          type: object\n          properties:\n            id:\n              type: string\n              format: uuid\n              description: Severity ID\n            name:\n              type: string\n              description: Severity name\n            effect:\n              type: string\n              description: One of allowed severity effect\n              enum:\n                - no_service\n                - reduced_service\n                - significant_delays\n                - detour\n                - additional_service\n                - modified_service\n                - other_effect\n                - unknown_effect\n                - stop_moved\n                - None\n            color:\n              type: string\n              description: Hexadecimal color code\n            priority:\n              type: integer\n        application_periods:\n          type: array\n          items:\n            $ref: \"#/components/schemas/period\"\n        messages:\n          type: array\n          items:\n            $ref: \"#/components/schemas/traffic_report_message\"\n    traffic_report_for_network:\n      type: object\n      required:\n        - network\n      properties:\n        network:\n          type: object\n          description: Impacted Network\n          properties:\n            name:\n              description: Network name\n              type: string\n            id:\n              description: Network identifier in Navitia\n              type: string\n        line_sections:\n          description: Impacted line sections\n          type: array\n          items:\n            $ref: \"#/components/schemas/traffic_report_line_section\"\n        lines:\n          description: Impacted lines\n          type: array\n          items:\n            $ref: \"#/components/schemas/traffic_report_line\"\n        stop_areas:\n          type: array\n          description: Impacted stop areas\n          items:\n            $ref: \"#/components/schemas/traffic_report_stop\"\n        stop_points:\n          type: array\n          description: Impacted stop points\n          items:\n            $ref: \"#/components/schemas/traffic_report_stop\"\n    traffic_report_line_section:\n      type: object\n      properties:\n        line_section:\n          type: object\n          properties:\n            start_point:\n              type: object\n              properties:\n                type:\n                  type: string\n                id:\n                  type: string\n            end_point:\n              type: object\n              properties:\n                type:\n                  type: string\n                id:\n                  type: string\n            metas:\n              type: array\n              items:\n                $ref: \"#/components/schemas/traffic_report_line_section_meta\"\n            routes:\n              type: array\n              items:\n                $ref: \"#/components/schemas/traffic_report_line_section_route\"\n            line:\n              type: object\n              properties:\n                id:\n                  type: string\n                code:\n                  type: string\n                type:\n                  type: string\n                name:\n                  type: string\n        type:\n          type: string\n        id:\n          type: string\n          format: uuid\n        links:\n          type: array\n          items:\n            $ref: \"#/components/schemas/traffic_report_link\"\n    traffic_report_line:\n      type: object\n      properties:\n        code:\n          description: Line code\n          type: string\n        name:\n          description: Line name\n          type: string\n        id:\n          description: Line identifier in Navitia\n          type: string\n        links:\n          type: array\n          items:\n            $ref: \"#/components/schemas/traffic_report_link\"\n    traffic_report_line_section_meta:\n      type: object\n      properties:\n        value:\n          type: string\n        key:\n          type: string\n    traffic_report_line_section_route:\n      type: object\n      properties:\n        type:\n          type: string\n        id:\n          type: string\n    traffic_report_link:\n      type: object\n      properties:\n        internal:\n          type: boolean\n        template:\n          type: boolean\n        type:\n          type: string\n        id:\n          type: string\n          format: uuid\n        rel:\n          type: string\n    traffic_report_message:\n      type: object\n      properties:\n        text:\n          type: string\n        channel:\n          type: object\n          properties:\n            id:\n              type: string\n              format: uuid\n            name:\n              type: string\n            content_type:\n              type: string\n            max_size:\n              type: integer\n            types:\n              type: array\n              items:\n                type: string\n    traffic_report_stop:\n      type: object\n      properties:\n        name:\n          type: string\n        id:\n          type: string\n        links:\n          type: array\n          items:\n            $ref: \"#/components/schemas/traffic_report_link\"\n    wording:\n      type: object\n      required:\n        - key\n        - value\n      properties:\n        key:\n          type: string\n        value:\n          type: string\n    disruption_history:\n      type: object\n      properties:\n        cause:\n          $ref: \"#/components/schemas/cause\"\n        contributor:\n          type: string\n          description: Contributor code\n        author:\n          $ref: \"#/components/schemas/author\"\n        created_at:\n          type: string\n          pattern: '^\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}Z$'\n          example: '2018-08-03T12:19:13Z'\n        id:\n          type: string\n          format: uuid\n          description: Disruption ID\n        impacts:\n          type: object\n          description: Links to impacts of this disruption\n          properties:\n            impacts:\n              type: array\n              items:\n                $ref: \"#/components/schemas/impact\"\n            pagination:\n              $ref: \"#/components/schemas/pagination\"\n        localization:\n          type: array\n          description: List of stop areas\n          items:\n            type: object\n            required:\n              - id\n              - type\n            properties:\n              id:\n                type: string\n                description: Stop area ID\n              label:\n                type: string\n                description: Label of stop area\n              name:\n                type: string\n                description: Label of stop area\n              type:\n                type: string\n                enum:\n                  - stop_area\n              codes:\n                type: array\n                items:\n                  type: object\n                  properties:\n                    type:\n                      type: string\n                      description: Type of code\n                    value:\n                      type: string\n                      description: Value of code\n              coord:\n                type: object\n                description: Coordinates - WGS84\n                properties:\n                  lat:\n                    type: number\n                    format: float\n                  lon:\n                    type: number\n                    format: float\n        note:\n          type: string\n          description: Service note of disruption\n        properties:\n          type: object\n          description: Associated properties\n        publication_period:\n          $ref: \"#/components/schemas/period\"\n        publication_status:\n          type: string\n          description: \u003e\n            Status of publication.\n\n            past when publication end date is in past\n\n            ongoing when publication start date is in past and end date is in future\n\n            coming when publication start date is in future\n          enum:\n            - past\n            - ongoing\n            - coming\n        reference:\n          type: string\n          description: Publication reference label\n        self:\n          $ref: \"#/components/schemas/href\"\n        status:\n          type: string\n          enum:\n            - archived\n            - published\n            - draft (deprecated)\n        tags:\n          type: array\n          description: List of associated tags\n          items:\n            $ref: \"#/components/schemas/tag\"\n        type:\n          type: string\n          enum:\n            - unexpected\n        updated_at:\n          type: string\n          pattern: '^\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}Z$'\n          example: '2018-08-03T12:19:13Z'\n        version:\n          type: integer\n          description: Number of how many time this disruption has been changed\n    author:\n      type: string\n      description: ID of disruption creator or editor\n    contributor_create:\n      type: object\n      required:\n        - code\n      properties:\n        code:\n          type: string\n          minLength: 1\n          maxLength: 250\n          description: Code of the new contributor\n    contributor:\n      type: object\n      properties:\n        code:\n          type: string\n          minLength: 1\n          maxLength: 250\n          description: Code of the contributor\n",
			"canonicalURL": "/github.com/CanalTP/Chaos@4d2436b6c08a884dfbed33f297d8a57f611d14d5/-/blob/documentation/swagger.yml",
			"externalURLs": [
				{
					"url": "https://github.com/CanalTP/Chaos/blob/4d2436b6c08a884dfbed33f297d8a57f611d14d5/documentation/swagger.yml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "parse: parse spec: parse components: schemas: \"impact_creation\": parse schema: property \"messages\": parse schema: item: parse schema: resolve \"#/components/schemas/impact_message\": parse schema: property \"send_notification\": unexpected default \"null\" value"
}