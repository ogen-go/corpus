{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/DanielHe4rt/lumen-boilerplate"
		},
		"file": {
			"name": "swagger.yaml",
			"size": 0,
			"path": "public/swagger/swagger.yaml",
			"byteSize": 7080,
			"content": "openapi: 3.0.0\ninfo:\n  title: 'BusqueDev API'\n  contact:\n    email: hey@danielheart.dev\n  version: 0.0.0\npaths:\n  /auth/login:\n    post:\n      tags:\n        - auth\n      summary: 'Autenticação de usuário'\n      operationId: AuthLogin\n      parameters:\n        -\n          name: email\n          in: query\n          description: 'E-mail para autenticação'\n          required: true\n          schema:\n            type: string\n        -\n          name: password\n          in: query\n          description: 'Senha para autenticação'\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: ...\n  /auth/refresh:\n    post:\n      tags:\n        - auth\n      summary: 'Refresh de token do usuário'\n      operationId: AuthRefresh\n      parameters:\n        -\n          name: refresh_token\n          in: query\n          description: 'Token de atualização'\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: ...\n      security:\n        -\n          api_key: []\n  /auth/forgot:\n    post:\n      tags:\n        - auth\n      summary: 'Envia e-mail para recuperação de senha do usuário'\n      operationId: AuthForgot\n      parameters:\n        -\n          name: email\n          in: query\n          description: 'E-mail do usuário'\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: ...\n      security:\n        -\n          api_key: []\n  /auth/reset:\n    post:\n      tags:\n        - auth\n      summary: 'Reseta a senha do usuário e retorna o bearer para autenticação'\n      operationId: AuthReset\n      parameters:\n        -\n          name: token\n          in: query\n          description: 'Token do usuário'\n          required: true\n          schema:\n            type: string\n        -\n          name: password\n          in: query\n          description: 'Senha do usuário'\n          required: true\n          schema:\n            type: string\n        -\n          name: password_confirmation\n          in: query\n          description: 'Confirmação do usuário'\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: ...\n      security:\n        -\n          api_key: []\n  /users/me:\n    get:\n      tags:\n        - users\n        - me\n      summary: 'Retorna as informações do usuário autenticado'\n      operationId: GetMeUser\n      parameters:\n        -\n          name: includes\n          in: path\n          description: 'array de relações (ORM)'\n          required: false\n          schema:\n            type: string\n      responses:\n        '200':\n          description: ...\n      security:\n        -\n          api_key: []\n    put:\n      tags:\n        - users\n        - me\n      summary: 'Atualiza as informações do usuário autenticado'\n      operationId: PutMeUser\n      parameters:\n        -\n          name: name\n          in: query\n          description: 'Nome do usuário'\n          required: false\n          schema:\n            type: string\n        -\n          name: birthdate\n          in: query\n          description: 'Data de nascimento do usuário'\n          required: false\n          schema:\n            type: string\n      responses:\n        '200':\n          description: ...\n      security:\n        -\n          api_key: []\n  /users/me/password:\n    put:\n      tags:\n        - users\n        - me\n      summary: 'Atualiza a senha do usuário autenticado'\n      operationId: PutMeUserPassword\n      parameters:\n        -\n          name: old_password\n          in: query\n          description: 'Senha antiga do usuário'\n          required: true\n          schema:\n            type: string\n        -\n          name: password\n          in: query\n          description: 'Nova senha'\n          required: true\n          schema:\n            type: string\n        -\n          name: password_confirmation\n          in: query\n          description: 'Confirmação de senha'\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: ...\n      security:\n        -\n          api_key: []\n  /users:\n    get:\n      tags:\n        - users\n      summary: 'Listagem de usuários com paginação'\n      operationId: GetUsers\n      responses:\n        '200':\n          description: ...\n    post:\n      tags:\n        - users\n      summary: 'Criação de novos usuários'\n      operationId: PostUser\n      parameters:\n        -\n          name: name\n          in: query\n          description: 'Nome do usuário'\n          required: true\n          schema:\n            type: string\n        -\n          name: email\n          in: query\n          description: 'E-mail do usuário'\n          required: true\n          schema:\n            type: string\n        -\n          name: password\n          in: query\n          description: 'Senha do usuário'\n          required: true\n          schema:\n            type: string\n        -\n          name: password_confirmation\n          in: query\n          description: 'Confirmação de senha do usuário'\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: ...\n  '/users/{userId}':\n    get:\n      tags:\n        - users\n      summary: 'Retorna um usuário'\n      operationId: GetUser\n      parameters:\n        -\n          name: userId\n          in: path\n          description: 'Id do usuário a ser pesquisado'\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: ...\n    put:\n      tags:\n        - users\n      summary: 'Edição de um usuário'\n      operationId: putUser\n      parameters:\n        -\n          name: userId\n          in: path\n          description: 'Id do usuário'\n          required: true\n          schema:\n            type: string\n        -\n          name: name\n          in: query\n          description: 'Nome do usuário'\n          required: true\n          schema:\n            type: string\n        -\n          name: email\n          in: query\n          description: 'E-mail do usuário'\n          required: true\n          schema:\n            type: string\n        -\n          name: role\n          in: query\n          description: 'Aluno = 1, Professor = 2'\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: ...\n    delete:\n      tags:\n        - users\n      summary: 'Deleta um usuário'\n      operationId: DeleteUser\n      parameters:\n        -\n          name: userId\n          in: path\n          description: 'Id do usuário a ser deletado'\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: ...\n  /:\n    get:\n      description: 'Home page'\n      responses:\n        default:\n          description: 'Welcome page'\ncomponents:\n  securitySchemes:\n    api_key:\n      type: apiKey\n      name: Authorization\n      in: header\n",
			"canonicalURL": "/github.com/DanielHe4rt/lumen-boilerplate@2f4ee93b9f2c340ef91db9c1fb7fec0acbe3c2fb/-/blob/public/swagger/swagger.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/DanielHe4rt/lumen-boilerplate/blob/2f4ee93b9f2c340ef91db9c1fb7fec0acbe3c2fb/public/swagger/swagger.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "parse: parse spec: parse operations: path \"/users/me\": at 1:2713: get: operation \"GetMeUser\": at 1:2720: parameters: parse parameter \"includes\": at 1:2761: path parameters must be required"
}