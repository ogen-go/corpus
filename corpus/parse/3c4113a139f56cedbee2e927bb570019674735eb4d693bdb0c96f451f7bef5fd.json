{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/rarible/ethereum-openapi"
		},
		"file": {
			"name": "openapi.yaml",
			"size": 0,
			"path": "protocol-api-order/openapi.yaml",
			"byteSize": 66016,
			"content": "openapi: 3.0.3\ninfo:\n  title: OpenAPI definition\n  version: v0.1\n\npaths:\n\n  ######################### Sign API #########################\n\n  \"/v0.1/signature/x2y2/order\":\n    post:\n      tags:\n        - order-signature-controller\n      operationId: orderSignX2Y2\n      description: Fetch x2y2 order sign\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/X2Y2OrderSignRequest\"\n        required: true\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/X2Y2SignResponse\"\n        '400':\n          $ref: \"#/components/responses/BadRequest\"\n        '500':\n          $ref: \"#/components/responses/ServerError\"\n\n  \"/v0.1/signature/x2y2/cancel\":\n    post:\n      tags:\n        - order-signature-controller\n      operationId: cancelSignX2Y2\n      description: Fetch x2y2 cancel sign\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/X2Y2GetCancelInputRequest\"\n        required: true\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/X2Y2SignResponse\"\n        '400':\n          $ref: \"#/components/responses/BadRequest\"\n        '500':\n          $ref: \"#/components/responses/ServerError\"\n\n  \"/v0.1/signature/validate\":\n    post:\n      tags:\n        - order-signature-controller\n      operationId: validate\n      description: Validation of the order signature\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/EthereumSignatureValidationForm\"\n        required: true\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                type: boolean\n        '400':\n          $ref: \"#/components/responses/BadRequest\"\n        '500':\n          $ref: \"#/components/responses/ServerError\"\n\n  ####################### Encoder API ########################\n\n  \"/v0.1/encoder/order\":\n    post:\n      tags:\n        - order-encode-controller\n      operationId: encodeOrder\n      deprecated: true\n      description: Deprecated. Use Rarible Protocol Ethereum SDK https://github.com/rarible/ethereum-sdk/tree/master\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/OrderForm\"\n        required: true\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/EncodedOrder\"\n        '400':\n          $ref: \"#/components/responses/OrderDataApiError\"\n        '500':\n          $ref: \"#/components/responses/ServerError\"\n\n  \"/v0.1/encoder/data\":\n    post:\n      deprecated: true\n      description: This method should not be used and will be removed soon\n      tags:\n        - order-encode-controller\n      operationId: encodeOrderData\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/OrderData\"\n        required: true\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/EncodedOrderData\"\n        '400':\n          $ref: \"#/components/responses/BadRequest\"\n        '500':\n          $ref: \"#/components/responses/ServerError\"\n\n  \"/v0.1/encoder/assetType\":\n    post:\n      deprecated: true\n      description: This method should not be used and will be removed soon\n      tags:\n        - order-encode-controller\n      operationId: encodeOrderAssetType\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/AssetType\"\n        required: true\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/EncodedOrderData\"\n        '400':\n          $ref: \"#/components/responses/BadRequest\"\n        '500':\n          $ref: \"#/components/responses/ServerError\"\n\n  ####################### Orders API ########################\n\n  \"/v0.1/orders\":\n    post:\n      tags:\n        - order-controller\n      description: Create or update order\n      operationId: upsertOrder\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/OrderForm\"\n        required: true\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Order\"\n        '400':\n          $ref: \"#/components/responses/OrderUpdateApiError\"\n        '500':\n          $ref: \"#/components/responses/ServerError\"\n\n  \"/v0.1/orders/{hash}/prepareTx\":\n    post:\n      tags:\n        - order-controller\n      deprecated: true\n      description: Prepare order transaction. Deprecated. Use Rarible Protocol Ethereum SDK https://github.com/rarible/ethereum-sdk/tree/master\n      operationId: prepareOrderTransaction\n      parameters:\n        - name: hash\n          description: \"Hash of the order\"\n          in: path\n          required: true\n          schema:\n            type: string\n          example: 0x38a2616dcff042fa157b2d5389171fe6f1d92c9dc3c85b7465a7e60948bf3ba0\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/PrepareOrderTxForm\"\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/PrepareOrderTxResponse\"\n        '404':\n          $ref: \"#/components/responses/EntityNotFound\"\n        '400':\n          $ref: \"#/components/responses/BadRequest\"\n        '500':\n          $ref: \"#/components/responses/ServerError\"\n\n  \"/v0.1/orders/{hash}/prepareCancelTx\":\n    post:\n      tags:\n        - order-controller\n      description: Prepare order for cancel transaction\n      operationId: prepareOrderCancelTransaction\n      parameters:\n        - name: hash\n          description: \"Hash of the order\"\n          in: path\n          required: true\n          schema:\n            type: string\n          example: 0x38a2616dcff042fa157b2d5389171fe6f1d92c9dc3c85b7465a7e60948bf3ba0\n      x-codeSamples:\n        - lang: 'cURL'\n          source: |\n            curl --request POST \\\n            --url 'https://ethereum-api.rarible.org/v0.1/order/orders/0x38a2616dcff042fa157b2d5389171fe6f1d92c9dc3c85b7465a7e60948bf3ba0/prepareCancelTx'\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/PreparedOrderTx\"\n        '404':\n          $ref: \"#/components/responses/EntityNotFound\"\n        '400':\n          $ref: \"#/components/responses/BadRequest\"\n        '500':\n          $ref: \"#/components/responses/ServerError\"\n\n  \"/v0.1/orders/{hash}\":\n    get:\n      tags:\n        - order-controller\n      description: Returns the order by order hash\n      operationId: getOrderByHash\n      parameters:\n        - name: hash\n          description: \"Hash of the order\"\n          in: path\n          required: true\n          schema:\n            type: string\n          example: 0x38a2616dcff042fa157b2d5389171fe6f1d92c9dc3c85b7465a7e60948bf3ba0\n      x-codeSamples:\n        - lang: 'cURL'\n          source: |\n            curl --request GET \\\n            --url 'https://ethereum-api.rarible.org/v0.1/order/orders/0x38a2616dcff042fa157b2d5389171fe6f1d92c9dc3c85b7465a7e60948bf3ba0'\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Order\"\n        '404':\n          $ref: \"#/components/responses/EntityNotFound\"\n        '400':\n          $ref: \"#/components/responses/BadRequest\"\n        '500':\n          $ref: \"#/components/responses/ServerError\"\n\n  \"/v0.1/orders/{hash}/updateMakeStock\":\n    get:\n      tags:\n        - order-controller\n      description: Update stock of the order by order hash\n      operationId: updateOrderMakeStock\n      parameters:\n        - name: hash\n          description: \"Hash of the order\"\n          in: path\n          required: true\n          schema:\n            type: string\n          example: 0x38a2616dcff042fa157b2d5389171fe6f1d92c9dc3c85b7465a7e60948bf3ba0\n      x-codeSamples:\n        - lang: 'cURL'\n          source: |\n            curl --request GET \\\n            --url 'https://ethereum-api.rarible.org/v0.1/order/orders/0x38a2616dcff042fa157b2d5389171fe6f1d92c9dc3c85b7465a7e60948bf3ba0/updateMakeStock'\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Order\"\n        '404':\n          $ref: \"#/components/responses/EntityNotFound\"\n        '400':\n          $ref: \"#/components/responses/BadRequest\"\n        '500':\n          $ref: \"#/components/responses/ServerError\"\n\n  \"/v0.1/orders/buyerFeeSignature\":\n    post:\n      tags:\n        - order-controller\n      description: Buyer's signature for a fee\n      operationId: buyerFeeSignature\n      parameters:\n        - name: fee\n          description: \"Fee value for operation\"\n          in: query\n          required: true\n          schema:\n            type: integer\n            minimum: 0\n            format: int32\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/OrderForm\"\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Binary\"\n        '400':\n          $ref: \"#/components/responses/BadRequest\"\n        '500':\n          $ref: \"#/components/responses/ServerError\"\n\n  ####################### Orders-Search API ########################\n\n  \"/v0.1/orders/all\":\n    get:\n      deprecated: true\n      tags:\n        - order-controller\n      description: Returns all orders by specified parameters\n      operationId: getOrdersAll\n      parameters:\n        - name: origin\n          description: \"Address of the consumer to receive the commission for order\"\n          in: query\n          required: false\n          schema:\n            $ref: \"#/components/schemas/Address\"\n        - name: platform\n          description: \"The platform where the order was created\"\n          in: query\n          required: false\n          schema:\n            $ref: \"#/components/schemas/Platform\"\n        - name: continuation\n          description: \"Continuation token from the previous response\"\n          in: query\n          required: false\n          schema:\n            type: string\n        - name: size\n          description: \"The number of orders to return\"\n          in: query\n          required: false\n          schema:\n            minimum: 1\n            type: integer\n            format: int32\n      responses:\n        '200':\n          $ref: \"#/components/responses/OrderPage\"\n        '400':\n          $ref: \"#/components/responses/BadRequest\"\n        '500':\n          $ref: \"#/components/responses/ServerError\"\n\n  \"/v0.1/orders/amm/byItem\":\n    get:\n      tags:\n        - order-controller\n      operationId: getAmmOrdersByItem\n      description: Returns all AMM orders by item and order status\n      parameters:\n        - name: contract\n          description: \"Address of the contract\"\n          in: query\n          required: true\n          schema:\n            $ref: \"#/components/schemas/Address\"\n        - name: tokenId\n          description: \"Token identifier\"\n          in: query\n          required: true\n          schema:\n            $ref: \"#/components/schemas/BigInteger\"\n        - name: continuation\n          description: \"Continuation token from the previous response\"\n          in: query\n          required: false\n          schema:\n            type: string\n        - name: size\n          description: \"The number of items to return\"\n          in: query\n          required: false\n          schema:\n            minimum: 1\n            type: integer\n            format: int32\n      responses:\n        '200':\n          $ref: \"#/components/responses/OrderPage\"\n        '400':\n          $ref: \"#/components/responses/BadRequest\"\n        '500':\n          $ref: \"#/components/responses/ServerError\"\n\n  \"/v0.1/orders/amm/{hash}/holdItemIds\":\n    get:\n      tags:\n        - order-controller\n      description: Returns all item ida hold by AMM order\n      operationId: getAmmOrderItemIds\n      parameters:\n        - name: hash\n          description: \"Hash of the AMM order\"\n          in: path\n          required: true\n          schema:\n            type: string\n          example: 0x38a2616dcff042fa157b2d5389171fe6f1d92c9dc3c85b7465a7e60948bf3ba0\n        - name: continuation\n          description: \"Continuation token from the previous response\"\n          in: query\n          required: false\n          schema:\n            type: string\n        - name: size\n          description: \"The number of item ids to return\"\n          in: query\n          required: false\n          schema:\n            minimum: 1\n            type: integer\n            format: int32\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/HoldNftItemIds\"\n        '400':\n          $ref: \"#/components/responses/BadRequest\"\n        '500':\n          $ref: \"#/components/responses/ServerError\"\n\n  \"/v0.1/orders/amm/{hash}/buyInfo\":\n    get:\n      tags:\n        - order-controller\n      description: Get for buy pricing info from AMM\n      operationId: getAmmBuyInfo\n      parameters:\n        - name: hash\n          description: \"Hash of the AMM order\"\n          in: path\n          required: true\n          schema:\n            type: string\n          example: 0x38a2616dcff042fa157b2d5389171fe6f1d92c9dc3c85b7465a7e60948bf3ba0\n        - name: numNFTs\n          description: \"The number of NFTs to buy from the AMM order\"\n          in: query\n          required: true\n          schema:\n            minimum: 1\n            type: integer\n            format: int32\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/AmmTradeInfo\"\n        '400':\n          $ref: \"#/components/responses/BadRequest\"\n        '500':\n          $ref: \"#/components/responses/ServerError\"\n\n  \"/v0.1/orders/byIds\":\n    post:\n      tags:\n        - order-controller\n      description: Returns all orders by order hash\n      operationId: getOrdersByIds\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/OrderIds\"\n        required: true\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: \"#/components/schemas/Order\"\n        '400':\n          $ref: \"#/components/responses/BadRequest\"\n        '500':\n          $ref: \"#/components/responses/ServerError\"\n\n  \"/v0.1/orders/sell/byMakerAndByStatus\":\n    get:\n      tags:\n        - order-controller\n      operationId: getSellOrdersByMakerAndByStatus\n      description: Returns all orders for sale by maker and order status\n      parameters:\n        - name: maker\n          description: \"The maker of the order\"\n          in: query\n          required: true\n          schema:\n            type: array\n            minItems: 1\n            items:\n              $ref: \"#/components/schemas/Address\"\n        - name: origin\n          description: \"Address of the consumer to receive the commission for order\"\n          in: query\n          required: false\n          schema:\n            $ref: \"#/components/schemas/Address\"\n        - name: platform\n          description: \"The platform where the order was created\"\n          in: query\n          required: false\n          schema:\n            $ref: \"#/components/schemas/Platform\"\n        - name: continuation\n          description: \"Continuation token from the previous response\"\n          in: query\n          required: false\n          schema:\n            type: string\n        - name: size\n          description: \"The number of items to return\"\n          in: query\n          required: false\n          schema:\n            minimum: 1\n            type: integer\n            format: int32\n        - name: status\n          description: \"The order status\"\n          in: query\n          required: false\n          schema:\n            type: array\n            items:\n              $ref: \"#/components/schemas/OrderStatus\"\n      responses:\n        '200':\n          $ref: \"#/components/responses/OrderPage\"\n        '400':\n          $ref: \"#/components/responses/BadRequest\"\n        '500':\n          $ref: \"#/components/responses/ServerError\"\n\n  \"/v0.1/orders/sell/byItem\":\n    get:\n      deprecated: true\n      tags:\n        - order-controller\n      description: Returns all orders for sale by item\n      operationId: getSellOrdersByItem\n      parameters:\n        - name: contract\n          description: \"Address of the contract\"\n          in: query\n          required: true\n          schema:\n            $ref: \"#/components/schemas/Address\"\n        - name: tokenId\n          description: \"Token identifier\"\n          in: query\n          required: true\n          schema:\n            $ref: \"#/components/schemas/BigInteger\"\n        - name: maker\n          description: \"The maker of the order\"\n          in: query\n          required: false\n          schema:\n            $ref: \"#/components/schemas/Address\"\n        - name: origin\n          description: \"Address of the consumer to receive the commission for order\"\n          in: query\n          required: false\n          schema:\n            $ref: \"#/components/schemas/Address\"\n        - name: platform\n          description: \"The platform where the order was created\"\n          in: query\n          required: false\n          schema:\n            $ref: \"#/components/schemas/Platform\"\n        - name: continuation\n          description: \"Continuation token from the previous response\"\n          in: query\n          required: false\n          schema:\n            type: string\n        - name: size\n          description: \"The number of orders to return\"\n          in: query\n          required: false\n          schema:\n            minimum: 1\n            type: integer\n            format: int32\n      responses:\n        '200':\n          $ref: \"#/components/responses/OrderPage\"\n        '400':\n          $ref: \"#/components/responses/BadRequest\"\n        '500':\n          $ref: \"#/components/responses/ServerError\"\n\n  \"/v0.1/orders/sell/byItemAndByStatus\":\n    get:\n      tags:\n        - order-controller\n      operationId: getSellOrdersByItemAndByStatus\n      description: Returns all orders for sale by item and order status\n      parameters:\n        - name: contract\n          description: \"Address of the contract\"\n          in: query\n          required: true\n          schema:\n            $ref: \"#/components/schemas/Address\"\n        - name: tokenId\n          description: \"Token identifier\"\n          in: query\n          required: true\n          schema:\n            $ref: \"#/components/schemas/BigInteger\"\n        - name: maker\n          description: \"The maker of the order\"\n          in: query\n          required: false\n          schema:\n            $ref: \"#/components/schemas/Address\"\n        - name: origin\n          description: \"Address of the consumer to receive the commission for order\"\n          in: query\n          required: false\n          schema:\n            $ref: \"#/components/schemas/Address\"\n        - name: platform\n          description: \"The platform where the order was created\"\n          in: query\n          required: false\n          schema:\n            $ref: \"#/components/schemas/Platform\"\n        - name: continuation\n          description: \"Continuation token from the previous response\"\n          in: query\n          required: false\n          schema:\n            type: string\n        - name: size\n          description: \"The number of items to return\"\n          in: query\n          required: false\n          schema:\n            minimum: 1\n            type: integer\n            format: int32\n        - name: status\n          description: \"The order status\"\n          in: query\n          required: false\n          schema:\n            type: array\n            items:\n              $ref: \"#/components/schemas/OrderStatus\"\n        - name: currencyId\n          in: query\n          required: false\n          description: \"This parameter will be required in future releases.\"\n          schema:\n            $ref: \"#/components/schemas/Address\"\n      responses:\n        '200':\n          $ref: \"#/components/responses/OrderPage\"\n        '400':\n          $ref: \"#/components/responses/BadRequest\"\n        '500':\n          $ref: \"#/components/responses/ServerError\"\n\n  \"/v0.1/orders/currencies/bySellOrdersOfItem\":\n    get:\n      tags:\n        - order-controller\n      operationId: getCurrenciesBySellOrdersOfItem\n      description: Returns currencies taken as payment in all sell orders of the item\n      parameters:\n        - name: contract\n          description: \"Address of the contract\"\n          in: query\n          required: true\n          schema:\n            $ref: \"#/components/schemas/Address\"\n        - name: tokenId\n          description: \"Token identifier\"\n          in: query\n          required: true\n          schema:\n            $ref: \"#/components/schemas/BigInteger\"\n      responses:\n        '200':\n          $ref: \"#/components/responses/OrderCurrenciesPage\"\n        '400':\n          $ref: \"#/components/responses/BadRequest\"\n        '500':\n          $ref: \"#/components/responses/ServerError\"\n\n  \"/v0.1/orders/currencies/byBidOrdersOfItem\":\n    get:\n      tags:\n        - order-controller\n      operationId: getCurrenciesByBidOrdersOfItem\n      description: Returns currencies made as payment in all bid orders of the item\n      parameters:\n        - name: contract\n          description: \"Address of the contract\"\n          in: query\n          required: true\n          schema:\n            $ref: \"#/components/schemas/Address\"\n        - name: tokenId\n          description: \"Token identifier\"\n          in: query\n          required: true\n          schema:\n            $ref: \"#/components/schemas/BigInteger\"\n      responses:\n        '200':\n          $ref: \"#/components/responses/OrderCurrenciesPage\"\n        '400':\n          $ref: \"#/components/responses/BadRequest\"\n        '500':\n          $ref: \"#/components/responses/ServerError\"\n\n  \"/v0.1/orders/sell/byCollection\":\n    get:\n      deprecated: true\n      tags:\n        - order-controller\n      description: Returns all orders for sale by collection\n      operationId: getSellOrdersByCollection\n      parameters:\n        - name: collection\n          description: \"Address of the NFT collection\"\n          in: query\n          required: true\n          schema:\n            $ref: \"#/components/schemas/Address\"\n        - name: origin\n          description: \"Address of the consumer to receive the commission for order\"\n          in: query\n          required: false\n          schema:\n            $ref: \"#/components/schemas/Address\"\n        - name: platform\n          description: \"The platform where the order was created\"\n          in: query\n          required: false\n          schema:\n            $ref: \"#/components/schemas/Platform\"\n        - name: continuation\n          description: \"Continuation token from the previous response\"\n          in: query\n          required: false\n          schema:\n            type: string\n        - name: size\n          description: \"The number of orders to return\"\n          in: query\n          required: false\n          schema:\n            minimum: 1\n            type: integer\n            format: int32\n      responses:\n        '200':\n          $ref: \"#/components/responses/OrderPage\"\n        '400':\n          $ref: \"#/components/responses/BadRequest\"\n        '500':\n          $ref: \"#/components/responses/ServerError\"\n\n  \"/v0.1/orders/sell/byCollectionAndByStatus\":\n    get:\n      tags:\n        - order-controller\n      operationId: getSellOrdersByCollectionAndByStatus\n      description: Returns all orders for sale by collection and order status\n      parameters:\n        - name: collection\n          description: \"Address of the NFT collection\"\n          in: query\n          required: true\n          schema:\n            $ref: \"#/components/schemas/Address\"\n        - name: origin\n          description: \"Address of the consumer to receive the commission for order\"\n          in: query\n          required: false\n          schema:\n            $ref: \"#/components/schemas/Address\"\n        - name: platform\n          description: \"The platform where the order was created\"\n          in: query\n          required: false\n          schema:\n            $ref: \"#/components/schemas/Platform\"\n        - name: continuation\n          description: \"Continuation token from the previous response\"\n          in: query\n          required: false\n          schema:\n            type: string\n        - name: size\n          description: \"The number of items to return\"\n          in: query\n          required: false\n          schema:\n            minimum: 1\n            type: integer\n            format: int32\n        - name: status\n          description: \"The order status\"\n          in: query\n          required: false\n          schema:\n            type: array\n            items:\n              $ref: \"#/components/schemas/OrderStatus\"\n      responses:\n        '200':\n          $ref: \"#/components/responses/OrderPage\"\n        '400':\n          $ref: \"#/components/responses/BadRequest\"\n        '500':\n          $ref: \"#/components/responses/ServerError\"\n\n  \"/v0.1/orders/sell\":\n    get:\n      deprecated: true\n      tags:\n        - order-controller\n      description: Returns all orders for sale by specified parameters\n      operationId: getSellOrders\n      parameters:\n        - name: origin\n          description: \"Address of the consumer to receive the commission for order\"\n          in: query\n          required: false\n          schema:\n            $ref: \"#/components/schemas/Address\"\n        - name: platform\n          description: \"The platform where the order was created\"\n          in: query\n          required: false\n          schema:\n            $ref: \"#/components/schemas/Platform\"\n        - name: continuation\n          description: \"Continuation token from the previous response\"\n          in: query\n          required: false\n          schema:\n            type: string\n        - name: size\n          description: \"The number of orders to return\"\n          in: query\n          required: false\n          schema:\n            minimum: 1\n            type: integer\n            format: int32\n      responses:\n        '200':\n          $ref: \"#/components/responses/OrderPage\"\n        '400':\n          $ref: \"#/components/responses/BadRequest\"\n        '500':\n          $ref: \"#/components/responses/ServerError\"\n\n  \"/v0.1/orders/sellByStatus\":\n    get:\n      tags:\n        - order-controller\n      operationId: getSellOrdersByStatus\n      description: Returns all orders for sale by order status\n      parameters:\n        - name: origin\n          description: \"Address of the consumer to receive the commission for order\"\n          in: query\n          required: false\n          schema:\n            $ref: \"#/components/schemas/Address\"\n        - name: platform\n          description: \"The platform where the order was created\"\n          in: query\n          required: false\n          schema:\n            $ref: \"#/components/schemas/Platform\"\n        - name: continuation\n          description: \"Continuation token from the previous response\"\n          in: query\n          required: false\n          schema:\n            type: string\n        - name: size\n          description: \"The number of items to return\"\n          in: query\n          required: false\n          schema:\n            minimum: 1\n            type: integer\n            format: int32\n        - name: status\n          description: \"The order status\"\n          in: query\n          required: false\n          schema:\n            type: array\n            items:\n              $ref: \"#/components/schemas/OrderStatus\"\n        - name: sort\n          description: \"Sorting by last update\"\n          in: query\n          required: false\n          schema:\n            \"$ref\": \"#/components/schemas/OrderSort\"\n      responses:\n        '200':\n          $ref: \"#/components/responses/OrderPage\"\n        '400':\n          $ref: \"#/components/responses/BadRequest\"\n        '500':\n          $ref: \"#/components/responses/ServerError\"\n\n  ###################### Bids ######################\n\n  \"/v0.1/orders/bids/byMakerAndByStatus\":\n    get:\n      tags:\n        - order-controller\n      operationId: getOrderBidsByMakerAndByStatus\n      description: Returns all order bids by maker and order status\n      parameters:\n        - name: maker\n          description: \"The maker of the order\"\n          in: query\n          required: true\n          schema:\n            type: array\n            minItems: 1\n            items:\n              $ref: \"#/components/schemas/Address\"\n        - name: origin\n          description: \"Address of the consumer to receive the commission for order\"\n          in: query\n          required: false\n          schema:\n            $ref: \"#/components/schemas/Address\"\n        - name: platform\n          description: \"The platform where the order was created\"\n          in: query\n          required: false\n          schema:\n            $ref: \"#/components/schemas/Platform\"\n        - name: continuation\n          description: \"Continuation token from the previous response\"\n          in: query\n          required: false\n          schema:\n            type: string\n        - name: size\n          description: \"The number of orders to return\"\n          in: query\n          required: false\n          schema:\n            minimum: 1\n            type: integer\n            format: int32\n        - name: status\n          description: \"The order status\"\n          in: query\n          required: false\n          schema:\n            type: array\n            items:\n              $ref: \"#/components/schemas/OrderStatus\"\n        - name: startDate\n          description: \"Lower time border of data (unix format)\"\n          in: query\n          required: false\n          schema:\n            type: integer\n            format: int64\n        - name: endDate\n          description: \"Upper time border of data (unix format)\"\n          in: query\n          required: false\n          schema:\n            type: integer\n            format: int64\n      responses:\n        '200':\n          $ref: \"#/components/responses/OrderPage\"\n        '400':\n          $ref: \"#/components/responses/BadRequest\"\n        '500':\n          $ref: \"#/components/responses/ServerError\"\n\n  \"/v0.1/orders/bids/byItem\":\n    get:\n      deprecated: true\n      tags:\n        - order-controller\n      description: Returns all order bids by item\n      operationId: getOrderBidsByItem\n      parameters:\n        - name: contract\n          description: \"Address of the contract\"\n          in: query\n          required: true\n          schema:\n            $ref: \"#/components/schemas/Address\"\n        - name: tokenId\n          description: \"Token identifier\"\n          in: query\n          required: true\n          schema:\n            $ref: \"#/components/schemas/BigInteger\"\n        - name: maker\n          description: \"The maker of the order\"\n          in: query\n          required: false\n          schema:\n            type: array\n            items:\n              $ref: \"#/components/schemas/Address\"\n        - name: origin\n          description: \"Address of the consumer to receive the commission for order\"\n          in: query\n          required: false\n          schema:\n            $ref: \"#/components/schemas/Address\"\n        - name: platform\n          description: \"The platform where the order was created\"\n          in: query\n          required: false\n          schema:\n            $ref: \"#/components/schemas/Platform\"\n        - name: continuation\n          description: \"Continuation token from the previous response\"\n          in: query\n          required: false\n          schema:\n            type: string\n        - name: size\n          description: \"The number of orders to return\"\n          in: query\n          required: false\n          schema:\n            minimum: 1\n            type: integer\n            format: int32\n      responses:\n        '200':\n          $ref: \"#/components/responses/OrderPage\"\n        '400':\n          $ref: \"#/components/responses/BadRequest\"\n        '500':\n          $ref: \"#/components/responses/ServerError\"\n\n  \"/v0.1/orders/bids/byItemAndByStatus\":\n    get:\n      tags:\n        - order-controller\n      operationId: getOrderBidsByItemAndByStatus\n      description: Returns all order bids by item and order status\n      parameters:\n        - name: contract\n          description: \"Address of the contract\"\n          in: query\n          required: true\n          schema:\n            $ref: \"#/components/schemas/Address\"\n        - name: tokenId\n          description: \"Token identifier\"\n          in: query\n          required: true\n          schema:\n            $ref: \"#/components/schemas/BigInteger\"\n        - name: maker\n          description: \"The maker of the order\"\n          in: query\n          required: false\n          schema:\n            type: array\n            items:\n              $ref: \"#/components/schemas/Address\"\n        - name: origin\n          description: \"Address of the consumer to receive the commission for order\"\n          in: query\n          required: false\n          schema:\n            $ref: \"#/components/schemas/Address\"\n        - name: platform\n          description: \"The platform where the order was created\"\n          in: query\n          required: false\n          schema:\n            $ref: \"#/components/schemas/Platform\"\n        - name: continuation\n          description: \"Continuation token from the previous response\"\n          in: query\n          required: false\n          schema:\n            type: string\n        - name: size\n          description: \"The number of orders to return\"\n          in: query\n          required: false\n          schema:\n            minimum: 1\n            type: integer\n            format: int32\n        - name: status\n          description: \"The order status\"\n          in: query\n          required: false\n          schema:\n            type: array\n            items:\n              $ref: \"#/components/schemas/OrderStatus\"\n        - name: currencyId\n          in: query\n          required: false\n          description: \"This parameter will be required in future releases.\"\n          schema:\n            $ref: \"#/components/schemas/Address\"\n        - name: startDate\n          description: \"Lower time border of data (unix format)\"\n          in: query\n          required: false\n          schema:\n            type: integer\n            format: int64\n        - name: endDate\n          description: \"Upper time border of data (unix format)\"\n          in: query\n          required: false\n          schema:\n            type: integer\n            format: int64\n      responses:\n        '200':\n          $ref: \"#/components/responses/OrderPage\"\n        '400':\n          $ref: \"#/components/responses/BadRequest\"\n        '500':\n          $ref: \"#/components/responses/ServerError\"\n\n  \"/v0.1/orders/sync\":\n    get:\n      tags:\n        - order-controller\n      description: Returns all orders with dbUpdatedAt sorting\n      operationId: getAllSync\n      parameters:\n        - name: sort\n          description: \"Sorting by data base update\"\n          in: query\n          required: false\n          schema:\n            \"$ref\": \"#/components/schemas/SyncSort\"\n        - name: continuation\n          description: \"Continuation token from the previous response\"\n          in: query\n          required: false\n          schema:\n            type: string\n        - name: size\n          description: \"The number of orders to return\"\n          in: query\n          required: false\n          schema:\n            minimum: 1\n            type: integer\n            format: int32\n      responses:\n        '200':\n          $ref: \"#/components/responses/OrderPage\"\n        '400':\n          $ref: \"#/components/responses/BadRequest\"\n        '500':\n          $ref: \"#/components/responses/ServerError\"\n\n  \"/v0.1/orders/all/byStatus\":\n    get:\n      tags:\n        - order-controller\n      description: Returns all orders with status sorting\n      operationId: getOrdersAllByStatus\n      parameters:\n        - name: sort\n          description: \"Sorting by last update\"\n          in: query\n          required: false\n          schema:\n            \"$ref\": \"#/components/schemas/OrderSort\"\n        - name: continuation\n          description: \"Continuation token from the previous response\"\n          in: query\n          required: false\n          schema:\n            type: string\n        - name: size\n          description: \"The number of orders to return\"\n          in: query\n          required: false\n          schema:\n            minimum: 1\n            type: integer\n            format: int32\n        - name: status\n          in: query\n          required: false\n          schema:\n            type: array\n            items:\n              $ref: \"#/components/schemas/OrderStatus\"\n      responses:\n        '200':\n          $ref: \"#/components/responses/OrderPage\"\n        '400':\n          $ref: \"#/components/responses/BadRequest\"\n        '500':\n          $ref: \"#/components/responses/ServerError\"\n  \"/v0.1/bids/byItem\":\n    get:\n      deprecated: true\n      tags:\n        - order-bid-controller\n      operationId: getBidsByItem\n      parameters:\n        - name: contract\n          in: query\n          required: true\n          schema:\n            $ref: \"#/components/schemas/Address\"\n        - name: tokenId\n          in: query\n          required: true\n          schema:\n            $ref: \"#/components/schemas/BigInteger\"\n        - name: status\n          in: query\n          required: true\n          schema:\n            type: array\n            items:\n              $ref: \"#/components/schemas/OrderBidStatus\"\n        - name: maker\n          in: query\n          required: false\n          schema:\n            type: array\n            items:\n              $ref: \"#/components/schemas/Address\"\n        - name: origin\n          in: query\n          required: false\n          schema:\n            $ref: \"#/components/schemas/Address\"\n        - name: platform\n          in: query\n          required: false\n          schema:\n            $ref: \"#/components/schemas/Platform\"\n        - name: startDate\n          in: query\n          required: false\n          schema:\n            type: string\n            format: date-time\n        - name: endDate\n          in: query\n          required: false\n          schema:\n            type: string\n            format: date-time\n        - name: continuation\n          in: query\n          required: false\n          schema:\n            type: string\n        - name: size\n          in: query\n          required: false\n          schema:\n            minimum: 1\n            type: integer\n            format: int32\n      responses:\n        '200':\n          $ref: \"#/components/responses/OrderBidsPage\"\n        '400':\n          $ref: \"#/components/responses/BadRequest\"\n        '500':\n          $ref: \"#/components/responses/ServerError\"\n\n  ###################### Transactions ######################\n\n  \"/v0.1/transactions\":\n    post:\n      tags:\n        - order-transaction-controller\n      description: Create pending transaction for order\n      operationId: createOrderPendingTransaction\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/CreateTransactionRequest\"\n        required: true\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: \"#/components/schemas/LogEvent\"\n        '400':\n          $ref: \"#/components/responses/BadRequest\"\n        '500':\n          $ref: \"#/components/responses/ServerError\"\n\n  ####################### Activities ########################\n\n  \"/v0.1/activities/search\":\n    post:\n      tags:\n        - order-activity-controller\n      operationId: getOrderActivities\n      description: Returns event history with order\n      parameters:\n        - name: continuation\n          description: \"Continuation token from the previous response\"\n          in: query\n          required: false\n          schema:\n            type: string\n        - name: size\n          in: query\n          description: \"The number of items to return\"\n          required: false\n          schema:\n            type: integer\n            format: int32\n        - name: sort\n          description: \"Sorting by data update time\"\n          in: query\n          required: false\n          schema:\n            $ref: \"#/components/schemas/ActivitySort\"\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/OrderActivityFilter\"\n        required: true\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/OrderActivities\"\n        '400':\n          $ref: \"#/components/responses/BadRequest\"\n        '500':\n          $ref: \"#/components/responses/ServerError\"\n\n  \"/v0.1/activities/byId\":\n    post:\n      tags:\n        - order-activity-controller\n      operationId: getOrderActivitiesById\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/ActivitiesByIdRequest\"\n        required: true\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/OrderActivities\"\n        '400':\n          $ref: \"#/components/responses/BadRequest\"\n        '500':\n          $ref: \"#/components/responses/ServerError\"\n\n  \"/v0.1/activities/sync\":\n    get:\n      tags:\n        - order-activity-controller\n      operationId: getOrderActivitiesSync\n      description: Returns event history with order\n      parameters:\n        - name: continuation\n          description: \"Continuation token from the previous response\"\n          in: query\n          required: false\n          schema:\n            type: string\n        - name: size\n          in: query\n          description: \"The number of items to return\"\n          required: false\n          schema:\n            type: integer\n            format: int32\n        - name: sort\n          description: \"Sorting by data update time\"\n          in: query\n          required: false\n          schema:\n            $ref: \"#/components/schemas/SyncSort\"\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/OrderActivities\"\n        '400':\n          $ref: \"#/components/responses/BadRequest\"\n        '500':\n          $ref: \"#/components/responses/ServerError\"\n\n  \"/v0.1/activities/reverted/sync\":\n    get:\n      tags:\n        - order-activity-controller\n      operationId: getOrderRevertedActivitiesSync\n      description: Returns reverted event history with order\n      parameters:\n        - name: continuation\n          description: \"Continuation token from the previous response\"\n          in: query\n          required: false\n          schema:\n            type: string\n        - name: size\n          in: query\n          description: \"The number of items to return\"\n          required: false\n          schema:\n            type: integer\n            format: int32\n        - name: sort\n          description: \"Sorting by data update time\"\n          in: query\n          required: false\n          schema:\n            $ref: \"#/components/schemas/SyncSort\"\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/OrderActivities\"\n        '400':\n          $ref: \"#/components/responses/BadRequest\"\n        '500':\n          $ref: \"#/components/responses/ServerError\"\n\n  \"/v0.1/activities/sell/right\":\n    get:\n      tags:\n        - order-activity-controller\n      operationId: getOrderSellRightActivities\n      description: Returns right sell event history with order\n      parameters:\n        - name: continuation\n          description: \"Continuation token from the previous response\"\n          in: query\n          required: false\n          schema:\n            type: string\n        - name: size\n          in: query\n          description: \"The number of items to return\"\n          required: false\n          schema:\n            type: integer\n            format: int32\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Ids\"\n        '400':\n          $ref: \"#/components/responses/BadRequest\"\n        '500':\n          $ref: \"#/components/responses/ServerError\"\n\n  \"/v0.1/auctions/activities/search\":\n    post:\n      tags:\n        - auction-activity-controller\n      operationId: getAuctionActivities\n      description: Returns event history with auction\n      parameters:\n        - name: continuation\n          description: \"Continuation token from the previous response\"\n          in: query\n          required: false\n          schema:\n            type: string\n        - name: size\n          in: query\n          description: \"The number of items to return\"\n          required: false\n          schema:\n            type: integer\n            format: int32\n        - name: sort\n          description: \"Sorting by data update time\"\n          in: query\n          required: false\n          schema:\n            $ref: \"#/components/schemas/ActivitySort\"\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/AuctionActivityFilter\"\n        required: true\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/AuctionActivities\"\n        '400':\n          $ref: \"#/components/responses/BadRequest\"\n        '500':\n          $ref: \"#/components/responses/ServerError\"\n\n  \"/v0.1/auctions/activities/sync\":\n    get:\n      tags:\n        - auction-activity-controller\n      operationId: getAuctionActivitiesSync\n      description: Returns event history with auction\n      parameters:\n        - name: continuation\n          description: \"Continuation token from the previous response\"\n          in: query\n          required: false\n          schema:\n            type: string\n        - name: size\n          in: query\n          description: \"The number of items to return\"\n          required: false\n          schema:\n            type: integer\n            format: int32\n        - name: sort\n          description: \"Sorting by data update time\"\n          in: query\n          required: false\n          schema:\n            $ref: \"#/components/schemas/SyncSort\"\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/AuctionActivities\"\n        '400':\n          $ref: \"#/components/responses/BadRequest\"\n        '500':\n          $ref: \"#/components/responses/ServerError\"\n\n  \"/v0.1/auctions/activities/byId\":\n    post:\n      tags:\n        - auction-activity-controller\n      operationId: getAuctionActivitiesById\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/ActivitiesByIdRequest\"\n        required: true\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/AuctionActivities\"\n        '400':\n          $ref: \"#/components/responses/BadRequest\"\n        '500':\n          $ref: \"#/components/responses/ServerError\"\n\n  ###################### Aggregations ######################\n\n  \"/v0.1/aggregations/nftSellByMaker\":\n    get:\n      tags:\n        - order-aggregation-controller\n      operationId: aggregateNftSellByMaker\n      description: Aggregate NFT sell order by maker\n      parameters:\n        - name: startDate\n          description: \"Lower time border of data (unix format)\"\n          in: query\n          required: true\n          schema:\n            type: integer\n            format: int64\n        - name: endDate\n          description: \"Upper time border of data (unix format)\"\n          in: query\n          required: true\n          schema:\n            type: integer\n            format: int64\n        - name: size\n          description: \"The number of items to return\"\n          in: query\n          required: false\n          schema:\n            type: integer\n            format: int64\n        - name: source\n          description: \"The platform where the order was created\"\n          in: query\n          required: false\n          schema:\n            $ref: \"#/components/schemas/Platform\"\n      responses:\n        '200':\n          $ref: \"#/components/responses/AggregationDataResponse\"\n        '400':\n          $ref: \"#/components/responses/BadRequest\"\n        '500':\n          $ref: \"#/components/responses/ServerError\"\n\n  \"/v0.1/aggregations/nftPurchaseByTaker\":\n    get:\n      tags:\n        - order-aggregation-controller\n      operationId: aggregateNftPurchaseByTaker\n      description: Aggregate NFT purchase by taker\n      parameters:\n        - name: startDate\n          description: \"Lower time border of data (unix format)\"\n          in: query\n          required: true\n          schema:\n            type: integer\n            format: int64\n        - name: endDate\n          description: \"Upper time border of data (unix format)\"\n          in: query\n          required: true\n          schema:\n            type: integer\n            format: int64\n        - name: size\n          description: \"The number of items to return\"\n          in: query\n          required: false\n          schema:\n            type: integer\n            format: int64\n        - name: source\n          description: \"The platform where the order was created\"\n          in: query\n          required: false\n          schema:\n            $ref: \"#/components/schemas/Platform\"\n      responses:\n        '200':\n          $ref: \"#/components/responses/AggregationDataResponse\"\n        '400':\n          $ref: \"#/components/responses/BadRequest\"\n        '500':\n          $ref: \"#/components/responses/ServerError\"\n\n  \"/v0.1/aggregations/nftPurchaseByCollection\":\n    get:\n      tags:\n        - order-aggregation-controller\n      operationId: aggregateNftPurchaseByCollection\n      description: Aggregate NFT purchase by collection\n      parameters:\n        - name: startDate\n          description: \"Lower time border of data (unix format)\"\n          in: query\n          required: true\n          schema:\n            type: integer\n            format: int64\n        - name: endDate\n          description: \"Upper time border of data (unix format)\"\n          in: query\n          required: true\n          schema:\n            type: integer\n            format: int64\n        - name: size\n          description: \"The number of items to return\"\n          in: query\n          required: false\n          schema:\n            type: integer\n            format: int64\n        - name: source\n          description: \"The platform where the order was created\"\n          in: query\n          required: false\n          schema:\n            $ref: \"#/components/schemas/Platform\"\n      responses:\n        '200':\n          $ref: \"#/components/responses/AggregationDataResponse\"\n        '400':\n          $ref: \"#/components/responses/BadRequest\"\n        '500':\n          $ref: \"#/components/responses/ServerError\"\n\n  \"/v0.1/aggregations/aggregateNftCollectionStats/{collection}\":\n    get:\n      tags:\n        - order-aggregation-controller\n      operationId: aggregateNftCollectionStats\n      deprecated: true\n      parameters:\n        - name: collection\n          in: path\n          description: \"Address of the NFT collection\"\n          required: true\n          schema:\n            $ref: \"#/components/schemas/Address\"\n          example: 0x60f80121c31a0d46b5279700f9df786054aa5ee5\n        - name: currency\n          in: query\n          description: \"Currency address\"\n          required: false\n          schema:\n            type: string\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/OrderCollectionStats\"\n        '404':\n          $ref: \"#/components/responses/EntityNotFound\"\n        '400':\n          $ref: \"#/components/responses/BadRequest\"\n        '500':\n          $ref: \"#/components/responses/ServerError\"\n\n  ####################### Auctions-Search API ########################\n\n  \"/v0.1/auctions/{hash}\":\n    get:\n      tags:\n        - auction-controller\n      description: Returns the auction by hash\n      operationId: getAuctionByHash\n      parameters:\n        - name: hash\n          description: \"Hash of the auction\"\n          in: path\n          required: true\n          schema:\n            type: string\n          example: 0x38a2616dcff042fa157b2d5389171fe6f1d92c9dc3c85b7465a7e60948bf3ba0\n      x-codeSamples:\n        - lang: 'cURL'\n          source: |\n            curl --request GET \\\n            --url 'https://ethereum-api.rarible.org/v0.1/auction/auctions/0x38a2616dcff042fa157b2d5389171fe6f1d92c9dc3c85b7465a7e60948bf3ba0'\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Auction\"\n        '404':\n          $ref: \"#/components/responses/EntityNotFound\"\n        '400':\n          $ref: \"#/components/responses/BadRequest\"\n        '500':\n          $ref: \"#/components/responses/ServerError\"\n\n  \"/v0.1/auctions/{hash}/bids\":\n    get:\n      tags:\n        - auction-controller\n      description: Returns auction bids by the auction hash\n      operationId: getAuctionBidsByHash\n      parameters:\n        - name: hash\n          description: \"Hash of auction\"\n          in: path\n          required: true\n          schema:\n            type: string\n          example: 0x38a2616dcff042fa157b2d5389171fe6f1d92c9dc3c85b7465a7e60948bf3ba0\n        - name: continuation\n          description: \"Continuation token from the previous response\"\n          in: query\n          required: false\n          schema:\n            type: string\n        - name: size\n          description: \"The number of auction bids to return\"\n          in: query\n          required: false\n          schema:\n            minimum: 1\n            type: integer\n            format: int32\n      x-codeSamples:\n        - lang: 'cURL'\n          source: |\n            curl --request GET \\\n            --url 'https://ethereum-api.rarible.org/v0.1/auction/auctions/0x38a2616dcff042fa157b2d5389171fe6f1d92c9dc3c85b7465a7e60948bf3ba0/bids'\n      responses:\n        '200':\n          $ref: \"#/components/responses/AuctionBidPage\"\n        '404':\n          $ref: \"#/components/responses/EntityNotFound\"\n        '400':\n          $ref: \"#/components/responses/BadRequest\"\n        '500':\n          $ref: \"#/components/responses/ServerError\"\n\n  \"/v0.1/auctions/all\":\n    get:\n      deprecated: true\n      tags:\n        - auction-controller\n      description: Returns all auctions by specified parameters\n      operationId: getAuctionsAll\n      parameters:\n        - name: sort\n          description: \"Sorting by target criteria\"\n          in: query\n          required: false\n          schema:\n            \"$ref\": \"#/components/schemas/AuctionSort\"\n        - name: status\n          description: \"The auction status\"\n          in: query\n          required: false\n          schema:\n            type: array\n            items:\n              $ref: \"#/components/schemas/AuctionStatus\"\n        - name: origin\n          description: \"Address of the consumer to receive the commission for auction\"\n          in: query\n          required: false\n          schema:\n            $ref: \"#/components/schemas/Address\"\n        - name: platform\n          description: \"The platform where the auction was created\"\n          in: query\n          required: false\n          schema:\n            $ref: \"#/components/schemas/Platform\"\n        - name: continuation\n          description: \"Continuation token from the previous response\"\n          in: query\n          required: false\n          schema:\n            type: string\n        - name: size\n          description: \"The number of auctions to return\"\n          in: query\n          required: false\n          schema:\n            minimum: 1\n            type: integer\n            format: int32\n      responses:\n        '200':\n          $ref: \"#/components/responses/AuctionPage\"\n        '400':\n          $ref: \"#/components/responses/BadRequest\"\n        '500':\n          $ref: \"#/components/responses/ServerError\"\n\n  \"/v0.1/auctions/byIds\":\n    post:\n      tags:\n        - auction-controller\n      description: Returns all auctions by auction hash\n      operationId: getAuctionsByIds\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/AuctionIds\"\n        required: true\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: \"#/components/schemas/Auction\"\n        '400':\n          $ref: \"#/components/responses/BadRequest\"\n        '500':\n          $ref: \"#/components/responses/ServerError\"\n\n  \"/v0.1/auctions/bySeller\":\n    get:\n      tags:\n        - auction-controller\n      operationId: getAuctionsBySeller\n      description: Returns all auctions by seller\n      parameters:\n        - name: seller\n          description: \"The seller of the auction\"\n          in: query\n          required: true\n          schema:\n            $ref: \"#/components/schemas/Address\"\n        - name: status\n          description: \"The auction status\"\n          in: query\n          required: false\n          schema:\n            type: array\n            items:\n              $ref: \"#/components/schemas/AuctionStatus\"\n        - name: origin\n          description: \"Address of the consumer to receive the commission for auction\"\n          in: query\n          required: false\n          schema:\n            $ref: \"#/components/schemas/Address\"\n        - name: platform\n          description: \"The platform where the auction was created\"\n          in: query\n          required: false\n          schema:\n            $ref: \"#/components/schemas/Platform\"\n        - name: continuation\n          description: \"Continuation token from the previous response\"\n          in: query\n          required: false\n          schema:\n            type: string\n        - name: size\n          description: \"The number of items to return\"\n          in: query\n          required: false\n          schema:\n            minimum: 1\n            type: integer\n            format: int32\n      responses:\n        '200':\n          $ref: \"#/components/responses/AuctionPage\"\n        '400':\n          $ref: \"#/components/responses/BadRequest\"\n        '500':\n          $ref: \"#/components/responses/ServerError\"\n\n  \"/v0.1/auctions/byItem\":\n    get:\n      tags:\n        - auction-controller\n      operationId: getAuctionsByItem\n      description: Returns all auctions by item\n      parameters:\n        - name: contract\n          description: \"Address of the contract\"\n          in: query\n          required: true\n          schema:\n            $ref: \"#/components/schemas/Address\"\n        - name: tokenId\n          description: \"Token identifier\"\n          in: query\n          required: true\n          schema:\n            $ref: \"#/components/schemas/BigInteger\"\n        - name: seller\n          description: \"The maker of the order\"\n          in: query\n          required: false\n          schema:\n            $ref: \"#/components/schemas/Address\"\n        - name: sort\n          description: \"Sorting by target criteria\"\n          in: query\n          required: false\n          schema:\n            \"$ref\": \"#/components/schemas/AuctionSort\"\n        - name: origin\n          description: \"Address of the consumer to receive the commission for order\"\n          in: query\n          required: false\n          schema:\n            $ref: \"#/components/schemas/Address\"\n        - name: status\n          description: \"The auction status\"\n          in: query\n          required: false\n          schema:\n            type: array\n            items:\n              $ref: \"#/components/schemas/AuctionStatus\"\n        - name: currencyId\n          in: query\n          required: false\n          schema:\n            $ref: \"#/components/schemas/Address\"\n        - name: platform\n          description: \"The platform where the order was created\"\n          in: query\n          required: false\n          schema:\n            $ref: \"#/components/schemas/Platform\"\n        - name: continuation\n          description: \"Continuation token from the previous response\"\n          in: query\n          required: false\n          schema:\n            type: string\n        - name: size\n          description: \"The number of items to return\"\n          in: query\n          required: false\n          schema:\n            minimum: 1\n            type: integer\n            format: int32\n      responses:\n        '200':\n          $ref: \"#/components/responses/AuctionPage\"\n        '400':\n          $ref: \"#/components/responses/BadRequest\"\n        '500':\n          $ref: \"#/components/responses/ServerError\"\n\n  \"/v0.1/auctions/byCollection\":\n    get:\n      tags:\n        - auction-controller\n      operationId: getAuctionsByCollection\n      description: Returns all auctions by collection\n      parameters:\n        - name: contract\n          description: \"Address of the NFT collection\"\n          in: query\n          required: true\n          schema:\n            $ref: \"#/components/schemas/Address\"\n        - name: seller\n          description: \"The maker of the order\"\n          in: query\n          required: false\n          schema:\n            $ref: \"#/components/schemas/Address\"\n        - name: origin\n          description: \"Address of the consumer to receive the commission for auction\"\n          in: query\n          required: false\n          schema:\n            $ref: \"#/components/schemas/Address\"\n        - name: status\n          description: \"The order status\"\n          in: query\n          required: false\n          schema:\n            type: array\n            items:\n              $ref: \"#/components/schemas/AuctionStatus\"\n        - name: platform\n          description: \"The platform where the auction was created\"\n          in: query\n          required: false\n          schema:\n            $ref: \"#/components/schemas/Platform\"\n        - name: continuation\n          description: \"Continuation token from the previous response\"\n          in: query\n          required: false\n          schema:\n            type: string\n        - name: size\n          description: \"The number of items to return\"\n          in: query\n          required: false\n          schema:\n            minimum: 1\n            type: integer\n            format: int32\n      responses:\n        '200':\n          $ref: \"#/components/responses/AuctionPage\"\n        '400':\n          $ref: \"#/components/responses/BadRequest\"\n        '500':\n          $ref: \"#/components/responses/ServerError\"\n\ncomponents:\n  responses:\n    OrderPage:\n      description: OK\n      content:\n        application/json:\n          schema:\n            $ref: \"#/components/schemas/OrdersPagination\"\n    OrderCurrenciesPage:\n      description: OK\n      content:\n        application/json:\n          schema:\n            $ref: \"#/components/schemas/OrderCurrencies\"\n    OrderBidsPage:\n      description: OK\n      content:\n        application/json:\n          schema:\n            $ref: \"#/components/schemas/OrderBidsPagination\"\n    AggregationDataResponse:\n      description: OK\n      content:\n        application/json:\n          schema:\n            type: array\n            items:\n              $ref: \"#/components/schemas/AggregationData\"\n    AuctionPage:\n      description: OK\n      content:\n        application/json:\n          schema:\n            $ref: \"#/components/schemas/AuctionsPagination\"\n    AuctionBidPage:\n      description: OK\n      content:\n        application/json:\n          schema:\n            $ref: \"#/components/schemas/AuctionBidsPagination\"\n    OrderUpdateApiError:\n      description: Bad Request\n      content:\n        application/json:\n          schema:\n            $ref: \"#/components/schemas/EthereumOrderUpdateApiError\"\n    OrderDataApiError:\n      description: Bad Request\n      content:\n        application/json:\n          schema:\n            $ref: \"#/components/schemas/EthereumOrderDataApiError\"\n",
			"canonicalURL": "/github.com/rarible/ethereum-openapi@3aadb540fd6d66bf48de73b3f01378615d54ec88/-/blob/protocol-api-order/openapi.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/rarible/ethereum-openapi/blob/3aadb540fd6d66bf48de73b3f01378615d54ec88/protocol-api-order/openapi.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "parse: parse spec: parse components: responses: \"OrderPage\": content: application/json: schema: parse schema: at protocol-api-order/openapi.yaml:2189:19: $ref: resolve \"#/components/schemas/OrdersPagination\": resolve: can't find value for \"components/schemas/OrdersPagination\""
}