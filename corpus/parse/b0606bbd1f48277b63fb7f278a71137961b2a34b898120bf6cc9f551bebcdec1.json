{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/stackql/stackql-provider-registry"
		},
		"file": {
			"name": "account_membership.yaml",
			"size": 0,
			"path": "providers/src/netlify/v0.2.0/services/account_membership.yaml",
			"byteSize": 8068,
			"content": "paths:\n  /accounts:\n    get:\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: '#/components/schemas/accountMembership'\n                type: array\n          description: OK\n        default:\n          $ref: '#/components/responses/error'\n      tags:\n        - accountMembership\n      operationId: listAccountsForUser\n    post:\n      responses:\n        '201':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/accountMembership'\n          description: Created\n        default:\n          $ref: '#/components/responses/error'\n      tags:\n        - accountMembership\n      operationId: createAccount\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/accountSetup'\n        required: true\n  /accounts/{account_id}:\n    delete:\n      responses:\n        '204':\n          description: Not Content\n        default:\n          $ref: '#/components/responses/error'\n      tags:\n        - accountMembership\n      operationId: cancelAccount\n      parameters: \u0026ref_0\n        - in: path\n          name: account_id\n          required: true\n          schema:\n            type: string\n    get:\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: '#/components/schemas/accountMembership'\n                type: array\n          description: OK\n        default:\n          $ref: '#/components/responses/error'\n      tags:\n        - accountMembership\n      operationId: getAccount\n      parameters: *ref_0\n    put:\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/accountMembership'\n          description: OK\n        default:\n          $ref: '#/components/responses/error'\n      tags:\n        - accountMembership\n      operationId: updateAccount\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/accountUpdateSetup'\n      parameters: *ref_0\ncomponents:\n  schemas:\n    accountMembership:\n      properties:\n        billing_details:\n          type: string\n        billing_email:\n          type: string\n        billing_name:\n          type: string\n        billing_period:\n          type: string\n        capabilities:\n          properties:\n            collaborators:\n              $ref: '#/components/schemas/accountUsageCapability'\n            sites:\n              $ref: '#/components/schemas/accountUsageCapability'\n          type: object\n        created_at:\n          format: dateTime\n          type: string\n        id:\n          type: string\n        name:\n          type: string\n        owner_ids:\n          items:\n            type: string\n          type: array\n        payment_method_id:\n          type: string\n        roles_allowed:\n          items:\n            type: string\n          type: array\n        slug:\n          type: string\n        type:\n          type: string\n        type_id:\n          type: string\n        type_name:\n          type: string\n        updated_at:\n          format: dateTime\n          type: string\n      type: object\n    accountUsageCapability:\n      properties:\n        included:\n          type: integer\n        used:\n          type: integer\n      type: object\n    error:\n      properties:\n        code:\n          format: int64\n          type: integer\n        message:\n          nullable: false\n          type: string\n      required:\n        - message\n      type: object\n    accountSetup:\n      properties:\n        extra_seats_block:\n          type: integer\n        name:\n          type: string\n        payment_method_id:\n          type: string\n        period:\n          enum:\n            - monthly\n            - yearly\n          type: string\n        type_id:\n          type: string\n      required:\n        - name\n        - type_id\n      type: object\n    accountUpdateSetup:\n      properties:\n        billing_details:\n          type: string\n        billing_email:\n          type: string\n        billing_name:\n          type: string\n        extra_seats_block:\n          type: integer\n        name:\n          type: string\n        slug:\n          type: string\n        type_id:\n          type: string\n      type: object\n  parameters: {}\n  responses:\n    error:\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/error'\n      description: error\n  securitySchemes: {}\n  callbacks: {}\n  examples: {}\n  requestBodies: {}\n  headers: {}\n  links: {}\n  x-stackQL-resources:\n    accounts:\n      id: netlify.account_membership.accounts\n      name: accounts\n      title: Accounts\n      methods:\n        listAccountsForUser:\n          operation:\n            $ref: '#/paths/~1accounts/get'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '200'\n        createAccount:\n          operation:\n            $ref: '#/paths/~1accounts/post'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '201'\n        cancelAccount:\n          operation:\n            $ref: '#/paths/~1accounts~1{account_id}/delete'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '204'\n        getAccount:\n          operation:\n            $ref: '#/paths/~1accounts~1{account_id}/get'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '200'\n        updateAccount:\n          operation:\n            $ref: '#/paths/~1accounts~1{account_id}/put'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '200'\n      sqlVerbs:\n        select:\n          - $ref: '#/components/x-stackQL-resources/accounts/methods/getAccount'\n          - $ref: '#/components/x-stackQL-resources/accounts/methods/listAccountsForUser'\n        insert:\n          - $ref: '#/components/x-stackQL-resources/accounts/methods/createAccount'\n        update: []\n        delete: []\nopenapi: 3.0.0\nservers:\n  - url: https://api.netlify.com/api/v1\nsecurity:\n  - netlifyAuth: []\ntags:\n  - name: ticket\n    x-displayName: Ticket\n  - name: accessToken\n    x-displayName: Access token\n  - name: user\n    x-displayName: User\n  - name: accountMembership\n    x-displayName: Accounts\n  - name: member\n    x-displayName: Member\n  - name: accountType\n    x-displayName: Access type\n  - name: paymentMethod\n    x-displayName: Payment method\n  - name: auditLog\n    x-displayName: Audit log\n  - name: site\n    x-displayName: Site\n  - name: file\n    x-displayName: File\n  - name: metadata\n    x-displayName: Metadata\n  - name: snippet\n    x-displayName: Snippet\n  - name: dnsZone\n    x-displayName: DNS zone\n  - name: sniCertificate\n    x-displayName: SNI certificate\n  - name: deploy\n    x-displayName: Deploy\n  - name: deployedBranch\n    x-displayName: Deployed branch\n  - name: deployKey\n    x-displayName: Deploy key\n  - name: build\n    x-displayName: Build\n  - name: buildLogMsg\n    x-displayName: Build log message\n  - name: hook\n    x-displayName: Hook\n  - name: hookType\n    x-displayName: Hook type\n  - name: buildHook\n    x-displayName: Build hook\n  - name: service\n    x-displayName: Service\n  - name: serviceInstance\n    x-displayName: Service instance\n  - name: function\n    x-displayName: Function\n  - name: form\n    x-displayName: Form\n  - name: submission\n    x-displayName: Form submission\n  - name: splitTest\n    x-displayName: Split test\n  - name: asset\n    x-displayName: Asset\n  - name: assetPublicSignature\n    x-displayName: Asset public signature\nexternalDocs:\n  description: Online documentation\n  url: https://www.netlify.com/docs/api/\ninfo:\n  description: accountMembership\n  termsOfService: https://www.netlify.com/legal/terms-of-use/\n  title: Netlify's API documentation - account_membership\n  version: 2.9.0\n  x-logo:\n    altText: Netlify\n    href: https://www.netlify.com/docs/\n    url: netlify-logo.png\n",
			"canonicalURL": "/github.com/stackql/stackql-provider-registry@7482bc9b2425a6491d640bf921a1dc9cf508f339/-/blob/providers/src/netlify/v0.2.0/services/account_membership.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/stackql/stackql-provider-registry/blob/7482bc9b2425a6491d640bf921a1dc9cf508f339/providers/src/netlify/v0.2.0/services/account_membership.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "parse: parse spec: parse operations: paths: /accounts: get: operation \"listAccountsForUser\": security: unknown security schema \"netlifyAuth\""
}